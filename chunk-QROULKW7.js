import{a as du}from"./chunk-AWGZ4MKE.js";import{a as su}from"./chunk-RPE34JJH.js";import{a as cu,b as Up,c as uu,d as Uc,e as Qr,f as cs,g as Tr,h as Br,i as Ua}from"./chunk-XL3JMYAF.js";import{a as ss,b as Ra,c as Ia,d as La}from"./chunk-BJOT2GNF.js";import{a as zo}from"./chunk-KGZRCUCM.js";import{a as Vo,b as qo}from"./chunk-54PGMWHQ.js";import{a as Zt}from"./chunk-MGQZ7FBO.js";import{a as lu,b as is,c as os}from"./chunk-KLTEE2KH.js";import{a as Ho,b as Go,c as Jo,d as Zo,e as Qo,f as es,g as ns,h as ts,i as rs,j as as}from"./chunk-7PP2EWTU.js";import{a as Da,b as Y0,c as $a,d as z0,e as V0,f as q0,g as Na,h as Ma}from"./chunk-OY3G2654.js";import{a as Fo,b as jo,c as au,d as Yo,e as iu,f as ou}from"./chunk-AGV2HC3T.js";import{a as Ut}from"./chunk-B5VHFBDM.js";import{a as Ro,c as eu,d as nu,e as tu,f as Io,g as ru,h as Lo}from"./chunk-SMND6G6L.js";import{a as On,b as G0,c as Cr,d as Tn,e as Bn,f as kn,g as Qt}from"./chunk-NB6WWNUD.js";import{Aa as Q0,Ba as st,Ca as ct,Da as Nn,Ea as wr,Fa as Gn,Ha as lt,Ma as Mn,Na as Jn,Oa as Or,Pa as Wa,Q as kt,Qa as Uo,Sa as Zn,V as ot,W as vn,X as Jt,oa as J0,pa as Vn,ra as It,ta as An,ua as qn,va as Z0,wa as Lt,xa as Er,ya as Hn,za as Sa}from"./chunk-ILDZJ3FZ.js";import{c as H0,d as Mc,g as dr,i as Rc,j as Ic,l as Ai,m as Lc}from"./chunk-3CIC7QKD.js";import{h as F0,l as ka,p as j0}from"./chunk-7KPORB6Q.js";import{Aa as xn,Cb as S0,Cc as Ar,D as C0,Db as W0,Ea as Dc,Eb as Ke,Fb as xr,Gb as $o,H as wo,Hb as N0,Kb as je,L as E0,Lb as vt,Mb as nn,Nb as tn,Ob as j,Pb as G,Qb as Ne,Rb as Yn,Sb as zn,Ub as Ye,Xb as ge,Xc as I0,Yc as L0,Z as Oo,Zb as ue,Zc as Nc,_ as Aa,_c as No,a as Sn,ac as So,ad as Ba,b as Gt,bb as k0,bc as Wc,c as Bc,cb as D0,cd as Mo,d as xa,da as w0,db as $c,e as Ki,ea as kc,eb as ae,ec as Ca,f as Xn,fa as To,fb as Be,fc as Ea,gc as wa,id as U0,ja as Bo,jb as $0,jc as nt,kc as ie,lc as dn,mc as sn,nc as M0,o as x0,oc as bt,pa as O0,pc as yt,qa as we,qc as Xt,ra as Oe,rb as qe,rc as R0,sa as ko,sb as Do,sc as Wo,t as A0,ta as T0,tb as Sc,tc as xi,va as B0,vc as Oa,wc as Ta,x as Eo,xb as We}from"./chunk-V2ERZPMC.js";var Pu=xa((Ci,jc)=>{"use strict";(function(t,e){typeof Ci=="object"&&typeof jc=="object"?jc.exports=e():typeof define=="function"&&define.amd?define([],e):typeof Ci=="object"?Ci.QRCodeStyling=e():t.QRCodeStyling=e()})(Ci,()=>(()=>{var t={873:(a,i)=>{var o,s,l=function(){var c=function(b,x){var K=b,X=m[x],v=null,A=0,w=null,O=[],N={},S=function(W,L){v=function(z){for(var ne=new Array(z),H=0;H<z;H+=1){ne[H]=new Array(z);for(var _e=0;_e<z;_e+=1)ne[H][_e]=null}return ne}(A=4*K+17),I(0,0),I(A-7,0),I(0,A-7),Y(),q(),Q(W,L),K>=7&&ee(W),w==null&&(w=J(K,X,O)),U(w,L)},I=function(W,L){for(var z=-1;z<=7;z+=1)if(!(W+z<=-1||A<=W+z))for(var ne=-1;ne<=7;ne+=1)L+ne<=-1||A<=L+ne||(v[W+z][L+ne]=0<=z&&z<=6&&(ne==0||ne==6)||0<=ne&&ne<=6&&(z==0||z==6)||2<=z&&z<=4&&2<=ne&&ne<=4)},q=function(){for(var W=8;W<A-8;W+=1)v[W][6]==null&&(v[W][6]=W%2==0);for(var L=8;L<A-8;L+=1)v[6][L]==null&&(v[6][L]=L%2==0)},Y=function(){for(var W=_.getPatternPosition(K),L=0;L<W.length;L+=1)for(var z=0;z<W.length;z+=1){var ne=W[L],H=W[z];if(v[ne][H]==null)for(var _e=-2;_e<=2;_e+=1)for(var Ae=-2;Ae<=2;Ae+=1)v[ne+_e][H+Ae]=_e==-2||_e==2||Ae==-2||Ae==2||_e==0&&Ae==0}},ee=function(W){for(var L=_.getBCHTypeNumber(K),z=0;z<18;z+=1){var ne=!W&&(L>>z&1)==1;v[Math.floor(z/3)][z%3+A-8-3]=ne}for(z=0;z<18;z+=1)ne=!W&&(L>>z&1)==1,v[z%3+A-8-3][Math.floor(z/3)]=ne},Q=function(W,L){for(var z=X<<3|L,ne=_.getBCHTypeInfo(z),H=0;H<15;H+=1){var _e=!W&&(ne>>H&1)==1;H<6?v[H][8]=_e:H<8?v[H+1][8]=_e:v[A-15+H][8]=_e}for(H=0;H<15;H+=1)_e=!W&&(ne>>H&1)==1,H<8?v[8][A-H-1]=_e:H<9?v[8][15-H-1+1]=_e:v[8][15-H-1]=_e;v[A-8][8]=!W},U=function(W,L){for(var z=-1,ne=A-1,H=7,_e=0,Ae=_.getMaskFunction(L),he=A-1;he>0;he-=2)for(he==6&&(he-=1);;){for(var le=0;le<2;le+=1)if(v[ne][he-le]==null){var de=!1;_e<W.length&&(de=(W[_e]>>>H&1)==1),Ae(ne,he-le)&&(de=!de),v[ne][he-le]=de,(H-=1)==-1&&(_e+=1,H=7)}if((ne+=z)<0||A<=ne){ne-=z,z=-z;break}}},J=function(W,L,z){for(var ne=y.getRSBlocks(W,L),H=C(),_e=0;_e<z.length;_e+=1){var Ae=z[_e];H.put(Ae.getMode(),4),H.put(Ae.getLength(),_.getLengthInBits(Ae.getMode(),W)),Ae.write(H)}var he=0;for(_e=0;_e<ne.length;_e+=1)he+=ne[_e].dataCount;if(H.getLengthInBits()>8*he)throw"code length overflow. ("+H.getLengthInBits()+">"+8*he+")";for(H.getLengthInBits()+4<=8*he&&H.put(0,4);H.getLengthInBits()%8!=0;)H.putBit(!1);for(;!(H.getLengthInBits()>=8*he||(H.put(236,8),H.getLengthInBits()>=8*he));)H.put(17,8);return function(le,de){for(var Pe=0,Ce=0,Xe=0,ve=new Array(de.length),xe=new Array(de.length),ye=0;ye<de.length;ye+=1){var fe=de[ye].dataCount,R=de[ye].totalCount-fe;Ce=Math.max(Ce,fe),Xe=Math.max(Xe,R),ve[ye]=new Array(fe);for(var te=0;te<ve[ye].length;te+=1)ve[ye][te]=255&le.getBuffer()[te+Pe];Pe+=fe;var ce=_.getErrorCorrectPolynomial(R),V=P(ve[ye],ce.getLength()-1).mod(ce);for(xe[ye]=new Array(ce.getLength()-1),te=0;te<xe[ye].length;te+=1){var Z=te+V.getLength()-xe[ye].length;xe[ye][te]=Z>=0?V.getAt(Z):0}}var oe=0;for(te=0;te<de.length;te+=1)oe+=de[te].totalCount;var re=new Array(oe),se=0;for(te=0;te<Ce;te+=1)for(ye=0;ye<de.length;ye+=1)te<ve[ye].length&&(re[se]=ve[ye][te],se+=1);for(te=0;te<Xe;te+=1)for(ye=0;ye<de.length;ye+=1)te<xe[ye].length&&(re[se]=xe[ye][te],se+=1);return re}(H,ne)};N.addData=function(W,L){var z=null;switch(L=L||"Byte"){case"Numeric":z=E(W);break;case"Alphanumeric":z=T(W);break;case"Byte":z=B(W);break;case"Kanji":z=D(W);break;default:throw"mode:"+L}O.push(z),w=null},N.isDark=function(W,L){if(W<0||A<=W||L<0||A<=L)throw W+","+L;return v[W][L]},N.getModuleCount=function(){return A},N.make=function(){if(K<1){for(var W=1;W<40;W++){for(var L=y.getRSBlocks(W,X),z=C(),ne=0;ne<O.length;ne++){var H=O[ne];z.put(H.getMode(),4),z.put(H.getLength(),_.getLengthInBits(H.getMode(),W)),H.write(z)}var _e=0;for(ne=0;ne<L.length;ne++)_e+=L[ne].dataCount;if(z.getLengthInBits()<=8*_e)break}K=W}S(!1,function(){for(var Ae=0,he=0,le=0;le<8;le+=1){S(!0,le);var de=_.getLostPoint(N);(le==0||Ae>de)&&(Ae=de,he=le)}return he}())},N.createTableTag=function(W,L){W=W||2;var z="";z+='<table style="',z+=" border-width: 0px; border-style: none;",z+=" border-collapse: collapse;",z+=" padding: 0px; margin: "+(L=L===void 0?4*W:L)+"px;",z+='">',z+="<tbody>";for(var ne=0;ne<N.getModuleCount();ne+=1){z+="<tr>";for(var H=0;H<N.getModuleCount();H+=1)z+='<td style="',z+=" border-width: 0px; border-style: none;",z+=" border-collapse: collapse;",z+=" padding: 0px; margin: 0px;",z+=" width: "+W+"px;",z+=" height: "+W+"px;",z+=" background-color: ",z+=N.isDark(ne,H)?"#000000":"#ffffff",z+=";",z+='"/>';z+="</tr>"}return(z+="</tbody>")+"</table>"},N.createSvgTag=function(W,L,z,ne){var H={};typeof arguments[0]=="object"&&(W=(H=arguments[0]).cellSize,L=H.margin,z=H.alt,ne=H.title),W=W||2,L=L===void 0?4*W:L,(z=typeof z=="string"?{text:z}:z||{}).text=z.text||null,z.id=z.text?z.id||"qrcode-description":null,(ne=typeof ne=="string"?{text:ne}:ne||{}).text=ne.text||null,ne.id=ne.text?ne.id||"qrcode-title":null;var _e,Ae,he,le,de=N.getModuleCount()*W+2*L,Pe="";for(le="l"+W+",0 0,"+W+" -"+W+",0 0,-"+W+"z ",Pe+='<svg version="1.1" xmlns="http://www.w3.org/2000/svg"',Pe+=H.scalable?"":' width="'+de+'px" height="'+de+'px"',Pe+=' viewBox="0 0 '+de+" "+de+'" ',Pe+=' preserveAspectRatio="xMinYMin meet"',Pe+=ne.text||z.text?' role="img" aria-labelledby="'+F([ne.id,z.id].join(" ").trim())+'"':"",Pe+=">",Pe+=ne.text?'<title id="'+F(ne.id)+'">'+F(ne.text)+"</title>":"",Pe+=z.text?'<description id="'+F(z.id)+'">'+F(z.text)+"</description>":"",Pe+='<rect width="100%" height="100%" fill="white" cx="0" cy="0"/>',Pe+='<path d="',Ae=0;Ae<N.getModuleCount();Ae+=1)for(he=Ae*W+L,_e=0;_e<N.getModuleCount();_e+=1)N.isDark(Ae,_e)&&(Pe+="M"+(_e*W+L)+","+he+le);return(Pe+='" stroke="transparent" fill="black"/>')+"</svg>"},N.createDataURL=function(W,L){W=W||2,L=L===void 0?4*W:L;var z=N.getModuleCount()*W+2*L,ne=L,H=z-L;return M(z,z,function(_e,Ae){if(ne<=_e&&_e<H&&ne<=Ae&&Ae<H){var he=Math.floor((_e-ne)/W),le=Math.floor((Ae-ne)/W);return N.isDark(le,he)?0:1}return 1})},N.createImgTag=function(W,L,z){W=W||2,L=L===void 0?4*W:L;var ne=N.getModuleCount()*W+2*L,H="";return H+="<img",H+=' src="',H+=N.createDataURL(W,L),H+='"',H+=' width="',H+=ne,H+='"',H+=' height="',H+=ne,H+='"',z&&(H+=' alt="',H+=F(z),H+='"'),H+"/>"};var F=function(W){for(var L="",z=0;z<W.length;z+=1){var ne=W.charAt(z);switch(ne){case"<":L+="&lt;";break;case">":L+="&gt;";break;case"&":L+="&amp;";break;case'"':L+="&quot;";break;default:L+=ne}}return L};return N.createASCII=function(W,L){if((W=W||1)<2)return function(ve){ve=ve===void 0?2:ve;var xe,ye,fe,R,te,ce=1*N.getModuleCount()+2*ve,V=ve,Z=ce-ve,oe={"\u2588\u2588":"\u2588","\u2588 ":"\u2580"," \u2588":"\u2584","  ":" "},re={"\u2588\u2588":"\u2580","\u2588 ":"\u2580"," \u2588":" ","  ":" "},se="";for(xe=0;xe<ce;xe+=2){for(fe=Math.floor((xe-V)/1),R=Math.floor((xe+1-V)/1),ye=0;ye<ce;ye+=1)te="\u2588",V<=ye&&ye<Z&&V<=xe&&xe<Z&&N.isDark(fe,Math.floor((ye-V)/1))&&(te=" "),V<=ye&&ye<Z&&V<=xe+1&&xe+1<Z&&N.isDark(R,Math.floor((ye-V)/1))?te+=" ":te+="\u2588",se+=ve<1&&xe+1>=Z?re[te]:oe[te];se+=`
`}return ce%2&&ve>0?se.substring(0,se.length-ce-1)+Array(ce+1).join("\u2580"):se.substring(0,se.length-1)}(L);W-=1,L=L===void 0?2*W:L;var z,ne,H,_e,Ae=N.getModuleCount()*W+2*L,he=L,le=Ae-L,de=Array(W+1).join("\u2588\u2588"),Pe=Array(W+1).join("  "),Ce="",Xe="";for(z=0;z<Ae;z+=1){for(H=Math.floor((z-he)/W),Xe="",ne=0;ne<Ae;ne+=1)_e=1,he<=ne&&ne<le&&he<=z&&z<le&&N.isDark(H,Math.floor((ne-he)/W))&&(_e=0),Xe+=_e?de:Pe;for(H=0;H<W;H+=1)Ce+=Xe+`
`}return Ce.substring(0,Ce.length-1)},N.renderTo2dContext=function(W,L){L=L||2;for(var z=N.getModuleCount(),ne=0;ne<z;ne++)for(var H=0;H<z;H++)W.fillStyle=N.isDark(ne,H)?"black":"white",W.fillRect(ne*L,H*L,L,L)},N};c.stringToBytes=(c.stringToBytesFuncs={default:function(b){for(var x=[],K=0;K<b.length;K+=1){var X=b.charCodeAt(K);x.push(255&X)}return x}}).default,c.createStringToBytes=function(b,x){var K=function(){for(var v=$(b),A=function(){var q=v.read();if(q==-1)throw"eof";return q},w=0,O={};;){var N=v.read();if(N==-1)break;var S=A(),I=A()<<8|A();O[String.fromCharCode(N<<8|S)]=I,w+=1}if(w!=x)throw w+" != "+x;return O}(),X=63;return function(v){for(var A=[],w=0;w<v.length;w+=1){var O=v.charCodeAt(w);if(O<128)A.push(O);else{var N=K[v.charAt(w)];typeof N=="number"?(255&N)==N?A.push(N):(A.push(N>>>8),A.push(255&N)):A.push(X)}}return A}};var u,d,f,h,p,m={L:1,M:0,Q:3,H:2},_=(u=[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],d=1335,f=7973,p=function(b){for(var x=0;b!=0;)x+=1,b>>>=1;return x},(h={}).getBCHTypeInfo=function(b){for(var x=b<<10;p(x)-p(d)>=0;)x^=d<<p(x)-p(d);return 21522^(b<<10|x)},h.getBCHTypeNumber=function(b){for(var x=b<<12;p(x)-p(f)>=0;)x^=f<<p(x)-p(f);return b<<12|x},h.getPatternPosition=function(b){return u[b-1]},h.getMaskFunction=function(b){switch(b){case 0:return function(x,K){return(x+K)%2==0};case 1:return function(x,K){return x%2==0};case 2:return function(x,K){return K%3==0};case 3:return function(x,K){return(x+K)%3==0};case 4:return function(x,K){return(Math.floor(x/2)+Math.floor(K/3))%2==0};case 5:return function(x,K){return x*K%2+x*K%3==0};case 6:return function(x,K){return(x*K%2+x*K%3)%2==0};case 7:return function(x,K){return(x*K%3+(x+K)%2)%2==0};default:throw"bad maskPattern:"+b}},h.getErrorCorrectPolynomial=function(b){for(var x=P([1],0),K=0;K<b;K+=1)x=x.multiply(P([1,g.gexp(K)],0));return x},h.getLengthInBits=function(b,x){if(1<=x&&x<10)switch(b){case 1:return 10;case 2:return 9;case 4:case 8:return 8;default:throw"mode:"+b}else if(x<27)switch(b){case 1:return 12;case 2:return 11;case 4:return 16;case 8:return 10;default:throw"mode:"+b}else{if(!(x<41))throw"type:"+x;switch(b){case 1:return 14;case 2:return 13;case 4:return 16;case 8:return 12;default:throw"mode:"+b}}},h.getLostPoint=function(b){for(var x=b.getModuleCount(),K=0,X=0;X<x;X+=1)for(var v=0;v<x;v+=1){for(var A=0,w=b.isDark(X,v),O=-1;O<=1;O+=1)if(!(X+O<0||x<=X+O))for(var N=-1;N<=1;N+=1)v+N<0||x<=v+N||O==0&&N==0||w==b.isDark(X+O,v+N)&&(A+=1);A>5&&(K+=3+A-5)}for(X=0;X<x-1;X+=1)for(v=0;v<x-1;v+=1){var S=0;b.isDark(X,v)&&(S+=1),b.isDark(X+1,v)&&(S+=1),b.isDark(X,v+1)&&(S+=1),b.isDark(X+1,v+1)&&(S+=1),S!=0&&S!=4||(K+=3)}for(X=0;X<x;X+=1)for(v=0;v<x-6;v+=1)b.isDark(X,v)&&!b.isDark(X,v+1)&&b.isDark(X,v+2)&&b.isDark(X,v+3)&&b.isDark(X,v+4)&&!b.isDark(X,v+5)&&b.isDark(X,v+6)&&(K+=40);for(v=0;v<x;v+=1)for(X=0;X<x-6;X+=1)b.isDark(X,v)&&!b.isDark(X+1,v)&&b.isDark(X+2,v)&&b.isDark(X+3,v)&&b.isDark(X+4,v)&&!b.isDark(X+5,v)&&b.isDark(X+6,v)&&(K+=40);var I=0;for(v=0;v<x;v+=1)for(X=0;X<x;X+=1)b.isDark(X,v)&&(I+=1);return K+Math.abs(100*I/x/x-50)/5*10},h),g=function(){for(var b=new Array(256),x=new Array(256),K=0;K<8;K+=1)b[K]=1<<K;for(K=8;K<256;K+=1)b[K]=b[K-4]^b[K-5]^b[K-6]^b[K-8];for(K=0;K<255;K+=1)x[b[K]]=K;return{glog:function(X){if(X<1)throw"glog("+X+")";return x[X]},gexp:function(X){for(;X<0;)X+=255;for(;X>=256;)X-=255;return b[X]}}}();function P(b,x){if(b.length===void 0)throw b.length+"/"+x;var K=function(){for(var v=0;v<b.length&&b[v]==0;)v+=1;for(var A=new Array(b.length-v+x),w=0;w<b.length-v;w+=1)A[w]=b[w+v];return A}(),X={getAt:function(v){return K[v]},getLength:function(){return K.length},multiply:function(v){for(var A=new Array(X.getLength()+v.getLength()-1),w=0;w<X.getLength();w+=1)for(var O=0;O<v.getLength();O+=1)A[w+O]^=g.gexp(g.glog(X.getAt(w))+g.glog(v.getAt(O)));return P(A,0)},mod:function(v){if(X.getLength()-v.getLength()<0)return X;for(var A=g.glog(X.getAt(0))-g.glog(v.getAt(0)),w=new Array(X.getLength()),O=0;O<X.getLength();O+=1)w[O]=X.getAt(O);for(O=0;O<v.getLength();O+=1)w[O]^=g.gexp(g.glog(v.getAt(O))+A);return P(w,0).mod(v)}};return X}var y=function(){var b=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12,7,37,13],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]],x=function(X,v){var A={};return A.totalCount=X,A.dataCount=v,A},K={getRSBlocks:function(X,v){var A=function(ee,Q){switch(Q){case m.L:return b[4*(ee-1)+0];case m.M:return b[4*(ee-1)+1];case m.Q:return b[4*(ee-1)+2];case m.H:return b[4*(ee-1)+3];default:return}}(X,v);if(A===void 0)throw"bad rs block @ typeNumber:"+X+"/errorCorrectionLevel:"+v;for(var w=A.length/3,O=[],N=0;N<w;N+=1)for(var S=A[3*N+0],I=A[3*N+1],q=A[3*N+2],Y=0;Y<S;Y+=1)O.push(x(I,q));return O}};return K}(),C=function(){var b=[],x=0,K={getBuffer:function(){return b},getAt:function(X){var v=Math.floor(X/8);return(b[v]>>>7-X%8&1)==1},put:function(X,v){for(var A=0;A<v;A+=1)K.putBit((X>>>v-A-1&1)==1)},getLengthInBits:function(){return x},putBit:function(X){var v=Math.floor(x/8);b.length<=v&&b.push(0),X&&(b[v]|=128>>>x%8),x+=1}};return K},E=function(b){var x=b,K={getMode:function(){return 1},getLength:function(A){return x.length},write:function(A){for(var w=x,O=0;O+2<w.length;)A.put(X(w.substring(O,O+3)),10),O+=3;O<w.length&&(w.length-O==1?A.put(X(w.substring(O,O+1)),4):w.length-O==2&&A.put(X(w.substring(O,O+2)),7))}},X=function(A){for(var w=0,O=0;O<A.length;O+=1)w=10*w+v(A.charAt(O));return w},v=function(A){if("0"<=A&&A<="9")return A.charCodeAt(0)-48;throw"illegal char :"+A};return K},T=function(b){var x=b,K={getMode:function(){return 2},getLength:function(v){return x.length},write:function(v){for(var A=x,w=0;w+1<A.length;)v.put(45*X(A.charAt(w))+X(A.charAt(w+1)),11),w+=2;w<A.length&&v.put(X(A.charAt(w)),6)}},X=function(v){if("0"<=v&&v<="9")return v.charCodeAt(0)-48;if("A"<=v&&v<="Z")return v.charCodeAt(0)-65+10;switch(v){case" ":return 36;case"$":return 37;case"%":return 38;case"*":return 39;case"+":return 40;case"-":return 41;case".":return 42;case"/":return 43;case":":return 44;default:throw"illegal char :"+v}};return K},B=function(b){var x=c.stringToBytes(b);return{getMode:function(){return 4},getLength:function(K){return x.length},write:function(K){for(var X=0;X<x.length;X+=1)K.put(x[X],8)}}},D=function(b){var x=c.stringToBytesFuncs.SJIS;if(!x)throw"sjis not supported.";(function(){var v=x("\u53CB");if(v.length!=2||(v[0]<<8|v[1])!=38726)throw"sjis not supported."})();var K=x(b),X={getMode:function(){return 8},getLength:function(v){return~~(K.length/2)},write:function(v){for(var A=K,w=0;w+1<A.length;){var O=(255&A[w])<<8|255&A[w+1];if(33088<=O&&O<=40956)O-=33088;else{if(!(57408<=O&&O<=60351))throw"illegal char at "+(w+1)+"/"+O;O-=49472}O=192*(O>>>8&255)+(255&O),v.put(O,13),w+=2}if(w<A.length)throw"illegal char at "+(w+1)}};return X},k=function(){var b=[],x={writeByte:function(K){b.push(255&K)},writeShort:function(K){x.writeByte(K),x.writeByte(K>>>8)},writeBytes:function(K,X,v){X=X||0,v=v||K.length;for(var A=0;A<v;A+=1)x.writeByte(K[A+X])},writeString:function(K){for(var X=0;X<K.length;X+=1)x.writeByte(K.charCodeAt(X))},toByteArray:function(){return b},toString:function(){var K="";K+="[";for(var X=0;X<b.length;X+=1)X>0&&(K+=","),K+=b[X];return K+"]"}};return x},$=function(b){var x=b,K=0,X=0,v=0,A={read:function(){for(;v<8;){if(K>=x.length){if(v==0)return-1;throw"unexpected end of file./"+v}var O=x.charAt(K);if(K+=1,O=="=")return v=0,-1;O.match(/^\s$/)||(X=X<<6|w(O.charCodeAt(0)),v+=6)}var N=X>>>v-8&255;return v-=8,N}},w=function(O){if(65<=O&&O<=90)return O-65;if(97<=O&&O<=122)return O-97+26;if(48<=O&&O<=57)return O-48+52;if(O==43)return 62;if(O==47)return 63;throw"c:"+O};return A},M=function(b,x,K){for(var X=function(I,q){var Y=I,ee=q,Q=new Array(I*q),U={setPixel:function(W,L,z){Q[L*Y+W]=z},write:function(W){W.writeString("GIF87a"),W.writeShort(Y),W.writeShort(ee),W.writeByte(128),W.writeByte(0),W.writeByte(0),W.writeByte(0),W.writeByte(0),W.writeByte(0),W.writeByte(255),W.writeByte(255),W.writeByte(255),W.writeString(","),W.writeShort(0),W.writeShort(0),W.writeShort(Y),W.writeShort(ee),W.writeByte(0);var L=J(2);W.writeByte(2);for(var z=0;L.length-z>255;)W.writeByte(255),W.writeBytes(L,z,255),z+=255;W.writeByte(L.length-z),W.writeBytes(L,z,L.length-z),W.writeByte(0),W.writeString(";")}},J=function(W){for(var L=1<<W,z=1+(1<<W),ne=W+1,H=F(),_e=0;_e<L;_e+=1)H.add(String.fromCharCode(_e));H.add(String.fromCharCode(L)),H.add(String.fromCharCode(z));var Ae,he,le,de=k(),Pe=(Ae=de,he=0,le=0,{write:function(xe,ye){if(xe>>>ye)throw"length over";for(;he+ye>=8;)Ae.writeByte(255&(xe<<he|le)),ye-=8-he,xe>>>=8-he,le=0,he=0;le|=xe<<he,he+=ye},flush:function(){he>0&&Ae.writeByte(le)}});Pe.write(L,ne);var Ce=0,Xe=String.fromCharCode(Q[Ce]);for(Ce+=1;Ce<Q.length;){var ve=String.fromCharCode(Q[Ce]);Ce+=1,H.contains(Xe+ve)?Xe+=ve:(Pe.write(H.indexOf(Xe),ne),H.size()<4095&&(H.size()==1<<ne&&(ne+=1),H.add(Xe+ve)),Xe=ve)}return Pe.write(H.indexOf(Xe),ne),Pe.write(z,ne),Pe.flush(),de.toByteArray()},F=function(){var W={},L=0,z={add:function(ne){if(z.contains(ne))throw"dup key:"+ne;W[ne]=L,L+=1},size:function(){return L},indexOf:function(ne){return W[ne]},contains:function(ne){return W[ne]!==void 0}};return z};return U}(b,x),v=0;v<x;v+=1)for(var A=0;A<b;A+=1)X.setPixel(A,v,K(A,v));var w=k();X.write(w);for(var O=function(){var I=0,q=0,Y=0,ee="",Q={},U=function(F){ee+=String.fromCharCode(J(63&F))},J=function(F){if(!(F<0)){if(F<26)return 65+F;if(F<52)return F-26+97;if(F<62)return F-52+48;if(F==62)return 43;if(F==63)return 47}throw"n:"+F};return Q.writeByte=function(F){for(I=I<<8|255&F,q+=8,Y+=1;q>=6;)U(I>>>q-6),q-=6},Q.flush=function(){if(q>0&&(U(I<<6-q),I=0,q=0),Y%3!=0)for(var F=3-Y%3,W=0;W<F;W+=1)ee+="="},Q.toString=function(){return ee},Q}(),N=w.toByteArray(),S=0;S<N.length;S+=1)O.writeByte(N[S]);return O.flush(),"data:image/gif;base64,"+O};return c}();l.stringToBytesFuncs["UTF-8"]=function(c){return function(u){for(var d=[],f=0;f<u.length;f++){var h=u.charCodeAt(f);h<128?d.push(h):h<2048?d.push(192|h>>6,128|63&h):h<55296||h>=57344?d.push(224|h>>12,128|h>>6&63,128|63&h):(f++,h=65536+((1023&h)<<10|1023&u.charCodeAt(f)),d.push(240|h>>18,128|h>>12&63,128|h>>6&63,128|63&h))}return d}(c)},(s=typeof(o=function(){return l})=="function"?o.apply(i,[]):o)===void 0||(a.exports=s)}},e={};function n(a){var i=e[a];if(i!==void 0)return i.exports;var o=e[a]={exports:{}};return t[a](o,o.exports,n),o.exports}n.n=a=>{var i=a&&a.__esModule?()=>a.default:()=>a;return n.d(i,{a:i}),i},n.d=(a,i)=>{for(var o in i)n.o(i,o)&&!n.o(a,o)&&Object.defineProperty(a,o,{enumerable:!0,get:i[o]})},n.o=(a,i)=>Object.prototype.hasOwnProperty.call(a,i);var r={};return(()=>{"use strict";n.d(r,{default:()=>x});let a=K=>!!K&&typeof K=="object"&&!Array.isArray(K);function i(K,...X){if(!X.length)return K;let v=X.shift();return v!==void 0&&a(K)&&a(v)?(K=Object.assign({},K),Object.keys(v).forEach(A=>{let w=K[A],O=v[A];Array.isArray(w)&&Array.isArray(O)?K[A]=O:a(w)&&a(O)?K[A]=i(Object.assign({},w),O):K[A]=O}),i(K,...X)):K}function o(K,X){let v=document.createElement("a");v.download=X,v.href=K,document.body.appendChild(v),v.click(),document.body.removeChild(v)}let s={L:.07,M:.15,Q:.25,H:.3};class l{constructor({svg:X,type:v,window:A}){this._svg=X,this._type=v,this._window=A}draw(X,v,A,w){let O;switch(this._type){case"dots":O=this._drawDot;break;case"classy":O=this._drawClassy;break;case"classy-rounded":O=this._drawClassyRounded;break;case"rounded":O=this._drawRounded;break;case"extra-rounded":O=this._drawExtraRounded;break;default:O=this._drawSquare}O.call(this,{x:X,y:v,size:A,getNeighbor:w})}_rotateFigure({x:X,y:v,size:A,rotation:w=0,draw:O}){var N;let S=X+A/2,I=v+A/2;O(),(N=this._element)===null||N===void 0||N.setAttribute("transform",`rotate(${180*w/Math.PI},${S},${I})`)}_basicDot(X){let{size:v,x:A,y:w}=X;this._rotateFigure(Object.assign(Object.assign({},X),{draw:()=>{this._element=this._window.document.createElementNS("http://www.w3.org/2000/svg","circle"),this._element.setAttribute("cx",String(A+v/2)),this._element.setAttribute("cy",String(w+v/2)),this._element.setAttribute("r",String(v/2))}}))}_basicSquare(X){let{size:v,x:A,y:w}=X;this._rotateFigure(Object.assign(Object.assign({},X),{draw:()=>{this._element=this._window.document.createElementNS("http://www.w3.org/2000/svg","rect"),this._element.setAttribute("x",String(A)),this._element.setAttribute("y",String(w)),this._element.setAttribute("width",String(v)),this._element.setAttribute("height",String(v))}}))}_basicSideRounded(X){let{size:v,x:A,y:w}=X;this._rotateFigure(Object.assign(Object.assign({},X),{draw:()=>{this._element=this._window.document.createElementNS("http://www.w3.org/2000/svg","path"),this._element.setAttribute("d",`M ${A} ${w}v ${v}h `+v/2+`a ${v/2} ${v/2}, 0, 0, 0, 0 ${-v}`)}}))}_basicCornerRounded(X){let{size:v,x:A,y:w}=X;this._rotateFigure(Object.assign(Object.assign({},X),{draw:()=>{this._element=this._window.document.createElementNS("http://www.w3.org/2000/svg","path"),this._element.setAttribute("d",`M ${A} ${w}v ${v}h ${v}v `+-v/2+`a ${v/2} ${v/2}, 0, 0, 0, ${-v/2} ${-v/2}`)}}))}_basicCornerExtraRounded(X){let{size:v,x:A,y:w}=X;this._rotateFigure(Object.assign(Object.assign({},X),{draw:()=>{this._element=this._window.document.createElementNS("http://www.w3.org/2000/svg","path"),this._element.setAttribute("d",`M ${A} ${w}v ${v}h ${v}a ${v} ${v}, 0, 0, 0, ${-v} ${-v}`)}}))}_basicCornersRounded(X){let{size:v,x:A,y:w}=X;this._rotateFigure(Object.assign(Object.assign({},X),{draw:()=>{this._element=this._window.document.createElementNS("http://www.w3.org/2000/svg","path"),this._element.setAttribute("d",`M ${A} ${w}v `+v/2+`a ${v/2} ${v/2}, 0, 0, 0, ${v/2} ${v/2}h `+v/2+"v "+-v/2+`a ${v/2} ${v/2}, 0, 0, 0, ${-v/2} ${-v/2}`)}}))}_drawDot({x:X,y:v,size:A}){this._basicDot({x:X,y:v,size:A,rotation:0})}_drawSquare({x:X,y:v,size:A}){this._basicSquare({x:X,y:v,size:A,rotation:0})}_drawRounded({x:X,y:v,size:A,getNeighbor:w}){let O=w?+w(-1,0):0,N=w?+w(1,0):0,S=w?+w(0,-1):0,I=w?+w(0,1):0,q=O+N+S+I;if(q!==0)if(q>2||O&&N||S&&I)this._basicSquare({x:X,y:v,size:A,rotation:0});else{if(q===2){let Y=0;return O&&S?Y=Math.PI/2:S&&N?Y=Math.PI:N&&I&&(Y=-Math.PI/2),void this._basicCornerRounded({x:X,y:v,size:A,rotation:Y})}if(q===1){let Y=0;return S?Y=Math.PI/2:N?Y=Math.PI:I&&(Y=-Math.PI/2),void this._basicSideRounded({x:X,y:v,size:A,rotation:Y})}}else this._basicDot({x:X,y:v,size:A,rotation:0})}_drawExtraRounded({x:X,y:v,size:A,getNeighbor:w}){let O=w?+w(-1,0):0,N=w?+w(1,0):0,S=w?+w(0,-1):0,I=w?+w(0,1):0,q=O+N+S+I;if(q!==0)if(q>2||O&&N||S&&I)this._basicSquare({x:X,y:v,size:A,rotation:0});else{if(q===2){let Y=0;return O&&S?Y=Math.PI/2:S&&N?Y=Math.PI:N&&I&&(Y=-Math.PI/2),void this._basicCornerExtraRounded({x:X,y:v,size:A,rotation:Y})}if(q===1){let Y=0;return S?Y=Math.PI/2:N?Y=Math.PI:I&&(Y=-Math.PI/2),void this._basicSideRounded({x:X,y:v,size:A,rotation:Y})}}else this._basicDot({x:X,y:v,size:A,rotation:0})}_drawClassy({x:X,y:v,size:A,getNeighbor:w}){let O=w?+w(-1,0):0,N=w?+w(1,0):0,S=w?+w(0,-1):0,I=w?+w(0,1):0;O+N+S+I!==0?O||S?N||I?this._basicSquare({x:X,y:v,size:A,rotation:0}):this._basicCornerRounded({x:X,y:v,size:A,rotation:Math.PI/2}):this._basicCornerRounded({x:X,y:v,size:A,rotation:-Math.PI/2}):this._basicCornersRounded({x:X,y:v,size:A,rotation:Math.PI/2})}_drawClassyRounded({x:X,y:v,size:A,getNeighbor:w}){let O=w?+w(-1,0):0,N=w?+w(1,0):0,S=w?+w(0,-1):0,I=w?+w(0,1):0;O+N+S+I!==0?O||S?N||I?this._basicSquare({x:X,y:v,size:A,rotation:0}):this._basicCornerExtraRounded({x:X,y:v,size:A,rotation:Math.PI/2}):this._basicCornerExtraRounded({x:X,y:v,size:A,rotation:-Math.PI/2}):this._basicCornersRounded({x:X,y:v,size:A,rotation:Math.PI/2})}}let c={dot:"dot",square:"square",extraRounded:"extra-rounded"},u=Object.values(c);class d{constructor({svg:X,type:v,window:A}){this._svg=X,this._type=v,this._window=A}draw(X,v,A,w){let O;switch(this._type){case c.square:O=this._drawSquare;break;case c.extraRounded:O=this._drawExtraRounded;break;default:O=this._drawDot}O.call(this,{x:X,y:v,size:A,rotation:w})}_rotateFigure({x:X,y:v,size:A,rotation:w=0,draw:O}){var N;let S=X+A/2,I=v+A/2;O(),(N=this._element)===null||N===void 0||N.setAttribute("transform",`rotate(${180*w/Math.PI},${S},${I})`)}_basicDot(X){let{size:v,x:A,y:w}=X,O=v/7;this._rotateFigure(Object.assign(Object.assign({},X),{draw:()=>{this._element=this._window.document.createElementNS("http://www.w3.org/2000/svg","path"),this._element.setAttribute("clip-rule","evenodd"),this._element.setAttribute("d",`M ${A+v/2} ${w}a ${v/2} ${v/2} 0 1 0 0.1 0zm 0 ${O}a ${v/2-O} ${v/2-O} 0 1 1 -0.1 0Z`)}}))}_basicSquare(X){let{size:v,x:A,y:w}=X,O=v/7;this._rotateFigure(Object.assign(Object.assign({},X),{draw:()=>{this._element=this._window.document.createElementNS("http://www.w3.org/2000/svg","path"),this._element.setAttribute("clip-rule","evenodd"),this._element.setAttribute("d",`M ${A} ${w}v ${v}h ${v}v `+-v+`zM ${A+O} ${w+O}h `+(v-2*O)+"v "+(v-2*O)+"h "+(2*O-v)+"z")}}))}_basicExtraRounded(X){let{size:v,x:A,y:w}=X,O=v/7;this._rotateFigure(Object.assign(Object.assign({},X),{draw:()=>{this._element=this._window.document.createElementNS("http://www.w3.org/2000/svg","path"),this._element.setAttribute("clip-rule","evenodd"),this._element.setAttribute("d",`M ${A} ${w+2.5*O}v `+2*O+`a ${2.5*O} ${2.5*O}, 0, 0, 0, ${2.5*O} ${2.5*O}h `+2*O+`a ${2.5*O} ${2.5*O}, 0, 0, 0, ${2.5*O} ${2.5*-O}v `+-2*O+`a ${2.5*O} ${2.5*O}, 0, 0, 0, ${2.5*-O} ${2.5*-O}h `+-2*O+`a ${2.5*O} ${2.5*O}, 0, 0, 0, ${2.5*-O} ${2.5*O}M ${A+2.5*O} ${w+O}h `+2*O+`a ${1.5*O} ${1.5*O}, 0, 0, 1, ${1.5*O} ${1.5*O}v `+2*O+`a ${1.5*O} ${1.5*O}, 0, 0, 1, ${1.5*-O} ${1.5*O}h `+-2*O+`a ${1.5*O} ${1.5*O}, 0, 0, 1, ${1.5*-O} ${1.5*-O}v `+-2*O+`a ${1.5*O} ${1.5*O}, 0, 0, 1, ${1.5*O} ${1.5*-O}`)}}))}_drawDot({x:X,y:v,size:A,rotation:w}){this._basicDot({x:X,y:v,size:A,rotation:w})}_drawSquare({x:X,y:v,size:A,rotation:w}){this._basicSquare({x:X,y:v,size:A,rotation:w})}_drawExtraRounded({x:X,y:v,size:A,rotation:w}){this._basicExtraRounded({x:X,y:v,size:A,rotation:w})}}let f={dot:"dot",square:"square"},h=Object.values(f);class p{constructor({svg:X,type:v,window:A}){this._svg=X,this._type=v,this._window=A}draw(X,v,A,w){let O;O=this._type===f.square?this._drawSquare:this._drawDot,O.call(this,{x:X,y:v,size:A,rotation:w})}_rotateFigure({x:X,y:v,size:A,rotation:w=0,draw:O}){var N;let S=X+A/2,I=v+A/2;O(),(N=this._element)===null||N===void 0||N.setAttribute("transform",`rotate(${180*w/Math.PI},${S},${I})`)}_basicDot(X){let{size:v,x:A,y:w}=X;this._rotateFigure(Object.assign(Object.assign({},X),{draw:()=>{this._element=this._window.document.createElementNS("http://www.w3.org/2000/svg","circle"),this._element.setAttribute("cx",String(A+v/2)),this._element.setAttribute("cy",String(w+v/2)),this._element.setAttribute("r",String(v/2))}}))}_basicSquare(X){let{size:v,x:A,y:w}=X;this._rotateFigure(Object.assign(Object.assign({},X),{draw:()=>{this._element=this._window.document.createElementNS("http://www.w3.org/2000/svg","rect"),this._element.setAttribute("x",String(A)),this._element.setAttribute("y",String(w)),this._element.setAttribute("width",String(v)),this._element.setAttribute("height",String(v))}}))}_drawDot({x:X,y:v,size:A,rotation:w}){this._basicDot({x:X,y:v,size:A,rotation:w})}_drawSquare({x:X,y:v,size:A,rotation:w}){this._basicSquare({x:X,y:v,size:A,rotation:w})}}let m="circle",_=[[1,1,1,1,1,1,1],[1,0,0,0,0,0,1],[1,0,0,0,0,0,1],[1,0,0,0,0,0,1],[1,0,0,0,0,0,1],[1,0,0,0,0,0,1],[1,1,1,1,1,1,1]],g=[[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,1,1,1,0,0],[0,0,1,1,1,0,0],[0,0,1,1,1,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]],y=(()=>{class K{constructor(v,A){this._roundSize=w=>this._options.dotsOptions.roundSize?Math.floor(w):w,this._window=A,this._element=this._window.document.createElementNS("http://www.w3.org/2000/svg","svg"),this._element.setAttribute("width",String(v.width)),this._element.setAttribute("height",String(v.height)),this._element.setAttribute("xmlns:xlink","http://www.w3.org/1999/xlink"),v.dotsOptions.roundSize||this._element.setAttribute("shape-rendering","crispEdges"),this._element.setAttribute("viewBox",`0 0 ${v.width} ${v.height}`),this._defs=this._window.document.createElementNS("http://www.w3.org/2000/svg","defs"),this._element.appendChild(this._defs),this._imageUri=v.image,this._instanceId=K.instanceCount++,this._options=v}get width(){return this._options.width}get height(){return this._options.height}getElement(){return this._element}drawQR(v){return Xn(this,null,function*(){let A=v.getModuleCount(),w=Math.min(this._options.width,this._options.height)-2*this._options.margin,O=this._options.shape===m?w/Math.sqrt(2):w,N=this._roundSize(O/A),S={hideXDots:0,hideYDots:0,width:0,height:0};if(this._qr=v,this._options.image){if(yield this.loadImage(),!this._image)return;let{imageOptions:I,qrOptions:q}=this._options,Y=I.imageSize*s[q.errorCorrectionLevel],ee=Math.floor(Y*A*A);S=function({originalHeight:Q,originalWidth:U,maxHiddenDots:J,maxHiddenAxisDots:F,dotSize:W}){let L={x:0,y:0},z={x:0,y:0};if(Q<=0||U<=0||J<=0||W<=0)return{height:0,width:0,hideYDots:0,hideXDots:0};let ne=Q/U;return L.x=Math.floor(Math.sqrt(J/ne)),L.x<=0&&(L.x=1),F&&F<L.x&&(L.x=F),L.x%2==0&&L.x--,z.x=L.x*W,L.y=1+2*Math.ceil((L.x*ne-1)/2),z.y=Math.round(z.x*ne),(L.y*L.x>J||F&&F<L.y)&&(F&&F<L.y?(L.y=F,L.y%2==0&&L.x--):L.y-=2,z.y=L.y*W,L.x=1+2*Math.ceil((L.y/ne-1)/2),z.x=Math.round(z.y/ne)),{height:z.y,width:z.x,hideYDots:L.y,hideXDots:L.x}}({originalWidth:this._image.width,originalHeight:this._image.height,maxHiddenDots:ee,maxHiddenAxisDots:A-14,dotSize:N})}this.drawBackground(),this.drawDots((I,q)=>{var Y,ee,Q,U,J,F;return!(this._options.imageOptions.hideBackgroundDots&&I>=(A-S.hideYDots)/2&&I<(A+S.hideYDots)/2&&q>=(A-S.hideXDots)/2&&q<(A+S.hideXDots)/2||!((Y=_[I])===null||Y===void 0)&&Y[q]||!((ee=_[I-A+7])===null||ee===void 0)&&ee[q]||!((Q=_[I])===null||Q===void 0)&&Q[q-A+7]||!((U=g[I])===null||U===void 0)&&U[q]||!((J=g[I-A+7])===null||J===void 0)&&J[q]||!((F=g[I])===null||F===void 0)&&F[q-A+7])}),this.drawCorners(),this._options.image&&(yield this.drawImage({width:S.width,height:S.height,count:A,dotSize:N}))})}drawBackground(){var v,A,w;let O=this._element,N=this._options;if(O){let S=(v=N.backgroundOptions)===null||v===void 0?void 0:v.gradient,I=(A=N.backgroundOptions)===null||A===void 0?void 0:A.color,q=N.height,Y=N.width;if(S||I){let ee=this._window.document.createElementNS("http://www.w3.org/2000/svg","rect");this._backgroundClipPath=this._window.document.createElementNS("http://www.w3.org/2000/svg","clipPath"),this._backgroundClipPath.setAttribute("id",`clip-path-background-color-${this._instanceId}`),this._defs.appendChild(this._backgroundClipPath),!((w=N.backgroundOptions)===null||w===void 0)&&w.round&&(q=Y=Math.min(N.width,N.height),ee.setAttribute("rx",String(q/2*N.backgroundOptions.round))),ee.setAttribute("x",String(this._roundSize((N.width-Y)/2))),ee.setAttribute("y",String(this._roundSize((N.height-q)/2))),ee.setAttribute("width",String(Y)),ee.setAttribute("height",String(q)),this._backgroundClipPath.appendChild(ee),this._createColor({options:S,color:I,additionalRotation:0,x:0,y:0,height:N.height,width:N.width,name:`background-color-${this._instanceId}`})}}}drawDots(v){var A,w;if(!this._qr)throw"QR code is not defined";let O=this._options,N=this._qr.getModuleCount();if(N>O.width||N>O.height)throw"The canvas is too small.";let S=Math.min(O.width,O.height)-2*O.margin,I=O.shape===m?S/Math.sqrt(2):S,q=this._roundSize(I/N),Y=this._roundSize((O.width-N*q)/2),ee=this._roundSize((O.height-N*q)/2),Q=new l({svg:this._element,type:O.dotsOptions.type,window:this._window});this._dotsClipPath=this._window.document.createElementNS("http://www.w3.org/2000/svg","clipPath"),this._dotsClipPath.setAttribute("id",`clip-path-dot-color-${this._instanceId}`),this._defs.appendChild(this._dotsClipPath),this._createColor({options:(A=O.dotsOptions)===null||A===void 0?void 0:A.gradient,color:O.dotsOptions.color,additionalRotation:0,x:0,y:0,height:O.height,width:O.width,name:`dot-color-${this._instanceId}`});for(let U=0;U<N;U++)for(let J=0;J<N;J++)v&&!v(U,J)||!((w=this._qr)===null||w===void 0)&&w.isDark(U,J)&&(Q.draw(Y+J*q,ee+U*q,q,(F,W)=>!(J+F<0||U+W<0||J+F>=N||U+W>=N)&&!(v&&!v(U+W,J+F))&&!!this._qr&&this._qr.isDark(U+W,J+F)),Q._element&&this._dotsClipPath&&this._dotsClipPath.appendChild(Q._element));if(O.shape===m){let U=this._roundSize((S/q-N)/2),J=N+2*U,F=Y-U*q,W=ee-U*q,L=[],z=this._roundSize(J/2);for(let ne=0;ne<J;ne++){L[ne]=[];for(let H=0;H<J;H++)ne>=U-1&&ne<=J-U&&H>=U-1&&H<=J-U||Math.sqrt((ne-z)*(ne-z)+(H-z)*(H-z))>z?L[ne][H]=0:L[ne][H]=this._qr.isDark(H-2*U<0?H:H>=N?H-2*U:H-U,ne-2*U<0?ne:ne>=N?ne-2*U:ne-U)?1:0}for(let ne=0;ne<J;ne++)for(let H=0;H<J;H++)L[ne][H]&&(Q.draw(F+H*q,W+ne*q,q,(_e,Ae)=>{var he;return!!(!((he=L[ne+Ae])===null||he===void 0)&&he[H+_e])}),Q._element&&this._dotsClipPath&&this._dotsClipPath.appendChild(Q._element))}}drawCorners(){if(!this._qr)throw"QR code is not defined";let v=this._element,A=this._options;if(!v)throw"Element code is not defined";let w=this._qr.getModuleCount(),O=Math.min(A.width,A.height)-2*A.margin,N=A.shape===m?O/Math.sqrt(2):O,S=this._roundSize(N/w),I=7*S,q=3*S,Y=this._roundSize((A.width-w*S)/2),ee=this._roundSize((A.height-w*S)/2);[[0,0,0],[1,0,Math.PI/2],[0,1,-Math.PI/2]].forEach(([Q,U,J])=>{var F,W,L,z,ne,H,_e,Ae,he,le,de,Pe,Ce,Xe;let ve=Y+Q*S*(w-7),xe=ee+U*S*(w-7),ye=this._dotsClipPath,fe=this._dotsClipPath;if((!((F=A.cornersSquareOptions)===null||F===void 0)&&F.gradient||!((W=A.cornersSquareOptions)===null||W===void 0)&&W.color)&&(ye=this._window.document.createElementNS("http://www.w3.org/2000/svg","clipPath"),ye.setAttribute("id",`clip-path-corners-square-color-${Q}-${U}-${this._instanceId}`),this._defs.appendChild(ye),this._cornersSquareClipPath=this._cornersDotClipPath=fe=ye,this._createColor({options:(L=A.cornersSquareOptions)===null||L===void 0?void 0:L.gradient,color:(z=A.cornersSquareOptions)===null||z===void 0?void 0:z.color,additionalRotation:J,x:ve,y:xe,height:I,width:I,name:`corners-square-color-${Q}-${U}-${this._instanceId}`})),((ne=A.cornersSquareOptions)===null||ne===void 0?void 0:ne.type)&&u.includes(A.cornersSquareOptions.type)){let R=new d({svg:this._element,type:A.cornersSquareOptions.type,window:this._window});R.draw(ve,xe,I,J),R._element&&ye&&ye.appendChild(R._element)}else{let R=new l({svg:this._element,type:((H=A.cornersSquareOptions)===null||H===void 0?void 0:H.type)||A.dotsOptions.type,window:this._window});for(let te=0;te<_.length;te++)for(let ce=0;ce<_[te].length;ce++)!((_e=_[te])===null||_e===void 0)&&_e[ce]&&(R.draw(ve+ce*S,xe+te*S,S,(V,Z)=>{var oe;return!!(!((oe=_[te+Z])===null||oe===void 0)&&oe[ce+V])}),R._element&&ye&&ye.appendChild(R._element))}if((!((Ae=A.cornersDotOptions)===null||Ae===void 0)&&Ae.gradient||!((he=A.cornersDotOptions)===null||he===void 0)&&he.color)&&(fe=this._window.document.createElementNS("http://www.w3.org/2000/svg","clipPath"),fe.setAttribute("id",`clip-path-corners-dot-color-${Q}-${U}-${this._instanceId}`),this._defs.appendChild(fe),this._cornersDotClipPath=fe,this._createColor({options:(le=A.cornersDotOptions)===null||le===void 0?void 0:le.gradient,color:(de=A.cornersDotOptions)===null||de===void 0?void 0:de.color,additionalRotation:J,x:ve+2*S,y:xe+2*S,height:q,width:q,name:`corners-dot-color-${Q}-${U}-${this._instanceId}`})),((Pe=A.cornersDotOptions)===null||Pe===void 0?void 0:Pe.type)&&h.includes(A.cornersDotOptions.type)){let R=new p({svg:this._element,type:A.cornersDotOptions.type,window:this._window});R.draw(ve+2*S,xe+2*S,q,J),R._element&&fe&&fe.appendChild(R._element)}else{let R=new l({svg:this._element,type:((Ce=A.cornersDotOptions)===null||Ce===void 0?void 0:Ce.type)||A.dotsOptions.type,window:this._window});for(let te=0;te<g.length;te++)for(let ce=0;ce<g[te].length;ce++)!((Xe=g[te])===null||Xe===void 0)&&Xe[ce]&&(R.draw(ve+ce*S,xe+te*S,S,(V,Z)=>{var oe;return!!(!((oe=g[te+Z])===null||oe===void 0)&&oe[ce+V])}),R._element&&fe&&fe.appendChild(R._element))}})}loadImage(){return new Promise((v,A)=>{var w;let O=this._options;if(!O.image)return A("Image is not defined");if(!((w=O.nodeCanvas)===null||w===void 0)&&w.loadImage)O.nodeCanvas.loadImage(O.image).then(N=>{var S,I;if(this._image=N,this._options.imageOptions.saveAsBlob){let q=(S=O.nodeCanvas)===null||S===void 0?void 0:S.createCanvas(this._image.width,this._image.height);(I=q?.getContext("2d"))===null||I===void 0||I.drawImage(N,0,0),this._imageUri=q?.toDataURL()}v()}).catch(A);else{let N=new this._window.Image;typeof O.imageOptions.crossOrigin=="string"&&(N.crossOrigin=O.imageOptions.crossOrigin),this._image=N,N.onload=()=>Xn(this,null,function*(){this._options.imageOptions.saveAsBlob&&(this._imageUri=yield function(S,I){return Xn(this,null,function*(){return new Promise(q=>{let Y=new I.XMLHttpRequest;Y.onload=function(){let ee=new I.FileReader;ee.onloadend=function(){q(ee.result)},ee.readAsDataURL(Y.response)},Y.open("GET",S),Y.responseType="blob",Y.send()})})}(O.image||"",this._window)),v()}),N.src=O.image}})}drawImage(N){return Xn(this,arguments,function*({width:v,height:A,count:w,dotSize:O}){let S=this._options,I=this._roundSize((S.width-w*O)/2),q=this._roundSize((S.height-w*O)/2),Y=I+this._roundSize(S.imageOptions.margin+(w*O-v)/2),ee=q+this._roundSize(S.imageOptions.margin+(w*O-A)/2),Q=v-2*S.imageOptions.margin,U=A-2*S.imageOptions.margin,J=this._window.document.createElementNS("http://www.w3.org/2000/svg","image");J.setAttribute("href",this._imageUri||""),J.setAttribute("x",String(Y)),J.setAttribute("y",String(ee)),J.setAttribute("width",`${Q}px`),J.setAttribute("height",`${U}px`),this._element.appendChild(J)})}_createColor({options:v,color:A,additionalRotation:w,x:O,y:N,height:S,width:I,name:q}){let Y=I>S?I:S,ee=this._window.document.createElementNS("http://www.w3.org/2000/svg","rect");if(ee.setAttribute("x",String(O)),ee.setAttribute("y",String(N)),ee.setAttribute("height",String(S)),ee.setAttribute("width",String(I)),ee.setAttribute("clip-path",`url('#clip-path-${q}')`),v){let Q;if(v.type==="radial")Q=this._window.document.createElementNS("http://www.w3.org/2000/svg","radialGradient"),Q.setAttribute("id",q),Q.setAttribute("gradientUnits","userSpaceOnUse"),Q.setAttribute("fx",String(O+I/2)),Q.setAttribute("fy",String(N+S/2)),Q.setAttribute("cx",String(O+I/2)),Q.setAttribute("cy",String(N+S/2)),Q.setAttribute("r",String(Y/2));else{let U=((v.rotation||0)+w)%(2*Math.PI),J=(U+2*Math.PI)%(2*Math.PI),F=O+I/2,W=N+S/2,L=O+I/2,z=N+S/2;J>=0&&J<=.25*Math.PI||J>1.75*Math.PI&&J<=2*Math.PI?(F-=I/2,W-=S/2*Math.tan(U),L+=I/2,z+=S/2*Math.tan(U)):J>.25*Math.PI&&J<=.75*Math.PI?(W-=S/2,F-=I/2/Math.tan(U),z+=S/2,L+=I/2/Math.tan(U)):J>.75*Math.PI&&J<=1.25*Math.PI?(F+=I/2,W+=S/2*Math.tan(U),L-=I/2,z-=S/2*Math.tan(U)):J>1.25*Math.PI&&J<=1.75*Math.PI&&(W+=S/2,F+=I/2/Math.tan(U),z-=S/2,L-=I/2/Math.tan(U)),Q=this._window.document.createElementNS("http://www.w3.org/2000/svg","linearGradient"),Q.setAttribute("id",q),Q.setAttribute("gradientUnits","userSpaceOnUse"),Q.setAttribute("x1",String(Math.round(F))),Q.setAttribute("y1",String(Math.round(W))),Q.setAttribute("x2",String(Math.round(L))),Q.setAttribute("y2",String(Math.round(z)))}v.colorStops.forEach(({offset:U,color:J})=>{let F=this._window.document.createElementNS("http://www.w3.org/2000/svg","stop");F.setAttribute("offset",100*U+"%"),F.setAttribute("stop-color",J),Q.appendChild(F)}),ee.setAttribute("fill",`url('#${q}')`),this._defs.appendChild(Q)}else A&&ee.setAttribute("fill",A);this._element.appendChild(ee)}}return K.instanceCount=0,K})(),C="canvas",E={};for(let K=0;K<=40;K++)E[K]=K;let T={type:C,shape:"square",width:300,height:300,data:"",margin:0,qrOptions:{typeNumber:E[0],mode:void 0,errorCorrectionLevel:"Q"},imageOptions:{saveAsBlob:!0,hideBackgroundDots:!0,imageSize:.4,crossOrigin:void 0,margin:0},dotsOptions:{type:"square",color:"#000",roundSize:!0},backgroundOptions:{round:0,color:"#fff"}};function B(K){let X=Object.assign({},K);if(!X.colorStops||!X.colorStops.length)throw"Field 'colorStops' is required in gradient";return X.rotation?X.rotation=Number(X.rotation):X.rotation=0,X.colorStops=X.colorStops.map(v=>Object.assign(Object.assign({},v),{offset:Number(v.offset)})),X}function D(K){let X=Object.assign({},K);return X.width=Number(X.width),X.height=Number(X.height),X.margin=Number(X.margin),X.imageOptions=Object.assign(Object.assign({},X.imageOptions),{hideBackgroundDots:!!X.imageOptions.hideBackgroundDots,imageSize:Number(X.imageOptions.imageSize),margin:Number(X.imageOptions.margin)}),X.margin>Math.min(X.width,X.height)&&(X.margin=Math.min(X.width,X.height)),X.dotsOptions=Object.assign({},X.dotsOptions),X.dotsOptions.gradient&&(X.dotsOptions.gradient=B(X.dotsOptions.gradient)),X.cornersSquareOptions&&(X.cornersSquareOptions=Object.assign({},X.cornersSquareOptions),X.cornersSquareOptions.gradient&&(X.cornersSquareOptions.gradient=B(X.cornersSquareOptions.gradient))),X.cornersDotOptions&&(X.cornersDotOptions=Object.assign({},X.cornersDotOptions),X.cornersDotOptions.gradient&&(X.cornersDotOptions.gradient=B(X.cornersDotOptions.gradient))),X.backgroundOptions&&(X.backgroundOptions=Object.assign({},X.backgroundOptions),X.backgroundOptions.gradient&&(X.backgroundOptions.gradient=B(X.backgroundOptions.gradient))),X}var k=n(873),$=n.n(k);function M(K){if(!K)throw new Error("Extension must be defined");K[0]==="."&&(K=K.substring(1));let X={bmp:"image/bmp",gif:"image/gif",ico:"image/vnd.microsoft.icon",jpeg:"image/jpeg",jpg:"image/jpeg",png:"image/png",svg:"image/svg+xml",tif:"image/tiff",tiff:"image/tiff",webp:"image/webp",pdf:"application/pdf"}[K.toLowerCase()];if(!X)throw new Error(`Extension "${K}" is not supported`);return X}class b{constructor(X){X?.jsdom?this._window=new X.jsdom("",{resources:"usable"}).window:this._window=window,this._options=X?D(i(T,X)):T,this.update()}static _clearContainer(X){X&&(X.innerHTML="")}_setupSvg(){if(!this._qr)return;let X=new y(this._options,this._window);this._svg=X.getElement(),this._svgDrawingPromise=X.drawQR(this._qr).then(()=>{var v;this._svg&&((v=this._extension)===null||v===void 0||v.call(this,X.getElement(),this._options))})}_setupCanvas(){var X,v;this._qr&&(!((X=this._options.nodeCanvas)===null||X===void 0)&&X.createCanvas?(this._nodeCanvas=this._options.nodeCanvas.createCanvas(this._options.width,this._options.height),this._nodeCanvas.width=this._options.width,this._nodeCanvas.height=this._options.height):(this._domCanvas=document.createElement("canvas"),this._domCanvas.width=this._options.width,this._domCanvas.height=this._options.height),this._setupSvg(),this._canvasDrawingPromise=(v=this._svgDrawingPromise)===null||v===void 0?void 0:v.then(()=>{var A;if(!this._svg)return;let w=this._svg,O=new this._window.XMLSerializer().serializeToString(w),N=btoa(O),S=`data:${M("svg")};base64,${N}`;if(!((A=this._options.nodeCanvas)===null||A===void 0)&&A.loadImage)return this._options.nodeCanvas.loadImage(S).then(I=>{var q,Y;I.width=this._options.width,I.height=this._options.height,(Y=(q=this._nodeCanvas)===null||q===void 0?void 0:q.getContext("2d"))===null||Y===void 0||Y.drawImage(I,0,0)});{let I=new this._window.Image;return new Promise(q=>{I.onload=()=>{var Y,ee;(ee=(Y=this._domCanvas)===null||Y===void 0?void 0:Y.getContext("2d"))===null||ee===void 0||ee.drawImage(I,0,0),q()},I.src=S})}}))}_getElement(X="png"){return Xn(this,null,function*(){if(!this._qr)throw"QR code is empty";return X.toLowerCase()==="svg"?(this._svg&&this._svgDrawingPromise||this._setupSvg(),yield this._svgDrawingPromise,this._svg):((this._domCanvas||this._nodeCanvas)&&this._canvasDrawingPromise||this._setupCanvas(),yield this._canvasDrawingPromise,this._domCanvas||this._nodeCanvas)})}update(X){b._clearContainer(this._container),this._options=X?D(i(this._options,X)):this._options,this._options.data&&(this._qr=$()(this._options.qrOptions.typeNumber,this._options.qrOptions.errorCorrectionLevel),this._qr.addData(this._options.data,this._options.qrOptions.mode||function(v){switch(!0){case/^[0-9]*$/.test(v):return"Numeric";case/^[0-9A-Z $%*+\-./:]*$/.test(v):return"Alphanumeric";default:return"Byte"}}(this._options.data)),this._qr.make(),this._options.type===C?this._setupCanvas():this._setupSvg(),this.append(this._container))}append(X){if(X){if(typeof X.appendChild!="function")throw"Container should be a single DOM node";this._options.type===C?this._domCanvas&&X.appendChild(this._domCanvas):this._svg&&X.appendChild(this._svg),this._container=X}}applyExtension(X){if(!X)throw"Extension function should be defined.";this._extension=X,this.update()}deleteExtension(){this._extension=void 0,this.update()}getRawData(X="png"){return Xn(this,null,function*(){if(!this._qr)throw"QR code is empty";let v=yield this._getElement(X),A=M(X);if(!v)return null;if(X.toLowerCase()==="svg"){let w=`<?xml version="1.0" standalone="no"?>\r
${new this._window.XMLSerializer().serializeToString(v)}`;return typeof Blob>"u"||this._options.jsdom?Buffer.from(w):new Blob([w],{type:A})}return new Promise(w=>{let O=v;if("toBuffer"in O)if(A==="image/png")w(O.toBuffer(A));else if(A==="image/jpeg")w(O.toBuffer(A));else{if(A!=="application/pdf")throw Error("Unsupported extension");w(O.toBuffer(A))}else"toBlob"in O&&O.toBlob(w,A,1)})})}download(X){return Xn(this,null,function*(){if(!this._qr)throw"QR code is empty";if(typeof Blob>"u")throw"Cannot download in Node.js, call getRawData instead.";let v="png",A="qr";typeof X=="string"?(v=X,console.warn("Extension is deprecated as argument for 'download' method, please pass object { name: '...', extension: '...' } as argument")):typeof X=="object"&&X!==null&&(X.name&&(A=X.name),X.extension&&(v=X.extension));let w=yield this._getElement(v);if(w)if(v.toLowerCase()==="svg"){let O=new XMLSerializer().serializeToString(w);O=`<?xml version="1.0" standalone="no"?>\r
`+O,o(`data:${M(v)};charset=utf-8,${encodeURIComponent(O)}`,`${A}.svg`)}else o(w.toDataURL(M(v)),`${A}.${v}`)})}}let x=b})(),r.default})())});var Sh=xa((uo,Hl)=>{"use strict";(function(e,n){typeof uo=="object"&&typeof Hl=="object"?Hl.exports=n():typeof define=="function"&&define.amd?define([],n):typeof uo=="object"?uo.cytoscapePopper=n():e.cytoscapePopper=n()})(uo,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=t,n.c=e,n.i=function(r){return r},n.d=function(r,a,i){n.o(r,a)||Object.defineProperty(r,a,{configurable:!1,enumerable:!0,get:i})},n.n=function(r){var a=r&&r.__esModule?function(){return r.default}:function(){return r};return n.d(a,"a",a),a},n.o=function(r,a){return Object.prototype.hasOwnProperty.call(r,a)},n.p="",n(n.s=7)}([function(t,e,n){"use strict";var r=n(5),a=r.getBoundingBox;function i(o,s){var l={getBoundingClientRect:function(){return a(o,s)}};return l}t.exports={getRef:i}},function(t,e,n){"use strict";t.exports=Object.assign!=null?Object.assign.bind(Object):function(r){for(var a=arguments.length,i=Array(a>1?a-1:0),o=1;o<a;o++)i[o-1]=arguments[o];return i.forEach(function(s){s!=null&&Object.keys(s).forEach(function(l){return r[l]=s[l]})}),r}},function(t,e,n){"use strict";var r=n(0),a=r.getRef,i=n(6),o=i.getContent;function s(l,c){var u=a(l,c),d=o(l,c.content);return l.popperFactory(u,d,c.popper)}t.exports={getPopper:s}},function(t,e,n){"use strict";var r=n(1),a=n(2),i=a.getPopper,o=n(0),s=o.getRef;function l(p){return h(this),i(this[0],u(this[0],p))}function c(p){return h(this),s(this[0],u(this[0],p))}function u(p,m){var _=function(T){return T.isNode()?{w:T.renderedWidth(),h:T.renderedHeight()}:{w:3,h:3}},g=function(T){return T.isNode()?d(T,_):f(T)},P={},y=p.cy(),C={renderedDimensions:_,renderedPosition:g,popper:P,cy:y};return r({},C,m)}function d(p,m){var _=p.renderedPosition(),g=m(p),P=g.w/2,y=g.h/2;return{x:_.x-P,y:_.y-y}}function f(p){var m=p.midpoint(),_=p.cy().pan(),g=p.cy().zoom();return{x:m.x*g+_.x,y:m.y*g+_.y}}function h(p){p.length>1&&(console.warn("Popper.js Extension should only be used on one element."),console.warn("Ignoring all subsequent elements"))}t.exports={popper:l,popperRef:c}},function(t,e,n){"use strict";var r=n(1),a=n(2),i=a.getPopper,o=n(0),s=o.getRef;function l(d){return i(this,u(this,d))}function c(d){return s(this,u(this,d))}function u(d,f){var h={boundingBox:{top:0,left:0,right:0,bottom:0,w:3,h:3},renderedDimensions:function(){return{w:3,h:3}},renderedPosition:function(){return{x:0,y:0}},popper:{},cy:d};return r({},h,f)}t.exports={popper:l,popperRef:c}},function(t,e,n){"use strict";function r(a,i){var o=i.renderedPosition,s=i.cy,l=i.renderedDimensions,c=s.container().getBoundingClientRect(),u=l(a),d=o(a);return{top:d.y+c.top,left:d.x+c.left,right:d.x+u.w+c.left,bottom:d.y+u.h+c.top,width:u.w,height:u.h}}t.exports={getBoundingBox:r}},function(t,e,n){"use strict";function r(a,i){var o=null;if(typeof i=="function")o=i(a);else{if(i instanceof HTMLElement)return i;throw new Error("Can not create popper from 'target' with unknown type")}if(o===null)throw new Error("No 'target' specified to create popper");return o}t.exports={getContent:r}},function(t,e,n){"use strict";var r=n(4),a=n(3),i=function(s){if(typeof s!="function")throw new Error("Provide 'popperFactory' before registering the module");return function(c){c&&(c("core","popperFactory",s),c("collection","popperFactory",s),c("core","popper",r.popper),c("collection","popper",a.popper),c("core","popperRef",r.popperRef),c("collection","popperRef",a.popperRef))}};t.exports=i}])})});var h0=xa((yo,f0)=>{"use strict";(function(e,n){typeof yo=="object"&&typeof f0=="object"?f0.exports=n():typeof define=="function"&&define.amd?define([],n):typeof yo=="object"?yo.layoutBase=n():e.layoutBase=n()})(yo,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=t,n.c=e,n.i=function(r){return r},n.d=function(r,a,i){n.o(r,a)||Object.defineProperty(r,a,{configurable:!1,enumerable:!0,get:i})},n.n=function(r){var a=r&&r.__esModule?function(){return r.default}:function(){return r};return n.d(a,"a",a),a},n.o=function(r,a){return Object.prototype.hasOwnProperty.call(r,a)},n.p="",n(n.s=28)}([function(t,e,n){"use strict";function r(){}r.QUALITY=1,r.DEFAULT_CREATE_BENDS_AS_NEEDED=!1,r.DEFAULT_INCREMENTAL=!1,r.DEFAULT_ANIMATION_ON_LAYOUT=!0,r.DEFAULT_ANIMATION_DURING_LAYOUT=!1,r.DEFAULT_ANIMATION_PERIOD=50,r.DEFAULT_UNIFORM_LEAF_NODE_SIZES=!1,r.DEFAULT_GRAPH_MARGIN=15,r.NODE_DIMENSIONS_INCLUDE_LABELS=!1,r.SIMPLE_NODE_SIZE=40,r.SIMPLE_NODE_HALF_SIZE=r.SIMPLE_NODE_SIZE/2,r.EMPTY_COMPOUND_NODE_SIZE=40,r.MIN_EDGE_LENGTH=1,r.WORLD_BOUNDARY=1e6,r.INITIAL_WORLD_BOUNDARY=r.WORLD_BOUNDARY/1e3,r.WORLD_CENTER_X=1200,r.WORLD_CENTER_Y=900,t.exports=r},function(t,e,n){"use strict";var r=n(2),a=n(8),i=n(9);function o(l,c,u){r.call(this,u),this.isOverlapingSourceAndTarget=!1,this.vGraphObject=u,this.bendpoints=[],this.source=l,this.target=c}o.prototype=Object.create(r.prototype);for(var s in r)o[s]=r[s];o.prototype.getSource=function(){return this.source},o.prototype.getTarget=function(){return this.target},o.prototype.isInterGraph=function(){return this.isInterGraph},o.prototype.getLength=function(){return this.length},o.prototype.isOverlapingSourceAndTarget=function(){return this.isOverlapingSourceAndTarget},o.prototype.getBendpoints=function(){return this.bendpoints},o.prototype.getLca=function(){return this.lca},o.prototype.getSourceInLca=function(){return this.sourceInLca},o.prototype.getTargetInLca=function(){return this.targetInLca},o.prototype.getOtherEnd=function(l){if(this.source===l)return this.target;if(this.target===l)return this.source;throw"Node is not incident with this edge"},o.prototype.getOtherEndInGraph=function(l,c){for(var u=this.getOtherEnd(l),d=c.getGraphManager().getRoot();;){if(u.getOwner()==c)return u;if(u.getOwner()==d)break;u=u.getOwner().getParent()}return null},o.prototype.updateLength=function(){var l=new Array(4);this.isOverlapingSourceAndTarget=a.getIntersection(this.target.getRect(),this.source.getRect(),l),this.isOverlapingSourceAndTarget||(this.lengthX=l[0]-l[2],this.lengthY=l[1]-l[3],Math.abs(this.lengthX)<1&&(this.lengthX=i.sign(this.lengthX)),Math.abs(this.lengthY)<1&&(this.lengthY=i.sign(this.lengthY)),this.length=Math.sqrt(this.lengthX*this.lengthX+this.lengthY*this.lengthY))},o.prototype.updateLengthSimple=function(){this.lengthX=this.target.getCenterX()-this.source.getCenterX(),this.lengthY=this.target.getCenterY()-this.source.getCenterY(),Math.abs(this.lengthX)<1&&(this.lengthX=i.sign(this.lengthX)),Math.abs(this.lengthY)<1&&(this.lengthY=i.sign(this.lengthY)),this.length=Math.sqrt(this.lengthX*this.lengthX+this.lengthY*this.lengthY)},t.exports=o},function(t,e,n){"use strict";function r(a){this.vGraphObject=a}t.exports=r},function(t,e,n){"use strict";var r=n(2),a=n(10),i=n(13),o=n(0),s=n(16),l=n(5);function c(d,f,h,p){h==null&&p==null&&(p=f),r.call(this,p),d.graphManager!=null&&(d=d.graphManager),this.estimatedSize=a.MIN_VALUE,this.inclusionTreeDepth=a.MAX_VALUE,this.vGraphObject=p,this.edges=[],this.graphManager=d,h!=null&&f!=null?this.rect=new i(f.x,f.y,h.width,h.height):this.rect=new i}c.prototype=Object.create(r.prototype);for(var u in r)c[u]=r[u];c.prototype.getEdges=function(){return this.edges},c.prototype.getChild=function(){return this.child},c.prototype.getOwner=function(){return this.owner},c.prototype.getWidth=function(){return this.rect.width},c.prototype.setWidth=function(d){this.rect.width=d},c.prototype.getHeight=function(){return this.rect.height},c.prototype.setHeight=function(d){this.rect.height=d},c.prototype.getCenterX=function(){return this.rect.x+this.rect.width/2},c.prototype.getCenterY=function(){return this.rect.y+this.rect.height/2},c.prototype.getCenter=function(){return new l(this.rect.x+this.rect.width/2,this.rect.y+this.rect.height/2)},c.prototype.getLocation=function(){return new l(this.rect.x,this.rect.y)},c.prototype.getRect=function(){return this.rect},c.prototype.getDiagonal=function(){return Math.sqrt(this.rect.width*this.rect.width+this.rect.height*this.rect.height)},c.prototype.getHalfTheDiagonal=function(){return Math.sqrt(this.rect.height*this.rect.height+this.rect.width*this.rect.width)/2},c.prototype.setRect=function(d,f){this.rect.x=d.x,this.rect.y=d.y,this.rect.width=f.width,this.rect.height=f.height},c.prototype.setCenter=function(d,f){this.rect.x=d-this.rect.width/2,this.rect.y=f-this.rect.height/2},c.prototype.setLocation=function(d,f){this.rect.x=d,this.rect.y=f},c.prototype.moveBy=function(d,f){this.rect.x+=d,this.rect.y+=f},c.prototype.getEdgeListToNode=function(d){var f=[],h,p=this;return p.edges.forEach(function(m){if(m.target==d){if(m.source!=p)throw"Incorrect edge source!";f.push(m)}}),f},c.prototype.getEdgesBetween=function(d){var f=[],h,p=this;return p.edges.forEach(function(m){if(!(m.source==p||m.target==p))throw"Incorrect edge source and/or target";(m.target==d||m.source==d)&&f.push(m)}),f},c.prototype.getNeighborsList=function(){var d=new Set,f=this;return f.edges.forEach(function(h){if(h.source==f)d.add(h.target);else{if(h.target!=f)throw"Incorrect incidency!";d.add(h.source)}}),d},c.prototype.withChildren=function(){var d=new Set,f,h;if(d.add(this),this.child!=null)for(var p=this.child.getNodes(),m=0;m<p.length;m++)f=p[m],h=f.withChildren(),h.forEach(function(_){d.add(_)});return d},c.prototype.getNoOfChildren=function(){var d=0,f;if(this.child==null)d=1;else for(var h=this.child.getNodes(),p=0;p<h.length;p++)f=h[p],d+=f.getNoOfChildren();return d==0&&(d=1),d},c.prototype.getEstimatedSize=function(){if(this.estimatedSize==a.MIN_VALUE)throw"assert failed";return this.estimatedSize},c.prototype.calcEstimatedSize=function(){return this.child==null?this.estimatedSize=(this.rect.width+this.rect.height)/2:(this.estimatedSize=this.child.calcEstimatedSize(),this.rect.width=this.estimatedSize,this.rect.height=this.estimatedSize,this.estimatedSize)},c.prototype.scatter=function(){var d,f,h=-o.INITIAL_WORLD_BOUNDARY,p=o.INITIAL_WORLD_BOUNDARY;d=o.WORLD_CENTER_X+s.nextDouble()*(p-h)+h;var m=-o.INITIAL_WORLD_BOUNDARY,_=o.INITIAL_WORLD_BOUNDARY;f=o.WORLD_CENTER_Y+s.nextDouble()*(_-m)+m,this.rect.x=d,this.rect.y=f},c.prototype.updateBounds=function(){if(this.getChild()==null)throw"assert failed";if(this.getChild().getNodes().length!=0){var d=this.getChild();if(d.updateBounds(!0),this.rect.x=d.getLeft(),this.rect.y=d.getTop(),this.setWidth(d.getRight()-d.getLeft()),this.setHeight(d.getBottom()-d.getTop()),o.NODE_DIMENSIONS_INCLUDE_LABELS){var f=d.getRight()-d.getLeft(),h=d.getBottom()-d.getTop();this.labelWidth&&(this.labelPosHorizontal=="left"?(this.rect.x-=this.labelWidth,this.setWidth(f+this.labelWidth)):this.labelPosHorizontal=="center"&&this.labelWidth>f?(this.rect.x-=(this.labelWidth-f)/2,this.setWidth(this.labelWidth)):this.labelPosHorizontal=="right"&&this.setWidth(f+this.labelWidth)),this.labelHeight&&(this.labelPosVertical=="top"?(this.rect.y-=this.labelHeight,this.setHeight(h+this.labelHeight)):this.labelPosVertical=="center"&&this.labelHeight>h?(this.rect.y-=(this.labelHeight-h)/2,this.setHeight(this.labelHeight)):this.labelPosVertical=="bottom"&&this.setHeight(h+this.labelHeight))}}},c.prototype.getInclusionTreeDepth=function(){if(this.inclusionTreeDepth==a.MAX_VALUE)throw"assert failed";return this.inclusionTreeDepth},c.prototype.transform=function(d){var f=this.rect.x;f>o.WORLD_BOUNDARY?f=o.WORLD_BOUNDARY:f<-o.WORLD_BOUNDARY&&(f=-o.WORLD_BOUNDARY);var h=this.rect.y;h>o.WORLD_BOUNDARY?h=o.WORLD_BOUNDARY:h<-o.WORLD_BOUNDARY&&(h=-o.WORLD_BOUNDARY);var p=new l(f,h),m=d.inverseTransformPoint(p);this.setLocation(m.x,m.y)},c.prototype.getLeft=function(){return this.rect.x},c.prototype.getRight=function(){return this.rect.x+this.rect.width},c.prototype.getTop=function(){return this.rect.y},c.prototype.getBottom=function(){return this.rect.y+this.rect.height},c.prototype.getParent=function(){return this.owner==null?null:this.owner.getParent()},t.exports=c},function(t,e,n){"use strict";var r=n(0);function a(){}for(var i in r)a[i]=r[i];a.MAX_ITERATIONS=2500,a.DEFAULT_EDGE_LENGTH=50,a.DEFAULT_SPRING_STRENGTH=.45,a.DEFAULT_REPULSION_STRENGTH=4500,a.DEFAULT_GRAVITY_STRENGTH=.4,a.DEFAULT_COMPOUND_GRAVITY_STRENGTH=1,a.DEFAULT_GRAVITY_RANGE_FACTOR=3.8,a.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=1.5,a.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION=!0,a.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION=!0,a.DEFAULT_COOLING_FACTOR_INCREMENTAL=.3,a.COOLING_ADAPTATION_FACTOR=.33,a.ADAPTATION_LOWER_NODE_LIMIT=1e3,a.ADAPTATION_UPPER_NODE_LIMIT=5e3,a.MAX_NODE_DISPLACEMENT_INCREMENTAL=100,a.MAX_NODE_DISPLACEMENT=a.MAX_NODE_DISPLACEMENT_INCREMENTAL*3,a.MIN_REPULSION_DIST=a.DEFAULT_EDGE_LENGTH/10,a.CONVERGENCE_CHECK_PERIOD=100,a.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=.1,a.MIN_EDGE_LENGTH=1,a.GRID_CALCULATION_CHECK_PERIOD=10,t.exports=a},function(t,e,n){"use strict";function r(a,i){a==null&&i==null?(this.x=0,this.y=0):(this.x=a,this.y=i)}r.prototype.getX=function(){return this.x},r.prototype.getY=function(){return this.y},r.prototype.setX=function(a){this.x=a},r.prototype.setY=function(a){this.y=a},r.prototype.getDifference=function(a){return new DimensionD(this.x-a.x,this.y-a.y)},r.prototype.getCopy=function(){return new r(this.x,this.y)},r.prototype.translate=function(a){return this.x+=a.width,this.y+=a.height,this},t.exports=r},function(t,e,n){"use strict";var r=n(2),a=n(10),i=n(0),o=n(7),s=n(3),l=n(1),c=n(13),u=n(12),d=n(11);function f(p,m,_){r.call(this,_),this.estimatedSize=a.MIN_VALUE,this.margin=i.DEFAULT_GRAPH_MARGIN,this.edges=[],this.nodes=[],this.isConnected=!1,this.parent=p,m!=null&&m instanceof o?this.graphManager=m:m!=null&&m instanceof Layout&&(this.graphManager=m.graphManager)}f.prototype=Object.create(r.prototype);for(var h in r)f[h]=r[h];f.prototype.getNodes=function(){return this.nodes},f.prototype.getEdges=function(){return this.edges},f.prototype.getGraphManager=function(){return this.graphManager},f.prototype.getParent=function(){return this.parent},f.prototype.getLeft=function(){return this.left},f.prototype.getRight=function(){return this.right},f.prototype.getTop=function(){return this.top},f.prototype.getBottom=function(){return this.bottom},f.prototype.isConnected=function(){return this.isConnected},f.prototype.add=function(p,m,_){if(m==null&&_==null){var g=p;if(this.graphManager==null)throw"Graph has no graph mgr!";if(this.getNodes().indexOf(g)>-1)throw"Node already in graph!";return g.owner=this,this.getNodes().push(g),g}else{var P=p;if(!(this.getNodes().indexOf(m)>-1&&this.getNodes().indexOf(_)>-1))throw"Source or target not in graph!";if(!(m.owner==_.owner&&m.owner==this))throw"Both owners must be this graph!";return m.owner!=_.owner?null:(P.source=m,P.target=_,P.isInterGraph=!1,this.getEdges().push(P),m.edges.push(P),_!=m&&_.edges.push(P),P)}},f.prototype.remove=function(p){var m=p;if(p instanceof s){if(m==null)throw"Node is null!";if(!(m.owner!=null&&m.owner==this))throw"Owner graph is invalid!";if(this.graphManager==null)throw"Owner graph manager is invalid!";for(var _=m.edges.slice(),g,P=_.length,y=0;y<P;y++)g=_[y],g.isInterGraph?this.graphManager.remove(g):g.source.owner.remove(g);var C=this.nodes.indexOf(m);if(C==-1)throw"Node not in owner node list!";this.nodes.splice(C,1)}else if(p instanceof l){var g=p;if(g==null)throw"Edge is null!";if(!(g.source!=null&&g.target!=null))throw"Source and/or target is null!";if(!(g.source.owner!=null&&g.target.owner!=null&&g.source.owner==this&&g.target.owner==this))throw"Source and/or target owner is invalid!";var E=g.source.edges.indexOf(g),T=g.target.edges.indexOf(g);if(!(E>-1&&T>-1))throw"Source and/or target doesn't know this edge!";g.source.edges.splice(E,1),g.target!=g.source&&g.target.edges.splice(T,1);var C=g.source.owner.getEdges().indexOf(g);if(C==-1)throw"Not in owner's edge list!";g.source.owner.getEdges().splice(C,1)}},f.prototype.updateLeftTop=function(){for(var p=a.MAX_VALUE,m=a.MAX_VALUE,_,g,P,y=this.getNodes(),C=y.length,E=0;E<C;E++){var T=y[E];_=T.getTop(),g=T.getLeft(),p>_&&(p=_),m>g&&(m=g)}return p==a.MAX_VALUE?null:(y[0].getParent().paddingLeft!=null?P=y[0].getParent().paddingLeft:P=this.margin,this.left=m-P,this.top=p-P,new u(this.left,this.top))},f.prototype.updateBounds=function(p){for(var m=a.MAX_VALUE,_=-a.MAX_VALUE,g=a.MAX_VALUE,P=-a.MAX_VALUE,y,C,E,T,B,D=this.nodes,k=D.length,$=0;$<k;$++){var M=D[$];p&&M.child!=null&&M.updateBounds(),y=M.getLeft(),C=M.getRight(),E=M.getTop(),T=M.getBottom(),m>y&&(m=y),_<C&&(_=C),g>E&&(g=E),P<T&&(P=T)}var b=new c(m,g,_-m,P-g);m==a.MAX_VALUE&&(this.left=this.parent.getLeft(),this.right=this.parent.getRight(),this.top=this.parent.getTop(),this.bottom=this.parent.getBottom()),D[0].getParent().paddingLeft!=null?B=D[0].getParent().paddingLeft:B=this.margin,this.left=b.x-B,this.right=b.x+b.width+B,this.top=b.y-B,this.bottom=b.y+b.height+B},f.calculateBounds=function(p){for(var m=a.MAX_VALUE,_=-a.MAX_VALUE,g=a.MAX_VALUE,P=-a.MAX_VALUE,y,C,E,T,B=p.length,D=0;D<B;D++){var k=p[D];y=k.getLeft(),C=k.getRight(),E=k.getTop(),T=k.getBottom(),m>y&&(m=y),_<C&&(_=C),g>E&&(g=E),P<T&&(P=T)}var $=new c(m,g,_-m,P-g);return $},f.prototype.getInclusionTreeDepth=function(){return this==this.graphManager.getRoot()?1:this.parent.getInclusionTreeDepth()},f.prototype.getEstimatedSize=function(){if(this.estimatedSize==a.MIN_VALUE)throw"assert failed";return this.estimatedSize},f.prototype.calcEstimatedSize=function(){for(var p=0,m=this.nodes,_=m.length,g=0;g<_;g++){var P=m[g];p+=P.calcEstimatedSize()}return p==0?this.estimatedSize=i.EMPTY_COMPOUND_NODE_SIZE:this.estimatedSize=p/Math.sqrt(this.nodes.length),this.estimatedSize},f.prototype.updateConnected=function(){var p=this;if(this.nodes.length==0){this.isConnected=!0;return}var m=new d,_=new Set,g=this.nodes[0],P,y,C=g.withChildren();for(C.forEach(function($){m.push($),_.add($)});m.length!==0;){g=m.shift(),P=g.getEdges();for(var E=P.length,T=0;T<E;T++){var B=P[T];if(y=B.getOtherEndInGraph(g,this),y!=null&&!_.has(y)){var D=y.withChildren();D.forEach(function($){m.push($),_.add($)})}}}if(this.isConnected=!1,_.size>=this.nodes.length){var k=0;_.forEach(function($){$.owner==p&&k++}),k==this.nodes.length&&(this.isConnected=!0)}},t.exports=f},function(t,e,n){"use strict";var r,a=n(1);function i(o){r=n(6),this.layout=o,this.graphs=[],this.edges=[]}i.prototype.addRoot=function(){var o=this.layout.newGraph(),s=this.layout.newNode(null),l=this.add(o,s);return this.setRootGraph(l),this.rootGraph},i.prototype.add=function(o,s,l,c,u){if(l==null&&c==null&&u==null){if(o==null)throw"Graph is null!";if(s==null)throw"Parent node is null!";if(this.graphs.indexOf(o)>-1)throw"Graph already in this graph mgr!";if(this.graphs.push(o),o.parent!=null)throw"Already has a parent!";if(s.child!=null)throw"Already has a child!";return o.parent=s,s.child=o,o}else{u=l,c=s,l=o;var d=c.getOwner(),f=u.getOwner();if(!(d!=null&&d.getGraphManager()==this))throw"Source not in this graph mgr!";if(!(f!=null&&f.getGraphManager()==this))throw"Target not in this graph mgr!";if(d==f)return l.isInterGraph=!1,d.add(l,c,u);if(l.isInterGraph=!0,l.source=c,l.target=u,this.edges.indexOf(l)>-1)throw"Edge already in inter-graph edge list!";if(this.edges.push(l),!(l.source!=null&&l.target!=null))throw"Edge source and/or target is null!";if(!(l.source.edges.indexOf(l)==-1&&l.target.edges.indexOf(l)==-1))throw"Edge already in source and/or target incidency list!";return l.source.edges.push(l),l.target.edges.push(l),l}},i.prototype.remove=function(o){if(o instanceof r){var s=o;if(s.getGraphManager()!=this)throw"Graph not in this graph mgr";if(!(s==this.rootGraph||s.parent!=null&&s.parent.graphManager==this))throw"Invalid parent node!";var l=[];l=l.concat(s.getEdges());for(var c,u=l.length,d=0;d<u;d++)c=l[d],s.remove(c);var f=[];f=f.concat(s.getNodes());var h;u=f.length;for(var d=0;d<u;d++)h=f[d],s.remove(h);s==this.rootGraph&&this.setRootGraph(null);var p=this.graphs.indexOf(s);this.graphs.splice(p,1),s.parent=null}else if(o instanceof a){if(c=o,c==null)throw"Edge is null!";if(!c.isInterGraph)throw"Not an inter-graph edge!";if(!(c.source!=null&&c.target!=null))throw"Source and/or target is null!";if(!(c.source.edges.indexOf(c)!=-1&&c.target.edges.indexOf(c)!=-1))throw"Source and/or target doesn't know this edge!";var p=c.source.edges.indexOf(c);if(c.source.edges.splice(p,1),p=c.target.edges.indexOf(c),c.target.edges.splice(p,1),!(c.source.owner!=null&&c.source.owner.getGraphManager()!=null))throw"Edge owner graph or owner graph manager is null!";if(c.source.owner.getGraphManager().edges.indexOf(c)==-1)throw"Not in owner graph manager's edge list!";var p=c.source.owner.getGraphManager().edges.indexOf(c);c.source.owner.getGraphManager().edges.splice(p,1)}},i.prototype.updateBounds=function(){this.rootGraph.updateBounds(!0)},i.prototype.getGraphs=function(){return this.graphs},i.prototype.getAllNodes=function(){if(this.allNodes==null){for(var o=[],s=this.getGraphs(),l=s.length,c=0;c<l;c++)o=o.concat(s[c].getNodes());this.allNodes=o}return this.allNodes},i.prototype.resetAllNodes=function(){this.allNodes=null},i.prototype.resetAllEdges=function(){this.allEdges=null},i.prototype.resetAllNodesToApplyGravitation=function(){this.allNodesToApplyGravitation=null},i.prototype.getAllEdges=function(){if(this.allEdges==null){for(var o=[],s=this.getGraphs(),l=s.length,c=0;c<s.length;c++)o=o.concat(s[c].getEdges());o=o.concat(this.edges),this.allEdges=o}return this.allEdges},i.prototype.getAllNodesToApplyGravitation=function(){return this.allNodesToApplyGravitation},i.prototype.setAllNodesToApplyGravitation=function(o){if(this.allNodesToApplyGravitation!=null)throw"assert failed";this.allNodesToApplyGravitation=o},i.prototype.getRoot=function(){return this.rootGraph},i.prototype.setRootGraph=function(o){if(o.getGraphManager()!=this)throw"Root not in this graph mgr!";this.rootGraph=o,o.parent==null&&(o.parent=this.layout.newNode("Root node"))},i.prototype.getLayout=function(){return this.layout},i.prototype.isOneAncestorOfOther=function(o,s){if(!(o!=null&&s!=null))throw"assert failed";if(o==s)return!0;var l=o.getOwner(),c;do{if(c=l.getParent(),c==null)break;if(c==s)return!0;if(l=c.getOwner(),l==null)break}while(!0);l=s.getOwner();do{if(c=l.getParent(),c==null)break;if(c==o)return!0;if(l=c.getOwner(),l==null)break}while(!0);return!1},i.prototype.calcLowestCommonAncestors=function(){for(var o,s,l,c,u,d=this.getAllEdges(),f=d.length,h=0;h<f;h++){if(o=d[h],s=o.source,l=o.target,o.lca=null,o.sourceInLca=s,o.targetInLca=l,s==l){o.lca=s.getOwner();continue}for(c=s.getOwner();o.lca==null;){for(o.targetInLca=l,u=l.getOwner();o.lca==null;){if(u==c){o.lca=u;break}if(u==this.rootGraph)break;if(o.lca!=null)throw"assert failed";o.targetInLca=u.getParent(),u=o.targetInLca.getOwner()}if(c==this.rootGraph)break;o.lca==null&&(o.sourceInLca=c.getParent(),c=o.sourceInLca.getOwner())}if(o.lca==null)throw"assert failed"}},i.prototype.calcLowestCommonAncestor=function(o,s){if(o==s)return o.getOwner();var l=o.getOwner();do{if(l==null)break;var c=s.getOwner();do{if(c==null)break;if(c==l)return c;c=c.getParent().getOwner()}while(!0);l=l.getParent().getOwner()}while(!0);return l},i.prototype.calcInclusionTreeDepths=function(o,s){o==null&&s==null&&(o=this.rootGraph,s=1);for(var l,c=o.getNodes(),u=c.length,d=0;d<u;d++)l=c[d],l.inclusionTreeDepth=s,l.child!=null&&this.calcInclusionTreeDepths(l.child,s+1)},i.prototype.includesInvalidEdge=function(){for(var o,s=[],l=this.edges.length,c=0;c<l;c++)o=this.edges[c],this.isOneAncestorOfOther(o.source,o.target)&&s.push(o);for(var c=0;c<s.length;c++)this.remove(s[c]);return!1},t.exports=i},function(t,e,n){"use strict";var r=n(12);function a(){}a.calcSeparationAmount=function(i,o,s,l){if(!i.intersects(o))throw"assert failed";var c=new Array(2);this.decideDirectionsForOverlappingNodes(i,o,c),s[0]=Math.min(i.getRight(),o.getRight())-Math.max(i.x,o.x),s[1]=Math.min(i.getBottom(),o.getBottom())-Math.max(i.y,o.y),i.getX()<=o.getX()&&i.getRight()>=o.getRight()?s[0]+=Math.min(o.getX()-i.getX(),i.getRight()-o.getRight()):o.getX()<=i.getX()&&o.getRight()>=i.getRight()&&(s[0]+=Math.min(i.getX()-o.getX(),o.getRight()-i.getRight())),i.getY()<=o.getY()&&i.getBottom()>=o.getBottom()?s[1]+=Math.min(o.getY()-i.getY(),i.getBottom()-o.getBottom()):o.getY()<=i.getY()&&o.getBottom()>=i.getBottom()&&(s[1]+=Math.min(i.getY()-o.getY(),o.getBottom()-i.getBottom()));var u=Math.abs((o.getCenterY()-i.getCenterY())/(o.getCenterX()-i.getCenterX()));o.getCenterY()===i.getCenterY()&&o.getCenterX()===i.getCenterX()&&(u=1);var d=u*s[0],f=s[1]/u;s[0]<f?f=s[0]:d=s[1],s[0]=-1*c[0]*(f/2+l),s[1]=-1*c[1]*(d/2+l)},a.decideDirectionsForOverlappingNodes=function(i,o,s){i.getCenterX()<o.getCenterX()?s[0]=-1:s[0]=1,i.getCenterY()<o.getCenterY()?s[1]=-1:s[1]=1},a.getIntersection2=function(i,o,s){var l=i.getCenterX(),c=i.getCenterY(),u=o.getCenterX(),d=o.getCenterY();if(i.intersects(o))return s[0]=l,s[1]=c,s[2]=u,s[3]=d,!0;var f=i.getX(),h=i.getY(),p=i.getRight(),m=i.getX(),_=i.getBottom(),g=i.getRight(),P=i.getWidthHalf(),y=i.getHeightHalf(),C=o.getX(),E=o.getY(),T=o.getRight(),B=o.getX(),D=o.getBottom(),k=o.getRight(),$=o.getWidthHalf(),M=o.getHeightHalf(),b=!1,x=!1;if(l===u){if(c>d)return s[0]=l,s[1]=h,s[2]=u,s[3]=D,!1;if(c<d)return s[0]=l,s[1]=_,s[2]=u,s[3]=E,!1}else if(c===d){if(l>u)return s[0]=f,s[1]=c,s[2]=T,s[3]=d,!1;if(l<u)return s[0]=p,s[1]=c,s[2]=C,s[3]=d,!1}else{var K=i.height/i.width,X=o.height/o.width,v=(d-c)/(u-l),A=void 0,w=void 0,O=void 0,N=void 0,S=void 0,I=void 0;if(-K===v?l>u?(s[0]=m,s[1]=_,b=!0):(s[0]=p,s[1]=h,b=!0):K===v&&(l>u?(s[0]=f,s[1]=h,b=!0):(s[0]=g,s[1]=_,b=!0)),-X===v?u>l?(s[2]=B,s[3]=D,x=!0):(s[2]=T,s[3]=E,x=!0):X===v&&(u>l?(s[2]=C,s[3]=E,x=!0):(s[2]=k,s[3]=D,x=!0)),b&&x)return!1;if(l>u?c>d?(A=this.getCardinalDirection(K,v,4),w=this.getCardinalDirection(X,v,2)):(A=this.getCardinalDirection(-K,v,3),w=this.getCardinalDirection(-X,v,1)):c>d?(A=this.getCardinalDirection(-K,v,1),w=this.getCardinalDirection(-X,v,3)):(A=this.getCardinalDirection(K,v,2),w=this.getCardinalDirection(X,v,4)),!b)switch(A){case 1:N=h,O=l+-y/v,s[0]=O,s[1]=N;break;case 2:O=g,N=c+P*v,s[0]=O,s[1]=N;break;case 3:N=_,O=l+y/v,s[0]=O,s[1]=N;break;case 4:O=m,N=c+-P*v,s[0]=O,s[1]=N;break}if(!x)switch(w){case 1:I=E,S=u+-M/v,s[2]=S,s[3]=I;break;case 2:S=k,I=d+$*v,s[2]=S,s[3]=I;break;case 3:I=D,S=u+M/v,s[2]=S,s[3]=I;break;case 4:S=B,I=d+-$*v,s[2]=S,s[3]=I;break}}return!1},a.getCardinalDirection=function(i,o,s){return i>o?s:1+s%4},a.getIntersection=function(i,o,s,l){if(l==null)return this.getIntersection2(i,o,s);var c=i.x,u=i.y,d=o.x,f=o.y,h=s.x,p=s.y,m=l.x,_=l.y,g=void 0,P=void 0,y=void 0,C=void 0,E=void 0,T=void 0,B=void 0,D=void 0,k=void 0;return y=f-u,E=c-d,B=d*u-c*f,C=_-p,T=h-m,D=m*p-h*_,k=y*T-C*E,k===0?null:(g=(E*D-T*B)/k,P=(C*B-y*D)/k,new r(g,P))},a.angleOfVector=function(i,o,s,l){var c=void 0;return i!==s?(c=Math.atan((l-o)/(s-i)),s<i?c+=Math.PI:l<o&&(c+=this.TWO_PI)):l<o?c=this.ONE_AND_HALF_PI:c=this.HALF_PI,c},a.doIntersect=function(i,o,s,l){var c=i.x,u=i.y,d=o.x,f=o.y,h=s.x,p=s.y,m=l.x,_=l.y,g=(d-c)*(_-p)-(m-h)*(f-u);if(g===0)return!1;var P=((_-p)*(m-c)+(h-m)*(_-u))/g,y=((u-f)*(m-c)+(d-c)*(_-u))/g;return 0<P&&P<1&&0<y&&y<1},a.findCircleLineIntersections=function(i,o,s,l,c,u,d){var f=(s-i)*(s-i)+(l-o)*(l-o),h=2*((i-c)*(s-i)+(o-u)*(l-o)),p=(i-c)*(i-c)+(o-u)*(o-u)-d*d,m=h*h-4*f*p;if(m>=0){var _=(-h+Math.sqrt(h*h-4*f*p))/(2*f),g=(-h-Math.sqrt(h*h-4*f*p))/(2*f),P=null;return _>=0&&_<=1?[_]:g>=0&&g<=1?[g]:P}else return null},a.HALF_PI=.5*Math.PI,a.ONE_AND_HALF_PI=1.5*Math.PI,a.TWO_PI=2*Math.PI,a.THREE_PI=3*Math.PI,t.exports=a},function(t,e,n){"use strict";function r(){}r.sign=function(a){return a>0?1:a<0?-1:0},r.floor=function(a){return a<0?Math.ceil(a):Math.floor(a)},r.ceil=function(a){return a<0?Math.floor(a):Math.ceil(a)},t.exports=r},function(t,e,n){"use strict";function r(){}r.MAX_VALUE=2147483647,r.MIN_VALUE=-2147483648,t.exports=r},function(t,e,n){"use strict";var r=function(){function c(u,d){for(var f=0;f<d.length;f++){var h=d[f];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(u,h.key,h)}}return function(u,d,f){return d&&c(u.prototype,d),f&&c(u,f),u}}();function a(c,u){if(!(c instanceof u))throw new TypeError("Cannot call a class as a function")}var i=function(u){return{value:u,next:null,prev:null}},o=function(u,d,f,h){return u!==null?u.next=d:h.head=d,f!==null?f.prev=d:h.tail=d,d.prev=u,d.next=f,h.length++,d},s=function(u,d){var f=u.prev,h=u.next;return f!==null?f.next=h:d.head=h,h!==null?h.prev=f:d.tail=f,u.prev=u.next=null,d.length--,u},l=function(){function c(u){var d=this;a(this,c),this.length=0,this.head=null,this.tail=null,u?.forEach(function(f){return d.push(f)})}return r(c,[{key:"size",value:function(){return this.length}},{key:"insertBefore",value:function(d,f){return o(f.prev,i(d),f,this)}},{key:"insertAfter",value:function(d,f){return o(f,i(d),f.next,this)}},{key:"insertNodeBefore",value:function(d,f){return o(f.prev,d,f,this)}},{key:"insertNodeAfter",value:function(d,f){return o(f,d,f.next,this)}},{key:"push",value:function(d){return o(this.tail,i(d),null,this)}},{key:"unshift",value:function(d){return o(null,i(d),this.head,this)}},{key:"remove",value:function(d){return s(d,this)}},{key:"pop",value:function(){return s(this.tail,this).value}},{key:"popNode",value:function(){return s(this.tail,this)}},{key:"shift",value:function(){return s(this.head,this).value}},{key:"shiftNode",value:function(){return s(this.head,this)}},{key:"get_object_at",value:function(d){if(d<=this.length()){for(var f=1,h=this.head;f<d;)h=h.next,f++;return h.value}}},{key:"set_object_at",value:function(d,f){if(d<=this.length()){for(var h=1,p=this.head;h<d;)p=p.next,h++;p.value=f}}}]),c}();t.exports=l},function(t,e,n){"use strict";function r(a,i,o){this.x=null,this.y=null,a==null&&i==null&&o==null?(this.x=0,this.y=0):typeof a=="number"&&typeof i=="number"&&o==null?(this.x=a,this.y=i):a.constructor.name=="Point"&&i==null&&o==null&&(o=a,this.x=o.x,this.y=o.y)}r.prototype.getX=function(){return this.x},r.prototype.getY=function(){return this.y},r.prototype.getLocation=function(){return new r(this.x,this.y)},r.prototype.setLocation=function(a,i,o){a.constructor.name=="Point"&&i==null&&o==null?(o=a,this.setLocation(o.x,o.y)):typeof a=="number"&&typeof i=="number"&&o==null&&(parseInt(a)==a&&parseInt(i)==i?this.move(a,i):(this.x=Math.floor(a+.5),this.y=Math.floor(i+.5)))},r.prototype.move=function(a,i){this.x=a,this.y=i},r.prototype.translate=function(a,i){this.x+=a,this.y+=i},r.prototype.equals=function(a){if(a.constructor.name=="Point"){var i=a;return this.x==i.x&&this.y==i.y}return this==a},r.prototype.toString=function(){return new r().constructor.name+"[x="+this.x+",y="+this.y+"]"},t.exports=r},function(t,e,n){"use strict";function r(a,i,o,s){this.x=0,this.y=0,this.width=0,this.height=0,a!=null&&i!=null&&o!=null&&s!=null&&(this.x=a,this.y=i,this.width=o,this.height=s)}r.prototype.getX=function(){return this.x},r.prototype.setX=function(a){this.x=a},r.prototype.getY=function(){return this.y},r.prototype.setY=function(a){this.y=a},r.prototype.getWidth=function(){return this.width},r.prototype.setWidth=function(a){this.width=a},r.prototype.getHeight=function(){return this.height},r.prototype.setHeight=function(a){this.height=a},r.prototype.getRight=function(){return this.x+this.width},r.prototype.getBottom=function(){return this.y+this.height},r.prototype.intersects=function(a){return!(this.getRight()<a.x||this.getBottom()<a.y||a.getRight()<this.x||a.getBottom()<this.y)},r.prototype.getCenterX=function(){return this.x+this.width/2},r.prototype.getMinX=function(){return this.getX()},r.prototype.getMaxX=function(){return this.getX()+this.width},r.prototype.getCenterY=function(){return this.y+this.height/2},r.prototype.getMinY=function(){return this.getY()},r.prototype.getMaxY=function(){return this.getY()+this.height},r.prototype.getWidthHalf=function(){return this.width/2},r.prototype.getHeightHalf=function(){return this.height/2},t.exports=r},function(t,e,n){"use strict";var r=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(i){return typeof i}:function(i){return i&&typeof Symbol=="function"&&i.constructor===Symbol&&i!==Symbol.prototype?"symbol":typeof i};function a(){}a.lastID=0,a.createID=function(i){return a.isPrimitive(i)?i:(i.uniqueID!=null||(i.uniqueID=a.getString(),a.lastID++),i.uniqueID)},a.getString=function(i){return i==null&&(i=a.lastID),"Object#"+i},a.isPrimitive=function(i){var o=typeof i>"u"?"undefined":r(i);return i==null||o!="object"&&o!="function"},t.exports=a},function(t,e,n){"use strict";function r(h){if(Array.isArray(h)){for(var p=0,m=Array(h.length);p<h.length;p++)m[p]=h[p];return m}else return Array.from(h)}var a=n(0),i=n(7),o=n(3),s=n(1),l=n(6),c=n(5),u=n(17),d=n(29);function f(h){d.call(this),this.layoutQuality=a.QUALITY,this.createBendsAsNeeded=a.DEFAULT_CREATE_BENDS_AS_NEEDED,this.incremental=a.DEFAULT_INCREMENTAL,this.animationOnLayout=a.DEFAULT_ANIMATION_ON_LAYOUT,this.animationDuringLayout=a.DEFAULT_ANIMATION_DURING_LAYOUT,this.animationPeriod=a.DEFAULT_ANIMATION_PERIOD,this.uniformLeafNodeSizes=a.DEFAULT_UNIFORM_LEAF_NODE_SIZES,this.edgeToDummyNodes=new Map,this.graphManager=new i(this),this.isLayoutFinished=!1,this.isSubLayout=!1,this.isRemoteUse=!1,h!=null&&(this.isRemoteUse=h)}f.RANDOM_SEED=1,f.prototype=Object.create(d.prototype),f.prototype.getGraphManager=function(){return this.graphManager},f.prototype.getAllNodes=function(){return this.graphManager.getAllNodes()},f.prototype.getAllEdges=function(){return this.graphManager.getAllEdges()},f.prototype.getAllNodesToApplyGravitation=function(){return this.graphManager.getAllNodesToApplyGravitation()},f.prototype.newGraphManager=function(){var h=new i(this);return this.graphManager=h,h},f.prototype.newGraph=function(h){return new l(null,this.graphManager,h)},f.prototype.newNode=function(h){return new o(this.graphManager,h)},f.prototype.newEdge=function(h){return new s(null,null,h)},f.prototype.checkLayoutSuccess=function(){return this.graphManager.getRoot()==null||this.graphManager.getRoot().getNodes().length==0||this.graphManager.includesInvalidEdge()},f.prototype.runLayout=function(){this.isLayoutFinished=!1,this.tilingPreLayout&&this.tilingPreLayout(),this.initParameters();var h;return this.checkLayoutSuccess()?h=!1:h=this.layout(),a.ANIMATE==="during"?!1:(h&&(this.isSubLayout||this.doPostLayout()),this.tilingPostLayout&&this.tilingPostLayout(),this.isLayoutFinished=!0,h)},f.prototype.doPostLayout=function(){this.incremental||this.transform(),this.update()},f.prototype.update2=function(){if(this.createBendsAsNeeded&&(this.createBendpointsFromDummyNodes(),this.graphManager.resetAllEdges()),!this.isRemoteUse){for(var h,p=this.graphManager.getAllEdges(),m=0;m<p.length;m++)h=p[m];for(var _,g=this.graphManager.getRoot().getNodes(),m=0;m<g.length;m++)_=g[m];this.update(this.graphManager.getRoot())}},f.prototype.update=function(h){if(h==null)this.update2();else if(h instanceof o){var p=h;if(p.getChild()!=null)for(var m=p.getChild().getNodes(),_=0;_<m.length;_++)update(m[_]);if(p.vGraphObject!=null){var g=p.vGraphObject;g.update(p)}}else if(h instanceof s){var P=h;if(P.vGraphObject!=null){var y=P.vGraphObject;y.update(P)}}else if(h instanceof l){var C=h;if(C.vGraphObject!=null){var E=C.vGraphObject;E.update(C)}}},f.prototype.initParameters=function(){this.isSubLayout||(this.layoutQuality=a.QUALITY,this.animationDuringLayout=a.DEFAULT_ANIMATION_DURING_LAYOUT,this.animationPeriod=a.DEFAULT_ANIMATION_PERIOD,this.animationOnLayout=a.DEFAULT_ANIMATION_ON_LAYOUT,this.incremental=a.DEFAULT_INCREMENTAL,this.createBendsAsNeeded=a.DEFAULT_CREATE_BENDS_AS_NEEDED,this.uniformLeafNodeSizes=a.DEFAULT_UNIFORM_LEAF_NODE_SIZES),this.animationDuringLayout&&(this.animationOnLayout=!1)},f.prototype.transform=function(h){if(h==null)this.transform(new c(0,0));else{var p=new u,m=this.graphManager.getRoot().updateLeftTop();if(m!=null){p.setWorldOrgX(h.x),p.setWorldOrgY(h.y),p.setDeviceOrgX(m.x),p.setDeviceOrgY(m.y);for(var _=this.getAllNodes(),g,P=0;P<_.length;P++)g=_[P],g.transform(p)}}},f.prototype.positionNodesRandomly=function(h){if(h==null)this.positionNodesRandomly(this.getGraphManager().getRoot()),this.getGraphManager().getRoot().updateBounds(!0);else for(var p,m,_=h.getNodes(),g=0;g<_.length;g++)p=_[g],m=p.getChild(),m==null||m.getNodes().length==0?p.scatter():(this.positionNodesRandomly(m),p.updateBounds())},f.prototype.getFlatForest=function(){for(var h=[],p=!0,m=this.graphManager.getRoot().getNodes(),_=!0,g=0;g<m.length;g++)m[g].getChild()!=null&&(_=!1);if(!_)return h;var P=new Set,y=[],C=new Map,E=[];for(E=E.concat(m);E.length>0&&p;){for(y.push(E[0]);y.length>0&&p;){var T=y[0];y.splice(0,1),P.add(T);for(var B=T.getEdges(),g=0;g<B.length;g++){var D=B[g].getOtherEnd(T);if(C.get(T)!=D)if(!P.has(D))y.push(D),C.set(D,T);else{p=!1;break}}}if(!p)h=[];else{var k=[].concat(r(P));h.push(k);for(var g=0;g<k.length;g++){var $=k[g],M=E.indexOf($);M>-1&&E.splice(M,1)}P=new Set,C=new Map}}return h},f.prototype.createDummyNodesForBendpoints=function(h){for(var p=[],m=h.source,_=this.graphManager.calcLowestCommonAncestor(h.source,h.target),g=0;g<h.bendpoints.length;g++){var P=this.newNode(null);P.setRect(new Point(0,0),new Dimension(1,1)),_.add(P);var y=this.newEdge(null);this.graphManager.add(y,m,P),p.add(P),m=P}var y=this.newEdge(null);return this.graphManager.add(y,m,h.target),this.edgeToDummyNodes.set(h,p),h.isInterGraph()?this.graphManager.remove(h):_.remove(h),p},f.prototype.createBendpointsFromDummyNodes=function(){var h=[];h=h.concat(this.graphManager.getAllEdges()),h=[].concat(r(this.edgeToDummyNodes.keys())).concat(h);for(var p=0;p<h.length;p++){var m=h[p];if(m.bendpoints.length>0){for(var _=this.edgeToDummyNodes.get(m),g=0;g<_.length;g++){var P=_[g],y=new c(P.getCenterX(),P.getCenterY()),C=m.bendpoints.get(g);C.x=y.x,C.y=y.y,P.getOwner().remove(P)}this.graphManager.add(m,m.source,m.target)}}},f.transform=function(h,p,m,_){if(m!=null&&_!=null){var g=p;if(h<=50){var P=p/m;g-=(p-P)/50*(50-h)}else{var y=p*_;g+=(y-p)/50*(h-50)}return g}else{var C,E;return h<=50?(C=9*p/500,E=p/10):(C=9*p/50,E=-8*p),C*h+E}},f.findCenterOfTree=function(h){var p=[];p=p.concat(h);var m=[],_=new Map,g=!1,P=null;(p.length==1||p.length==2)&&(g=!0,P=p[0]);for(var y=0;y<p.length;y++){var C=p[y],E=C.getNeighborsList().size;_.set(C,C.getNeighborsList().size),E==1&&m.push(C)}var T=[];for(T=T.concat(m);!g;){var B=[];B=B.concat(T),T=[];for(var y=0;y<p.length;y++){var C=p[y],D=p.indexOf(C);D>=0&&p.splice(D,1);var k=C.getNeighborsList();k.forEach(function(b){if(m.indexOf(b)<0){var x=_.get(b),K=x-1;K==1&&T.push(b),_.set(b,K)}})}m=m.concat(T),(p.length==1||p.length==2)&&(g=!0,P=p[0])}return P},f.prototype.setGraphManager=function(h){this.graphManager=h},t.exports=f},function(t,e,n){"use strict";function r(){}r.seed=1,r.x=0,r.nextDouble=function(){return r.x=Math.sin(r.seed++)*1e4,r.x-Math.floor(r.x)},t.exports=r},function(t,e,n){"use strict";var r=n(5);function a(i,o){this.lworldOrgX=0,this.lworldOrgY=0,this.ldeviceOrgX=0,this.ldeviceOrgY=0,this.lworldExtX=1,this.lworldExtY=1,this.ldeviceExtX=1,this.ldeviceExtY=1}a.prototype.getWorldOrgX=function(){return this.lworldOrgX},a.prototype.setWorldOrgX=function(i){this.lworldOrgX=i},a.prototype.getWorldOrgY=function(){return this.lworldOrgY},a.prototype.setWorldOrgY=function(i){this.lworldOrgY=i},a.prototype.getWorldExtX=function(){return this.lworldExtX},a.prototype.setWorldExtX=function(i){this.lworldExtX=i},a.prototype.getWorldExtY=function(){return this.lworldExtY},a.prototype.setWorldExtY=function(i){this.lworldExtY=i},a.prototype.getDeviceOrgX=function(){return this.ldeviceOrgX},a.prototype.setDeviceOrgX=function(i){this.ldeviceOrgX=i},a.prototype.getDeviceOrgY=function(){return this.ldeviceOrgY},a.prototype.setDeviceOrgY=function(i){this.ldeviceOrgY=i},a.prototype.getDeviceExtX=function(){return this.ldeviceExtX},a.prototype.setDeviceExtX=function(i){this.ldeviceExtX=i},a.prototype.getDeviceExtY=function(){return this.ldeviceExtY},a.prototype.setDeviceExtY=function(i){this.ldeviceExtY=i},a.prototype.transformX=function(i){var o=0,s=this.lworldExtX;return s!=0&&(o=this.ldeviceOrgX+(i-this.lworldOrgX)*this.ldeviceExtX/s),o},a.prototype.transformY=function(i){var o=0,s=this.lworldExtY;return s!=0&&(o=this.ldeviceOrgY+(i-this.lworldOrgY)*this.ldeviceExtY/s),o},a.prototype.inverseTransformX=function(i){var o=0,s=this.ldeviceExtX;return s!=0&&(o=this.lworldOrgX+(i-this.ldeviceOrgX)*this.lworldExtX/s),o},a.prototype.inverseTransformY=function(i){var o=0,s=this.ldeviceExtY;return s!=0&&(o=this.lworldOrgY+(i-this.ldeviceOrgY)*this.lworldExtY/s),o},a.prototype.inverseTransformPoint=function(i){var o=new r(this.inverseTransformX(i.x),this.inverseTransformY(i.y));return o},t.exports=a},function(t,e,n){"use strict";function r(d){if(Array.isArray(d)){for(var f=0,h=Array(d.length);f<d.length;f++)h[f]=d[f];return h}else return Array.from(d)}var a=n(15),i=n(4),o=n(0),s=n(8),l=n(9);function c(){a.call(this),this.useSmartIdealEdgeLengthCalculation=i.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION,this.gravityConstant=i.DEFAULT_GRAVITY_STRENGTH,this.compoundGravityConstant=i.DEFAULT_COMPOUND_GRAVITY_STRENGTH,this.gravityRangeFactor=i.DEFAULT_GRAVITY_RANGE_FACTOR,this.compoundGravityRangeFactor=i.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR,this.displacementThresholdPerNode=3*i.DEFAULT_EDGE_LENGTH/100,this.coolingFactor=i.DEFAULT_COOLING_FACTOR_INCREMENTAL,this.initialCoolingFactor=i.DEFAULT_COOLING_FACTOR_INCREMENTAL,this.totalDisplacement=0,this.oldTotalDisplacement=0,this.maxIterations=i.MAX_ITERATIONS}c.prototype=Object.create(a.prototype);for(var u in a)c[u]=a[u];c.prototype.initParameters=function(){a.prototype.initParameters.call(this,arguments),this.totalIterations=0,this.notAnimatedIterations=0,this.useFRGridVariant=i.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION,this.grid=[]},c.prototype.calcIdealEdgeLengths=function(){for(var d,f,h,p,m,_,g,P=this.getGraphManager().getAllEdges(),y=0;y<P.length;y++)d=P[y],f=d.idealLength,d.isInterGraph&&(p=d.getSource(),m=d.getTarget(),_=d.getSourceInLca().getEstimatedSize(),g=d.getTargetInLca().getEstimatedSize(),this.useSmartIdealEdgeLengthCalculation&&(d.idealLength+=_+g-2*o.SIMPLE_NODE_SIZE),h=d.getLca().getInclusionTreeDepth(),d.idealLength+=f*i.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR*(p.getInclusionTreeDepth()+m.getInclusionTreeDepth()-2*h))},c.prototype.initSpringEmbedder=function(){var d=this.getAllNodes().length;this.incremental?(d>i.ADAPTATION_LOWER_NODE_LIMIT&&(this.coolingFactor=Math.max(this.coolingFactor*i.COOLING_ADAPTATION_FACTOR,this.coolingFactor-(d-i.ADAPTATION_LOWER_NODE_LIMIT)/(i.ADAPTATION_UPPER_NODE_LIMIT-i.ADAPTATION_LOWER_NODE_LIMIT)*this.coolingFactor*(1-i.COOLING_ADAPTATION_FACTOR))),this.maxNodeDisplacement=i.MAX_NODE_DISPLACEMENT_INCREMENTAL):(d>i.ADAPTATION_LOWER_NODE_LIMIT?this.coolingFactor=Math.max(i.COOLING_ADAPTATION_FACTOR,1-(d-i.ADAPTATION_LOWER_NODE_LIMIT)/(i.ADAPTATION_UPPER_NODE_LIMIT-i.ADAPTATION_LOWER_NODE_LIMIT)*(1-i.COOLING_ADAPTATION_FACTOR)):this.coolingFactor=1,this.initialCoolingFactor=this.coolingFactor,this.maxNodeDisplacement=i.MAX_NODE_DISPLACEMENT),this.maxIterations=Math.max(this.getAllNodes().length*5,this.maxIterations),this.displacementThresholdPerNode=3*i.DEFAULT_EDGE_LENGTH/100,this.totalDisplacementThreshold=this.displacementThresholdPerNode*this.getAllNodes().length,this.repulsionRange=this.calcRepulsionRange()},c.prototype.calcSpringForces=function(){for(var d=this.getAllEdges(),f,h=0;h<d.length;h++)f=d[h],this.calcSpringForce(f,f.idealLength)},c.prototype.calcRepulsionForces=function(){var d=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!0,f=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,h,p,m,_,g=this.getAllNodes(),P;if(this.useFRGridVariant)for(this.totalIterations%i.GRID_CALCULATION_CHECK_PERIOD==1&&d&&this.updateGrid(),P=new Set,h=0;h<g.length;h++)m=g[h],this.calculateRepulsionForceOfANode(m,P,d,f),P.add(m);else for(h=0;h<g.length;h++)for(m=g[h],p=h+1;p<g.length;p++)_=g[p],m.getOwner()==_.getOwner()&&this.calcRepulsionForce(m,_)},c.prototype.calcGravitationalForces=function(){for(var d,f=this.getAllNodesToApplyGravitation(),h=0;h<f.length;h++)d=f[h],this.calcGravitationalForce(d)},c.prototype.moveNodes=function(){for(var d=this.getAllNodes(),f,h=0;h<d.length;h++)f=d[h],f.move()},c.prototype.calcSpringForce=function(d,f){var h=d.getSource(),p=d.getTarget(),m,_,g,P;if(this.uniformLeafNodeSizes&&h.getChild()==null&&p.getChild()==null)d.updateLengthSimple();else if(d.updateLength(),d.isOverlapingSourceAndTarget)return;m=d.getLength(),m!=0&&(_=d.edgeElasticity*(m-f),g=_*(d.lengthX/m),P=_*(d.lengthY/m),h.springForceX+=g,h.springForceY+=P,p.springForceX-=g,p.springForceY-=P)},c.prototype.calcRepulsionForce=function(d,f){var h=d.getRect(),p=f.getRect(),m=new Array(2),_=new Array(4),g,P,y,C,E,T,B;if(h.intersects(p)){s.calcSeparationAmount(h,p,m,i.DEFAULT_EDGE_LENGTH/2),T=2*m[0],B=2*m[1];var D=d.noOfChildren*f.noOfChildren/(d.noOfChildren+f.noOfChildren);d.repulsionForceX-=D*T,d.repulsionForceY-=D*B,f.repulsionForceX+=D*T,f.repulsionForceY+=D*B}else this.uniformLeafNodeSizes&&d.getChild()==null&&f.getChild()==null?(g=p.getCenterX()-h.getCenterX(),P=p.getCenterY()-h.getCenterY()):(s.getIntersection(h,p,_),g=_[2]-_[0],P=_[3]-_[1]),Math.abs(g)<i.MIN_REPULSION_DIST&&(g=l.sign(g)*i.MIN_REPULSION_DIST),Math.abs(P)<i.MIN_REPULSION_DIST&&(P=l.sign(P)*i.MIN_REPULSION_DIST),y=g*g+P*P,C=Math.sqrt(y),E=(d.nodeRepulsion/2+f.nodeRepulsion/2)*d.noOfChildren*f.noOfChildren/y,T=E*g/C,B=E*P/C,d.repulsionForceX-=T,d.repulsionForceY-=B,f.repulsionForceX+=T,f.repulsionForceY+=B},c.prototype.calcGravitationalForce=function(d){var f,h,p,m,_,g,P,y;f=d.getOwner(),h=(f.getRight()+f.getLeft())/2,p=(f.getTop()+f.getBottom())/2,m=d.getCenterX()-h,_=d.getCenterY()-p,g=Math.abs(m)+d.getWidth()/2,P=Math.abs(_)+d.getHeight()/2,d.getOwner()==this.graphManager.getRoot()?(y=f.getEstimatedSize()*this.gravityRangeFactor,(g>y||P>y)&&(d.gravitationForceX=-this.gravityConstant*m,d.gravitationForceY=-this.gravityConstant*_)):(y=f.getEstimatedSize()*this.compoundGravityRangeFactor,(g>y||P>y)&&(d.gravitationForceX=-this.gravityConstant*m*this.compoundGravityConstant,d.gravitationForceY=-this.gravityConstant*_*this.compoundGravityConstant))},c.prototype.isConverged=function(){var d,f=!1;return this.totalIterations>this.maxIterations/3&&(f=Math.abs(this.totalDisplacement-this.oldTotalDisplacement)<2),d=this.totalDisplacement<this.totalDisplacementThreshold,this.oldTotalDisplacement=this.totalDisplacement,d||f},c.prototype.animate=function(){this.animationDuringLayout&&!this.isSubLayout&&(this.notAnimatedIterations==this.animationPeriod?(this.update(),this.notAnimatedIterations=0):this.notAnimatedIterations++)},c.prototype.calcNoOfChildrenForAllNodes=function(){for(var d,f=this.graphManager.getAllNodes(),h=0;h<f.length;h++)d=f[h],d.noOfChildren=d.getNoOfChildren()},c.prototype.calcGrid=function(d){var f=0,h=0;f=parseInt(Math.ceil((d.getRight()-d.getLeft())/this.repulsionRange)),h=parseInt(Math.ceil((d.getBottom()-d.getTop())/this.repulsionRange));for(var p=new Array(f),m=0;m<f;m++)p[m]=new Array(h);for(var m=0;m<f;m++)for(var _=0;_<h;_++)p[m][_]=new Array;return p},c.prototype.addNodeToGrid=function(d,f,h){var p=0,m=0,_=0,g=0;p=parseInt(Math.floor((d.getRect().x-f)/this.repulsionRange)),m=parseInt(Math.floor((d.getRect().width+d.getRect().x-f)/this.repulsionRange)),_=parseInt(Math.floor((d.getRect().y-h)/this.repulsionRange)),g=parseInt(Math.floor((d.getRect().height+d.getRect().y-h)/this.repulsionRange));for(var P=p;P<=m;P++)for(var y=_;y<=g;y++)this.grid[P][y].push(d),d.setGridCoordinates(p,m,_,g)},c.prototype.updateGrid=function(){var d,f,h=this.getAllNodes();for(this.grid=this.calcGrid(this.graphManager.getRoot()),d=0;d<h.length;d++)f=h[d],this.addNodeToGrid(f,this.graphManager.getRoot().getLeft(),this.graphManager.getRoot().getTop())},c.prototype.calculateRepulsionForceOfANode=function(d,f,h,p){if(this.totalIterations%i.GRID_CALCULATION_CHECK_PERIOD==1&&h||p){var m=new Set;d.surrounding=new Array;for(var _,g=this.grid,P=d.startX-1;P<d.finishX+2;P++)for(var y=d.startY-1;y<d.finishY+2;y++)if(!(P<0||y<0||P>=g.length||y>=g[0].length)){for(var C=0;C<g[P][y].length;C++)if(_=g[P][y][C],!(d.getOwner()!=_.getOwner()||d==_)&&!f.has(_)&&!m.has(_)){var E=Math.abs(d.getCenterX()-_.getCenterX())-(d.getWidth()/2+_.getWidth()/2),T=Math.abs(d.getCenterY()-_.getCenterY())-(d.getHeight()/2+_.getHeight()/2);E<=this.repulsionRange&&T<=this.repulsionRange&&m.add(_)}}d.surrounding=[].concat(r(m))}for(P=0;P<d.surrounding.length;P++)this.calcRepulsionForce(d,d.surrounding[P])},c.prototype.calcRepulsionRange=function(){return 0},t.exports=c},function(t,e,n){"use strict";var r=n(1),a=n(4);function i(s,l,c){r.call(this,s,l,c),this.idealLength=a.DEFAULT_EDGE_LENGTH,this.edgeElasticity=a.DEFAULT_SPRING_STRENGTH}i.prototype=Object.create(r.prototype);for(var o in r)i[o]=r[o];t.exports=i},function(t,e,n){"use strict";var r=n(3),a=n(4);function i(s,l,c,u){r.call(this,s,l,c,u),this.nodeRepulsion=a.DEFAULT_REPULSION_STRENGTH,this.springForceX=0,this.springForceY=0,this.repulsionForceX=0,this.repulsionForceY=0,this.gravitationForceX=0,this.gravitationForceY=0,this.displacementX=0,this.displacementY=0,this.startX=0,this.finishX=0,this.startY=0,this.finishY=0,this.surrounding=[]}i.prototype=Object.create(r.prototype);for(var o in r)i[o]=r[o];i.prototype.setGridCoordinates=function(s,l,c,u){this.startX=s,this.finishX=l,this.startY=c,this.finishY=u},t.exports=i},function(t,e,n){"use strict";function r(a,i){this.width=0,this.height=0,a!==null&&i!==null&&(this.height=i,this.width=a)}r.prototype.getWidth=function(){return this.width},r.prototype.setWidth=function(a){this.width=a},r.prototype.getHeight=function(){return this.height},r.prototype.setHeight=function(a){this.height=a},t.exports=r},function(t,e,n){"use strict";var r=n(14);function a(){this.map={},this.keys=[]}a.prototype.put=function(i,o){var s=r.createID(i);this.contains(s)||(this.map[s]=o,this.keys.push(i))},a.prototype.contains=function(i){var o=r.createID(i);return this.map[i]!=null},a.prototype.get=function(i){var o=r.createID(i);return this.map[o]},a.prototype.keySet=function(){return this.keys},t.exports=a},function(t,e,n){"use strict";var r=n(14);function a(){this.set={}}a.prototype.add=function(i){var o=r.createID(i);this.contains(o)||(this.set[o]=i)},a.prototype.remove=function(i){delete this.set[r.createID(i)]},a.prototype.clear=function(){this.set={}},a.prototype.contains=function(i){return this.set[r.createID(i)]==i},a.prototype.isEmpty=function(){return this.size()===0},a.prototype.size=function(){return Object.keys(this.set).length},a.prototype.addAllTo=function(i){for(var o=Object.keys(this.set),s=o.length,l=0;l<s;l++)i.push(this.set[o[l]])},a.prototype.size=function(){return Object.keys(this.set).length},a.prototype.addAll=function(i){for(var o=i.length,s=0;s<o;s++){var l=i[s];this.add(l)}},t.exports=a},function(t,e,n){"use strict";function r(){}r.multMat=function(a,i){for(var o=[],s=0;s<a.length;s++){o[s]=[];for(var l=0;l<i[0].length;l++){o[s][l]=0;for(var c=0;c<a[0].length;c++)o[s][l]+=a[s][c]*i[c][l]}}return o},r.transpose=function(a){for(var i=[],o=0;o<a[0].length;o++){i[o]=[];for(var s=0;s<a.length;s++)i[o][s]=a[s][o]}return i},r.multCons=function(a,i){for(var o=[],s=0;s<a.length;s++)o[s]=a[s]*i;return o},r.minusOp=function(a,i){for(var o=[],s=0;s<a.length;s++)o[s]=a[s]-i[s];return o},r.dotProduct=function(a,i){for(var o=0,s=0;s<a.length;s++)o+=a[s]*i[s];return o},r.mag=function(a){return Math.sqrt(this.dotProduct(a,a))},r.normalize=function(a){for(var i=[],o=this.mag(a),s=0;s<a.length;s++)i[s]=a[s]/o;return i},r.multGamma=function(a){for(var i=[],o=0,s=0;s<a.length;s++)o+=a[s];o*=-1/a.length;for(var l=0;l<a.length;l++)i[l]=o+a[l];return i},r.multL=function(a,i,o){for(var s=[],l=[],c=[],u=0;u<i[0].length;u++){for(var d=0,f=0;f<i.length;f++)d+=-.5*i[f][u]*a[f];l[u]=d}for(var h=0;h<o.length;h++){for(var p=0,m=0;m<o.length;m++)p+=o[h][m]*l[m];c[h]=p}for(var _=0;_<i.length;_++){for(var g=0,P=0;P<i[0].length;P++)g+=i[_][P]*c[P];s[_]=g}return s},t.exports=r},function(t,e,n){"use strict";var r=function(){function s(l,c){for(var u=0;u<c.length;u++){var d=c[u];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(l,d.key,d)}}return function(l,c,u){return c&&s(l.prototype,c),u&&s(l,u),l}}();function a(s,l){if(!(s instanceof l))throw new TypeError("Cannot call a class as a function")}var i=n(11),o=function(){function s(l,c){a(this,s),(c!==null||c!==void 0)&&(this.compareFunction=this._defaultCompareFunction);var u=void 0;l instanceof i?u=l.size():u=l.length,this._quicksort(l,0,u-1)}return r(s,[{key:"_quicksort",value:function(c,u,d){if(u<d){var f=this._partition(c,u,d);this._quicksort(c,u,f),this._quicksort(c,f+1,d)}}},{key:"_partition",value:function(c,u,d){for(var f=this._get(c,u),h=u,p=d;;){for(;this.compareFunction(f,this._get(c,p));)p--;for(;this.compareFunction(this._get(c,h),f);)h++;if(h<p)this._swap(c,h,p),h++,p--;else return p}}},{key:"_get",value:function(c,u){return c instanceof i?c.get_object_at(u):c[u]}},{key:"_set",value:function(c,u,d){c instanceof i?c.set_object_at(u,d):c[u]=d}},{key:"_swap",value:function(c,u,d){var f=this._get(c,u);this._set(c,u,this._get(c,d)),this._set(c,d,f)}},{key:"_defaultCompareFunction",value:function(c,u){return u>c}}]),s}();t.exports=o},function(t,e,n){"use strict";function r(){}r.svd=function(a){this.U=null,this.V=null,this.s=null,this.m=0,this.n=0,this.m=a.length,this.n=a[0].length;var i=Math.min(this.m,this.n);this.s=function(en){for(var Je=[];en-- >0;)Je.push(0);return Je}(Math.min(this.m+1,this.n)),this.U=function(en){var Je=function $n(Qe){if(Qe.length==0)return 0;for(var cn=[],gn=0;gn<Qe[0];gn++)cn.push($n(Qe.slice(1)));return cn};return Je(en)}([this.m,i]),this.V=function(en){var Je=function $n(Qe){if(Qe.length==0)return 0;for(var cn=[],gn=0;gn<Qe[0];gn++)cn.push($n(Qe.slice(1)));return cn};return Je(en)}([this.n,this.n]);for(var o=function(en){for(var Je=[];en-- >0;)Je.push(0);return Je}(this.n),s=function(en){for(var Je=[];en-- >0;)Je.push(0);return Je}(this.m),l=!0,c=!0,u=Math.min(this.m-1,this.n),d=Math.max(0,Math.min(this.n-2,this.m)),f=0;f<Math.max(u,d);f++){if(f<u){this.s[f]=0;for(var h=f;h<this.m;h++)this.s[f]=r.hypot(this.s[f],a[h][f]);if(this.s[f]!==0){a[f][f]<0&&(this.s[f]=-this.s[f]);for(var p=f;p<this.m;p++)a[p][f]/=this.s[f];a[f][f]+=1}this.s[f]=-this.s[f]}for(var m=f+1;m<this.n;m++){if(function(en,Je){return en&&Je}(f<u,this.s[f]!==0)){for(var _=0,g=f;g<this.m;g++)_+=a[g][f]*a[g][m];_=-_/a[f][f];for(var P=f;P<this.m;P++)a[P][m]+=_*a[P][f]}o[m]=a[f][m]}if(function(en,Je){return en&&Je}(l,f<u))for(var y=f;y<this.m;y++)this.U[y][f]=a[y][f];if(f<d){o[f]=0;for(var C=f+1;C<this.n;C++)o[f]=r.hypot(o[f],o[C]);if(o[f]!==0){o[f+1]<0&&(o[f]=-o[f]);for(var E=f+1;E<this.n;E++)o[E]/=o[f];o[f+1]+=1}if(o[f]=-o[f],function(en,Je){return en&&Je}(f+1<this.m,o[f]!==0)){for(var T=f+1;T<this.m;T++)s[T]=0;for(var B=f+1;B<this.n;B++)for(var D=f+1;D<this.m;D++)s[D]+=o[B]*a[D][B];for(var k=f+1;k<this.n;k++)for(var $=-o[k]/o[f+1],M=f+1;M<this.m;M++)a[M][k]+=$*s[M]}if(c)for(var b=f+1;b<this.n;b++)this.V[b][f]=o[b]}}var x=Math.min(this.n,this.m+1);if(u<this.n&&(this.s[u]=a[u][u]),this.m<x&&(this.s[x-1]=0),d+1<x&&(o[d]=a[d][x-1]),o[x-1]=0,l){for(var K=u;K<i;K++){for(var X=0;X<this.m;X++)this.U[X][K]=0;this.U[K][K]=1}for(var v=u-1;v>=0;v--)if(this.s[v]!==0){for(var A=v+1;A<i;A++){for(var w=0,O=v;O<this.m;O++)w+=this.U[O][v]*this.U[O][A];w=-w/this.U[v][v];for(var N=v;N<this.m;N++)this.U[N][A]+=w*this.U[N][v]}for(var S=v;S<this.m;S++)this.U[S][v]=-this.U[S][v];this.U[v][v]=1+this.U[v][v];for(var I=0;I<v-1;I++)this.U[I][v]=0}else{for(var q=0;q<this.m;q++)this.U[q][v]=0;this.U[v][v]=1}}if(c)for(var Y=this.n-1;Y>=0;Y--){if(function(en,Je){return en&&Je}(Y<d,o[Y]!==0))for(var ee=Y+1;ee<i;ee++){for(var Q=0,U=Y+1;U<this.n;U++)Q+=this.V[U][Y]*this.V[U][ee];Q=-Q/this.V[Y+1][Y];for(var J=Y+1;J<this.n;J++)this.V[J][ee]+=Q*this.V[J][Y]}for(var F=0;F<this.n;F++)this.V[F][Y]=0;this.V[Y][Y]=1}for(var W=x-1,L=0,z=Math.pow(2,-52),ne=Math.pow(2,-966);x>0;){var H=void 0,_e=void 0;for(H=x-2;H>=-1&&H!==-1;H--)if(Math.abs(o[H])<=ne+z*(Math.abs(this.s[H])+Math.abs(this.s[H+1]))){o[H]=0;break}if(H===x-2)_e=4;else{var Ae=void 0;for(Ae=x-1;Ae>=H&&Ae!==H;Ae--){var he=(Ae!==x?Math.abs(o[Ae]):0)+(Ae!==H+1?Math.abs(o[Ae-1]):0);if(Math.abs(this.s[Ae])<=ne+z*he){this.s[Ae]=0;break}}Ae===H?_e=3:Ae===x-1?_e=1:(_e=2,H=Ae)}switch(H++,_e){case 1:{var le=o[x-2];o[x-2]=0;for(var de=x-2;de>=H;de--){var Pe=r.hypot(this.s[de],le),Ce=this.s[de]/Pe,Xe=le/Pe;if(this.s[de]=Pe,de!==H&&(le=-Xe*o[de-1],o[de-1]=Ce*o[de-1]),c)for(var ve=0;ve<this.n;ve++)Pe=Ce*this.V[ve][de]+Xe*this.V[ve][x-1],this.V[ve][x-1]=-Xe*this.V[ve][de]+Ce*this.V[ve][x-1],this.V[ve][de]=Pe}}break;case 2:{var xe=o[H-1];o[H-1]=0;for(var ye=H;ye<x;ye++){var fe=r.hypot(this.s[ye],xe),R=this.s[ye]/fe,te=xe/fe;if(this.s[ye]=fe,xe=-te*o[ye],o[ye]=R*o[ye],l)for(var ce=0;ce<this.m;ce++)fe=R*this.U[ce][ye]+te*this.U[ce][H-1],this.U[ce][H-1]=-te*this.U[ce][ye]+R*this.U[ce][H-1],this.U[ce][ye]=fe}}break;case 3:{var V=Math.max(Math.max(Math.max(Math.max(Math.abs(this.s[x-1]),Math.abs(this.s[x-2])),Math.abs(o[x-2])),Math.abs(this.s[H])),Math.abs(o[H])),Z=this.s[x-1]/V,oe=this.s[x-2]/V,re=o[x-2]/V,se=this.s[H]/V,pe=o[H]/V,ke=((oe+Z)*(oe-Z)+re*re)/2,be=Z*re*(Z*re),me=0;(function(en,Je){return en||Je})(ke!==0,be!==0)&&(me=Math.sqrt(ke*ke+be),ke<0&&(me=-me),me=be/(ke+me));for(var Ee=(se+Z)*(se-Z)+me,Te=se*pe,De=H;De<x-1;De++){var Re=r.hypot(Ee,Te),Ge=Ee/Re,Ie=Te/Re;if(De!==H&&(o[De-1]=Re),Ee=Ge*this.s[De]+Ie*o[De],o[De]=Ge*o[De]-Ie*this.s[De],Te=Ie*this.s[De+1],this.s[De+1]=Ge*this.s[De+1],c)for(var $e=0;$e<this.n;$e++)Re=Ge*this.V[$e][De]+Ie*this.V[$e][De+1],this.V[$e][De+1]=-Ie*this.V[$e][De]+Ge*this.V[$e][De+1],this.V[$e][De]=Re;if(Re=r.hypot(Ee,Te),Ge=Ee/Re,Ie=Te/Re,this.s[De]=Re,Ee=Ge*o[De]+Ie*this.s[De+1],this.s[De+1]=-Ie*o[De]+Ge*this.s[De+1],Te=Ie*o[De+1],o[De+1]=Ge*o[De+1],l&&De<this.m-1)for(var Fe=0;Fe<this.m;Fe++)Re=Ge*this.U[Fe][De]+Ie*this.U[Fe][De+1],this.U[Fe][De+1]=-Ie*this.U[Fe][De]+Ge*this.U[Fe][De+1],this.U[Fe][De]=Re}o[x-2]=Ee,L=L+1}break;case 4:{if(this.s[H]<=0&&(this.s[H]=this.s[H]<0?-this.s[H]:0,c))for(var Me=0;Me<=W;Me++)this.V[Me][H]=-this.V[Me][H];for(;H<W&&!(this.s[H]>=this.s[H+1]);){var Le=this.s[H];if(this.s[H]=this.s[H+1],this.s[H+1]=Le,c&&H<this.n-1)for(var an=0;an<this.n;an++)Le=this.V[an][H+1],this.V[an][H+1]=this.V[an][H],this.V[an][H]=Le;if(l&&H<this.m-1)for(var on=0;on<this.m;on++)Le=this.U[on][H+1],this.U[on][H+1]=this.U[on][H],this.U[on][H]=Le;H++}L=0,x--}break}}var Pn={U:this.U,V:this.V,S:this.s};return Pn},r.hypot=function(a,i){var o=void 0;return Math.abs(a)>Math.abs(i)?(o=i/a,o=Math.abs(a)*Math.sqrt(1+o*o)):i!=0?(o=a/i,o=Math.abs(i)*Math.sqrt(1+o*o)):o=0,o},t.exports=r},function(t,e,n){"use strict";var r=function(){function o(s,l){for(var c=0;c<l.length;c++){var u=l[c];u.enumerable=u.enumerable||!1,u.configurable=!0,"value"in u&&(u.writable=!0),Object.defineProperty(s,u.key,u)}}return function(s,l,c){return l&&o(s.prototype,l),c&&o(s,c),s}}();function a(o,s){if(!(o instanceof s))throw new TypeError("Cannot call a class as a function")}var i=function(){function o(s,l){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1,u=arguments.length>3&&arguments[3]!==void 0?arguments[3]:-1,d=arguments.length>4&&arguments[4]!==void 0?arguments[4]:-1;a(this,o),this.sequence1=s,this.sequence2=l,this.match_score=c,this.mismatch_penalty=u,this.gap_penalty=d,this.iMax=s.length+1,this.jMax=l.length+1,this.grid=new Array(this.iMax);for(var f=0;f<this.iMax;f++){this.grid[f]=new Array(this.jMax);for(var h=0;h<this.jMax;h++)this.grid[f][h]=0}this.tracebackGrid=new Array(this.iMax);for(var p=0;p<this.iMax;p++){this.tracebackGrid[p]=new Array(this.jMax);for(var m=0;m<this.jMax;m++)this.tracebackGrid[p][m]=[null,null,null]}this.alignments=[],this.score=-1,this.computeGrids()}return r(o,[{key:"getScore",value:function(){return this.score}},{key:"getAlignments",value:function(){return this.alignments}},{key:"computeGrids",value:function(){for(var l=1;l<this.jMax;l++)this.grid[0][l]=this.grid[0][l-1]+this.gap_penalty,this.tracebackGrid[0][l]=[!1,!1,!0];for(var c=1;c<this.iMax;c++)this.grid[c][0]=this.grid[c-1][0]+this.gap_penalty,this.tracebackGrid[c][0]=[!1,!0,!1];for(var u=1;u<this.iMax;u++)for(var d=1;d<this.jMax;d++){var f=void 0;this.sequence1[u-1]===this.sequence2[d-1]?f=this.grid[u-1][d-1]+this.match_score:f=this.grid[u-1][d-1]+this.mismatch_penalty;var h=this.grid[u-1][d]+this.gap_penalty,p=this.grid[u][d-1]+this.gap_penalty,m=[f,h,p],_=this.arrayAllMaxIndexes(m);this.grid[u][d]=m[_[0]],this.tracebackGrid[u][d]=[_.includes(0),_.includes(1),_.includes(2)]}this.score=this.grid[this.iMax-1][this.jMax-1]}},{key:"alignmentTraceback",value:function(){var l=[];for(l.push({pos:[this.sequence1.length,this.sequence2.length],seq1:"",seq2:""});l[0];){var c=l[0],u=this.tracebackGrid[c.pos[0]][c.pos[1]];u[0]&&l.push({pos:[c.pos[0]-1,c.pos[1]-1],seq1:this.sequence1[c.pos[0]-1]+c.seq1,seq2:this.sequence2[c.pos[1]-1]+c.seq2}),u[1]&&l.push({pos:[c.pos[0]-1,c.pos[1]],seq1:this.sequence1[c.pos[0]-1]+c.seq1,seq2:"-"+c.seq2}),u[2]&&l.push({pos:[c.pos[0],c.pos[1]-1],seq1:"-"+c.seq1,seq2:this.sequence2[c.pos[1]-1]+c.seq2}),c.pos[0]===0&&c.pos[1]===0&&this.alignments.push({sequence1:c.seq1,sequence2:c.seq2}),l.shift()}return this.alignments}},{key:"getAllIndexes",value:function(l,c){for(var u=[],d=-1;(d=l.indexOf(c,d+1))!==-1;)u.push(d);return u}},{key:"arrayAllMaxIndexes",value:function(l){return this.getAllIndexes(l,Math.max.apply(null,l))}}]),o}();t.exports=i},function(t,e,n){"use strict";var r=function(){};r.FDLayout=n(18),r.FDLayoutConstants=n(4),r.FDLayoutEdge=n(19),r.FDLayoutNode=n(20),r.DimensionD=n(21),r.HashMap=n(22),r.HashSet=n(23),r.IGeometry=n(8),r.IMath=n(9),r.Integer=n(10),r.Point=n(12),r.PointD=n(5),r.RandomSeed=n(16),r.RectangleD=n(13),r.Transform=n(17),r.UniqueIDGeneretor=n(14),r.Quicksort=n(25),r.LinkedList=n(11),r.LGraphObject=n(2),r.LGraph=n(6),r.LEdge=n(1),r.LGraphManager=n(7),r.LNode=n(3),r.Layout=n(15),r.LayoutConstants=n(0),r.NeedlemanWunsch=n(27),r.Matrix=n(24),r.SVD=n(26),t.exports=r},function(t,e,n){"use strict";function r(){this.listeners=[]}var a=r.prototype;a.addListener=function(i,o){this.listeners.push({event:i,callback:o})},a.removeListener=function(i,o){for(var s=this.listeners.length;s>=0;s--){var l=this.listeners[s];l.event===i&&l.callback===o&&this.listeners.splice(s,1)}},a.emit=function(i,o){for(var s=0;s<this.listeners.length;s++){var l=this.listeners[s];i===l.event&&l.callback(o)}},t.exports=r}])})});var m0=xa((Xo,p0)=>{"use strict";(function(e,n){typeof Xo=="object"&&typeof p0=="object"?p0.exports=n(h0()):typeof define=="function"&&define.amd?define(["layout-base"],n):typeof Xo=="object"?Xo.coseBase=n(h0()):e.coseBase=n(e.layoutBase)})(Xo,function(t){return(()=>{"use strict";var e={45:(i,o,s)=>{var l={};l.layoutBase=s(551),l.CoSEConstants=s(806),l.CoSEEdge=s(767),l.CoSEGraph=s(880),l.CoSEGraphManager=s(578),l.CoSELayout=s(765),l.CoSENode=s(991),l.ConstraintHandler=s(902),i.exports=l},806:(i,o,s)=>{var l=s(551).FDLayoutConstants;function c(){}for(var u in l)c[u]=l[u];c.DEFAULT_USE_MULTI_LEVEL_SCALING=!1,c.DEFAULT_RADIAL_SEPARATION=l.DEFAULT_EDGE_LENGTH,c.DEFAULT_COMPONENT_SEPERATION=60,c.TILE=!0,c.TILING_PADDING_VERTICAL=10,c.TILING_PADDING_HORIZONTAL=10,c.TRANSFORM_ON_CONSTRAINT_HANDLING=!0,c.ENFORCE_CONSTRAINTS=!0,c.APPLY_LAYOUT=!0,c.RELAX_MOVEMENT_ON_CONSTRAINTS=!0,c.TREE_REDUCTION_ON_INCREMENTAL=!0,c.PURE_INCREMENTAL=c.DEFAULT_INCREMENTAL,i.exports=c},767:(i,o,s)=>{var l=s(551).FDLayoutEdge;function c(d,f,h){l.call(this,d,f,h)}c.prototype=Object.create(l.prototype);for(var u in l)c[u]=l[u];i.exports=c},880:(i,o,s)=>{var l=s(551).LGraph;function c(d,f,h){l.call(this,d,f,h)}c.prototype=Object.create(l.prototype);for(var u in l)c[u]=l[u];i.exports=c},578:(i,o,s)=>{var l=s(551).LGraphManager;function c(d){l.call(this,d)}c.prototype=Object.create(l.prototype);for(var u in l)c[u]=l[u];i.exports=c},765:(i,o,s)=>{var l=s(551).FDLayout,c=s(578),u=s(880),d=s(991),f=s(767),h=s(806),p=s(902),m=s(551).FDLayoutConstants,_=s(551).LayoutConstants,g=s(551).Point,P=s(551).PointD,y=s(551).DimensionD,C=s(551).Layout,E=s(551).Integer,T=s(551).IGeometry,B=s(551).LGraph,D=s(551).Transform,k=s(551).LinkedList;function $(){l.call(this),this.toBeTiled={},this.constraints={}}$.prototype=Object.create(l.prototype);for(var M in l)$[M]=l[M];$.prototype.newGraphManager=function(){var b=new c(this);return this.graphManager=b,b},$.prototype.newGraph=function(b){return new u(null,this.graphManager,b)},$.prototype.newNode=function(b){return new d(this.graphManager,b)},$.prototype.newEdge=function(b){return new f(null,null,b)},$.prototype.initParameters=function(){l.prototype.initParameters.call(this,arguments),this.isSubLayout||(h.DEFAULT_EDGE_LENGTH<10?this.idealEdgeLength=10:this.idealEdgeLength=h.DEFAULT_EDGE_LENGTH,this.useSmartIdealEdgeLengthCalculation=h.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION,this.gravityConstant=m.DEFAULT_GRAVITY_STRENGTH,this.compoundGravityConstant=m.DEFAULT_COMPOUND_GRAVITY_STRENGTH,this.gravityRangeFactor=m.DEFAULT_GRAVITY_RANGE_FACTOR,this.compoundGravityRangeFactor=m.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR,this.prunedNodesAll=[],this.growTreeIterations=0,this.afterGrowthIterations=0,this.isTreeGrowing=!1,this.isGrowthFinished=!1)},$.prototype.initSpringEmbedder=function(){l.prototype.initSpringEmbedder.call(this),this.coolingCycle=0,this.maxCoolingCycle=this.maxIterations/m.CONVERGENCE_CHECK_PERIOD,this.finalTemperature=.04,this.coolingAdjuster=1},$.prototype.layout=function(){var b=_.DEFAULT_CREATE_BENDS_AS_NEEDED;return b&&(this.createBendpoints(),this.graphManager.resetAllEdges()),this.level=0,this.classicLayout()},$.prototype.classicLayout=function(){if(this.nodesWithGravity=this.calculateNodesToApplyGravitationTo(),this.graphManager.setAllNodesToApplyGravitation(this.nodesWithGravity),this.calcNoOfChildrenForAllNodes(),this.graphManager.calcLowestCommonAncestors(),this.graphManager.calcInclusionTreeDepths(),this.graphManager.getRoot().calcEstimatedSize(),this.calcIdealEdgeLengths(),this.incremental){if(h.TREE_REDUCTION_ON_INCREMENTAL){this.reduceTrees(),this.graphManager.resetAllNodesToApplyGravitation();var x=new Set(this.getAllNodes()),K=this.nodesWithGravity.filter(function(A){return x.has(A)});this.graphManager.setAllNodesToApplyGravitation(K)}}else{var b=this.getFlatForest();if(b.length>0)this.positionNodesRadially(b);else{this.reduceTrees(),this.graphManager.resetAllNodesToApplyGravitation();var x=new Set(this.getAllNodes()),K=this.nodesWithGravity.filter(function(X){return x.has(X)});this.graphManager.setAllNodesToApplyGravitation(K),this.positionNodesRandomly()}}return Object.keys(this.constraints).length>0&&(p.handleConstraints(this),this.initConstraintVariables()),this.initSpringEmbedder(),h.APPLY_LAYOUT&&this.runSpringEmbedder(),!0},$.prototype.tick=function(){if(this.totalIterations++,this.totalIterations===this.maxIterations&&!this.isTreeGrowing&&!this.isGrowthFinished)if(this.prunedNodesAll.length>0)this.isTreeGrowing=!0;else return!0;if(this.totalIterations%m.CONVERGENCE_CHECK_PERIOD==0&&!this.isTreeGrowing&&!this.isGrowthFinished){if(this.isConverged())if(this.prunedNodesAll.length>0)this.isTreeGrowing=!0;else return!0;this.coolingCycle++,this.layoutQuality==0?this.coolingAdjuster=this.coolingCycle:this.layoutQuality==1&&(this.coolingAdjuster=this.coolingCycle/3),this.coolingFactor=Math.max(this.initialCoolingFactor-Math.pow(this.coolingCycle,Math.log(100*(this.initialCoolingFactor-this.finalTemperature))/Math.log(this.maxCoolingCycle))/100*this.coolingAdjuster,this.finalTemperature),this.animationPeriod=Math.ceil(this.initialAnimationPeriod*Math.sqrt(this.coolingFactor))}if(this.isTreeGrowing){if(this.growTreeIterations%10==0)if(this.prunedNodesAll.length>0){this.graphManager.updateBounds(),this.updateGrid(),this.growTree(this.prunedNodesAll),this.graphManager.resetAllNodesToApplyGravitation();var b=new Set(this.getAllNodes()),x=this.nodesWithGravity.filter(function(v){return b.has(v)});this.graphManager.setAllNodesToApplyGravitation(x),this.graphManager.updateBounds(),this.updateGrid(),h.PURE_INCREMENTAL?this.coolingFactor=m.DEFAULT_COOLING_FACTOR_INCREMENTAL/2:this.coolingFactor=m.DEFAULT_COOLING_FACTOR_INCREMENTAL}else this.isTreeGrowing=!1,this.isGrowthFinished=!0;this.growTreeIterations++}if(this.isGrowthFinished){if(this.isConverged())return!0;this.afterGrowthIterations%10==0&&(this.graphManager.updateBounds(),this.updateGrid()),h.PURE_INCREMENTAL?this.coolingFactor=m.DEFAULT_COOLING_FACTOR_INCREMENTAL/2*((100-this.afterGrowthIterations)/100):this.coolingFactor=m.DEFAULT_COOLING_FACTOR_INCREMENTAL*((100-this.afterGrowthIterations)/100),this.afterGrowthIterations++}var K=!this.isTreeGrowing&&!this.isGrowthFinished,X=this.growTreeIterations%10==1&&this.isTreeGrowing||this.afterGrowthIterations%10==1&&this.isGrowthFinished;return this.totalDisplacement=0,this.graphManager.updateBounds(),this.calcSpringForces(),this.calcRepulsionForces(K,X),this.calcGravitationalForces(),this.moveNodes(),this.animate(),!1},$.prototype.getPositionsData=function(){for(var b=this.graphManager.getAllNodes(),x={},K=0;K<b.length;K++){var X=b[K].rect,v=b[K].id;x[v]={id:v,x:X.getCenterX(),y:X.getCenterY(),w:X.width,h:X.height}}return x},$.prototype.runSpringEmbedder=function(){this.initialAnimationPeriod=25,this.animationPeriod=this.initialAnimationPeriod;var b=!1;if(m.ANIMATE==="during")this.emit("layoutstarted");else{for(;!b;)b=this.tick();this.graphManager.updateBounds()}},$.prototype.moveNodes=function(){for(var b=this.getAllNodes(),x,K=0;K<b.length;K++)x=b[K],x.calculateDisplacement();Object.keys(this.constraints).length>0&&this.updateDisplacements();for(var K=0;K<b.length;K++)x=b[K],x.move()},$.prototype.initConstraintVariables=function(){var b=this;this.idToNodeMap=new Map,this.fixedNodeSet=new Set;for(var x=this.graphManager.getAllNodes(),K=0;K<x.length;K++){var X=x[K];this.idToNodeMap.set(X.id,X)}var v=function U(J){for(var F=J.getChild().getNodes(),W,L=0,z=0;z<F.length;z++)W=F[z],W.getChild()==null?b.fixedNodeSet.has(W.id)&&(L+=100):L+=U(W);return L};if(this.constraints.fixedNodeConstraint){this.constraints.fixedNodeConstraint.forEach(function(F){b.fixedNodeSet.add(F.nodeId)});for(var x=this.graphManager.getAllNodes(),X,K=0;K<x.length;K++)if(X=x[K],X.getChild()!=null){var A=v(X);A>0&&(X.fixedNodeWeight=A)}}if(this.constraints.relativePlacementConstraint){var w=new Map,O=new Map;if(this.dummyToNodeForVerticalAlignment=new Map,this.dummyToNodeForHorizontalAlignment=new Map,this.fixedNodesOnHorizontal=new Set,this.fixedNodesOnVertical=new Set,this.fixedNodeSet.forEach(function(U){b.fixedNodesOnHorizontal.add(U),b.fixedNodesOnVertical.add(U)}),this.constraints.alignmentConstraint){if(this.constraints.alignmentConstraint.vertical)for(var N=this.constraints.alignmentConstraint.vertical,K=0;K<N.length;K++)this.dummyToNodeForVerticalAlignment.set("dummy"+K,[]),N[K].forEach(function(J){w.set(J,"dummy"+K),b.dummyToNodeForVerticalAlignment.get("dummy"+K).push(J),b.fixedNodeSet.has(J)&&b.fixedNodesOnHorizontal.add("dummy"+K)});if(this.constraints.alignmentConstraint.horizontal)for(var S=this.constraints.alignmentConstraint.horizontal,K=0;K<S.length;K++)this.dummyToNodeForHorizontalAlignment.set("dummy"+K,[]),S[K].forEach(function(J){O.set(J,"dummy"+K),b.dummyToNodeForHorizontalAlignment.get("dummy"+K).push(J),b.fixedNodeSet.has(J)&&b.fixedNodesOnVertical.add("dummy"+K)})}if(h.RELAX_MOVEMENT_ON_CONSTRAINTS)this.shuffle=function(U){var J,F,W;for(W=U.length-1;W>=2*U.length/3;W--)J=Math.floor(Math.random()*(W+1)),F=U[W],U[W]=U[J],U[J]=F;return U},this.nodesInRelativeHorizontal=[],this.nodesInRelativeVertical=[],this.nodeToRelativeConstraintMapHorizontal=new Map,this.nodeToRelativeConstraintMapVertical=new Map,this.nodeToTempPositionMapHorizontal=new Map,this.nodeToTempPositionMapVertical=new Map,this.constraints.relativePlacementConstraint.forEach(function(U){if(U.left){var J=w.has(U.left)?w.get(U.left):U.left,F=w.has(U.right)?w.get(U.right):U.right;b.nodesInRelativeHorizontal.includes(J)||(b.nodesInRelativeHorizontal.push(J),b.nodeToRelativeConstraintMapHorizontal.set(J,[]),b.dummyToNodeForVerticalAlignment.has(J)?b.nodeToTempPositionMapHorizontal.set(J,b.idToNodeMap.get(b.dummyToNodeForVerticalAlignment.get(J)[0]).getCenterX()):b.nodeToTempPositionMapHorizontal.set(J,b.idToNodeMap.get(J).getCenterX())),b.nodesInRelativeHorizontal.includes(F)||(b.nodesInRelativeHorizontal.push(F),b.nodeToRelativeConstraintMapHorizontal.set(F,[]),b.dummyToNodeForVerticalAlignment.has(F)?b.nodeToTempPositionMapHorizontal.set(F,b.idToNodeMap.get(b.dummyToNodeForVerticalAlignment.get(F)[0]).getCenterX()):b.nodeToTempPositionMapHorizontal.set(F,b.idToNodeMap.get(F).getCenterX())),b.nodeToRelativeConstraintMapHorizontal.get(J).push({right:F,gap:U.gap}),b.nodeToRelativeConstraintMapHorizontal.get(F).push({left:J,gap:U.gap})}else{var W=O.has(U.top)?O.get(U.top):U.top,L=O.has(U.bottom)?O.get(U.bottom):U.bottom;b.nodesInRelativeVertical.includes(W)||(b.nodesInRelativeVertical.push(W),b.nodeToRelativeConstraintMapVertical.set(W,[]),b.dummyToNodeForHorizontalAlignment.has(W)?b.nodeToTempPositionMapVertical.set(W,b.idToNodeMap.get(b.dummyToNodeForHorizontalAlignment.get(W)[0]).getCenterY()):b.nodeToTempPositionMapVertical.set(W,b.idToNodeMap.get(W).getCenterY())),b.nodesInRelativeVertical.includes(L)||(b.nodesInRelativeVertical.push(L),b.nodeToRelativeConstraintMapVertical.set(L,[]),b.dummyToNodeForHorizontalAlignment.has(L)?b.nodeToTempPositionMapVertical.set(L,b.idToNodeMap.get(b.dummyToNodeForHorizontalAlignment.get(L)[0]).getCenterY()):b.nodeToTempPositionMapVertical.set(L,b.idToNodeMap.get(L).getCenterY())),b.nodeToRelativeConstraintMapVertical.get(W).push({bottom:L,gap:U.gap}),b.nodeToRelativeConstraintMapVertical.get(L).push({top:W,gap:U.gap})}});else{var I=new Map,q=new Map;this.constraints.relativePlacementConstraint.forEach(function(U){if(U.left){var J=w.has(U.left)?w.get(U.left):U.left,F=w.has(U.right)?w.get(U.right):U.right;I.has(J)?I.get(J).push(F):I.set(J,[F]),I.has(F)?I.get(F).push(J):I.set(F,[J])}else{var W=O.has(U.top)?O.get(U.top):U.top,L=O.has(U.bottom)?O.get(U.bottom):U.bottom;q.has(W)?q.get(W).push(L):q.set(W,[L]),q.has(L)?q.get(L).push(W):q.set(L,[W])}});var Y=function(J,F){var W=[],L=[],z=new k,ne=new Set,H=0;return J.forEach(function(_e,Ae){if(!ne.has(Ae)){W[H]=[],L[H]=!1;var he=Ae;for(z.push(he),ne.add(he),W[H].push(he);z.length!=0;){he=z.shift(),F.has(he)&&(L[H]=!0);var le=J.get(he);le.forEach(function(de){ne.has(de)||(z.push(de),ne.add(de),W[H].push(de))})}H++}}),{components:W,isFixed:L}},ee=Y(I,b.fixedNodesOnHorizontal);this.componentsOnHorizontal=ee.components,this.fixedComponentsOnHorizontal=ee.isFixed;var Q=Y(q,b.fixedNodesOnVertical);this.componentsOnVertical=Q.components,this.fixedComponentsOnVertical=Q.isFixed}}},$.prototype.updateDisplacements=function(){var b=this;if(this.constraints.fixedNodeConstraint&&this.constraints.fixedNodeConstraint.forEach(function(Q){var U=b.idToNodeMap.get(Q.nodeId);U.displacementX=0,U.displacementY=0}),this.constraints.alignmentConstraint){if(this.constraints.alignmentConstraint.vertical)for(var x=this.constraints.alignmentConstraint.vertical,K=0;K<x.length;K++){for(var X=0,v=0;v<x[K].length;v++){if(this.fixedNodeSet.has(x[K][v])){X=0;break}X+=this.idToNodeMap.get(x[K][v]).displacementX}for(var A=X/x[K].length,v=0;v<x[K].length;v++)this.idToNodeMap.get(x[K][v]).displacementX=A}if(this.constraints.alignmentConstraint.horizontal)for(var w=this.constraints.alignmentConstraint.horizontal,K=0;K<w.length;K++){for(var O=0,v=0;v<w[K].length;v++){if(this.fixedNodeSet.has(w[K][v])){O=0;break}O+=this.idToNodeMap.get(w[K][v]).displacementY}for(var N=O/w[K].length,v=0;v<w[K].length;v++)this.idToNodeMap.get(w[K][v]).displacementY=N}}if(this.constraints.relativePlacementConstraint)if(h.RELAX_MOVEMENT_ON_CONSTRAINTS)this.totalIterations%10==0&&(this.shuffle(this.nodesInRelativeHorizontal),this.shuffle(this.nodesInRelativeVertical)),this.nodesInRelativeHorizontal.forEach(function(Q){if(!b.fixedNodesOnHorizontal.has(Q)){var U=0;b.dummyToNodeForVerticalAlignment.has(Q)?U=b.idToNodeMap.get(b.dummyToNodeForVerticalAlignment.get(Q)[0]).displacementX:U=b.idToNodeMap.get(Q).displacementX,b.nodeToRelativeConstraintMapHorizontal.get(Q).forEach(function(J){if(J.right){var F=b.nodeToTempPositionMapHorizontal.get(J.right)-b.nodeToTempPositionMapHorizontal.get(Q)-U;F<J.gap&&(U-=J.gap-F)}else{var F=b.nodeToTempPositionMapHorizontal.get(Q)-b.nodeToTempPositionMapHorizontal.get(J.left)+U;F<J.gap&&(U+=J.gap-F)}}),b.nodeToTempPositionMapHorizontal.set(Q,b.nodeToTempPositionMapHorizontal.get(Q)+U),b.dummyToNodeForVerticalAlignment.has(Q)?b.dummyToNodeForVerticalAlignment.get(Q).forEach(function(J){b.idToNodeMap.get(J).displacementX=U}):b.idToNodeMap.get(Q).displacementX=U}}),this.nodesInRelativeVertical.forEach(function(Q){if(!b.fixedNodesOnHorizontal.has(Q)){var U=0;b.dummyToNodeForHorizontalAlignment.has(Q)?U=b.idToNodeMap.get(b.dummyToNodeForHorizontalAlignment.get(Q)[0]).displacementY:U=b.idToNodeMap.get(Q).displacementY,b.nodeToRelativeConstraintMapVertical.get(Q).forEach(function(J){if(J.bottom){var F=b.nodeToTempPositionMapVertical.get(J.bottom)-b.nodeToTempPositionMapVertical.get(Q)-U;F<J.gap&&(U-=J.gap-F)}else{var F=b.nodeToTempPositionMapVertical.get(Q)-b.nodeToTempPositionMapVertical.get(J.top)+U;F<J.gap&&(U+=J.gap-F)}}),b.nodeToTempPositionMapVertical.set(Q,b.nodeToTempPositionMapVertical.get(Q)+U),b.dummyToNodeForHorizontalAlignment.has(Q)?b.dummyToNodeForHorizontalAlignment.get(Q).forEach(function(J){b.idToNodeMap.get(J).displacementY=U}):b.idToNodeMap.get(Q).displacementY=U}});else{for(var K=0;K<this.componentsOnHorizontal.length;K++){var S=this.componentsOnHorizontal[K];if(this.fixedComponentsOnHorizontal[K])for(var v=0;v<S.length;v++)this.dummyToNodeForVerticalAlignment.has(S[v])?this.dummyToNodeForVerticalAlignment.get(S[v]).forEach(function(J){b.idToNodeMap.get(J).displacementX=0}):this.idToNodeMap.get(S[v]).displacementX=0;else{for(var I=0,q=0,v=0;v<S.length;v++)if(this.dummyToNodeForVerticalAlignment.has(S[v])){var Y=this.dummyToNodeForVerticalAlignment.get(S[v]);I+=Y.length*this.idToNodeMap.get(Y[0]).displacementX,q+=Y.length}else I+=this.idToNodeMap.get(S[v]).displacementX,q++;for(var ee=I/q,v=0;v<S.length;v++)this.dummyToNodeForVerticalAlignment.has(S[v])?this.dummyToNodeForVerticalAlignment.get(S[v]).forEach(function(J){b.idToNodeMap.get(J).displacementX=ee}):this.idToNodeMap.get(S[v]).displacementX=ee}}for(var K=0;K<this.componentsOnVertical.length;K++){var S=this.componentsOnVertical[K];if(this.fixedComponentsOnVertical[K])for(var v=0;v<S.length;v++)this.dummyToNodeForHorizontalAlignment.has(S[v])?this.dummyToNodeForHorizontalAlignment.get(S[v]).forEach(function(F){b.idToNodeMap.get(F).displacementY=0}):this.idToNodeMap.get(S[v]).displacementY=0;else{for(var I=0,q=0,v=0;v<S.length;v++)if(this.dummyToNodeForHorizontalAlignment.has(S[v])){var Y=this.dummyToNodeForHorizontalAlignment.get(S[v]);I+=Y.length*this.idToNodeMap.get(Y[0]).displacementY,q+=Y.length}else I+=this.idToNodeMap.get(S[v]).displacementY,q++;for(var ee=I/q,v=0;v<S.length;v++)this.dummyToNodeForHorizontalAlignment.has(S[v])?this.dummyToNodeForHorizontalAlignment.get(S[v]).forEach(function(z){b.idToNodeMap.get(z).displacementY=ee}):this.idToNodeMap.get(S[v]).displacementY=ee}}}},$.prototype.calculateNodesToApplyGravitationTo=function(){var b=[],x,K=this.graphManager.getGraphs(),X=K.length,v;for(v=0;v<X;v++)x=K[v],x.updateConnected(),x.isConnected||(b=b.concat(x.getNodes()));return b},$.prototype.createBendpoints=function(){var b=[];b=b.concat(this.graphManager.getAllEdges());var x=new Set,K;for(K=0;K<b.length;K++){var X=b[K];if(!x.has(X)){var v=X.getSource(),A=X.getTarget();if(v==A)X.getBendpoints().push(new P),X.getBendpoints().push(new P),this.createDummyNodesForBendpoints(X),x.add(X);else{var w=[];if(w=w.concat(v.getEdgeListToNode(A)),w=w.concat(A.getEdgeListToNode(v)),!x.has(w[0])){if(w.length>1){var O;for(O=0;O<w.length;O++){var N=w[O];N.getBendpoints().push(new P),this.createDummyNodesForBendpoints(N)}}w.forEach(function(S){x.add(S)})}}}if(x.size==b.length)break}},$.prototype.positionNodesRadially=function(b){for(var x=new g(0,0),K=Math.ceil(Math.sqrt(b.length)),X=0,v=0,A=0,w=new P(0,0),O=0;O<b.length;O++){O%K==0&&(A=0,v=X,O!=0&&(v+=h.DEFAULT_COMPONENT_SEPERATION),X=0);var N=b[O],S=C.findCenterOfTree(N);x.x=A,x.y=v,w=$.radialLayout(N,S,x),w.y>X&&(X=Math.floor(w.y)),A=Math.floor(w.x+h.DEFAULT_COMPONENT_SEPERATION)}this.transform(new P(_.WORLD_CENTER_X-w.x/2,_.WORLD_CENTER_Y-w.y/2))},$.radialLayout=function(b,x,K){var X=Math.max(this.maxDiagonalInTree(b),h.DEFAULT_RADIAL_SEPARATION);$.branchRadialLayout(x,null,0,359,0,X);var v=B.calculateBounds(b),A=new D;A.setDeviceOrgX(v.getMinX()),A.setDeviceOrgY(v.getMinY()),A.setWorldOrgX(K.x),A.setWorldOrgY(K.y);for(var w=0;w<b.length;w++){var O=b[w];O.transform(A)}var N=new P(v.getMaxX(),v.getMaxY());return A.inverseTransformPoint(N)},$.branchRadialLayout=function(b,x,K,X,v,A){var w=(X-K+1)/2;w<0&&(w+=180);var O=(w+K)%360,N=O*T.TWO_PI/360,S=Math.cos(N),I=v*Math.cos(N),q=v*Math.sin(N);b.setCenter(I,q);var Y=[];Y=Y.concat(b.getEdges());var ee=Y.length;x!=null&&ee--;for(var Q=0,U=Y.length,J,F=b.getEdgesBetween(x);F.length>1;){var W=F[0];F.splice(0,1);var L=Y.indexOf(W);L>=0&&Y.splice(L,1),U--,ee--}x!=null?J=(Y.indexOf(F[0])+1)%U:J=0;for(var z=Math.abs(X-K)/ee,ne=J;Q!=ee;ne=++ne%U){var H=Y[ne].getOtherEnd(b);if(H!=x){var _e=(K+Q*z)%360,Ae=(_e+z)%360;$.branchRadialLayout(H,b,_e,Ae,v+A,A),Q++}}},$.maxDiagonalInTree=function(b){for(var x=E.MIN_VALUE,K=0;K<b.length;K++){var X=b[K],v=X.getDiagonal();v>x&&(x=v)}return x},$.prototype.calcRepulsionRange=function(){return 2*(this.level+1)*this.idealEdgeLength},$.prototype.groupZeroDegreeMembers=function(){var b=this,x={};this.memberGroups={},this.idToDummyNode={};for(var K=[],X=this.graphManager.getAllNodes(),v=0;v<X.length;v++){var A=X[v],w=A.getParent();this.getNodeDegreeWithChildren(A)===0&&(w.id==null||!this.getToBeTiled(w))&&K.push(A)}for(var v=0;v<K.length;v++){var A=K[v],O=A.getParent().id;typeof x[O]>"u"&&(x[O]=[]),x[O]=x[O].concat(A)}Object.keys(x).forEach(function(N){if(x[N].length>1){var S="DummyCompound_"+N;b.memberGroups[S]=x[N];var I=x[N][0].getParent(),q=new d(b.graphManager);q.id=S,q.paddingLeft=I.paddingLeft||0,q.paddingRight=I.paddingRight||0,q.paddingBottom=I.paddingBottom||0,q.paddingTop=I.paddingTop||0,b.idToDummyNode[S]=q;var Y=b.getGraphManager().add(b.newGraph(),q),ee=I.getChild();ee.add(q);for(var Q=0;Q<x[N].length;Q++){var U=x[N][Q];ee.remove(U),Y.add(U)}}})},$.prototype.clearCompounds=function(){var b={},x={};this.performDFSOnCompounds();for(var K=0;K<this.compoundOrder.length;K++)x[this.compoundOrder[K].id]=this.compoundOrder[K],b[this.compoundOrder[K].id]=[].concat(this.compoundOrder[K].getChild().getNodes()),this.graphManager.remove(this.compoundOrder[K].getChild()),this.compoundOrder[K].child=null;this.graphManager.resetAllNodes(),this.tileCompoundMembers(b,x)},$.prototype.clearZeroDegreeMembers=function(){var b=this,x=this.tiledZeroDegreePack=[];Object.keys(this.memberGroups).forEach(function(K){var X=b.idToDummyNode[K];if(x[K]=b.tileNodes(b.memberGroups[K],X.paddingLeft+X.paddingRight),X.rect.width=x[K].width,X.rect.height=x[K].height,X.setCenter(x[K].centerX,x[K].centerY),X.labelMarginLeft=0,X.labelMarginTop=0,h.NODE_DIMENSIONS_INCLUDE_LABELS){var v=X.rect.width,A=X.rect.height;X.labelWidth&&(X.labelPosHorizontal=="left"?(X.rect.x-=X.labelWidth,X.setWidth(v+X.labelWidth),X.labelMarginLeft=X.labelWidth):X.labelPosHorizontal=="center"&&X.labelWidth>v?(X.rect.x-=(X.labelWidth-v)/2,X.setWidth(X.labelWidth),X.labelMarginLeft=(X.labelWidth-v)/2):X.labelPosHorizontal=="right"&&X.setWidth(v+X.labelWidth)),X.labelHeight&&(X.labelPosVertical=="top"?(X.rect.y-=X.labelHeight,X.setHeight(A+X.labelHeight),X.labelMarginTop=X.labelHeight):X.labelPosVertical=="center"&&X.labelHeight>A?(X.rect.y-=(X.labelHeight-A)/2,X.setHeight(X.labelHeight),X.labelMarginTop=(X.labelHeight-A)/2):X.labelPosVertical=="bottom"&&X.setHeight(A+X.labelHeight))}})},$.prototype.repopulateCompounds=function(){for(var b=this.compoundOrder.length-1;b>=0;b--){var x=this.compoundOrder[b],K=x.id,X=x.paddingLeft,v=x.paddingTop,A=x.labelMarginLeft,w=x.labelMarginTop;this.adjustLocations(this.tiledMemberPack[K],x.rect.x,x.rect.y,X,v,A,w)}},$.prototype.repopulateZeroDegreeMembers=function(){var b=this,x=this.tiledZeroDegreePack;Object.keys(x).forEach(function(K){var X=b.idToDummyNode[K],v=X.paddingLeft,A=X.paddingTop,w=X.labelMarginLeft,O=X.labelMarginTop;b.adjustLocations(x[K],X.rect.x,X.rect.y,v,A,w,O)})},$.prototype.getToBeTiled=function(b){var x=b.id;if(this.toBeTiled[x]!=null)return this.toBeTiled[x];var K=b.getChild();if(K==null)return this.toBeTiled[x]=!1,!1;for(var X=K.getNodes(),v=0;v<X.length;v++){var A=X[v];if(this.getNodeDegree(A)>0)return this.toBeTiled[x]=!1,!1;if(A.getChild()==null){this.toBeTiled[A.id]=!1;continue}if(!this.getToBeTiled(A))return this.toBeTiled[x]=!1,!1}return this.toBeTiled[x]=!0,!0},$.prototype.getNodeDegree=function(b){for(var x=b.id,K=b.getEdges(),X=0,v=0;v<K.length;v++){var A=K[v];A.getSource().id!==A.getTarget().id&&(X=X+1)}return X},$.prototype.getNodeDegreeWithChildren=function(b){var x=this.getNodeDegree(b);if(b.getChild()==null)return x;for(var K=b.getChild().getNodes(),X=0;X<K.length;X++){var v=K[X];x+=this.getNodeDegreeWithChildren(v)}return x},$.prototype.performDFSOnCompounds=function(){this.compoundOrder=[],this.fillCompexOrderByDFS(this.graphManager.getRoot().getNodes())},$.prototype.fillCompexOrderByDFS=function(b){for(var x=0;x<b.length;x++){var K=b[x];K.getChild()!=null&&this.fillCompexOrderByDFS(K.getChild().getNodes()),this.getToBeTiled(K)&&this.compoundOrder.push(K)}},$.prototype.adjustLocations=function(b,x,K,X,v,A,w){x+=X+A,K+=v+w;for(var O=x,N=0;N<b.rows.length;N++){var S=b.rows[N];x=O;for(var I=0,q=0;q<S.length;q++){var Y=S[q];Y.rect.x=x,Y.rect.y=K,x+=Y.rect.width+b.horizontalPadding,Y.rect.height>I&&(I=Y.rect.height)}K+=I+b.verticalPadding}},$.prototype.tileCompoundMembers=function(b,x){var K=this;this.tiledMemberPack=[],Object.keys(b).forEach(function(X){var v=x[X];if(K.tiledMemberPack[X]=K.tileNodes(b[X],v.paddingLeft+v.paddingRight),v.rect.width=K.tiledMemberPack[X].width,v.rect.height=K.tiledMemberPack[X].height,v.setCenter(K.tiledMemberPack[X].centerX,K.tiledMemberPack[X].centerY),v.labelMarginLeft=0,v.labelMarginTop=0,h.NODE_DIMENSIONS_INCLUDE_LABELS){var A=v.rect.width,w=v.rect.height;v.labelWidth&&(v.labelPosHorizontal=="left"?(v.rect.x-=v.labelWidth,v.setWidth(A+v.labelWidth),v.labelMarginLeft=v.labelWidth):v.labelPosHorizontal=="center"&&v.labelWidth>A?(v.rect.x-=(v.labelWidth-A)/2,v.setWidth(v.labelWidth),v.labelMarginLeft=(v.labelWidth-A)/2):v.labelPosHorizontal=="right"&&v.setWidth(A+v.labelWidth)),v.labelHeight&&(v.labelPosVertical=="top"?(v.rect.y-=v.labelHeight,v.setHeight(w+v.labelHeight),v.labelMarginTop=v.labelHeight):v.labelPosVertical=="center"&&v.labelHeight>w?(v.rect.y-=(v.labelHeight-w)/2,v.setHeight(v.labelHeight),v.labelMarginTop=(v.labelHeight-w)/2):v.labelPosVertical=="bottom"&&v.setHeight(w+v.labelHeight))}})},$.prototype.tileNodes=function(b,x){var K=this.tileNodesByFavoringDim(b,x,!0),X=this.tileNodesByFavoringDim(b,x,!1),v=this.getOrgRatio(K),A=this.getOrgRatio(X),w;return A<v?w=X:w=K,w},$.prototype.getOrgRatio=function(b){var x=b.width,K=b.height,X=x/K;return X<1&&(X=1/X),X},$.prototype.calcIdealRowWidth=function(b,x){var K=h.TILING_PADDING_VERTICAL,X=h.TILING_PADDING_HORIZONTAL,v=b.length,A=0,w=0,O=0;b.forEach(function(Q){A+=Q.getWidth(),w+=Q.getHeight(),Q.getWidth()>O&&(O=Q.getWidth())});var N=A/v,S=w/v,I=Math.pow(K-X,2)+4*(N+X)*(S+K)*v,q=(X-K+Math.sqrt(I))/(2*(N+X)),Y;x?(Y=Math.ceil(q),Y==q&&Y++):Y=Math.floor(q);var ee=Y*(N+X)-X;return O>ee&&(ee=O),ee+=X*2,ee},$.prototype.tileNodesByFavoringDim=function(b,x,K){var X=h.TILING_PADDING_VERTICAL,v=h.TILING_PADDING_HORIZONTAL,A=h.TILING_COMPARE_BY,w={rows:[],rowWidth:[],rowHeight:[],width:0,height:x,verticalPadding:X,horizontalPadding:v,centerX:0,centerY:0};A&&(w.idealRowWidth=this.calcIdealRowWidth(b,K));var O=function(U){return U.rect.width*U.rect.height},N=function(U,J){return O(J)-O(U)};b.sort(function(Q,U){var J=N;return w.idealRowWidth?(J=A,J(Q.id,U.id)):J(Q,U)});for(var S=0,I=0,q=0;q<b.length;q++){var Y=b[q];S+=Y.getCenterX(),I+=Y.getCenterY()}w.centerX=S/b.length,w.centerY=I/b.length;for(var q=0;q<b.length;q++){var Y=b[q];if(w.rows.length==0)this.insertNodeToRow(w,Y,0,x);else if(this.canAddHorizontal(w,Y.rect.width,Y.rect.height)){var ee=w.rows.length-1;w.idealRowWidth||(ee=this.getShortestRowIndex(w)),this.insertNodeToRow(w,Y,ee,x)}else this.insertNodeToRow(w,Y,w.rows.length,x);this.shiftToLastRow(w)}return w},$.prototype.insertNodeToRow=function(b,x,K,X){var v=X;if(K==b.rows.length){var A=[];b.rows.push(A),b.rowWidth.push(v),b.rowHeight.push(0)}var w=b.rowWidth[K]+x.rect.width;b.rows[K].length>0&&(w+=b.horizontalPadding),b.rowWidth[K]=w,b.width<w&&(b.width=w);var O=x.rect.height;K>0&&(O+=b.verticalPadding);var N=0;O>b.rowHeight[K]&&(N=b.rowHeight[K],b.rowHeight[K]=O,N=b.rowHeight[K]-N),b.height+=N,b.rows[K].push(x)},$.prototype.getShortestRowIndex=function(b){for(var x=-1,K=Number.MAX_VALUE,X=0;X<b.rows.length;X++)b.rowWidth[X]<K&&(x=X,K=b.rowWidth[X]);return x},$.prototype.getLongestRowIndex=function(b){for(var x=-1,K=Number.MIN_VALUE,X=0;X<b.rows.length;X++)b.rowWidth[X]>K&&(x=X,K=b.rowWidth[X]);return x},$.prototype.canAddHorizontal=function(b,x,K){if(b.idealRowWidth){var X=b.rows.length-1,v=b.rowWidth[X];return v+x+b.horizontalPadding<=b.idealRowWidth}var A=this.getShortestRowIndex(b);if(A<0)return!0;var w=b.rowWidth[A];if(w+b.horizontalPadding+x<=b.width)return!0;var O=0;b.rowHeight[A]<K&&A>0&&(O=K+b.verticalPadding-b.rowHeight[A]);var N;b.width-w>=x+b.horizontalPadding?N=(b.height+O)/(w+x+b.horizontalPadding):N=(b.height+O)/b.width,O=K+b.verticalPadding;var S;return b.width<x?S=(b.height+O)/x:S=(b.height+O)/b.width,S<1&&(S=1/S),N<1&&(N=1/N),N<S},$.prototype.shiftToLastRow=function(b){var x=this.getLongestRowIndex(b),K=b.rowWidth.length-1,X=b.rows[x],v=X[X.length-1],A=v.width+b.horizontalPadding;if(b.width-b.rowWidth[K]>A&&x!=K){X.splice(-1,1),b.rows[K].push(v),b.rowWidth[x]=b.rowWidth[x]-A,b.rowWidth[K]=b.rowWidth[K]+A,b.width=b.rowWidth[instance.getLongestRowIndex(b)];for(var w=Number.MIN_VALUE,O=0;O<X.length;O++)X[O].height>w&&(w=X[O].height);x>0&&(w+=b.verticalPadding);var N=b.rowHeight[x]+b.rowHeight[K];b.rowHeight[x]=w,b.rowHeight[K]<v.height+b.verticalPadding&&(b.rowHeight[K]=v.height+b.verticalPadding);var S=b.rowHeight[x]+b.rowHeight[K];b.height+=S-N,this.shiftToLastRow(b)}},$.prototype.tilingPreLayout=function(){h.TILE&&(this.groupZeroDegreeMembers(),this.clearCompounds(),this.clearZeroDegreeMembers())},$.prototype.tilingPostLayout=function(){h.TILE&&(this.repopulateZeroDegreeMembers(),this.repopulateCompounds())},$.prototype.reduceTrees=function(){for(var b=[],x=!0,K;x;){var X=this.graphManager.getAllNodes(),v=[];x=!1;for(var A=0;A<X.length;A++)if(K=X[A],K.getEdges().length==1&&!K.getEdges()[0].isInterGraph&&K.getChild()==null){if(h.PURE_INCREMENTAL){var w=K.getEdges()[0].getOtherEnd(K),O=new y(K.getCenterX()-w.getCenterX(),K.getCenterY()-w.getCenterY());v.push([K,K.getEdges()[0],K.getOwner(),O])}else v.push([K,K.getEdges()[0],K.getOwner()]);x=!0}if(x==!0){for(var N=[],S=0;S<v.length;S++)v[S][0].getEdges().length==1&&(N.push(v[S]),v[S][0].getOwner().remove(v[S][0]));b.push(N),this.graphManager.resetAllNodes(),this.graphManager.resetAllEdges()}}this.prunedNodesAll=b},$.prototype.growTree=function(b){for(var x=b.length,K=b[x-1],X,v=0;v<K.length;v++)X=K[v],this.findPlaceforPrunedNode(X),X[2].add(X[0]),X[2].add(X[1],X[1].source,X[1].target);b.splice(b.length-1,1),this.graphManager.resetAllNodes(),this.graphManager.resetAllEdges()},$.prototype.findPlaceforPrunedNode=function(b){var x,K,X=b[0];if(X==b[1].source?K=b[1].target:K=b[1].source,h.PURE_INCREMENTAL)X.setCenter(K.getCenterX()+b[3].getWidth(),K.getCenterY()+b[3].getHeight());else{var v=K.startX,A=K.finishX,w=K.startY,O=K.finishY,N=0,S=0,I=0,q=0,Y=[N,I,S,q];if(w>0)for(var ee=v;ee<=A;ee++)Y[0]+=this.grid[ee][w-1].length+this.grid[ee][w].length-1;if(A<this.grid.length-1)for(var ee=w;ee<=O;ee++)Y[1]+=this.grid[A+1][ee].length+this.grid[A][ee].length-1;if(O<this.grid[0].length-1)for(var ee=v;ee<=A;ee++)Y[2]+=this.grid[ee][O+1].length+this.grid[ee][O].length-1;if(v>0)for(var ee=w;ee<=O;ee++)Y[3]+=this.grid[v-1][ee].length+this.grid[v][ee].length-1;for(var Q=E.MAX_VALUE,U,J,F=0;F<Y.length;F++)Y[F]<Q?(Q=Y[F],U=1,J=F):Y[F]==Q&&U++;if(U==3&&Q==0)Y[0]==0&&Y[1]==0&&Y[2]==0?x=1:Y[0]==0&&Y[1]==0&&Y[3]==0?x=0:Y[0]==0&&Y[2]==0&&Y[3]==0?x=3:Y[1]==0&&Y[2]==0&&Y[3]==0&&(x=2);else if(U==2&&Q==0){var W=Math.floor(Math.random()*2);Y[0]==0&&Y[1]==0?W==0?x=0:x=1:Y[0]==0&&Y[2]==0?W==0?x=0:x=2:Y[0]==0&&Y[3]==0?W==0?x=0:x=3:Y[1]==0&&Y[2]==0?W==0?x=1:x=2:Y[1]==0&&Y[3]==0?W==0?x=1:x=3:W==0?x=2:x=3}else if(U==4&&Q==0){var W=Math.floor(Math.random()*4);x=W}else x=J;x==0?X.setCenter(K.getCenterX(),K.getCenterY()-K.getHeight()/2-m.DEFAULT_EDGE_LENGTH-X.getHeight()/2):x==1?X.setCenter(K.getCenterX()+K.getWidth()/2+m.DEFAULT_EDGE_LENGTH+X.getWidth()/2,K.getCenterY()):x==2?X.setCenter(K.getCenterX(),K.getCenterY()+K.getHeight()/2+m.DEFAULT_EDGE_LENGTH+X.getHeight()/2):X.setCenter(K.getCenterX()-K.getWidth()/2-m.DEFAULT_EDGE_LENGTH-X.getWidth()/2,K.getCenterY())}},i.exports=$},991:(i,o,s)=>{var l=s(551).FDLayoutNode,c=s(551).IMath;function u(f,h,p,m){l.call(this,f,h,p,m)}u.prototype=Object.create(l.prototype);for(var d in l)u[d]=l[d];u.prototype.calculateDisplacement=function(){var f=this.graphManager.getLayout();this.getChild()!=null&&this.fixedNodeWeight?(this.displacementX+=f.coolingFactor*(this.springForceX+this.repulsionForceX+this.gravitationForceX)/this.fixedNodeWeight,this.displacementY+=f.coolingFactor*(this.springForceY+this.repulsionForceY+this.gravitationForceY)/this.fixedNodeWeight):(this.displacementX+=f.coolingFactor*(this.springForceX+this.repulsionForceX+this.gravitationForceX)/this.noOfChildren,this.displacementY+=f.coolingFactor*(this.springForceY+this.repulsionForceY+this.gravitationForceY)/this.noOfChildren),Math.abs(this.displacementX)>f.coolingFactor*f.maxNodeDisplacement&&(this.displacementX=f.coolingFactor*f.maxNodeDisplacement*c.sign(this.displacementX)),Math.abs(this.displacementY)>f.coolingFactor*f.maxNodeDisplacement&&(this.displacementY=f.coolingFactor*f.maxNodeDisplacement*c.sign(this.displacementY)),this.child&&this.child.getNodes().length>0&&this.propogateDisplacementToChildren(this.displacementX,this.displacementY)},u.prototype.propogateDisplacementToChildren=function(f,h){for(var p=this.getChild().getNodes(),m,_=0;_<p.length;_++)m=p[_],m.getChild()==null?(m.displacementX+=f,m.displacementY+=h):m.propogateDisplacementToChildren(f,h)},u.prototype.move=function(){var f=this.graphManager.getLayout();(this.child==null||this.child.getNodes().length==0)&&(this.moveBy(this.displacementX,this.displacementY),f.totalDisplacement+=Math.abs(this.displacementX)+Math.abs(this.displacementY)),this.springForceX=0,this.springForceY=0,this.repulsionForceX=0,this.repulsionForceY=0,this.gravitationForceX=0,this.gravitationForceY=0,this.displacementX=0,this.displacementY=0},u.prototype.setPred1=function(f){this.pred1=f},u.prototype.getPred1=function(){return pred1},u.prototype.getPred2=function(){return pred2},u.prototype.setNext=function(f){this.next=f},u.prototype.getNext=function(){return next},u.prototype.setProcessed=function(f){this.processed=f},u.prototype.isProcessed=function(){return processed},i.exports=u},902:(i,o,s)=>{function l(p){if(Array.isArray(p)){for(var m=0,_=Array(p.length);m<p.length;m++)_[m]=p[m];return _}else return Array.from(p)}var c=s(806),u=s(551).LinkedList,d=s(551).Matrix,f=s(551).SVD;function h(){}h.handleConstraints=function(p){var m={};m.fixedNodeConstraint=p.constraints.fixedNodeConstraint,m.alignmentConstraint=p.constraints.alignmentConstraint,m.relativePlacementConstraint=p.constraints.relativePlacementConstraint;for(var _=new Map,g=new Map,P=[],y=[],C=p.getAllNodes(),E=0,T=0;T<C.length;T++){var B=C[T];B.getChild()==null&&(g.set(B.id,E++),P.push(B.getCenterX()),y.push(B.getCenterY()),_.set(B.id,B))}m.relativePlacementConstraint&&m.relativePlacementConstraint.forEach(function(V){!V.gap&&V.gap!=0&&(V.left?V.gap=c.DEFAULT_EDGE_LENGTH+_.get(V.left).getWidth()/2+_.get(V.right).getWidth()/2:V.gap=c.DEFAULT_EDGE_LENGTH+_.get(V.top).getHeight()/2+_.get(V.bottom).getHeight()/2)});var D=function(Z,oe){return{x:Z.x-oe.x,y:Z.y-oe.y}},k=function(Z){var oe=0,re=0;return Z.forEach(function(se){oe+=P[g.get(se)],re+=y[g.get(se)]}),{x:oe/Z.size,y:re/Z.size}},$=function(Z,oe,re,se,pe){function ke(Ie,$e){var Fe=new Set(Ie),Me=!0,Le=!1,an=void 0;try{for(var on=$e[Symbol.iterator](),Pn;!(Me=(Pn=on.next()).done);Me=!0){var en=Pn.value;Fe.add(en)}}catch(Je){Le=!0,an=Je}finally{try{!Me&&on.return&&on.return()}finally{if(Le)throw an}}return Fe}var be=new Map;Z.forEach(function(Ie,$e){be.set($e,0)}),Z.forEach(function(Ie,$e){Ie.forEach(function(Fe){be.set(Fe.id,be.get(Fe.id)+1)})});var me=new Map,Ee=new Map,Te=new u;be.forEach(function(Ie,$e){Ie==0?(Te.push($e),re||(oe=="horizontal"?me.set($e,g.has($e)?P[g.get($e)]:se.get($e)):me.set($e,g.has($e)?y[g.get($e)]:se.get($e)))):me.set($e,Number.NEGATIVE_INFINITY),re&&Ee.set($e,new Set([$e]))}),re&&pe.forEach(function(Ie){var $e=[];if(Ie.forEach(function(Le){re.has(Le)&&$e.push(Le)}),$e.length>0){var Fe=0;$e.forEach(function(Le){oe=="horizontal"?(me.set(Le,g.has(Le)?P[g.get(Le)]:se.get(Le)),Fe+=me.get(Le)):(me.set(Le,g.has(Le)?y[g.get(Le)]:se.get(Le)),Fe+=me.get(Le))}),Fe=Fe/$e.length,Ie.forEach(function(Le){re.has(Le)||me.set(Le,Fe)})}else{var Me=0;Ie.forEach(function(Le){oe=="horizontal"?Me+=g.has(Le)?P[g.get(Le)]:se.get(Le):Me+=g.has(Le)?y[g.get(Le)]:se.get(Le)}),Me=Me/Ie.length,Ie.forEach(function(Le){me.set(Le,Me)})}});for(var De=function(){var $e=Te.shift(),Fe=Z.get($e);Fe.forEach(function(Me){if(me.get(Me.id)<me.get($e)+Me.gap)if(re&&re.has(Me.id)){var Le=void 0;if(oe=="horizontal"?Le=g.has(Me.id)?P[g.get(Me.id)]:se.get(Me.id):Le=g.has(Me.id)?y[g.get(Me.id)]:se.get(Me.id),me.set(Me.id,Le),Le<me.get($e)+Me.gap){var an=me.get($e)+Me.gap-Le;Ee.get($e).forEach(function(on){me.set(on,me.get(on)-an)})}}else me.set(Me.id,me.get($e)+Me.gap);be.set(Me.id,be.get(Me.id)-1),be.get(Me.id)==0&&Te.push(Me.id),re&&Ee.set(Me.id,ke(Ee.get($e),Ee.get(Me.id)))})};Te.length!=0;)De();if(re){var Re=new Set;Z.forEach(function(Ie,$e){Ie.length==0&&Re.add($e)});var Ge=[];Ee.forEach(function(Ie,$e){if(Re.has($e)){var Fe=!1,Me=!0,Le=!1,an=void 0;try{for(var on=Ie[Symbol.iterator](),Pn;!(Me=(Pn=on.next()).done);Me=!0){var en=Pn.value;re.has(en)&&(Fe=!0)}}catch(Qe){Le=!0,an=Qe}finally{try{!Me&&on.return&&on.return()}finally{if(Le)throw an}}if(!Fe){var Je=!1,$n=void 0;Ge.forEach(function(Qe,cn){Qe.has([].concat(l(Ie))[0])&&(Je=!0,$n=cn)}),Je?Ie.forEach(function(Qe){Ge[$n].add(Qe)}):Ge.push(new Set(Ie))}}}),Ge.forEach(function(Ie,$e){var Fe=Number.POSITIVE_INFINITY,Me=Number.POSITIVE_INFINITY,Le=Number.NEGATIVE_INFINITY,an=Number.NEGATIVE_INFINITY,on=!0,Pn=!1,en=void 0;try{for(var Je=Ie[Symbol.iterator](),$n;!(on=($n=Je.next()).done);on=!0){var Qe=$n.value,cn=void 0;oe=="horizontal"?cn=g.has(Qe)?P[g.get(Qe)]:se.get(Qe):cn=g.has(Qe)?y[g.get(Qe)]:se.get(Qe);var gn=me.get(Qe);cn<Fe&&(Fe=cn),cn>Le&&(Le=cn),gn<Me&&(Me=gn),gn>an&&(an=gn)}}catch(Xr){Pn=!0,en=Xr}finally{try{!on&&Je.return&&Je.return()}finally{if(Pn)throw en}}var vr=(Fe+Le)/2-(Me+an)/2,jn=!0,lr=!1,br=void 0;try{for(var ur=Ie[Symbol.iterator](),ba;!(jn=(ba=ur.next()).done);jn=!0){var yr=ba.value;me.set(yr,me.get(yr)+vr)}}catch(Xr){lr=!0,br=Xr}finally{try{!jn&&ur.return&&ur.return()}finally{if(lr)throw br}}})}return me},M=function(Z){var oe=0,re=0,se=0,pe=0;if(Z.forEach(function(Ee){Ee.left?P[g.get(Ee.left)]-P[g.get(Ee.right)]>=0?oe++:re++:y[g.get(Ee.top)]-y[g.get(Ee.bottom)]>=0?se++:pe++}),oe>re&&se>pe)for(var ke=0;ke<g.size;ke++)P[ke]=-1*P[ke],y[ke]=-1*y[ke];else if(oe>re)for(var be=0;be<g.size;be++)P[be]=-1*P[be];else if(se>pe)for(var me=0;me<g.size;me++)y[me]=-1*y[me]},b=function(Z){var oe=[],re=new u,se=new Set,pe=0;return Z.forEach(function(ke,be){if(!se.has(be)){oe[pe]=[];var me=be;for(re.push(me),se.add(me),oe[pe].push(me);re.length!=0;){me=re.shift();var Ee=Z.get(me);Ee.forEach(function(Te){se.has(Te.id)||(re.push(Te.id),se.add(Te.id),oe[pe].push(Te.id))})}pe++}}),oe},x=function(Z){var oe=new Map;return Z.forEach(function(re,se){oe.set(se,[])}),Z.forEach(function(re,se){re.forEach(function(pe){oe.get(se).push(pe),oe.get(pe.id).push({id:se,gap:pe.gap,direction:pe.direction})})}),oe},K=function(Z){var oe=new Map;return Z.forEach(function(re,se){oe.set(se,[])}),Z.forEach(function(re,se){re.forEach(function(pe){oe.get(pe.id).push({id:se,gap:pe.gap,direction:pe.direction})})}),oe},X=[],v=[],A=!1,w=!1,O=new Set,N=new Map,S=new Map,I=[];if(m.fixedNodeConstraint&&m.fixedNodeConstraint.forEach(function(V){O.add(V.nodeId)}),m.relativePlacementConstraint&&(m.relativePlacementConstraint.forEach(function(V){V.left?(N.has(V.left)?N.get(V.left).push({id:V.right,gap:V.gap,direction:"horizontal"}):N.set(V.left,[{id:V.right,gap:V.gap,direction:"horizontal"}]),N.has(V.right)||N.set(V.right,[])):(N.has(V.top)?N.get(V.top).push({id:V.bottom,gap:V.gap,direction:"vertical"}):N.set(V.top,[{id:V.bottom,gap:V.gap,direction:"vertical"}]),N.has(V.bottom)||N.set(V.bottom,[]))}),S=x(N),I=b(S)),c.TRANSFORM_ON_CONSTRAINT_HANDLING){if(m.fixedNodeConstraint&&m.fixedNodeConstraint.length>1)m.fixedNodeConstraint.forEach(function(V,Z){X[Z]=[V.position.x,V.position.y],v[Z]=[P[g.get(V.nodeId)],y[g.get(V.nodeId)]]}),A=!0;else if(m.alignmentConstraint)(function(){var V=0;if(m.alignmentConstraint.vertical){for(var Z=m.alignmentConstraint.vertical,oe=function(me){var Ee=new Set;Z[me].forEach(function(Re){Ee.add(Re)});var Te=new Set([].concat(l(Ee)).filter(function(Re){return O.has(Re)})),De=void 0;Te.size>0?De=P[g.get(Te.values().next().value)]:De=k(Ee).x,Z[me].forEach(function(Re){X[V]=[De,y[g.get(Re)]],v[V]=[P[g.get(Re)],y[g.get(Re)]],V++})},re=0;re<Z.length;re++)oe(re);A=!0}if(m.alignmentConstraint.horizontal){for(var se=m.alignmentConstraint.horizontal,pe=function(me){var Ee=new Set;se[me].forEach(function(Re){Ee.add(Re)});var Te=new Set([].concat(l(Ee)).filter(function(Re){return O.has(Re)})),De=void 0;Te.size>0?De=P[g.get(Te.values().next().value)]:De=k(Ee).y,se[me].forEach(function(Re){X[V]=[P[g.get(Re)],De],v[V]=[P[g.get(Re)],y[g.get(Re)]],V++})},ke=0;ke<se.length;ke++)pe(ke);A=!0}m.relativePlacementConstraint&&(w=!0)})();else if(m.relativePlacementConstraint){for(var q=0,Y=0,ee=0;ee<I.length;ee++)I[ee].length>q&&(q=I[ee].length,Y=ee);if(q<S.size/2)M(m.relativePlacementConstraint),A=!1,w=!1;else{var Q=new Map,U=new Map,J=[];I[Y].forEach(function(V){N.get(V).forEach(function(Z){Z.direction=="horizontal"?(Q.has(V)?Q.get(V).push(Z):Q.set(V,[Z]),Q.has(Z.id)||Q.set(Z.id,[]),J.push({left:V,right:Z.id})):(U.has(V)?U.get(V).push(Z):U.set(V,[Z]),U.has(Z.id)||U.set(Z.id,[]),J.push({top:V,bottom:Z.id}))})}),M(J),w=!1;var F=$(Q,"horizontal"),W=$(U,"vertical");I[Y].forEach(function(V,Z){v[Z]=[P[g.get(V)],y[g.get(V)]],X[Z]=[],F.has(V)?X[Z][0]=F.get(V):X[Z][0]=P[g.get(V)],W.has(V)?X[Z][1]=W.get(V):X[Z][1]=y[g.get(V)]}),A=!0}}if(A){for(var L=void 0,z=d.transpose(X),ne=d.transpose(v),H=0;H<z.length;H++)z[H]=d.multGamma(z[H]),ne[H]=d.multGamma(ne[H]);var _e=d.multMat(z,d.transpose(ne)),Ae=f.svd(_e);L=d.multMat(Ae.V,d.transpose(Ae.U));for(var he=0;he<g.size;he++){var le=[P[he],y[he]],de=[L[0][0],L[1][0]],Pe=[L[0][1],L[1][1]];P[he]=d.dotProduct(le,de),y[he]=d.dotProduct(le,Pe)}w&&M(m.relativePlacementConstraint)}}if(c.ENFORCE_CONSTRAINTS){if(m.fixedNodeConstraint&&m.fixedNodeConstraint.length>0){var Ce={x:0,y:0};m.fixedNodeConstraint.forEach(function(V,Z){var oe={x:P[g.get(V.nodeId)],y:y[g.get(V.nodeId)]},re=V.position,se=D(re,oe);Ce.x+=se.x,Ce.y+=se.y}),Ce.x/=m.fixedNodeConstraint.length,Ce.y/=m.fixedNodeConstraint.length,P.forEach(function(V,Z){P[Z]+=Ce.x}),y.forEach(function(V,Z){y[Z]+=Ce.y}),m.fixedNodeConstraint.forEach(function(V){P[g.get(V.nodeId)]=V.position.x,y[g.get(V.nodeId)]=V.position.y})}if(m.alignmentConstraint){if(m.alignmentConstraint.vertical)for(var Xe=m.alignmentConstraint.vertical,ve=function(Z){var oe=new Set;Xe[Z].forEach(function(pe){oe.add(pe)});var re=new Set([].concat(l(oe)).filter(function(pe){return O.has(pe)})),se=void 0;re.size>0?se=P[g.get(re.values().next().value)]:se=k(oe).x,oe.forEach(function(pe){O.has(pe)||(P[g.get(pe)]=se)})},xe=0;xe<Xe.length;xe++)ve(xe);if(m.alignmentConstraint.horizontal)for(var ye=m.alignmentConstraint.horizontal,fe=function(Z){var oe=new Set;ye[Z].forEach(function(pe){oe.add(pe)});var re=new Set([].concat(l(oe)).filter(function(pe){return O.has(pe)})),se=void 0;re.size>0?se=y[g.get(re.values().next().value)]:se=k(oe).y,oe.forEach(function(pe){O.has(pe)||(y[g.get(pe)]=se)})},R=0;R<ye.length;R++)fe(R)}m.relativePlacementConstraint&&function(){var V=new Map,Z=new Map,oe=new Map,re=new Map,se=new Map,pe=new Map,ke=new Set,be=new Set;if(O.forEach(function(Wn){ke.add(Wn),be.add(Wn)}),m.alignmentConstraint){if(m.alignmentConstraint.vertical)for(var me=m.alignmentConstraint.vertical,Ee=function(He){oe.set("dummy"+He,[]),me[He].forEach(function(Ze){V.set(Ze,"dummy"+He),oe.get("dummy"+He).push(Ze),O.has(Ze)&&ke.add("dummy"+He)}),se.set("dummy"+He,P[g.get(me[He][0])])},Te=0;Te<me.length;Te++)Ee(Te);if(m.alignmentConstraint.horizontal)for(var De=m.alignmentConstraint.horizontal,Re=function(He){re.set("dummy"+He,[]),De[He].forEach(function(Ze){Z.set(Ze,"dummy"+He),re.get("dummy"+He).push(Ze),O.has(Ze)&&be.add("dummy"+He)}),pe.set("dummy"+He,y[g.get(De[He][0])])},Ge=0;Ge<De.length;Ge++)Re(Ge)}var Ie=new Map,$e=new Map,Fe=function(He){N.get(He).forEach(function(Ze){var Ht=void 0,Bt=void 0;Ze.direction=="horizontal"?(Ht=V.get(He)?V.get(He):He,V.get(Ze.id)?Bt={id:V.get(Ze.id),gap:Ze.gap,direction:Ze.direction}:Bt=Ze,Ie.has(Ht)?Ie.get(Ht).push(Bt):Ie.set(Ht,[Bt]),Ie.has(Bt.id)||Ie.set(Bt.id,[])):(Ht=Z.get(He)?Z.get(He):He,Z.get(Ze.id)?Bt={id:Z.get(Ze.id),gap:Ze.gap,direction:Ze.direction}:Bt=Ze,$e.has(Ht)?$e.get(Ht).push(Bt):$e.set(Ht,[Bt]),$e.has(Bt.id)||$e.set(Bt.id,[]))})},Me=!0,Le=!1,an=void 0;try{for(var on=N.keys()[Symbol.iterator](),Pn;!(Me=(Pn=on.next()).done);Me=!0){var en=Pn.value;Fe(en)}}catch(Wn){Le=!0,an=Wn}finally{try{!Me&&on.return&&on.return()}finally{if(Le)throw an}}var Je=x(Ie),$n=x($e),Qe=b(Je),cn=b($n),gn=K(Ie),vr=K($e),jn=[],lr=[];Qe.forEach(function(Wn,He){jn[He]=[],Wn.forEach(function(Ze){gn.get(Ze).length==0&&jn[He].push(Ze)})}),cn.forEach(function(Wn,He){lr[He]=[],Wn.forEach(function(Ze){vr.get(Ze).length==0&&lr[He].push(Ze)})});var br=$(Ie,"horizontal",ke,se,jn),ur=$($e,"vertical",be,pe,lr),ba=function(He){oe.get(He)?oe.get(He).forEach(function(Ze){P[g.get(Ze)]=br.get(He)}):P[g.get(He)]=br.get(He)},yr=!0,Xr=!1,Ao=void 0;try{for(var yi=br.keys()[Symbol.iterator](),Kr;!(yr=(Kr=yi.next()).done);yr=!0){var Zr=Kr.value;ba(Zr)}}catch(Wn){Xr=!0,Ao=Wn}finally{try{!yr&&yi.return&&yi.return()}finally{if(Xr)throw Ao}}var ya=function(He){re.get(He)?re.get(He).forEach(function(Ze){y[g.get(Ze)]=ur.get(He)}):y[g.get(He)]=ur.get(He)},Xa=!0,Xi=!1,Co=void 0;try{for(var mt=ur.keys()[Symbol.iterator](),Ka;!(Xa=(Ka=mt.next()).done);Xa=!0){var Zr=Ka.value;ya(Zr)}}catch(Wn){Xi=!0,Co=Wn}finally{try{!Xa&&mt.return&&mt.return()}finally{if(Xi)throw Co}}}()}for(var te=0;te<C.length;te++){var ce=C[te];ce.getChild()==null&&ce.setCenter(P[g.get(ce.id)],y[g.get(ce.id)])}},i.exports=h},551:i=>{i.exports=t}},n={};function r(i){var o=n[i];if(o!==void 0)return o.exports;var s=n[i]={exports:{}};return e[i](s,s.exports,r),s.exports}var a=r(45);return a})()})});var hp=xa((Ko,g0)=>{"use strict";(function(e,n){typeof Ko=="object"&&typeof g0=="object"?g0.exports=n(m0()):typeof define=="function"&&define.amd?define(["cose-base"],n):typeof Ko=="object"?Ko.cytoscapeFcose=n(m0()):e.cytoscapeFcose=n(e.coseBase)})(Ko,function(t){return(()=>{"use strict";var e={658:i=>{i.exports=Object.assign!=null?Object.assign.bind(Object):function(o){for(var s=arguments.length,l=Array(s>1?s-1:0),c=1;c<s;c++)l[c-1]=arguments[c];return l.forEach(function(u){Object.keys(u).forEach(function(d){return o[d]=u[d]})}),o}},548:(i,o,s)=>{var l=function(){function d(f,h){var p=[],m=!0,_=!1,g=void 0;try{for(var P=f[Symbol.iterator](),y;!(m=(y=P.next()).done)&&(p.push(y.value),!(h&&p.length===h));m=!0);}catch(C){_=!0,g=C}finally{try{!m&&P.return&&P.return()}finally{if(_)throw g}}return p}return function(f,h){if(Array.isArray(f))return f;if(Symbol.iterator in Object(f))return d(f,h);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),c=s(140).layoutBase.LinkedList,u={};u.getTopMostNodes=function(d){for(var f={},h=0;h<d.length;h++)f[d[h].id()]=!0;var p=d.filter(function(m,_){typeof m=="number"&&(m=_);for(var g=m.parent()[0];g!=null;){if(f[g.id()])return!1;g=g.parent()[0]}return!0});return p},u.connectComponents=function(d,f,h,p){var m=new c,_=new Set,g=[],P=void 0,y=void 0,C=void 0,E=!1,T=1,B=[],D=[],k=function(){var M=d.collection();D.push(M);var b=h[0],x=d.collection();x.merge(b).merge(b.descendants().intersection(f)),g.push(b),x.forEach(function(v){m.push(v),_.add(v),M.merge(v)});for(var K=function(){b=m.shift();var A=d.collection();b.neighborhood().nodes().forEach(function(S){f.intersection(b.edgesWith(S)).length>0&&A.merge(S)});for(var w=0;w<A.length;w++){var O=A[w];if(P=h.intersection(O.union(O.ancestors())),P!=null&&!_.has(P[0])){var N=P.union(P.descendants());N.forEach(function(S){m.push(S),_.add(S),M.merge(S),h.has(S)&&g.push(S)})}}};m.length!=0;)K();if(M.forEach(function(v){f.intersection(v.connectedEdges()).forEach(function(A){M.has(A.source())&&M.has(A.target())&&M.merge(A)})}),g.length==h.length&&(E=!0),!E||E&&T>1){y=g[0],C=y.connectedEdges().length,g.forEach(function(v){v.connectedEdges().length<C&&(C=v.connectedEdges().length,y=v)}),B.push(y.id());var X=d.collection();X.merge(g[0]),g.forEach(function(v){X.merge(v)}),g=[],h=h.difference(X),T++}};do k();while(!E);return p&&B.length>0&&p.set("dummy"+(p.size+1),B),D},u.relocateComponent=function(d,f,h){if(!h.fixedNodeConstraint){var p=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY,_=Number.POSITIVE_INFINITY,g=Number.NEGATIVE_INFINITY;if(h.quality=="draft"){var P=!0,y=!1,C=void 0;try{for(var E=f.nodeIndexes[Symbol.iterator](),T;!(P=(T=E.next()).done);P=!0){var B=T.value,D=l(B,2),k=D[0],$=D[1],M=h.cy.getElementById(k);if(M){var b=M.boundingBox(),x=f.xCoords[$]-b.w/2,K=f.xCoords[$]+b.w/2,X=f.yCoords[$]-b.h/2,v=f.yCoords[$]+b.h/2;x<p&&(p=x),K>m&&(m=K),X<_&&(_=X),v>g&&(g=v)}}}catch(S){y=!0,C=S}finally{try{!P&&E.return&&E.return()}finally{if(y)throw C}}var A=d.x-(m+p)/2,w=d.y-(g+_)/2;f.xCoords=f.xCoords.map(function(S){return S+A}),f.yCoords=f.yCoords.map(function(S){return S+w})}else{Object.keys(f).forEach(function(S){var I=f[S],q=I.getRect().x,Y=I.getRect().x+I.getRect().width,ee=I.getRect().y,Q=I.getRect().y+I.getRect().height;q<p&&(p=q),Y>m&&(m=Y),ee<_&&(_=ee),Q>g&&(g=Q)});var O=d.x-(m+p)/2,N=d.y-(g+_)/2;Object.keys(f).forEach(function(S){var I=f[S];I.setCenter(I.getCenterX()+O,I.getCenterY()+N)})}}},u.calcBoundingBox=function(d,f,h,p){for(var m=Number.MAX_SAFE_INTEGER,_=Number.MIN_SAFE_INTEGER,g=Number.MAX_SAFE_INTEGER,P=Number.MIN_SAFE_INTEGER,y=void 0,C=void 0,E=void 0,T=void 0,B=d.descendants().not(":parent"),D=B.length,k=0;k<D;k++){var $=B[k];y=f[p.get($.id())]-$.width()/2,C=f[p.get($.id())]+$.width()/2,E=h[p.get($.id())]-$.height()/2,T=h[p.get($.id())]+$.height()/2,m>y&&(m=y),_<C&&(_=C),g>E&&(g=E),P<T&&(P=T)}var M={};return M.topLeftX=m,M.topLeftY=g,M.width=_-m,M.height=P-g,M},u.calcParentsWithoutChildren=function(d,f){var h=d.collection();return f.nodes(":parent").forEach(function(p){var m=!1;p.children().forEach(function(_){_.css("display")!="none"&&(m=!0)}),m||h.merge(p)}),h},i.exports=u},816:(i,o,s)=>{var l=s(548),c=s(140).CoSELayout,u=s(140).CoSENode,d=s(140).layoutBase.PointD,f=s(140).layoutBase.DimensionD,h=s(140).layoutBase.LayoutConstants,p=s(140).layoutBase.FDLayoutConstants,m=s(140).CoSEConstants,_=function(P,y){var C=P.cy,E=P.eles,T=E.nodes(),B=E.edges(),D=void 0,k=void 0,$=void 0,M={};P.randomize&&(D=y.nodeIndexes,k=y.xCoords,$=y.yCoords);var b=function(S){return typeof S=="function"},x=function(S,I){return b(S)?S(I):S},K=l.calcParentsWithoutChildren(C,E),X=function N(S,I,q,Y){for(var ee=I.length,Q=0;Q<ee;Q++){var U=I[Q],J=null;U.intersection(K).length==0&&(J=U.children());var F=void 0,W=U.layoutDimensions({nodeDimensionsIncludeLabels:Y.nodeDimensionsIncludeLabels});if(U.outerWidth()!=null&&U.outerHeight()!=null)if(Y.randomize)if(!U.isParent())F=S.add(new u(q.graphManager,new d(k[D.get(U.id())]-W.w/2,$[D.get(U.id())]-W.h/2),new f(parseFloat(W.w),parseFloat(W.h))));else{var L=l.calcBoundingBox(U,k,$,D);U.intersection(K).length==0?F=S.add(new u(q.graphManager,new d(L.topLeftX,L.topLeftY),new f(L.width,L.height))):F=S.add(new u(q.graphManager,new d(L.topLeftX,L.topLeftY),new f(parseFloat(W.w),parseFloat(W.h))))}else F=S.add(new u(q.graphManager,new d(U.position("x")-W.w/2,U.position("y")-W.h/2),new f(parseFloat(W.w),parseFloat(W.h))));else F=S.add(new u(this.graphManager));if(F.id=U.data("id"),F.nodeRepulsion=x(Y.nodeRepulsion,U),F.paddingLeft=parseInt(U.css("padding")),F.paddingTop=parseInt(U.css("padding")),F.paddingRight=parseInt(U.css("padding")),F.paddingBottom=parseInt(U.css("padding")),Y.nodeDimensionsIncludeLabels&&(F.labelWidth=U.boundingBox({includeLabels:!0,includeNodes:!1,includeOverlays:!1}).w,F.labelHeight=U.boundingBox({includeLabels:!0,includeNodes:!1,includeOverlays:!1}).h,F.labelPosVertical=U.css("text-valign"),F.labelPosHorizontal=U.css("text-halign")),M[U.data("id")]=F,isNaN(F.rect.x)&&(F.rect.x=0),isNaN(F.rect.y)&&(F.rect.y=0),J!=null&&J.length>0){var z=void 0;z=q.getGraphManager().add(q.newGraph(),F),N(z,J,q,Y)}}},v=function(S,I,q){for(var Y=0,ee=0,Q=0;Q<q.length;Q++){var U=q[Q],J=M[U.data("source")],F=M[U.data("target")];if(J&&F&&J!==F&&J.getEdgesBetween(F).length==0){var W=I.add(S.newEdge(),J,F);W.id=U.id(),W.idealLength=x(P.idealEdgeLength,U),W.edgeElasticity=x(P.edgeElasticity,U),Y+=W.idealLength,ee++}}P.idealEdgeLength!=null&&(ee>0?m.DEFAULT_EDGE_LENGTH=p.DEFAULT_EDGE_LENGTH=Y/ee:b(P.idealEdgeLength)?m.DEFAULT_EDGE_LENGTH=p.DEFAULT_EDGE_LENGTH=50:m.DEFAULT_EDGE_LENGTH=p.DEFAULT_EDGE_LENGTH=P.idealEdgeLength,m.MIN_REPULSION_DIST=p.MIN_REPULSION_DIST=p.DEFAULT_EDGE_LENGTH/10,m.DEFAULT_RADIAL_SEPARATION=p.DEFAULT_EDGE_LENGTH)},A=function(S,I){I.fixedNodeConstraint&&(S.constraints.fixedNodeConstraint=I.fixedNodeConstraint),I.alignmentConstraint&&(S.constraints.alignmentConstraint=I.alignmentConstraint),I.relativePlacementConstraint&&(S.constraints.relativePlacementConstraint=I.relativePlacementConstraint)};P.nestingFactor!=null&&(m.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=p.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=P.nestingFactor),P.gravity!=null&&(m.DEFAULT_GRAVITY_STRENGTH=p.DEFAULT_GRAVITY_STRENGTH=P.gravity),P.numIter!=null&&(m.MAX_ITERATIONS=p.MAX_ITERATIONS=P.numIter),P.gravityRange!=null&&(m.DEFAULT_GRAVITY_RANGE_FACTOR=p.DEFAULT_GRAVITY_RANGE_FACTOR=P.gravityRange),P.gravityCompound!=null&&(m.DEFAULT_COMPOUND_GRAVITY_STRENGTH=p.DEFAULT_COMPOUND_GRAVITY_STRENGTH=P.gravityCompound),P.gravityRangeCompound!=null&&(m.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=p.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=P.gravityRangeCompound),P.initialEnergyOnIncremental!=null&&(m.DEFAULT_COOLING_FACTOR_INCREMENTAL=p.DEFAULT_COOLING_FACTOR_INCREMENTAL=P.initialEnergyOnIncremental),P.tilingCompareBy!=null&&(m.TILING_COMPARE_BY=P.tilingCompareBy),P.quality=="proof"?h.QUALITY=2:h.QUALITY=0,m.NODE_DIMENSIONS_INCLUDE_LABELS=p.NODE_DIMENSIONS_INCLUDE_LABELS=h.NODE_DIMENSIONS_INCLUDE_LABELS=P.nodeDimensionsIncludeLabels,m.DEFAULT_INCREMENTAL=p.DEFAULT_INCREMENTAL=h.DEFAULT_INCREMENTAL=!P.randomize,m.ANIMATE=p.ANIMATE=h.ANIMATE=P.animate,m.TILE=P.tile,m.TILING_PADDING_VERTICAL=typeof P.tilingPaddingVertical=="function"?P.tilingPaddingVertical.call():P.tilingPaddingVertical,m.TILING_PADDING_HORIZONTAL=typeof P.tilingPaddingHorizontal=="function"?P.tilingPaddingHorizontal.call():P.tilingPaddingHorizontal,m.DEFAULT_INCREMENTAL=p.DEFAULT_INCREMENTAL=h.DEFAULT_INCREMENTAL=!0,m.PURE_INCREMENTAL=!P.randomize,h.DEFAULT_UNIFORM_LEAF_NODE_SIZES=P.uniformNodeDimensions,P.step=="transformed"&&(m.TRANSFORM_ON_CONSTRAINT_HANDLING=!0,m.ENFORCE_CONSTRAINTS=!1,m.APPLY_LAYOUT=!1),P.step=="enforced"&&(m.TRANSFORM_ON_CONSTRAINT_HANDLING=!1,m.ENFORCE_CONSTRAINTS=!0,m.APPLY_LAYOUT=!1),P.step=="cose"&&(m.TRANSFORM_ON_CONSTRAINT_HANDLING=!1,m.ENFORCE_CONSTRAINTS=!1,m.APPLY_LAYOUT=!0),P.step=="all"&&(P.randomize?m.TRANSFORM_ON_CONSTRAINT_HANDLING=!0:m.TRANSFORM_ON_CONSTRAINT_HANDLING=!1,m.ENFORCE_CONSTRAINTS=!0,m.APPLY_LAYOUT=!0),P.fixedNodeConstraint||P.alignmentConstraint||P.relativePlacementConstraint?m.TREE_REDUCTION_ON_INCREMENTAL=!1:m.TREE_REDUCTION_ON_INCREMENTAL=!0;var w=new c,O=w.newGraphManager();return X(O.addRoot(),l.getTopMostNodes(T),w,P),v(w,O,B),A(w,P),w.runLayout(),M};i.exports={coseLayout:_}},212:(i,o,s)=>{var l=function(){function P(y,C){for(var E=0;E<C.length;E++){var T=C[E];T.enumerable=T.enumerable||!1,T.configurable=!0,"value"in T&&(T.writable=!0),Object.defineProperty(y,T.key,T)}}return function(y,C,E){return C&&P(y.prototype,C),E&&P(y,E),y}}();function c(P,y){if(!(P instanceof y))throw new TypeError("Cannot call a class as a function")}var u=s(658),d=s(548),f=s(657),h=f.spectralLayout,p=s(816),m=p.coseLayout,_=Object.freeze({quality:"default",randomize:!0,animate:!0,animationDuration:1e3,animationEasing:void 0,fit:!0,padding:30,nodeDimensionsIncludeLabels:!1,uniformNodeDimensions:!1,packComponents:!0,step:"all",samplingType:!0,sampleSize:25,nodeSeparation:75,piTol:1e-7,nodeRepulsion:function(y){return 4500},idealEdgeLength:function(y){return 50},edgeElasticity:function(y){return .45},nestingFactor:.1,gravity:.25,numIter:2500,tile:!0,tilingCompareBy:void 0,tilingPaddingVertical:10,tilingPaddingHorizontal:10,gravityRangeCompound:1.5,gravityCompound:1,gravityRange:3.8,initialEnergyOnIncremental:.3,fixedNodeConstraint:void 0,alignmentConstraint:void 0,relativePlacementConstraint:void 0,ready:function(){},stop:function(){}}),g=function(){function P(y){c(this,P),this.options=u({},_,y)}return l(P,[{key:"run",value:function(){var C=this,E=this.options,T=E.cy,B=E.eles,D=[],k=void 0,$=void 0,M=[],b=void 0,x=[];E.fixedNodeConstraint&&(!Array.isArray(E.fixedNodeConstraint)||E.fixedNodeConstraint.length==0)&&(E.fixedNodeConstraint=void 0),E.alignmentConstraint&&(E.alignmentConstraint.vertical&&(!Array.isArray(E.alignmentConstraint.vertical)||E.alignmentConstraint.vertical.length==0)&&(E.alignmentConstraint.vertical=void 0),E.alignmentConstraint.horizontal&&(!Array.isArray(E.alignmentConstraint.horizontal)||E.alignmentConstraint.horizontal.length==0)&&(E.alignmentConstraint.horizontal=void 0)),E.relativePlacementConstraint&&(!Array.isArray(E.relativePlacementConstraint)||E.relativePlacementConstraint.length==0)&&(E.relativePlacementConstraint=void 0);var K=E.fixedNodeConstraint||E.alignmentConstraint||E.relativePlacementConstraint;K&&(E.tile=!1,E.packComponents=!1);var X=void 0,v=!1;if(T.layoutUtilities&&E.packComponents&&(X=T.layoutUtilities("get"),X||(X=T.layoutUtilities()),v=!0),B.nodes().length>0)if(v){var O=d.getTopMostNodes(E.eles.nodes());if(b=d.connectComponents(T,E.eles,O),b.forEach(function(he){var le=he.boundingBox();x.push({x:le.x1+le.w/2,y:le.y1+le.h/2})}),E.randomize&&b.forEach(function(he){E.eles=he,D.push(h(E))}),E.quality=="default"||E.quality=="proof"){var N=T.collection();if(E.tile){var S=new Map,I=[],q=[],Y=0,ee={nodeIndexes:S,xCoords:I,yCoords:q},Q=[];if(b.forEach(function(he,le){he.edges().length==0&&(he.nodes().forEach(function(de,Pe){N.merge(he.nodes()[Pe]),de.isParent()||(ee.nodeIndexes.set(he.nodes()[Pe].id(),Y++),ee.xCoords.push(he.nodes()[0].position().x),ee.yCoords.push(he.nodes()[0].position().y))}),Q.push(le))}),N.length>1){var U=N.boundingBox();x.push({x:U.x1+U.w/2,y:U.y1+U.h/2}),b.push(N),D.push(ee);for(var J=Q.length-1;J>=0;J--)b.splice(Q[J],1),D.splice(Q[J],1),x.splice(Q[J],1)}}b.forEach(function(he,le){E.eles=he,M.push(m(E,D[le])),d.relocateComponent(x[le],M[le],E)})}else b.forEach(function(he,le){d.relocateComponent(x[le],D[le],E)});var F=new Set;if(b.length>1){var W=[],L=B.filter(function(he){return he.css("display")=="none"});b.forEach(function(he,le){var de=void 0;if(E.quality=="draft"&&(de=D[le].nodeIndexes),he.nodes().not(L).length>0){var Pe={};Pe.edges=[],Pe.nodes=[];var Ce=void 0;he.nodes().not(L).forEach(function(Xe){if(E.quality=="draft")if(!Xe.isParent())Ce=de.get(Xe.id()),Pe.nodes.push({x:D[le].xCoords[Ce]-Xe.boundingbox().w/2,y:D[le].yCoords[Ce]-Xe.boundingbox().h/2,width:Xe.boundingbox().w,height:Xe.boundingbox().h});else{var ve=d.calcBoundingBox(Xe,D[le].xCoords,D[le].yCoords,de);Pe.nodes.push({x:ve.topLeftX,y:ve.topLeftY,width:ve.width,height:ve.height})}else M[le][Xe.id()]&&Pe.nodes.push({x:M[le][Xe.id()].getLeft(),y:M[le][Xe.id()].getTop(),width:M[le][Xe.id()].getWidth(),height:M[le][Xe.id()].getHeight()})}),he.edges().forEach(function(Xe){var ve=Xe.source(),xe=Xe.target();if(ve.css("display")!="none"&&xe.css("display")!="none")if(E.quality=="draft"){var ye=de.get(ve.id()),fe=de.get(xe.id()),R=[],te=[];if(ve.isParent()){var ce=d.calcBoundingBox(ve,D[le].xCoords,D[le].yCoords,de);R.push(ce.topLeftX+ce.width/2),R.push(ce.topLeftY+ce.height/2)}else R.push(D[le].xCoords[ye]),R.push(D[le].yCoords[ye]);if(xe.isParent()){var V=d.calcBoundingBox(xe,D[le].xCoords,D[le].yCoords,de);te.push(V.topLeftX+V.width/2),te.push(V.topLeftY+V.height/2)}else te.push(D[le].xCoords[fe]),te.push(D[le].yCoords[fe]);Pe.edges.push({startX:R[0],startY:R[1],endX:te[0],endY:te[1]})}else M[le][ve.id()]&&M[le][xe.id()]&&Pe.edges.push({startX:M[le][ve.id()].getCenterX(),startY:M[le][ve.id()].getCenterY(),endX:M[le][xe.id()].getCenterX(),endY:M[le][xe.id()].getCenterY()})}),Pe.nodes.length>0&&(W.push(Pe),F.add(le))}});var z=X.packComponents(W,E.randomize).shifts;if(E.quality=="draft")D.forEach(function(he,le){var de=he.xCoords.map(function(Ce){return Ce+z[le].dx}),Pe=he.yCoords.map(function(Ce){return Ce+z[le].dy});he.xCoords=de,he.yCoords=Pe});else{var ne=0;F.forEach(function(he){Object.keys(M[he]).forEach(function(le){var de=M[he][le];de.setCenter(de.getCenterX()+z[ne].dx,de.getCenterY()+z[ne].dy)}),ne++})}}}else{var A=E.eles.boundingBox();if(x.push({x:A.x1+A.w/2,y:A.y1+A.h/2}),E.randomize){var w=h(E);D.push(w)}E.quality=="default"||E.quality=="proof"?(M.push(m(E,D[0])),d.relocateComponent(x[0],M[0],E)):d.relocateComponent(x[0],D[0],E)}var H=function(le,de){if(E.quality=="default"||E.quality=="proof"){typeof le=="number"&&(le=de);var Pe=void 0,Ce=void 0,Xe=le.data("id");return M.forEach(function(xe){Xe in xe&&(Pe={x:xe[Xe].getRect().getCenterX(),y:xe[Xe].getRect().getCenterY()},Ce=xe[Xe])}),E.nodeDimensionsIncludeLabels&&(Ce.labelWidth&&(Ce.labelPosHorizontal=="left"?Pe.x+=Ce.labelWidth/2:Ce.labelPosHorizontal=="right"&&(Pe.x-=Ce.labelWidth/2)),Ce.labelHeight&&(Ce.labelPosVertical=="top"?Pe.y+=Ce.labelHeight/2:Ce.labelPosVertical=="bottom"&&(Pe.y-=Ce.labelHeight/2))),Pe==null&&(Pe={x:le.position("x"),y:le.position("y")}),{x:Pe.x,y:Pe.y}}else{var ve=void 0;return D.forEach(function(xe){var ye=xe.nodeIndexes.get(le.id());ye!=null&&(ve={x:xe.xCoords[ye],y:xe.yCoords[ye]})}),ve==null&&(ve={x:le.position("x"),y:le.position("y")}),{x:ve.x,y:ve.y}}};if(E.quality=="default"||E.quality=="proof"||E.randomize){var _e=d.calcParentsWithoutChildren(T,B),Ae=B.filter(function(he){return he.css("display")=="none"});E.eles=B.not(Ae),B.nodes().not(":parent").not(Ae).layoutPositions(C,E,H),_e.length>0&&_e.forEach(function(he){he.position(H(he))})}else console.log("If randomize option is set to false, then quality option must be 'default' or 'proof'.")}}]),P}();i.exports=g},657:(i,o,s)=>{var l=s(548),c=s(140).layoutBase.Matrix,u=s(140).layoutBase.SVD,d=function(h){var p=h.cy,m=h.eles,_=m.nodes(),g=m.nodes(":parent"),P=new Map,y=new Map,C=new Map,E=[],T=[],B=[],D=[],k=[],$=[],M=[],b=[],x=void 0,K=void 0,X=1e8,v=1e-9,A=h.piTol,w=h.samplingType,O=h.nodeSeparation,N=void 0,S=function(){for(var oe=0,re=0,se=!1;re<N;){oe=Math.floor(Math.random()*K),se=!1;for(var pe=0;pe<re;pe++)if(D[pe]==oe){se=!0;break}if(!se)D[re]=oe,re++;else continue}},I=function(oe,re,se){for(var pe=[],ke=0,be=0,me=0,Ee=void 0,Te=[],De=0,Re=1,Ge=0;Ge<K;Ge++)Te[Ge]=X;for(pe[be]=oe,Te[oe]=0;be>=ke;){me=pe[ke++];for(var Ie=E[me],$e=0;$e<Ie.length;$e++)Ee=y.get(Ie[$e]),Te[Ee]==X&&(Te[Ee]=Te[me]+1,pe[++be]=Ee);$[me][re]=Te[me]*O}if(se){for(var Fe=0;Fe<K;Fe++)$[Fe][re]<k[Fe]&&(k[Fe]=$[Fe][re]);for(var Me=0;Me<K;Me++)k[Me]>De&&(De=k[Me],Re=Me)}return Re},q=function(oe){var re=void 0;if(oe){re=Math.floor(Math.random()*K),x=re;for(var pe=0;pe<K;pe++)k[pe]=X;for(var ke=0;ke<N;ke++)D[ke]=re,re=I(re,ke,oe)}else{S();for(var se=0;se<N;se++)I(D[se],se,oe,!1)}for(var be=0;be<K;be++)for(var me=0;me<N;me++)$[be][me]*=$[be][me];for(var Ee=0;Ee<N;Ee++)M[Ee]=[];for(var Te=0;Te<N;Te++)for(var De=0;De<N;De++)M[Te][De]=$[D[De]][Te]},Y=function(){for(var oe=u.svd(M),re=oe.S,se=oe.U,pe=oe.V,ke=re[0]*re[0]*re[0],be=[],me=0;me<N;me++){be[me]=[];for(var Ee=0;Ee<N;Ee++)be[me][Ee]=0,me==Ee&&(be[me][Ee]=re[me]/(re[me]*re[me]+ke/(re[me]*re[me])))}b=c.multMat(c.multMat(pe,be),c.transpose(se))},ee=function(){for(var oe=void 0,re=void 0,se=[],pe=[],ke=[],be=[],me=0;me<K;me++)se[me]=Math.random(),pe[me]=Math.random();se=c.normalize(se),pe=c.normalize(pe);for(var Ee=0,Te=v,De=v,Re=void 0;;){Ee++;for(var Ge=0;Ge<K;Ge++)ke[Ge]=se[Ge];if(se=c.multGamma(c.multL(c.multGamma(ke),$,b)),oe=c.dotProduct(ke,se),se=c.normalize(se),Te=c.dotProduct(ke,se),Re=Math.abs(Te/De),Re<=1+A&&Re>=1)break;De=Te}for(var Ie=0;Ie<K;Ie++)ke[Ie]=se[Ie];for(Ee=0,De=v;;){Ee++;for(var $e=0;$e<K;$e++)be[$e]=pe[$e];if(be=c.minusOp(be,c.multCons(ke,c.dotProduct(ke,be))),pe=c.multGamma(c.multL(c.multGamma(be),$,b)),re=c.dotProduct(be,pe),pe=c.normalize(pe),Te=c.dotProduct(be,pe),Re=Math.abs(Te/De),Re<=1+A&&Re>=1)break;De=Te}for(var Fe=0;Fe<K;Fe++)be[Fe]=pe[Fe];T=c.multCons(ke,Math.sqrt(Math.abs(oe))),B=c.multCons(be,Math.sqrt(Math.abs(re)))};l.connectComponents(p,m,l.getTopMostNodes(_),P),g.forEach(function(Z){l.connectComponents(p,m,l.getTopMostNodes(Z.descendants().intersection(m)),P)});for(var Q=0,U=0;U<_.length;U++)_[U].isParent()||y.set(_[U].id(),Q++);var J=!0,F=!1,W=void 0;try{for(var L=P.keys()[Symbol.iterator](),z;!(J=(z=L.next()).done);J=!0){var ne=z.value;y.set(ne,Q++)}}catch(Z){F=!0,W=Z}finally{try{!J&&L.return&&L.return()}finally{if(F)throw W}}for(var H=0;H<y.size;H++)E[H]=[];g.forEach(function(Z){for(var oe=Z.children().intersection(m);oe.nodes(":childless").length==0;)oe=oe.nodes()[0].children().intersection(m);var re=0,se=oe.nodes(":childless")[0].connectedEdges().length;oe.nodes(":childless").forEach(function(pe,ke){pe.connectedEdges().length<se&&(se=pe.connectedEdges().length,re=ke)}),C.set(Z.id(),oe.nodes(":childless")[re].id())}),_.forEach(function(Z){var oe=void 0;Z.isParent()?oe=y.get(C.get(Z.id())):oe=y.get(Z.id()),Z.neighborhood().nodes().forEach(function(re){m.intersection(Z.edgesWith(re)).length>0&&(re.isParent()?E[oe].push(C.get(re.id())):E[oe].push(re.id()))})});var _e=function(oe){var re=y.get(oe),se=void 0;P.get(oe).forEach(function(pe){p.getElementById(pe).isParent()?se=C.get(pe):se=pe,E[re].push(se),E[y.get(se)].push(oe)})},Ae=!0,he=!1,le=void 0;try{for(var de=P.keys()[Symbol.iterator](),Pe;!(Ae=(Pe=de.next()).done);Ae=!0){var Ce=Pe.value;_e(Ce)}}catch(Z){he=!0,le=Z}finally{try{!Ae&&de.return&&de.return()}finally{if(he)throw le}}K=y.size;var Xe=void 0;if(K>2){N=K<h.sampleSize?K:h.sampleSize;for(var ve=0;ve<K;ve++)$[ve]=[];for(var xe=0;xe<N;xe++)b[xe]=[];return h.quality=="draft"||h.step=="all"?(q(w),Y(),ee(),Xe={nodeIndexes:y,xCoords:T,yCoords:B}):(y.forEach(function(Z,oe){T.push(p.getElementById(oe).position("x")),B.push(p.getElementById(oe).position("y"))}),Xe={nodeIndexes:y,xCoords:T,yCoords:B}),Xe}else{var ye=y.keys(),fe=p.getElementById(ye.next().value),R=fe.position(),te=fe.outerWidth();if(T.push(R.x),B.push(R.y),K==2){var ce=p.getElementById(ye.next().value),V=ce.outerWidth();T.push(R.x+te/2+V/2+h.idealEdgeLength),B.push(R.y)}return Xe={nodeIndexes:y,xCoords:T,yCoords:B},Xe}};i.exports={spectralLayout:d}},579:(i,o,s)=>{var l=s(212),c=function(d){d&&d("layout","fcose",l)};typeof cytoscape<"u"&&c(cytoscape),i.exports=c},140:i=>{i.exports=t}},n={};function r(i){var o=n[i];if(o!==void 0)return o.exports;var s=n[i]={exports:{}};return e[i](s,s.exports,r),s.exports}var a=r(579);return a})()})});var yp=xa((exports,module)=>{"use strict";(()=>{var __webpack_modules__={"./node_modules/array-buffer-byte-length/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");
var $byteLength = callBound('ArrayBuffer.prototype.byteLength', true);

var isArrayBuffer = __webpack_require__(/*! is-array-buffer */ "./node_modules/is-array-buffer/index.js");

/** @type {import('.')} */
module.exports = function byteLength(ab) {
	if (!isArrayBuffer(ab)) {
		return NaN;
	}
	return $byteLength ? $byteLength(ab) : ab.byteLength;
}; // in node < 0.11, byteLength is an own nonconfigurable property


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/array-buffer-byte-length/index.js?`)},"./node_modules/assert/build/assert.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");
// Currently in sync with Node.js lib/assert.js
// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b

// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.



function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
var _require = __webpack_require__(/*! ./internal/errors */ "./node_modules/assert/build/internal/errors.js"),
  _require$codes = _require.codes,
  ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,
  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
  ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,
  ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,
  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;
var AssertionError = __webpack_require__(/*! ./internal/assert/assertion_error */ "./node_modules/assert/build/internal/assert/assertion_error.js");
var _require2 = __webpack_require__(/*! util/ */ "./node_modules/util/util.js"),
  inspect = _require2.inspect;
var _require$types = (__webpack_require__(/*! util/ */ "./node_modules/util/util.js").types),
  isPromise = _require$types.isPromise,
  isRegExp = _require$types.isRegExp;
var objectAssign = __webpack_require__(/*! object.assign/polyfill */ "./node_modules/object.assign/polyfill.js")();
var objectIs = __webpack_require__(/*! object-is/polyfill */ "./node_modules/object-is/polyfill.js")();
var RegExpPrototypeTest = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js")('RegExp.prototype.test');
var errorCache = new Map();
var isDeepEqual;
var isDeepStrictEqual;
var parseExpressionAt;
var findNodeAround;
var decoder;
function lazyLoadComparison() {
  var comparison = __webpack_require__(/*! ./internal/util/comparisons */ "./node_modules/assert/build/internal/util/comparisons.js");
  isDeepEqual = comparison.isDeepEqual;
  isDeepStrictEqual = comparison.isDeepStrictEqual;
}

// Escape control characters but not \\n and \\t to keep the line breaks and
// indentation intact.
// eslint-disable-next-line no-control-regex
var escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;
var meta = ["\\\\u0000", "\\\\u0001", "\\\\u0002", "\\\\u0003", "\\\\u0004", "\\\\u0005", "\\\\u0006", "\\\\u0007", '\\\\b', '', '', "\\\\u000b", '\\\\f', '', "\\\\u000e", "\\\\u000f", "\\\\u0010", "\\\\u0011", "\\\\u0012", "\\\\u0013", "\\\\u0014", "\\\\u0015", "\\\\u0016", "\\\\u0017", "\\\\u0018", "\\\\u0019", "\\\\u001a", "\\\\u001b", "\\\\u001c", "\\\\u001d", "\\\\u001e", "\\\\u001f"];
var escapeFn = function escapeFn(str) {
  return meta[str.charCodeAt(0)];
};
var warned = false;

// The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;
var NO_EXCEPTION_SENTINEL = {};

// All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided. All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function innerFail(obj) {
  if (obj.message instanceof Error) throw obj.message;
  throw new AssertionError(obj);
}
function fail(actual, expected, message, operator, stackStartFn) {
  var argsLen = arguments.length;
  var internalMessage;
  if (argsLen === 0) {
    internalMessage = 'Failed';
  } else if (argsLen === 1) {
    message = actual;
    actual = undefined;
  } else {
    if (warned === false) {
      warned = true;
      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);
      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');
    }
    if (argsLen === 2) operator = '!=';
  }
  if (message instanceof Error) throw message;
  var errArgs = {
    actual: actual,
    expected: expected,
    operator: operator === undefined ? 'fail' : operator,
    stackStartFn: stackStartFn || fail
  };
  if (message !== undefined) {
    errArgs.message = message;
  }
  var err = new AssertionError(errArgs);
  if (internalMessage) {
    err.message = internalMessage;
    err.generatedMessage = true;
  }
  throw err;
}
assert.fail = fail;

// The AssertionError is defined in internal/error.
assert.AssertionError = AssertionError;
function innerOk(fn, argLen, value, message) {
  if (!value) {
    var generatedMessage = false;
    if (argLen === 0) {
      generatedMessage = true;
      message = 'No value argument passed to \`assert.ok()\`';
    } else if (message instanceof Error) {
      throw message;
    }
    var err = new AssertionError({
      actual: value,
      expected: true,
      message: message,
      operator: '==',
      stackStartFn: fn
    });
    err.generatedMessage = generatedMessage;
    throw err;
  }
}

// Pure assertion tests whether a value is truthy, as determined
// by !!value.
function ok() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  innerOk.apply(void 0, [ok, args.length].concat(args));
}
assert.ok = ok;

// The equality assertion tests shallow, coercive equality with ==.
/* eslint-disable no-restricted-properties */
assert.equal = function equal(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  // eslint-disable-next-line eqeqeq
  if (actual != expected) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: '==',
      stackStartFn: equal
    });
  }
};

// The non-equality assertion tests for whether two objects are not
// equal with !=.
assert.notEqual = function notEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  // eslint-disable-next-line eqeqeq
  if (actual == expected) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: '!=',
      stackStartFn: notEqual
    });
  }
};

// The equivalence assertion tests a deep equality relation.
assert.deepEqual = function deepEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  if (isDeepEqual === undefined) lazyLoadComparison();
  if (!isDeepEqual(actual, expected)) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: 'deepEqual',
      stackStartFn: deepEqual
    });
  }
};

// The non-equivalence assertion tests for any deep inequality.
assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  if (isDeepEqual === undefined) lazyLoadComparison();
  if (isDeepEqual(actual, expected)) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: 'notDeepEqual',
      stackStartFn: notDeepEqual
    });
  }
};
/* eslint-enable */

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  if (isDeepEqual === undefined) lazyLoadComparison();
  if (!isDeepStrictEqual(actual, expected)) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: 'deepStrictEqual',
      stackStartFn: deepStrictEqual
    });
  }
};
assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  if (isDeepEqual === undefined) lazyLoadComparison();
  if (isDeepStrictEqual(actual, expected)) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: 'notDeepStrictEqual',
      stackStartFn: notDeepStrictEqual
    });
  }
}
assert.strictEqual = function strictEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  if (!objectIs(actual, expected)) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: 'strictEqual',
      stackStartFn: strictEqual
    });
  }
};
assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (arguments.length < 2) {
    throw new ERR_MISSING_ARGS('actual', 'expected');
  }
  if (objectIs(actual, expected)) {
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: 'notStrictEqual',
      stackStartFn: notStrictEqual
    });
  }
};
var Comparison = /*#__PURE__*/_createClass(function Comparison(obj, keys, actual) {
  var _this = this;
  _classCallCheck(this, Comparison);
  keys.forEach(function (key) {
    if (key in obj) {
      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && RegExpPrototypeTest(obj[key], actual[key])) {
        _this[key] = actual[key];
      } else {
        _this[key] = obj[key];
      }
    }
  });
});
function compareExceptionKey(actual, expected, key, message, keys, fn) {
  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {
    if (!message) {
      // Create placeholder objects to create a nice output.
      var a = new Comparison(actual, keys);
      var b = new Comparison(expected, keys, actual);
      var err = new AssertionError({
        actual: a,
        expected: b,
        operator: 'deepStrictEqual',
        stackStartFn: fn
      });
      err.actual = actual;
      err.expected = expected;
      err.operator = fn.name;
      throw err;
    }
    innerFail({
      actual: actual,
      expected: expected,
      message: message,
      operator: fn.name,
      stackStartFn: fn
    });
  }
}
function expectedException(actual, expected, msg, fn) {
  if (typeof expected !== 'function') {
    if (isRegExp(expected)) return RegExpPrototypeTest(expected, actual);
    // assert.doesNotThrow does not accept objects.
    if (arguments.length === 2) {
      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);
    }

    // Handle primitives properly.
    if (_typeof(actual) !== 'object' || actual === null) {
      var err = new AssertionError({
        actual: actual,
        expected: expected,
        message: msg,
        operator: 'deepStrictEqual',
        stackStartFn: fn
      });
      err.operator = fn.name;
      throw err;
    }
    var keys = Object.keys(expected);
    // Special handle errors to make sure the name and the message are compared
    // as well.
    if (expected instanceof Error) {
      keys.push('name', 'message');
    } else if (keys.length === 0) {
      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');
    }
    if (isDeepEqual === undefined) lazyLoadComparison();
    keys.forEach(function (key) {
      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && RegExpPrototypeTest(expected[key], actual[key])) {
        return;
      }
      compareExceptionKey(actual, expected, key, msg, keys, fn);
    });
    return true;
  }
  // Guard instanceof against arrow functions as they don't have a prototype.
  if (expected.prototype !== undefined && actual instanceof expected) {
    return true;
  }
  if (Error.isPrototypeOf(expected)) {
    return false;
  }
  return expected.call({}, actual) === true;
}
function getActual(fn) {
  if (typeof fn !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);
  }
  try {
    fn();
  } catch (e) {
    return e;
  }
  return NO_EXCEPTION_SENTINEL;
}
function checkIsPromise(obj) {
  // Accept native ES6 promises and promises that are implemented in a similar
  // way. Do not accept thenables that use a function as \`obj\` and that have no
  // \`catch\` handler.

  // TODO: thenables are checked up until they have the correct methods,
  // but according to documentation, the \`then\` method should receive
  // the \`fulfill\` and \`reject\` arguments as well or it may be never resolved.

  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';
}
function waitForActual(promiseFn) {
  return Promise.resolve().then(function () {
    var resultPromise;
    if (typeof promiseFn === 'function') {
      // Return a rejected promise if \`promiseFn\` throws synchronously.
      resultPromise = promiseFn();
      // Fail in case no promise is returned.
      if (!checkIsPromise(resultPromise)) {
        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);
      }
    } else if (checkIsPromise(promiseFn)) {
      resultPromise = promiseFn;
    } else {
      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);
    }
    return Promise.resolve().then(function () {
      return resultPromise;
    }).then(function () {
      return NO_EXCEPTION_SENTINEL;
    }).catch(function (e) {
      return e;
    });
  });
}
function expectsError(stackStartFn, actual, error, message) {
  if (typeof error === 'string') {
    if (arguments.length === 4) {
      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);
    }
    if (_typeof(actual) === 'object' && actual !== null) {
      if (actual.message === error) {
        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', "The error message \\"".concat(actual.message, "\\" is identical to the message."));
      }
    } else if (actual === error) {
      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', "The error \\"".concat(actual, "\\" is identical to the message."));
    }
    message = error;
    error = undefined;
  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {
    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);
  }
  if (actual === NO_EXCEPTION_SENTINEL) {
    var details = '';
    if (error && error.name) {
      details += " (".concat(error.name, ")");
    }
    details += message ? ": ".concat(message) : '.';
    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';
    innerFail({
      actual: undefined,
      expected: error,
      operator: stackStartFn.name,
      message: "Missing expected ".concat(fnType).concat(details),
      stackStartFn: stackStartFn
    });
  }
  if (error && !expectedException(actual, error, message, stackStartFn)) {
    throw actual;
  }
}
function expectsNoError(stackStartFn, actual, error, message) {
  if (actual === NO_EXCEPTION_SENTINEL) return;
  if (typeof error === 'string') {
    message = error;
    error = undefined;
  }
  if (!error || expectedException(actual, error)) {
    var details = message ? ": ".concat(message) : '.';
    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';
    innerFail({
      actual: actual,
      expected: error,
      operator: stackStartFn.name,
      message: "Got unwanted ".concat(fnType).concat(details, "\\n") + "Actual message: \\"".concat(actual && actual.message, "\\""),
      stackStartFn: stackStartFn
    });
  }
  throw actual;
}
assert.throws = function throws(promiseFn) {
  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }
  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));
};
assert.rejects = function rejects(promiseFn) {
  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    args[_key3 - 1] = arguments[_key3];
  }
  return waitForActual(promiseFn).then(function (result) {
    return expectsError.apply(void 0, [rejects, result].concat(args));
  });
};
assert.doesNotThrow = function doesNotThrow(fn) {
  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
    args[_key4 - 1] = arguments[_key4];
  }
  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));
};
assert.doesNotReject = function doesNotReject(fn) {
  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
    args[_key5 - 1] = arguments[_key5];
  }
  return waitForActual(fn).then(function (result) {
    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));
  });
};
assert.ifError = function ifError(err) {
  if (err !== null && err !== undefined) {
    var message = 'ifError got unwanted exception: ';
    if (_typeof(err) === 'object' && typeof err.message === 'string') {
      if (err.message.length === 0 && err.constructor) {
        message += err.constructor.name;
      } else {
        message += err.message;
      }
    } else {
      message += inspect(err);
    }
    var newErr = new AssertionError({
      actual: err,
      expected: null,
      operator: 'ifError',
      message: message,
      stackStartFn: ifError
    });

    // Make sure we actually have a stack trace!
    var origStack = err.stack;
    if (typeof origStack === 'string') {
      // This will remove any duplicated frames from the error frames taken
      // from within \`ifError\` and add the original error frames to the newly
      // created ones.
      var tmp2 = origStack.split('\\n');
      tmp2.shift();
      // Filter all frames existing in err.stack.
      var tmp1 = newErr.stack.split('\\n');
      for (var i = 0; i < tmp2.length; i++) {
        // Find the first occurrence of the frame.
        var pos = tmp1.indexOf(tmp2[i]);
        if (pos !== -1) {
          // Only keep new frames.
          tmp1 = tmp1.slice(0, pos);
          break;
        }
      }
      newErr.stack = "".concat(tmp1.join('\\n'), "\\n").concat(tmp2.join('\\n'));
    }
    throw newErr;
  }
};

// Currently in sync with Node.js lib/assert.js
// https://github.com/nodejs/node/commit/2a871df3dfb8ea663ef5e1f8f62701ec51384ecb
function internalMatch(string, regexp, message, fn, fnName) {
  if (!isRegExp(regexp)) {
    throw new ERR_INVALID_ARG_TYPE('regexp', 'RegExp', regexp);
  }
  var match = fnName === 'match';
  if (typeof string !== 'string' || RegExpPrototypeTest(regexp, string) !== match) {
    if (message instanceof Error) {
      throw message;
    }
    var generatedMessage = !message;

    // 'The input was expected to not match the regular expression ' +
    message = message || (typeof string !== 'string' ? 'The "string" argument must be of type string. Received type ' + "".concat(_typeof(string), " (").concat(inspect(string), ")") : (match ? 'The input did not match the regular expression ' : 'The input was expected to not match the regular expression ') + "".concat(inspect(regexp), ". Input:\\n\\n").concat(inspect(string), "\\n"));
    var err = new AssertionError({
      actual: string,
      expected: regexp,
      message: message,
      operator: fnName,
      stackStartFn: fn
    });
    err.generatedMessage = generatedMessage;
    throw err;
  }
}
assert.match = function match(string, regexp, message) {
  internalMatch(string, regexp, message, match, 'match');
};
assert.doesNotMatch = function doesNotMatch(string, regexp, message) {
  internalMatch(string, regexp, message, doesNotMatch, 'doesNotMatch');
};

// Expose a strict only variant of assert
function strict() {
  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    args[_key6] = arguments[_key6];
  }
  innerOk.apply(void 0, [strict, args.length].concat(args));
}
assert.strict = objectAssign(strict, assert, {
  equal: assert.strictEqual,
  deepEqual: assert.deepStrictEqual,
  notEqual: assert.notStrictEqual,
  notDeepEqual: assert.notDeepStrictEqual
});
assert.strict.strict = assert.strict;

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/assert/build/assert.js?`)},"./node_modules/assert/build/internal/assert/assertion_error.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");
// Currently in sync with Node.js lib/internal/assert/assertion_error.js
// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c



function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }
function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _require = __webpack_require__(/*! util/ */ "./node_modules/util/util.js"),
  inspect = _require.inspect;
var _require2 = __webpack_require__(/*! ../errors */ "./node_modules/assert/build/internal/errors.js"),
  ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE;

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith
function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }
  return str.substring(this_len - search.length, this_len) === search;
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat
function repeat(str, count) {
  count = Math.floor(count);
  if (str.length == 0 || count == 0) return '';
  var maxCount = str.length * count;
  count = Math.floor(Math.log(count) / Math.log(2));
  while (count) {
    str += str;
    count--;
  }
  str += str.substring(0, maxCount - str.length);
  return str;
}
var blue = '';
var green = '';
var red = '';
var white = '';
var kReadableOperator = {
  deepStrictEqual: 'Expected values to be strictly deep-equal:',
  strictEqual: 'Expected values to be strictly equal:',
  strictEqualObject: 'Expected "actual" to be reference-equal to "expected":',
  deepEqual: 'Expected values to be loosely deep-equal:',
  equal: 'Expected values to be loosely equal:',
  notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:',
  notStrictEqual: 'Expected "actual" to be strictly unequal to:',
  notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":',
  notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:',
  notEqual: 'Expected "actual" to be loosely unequal to:',
  notIdentical: 'Values identical but not reference-equal:'
};

// Comparing short primitives should just show === / !== instead of using the
// diff.
var kMaxShortLength = 10;
function copyError(source) {
  var keys = Object.keys(source);
  var target = Object.create(Object.getPrototypeOf(source));
  keys.forEach(function (key) {
    target[key] = source[key];
  });
  Object.defineProperty(target, 'message', {
    value: source.message
  });
  return target;
}
function inspectValue(val) {
  // The util.inspect default values could be changed. This makes sure the
  // error messages contain the necessary information nevertheless.
  return inspect(val, {
    compact: false,
    customInspect: false,
    depth: 1000,
    maxArrayLength: Infinity,
    // Assert compares only enumerable properties (with a few exceptions).
    showHidden: false,
    // Having a long line as error is better than wrapping the line for
    // comparison for now.
    // TODO(BridgeAR): \`breakLength\` should be limited as soon as soon as we
    // have meta information about the inspected properties (i.e., know where
    // in what line the property starts and ends).
    breakLength: Infinity,
    // Assert does not detect proxies currently.
    showProxy: false,
    sorted: true,
    // Inspect getters as we also check them when comparing entries.
    getters: true
  });
}
function createErrDiff(actual, expected, operator) {
  var other = '';
  var res = '';
  var lastPos = 0;
  var end = '';
  var skipped = false;
  var actualInspected = inspectValue(actual);
  var actualLines = actualInspected.split('\\n');
  var expectedLines = inspectValue(expected).split('\\n');
  var i = 0;
  var indicator = '';

  // In case both values are objects explicitly mark them as not reference equal
  // for the \`strictEqual\` operator.
  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {
    operator = 'strictEqualObject';
  }

  // If "actual" and "expected" fit on a single line and they are not strictly
  // equal, check further special handling.
  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {
    var inputLength = actualLines[0].length + expectedLines[0].length;
    // If the character length of "actual" and "expected" together is less than
    // kMaxShortLength and if neither is an object and at least one of them is
    // not \`zero\`, use the strict equal comparison to visualize the output.
    if (inputLength <= kMaxShortLength) {
      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {
        // -0 === +0
        return "".concat(kReadableOperator[operator], "\\n\\n") + "".concat(actualLines[0], " !== ").concat(expectedLines[0], "\\n");
      }
    } else if (operator !== 'strictEqualObject') {
      // If the stderr is a tty and the input length is lower than the current
      // columns per line, add a mismatch indicator below the output. If it is
      // not a tty, use a default value of 80 characters.
      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;
      if (inputLength < maxLength) {
        while (actualLines[0][i] === expectedLines[0][i]) {
          i++;
        }
        // Ignore the first characters.
        if (i > 2) {
          // Add position indicator for the first mismatch in case it is a
          // single line and the input length is less than the column length.
          indicator = "\\n  ".concat(repeat(' ', i), "^");
          i = 0;
        }
      }
    }
  }

  // Remove all ending lines that match (this optimizes the output for
  // readability by reducing the number of total changed lines).
  var a = actualLines[actualLines.length - 1];
  var b = expectedLines[expectedLines.length - 1];
  while (a === b) {
    if (i++ < 2) {
      end = "\\n  ".concat(a).concat(end);
    } else {
      other = a;
    }
    actualLines.pop();
    expectedLines.pop();
    if (actualLines.length === 0 || expectedLines.length === 0) break;
    a = actualLines[actualLines.length - 1];
    b = expectedLines[expectedLines.length - 1];
  }
  var maxLines = Math.max(actualLines.length, expectedLines.length);
  // Strict equal with identical objects that are not identical by reference.
  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })
  if (maxLines === 0) {
    // We have to get the result again. The lines were all removed before.
    var _actualLines = actualInspected.split('\\n');

    // Only remove lines in case it makes sense to collapse those.
    // TODO: Accept env to always show the full error.
    if (_actualLines.length > 30) {
      _actualLines[26] = "".concat(blue, "...").concat(white);
      while (_actualLines.length > 27) {
        _actualLines.pop();
      }
    }
    return "".concat(kReadableOperator.notIdentical, "\\n\\n").concat(_actualLines.join('\\n'), "\\n");
  }
  if (i > 3) {
    end = "\\n".concat(blue, "...").concat(white).concat(end);
    skipped = true;
  }
  if (other !== '') {
    end = "\\n  ".concat(other).concat(end);
    other = '';
  }
  var printedLines = 0;
  var msg = kReadableOperator[operator] + "\\n".concat(green, "+ actual").concat(white, " ").concat(red, "- expected").concat(white);
  var skippedMsg = " ".concat(blue, "...").concat(white, " Lines skipped");
  for (i = 0; i < maxLines; i++) {
    // Only extra expected lines exist
    var cur = i - lastPos;
    if (actualLines.length < i + 1) {
      // If the last diverging line is more than one line above and the
      // current line is at least line three, add some of the former lines and
      // also add dots to indicate skipped entries.
      if (cur > 1 && i > 2) {
        if (cur > 4) {
          res += "\\n".concat(blue, "...").concat(white);
          skipped = true;
        } else if (cur > 3) {
          res += "\\n  ".concat(expectedLines[i - 2]);
          printedLines++;
        }
        res += "\\n  ".concat(expectedLines[i - 1]);
        printedLines++;
      }
      // Mark the current line as the last diverging one.
      lastPos = i;
      // Add the expected line to the cache.
      other += "\\n".concat(red, "-").concat(white, " ").concat(expectedLines[i]);
      printedLines++;
      // Only extra actual lines exist
    } else if (expectedLines.length < i + 1) {
      // If the last diverging line is more than one line above and the
      // current line is at least line three, add some of the former lines and
      // also add dots to indicate skipped entries.
      if (cur > 1 && i > 2) {
        if (cur > 4) {
          res += "\\n".concat(blue, "...").concat(white);
          skipped = true;
        } else if (cur > 3) {
          res += "\\n  ".concat(actualLines[i - 2]);
          printedLines++;
        }
        res += "\\n  ".concat(actualLines[i - 1]);
        printedLines++;
      }
      // Mark the current line as the last diverging one.
      lastPos = i;
      // Add the actual line to the result.
      res += "\\n".concat(green, "+").concat(white, " ").concat(actualLines[i]);
      printedLines++;
      // Lines diverge
    } else {
      var expectedLine = expectedLines[i];
      var actualLine = actualLines[i];
      // If the lines diverge, specifically check for lines that only diverge by
      // a trailing comma. In that case it is actually identical and we should
      // mark it as such.
      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine);
      // If the expected line has a trailing comma but is otherwise identical,
      // add a comma at the end of the actual line. Otherwise the output could
      // look weird as in:
      //
      //   [
      //     1         // No comma at the end!
      // +   2
      //   ]
      //
      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {
        divergingLines = false;
        actualLine += ',';
      }
      if (divergingLines) {
        // If the last diverging line is more than one line above and the
        // current line is at least line three, add some of the former lines and
        // also add dots to indicate skipped entries.
        if (cur > 1 && i > 2) {
          if (cur > 4) {
            res += "\\n".concat(blue, "...").concat(white);
            skipped = true;
          } else if (cur > 3) {
            res += "\\n  ".concat(actualLines[i - 2]);
            printedLines++;
          }
          res += "\\n  ".concat(actualLines[i - 1]);
          printedLines++;
        }
        // Mark the current line as the last diverging one.
        lastPos = i;
        // Add the actual line to the result and cache the expected diverging
        // line so consecutive diverging lines show up as +++--- and not +-+-+-.
        res += "\\n".concat(green, "+").concat(white, " ").concat(actualLine);
        other += "\\n".concat(red, "-").concat(white, " ").concat(expectedLine);
        printedLines += 2;
        // Lines are identical
      } else {
        // Add all cached information to the result before adding other things
        // and reset the cache.
        res += other;
        other = '';
        // If the last diverging line is exactly one line above or if it is the
        // very first line, add the line to the result.
        if (cur === 1 || i === 0) {
          res += "\\n  ".concat(actualLine);
          printedLines++;
        }
      }
    }
    // Inspected object to big (Show ~20 rows max)
    if (printedLines > 20 && i < maxLines - 2) {
      return "".concat(msg).concat(skippedMsg, "\\n").concat(res, "\\n").concat(blue, "...").concat(white).concat(other, "\\n") + "".concat(blue, "...").concat(white);
    }
  }
  return "".concat(msg).concat(skipped ? skippedMsg : '', "\\n").concat(res).concat(other).concat(end).concat(indicator);
}
var AssertionError = /*#__PURE__*/function (_Error, _inspect$custom) {
  _inherits(AssertionError, _Error);
  var _super = _createSuper(AssertionError);
  function AssertionError(options) {
    var _this;
    _classCallCheck(this, AssertionError);
    if (_typeof(options) !== 'object' || options === null) {
      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);
    }
    var message = options.message,
      operator = options.operator,
      stackStartFn = options.stackStartFn;
    var actual = options.actual,
      expected = options.expected;
    var limit = Error.stackTraceLimit;
    Error.stackTraceLimit = 0;
    if (message != null) {
      _this = _super.call(this, String(message));
    } else {
      if (process.stderr && process.stderr.isTTY) {
        // Reset on each call to make sure we handle dynamically set environment
        // variables correct.
        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {
          blue = "\\x1B[34m";
          green = "\\x1B[32m";
          white = "\\x1B[39m";
          red = "\\x1B[31m";
        } else {
          blue = '';
          green = '';
          white = '';
          red = '';
        }
      }
      // Prevent the error stack from being visible by duplicating the error
      // in a very close way to the original in case both sides are actually
      // instances of Error.
      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {
        actual = copyError(actual);
        expected = copyError(expected);
      }
      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {
        _this = _super.call(this, createErrDiff(actual, expected, operator));
      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {
        // In case the objects are equal but the operator requires unequal, show
        // the first object and say A equals B
        var base = kReadableOperator[operator];
        var res = inspectValue(actual).split('\\n');

        // In case "actual" is an object, it should not be reference equal.
        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {
          base = kReadableOperator.notStrictEqualObject;
        }

        // Only remove lines in case it makes sense to collapse those.
        // TODO: Accept env to always show the full error.
        if (res.length > 30) {
          res[26] = "".concat(blue, "...").concat(white);
          while (res.length > 27) {
            res.pop();
          }
        }

        // Only print a single input.
        if (res.length === 1) {
          _this = _super.call(this, "".concat(base, " ").concat(res[0]));
        } else {
          _this = _super.call(this, "".concat(base, "\\n\\n").concat(res.join('\\n'), "\\n"));
        }
      } else {
        var _res = inspectValue(actual);
        var other = '';
        var knownOperators = kReadableOperator[operator];
        if (operator === 'notDeepEqual' || operator === 'notEqual') {
          _res = "".concat(kReadableOperator[operator], "\\n\\n").concat(_res);
          if (_res.length > 1024) {
            _res = "".concat(_res.slice(0, 1021), "...");
          }
        } else {
          other = "".concat(inspectValue(expected));
          if (_res.length > 512) {
            _res = "".concat(_res.slice(0, 509), "...");
          }
          if (other.length > 512) {
            other = "".concat(other.slice(0, 509), "...");
          }
          if (operator === 'deepEqual' || operator === 'equal') {
            _res = "".concat(knownOperators, "\\n\\n").concat(_res, "\\n\\nshould equal\\n\\n");
          } else {
            other = " ".concat(operator, " ").concat(other);
          }
        }
        _this = _super.call(this, "".concat(_res).concat(other));
      }
    }
    Error.stackTraceLimit = limit;
    _this.generatedMessage = !message;
    Object.defineProperty(_assertThisInitialized(_this), 'name', {
      value: 'AssertionError [ERR_ASSERTION]',
      enumerable: false,
      writable: true,
      configurable: true
    });
    _this.code = 'ERR_ASSERTION';
    _this.actual = actual;
    _this.expected = expected;
    _this.operator = operator;
    if (Error.captureStackTrace) {
      // eslint-disable-next-line no-restricted-syntax
      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);
    }
    // Create error message including the error code in the name.
    _this.stack;
    // Reset the name.
    _this.name = 'AssertionError';
    return _possibleConstructorReturn(_this);
  }
  _createClass(AssertionError, [{
    key: "toString",
    value: function toString() {
      return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
    }
  }, {
    key: _inspect$custom,
    value: function value(recurseTimes, ctx) {
      // This limits the \`actual\` and \`expected\` property default inspection to
      // the minimum depth. Otherwise those values would be too verbose compared
      // to the actual error message which contains a combined view of these two
      // input values.
      return inspect(this, _objectSpread(_objectSpread({}, ctx), {}, {
        customInspect: false,
        depth: 0
      }));
    }
  }]);
  return AssertionError;
}( /*#__PURE__*/_wrapNativeSuper(Error), inspect.custom);
module.exports = AssertionError;

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/assert/build/internal/assert/assertion_error.js?`)},"./node_modules/assert/build/internal/errors.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`// Currently in sync with Node.js lib/internal/errors.js
// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f

/* eslint node-core/documented-errors: "error" */
/* eslint node-core/alphabetize-errors: "error" */
/* eslint node-core/prefer-util-format-errors: "error" */



// The whole point behind this internal module is to allow Node.js to no
// longer be forced to treat every error message change as a semver-major
// change. The NodeError classes here all expose a \`code\` property whose
// value statically and permanently identifies the error. While the error
// message may change, the code should not.
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
var codes = {};

// Lazy loaded
var assert;
var util;
function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }
  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }
  var NodeError = /*#__PURE__*/function (_Base) {
    _inherits(NodeError, _Base);
    var _super = _createSuper(NodeError);
    function NodeError(arg1, arg2, arg3) {
      var _this;
      _classCallCheck(this, NodeError);
      _this = _super.call(this, getMessage(arg1, arg2, arg3));
      _this.code = code;
      return _this;
    }
    return _createClass(NodeError);
  }(Base);
  codes[code] = NodeError;
}

// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js
function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });
    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith
function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith
function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }
  return str.substring(this_len - search.length, this_len) === search;
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes
function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }
  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}
createErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The "%s" argument is ambiguous. %s', TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  if (assert === undefined) assert = __webpack_require__(/*! ../assert */ "./node_modules/assert/build/assert.js");
  assert(typeof name === 'string', "'name' must be a string");

  // determiner: 'must be' or 'must not be'
  var determiner;
  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }
  var msg;
  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \\"".concat(name, "\\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  // TODO(BridgeAR): Improve the output by showing \`null\` and similar.
  msg += ". Received type ".concat(_typeof(actual));
  return msg;
}, TypeError);
createErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {
  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';
  if (util === undefined) util = __webpack_require__(/*! util/ */ "./node_modules/util/util.js");
  var inspected = util.inspect(value);
  if (inspected.length > 128) {
    inspected = "".concat(inspected.slice(0, 128), "...");
  }
  return "The argument '".concat(name, "' ").concat(reason, ". Received ").concat(inspected);
}, TypeError, RangeError);
createErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {
  var type;
  if (value && value.constructor && value.constructor.name) {
    type = "instance of ".concat(value.constructor.name);
  } else {
    type = "type ".concat(_typeof(value));
  }
  return "Expected ".concat(input, " to be returned from the \\"").concat(name, "\\"") + " function but got ".concat(type, ".");
}, TypeError);
createErrorType('ERR_MISSING_ARGS', function () {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (assert === undefined) assert = __webpack_require__(/*! ../assert */ "./node_modules/assert/build/assert.js");
  assert(args.length > 0, 'At least one arg needs to be specified');
  var msg = 'The ';
  var len = args.length;
  args = args.map(function (a) {
    return "\\"".concat(a, "\\"");
  });
  switch (len) {
    case 1:
      msg += "".concat(args[0], " argument");
      break;
    case 2:
      msg += "".concat(args[0], " and ").concat(args[1], " arguments");
      break;
    default:
      msg += args.slice(0, len - 1).join(', ');
      msg += ", and ".concat(args[len - 1], " arguments");
      break;
  }
  return "".concat(msg, " must be specified");
}, TypeError);
module.exports.codes = codes;

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/assert/build/internal/errors.js?`)},"./node_modules/assert/build/internal/util/comparisons.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`// Currently in sync with Node.js lib/internal/util/comparisons.js
// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9



function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var regexFlagsSupported = /a/g.flags !== undefined;
var arrayFromSet = function arrayFromSet(set) {
  var array = [];
  set.forEach(function (value) {
    return array.push(value);
  });
  return array;
};
var arrayFromMap = function arrayFromMap(map) {
  var array = [];
  map.forEach(function (value, key) {
    return array.push([key, value]);
  });
  return array;
};
var objectIs = Object.is ? Object.is : __webpack_require__(/*! object-is */ "./node_modules/object-is/index.js");
var objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {
  return [];
};
var numberIsNaN = Number.isNaN ? Number.isNaN : __webpack_require__(/*! is-nan */ "./node_modules/is-nan/index.js");
function uncurryThis(f) {
  return f.call.bind(f);
}
var hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);
var propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);
var objectToString = uncurryThis(Object.prototype.toString);
var _require$types = (__webpack_require__(/*! util/ */ "./node_modules/util/util.js").types),
  isAnyArrayBuffer = _require$types.isAnyArrayBuffer,
  isArrayBufferView = _require$types.isArrayBufferView,
  isDate = _require$types.isDate,
  isMap = _require$types.isMap,
  isRegExp = _require$types.isRegExp,
  isSet = _require$types.isSet,
  isNativeError = _require$types.isNativeError,
  isBoxedPrimitive = _require$types.isBoxedPrimitive,
  isNumberObject = _require$types.isNumberObject,
  isStringObject = _require$types.isStringObject,
  isBooleanObject = _require$types.isBooleanObject,
  isBigIntObject = _require$types.isBigIntObject,
  isSymbolObject = _require$types.isSymbolObject,
  isFloat32Array = _require$types.isFloat32Array,
  isFloat64Array = _require$types.isFloat64Array;
function isNonIndex(key) {
  if (key.length === 0 || key.length > 10) return true;
  for (var i = 0; i < key.length; i++) {
    var code = key.charCodeAt(i);
    if (code < 48 || code > 57) return true;
  }
  // The maximum size for an array is 2 ** 32 -1.
  return key.length === 10 && key >= Math.pow(2, 32);
}
function getOwnNonIndexProperties(value) {
  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));
}

// Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }
  var x = a.length;
  var y = b.length;
  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }
  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
var ONLY_ENUMERABLE = undefined;
var kStrict = true;
var kLoose = false;
var kNoIterator = 0;
var kIsArray = 1;
var kIsSet = 2;
var kIsMap = 3;

// Check if they have the same source and flags
function areSimilarRegExps(a, b) {
  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);
}
function areSimilarFloatArrays(a, b) {
  if (a.byteLength !== b.byteLength) {
    return false;
  }
  for (var offset = 0; offset < a.byteLength; offset++) {
    if (a[offset] !== b[offset]) {
      return false;
    }
  }
  return true;
}
function areSimilarTypedArrays(a, b) {
  if (a.byteLength !== b.byteLength) {
    return false;
  }
  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;
}
function areEqualArrayBuffers(buf1, buf2) {
  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;
}
function isEqualBoxedPrimitive(val1, val2) {
  if (isNumberObject(val1)) {
    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));
  }
  if (isStringObject(val1)) {
    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);
  }
  if (isBooleanObject(val1)) {
    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);
  }
  if (isBigIntObject(val1)) {
    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);
  }
  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);
}

// Notes: Type tags are historical [[Class]] properties that can be set by
// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS
// and retrieved using Object.prototype.toString.call(obj) in JS
// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring
// for a list of tags pre-defined in the spec.
// There are some unspecified tags in the wild too (e.g. typed array tags).
// Since tags can be altered, they only serve fast failures
//
// Typed arrays and buffers are checked by comparing the content in their
// underlying ArrayBuffer. This optimization requires that it's
// reasonable to interpret their underlying memory in the same way,
// which is checked by comparing their type tags.
// (e.g. a Uint8Array and a Uint16Array with the same memory content
// could still be different because they will be interpreted differently).
//
// For strict comparison, objects should have
// a) The same built-in type tags
// b) The same prototypes.

function innerDeepEqual(val1, val2, strict, memos) {
  // All identical values are equivalent, as determined by ===.
  if (val1 === val2) {
    if (val1 !== 0) return true;
    return strict ? objectIs(val1, val2) : true;
  }

  // Check more closely if val1 and val2 are equal.
  if (strict) {
    if (_typeof(val1) !== 'object') {
      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);
    }
    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {
      return false;
    }
    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {
      return false;
    }
  } else {
    if (val1 === null || _typeof(val1) !== 'object') {
      if (val2 === null || _typeof(val2) !== 'object') {
        // eslint-disable-next-line eqeqeq
        return val1 == val2;
      }
      return false;
    }
    if (val2 === null || _typeof(val2) !== 'object') {
      return false;
    }
  }
  var val1Tag = objectToString(val1);
  var val2Tag = objectToString(val2);
  if (val1Tag !== val2Tag) {
    return false;
  }
  if (Array.isArray(val1)) {
    // Check for sparse arrays and general fast path
    if (val1.length !== val2.length) {
      return false;
    }
    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);
    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);
    if (keys1.length !== keys2.length) {
      return false;
    }
    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);
  }
  // [browserify] This triggers on certain types in IE (Map/Set) so we don't
  // wan't to early return out of the rest of the checks. However we can check
  // if the second value is one of these values and the first isn't.
  if (val1Tag === '[object Object]') {
    // return keyCheck(val1, val2, strict, memos, kNoIterator);
    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {
      return false;
    }
  }
  if (isDate(val1)) {
    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {
      return false;
    }
  } else if (isRegExp(val1)) {
    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {
      return false;
    }
  } else if (isNativeError(val1) || val1 instanceof Error) {
    // Do not compare the stack as it might differ even though the error itself
    // is otherwise identical.
    if (val1.message !== val2.message || val1.name !== val2.name) {
      return false;
    }
  } else if (isArrayBufferView(val1)) {
    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {
      if (!areSimilarFloatArrays(val1, val2)) {
        return false;
      }
    } else if (!areSimilarTypedArrays(val1, val2)) {
      return false;
    }
    // Buffer.compare returns true, so val1.length === val2.length. If they both
    // only contain numeric keys, we don't need to exam further than checking
    // the symbols.
    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);
    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);
    if (_keys.length !== _keys2.length) {
      return false;
    }
    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);
  } else if (isSet(val1)) {
    if (!isSet(val2) || val1.size !== val2.size) {
      return false;
    }
    return keyCheck(val1, val2, strict, memos, kIsSet);
  } else if (isMap(val1)) {
    if (!isMap(val2) || val1.size !== val2.size) {
      return false;
    }
    return keyCheck(val1, val2, strict, memos, kIsMap);
  } else if (isAnyArrayBuffer(val1)) {
    if (!areEqualArrayBuffers(val1, val2)) {
      return false;
    }
  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {
    return false;
  }
  return keyCheck(val1, val2, strict, memos, kNoIterator);
}
function getEnumerables(val, keys) {
  return keys.filter(function (k) {
    return propertyIsEnumerable(val, k);
  });
}
function keyCheck(val1, val2, strict, memos, iterationType, aKeys) {
  // For all remaining Object pairs, including Array, objects and Maps,
  // equivalence is determined by having:
  // a) The same number of owned enumerable properties
  // b) The same set of keys/indexes (although not necessarily the same order)
  // c) Equivalent values for every corresponding key/index
  // d) For Sets and Maps, equal contents
  // Note: this accounts for both named and indexed properties on Arrays.
  if (arguments.length === 5) {
    aKeys = Object.keys(val1);
    var bKeys = Object.keys(val2);

    // The pair must have the same number of owned properties.
    if (aKeys.length !== bKeys.length) {
      return false;
    }
  }

  // Cheap key test
  var i = 0;
  for (; i < aKeys.length; i++) {
    if (!hasOwnProperty(val2, aKeys[i])) {
      return false;
    }
  }
  if (strict && arguments.length === 5) {
    var symbolKeysA = objectGetOwnPropertySymbols(val1);
    if (symbolKeysA.length !== 0) {
      var count = 0;
      for (i = 0; i < symbolKeysA.length; i++) {
        var key = symbolKeysA[i];
        if (propertyIsEnumerable(val1, key)) {
          if (!propertyIsEnumerable(val2, key)) {
            return false;
          }
          aKeys.push(key);
          count++;
        } else if (propertyIsEnumerable(val2, key)) {
          return false;
        }
      }
      var symbolKeysB = objectGetOwnPropertySymbols(val2);
      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {
        return false;
      }
    } else {
      var _symbolKeysB = objectGetOwnPropertySymbols(val2);
      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {
        return false;
      }
    }
  }
  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {
    return true;
  }

  // Use memos to handle cycles.
  if (memos === undefined) {
    memos = {
      val1: new Map(),
      val2: new Map(),
      position: 0
    };
  } else {
    // We prevent up to two map.has(x) calls by directly retrieving the value
    // and checking for undefined. The map can only contain numbers, so it is
    // safe to check for undefined only.
    var val2MemoA = memos.val1.get(val1);
    if (val2MemoA !== undefined) {
      var val2MemoB = memos.val2.get(val2);
      if (val2MemoB !== undefined) {
        return val2MemoA === val2MemoB;
      }
    }
    memos.position++;
  }
  memos.val1.set(val1, memos.position);
  memos.val2.set(val2, memos.position);
  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);
  memos.val1.delete(val1);
  memos.val2.delete(val2);
  return areEq;
}
function setHasEqualElement(set, val1, strict, memo) {
  // Go looking.
  var setValues = arrayFromSet(set);
  for (var i = 0; i < setValues.length; i++) {
    var val2 = setValues[i];
    if (innerDeepEqual(val1, val2, strict, memo)) {
      // Remove the matching element to make sure we do not check that again.
      set.delete(val2);
      return true;
    }
  }
  return false;
}

// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using
// Sadly it is not possible to detect corresponding values properly in case the
// type is a string, number, bigint or boolean. The reason is that those values
// can match lots of different string values (e.g., 1n == '+00001').
function findLooseMatchingPrimitives(prim) {
  switch (_typeof(prim)) {
    case 'undefined':
      return null;
    case 'object':
      // Only pass in null as object!
      return undefined;
    case 'symbol':
      return false;
    case 'string':
      prim = +prim;
    // Loose equal entries exist only if the string is possible to convert to
    // a regular number and not NaN.
    // Fall through
    case 'number':
      if (numberIsNaN(prim)) {
        return false;
      }
  }
  return true;
}
function setMightHaveLoosePrim(a, b, prim) {
  var altValue = findLooseMatchingPrimitives(prim);
  if (altValue != null) return altValue;
  return b.has(altValue) && !a.has(altValue);
}
function mapMightHaveLoosePrim(a, b, prim, item, memo) {
  var altValue = findLooseMatchingPrimitives(prim);
  if (altValue != null) {
    return altValue;
  }
  var curB = b.get(altValue);
  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {
    return false;
  }
  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);
}
function setEquiv(a, b, strict, memo) {
  // This is a lazily initiated Set of entries which have to be compared
  // pairwise.
  var set = null;
  var aValues = arrayFromSet(a);
  for (var i = 0; i < aValues.length; i++) {
    var val = aValues[i];
    // Note: Checking for the objects first improves the performance for object
    // heavy sets but it is a minor slow down for primitives. As they are fast
    // to check this improves the worst case scenario instead.
    if (_typeof(val) === 'object' && val !== null) {
      if (set === null) {
        set = new Set();
      }
      // If the specified value doesn't exist in the second set its an not null
      // object (or non strict only: a not matching primitive) we'll need to go
      // hunting for something thats deep-(strict-)equal to it. To make this
      // O(n log n) complexity we have to copy these values in a new set first.
      set.add(val);
    } else if (!b.has(val)) {
      if (strict) return false;

      // Fast path to detect missing string, symbol, undefined and null values.
      if (!setMightHaveLoosePrim(a, b, val)) {
        return false;
      }
      if (set === null) {
        set = new Set();
      }
      set.add(val);
    }
  }
  if (set !== null) {
    var bValues = arrayFromSet(b);
    for (var _i = 0; _i < bValues.length; _i++) {
      var _val = bValues[_i];
      // We have to check if a primitive value is already
      // matching and only if it's not, go hunting for it.
      if (_typeof(_val) === 'object' && _val !== null) {
        if (!setHasEqualElement(set, _val, strict, memo)) return false;
      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {
        return false;
      }
    }
    return set.size === 0;
  }
  return true;
}
function mapHasEqualEntry(set, map, key1, item1, strict, memo) {
  // To be able to handle cases like:
  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])
  // ... we need to consider *all* matching keys, not just the first we find.
  var setValues = arrayFromSet(set);
  for (var i = 0; i < setValues.length; i++) {
    var key2 = setValues[i];
    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {
      set.delete(key2);
      return true;
    }
  }
  return false;
}
function mapEquiv(a, b, strict, memo) {
  var set = null;
  var aEntries = arrayFromMap(a);
  for (var i = 0; i < aEntries.length; i++) {
    var _aEntries$i = _slicedToArray(aEntries[i], 2),
      key = _aEntries$i[0],
      item1 = _aEntries$i[1];
    if (_typeof(key) === 'object' && key !== null) {
      if (set === null) {
        set = new Set();
      }
      set.add(key);
    } else {
      // By directly retrieving the value we prevent another b.has(key) check in
      // almost all possible cases.
      var item2 = b.get(key);
      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {
        if (strict) return false;
        // Fast path to detect missing string, symbol, undefined and null
        // keys.
        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;
        if (set === null) {
          set = new Set();
        }
        set.add(key);
      }
    }
  }
  if (set !== null) {
    var bEntries = arrayFromMap(b);
    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {
      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),
        _key = _bEntries$_i[0],
        item = _bEntries$_i[1];
      if (_typeof(_key) === 'object' && _key !== null) {
        if (!mapHasEqualEntry(set, a, _key, item, strict, memo)) return false;
      } else if (!strict && (!a.has(_key) || !innerDeepEqual(a.get(_key), item, false, memo)) && !mapHasEqualEntry(set, a, _key, item, false, memo)) {
        return false;
      }
    }
    return set.size === 0;
  }
  return true;
}
function objEquiv(a, b, strict, keys, memos, iterationType) {
  // Sets and maps don't have their entries accessible via normal object
  // properties.
  var i = 0;
  if (iterationType === kIsSet) {
    if (!setEquiv(a, b, strict, memos)) {
      return false;
    }
  } else if (iterationType === kIsMap) {
    if (!mapEquiv(a, b, strict, memos)) {
      return false;
    }
  } else if (iterationType === kIsArray) {
    for (; i < a.length; i++) {
      if (hasOwnProperty(a, i)) {
        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {
          return false;
        }
      } else if (hasOwnProperty(b, i)) {
        return false;
      } else {
        // Array is sparse.
        var keysA = Object.keys(a);
        for (; i < keysA.length; i++) {
          var key = keysA[i];
          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {
            return false;
          }
        }
        if (keysA.length !== Object.keys(b).length) {
          return false;
        }
        return true;
      }
    }
  }

  // The pair must have equivalent values for every corresponding key.
  // Possibly expensive deep test:
  for (i = 0; i < keys.length; i++) {
    var _key2 = keys[i];
    if (!innerDeepEqual(a[_key2], b[_key2], strict, memos)) {
      return false;
    }
  }
  return true;
}
function isDeepEqual(val1, val2) {
  return innerDeepEqual(val1, val2, kLoose);
}
function isDeepStrictEqual(val1, val2) {
  return innerDeepEqual(val1, val2, kStrict);
}
module.exports = {
  isDeepEqual: isDeepEqual,
  isDeepStrictEqual: isDeepStrictEqual
};

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/assert/build/internal/util/comparisons.js?`)},"./node_modules/base64-js/index.js":(__unused_webpack_module,exports)=>{"use strict";eval(`

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/base64-js/index.js?`)},"./node_modules/blob-stream/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`var WritableStream = (__webpack_require__(/*! stream */ "./node_modules/readable-stream/readable-browser.js").Writable);
var util = __webpack_require__(/*! util */ "./node_modules/util/util.js");
var Blob = __webpack_require__(/*! blob */ "./node_modules/blob/index.js");
var URL = __webpack_require__.g.URL || __webpack_require__.g.webkitURL || __webpack_require__.g.mozURL;

function BlobStream() {
  if (!(this instanceof BlobStream))
    return new BlobStream;
    
  WritableStream.call(this);
  this._chunks = [];
  this._blob = null;
  this.length = 0;
}

util.inherits(BlobStream, WritableStream);

BlobStream.prototype._write = function(chunk, encoding, callback) {
  // convert chunks to Uint8Arrays (e.g. Buffer when array fallback is being used)
  if (!(chunk instanceof Uint8Array))
    chunk = new Uint8Array(chunk);
    
  this.length += chunk.length;
  this._chunks.push(chunk);
  callback();
};

BlobStream.prototype.toBlob = function(type) {
  type = type || 'application/octet-stream';
  
  // cache the blob if needed
  if (!this._blob) {
    this._blob = new Blob(this._chunks, {
      type: type
    });
    
    this._chunks = []; // free memory
  }
  
  // if the cached blob's type doesn't match the requested type, make a new blob
  if (this._blob.type !== type)
    this._blob = new Blob([this._blob], { type: type });
  
  return this._blob;
};

BlobStream.prototype.toBlobURL = function(type) {
  return URL.createObjectURL(this.toBlob(type));
};

module.exports = BlobStream;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/blob-stream/index.js?`)},"./node_modules/blob/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`/**
 * Create a blob builder even when vendor prefixes exist
 */

var BlobBuilder = __webpack_require__.g.BlobBuilder
  || __webpack_require__.g.WebKitBlobBuilder
  || __webpack_require__.g.MSBlobBuilder
  || __webpack_require__.g.MozBlobBuilder;

/**
 * Check if Blob constructor is supported
 */

var blobSupported = (function() {
  try {
    var a = new Blob(['hi']);
    return a.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if Blob constructor supports ArrayBufferViews
 * Fails in Safari 6, so we need to map to ArrayBuffers there.
 */

var blobSupportsArrayBufferView = blobSupported && (function() {
  try {
    var b = new Blob([new Uint8Array([1,2])]);
    return b.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if BlobBuilder is supported
 */

var blobBuilderSupported = BlobBuilder
  && BlobBuilder.prototype.append
  && BlobBuilder.prototype.getBlob;

/**
 * Helper function that maps ArrayBufferViews to ArrayBuffers
 * Used by BlobBuilder constructor and old browsers that didn't
 * support it in the Blob constructor.
 */

function mapArrayBufferViews(ary) {
  for (var i = 0; i < ary.length; i++) {
    var chunk = ary[i];
    if (chunk.buffer instanceof ArrayBuffer) {
      var buf = chunk.buffer;

      // if this is a subarray, make a copy so we only
      // include the subarray region from the underlying buffer
      if (chunk.byteLength !== buf.byteLength) {
        var copy = new Uint8Array(chunk.byteLength);
        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
        buf = copy.buffer;
      }

      ary[i] = buf;
    }
  }
}

function BlobBuilderConstructor(ary, options) {
  options = options || {};

  var bb = new BlobBuilder();
  mapArrayBufferViews(ary);

  for (var i = 0; i < ary.length; i++) {
    bb.append(ary[i]);
  }

  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();
};

function BlobConstructor(ary, options) {
  mapArrayBufferViews(ary);
  return new Blob(ary, options || {});
};

module.exports = (function() {
  if (blobSupported) {
    return blobSupportsArrayBufferView ? __webpack_require__.g.Blob : BlobConstructor;
  } else if (blobBuilderSupported) {
    return BlobBuilderConstructor;
  } else {
    return undefined;
  }
})();


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/blob/index.js?`)},"./node_modules/brotli/dec/bit_reader.js":module=>{eval(`/* Copyright 2013 Google Inc. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Bit reading helpers
*/

var BROTLI_READ_SIZE = 4096;
var BROTLI_IBUF_SIZE =  (2 * BROTLI_READ_SIZE + 32);
var BROTLI_IBUF_MASK =  (2 * BROTLI_READ_SIZE - 1);

var kBitMask = new Uint32Array([
  0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767,
  65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215
]);

/* Input byte buffer, consist of a ringbuffer and a "slack" region where */
/* bytes from the start of the ringbuffer are copied. */
function BrotliBitReader(input) {
  this.buf_ = new Uint8Array(BROTLI_IBUF_SIZE);
  this.input_ = input;    /* input callback */
  
  this.reset();
}

BrotliBitReader.READ_SIZE = BROTLI_READ_SIZE;
BrotliBitReader.IBUF_MASK = BROTLI_IBUF_MASK;

BrotliBitReader.prototype.reset = function() {
  this.buf_ptr_ = 0;      /* next input will write here */
  this.val_ = 0;          /* pre-fetched bits */
  this.pos_ = 0;          /* byte position in stream */
  this.bit_pos_ = 0;      /* current bit-reading position in val_ */
  this.bit_end_pos_ = 0;  /* bit-reading end position from LSB of val_ */
  this.eos_ = 0;          /* input stream is finished */
  
  this.readMoreInput();
  for (var i = 0; i < 4; i++) {
    this.val_ |= this.buf_[this.pos_] << (8 * i);
    ++this.pos_;
  }
  
  return this.bit_end_pos_ > 0;
};

/* Fills up the input ringbuffer by calling the input callback.

   Does nothing if there are at least 32 bytes present after current position.

   Returns 0 if either:
    - the input callback returned an error, or
    - there is no more input and the position is past the end of the stream.

   After encountering the end of the input stream, 32 additional zero bytes are
   copied to the ringbuffer, therefore it is safe to call this function after
   every 32 bytes of input is read.
*/
BrotliBitReader.prototype.readMoreInput = function() {
  if (this.bit_end_pos_ > 256) {
    return;
  } else if (this.eos_) {
    if (this.bit_pos_ > this.bit_end_pos_)
      throw new Error('Unexpected end of input ' + this.bit_pos_ + ' ' + this.bit_end_pos_);
  } else {
    var dst = this.buf_ptr_;
    var bytes_read = this.input_.read(this.buf_, dst, BROTLI_READ_SIZE);
    if (bytes_read < 0) {
      throw new Error('Unexpected end of input');
    }
    
    if (bytes_read < BROTLI_READ_SIZE) {
      this.eos_ = 1;
      /* Store 32 bytes of zero after the stream end. */
      for (var p = 0; p < 32; p++)
        this.buf_[dst + bytes_read + p] = 0;
    }
    
    if (dst === 0) {
      /* Copy the head of the ringbuffer to the slack region. */
      for (var p = 0; p < 32; p++)
        this.buf_[(BROTLI_READ_SIZE << 1) + p] = this.buf_[p];

      this.buf_ptr_ = BROTLI_READ_SIZE;
    } else {
      this.buf_ptr_ = 0;
    }
    
    this.bit_end_pos_ += bytes_read << 3;
  }
};

/* Guarantees that there are at least 24 bits in the buffer. */
BrotliBitReader.prototype.fillBitWindow = function() {    
  while (this.bit_pos_ >= 8) {
    this.val_ >>>= 8;
    this.val_ |= this.buf_[this.pos_ & BROTLI_IBUF_MASK] << 24;
    ++this.pos_;
    this.bit_pos_ = this.bit_pos_ - 8 >>> 0;
    this.bit_end_pos_ = this.bit_end_pos_ - 8 >>> 0;
  }
};

/* Reads the specified number of bits from Read Buffer. */
BrotliBitReader.prototype.readBits = function(n_bits) {
  if (32 - this.bit_pos_ < n_bits) {
    this.fillBitWindow();
  }
  
  var val = ((this.val_ >>> this.bit_pos_) & kBitMask[n_bits]);
  this.bit_pos_ += n_bits;
  return val;
};

module.exports = BrotliBitReader;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/brotli/dec/bit_reader.js?`)},"./node_modules/brotli/dec/context.js":(__unused_webpack_module,exports)=>{eval(`/* Copyright 2013 Google Inc. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Lookup table to map the previous two bytes to a context id.

   There are four different context modeling modes defined here:
     CONTEXT_LSB6: context id is the least significant 6 bits of the last byte,
     CONTEXT_MSB6: context id is the most significant 6 bits of the last byte,
     CONTEXT_UTF8: second-order context model tuned for UTF8-encoded text,
     CONTEXT_SIGNED: second-order context model tuned for signed integers.

   The context id for the UTF8 context model is calculated as follows. If p1
   and p2 are the previous two bytes, we calcualte the context as

     context = kContextLookup[p1] | kContextLookup[p2 + 256].

   If the previous two bytes are ASCII characters (i.e. < 128), this will be
   equivalent to

     context = 4 * context1(p1) + context2(p2),

   where context1 is based on the previous byte in the following way:

     0  : non-ASCII control
     1  : \\t, \\n, \\r
     2  : space
     3  : other punctuation
     4  : " '
     5  : %
     6  : ( < [ {
     7  : ) > ] }
     8  : , ; :
     9  : .
     10 : =
     11 : number
     12 : upper-case vowel
     13 : upper-case consonant
     14 : lower-case vowel
     15 : lower-case consonant

   and context2 is based on the second last byte:

     0 : control, space
     1 : punctuation
     2 : upper-case letter, number
     3 : lower-case letter

   If the last byte is ASCII, and the second last byte is not (in a valid UTF8
   stream it will be a continuation byte, value between 128 and 191), the
   context is the same as if the second last byte was an ASCII control or space.

   If the last byte is a UTF8 lead byte (value >= 192), then the next byte will
   be a continuation byte and the context id is 2 or 3 depending on the LSB of
   the last byte and to a lesser extent on the second last byte if it is ASCII.

   If the last byte is a UTF8 continuation byte, the second last byte can be:
     - continuation byte: the next byte is probably ASCII or lead byte (assuming
       4-byte UTF8 characters are rare) and the context id is 0 or 1.
     - lead byte (192 - 207): next byte is ASCII or lead byte, context is 0 or 1
     - lead byte (208 - 255): next byte is continuation byte, context is 2 or 3

   The possible value combinations of the previous two bytes, the range of
   context ids and the type of the next byte is summarized in the table below:

   |--------\\-----------------------------------------------------------------|
   |         \\                         Last byte                              |
   | Second   \\---------------------------------------------------------------|
   | last byte \\    ASCII            |   cont. byte        |   lead byte      |
   |            \\   (0-127)          |   (128-191)         |   (192-)         |
   |=============|===================|=====================|==================|
   |  ASCII      | next: ASCII/lead  |  not valid          |  next: cont.     |
   |  (0-127)    | context: 4 - 63   |                     |  context: 2 - 3  |
   |-------------|-------------------|---------------------|------------------|
   |  cont. byte | next: ASCII/lead  |  next: ASCII/lead   |  next: cont.     |
   |  (128-191)  | context: 4 - 63   |  context: 0 - 1     |  context: 2 - 3  |
   |-------------|-------------------|---------------------|------------------|
   |  lead byte  | not valid         |  next: ASCII/lead   |  not valid       |
   |  (192-207)  |                   |  context: 0 - 1     |                  |
   |-------------|-------------------|---------------------|------------------|
   |  lead byte  | not valid         |  next: cont.        |  not valid       |
   |  (208-)     |                   |  context: 2 - 3     |                  |
   |-------------|-------------------|---------------------|------------------|

   The context id for the signed context mode is calculated as:

     context = (kContextLookup[512 + p1] << 3) | kContextLookup[512 + p2].

   For any context modeling modes, the context ids can be calculated by |-ing
   together two lookups from one table using context model dependent offsets:

     context = kContextLookup[offset1 + p1] | kContextLookup[offset2 + p2].

   where offset1 and offset2 are dependent on the context mode.
*/

var CONTEXT_LSB6         = 0;
var CONTEXT_MSB6         = 1;
var CONTEXT_UTF8         = 2;
var CONTEXT_SIGNED       = 3;

/* Common context lookup table for all context modes. */
exports.lookup = new Uint8Array([
  /* CONTEXT_UTF8, last byte. */
  /* ASCII range. */
   0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  0,  0,  4,  0,  0,
   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
   8, 12, 16, 12, 12, 20, 12, 16, 24, 28, 12, 12, 32, 12, 36, 12,
  44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 32, 32, 24, 40, 28, 12,
  12, 48, 52, 52, 52, 48, 52, 52, 52, 48, 52, 52, 52, 52, 52, 48,
  52, 52, 52, 52, 52, 48, 52, 52, 52, 52, 52, 24, 12, 28, 12, 12,
  12, 56, 60, 60, 60, 56, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56,
  60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60, 24, 12, 28, 12,  0,
  /* UTF8 continuation byte range. */
  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
  /* UTF8 lead byte range. */
  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
  /* CONTEXT_UTF8 second last byte. */
  /* ASCII range. */
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
  1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 0,
  /* UTF8 continuation byte range. */
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  /* UTF8 lead byte range. */
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  /* CONTEXT_SIGNED, second last byte. */
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7,
  /* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */
   0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
  48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 56,
  /* CONTEXT_LSB6, last byte. */
   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
  /* CONTEXT_MSB6, last byte. */
   0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,
   4,  4,  4,  4,  5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,
   8,  8,  8,  8,  9,  9,  9,  9, 10, 10, 10, 10, 11, 11, 11, 11,
  12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15,
  16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19,
  20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23,
  24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27,
  28, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 31,
  32, 32, 32, 32, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 35, 35,
  36, 36, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39,
  40, 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 43, 43, 43, 43,
  44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 47, 47, 47, 47,
  48, 48, 48, 48, 49, 49, 49, 49, 50, 50, 50, 50, 51, 51, 51, 51,
  52, 52, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 55, 55, 55, 55,
  56, 56, 56, 56, 57, 57, 57, 57, 58, 58, 58, 58, 59, 59, 59, 59,
  60, 60, 60, 60, 61, 61, 61, 61, 62, 62, 62, 62, 63, 63, 63, 63,
  /* CONTEXT_{M,L}SB6, second last byte, */
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
]);

exports.lookupOffsets = new Uint16Array([
  /* CONTEXT_LSB6 */
  1024, 1536,
  /* CONTEXT_MSB6 */
  1280, 1536,
  /* CONTEXT_UTF8 */
  0, 256,
  /* CONTEXT_SIGNED */
  768, 512,
]);


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/brotli/dec/context.js?`)},"./node_modules/brotli/dec/decode.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval(`/* Copyright 2013 Google Inc. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

var BrotliInput = (__webpack_require__(/*! ./streams */ "./node_modules/brotli/dec/streams.js").BrotliInput);
var BrotliOutput = (__webpack_require__(/*! ./streams */ "./node_modules/brotli/dec/streams.js").BrotliOutput);
var BrotliBitReader = __webpack_require__(/*! ./bit_reader */ "./node_modules/brotli/dec/bit_reader.js");
var BrotliDictionary = __webpack_require__(/*! ./dictionary */ "./node_modules/brotli/dec/dictionary.js");
var HuffmanCode = (__webpack_require__(/*! ./huffman */ "./node_modules/brotli/dec/huffman.js").HuffmanCode);
var BrotliBuildHuffmanTable = (__webpack_require__(/*! ./huffman */ "./node_modules/brotli/dec/huffman.js").BrotliBuildHuffmanTable);
var Context = __webpack_require__(/*! ./context */ "./node_modules/brotli/dec/context.js");
var Prefix = __webpack_require__(/*! ./prefix */ "./node_modules/brotli/dec/prefix.js");
var Transform = __webpack_require__(/*! ./transform */ "./node_modules/brotli/dec/transform.js");

var kDefaultCodeLength = 8;
var kCodeLengthRepeatCode = 16;
var kNumLiteralCodes = 256;
var kNumInsertAndCopyCodes = 704;
var kNumBlockLengthCodes = 26;
var kLiteralContextBits = 6;
var kDistanceContextBits = 2;

var HUFFMAN_TABLE_BITS = 8;
var HUFFMAN_TABLE_MASK = 0xff;
/* Maximum possible Huffman table size for an alphabet size of 704, max code
 * length 15 and root table bits 8. */
var HUFFMAN_MAX_TABLE_SIZE = 1080;

var CODE_LENGTH_CODES = 18;
var kCodeLengthCodeOrder = new Uint8Array([
  1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15,
]);

var NUM_DISTANCE_SHORT_CODES = 16;
var kDistanceShortCodeIndexOffset = new Uint8Array([
  3, 2, 1, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2
]);

var kDistanceShortCodeValueOffset = new Int8Array([
  0, 0, 0, 0, -1, 1, -2, 2, -3, 3, -1, 1, -2, 2, -3, 3
]);

var kMaxHuffmanTableSize = new Uint16Array([
  256, 402, 436, 468, 500, 534, 566, 598, 630, 662, 694, 726, 758, 790, 822,
  854, 886, 920, 952, 984, 1016, 1048, 1080
]);

function DecodeWindowBits(br) {
  var n;
  if (br.readBits(1) === 0) {
    return 16;
  }
  
  n = br.readBits(3);
  if (n > 0) {
    return 17 + n;
  }
  
  n = br.readBits(3);
  if (n > 0) {
    return 8 + n;
  }
  
  return 17;
}

/* Decodes a number in the range [0..255], by reading 1 - 11 bits. */
function DecodeVarLenUint8(br) {
  if (br.readBits(1)) {
    var nbits = br.readBits(3);
    if (nbits === 0) {
      return 1;
    } else {
      return br.readBits(nbits) + (1 << nbits);
    }
  }
  return 0;
}

function MetaBlockLength() {
  this.meta_block_length = 0;
  this.input_end = 0;
  this.is_uncompressed = 0;
  this.is_metadata = false;
}

function DecodeMetaBlockLength(br) {
  var out = new MetaBlockLength;  
  var size_nibbles;
  var size_bytes;
  var i;
  
  out.input_end = br.readBits(1);
  if (out.input_end && br.readBits(1)) {
    return out;
  }
  
  size_nibbles = br.readBits(2) + 4;
  if (size_nibbles === 7) {
    out.is_metadata = true;
    
    if (br.readBits(1) !== 0)
      throw new Error('Invalid reserved bit');
    
    size_bytes = br.readBits(2);
    if (size_bytes === 0)
      return out;
    
    for (i = 0; i < size_bytes; i++) {
      var next_byte = br.readBits(8);
      if (i + 1 === size_bytes && size_bytes > 1 && next_byte === 0)
        throw new Error('Invalid size byte');
      
      out.meta_block_length |= next_byte << (i * 8);
    }
  } else {
    for (i = 0; i < size_nibbles; ++i) {
      var next_nibble = br.readBits(4);
      if (i + 1 === size_nibbles && size_nibbles > 4 && next_nibble === 0)
        throw new Error('Invalid size nibble');
      
      out.meta_block_length |= next_nibble << (i * 4);
    }
  }
  
  ++out.meta_block_length;
  
  if (!out.input_end && !out.is_metadata) {
    out.is_uncompressed = br.readBits(1);
  }
  
  return out;
}

/* Decodes the next Huffman code from bit-stream. */
function ReadSymbol(table, index, br) {
  var start_index = index;
  
  var nbits;
  br.fillBitWindow();
  index += (br.val_ >>> br.bit_pos_) & HUFFMAN_TABLE_MASK;
  nbits = table[index].bits - HUFFMAN_TABLE_BITS;
  if (nbits > 0) {
    br.bit_pos_ += HUFFMAN_TABLE_BITS;
    index += table[index].value;
    index += (br.val_ >>> br.bit_pos_) & ((1 << nbits) - 1);
  }
  br.bit_pos_ += table[index].bits;
  return table[index].value;
}

function ReadHuffmanCodeLengths(code_length_code_lengths, num_symbols, code_lengths, br) {
  var symbol = 0;
  var prev_code_len = kDefaultCodeLength;
  var repeat = 0;
  var repeat_code_len = 0;
  var space = 32768;
  
  var table = [];
  for (var i = 0; i < 32; i++)
    table.push(new HuffmanCode(0, 0));
  
  BrotliBuildHuffmanTable(table, 0, 5, code_length_code_lengths, CODE_LENGTH_CODES);

  while (symbol < num_symbols && space > 0) {
    var p = 0;
    var code_len;
    
    br.readMoreInput();
    br.fillBitWindow();
    p += (br.val_ >>> br.bit_pos_) & 31;
    br.bit_pos_ += table[p].bits;
    code_len = table[p].value & 0xff;
    if (code_len < kCodeLengthRepeatCode) {
      repeat = 0;
      code_lengths[symbol++] = code_len;
      if (code_len !== 0) {
        prev_code_len = code_len;
        space -= 32768 >> code_len;
      }
    } else {
      var extra_bits = code_len - 14;
      var old_repeat;
      var repeat_delta;
      var new_len = 0;
      if (code_len === kCodeLengthRepeatCode) {
        new_len = prev_code_len;
      }
      if (repeat_code_len !== new_len) {
        repeat = 0;
        repeat_code_len = new_len;
      }
      old_repeat = repeat;
      if (repeat > 0) {
        repeat -= 2;
        repeat <<= extra_bits;
      }
      repeat += br.readBits(extra_bits) + 3;
      repeat_delta = repeat - old_repeat;
      if (symbol + repeat_delta > num_symbols) {
        throw new Error('[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols');
      }
      
      for (var x = 0; x < repeat_delta; x++)
        code_lengths[symbol + x] = repeat_code_len;
      
      symbol += repeat_delta;
      
      if (repeat_code_len !== 0) {
        space -= repeat_delta << (15 - repeat_code_len);
      }
    }
  }
  if (space !== 0) {
    throw new Error("[ReadHuffmanCodeLengths] space = " + space);
  }
  
  for (; symbol < num_symbols; symbol++)
    code_lengths[symbol] = 0;
}

function ReadHuffmanCode(alphabet_size, tables, table, br) {
  var table_size = 0;
  var simple_code_or_skip;
  var code_lengths = new Uint8Array(alphabet_size);
  
  br.readMoreInput();
  
  /* simple_code_or_skip is used as follows:
     1 for simple code;
     0 for no skipping, 2 skips 2 code lengths, 3 skips 3 code lengths */
  simple_code_or_skip = br.readBits(2);
  if (simple_code_or_skip === 1) {
    /* Read symbols, codes & code lengths directly. */
    var i;
    var max_bits_counter = alphabet_size - 1;
    var max_bits = 0;
    var symbols = new Int32Array(4);
    var num_symbols = br.readBits(2) + 1;
    while (max_bits_counter) {
      max_bits_counter >>= 1;
      ++max_bits;
    }

    for (i = 0; i < num_symbols; ++i) {
      symbols[i] = br.readBits(max_bits) % alphabet_size;
      code_lengths[symbols[i]] = 2;
    }
    code_lengths[symbols[0]] = 1;
    switch (num_symbols) {
      case 1:
        break;
      case 3:
        if ((symbols[0] === symbols[1]) ||
            (symbols[0] === symbols[2]) ||
            (symbols[1] === symbols[2])) {
          throw new Error('[ReadHuffmanCode] invalid symbols');
        }
        break;
      case 2:
        if (symbols[0] === symbols[1]) {
          throw new Error('[ReadHuffmanCode] invalid symbols');
        }
        
        code_lengths[symbols[1]] = 1;
        break;
      case 4:
        if ((symbols[0] === symbols[1]) ||
            (symbols[0] === symbols[2]) ||
            (symbols[0] === symbols[3]) ||
            (symbols[1] === symbols[2]) ||
            (symbols[1] === symbols[3]) ||
            (symbols[2] === symbols[3])) {
          throw new Error('[ReadHuffmanCode] invalid symbols');
        }
        
        if (br.readBits(1)) {
          code_lengths[symbols[2]] = 3;
          code_lengths[symbols[3]] = 3;
        } else {
          code_lengths[symbols[0]] = 2;
        }
        break;
    }
  } else {  /* Decode Huffman-coded code lengths. */
    var i;
    var code_length_code_lengths = new Uint8Array(CODE_LENGTH_CODES);
    var space = 32;
    var num_codes = 0;
    /* Static Huffman code for the code length code lengths */
    var huff = [
      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), 
      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 1),
      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), 
      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 5)
    ];
    for (i = simple_code_or_skip; i < CODE_LENGTH_CODES && space > 0; ++i) {
      var code_len_idx = kCodeLengthCodeOrder[i];
      var p = 0;
      var v;
      br.fillBitWindow();
      p += (br.val_ >>> br.bit_pos_) & 15;
      br.bit_pos_ += huff[p].bits;
      v = huff[p].value;
      code_length_code_lengths[code_len_idx] = v;
      if (v !== 0) {
        space -= (32 >> v);
        ++num_codes;
      }
    }
    
    if (!(num_codes === 1 || space === 0))
      throw new Error('[ReadHuffmanCode] invalid num_codes or space');
    
    ReadHuffmanCodeLengths(code_length_code_lengths, alphabet_size, code_lengths, br);
  }
  
  table_size = BrotliBuildHuffmanTable(tables, table, HUFFMAN_TABLE_BITS, code_lengths, alphabet_size);
  
  if (table_size === 0) {
    throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");
  }
  
  return table_size;
}

function ReadBlockLength(table, index, br) {
  var code;
  var nbits;
  code = ReadSymbol(table, index, br);
  nbits = Prefix.kBlockLengthPrefixCode[code].nbits;
  return Prefix.kBlockLengthPrefixCode[code].offset + br.readBits(nbits);
}

function TranslateShortCodes(code, ringbuffer, index) {
  var val;
  if (code < NUM_DISTANCE_SHORT_CODES) {
    index += kDistanceShortCodeIndexOffset[code];
    index &= 3;
    val = ringbuffer[index] + kDistanceShortCodeValueOffset[code];
  } else {
    val = code - NUM_DISTANCE_SHORT_CODES + 1;
  }
  return val;
}

function MoveToFront(v, index) {
  var value = v[index];
  var i = index;
  for (; i; --i) v[i] = v[i - 1];
  v[0] = value;
}

function InverseMoveToFrontTransform(v, v_len) {
  var mtf = new Uint8Array(256);
  var i;
  for (i = 0; i < 256; ++i) {
    mtf[i] = i;
  }
  for (i = 0; i < v_len; ++i) {
    var index = v[i];
    v[i] = mtf[index];
    if (index) MoveToFront(mtf, index);
  }
}

/* Contains a collection of huffman trees with the same alphabet size. */
function HuffmanTreeGroup(alphabet_size, num_htrees) {
  this.alphabet_size = alphabet_size;
  this.num_htrees = num_htrees;
  this.codes = new Array(num_htrees + num_htrees * kMaxHuffmanTableSize[(alphabet_size + 31) >>> 5]);  
  this.htrees = new Uint32Array(num_htrees);
}

HuffmanTreeGroup.prototype.decode = function(br) {
  var i;
  var table_size;
  var next = 0;
  for (i = 0; i < this.num_htrees; ++i) {
    this.htrees[i] = next;
    table_size = ReadHuffmanCode(this.alphabet_size, this.codes, next, br);
    next += table_size;
  }
};

function DecodeContextMap(context_map_size, br) {
  var out = { num_htrees: null, context_map: null };
  var use_rle_for_zeros;
  var max_run_length_prefix = 0;
  var table;
  var i;
  
  br.readMoreInput();
  var num_htrees = out.num_htrees = DecodeVarLenUint8(br) + 1;

  var context_map = out.context_map = new Uint8Array(context_map_size);
  if (num_htrees <= 1) {
    return out;
  }

  use_rle_for_zeros = br.readBits(1);
  if (use_rle_for_zeros) {
    max_run_length_prefix = br.readBits(4) + 1;
  }
  
  table = [];
  for (i = 0; i < HUFFMAN_MAX_TABLE_SIZE; i++) {
    table[i] = new HuffmanCode(0, 0);
  }
  
  ReadHuffmanCode(num_htrees + max_run_length_prefix, table, 0, br);
  
  for (i = 0; i < context_map_size;) {
    var code;

    br.readMoreInput();
    code = ReadSymbol(table, 0, br);
    if (code === 0) {
      context_map[i] = 0;
      ++i;
    } else if (code <= max_run_length_prefix) {
      var reps = 1 + (1 << code) + br.readBits(code);
      while (--reps) {
        if (i >= context_map_size) {
          throw new Error("[DecodeContextMap] i >= context_map_size");
        }
        context_map[i] = 0;
        ++i;
      }
    } else {
      context_map[i] = code - max_run_length_prefix;
      ++i;
    }
  }
  if (br.readBits(1)) {
    InverseMoveToFrontTransform(context_map, context_map_size);
  }
  
  return out;
}

function DecodeBlockType(max_block_type, trees, tree_type, block_types, ringbuffers, indexes, br) {
  var ringbuffer = tree_type * 2;
  var index = tree_type;
  var type_code = ReadSymbol(trees, tree_type * HUFFMAN_MAX_TABLE_SIZE, br);
  var block_type;
  if (type_code === 0) {
    block_type = ringbuffers[ringbuffer + (indexes[index] & 1)];
  } else if (type_code === 1) {
    block_type = ringbuffers[ringbuffer + ((indexes[index] - 1) & 1)] + 1;
  } else {
    block_type = type_code - 2;
  }
  if (block_type >= max_block_type) {
    block_type -= max_block_type;
  }
  block_types[tree_type] = block_type;
  ringbuffers[ringbuffer + (indexes[index] & 1)] = block_type;
  ++indexes[index];
}

function CopyUncompressedBlockToOutput(output, len, pos, ringbuffer, ringbuffer_mask, br) {
  var rb_size = ringbuffer_mask + 1;
  var rb_pos = pos & ringbuffer_mask;
  var br_pos = br.pos_ & BrotliBitReader.IBUF_MASK;
  var nbytes;

  /* For short lengths copy byte-by-byte */
  if (len < 8 || br.bit_pos_ + (len << 3) < br.bit_end_pos_) {
    while (len-- > 0) {
      br.readMoreInput();
      ringbuffer[rb_pos++] = br.readBits(8);
      if (rb_pos === rb_size) {
        output.write(ringbuffer, rb_size);
        rb_pos = 0;
      }
    }
    return;
  }

  if (br.bit_end_pos_ < 32) {
    throw new Error('[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32');
  }

  /* Copy remaining 0-4 bytes from br.val_ to ringbuffer. */
  while (br.bit_pos_ < 32) {
    ringbuffer[rb_pos] = (br.val_ >>> br.bit_pos_);
    br.bit_pos_ += 8;
    ++rb_pos;
    --len;
  }

  /* Copy remaining bytes from br.buf_ to ringbuffer. */
  nbytes = (br.bit_end_pos_ - br.bit_pos_) >> 3;
  if (br_pos + nbytes > BrotliBitReader.IBUF_MASK) {
    var tail = BrotliBitReader.IBUF_MASK + 1 - br_pos;
    for (var x = 0; x < tail; x++)
      ringbuffer[rb_pos + x] = br.buf_[br_pos + x];
    
    nbytes -= tail;
    rb_pos += tail;
    len -= tail;
    br_pos = 0;
  }

  for (var x = 0; x < nbytes; x++)
    ringbuffer[rb_pos + x] = br.buf_[br_pos + x];
  
  rb_pos += nbytes;
  len -= nbytes;

  /* If we wrote past the logical end of the ringbuffer, copy the tail of the
     ringbuffer to its beginning and flush the ringbuffer to the output. */
  if (rb_pos >= rb_size) {
    output.write(ringbuffer, rb_size);
    rb_pos -= rb_size;    
    for (var x = 0; x < rb_pos; x++)
      ringbuffer[x] = ringbuffer[rb_size + x];
  }

  /* If we have more to copy than the remaining size of the ringbuffer, then we
     first fill the ringbuffer from the input and then flush the ringbuffer to
     the output */
  while (rb_pos + len >= rb_size) {
    nbytes = rb_size - rb_pos;
    if (br.input_.read(ringbuffer, rb_pos, nbytes) < nbytes) {
      throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');
    }
    output.write(ringbuffer, rb_size);
    len -= nbytes;
    rb_pos = 0;
  }

  /* Copy straight from the input onto the ringbuffer. The ringbuffer will be
     flushed to the output at a later time. */
  if (br.input_.read(ringbuffer, rb_pos, len) < len) {
    throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');
  }

  /* Restore the state of the bit reader. */
  br.reset();
}

/* Advances the bit reader position to the next byte boundary and verifies
   that any skipped bits are set to zero. */
function JumpToByteBoundary(br) {
  var new_bit_pos = (br.bit_pos_ + 7) & ~7;
  var pad_bits = br.readBits(new_bit_pos - br.bit_pos_);
  return pad_bits == 0;
}

function BrotliDecompressedSize(buffer) {
  var input = new BrotliInput(buffer);
  var br = new BrotliBitReader(input);
  DecodeWindowBits(br);
  var out = DecodeMetaBlockLength(br);
  return out.meta_block_length;
}

exports.BrotliDecompressedSize = BrotliDecompressedSize;

function BrotliDecompressBuffer(buffer, output_size) {
  var input = new BrotliInput(buffer);
  
  if (output_size == null) {
    output_size = BrotliDecompressedSize(buffer);
  }
  
  var output_buffer = new Uint8Array(output_size);
  var output = new BrotliOutput(output_buffer);
  
  BrotliDecompress(input, output);
  
  if (output.pos < output.buffer.length) {
    output.buffer = output.buffer.subarray(0, output.pos);
  }
  
  return output.buffer;
}

exports.BrotliDecompressBuffer = BrotliDecompressBuffer;

function BrotliDecompress(input, output) {
  var i;
  var pos = 0;
  var input_end = 0;
  var window_bits = 0;
  var max_backward_distance;
  var max_distance = 0;
  var ringbuffer_size;
  var ringbuffer_mask;
  var ringbuffer;
  var ringbuffer_end;
  /* This ring buffer holds a few past copy distances that will be used by */
  /* some special distance codes. */
  var dist_rb = [ 16, 15, 11, 4 ];
  var dist_rb_idx = 0;
  /* The previous 2 bytes used for context. */
  var prev_byte1 = 0;
  var prev_byte2 = 0;
  var hgroup = [new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0)];
  var block_type_trees;
  var block_len_trees;
  var br;

  /* We need the slack region for the following reasons:
       - always doing two 8-byte copies for fast backward copying
       - transforms
       - flushing the input ringbuffer when decoding uncompressed blocks */
  var kRingBufferWriteAheadSlack = 128 + BrotliBitReader.READ_SIZE;

  br = new BrotliBitReader(input);

  /* Decode window size. */
  window_bits = DecodeWindowBits(br);
  max_backward_distance = (1 << window_bits) - 16;

  ringbuffer_size = 1 << window_bits;
  ringbuffer_mask = ringbuffer_size - 1;
  ringbuffer = new Uint8Array(ringbuffer_size + kRingBufferWriteAheadSlack + BrotliDictionary.maxDictionaryWordLength);
  ringbuffer_end = ringbuffer_size;

  block_type_trees = [];
  block_len_trees = [];
  for (var x = 0; x < 3 * HUFFMAN_MAX_TABLE_SIZE; x++) {
    block_type_trees[x] = new HuffmanCode(0, 0);
    block_len_trees[x] = new HuffmanCode(0, 0);
  }

  while (!input_end) {
    var meta_block_remaining_len = 0;
    var is_uncompressed;
    var block_length = [ 1 << 28, 1 << 28, 1 << 28 ];
    var block_type = [ 0 ];
    var num_block_types = [ 1, 1, 1 ];
    var block_type_rb = [ 0, 1, 0, 1, 0, 1 ];
    var block_type_rb_index = [ 0 ];
    var distance_postfix_bits;
    var num_direct_distance_codes;
    var distance_postfix_mask;
    var num_distance_codes;
    var context_map = null;
    var context_modes = null;
    var num_literal_htrees;
    var dist_context_map = null;
    var num_dist_htrees;
    var context_offset = 0;
    var context_map_slice = null;
    var literal_htree_index = 0;
    var dist_context_offset = 0;
    var dist_context_map_slice = null;
    var dist_htree_index = 0;
    var context_lookup_offset1 = 0;
    var context_lookup_offset2 = 0;
    var context_mode;
    var htree_command;

    for (i = 0; i < 3; ++i) {
      hgroup[i].codes = null;
      hgroup[i].htrees = null;
    }

    br.readMoreInput();
    
    var _out = DecodeMetaBlockLength(br);
    meta_block_remaining_len = _out.meta_block_length;
    if (pos + meta_block_remaining_len > output.buffer.length) {
      /* We need to grow the output buffer to fit the additional data. */
      var tmp = new Uint8Array( pos + meta_block_remaining_len );
      tmp.set( output.buffer );
      output.buffer = tmp;
    }    
    input_end = _out.input_end;
    is_uncompressed = _out.is_uncompressed;
    
    if (_out.is_metadata) {
      JumpToByteBoundary(br);
      
      for (; meta_block_remaining_len > 0; --meta_block_remaining_len) {
        br.readMoreInput();
        /* Read one byte and ignore it. */
        br.readBits(8);
      }
      
      continue;
    }
    
    if (meta_block_remaining_len === 0) {
      continue;
    }
    
    if (is_uncompressed) {
      br.bit_pos_ = (br.bit_pos_ + 7) & ~7;
      CopyUncompressedBlockToOutput(output, meta_block_remaining_len, pos,
                                    ringbuffer, ringbuffer_mask, br);
      pos += meta_block_remaining_len;
      continue;
    }
    
    for (i = 0; i < 3; ++i) {
      num_block_types[i] = DecodeVarLenUint8(br) + 1;
      if (num_block_types[i] >= 2) {
        ReadHuffmanCode(num_block_types[i] + 2, block_type_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);
        ReadHuffmanCode(kNumBlockLengthCodes, block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);
        block_length[i] = ReadBlockLength(block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);
        block_type_rb_index[i] = 1;
      }
    }
    
    br.readMoreInput();
    
    distance_postfix_bits = br.readBits(2);
    num_direct_distance_codes = NUM_DISTANCE_SHORT_CODES + (br.readBits(4) << distance_postfix_bits);
    distance_postfix_mask = (1 << distance_postfix_bits) - 1;
    num_distance_codes = (num_direct_distance_codes + (48 << distance_postfix_bits));
    context_modes = new Uint8Array(num_block_types[0]);

    for (i = 0; i < num_block_types[0]; ++i) {
       br.readMoreInput();
       context_modes[i] = (br.readBits(2) << 1);
    }
    
    var _o1 = DecodeContextMap(num_block_types[0] << kLiteralContextBits, br);
    num_literal_htrees = _o1.num_htrees;
    context_map = _o1.context_map;
    
    var _o2 = DecodeContextMap(num_block_types[2] << kDistanceContextBits, br);
    num_dist_htrees = _o2.num_htrees;
    dist_context_map = _o2.context_map;
    
    hgroup[0] = new HuffmanTreeGroup(kNumLiteralCodes, num_literal_htrees);
    hgroup[1] = new HuffmanTreeGroup(kNumInsertAndCopyCodes, num_block_types[1]);
    hgroup[2] = new HuffmanTreeGroup(num_distance_codes, num_dist_htrees);

    for (i = 0; i < 3; ++i) {
      hgroup[i].decode(br);
    }

    context_map_slice = 0;
    dist_context_map_slice = 0;
    context_mode = context_modes[block_type[0]];
    context_lookup_offset1 = Context.lookupOffsets[context_mode];
    context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];
    htree_command = hgroup[1].htrees[0];

    while (meta_block_remaining_len > 0) {
      var cmd_code;
      var range_idx;
      var insert_code;
      var copy_code;
      var insert_length;
      var copy_length;
      var distance_code;
      var distance;
      var context;
      var j;
      var copy_dst;

      br.readMoreInput();
      
      if (block_length[1] === 0) {
        DecodeBlockType(num_block_types[1],
                        block_type_trees, 1, block_type, block_type_rb,
                        block_type_rb_index, br);
        block_length[1] = ReadBlockLength(block_len_trees, HUFFMAN_MAX_TABLE_SIZE, br);
        htree_command = hgroup[1].htrees[block_type[1]];
      }
      --block_length[1];
      cmd_code = ReadSymbol(hgroup[1].codes, htree_command, br);
      range_idx = cmd_code >> 6;
      if (range_idx >= 2) {
        range_idx -= 2;
        distance_code = -1;
      } else {
        distance_code = 0;
      }
      insert_code = Prefix.kInsertRangeLut[range_idx] + ((cmd_code >> 3) & 7);
      copy_code = Prefix.kCopyRangeLut[range_idx] + (cmd_code & 7);
      insert_length = Prefix.kInsertLengthPrefixCode[insert_code].offset +
          br.readBits(Prefix.kInsertLengthPrefixCode[insert_code].nbits);
      copy_length = Prefix.kCopyLengthPrefixCode[copy_code].offset +
          br.readBits(Prefix.kCopyLengthPrefixCode[copy_code].nbits);
      prev_byte1 = ringbuffer[pos-1 & ringbuffer_mask];
      prev_byte2 = ringbuffer[pos-2 & ringbuffer_mask];
      for (j = 0; j < insert_length; ++j) {
        br.readMoreInput();

        if (block_length[0] === 0) {
          DecodeBlockType(num_block_types[0],
                          block_type_trees, 0, block_type, block_type_rb,
                          block_type_rb_index, br);
          block_length[0] = ReadBlockLength(block_len_trees, 0, br);
          context_offset = block_type[0] << kLiteralContextBits;
          context_map_slice = context_offset;
          context_mode = context_modes[block_type[0]];
          context_lookup_offset1 = Context.lookupOffsets[context_mode];
          context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];
        }
        context = (Context.lookup[context_lookup_offset1 + prev_byte1] |
                   Context.lookup[context_lookup_offset2 + prev_byte2]);
        literal_htree_index = context_map[context_map_slice + context];
        --block_length[0];
        prev_byte2 = prev_byte1;
        prev_byte1 = ReadSymbol(hgroup[0].codes, hgroup[0].htrees[literal_htree_index], br);
        ringbuffer[pos & ringbuffer_mask] = prev_byte1;
        if ((pos & ringbuffer_mask) === ringbuffer_mask) {
          output.write(ringbuffer, ringbuffer_size);
        }
        ++pos;
      }
      meta_block_remaining_len -= insert_length;
      if (meta_block_remaining_len <= 0) break;

      if (distance_code < 0) {
        var context;
        
        br.readMoreInput();
        if (block_length[2] === 0) {
          DecodeBlockType(num_block_types[2],
                          block_type_trees, 2, block_type, block_type_rb,
                          block_type_rb_index, br);
          block_length[2] = ReadBlockLength(block_len_trees, 2 * HUFFMAN_MAX_TABLE_SIZE, br);
          dist_context_offset = block_type[2] << kDistanceContextBits;
          dist_context_map_slice = dist_context_offset;
        }
        --block_length[2];
        context = (copy_length > 4 ? 3 : copy_length - 2) & 0xff;
        dist_htree_index = dist_context_map[dist_context_map_slice + context];
        distance_code = ReadSymbol(hgroup[2].codes, hgroup[2].htrees[dist_htree_index], br);
        if (distance_code >= num_direct_distance_codes) {
          var nbits;
          var postfix;
          var offset;
          distance_code -= num_direct_distance_codes;
          postfix = distance_code & distance_postfix_mask;
          distance_code >>= distance_postfix_bits;
          nbits = (distance_code >> 1) + 1;
          offset = ((2 + (distance_code & 1)) << nbits) - 4;
          distance_code = num_direct_distance_codes +
              ((offset + br.readBits(nbits)) <<
               distance_postfix_bits) + postfix;
        }
      }

      /* Convert the distance code to the actual distance by possibly looking */
      /* up past distnaces from the ringbuffer. */
      distance = TranslateShortCodes(distance_code, dist_rb, dist_rb_idx);
      if (distance < 0) {
        throw new Error('[BrotliDecompress] invalid distance');
      }

      if (pos < max_backward_distance &&
          max_distance !== max_backward_distance) {
        max_distance = pos;
      } else {
        max_distance = max_backward_distance;
      }

      copy_dst = pos & ringbuffer_mask;

      if (distance > max_distance) {
        if (copy_length >= BrotliDictionary.minDictionaryWordLength &&
            copy_length <= BrotliDictionary.maxDictionaryWordLength) {
          var offset = BrotliDictionary.offsetsByLength[copy_length];
          var word_id = distance - max_distance - 1;
          var shift = BrotliDictionary.sizeBitsByLength[copy_length];
          var mask = (1 << shift) - 1;
          var word_idx = word_id & mask;
          var transform_idx = word_id >> shift;
          offset += word_idx * copy_length;
          if (transform_idx < Transform.kNumTransforms) {
            var len = Transform.transformDictionaryWord(ringbuffer, copy_dst, offset, copy_length, transform_idx);
            copy_dst += len;
            pos += len;
            meta_block_remaining_len -= len;
            if (copy_dst >= ringbuffer_end) {
              output.write(ringbuffer, ringbuffer_size);
              
              for (var _x = 0; _x < (copy_dst - ringbuffer_end); _x++)
                ringbuffer[_x] = ringbuffer[ringbuffer_end + _x];
            }
          } else {
            throw new Error("Invalid backward reference. pos: " + pos + " distance: " + distance +
              " len: " + copy_length + " bytes left: " + meta_block_remaining_len);
          }
        } else {
          throw new Error("Invalid backward reference. pos: " + pos + " distance: " + distance +
            " len: " + copy_length + " bytes left: " + meta_block_remaining_len);
        }
      } else {
        if (distance_code > 0) {
          dist_rb[dist_rb_idx & 3] = distance;
          ++dist_rb_idx;
        }

        if (copy_length > meta_block_remaining_len) {
          throw new Error("Invalid backward reference. pos: " + pos + " distance: " + distance +
            " len: " + copy_length + " bytes left: " + meta_block_remaining_len);
        }

        for (j = 0; j < copy_length; ++j) {
          ringbuffer[pos & ringbuffer_mask] = ringbuffer[(pos - distance) & ringbuffer_mask];
          if ((pos & ringbuffer_mask) === ringbuffer_mask) {
            output.write(ringbuffer, ringbuffer_size);
          }
          ++pos;
          --meta_block_remaining_len;
        }
      }

      /* When we get here, we must have inserted at least one literal and */
      /* made a copy of at least length two, therefore accessing the last 2 */
      /* bytes is valid. */
      prev_byte1 = ringbuffer[(pos - 1) & ringbuffer_mask];
      prev_byte2 = ringbuffer[(pos - 2) & ringbuffer_mask];
    }

    /* Protect pos from overflow, wrap it around at every GB of input data */
    pos &= 0x3fffffff;
  }

  output.write(ringbuffer, pos & ringbuffer_mask);
}

exports.BrotliDecompress = BrotliDecompress;

BrotliDictionary.init();


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/brotli/dec/decode.js?`)},"./node_modules/brotli/dec/dictionary-browser.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval(`var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js");

/**
 * The normal dictionary-data.js is quite large, which makes it 
 * unsuitable for browser usage. In order to make it smaller, 
 * we read dictionary.bin, which is a compressed version of
 * the dictionary, and on initial load, Brotli decompresses 
 * it's own dictionary. \u{1F61C}
 */
exports.init = function() {
  var BrotliDecompressBuffer = (__webpack_require__(/*! ./decode */ "./node_modules/brotli/dec/decode.js").BrotliDecompressBuffer);
  var compressed = base64.toByteArray(__webpack_require__(/*! ./dictionary.bin.js */ "./node_modules/brotli/dec/dictionary.bin.js"));
  return BrotliDecompressBuffer(compressed);
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/brotli/dec/dictionary-browser.js?`)},"./node_modules/brotli/dec/dictionary.bin.js":module=>{eval(`module.exports="";


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/brotli/dec/dictionary.bin.js?`)},"./node_modules/brotli/dec/dictionary.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval(`/* Copyright 2013 Google Inc. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Collection of static dictionary words.
*/

var data = __webpack_require__(/*! ./dictionary-data */ "./node_modules/brotli/dec/dictionary-browser.js");
exports.init = function() {
  exports.dictionary = data.init();
};

exports.offsetsByLength = new Uint32Array([
     0,     0,     0,     0,     0,  4096,  9216, 21504, 35840, 44032,
 53248, 63488, 74752, 87040, 93696, 100864, 104704, 106752, 108928, 113536,
 115968, 118528, 119872, 121280, 122016,
]);

exports.sizeBitsByLength = new Uint8Array([
  0,  0,  0,  0, 10, 10, 11, 11, 10, 10,
 10, 10, 10,  9,  9,  8,  7,  7,  8,  7,
  7,  6,  6,  5,  5,
]);

exports.minDictionaryWordLength = 4;
exports.maxDictionaryWordLength = 24;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/brotli/dec/dictionary.js?`)},"./node_modules/brotli/dec/huffman.js":(__unused_webpack_module,exports)=>{eval(`function HuffmanCode(bits, value) {
  this.bits = bits;   /* number of bits used for this symbol */
  this.value = value; /* symbol value or table offset */
}

exports.HuffmanCode = HuffmanCode;

var MAX_LENGTH = 15;

/* Returns reverse(reverse(key, len) + 1, len), where reverse(key, len) is the
   bit-wise reversal of the len least significant bits of key. */
function GetNextKey(key, len) {
  var step = 1 << (len - 1);
  while (key & step) {
    step >>= 1;
  }
  return (key & (step - 1)) + step;
}

/* Stores code in table[0], table[step], table[2*step], ..., table[end] */
/* Assumes that end is an integer multiple of step */
function ReplicateValue(table, i, step, end, code) {
  do {
    end -= step;
    table[i + end] = new HuffmanCode(code.bits, code.value);
  } while (end > 0);
}

/* Returns the table width of the next 2nd level table. count is the histogram
   of bit lengths for the remaining symbols, len is the code length of the next
   processed symbol */
function NextTableBitSize(count, len, root_bits) {
  var left = 1 << (len - root_bits);
  while (len < MAX_LENGTH) {
    left -= count[len];
    if (left <= 0) break;
    ++len;
    left <<= 1;
  }
  return len - root_bits;
}

exports.BrotliBuildHuffmanTable = function(root_table, table, root_bits, code_lengths, code_lengths_size) {
  var start_table = table;
  var code;            /* current table entry */
  var len;             /* current code length */
  var symbol;          /* symbol index in original or sorted table */
  var key;             /* reversed prefix code */
  var step;            /* step size to replicate values in current table */
  var low;             /* low bits for current root entry */
  var mask;            /* mask for low bits */
  var table_bits;      /* key length of current table */
  var table_size;      /* size of current table */
  var total_size;      /* sum of root table size and 2nd level table sizes */
  var sorted;          /* symbols sorted by code length */
  var count = new Int32Array(MAX_LENGTH + 1);  /* number of codes of each length */
  var offset = new Int32Array(MAX_LENGTH + 1);  /* offsets in sorted table for each length */

  sorted = new Int32Array(code_lengths_size);

  /* build histogram of code lengths */
  for (symbol = 0; symbol < code_lengths_size; symbol++) {
    count[code_lengths[symbol]]++;
  }

  /* generate offsets into sorted symbol table by code length */
  offset[1] = 0;
  for (len = 1; len < MAX_LENGTH; len++) {
    offset[len + 1] = offset[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (symbol = 0; symbol < code_lengths_size; symbol++) {
    if (code_lengths[symbol] !== 0) {
      sorted[offset[code_lengths[symbol]]++] = symbol;
    }
  }
  
  table_bits = root_bits;
  table_size = 1 << table_bits;
  total_size = table_size;

  /* special case code with only one value */
  if (offset[MAX_LENGTH] === 1) {
    for (key = 0; key < total_size; ++key) {
      root_table[table + key] = new HuffmanCode(0, sorted[0] & 0xffff);
    }
    
    return total_size;
  }

  /* fill in root table */
  key = 0;
  symbol = 0;
  for (len = 1, step = 2; len <= root_bits; ++len, step <<= 1) {
    for (; count[len] > 0; --count[len]) {
      code = new HuffmanCode(len & 0xff, sorted[symbol++] & 0xffff);
      ReplicateValue(root_table, table + key, step, table_size, code);
      key = GetNextKey(key, len);
    }
  }

  /* fill in 2nd level tables and add pointers to root table */
  mask = total_size - 1;
  low = -1;
  for (len = root_bits + 1, step = 2; len <= MAX_LENGTH; ++len, step <<= 1) {
    for (; count[len] > 0; --count[len]) {
      if ((key & mask) !== low) {
        table += table_size;
        table_bits = NextTableBitSize(count, len, root_bits);
        table_size = 1 << table_bits;
        total_size += table_size;
        low = key & mask;
        root_table[start_table + low] = new HuffmanCode((table_bits + root_bits) & 0xff, ((table - start_table) - low) & 0xffff);
      }
      code = new HuffmanCode((len - root_bits) & 0xff, sorted[symbol++] & 0xffff);
      ReplicateValue(root_table, table + (key >> root_bits), step, table_size, code);
      key = GetNextKey(key, len);
    }
  }
  
  return total_size;
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/brotli/dec/huffman.js?`)},"./node_modules/brotli/dec/prefix.js":(__unused_webpack_module,exports)=>{eval(`/* Copyright 2013 Google Inc. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Lookup tables to map prefix codes to value ranges. This is used during
   decoding of the block lengths, literal insertion lengths and copy lengths.
*/

/* Represents the range of values belonging to a prefix code: */
/* [offset, offset + 2^nbits) */
function PrefixCodeRange(offset, nbits) {
  this.offset = offset;
  this.nbits = nbits;
}

exports.kBlockLengthPrefixCode = [
  new PrefixCodeRange(1, 2), new PrefixCodeRange(5, 2), new PrefixCodeRange(9, 2), new PrefixCodeRange(13, 2),
  new PrefixCodeRange(17, 3), new PrefixCodeRange(25, 3), new PrefixCodeRange(33, 3), new PrefixCodeRange(41, 3),
  new PrefixCodeRange(49, 4), new PrefixCodeRange(65, 4), new PrefixCodeRange(81, 4), new PrefixCodeRange(97, 4),
  new PrefixCodeRange(113, 5), new PrefixCodeRange(145, 5), new PrefixCodeRange(177, 5), new PrefixCodeRange(209, 5),
  new PrefixCodeRange(241, 6), new PrefixCodeRange(305, 6), new PrefixCodeRange(369, 7), new PrefixCodeRange(497, 8),
  new PrefixCodeRange(753, 9), new PrefixCodeRange(1265, 10), new PrefixCodeRange(2289, 11), new PrefixCodeRange(4337, 12),
  new PrefixCodeRange(8433, 13), new PrefixCodeRange(16625, 24)
];

exports.kInsertLengthPrefixCode = [
  new PrefixCodeRange(0, 0), new PrefixCodeRange(1, 0), new PrefixCodeRange(2, 0), new PrefixCodeRange(3, 0),
  new PrefixCodeRange(4, 0), new PrefixCodeRange(5, 0), new PrefixCodeRange(6, 1), new PrefixCodeRange(8, 1),
  new PrefixCodeRange(10, 2), new PrefixCodeRange(14, 2), new PrefixCodeRange(18, 3), new PrefixCodeRange(26, 3),
  new PrefixCodeRange(34, 4), new PrefixCodeRange(50, 4), new PrefixCodeRange(66, 5), new PrefixCodeRange(98, 5),
  new PrefixCodeRange(130, 6), new PrefixCodeRange(194, 7), new PrefixCodeRange(322, 8), new PrefixCodeRange(578, 9),
  new PrefixCodeRange(1090, 10), new PrefixCodeRange(2114, 12), new PrefixCodeRange(6210, 14), new PrefixCodeRange(22594, 24),
];

exports.kCopyLengthPrefixCode = [
  new PrefixCodeRange(2, 0), new PrefixCodeRange(3, 0), new PrefixCodeRange(4, 0), new PrefixCodeRange(5, 0),
  new PrefixCodeRange(6, 0), new PrefixCodeRange(7, 0), new PrefixCodeRange(8, 0), new PrefixCodeRange(9, 0),
  new PrefixCodeRange(10, 1), new PrefixCodeRange(12, 1), new PrefixCodeRange(14, 2), new PrefixCodeRange(18, 2),
  new PrefixCodeRange(22, 3), new PrefixCodeRange(30, 3), new PrefixCodeRange(38, 4), new PrefixCodeRange(54, 4),
  new PrefixCodeRange(70, 5), new PrefixCodeRange(102, 5), new PrefixCodeRange(134, 6), new PrefixCodeRange(198, 7),
  new PrefixCodeRange(326, 8), new PrefixCodeRange(582, 9), new PrefixCodeRange(1094, 10), new PrefixCodeRange(2118, 24),
];

exports.kInsertRangeLut = [
  0, 0, 8, 8, 0, 16, 8, 16, 16,
];

exports.kCopyRangeLut = [
  0, 8, 0, 8, 16, 0, 16, 8, 16,
];


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/brotli/dec/prefix.js?`)},"./node_modules/brotli/dec/streams.js":(__unused_webpack_module,exports)=>{eval(`function BrotliInput(buffer) {
  this.buffer = buffer;
  this.pos = 0;
}

BrotliInput.prototype.read = function(buf, i, count) {
  if (this.pos + count > this.buffer.length) {
    count = this.buffer.length - this.pos;
  }
  
  for (var p = 0; p < count; p++)
    buf[i + p] = this.buffer[this.pos + p];
  
  this.pos += count;
  return count;
}

exports.BrotliInput = BrotliInput;

function BrotliOutput(buf) {
  this.buffer = buf;
  this.pos = 0;
}

BrotliOutput.prototype.write = function(buf, count) {
  if (this.pos + count > this.buffer.length)
    throw new Error('Output buffer is not large enough');
  
  this.buffer.set(buf.subarray(0, count), this.pos);
  this.pos += count;
  return count;
};

exports.BrotliOutput = BrotliOutput;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/brotli/dec/streams.js?`)},"./node_modules/brotli/dec/transform.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval(`/* Copyright 2013 Google Inc. All Rights Reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Transformations on dictionary words.
*/

var BrotliDictionary = __webpack_require__(/*! ./dictionary */ "./node_modules/brotli/dec/dictionary.js");

var kIdentity       = 0;
var kOmitLast1      = 1;
var kOmitLast2      = 2;
var kOmitLast3      = 3;
var kOmitLast4      = 4;
var kOmitLast5      = 5;
var kOmitLast6      = 6;
var kOmitLast7      = 7;
var kOmitLast8      = 8;
var kOmitLast9      = 9;
var kUppercaseFirst = 10;
var kUppercaseAll   = 11;
var kOmitFirst1     = 12;
var kOmitFirst2     = 13;
var kOmitFirst3     = 14;
var kOmitFirst4     = 15;
var kOmitFirst5     = 16;
var kOmitFirst6     = 17;
var kOmitFirst7     = 18;
var kOmitFirst8     = 19;
var kOmitFirst9     = 20;

function Transform(prefix, transform, suffix) {
  this.prefix = new Uint8Array(prefix.length);
  this.transform = transform;
  this.suffix = new Uint8Array(suffix.length);
  
  for (var i = 0; i < prefix.length; i++)
    this.prefix[i] = prefix.charCodeAt(i);
  
  for (var i = 0; i < suffix.length; i++)
    this.suffix[i] = suffix.charCodeAt(i);
}

var kTransforms = [
     new Transform(         "", kIdentity,       ""           ),
     new Transform(         "", kIdentity,       " "          ),
     new Transform(        " ", kIdentity,       " "          ),
     new Transform(         "", kOmitFirst1,     ""           ),
     new Transform(         "", kUppercaseFirst, " "          ),
     new Transform(         "", kIdentity,       " the "      ),
     new Transform(        " ", kIdentity,       ""           ),
     new Transform(       "s ", kIdentity,       " "          ),
     new Transform(         "", kIdentity,       " of "       ),
     new Transform(         "", kUppercaseFirst, ""           ),
     new Transform(         "", kIdentity,       " and "      ),
     new Transform(         "", kOmitFirst2,     ""           ),
     new Transform(         "", kOmitLast1,      ""           ),
     new Transform(       ", ", kIdentity,       " "          ),
     new Transform(         "", kIdentity,       ", "         ),
     new Transform(        " ", kUppercaseFirst, " "          ),
     new Transform(         "", kIdentity,       " in "       ),
     new Transform(         "", kIdentity,       " to "       ),
     new Transform(       "e ", kIdentity,       " "          ),
     new Transform(         "", kIdentity,       "\\""         ),
     new Transform(         "", kIdentity,       "."          ),
     new Transform(         "", kIdentity,       "\\">"        ),
     new Transform(         "", kIdentity,       "\\n"         ),
     new Transform(         "", kOmitLast3,      ""           ),
     new Transform(         "", kIdentity,       "]"          ),
     new Transform(         "", kIdentity,       " for "      ),
     new Transform(         "", kOmitFirst3,     ""           ),
     new Transform(         "", kOmitLast2,      ""           ),
     new Transform(         "", kIdentity,       " a "        ),
     new Transform(         "", kIdentity,       " that "     ),
     new Transform(        " ", kUppercaseFirst, ""           ),
     new Transform(         "", kIdentity,       ". "         ),
     new Transform(        ".", kIdentity,       ""           ),
     new Transform(        " ", kIdentity,       ", "         ),
     new Transform(         "", kOmitFirst4,     ""           ),
     new Transform(         "", kIdentity,       " with "     ),
     new Transform(         "", kIdentity,       "'"          ),
     new Transform(         "", kIdentity,       " from "     ),
     new Transform(         "", kIdentity,       " by "       ),
     new Transform(         "", kOmitFirst5,     ""           ),
     new Transform(         "", kOmitFirst6,     ""           ),
     new Transform(    " the ", kIdentity,       ""           ),
     new Transform(         "", kOmitLast4,      ""           ),
     new Transform(         "", kIdentity,       ". The "     ),
     new Transform(         "", kUppercaseAll,   ""           ),
     new Transform(         "", kIdentity,       " on "       ),
     new Transform(         "", kIdentity,       " as "       ),
     new Transform(         "", kIdentity,       " is "       ),
     new Transform(         "", kOmitLast7,      ""           ),
     new Transform(         "", kOmitLast1,      "ing "       ),
     new Transform(         "", kIdentity,       "\\n\\t"       ),
     new Transform(         "", kIdentity,       ":"          ),
     new Transform(        " ", kIdentity,       ". "         ),
     new Transform(         "", kIdentity,       "ed "        ),
     new Transform(         "", kOmitFirst9,     ""           ),
     new Transform(         "", kOmitFirst7,     ""           ),
     new Transform(         "", kOmitLast6,      ""           ),
     new Transform(         "", kIdentity,       "("          ),
     new Transform(         "", kUppercaseFirst, ", "         ),
     new Transform(         "", kOmitLast8,      ""           ),
     new Transform(         "", kIdentity,       " at "       ),
     new Transform(         "", kIdentity,       "ly "        ),
     new Transform(    " the ", kIdentity,       " of "       ),
     new Transform(         "", kOmitLast5,      ""           ),
     new Transform(         "", kOmitLast9,      ""           ),
     new Transform(        " ", kUppercaseFirst, ", "         ),
     new Transform(         "", kUppercaseFirst, "\\""         ),
     new Transform(        ".", kIdentity,       "("          ),
     new Transform(         "", kUppercaseAll,   " "          ),
     new Transform(         "", kUppercaseFirst, "\\">"        ),
     new Transform(         "", kIdentity,       "=\\""        ),
     new Transform(        " ", kIdentity,       "."          ),
     new Transform(    ".com/", kIdentity,       ""           ),
     new Transform(    " the ", kIdentity,       " of the "   ),
     new Transform(         "", kUppercaseFirst, "'"          ),
     new Transform(         "", kIdentity,       ". This "    ),
     new Transform(         "", kIdentity,       ","          ),
     new Transform(        ".", kIdentity,       " "          ),
     new Transform(         "", kUppercaseFirst, "("          ),
     new Transform(         "", kUppercaseFirst, "."          ),
     new Transform(         "", kIdentity,       " not "      ),
     new Transform(        " ", kIdentity,       "=\\""        ),
     new Transform(         "", kIdentity,       "er "        ),
     new Transform(        " ", kUppercaseAll,   " "          ),
     new Transform(         "", kIdentity,       "al "        ),
     new Transform(        " ", kUppercaseAll,   ""           ),
     new Transform(         "", kIdentity,       "='"         ),
     new Transform(         "", kUppercaseAll,   "\\""         ),
     new Transform(         "", kUppercaseFirst, ". "         ),
     new Transform(        " ", kIdentity,       "("          ),
     new Transform(         "", kIdentity,       "ful "       ),
     new Transform(        " ", kUppercaseFirst, ". "         ),
     new Transform(         "", kIdentity,       "ive "       ),
     new Transform(         "", kIdentity,       "less "      ),
     new Transform(         "", kUppercaseAll,   "'"          ),
     new Transform(         "", kIdentity,       "est "       ),
     new Transform(        " ", kUppercaseFirst, "."          ),
     new Transform(         "", kUppercaseAll,   "\\">"        ),
     new Transform(        " ", kIdentity,       "='"         ),
     new Transform(         "", kUppercaseFirst, ","          ),
     new Transform(         "", kIdentity,       "ize "       ),
     new Transform(         "", kUppercaseAll,   "."          ),
     new Transform( "\\xc2\\xa0", kIdentity,       ""           ),
     new Transform(        " ", kIdentity,       ","          ),
     new Transform(         "", kUppercaseFirst, "=\\""        ),
     new Transform(         "", kUppercaseAll,   "=\\""        ),
     new Transform(         "", kIdentity,       "ous "       ),
     new Transform(         "", kUppercaseAll,   ", "         ),
     new Transform(         "", kUppercaseFirst, "='"         ),
     new Transform(        " ", kUppercaseFirst, ","          ),
     new Transform(        " ", kUppercaseAll,   "=\\""        ),
     new Transform(        " ", kUppercaseAll,   ", "         ),
     new Transform(         "", kUppercaseAll,   ","          ),
     new Transform(         "", kUppercaseAll,   "("          ),
     new Transform(         "", kUppercaseAll,   ". "         ),
     new Transform(        " ", kUppercaseAll,   "."          ),
     new Transform(         "", kUppercaseAll,   "='"         ),
     new Transform(        " ", kUppercaseAll,   ". "         ),
     new Transform(        " ", kUppercaseFirst, "=\\""        ),
     new Transform(        " ", kUppercaseAll,   "='"         ),
     new Transform(        " ", kUppercaseFirst, "='"         )
];

exports.kTransforms = kTransforms;
exports.kNumTransforms = kTransforms.length;

function ToUpperCase(p, i) {
  if (p[i] < 0xc0) {
    if (p[i] >= 97 && p[i] <= 122) {
      p[i] ^= 32;
    }
    return 1;
  }
  
  /* An overly simplified uppercasing model for utf-8. */
  if (p[i] < 0xe0) {
    p[i + 1] ^= 32;
    return 2;
  }
  
  /* An arbitrary transform for three byte characters. */
  p[i + 2] ^= 5;
  return 3;
}

exports.transformDictionaryWord = function(dst, idx, word, len, transform) {
  var prefix = kTransforms[transform].prefix;
  var suffix = kTransforms[transform].suffix;
  var t = kTransforms[transform].transform;
  var skip = t < kOmitFirst1 ? 0 : t - (kOmitFirst1 - 1);
  var i = 0;
  var start_idx = idx;
  var uppercase;
  
  if (skip > len) {
    skip = len;
  }
  
  var prefix_pos = 0;
  while (prefix_pos < prefix.length) {
    dst[idx++] = prefix[prefix_pos++];
  }
  
  word += skip;
  len -= skip;
  
  if (t <= kOmitLast9) {
    len -= t;
  }
  
  for (i = 0; i < len; i++) {
    dst[idx++] = BrotliDictionary.dictionary[word + i];
  }
  
  uppercase = idx - len;
  
  if (t === kUppercaseFirst) {
    ToUpperCase(dst, uppercase);
  } else if (t === kUppercaseAll) {
    while (len > 0) {
      var step = ToUpperCase(dst, uppercase);
      uppercase += step;
      len -= step;
    }
  }
  
  var suffix_pos = 0;
  while (suffix_pos < suffix.length) {
    dst[idx++] = suffix[suffix_pos++];
  }
  
  return idx - start_idx;
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/brotli/dec/transform.js?`)},"./node_modules/brotli/decompress.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`module.exports = __webpack_require__(/*! ./dec/decode */ "./node_modules/brotli/dec/decode.js").BrotliDecompressBuffer;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/brotli/decompress.js?`)},"./node_modules/browserify-zlib/lib/binding.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval(`/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");

/* eslint camelcase: "off" */

var assert = __webpack_require__(/*! assert */ "./node_modules/assert/build/assert.js");

var Zstream = __webpack_require__(/*! pako/lib/zlib/zstream */ "./node_modules/browserify-zlib/node_modules/pako/lib/zlib/zstream.js");
var zlib_deflate = __webpack_require__(/*! pako/lib/zlib/deflate.js */ "./node_modules/browserify-zlib/node_modules/pako/lib/zlib/deflate.js");
var zlib_inflate = __webpack_require__(/*! pako/lib/zlib/inflate.js */ "./node_modules/browserify-zlib/node_modules/pako/lib/zlib/inflate.js");
var constants = __webpack_require__(/*! pako/lib/zlib/constants */ "./node_modules/browserify-zlib/node_modules/pako/lib/zlib/constants.js");

for (var key in constants) {
  exports[key] = constants[key];
}

// zlib modes
exports.NONE = 0;
exports.DEFLATE = 1;
exports.INFLATE = 2;
exports.GZIP = 3;
exports.GUNZIP = 4;
exports.DEFLATERAW = 5;
exports.INFLATERAW = 6;
exports.UNZIP = 7;

var GZIP_HEADER_ID1 = 0x1f;
var GZIP_HEADER_ID2 = 0x8b;

/**
 * Emulate Node's zlib C++ layer for use by the JS layer in index.js
 */
function Zlib(mode) {
  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {
    throw new TypeError('Bad argument');
  }

  this.dictionary = null;
  this.err = 0;
  this.flush = 0;
  this.init_done = false;
  this.level = 0;
  this.memLevel = 0;
  this.mode = mode;
  this.strategy = 0;
  this.windowBits = 0;
  this.write_in_progress = false;
  this.pending_close = false;
  this.gzip_id_bytes_read = 0;
}

Zlib.prototype.close = function () {
  if (this.write_in_progress) {
    this.pending_close = true;
    return;
  }

  this.pending_close = false;

  assert(this.init_done, 'close before init');
  assert(this.mode <= exports.UNZIP);

  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {
    zlib_deflate.deflateEnd(this.strm);
  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {
    zlib_inflate.inflateEnd(this.strm);
  }

  this.mode = exports.NONE;

  this.dictionary = null;
};

Zlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {
  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);
};

Zlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {
  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);
};

Zlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {
  assert.equal(arguments.length, 8);

  assert(this.init_done, 'write before init');
  assert(this.mode !== exports.NONE, 'already finalized');
  assert.equal(false, this.write_in_progress, 'write already in progress');
  assert.equal(false, this.pending_close, 'close is pending');

  this.write_in_progress = true;

  assert.equal(false, flush === undefined, 'must provide flush value');

  this.write_in_progress = true;

  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {
    throw new Error('Invalid flush value');
  }

  if (input == null) {
    input = Buffer.alloc(0);
    in_len = 0;
    in_off = 0;
  }

  this.strm.avail_in = in_len;
  this.strm.input = input;
  this.strm.next_in = in_off;
  this.strm.avail_out = out_len;
  this.strm.output = out;
  this.strm.next_out = out_off;
  this.flush = flush;

  if (!async) {
    // sync version
    this._process();

    if (this._checkError()) {
      return this._afterSync();
    }
    return;
  }

  // async version
  var self = this;
  process.nextTick(function () {
    self._process();
    self._after();
  });

  return this;
};

Zlib.prototype._afterSync = function () {
  var avail_out = this.strm.avail_out;
  var avail_in = this.strm.avail_in;

  this.write_in_progress = false;

  return [avail_in, avail_out];
};

Zlib.prototype._process = function () {
  var next_expected_header_byte = null;

  // If the avail_out is left at 0, then it means that it ran out
  // of room.  If there was avail_out left over, then it means
  // that all of the input was consumed.
  switch (this.mode) {
    case exports.DEFLATE:
    case exports.GZIP:
    case exports.DEFLATERAW:
      this.err = zlib_deflate.deflate(this.strm, this.flush);
      break;
    case exports.UNZIP:
      if (this.strm.avail_in > 0) {
        next_expected_header_byte = this.strm.next_in;
      }

      switch (this.gzip_id_bytes_read) {
        case 0:
          if (next_expected_header_byte === null) {
            break;
          }

          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {
            this.gzip_id_bytes_read = 1;
            next_expected_header_byte++;

            if (this.strm.avail_in === 1) {
              // The only available byte was already read.
              break;
            }
          } else {
            this.mode = exports.INFLATE;
            break;
          }

        // fallthrough
        case 1:
          if (next_expected_header_byte === null) {
            break;
          }

          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {
            this.gzip_id_bytes_read = 2;
            this.mode = exports.GUNZIP;
          } else {
            // There is no actual difference between INFLATE and INFLATERAW
            // (after initialization).
            this.mode = exports.INFLATE;
          }

          break;
        default:
          throw new Error('invalid number of gzip magic number bytes read');
      }

    // fallthrough
    case exports.INFLATE:
    case exports.GUNZIP:
    case exports.INFLATERAW:
      this.err = zlib_inflate.inflate(this.strm, this.flush

      // If data was encoded with dictionary
      );if (this.err === exports.Z_NEED_DICT && this.dictionary) {
        // Load it
        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);
        if (this.err === exports.Z_OK) {
          // And try to decode again
          this.err = zlib_inflate.inflate(this.strm, this.flush);
        } else if (this.err === exports.Z_DATA_ERROR) {
          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.
          // Make it possible for After() to tell a bad dictionary from bad
          // input.
          this.err = exports.Z_NEED_DICT;
        }
      }
      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {
        // Bytes remain in input buffer. Perhaps this is another compressed
        // member in the same archive, or just trailing garbage.
        // Trailing zero bytes are okay, though, since they are frequently
        // used for padding.

        this.reset();
        this.err = zlib_inflate.inflate(this.strm, this.flush);
      }
      break;
    default:
      throw new Error('Unknown mode ' + this.mode);
  }
};

Zlib.prototype._checkError = function () {
  // Acceptable error states depend on the type of zlib stream.
  switch (this.err) {
    case exports.Z_OK:
    case exports.Z_BUF_ERROR:
      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {
        this._error('unexpected end of file');
        return false;
      }
      break;
    case exports.Z_STREAM_END:
      // normal statuses, not fatal
      break;
    case exports.Z_NEED_DICT:
      if (this.dictionary == null) {
        this._error('Missing dictionary');
      } else {
        this._error('Bad dictionary');
      }
      return false;
    default:
      // something else.
      this._error('Zlib error');
      return false;
  }

  return true;
};

Zlib.prototype._after = function () {
  if (!this._checkError()) {
    return;
  }

  var avail_out = this.strm.avail_out;
  var avail_in = this.strm.avail_in;

  this.write_in_progress = false;

  // call the write() cb
  this.callback(avail_in, avail_out);

  if (this.pending_close) {
    this.close();
  }
};

Zlib.prototype._error = function (message) {
  if (this.strm.msg) {
    message = this.strm.msg;
  }
  this.onerror(message, this.err

  // no hope of rescue.
  );this.write_in_progress = false;
  if (this.pending_close) {
    this.close();
  }
};

Zlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {
  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');

  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');
  assert(level >= -1 && level <= 9, 'invalid compression level');

  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');

  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');

  this._init(level, windowBits, memLevel, strategy, dictionary);
  this._setDictionary();
};

Zlib.prototype.params = function () {
  throw new Error('deflateParams Not supported');
};

Zlib.prototype.reset = function () {
  this._reset();
  this._setDictionary();
};

Zlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {
  this.level = level;
  this.windowBits = windowBits;
  this.memLevel = memLevel;
  this.strategy = strategy;

  this.flush = exports.Z_NO_FLUSH;

  this.err = exports.Z_OK;

  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {
    this.windowBits += 16;
  }

  if (this.mode === exports.UNZIP) {
    this.windowBits += 32;
  }

  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {
    this.windowBits = -1 * this.windowBits;
  }

  this.strm = new Zstream();

  switch (this.mode) {
    case exports.DEFLATE:
    case exports.GZIP:
    case exports.DEFLATERAW:
      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
      break;
    case exports.INFLATE:
    case exports.GUNZIP:
    case exports.INFLATERAW:
    case exports.UNZIP:
      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);
      break;
    default:
      throw new Error('Unknown mode ' + this.mode);
  }

  if (this.err !== exports.Z_OK) {
    this._error('Init error');
  }

  this.dictionary = dictionary;

  this.write_in_progress = false;
  this.init_done = true;
};

Zlib.prototype._setDictionary = function () {
  if (this.dictionary == null) {
    return;
  }

  this.err = exports.Z_OK;

  switch (this.mode) {
    case exports.DEFLATE:
    case exports.DEFLATERAW:
      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);
      break;
    default:
      break;
  }

  if (this.err !== exports.Z_OK) {
    this._error('Failed to set dictionary');
  }
};

Zlib.prototype._reset = function () {
  this.err = exports.Z_OK;

  switch (this.mode) {
    case exports.DEFLATE:
    case exports.DEFLATERAW:
    case exports.GZIP:
      this.err = zlib_deflate.deflateReset(this.strm);
      break;
    case exports.INFLATE:
    case exports.INFLATERAW:
    case exports.GUNZIP:
      this.err = zlib_inflate.inflateReset(this.strm);
      break;
    default:
      break;
  }

  if (this.err !== exports.Z_OK) {
    this._error('Failed to reset stream');
  }
};

exports.Zlib = Zlib;

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/lib/binding.js?`)},"./node_modules/browserify-zlib/lib/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval(`/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");


var Buffer = (__webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer);
var Transform = (__webpack_require__(/*! stream */ "./node_modules/readable-stream/readable-browser.js").Transform);
var binding = __webpack_require__(/*! ./binding */ "./node_modules/browserify-zlib/lib/binding.js");
var util = __webpack_require__(/*! util */ "./node_modules/util/util.js");
var assert = (__webpack_require__(/*! assert */ "./node_modules/assert/build/assert.js").ok);
var kMaxLength = (__webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").kMaxLength);
var kRangeErrorMessage = 'Cannot create final Buffer. It would be larger ' + 'than 0x' + kMaxLength.toString(16) + ' bytes';

// zlib doesn't provide these, so kludge them in following the same
// const naming scheme zlib uses.
binding.Z_MIN_WINDOWBITS = 8;
binding.Z_MAX_WINDOWBITS = 15;
binding.Z_DEFAULT_WINDOWBITS = 15;

// fewer than 64 bytes per chunk is stupid.
// technically it could work with as few as 8, but even 64 bytes
// is absurdly low.  Usually a MB or more is best.
binding.Z_MIN_CHUNK = 64;
binding.Z_MAX_CHUNK = Infinity;
binding.Z_DEFAULT_CHUNK = 16 * 1024;

binding.Z_MIN_MEMLEVEL = 1;
binding.Z_MAX_MEMLEVEL = 9;
binding.Z_DEFAULT_MEMLEVEL = 8;

binding.Z_MIN_LEVEL = -1;
binding.Z_MAX_LEVEL = 9;
binding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;

// expose all the zlib constants
var bkeys = Object.keys(binding);
for (var bk = 0; bk < bkeys.length; bk++) {
  var bkey = bkeys[bk];
  if (bkey.match(/^Z/)) {
    Object.defineProperty(exports, bkey, {
      enumerable: true, value: binding[bkey], writable: false
    });
  }
}

// translation table for return codes.
var codes = {
  Z_OK: binding.Z_OK,
  Z_STREAM_END: binding.Z_STREAM_END,
  Z_NEED_DICT: binding.Z_NEED_DICT,
  Z_ERRNO: binding.Z_ERRNO,
  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,
  Z_DATA_ERROR: binding.Z_DATA_ERROR,
  Z_MEM_ERROR: binding.Z_MEM_ERROR,
  Z_BUF_ERROR: binding.Z_BUF_ERROR,
  Z_VERSION_ERROR: binding.Z_VERSION_ERROR
};

var ckeys = Object.keys(codes);
for (var ck = 0; ck < ckeys.length; ck++) {
  var ckey = ckeys[ck];
  codes[codes[ckey]] = ckey;
}

Object.defineProperty(exports, "codes", ({
  enumerable: true, value: Object.freeze(codes), writable: false
}));

exports.Deflate = Deflate;
exports.Inflate = Inflate;
exports.Gzip = Gzip;
exports.Gunzip = Gunzip;
exports.DeflateRaw = DeflateRaw;
exports.InflateRaw = InflateRaw;
exports.Unzip = Unzip;

exports.createDeflate = function (o) {
  return new Deflate(o);
};

exports.createInflate = function (o) {
  return new Inflate(o);
};

exports.createDeflateRaw = function (o) {
  return new DeflateRaw(o);
};

exports.createInflateRaw = function (o) {
  return new InflateRaw(o);
};

exports.createGzip = function (o) {
  return new Gzip(o);
};

exports.createGunzip = function (o) {
  return new Gunzip(o);
};

exports.createUnzip = function (o) {
  return new Unzip(o);
};

// Convenience methods.
// compress/decompress a string or buffer in one step.
exports.deflate = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Deflate(opts), buffer, callback);
};

exports.deflateSync = function (buffer, opts) {
  return zlibBufferSync(new Deflate(opts), buffer);
};

exports.gzip = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Gzip(opts), buffer, callback);
};

exports.gzipSync = function (buffer, opts) {
  return zlibBufferSync(new Gzip(opts), buffer);
};

exports.deflateRaw = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new DeflateRaw(opts), buffer, callback);
};

exports.deflateRawSync = function (buffer, opts) {
  return zlibBufferSync(new DeflateRaw(opts), buffer);
};

exports.unzip = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Unzip(opts), buffer, callback);
};

exports.unzipSync = function (buffer, opts) {
  return zlibBufferSync(new Unzip(opts), buffer);
};

exports.inflate = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Inflate(opts), buffer, callback);
};

exports.inflateSync = function (buffer, opts) {
  return zlibBufferSync(new Inflate(opts), buffer);
};

exports.gunzip = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Gunzip(opts), buffer, callback);
};

exports.gunzipSync = function (buffer, opts) {
  return zlibBufferSync(new Gunzip(opts), buffer);
};

exports.inflateRaw = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new InflateRaw(opts), buffer, callback);
};

exports.inflateRawSync = function (buffer, opts) {
  return zlibBufferSync(new InflateRaw(opts), buffer);
};

function zlibBuffer(engine, buffer, callback) {
  var buffers = [];
  var nread = 0;

  engine.on('error', onError);
  engine.on('end', onEnd);

  engine.end(buffer);
  flow();

  function flow() {
    var chunk;
    while (null !== (chunk = engine.read())) {
      buffers.push(chunk);
      nread += chunk.length;
    }
    engine.once('readable', flow);
  }

  function onError(err) {
    engine.removeListener('end', onEnd);
    engine.removeListener('readable', flow);
    callback(err);
  }

  function onEnd() {
    var buf;
    var err = null;

    if (nread >= kMaxLength) {
      err = new RangeError(kRangeErrorMessage);
    } else {
      buf = Buffer.concat(buffers, nread);
    }

    buffers = [];
    engine.close();
    callback(err, buf);
  }
}

function zlibBufferSync(engine, buffer) {
  if (typeof buffer === 'string') buffer = Buffer.from(buffer);

  if (!Buffer.isBuffer(buffer)) throw new TypeError('Not a string or buffer');

  var flushFlag = engine._finishFlushFlag;

  return engine._processChunk(buffer, flushFlag);
}

// generic zlib
// minimal 2-byte header
function Deflate(opts) {
  if (!(this instanceof Deflate)) return new Deflate(opts);
  Zlib.call(this, opts, binding.DEFLATE);
}

function Inflate(opts) {
  if (!(this instanceof Inflate)) return new Inflate(opts);
  Zlib.call(this, opts, binding.INFLATE);
}

// gzip - bigger header, same deflate compression
function Gzip(opts) {
  if (!(this instanceof Gzip)) return new Gzip(opts);
  Zlib.call(this, opts, binding.GZIP);
}

function Gunzip(opts) {
  if (!(this instanceof Gunzip)) return new Gunzip(opts);
  Zlib.call(this, opts, binding.GUNZIP);
}

// raw - no header
function DeflateRaw(opts) {
  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);
  Zlib.call(this, opts, binding.DEFLATERAW);
}

function InflateRaw(opts) {
  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);
  Zlib.call(this, opts, binding.INFLATERAW);
}

// auto-detect header.
function Unzip(opts) {
  if (!(this instanceof Unzip)) return new Unzip(opts);
  Zlib.call(this, opts, binding.UNZIP);
}

function isValidFlushFlag(flag) {
  return flag === binding.Z_NO_FLUSH || flag === binding.Z_PARTIAL_FLUSH || flag === binding.Z_SYNC_FLUSH || flag === binding.Z_FULL_FLUSH || flag === binding.Z_FINISH || flag === binding.Z_BLOCK;
}

// the Zlib class they all inherit from
// This thing manages the queue of requests, and returns
// true or false if there is anything in the queue when
// you call the .write() method.

function Zlib(opts, mode) {
  var _this = this;

  this._opts = opts = opts || {};
  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;

  Transform.call(this, opts);

  if (opts.flush && !isValidFlushFlag(opts.flush)) {
    throw new Error('Invalid flush flag: ' + opts.flush);
  }
  if (opts.finishFlush && !isValidFlushFlag(opts.finishFlush)) {
    throw new Error('Invalid flush flag: ' + opts.finishFlush);
  }

  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;
  this._finishFlushFlag = typeof opts.finishFlush !== 'undefined' ? opts.finishFlush : binding.Z_FINISH;

  if (opts.chunkSize) {
    if (opts.chunkSize < exports.Z_MIN_CHUNK || opts.chunkSize > exports.Z_MAX_CHUNK) {
      throw new Error('Invalid chunk size: ' + opts.chunkSize);
    }
  }

  if (opts.windowBits) {
    if (opts.windowBits < exports.Z_MIN_WINDOWBITS || opts.windowBits > exports.Z_MAX_WINDOWBITS) {
      throw new Error('Invalid windowBits: ' + opts.windowBits);
    }
  }

  if (opts.level) {
    if (opts.level < exports.Z_MIN_LEVEL || opts.level > exports.Z_MAX_LEVEL) {
      throw new Error('Invalid compression level: ' + opts.level);
    }
  }

  if (opts.memLevel) {
    if (opts.memLevel < exports.Z_MIN_MEMLEVEL || opts.memLevel > exports.Z_MAX_MEMLEVEL) {
      throw new Error('Invalid memLevel: ' + opts.memLevel);
    }
  }

  if (opts.strategy) {
    if (opts.strategy != exports.Z_FILTERED && opts.strategy != exports.Z_HUFFMAN_ONLY && opts.strategy != exports.Z_RLE && opts.strategy != exports.Z_FIXED && opts.strategy != exports.Z_DEFAULT_STRATEGY) {
      throw new Error('Invalid strategy: ' + opts.strategy);
    }
  }

  if (opts.dictionary) {
    if (!Buffer.isBuffer(opts.dictionary)) {
      throw new Error('Invalid dictionary: it should be a Buffer instance');
    }
  }

  this._handle = new binding.Zlib(mode);

  var self = this;
  this._hadError = false;
  this._handle.onerror = function (message, errno) {
    // there is no way to cleanly recover.
    // continuing only obscures problems.
    _close(self);
    self._hadError = true;

    var error = new Error(message);
    error.errno = errno;
    error.code = exports.codes[errno];
    self.emit('error', error);
  };

  var level = exports.Z_DEFAULT_COMPRESSION;
  if (typeof opts.level === 'number') level = opts.level;

  var strategy = exports.Z_DEFAULT_STRATEGY;
  if (typeof opts.strategy === 'number') strategy = opts.strategy;

  this._handle.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS, level, opts.memLevel || exports.Z_DEFAULT_MEMLEVEL, strategy, opts.dictionary);

  this._buffer = Buffer.allocUnsafe(this._chunkSize);
  this._offset = 0;
  this._level = level;
  this._strategy = strategy;

  this.once('end', this.close);

  Object.defineProperty(this, '_closed', {
    get: function () {
      return !_this._handle;
    },
    configurable: true,
    enumerable: true
  });
}

util.inherits(Zlib, Transform);

Zlib.prototype.params = function (level, strategy, callback) {
  if (level < exports.Z_MIN_LEVEL || level > exports.Z_MAX_LEVEL) {
    throw new RangeError('Invalid compression level: ' + level);
  }
  if (strategy != exports.Z_FILTERED && strategy != exports.Z_HUFFMAN_ONLY && strategy != exports.Z_RLE && strategy != exports.Z_FIXED && strategy != exports.Z_DEFAULT_STRATEGY) {
    throw new TypeError('Invalid strategy: ' + strategy);
  }

  if (this._level !== level || this._strategy !== strategy) {
    var self = this;
    this.flush(binding.Z_SYNC_FLUSH, function () {
      assert(self._handle, 'zlib binding closed');
      self._handle.params(level, strategy);
      if (!self._hadError) {
        self._level = level;
        self._strategy = strategy;
        if (callback) callback();
      }
    });
  } else {
    process.nextTick(callback);
  }
};

Zlib.prototype.reset = function () {
  assert(this._handle, 'zlib binding closed');
  return this._handle.reset();
};

// This is the _flush function called by the transform class,
// internally, when the last chunk has been written.
Zlib.prototype._flush = function (callback) {
  this._transform(Buffer.alloc(0), '', callback);
};

Zlib.prototype.flush = function (kind, callback) {
  var _this2 = this;

  var ws = this._writableState;

  if (typeof kind === 'function' || kind === undefined && !callback) {
    callback = kind;
    kind = binding.Z_FULL_FLUSH;
  }

  if (ws.ended) {
    if (callback) process.nextTick(callback);
  } else if (ws.ending) {
    if (callback) this.once('end', callback);
  } else if (ws.needDrain) {
    if (callback) {
      this.once('drain', function () {
        return _this2.flush(kind, callback);
      });
    }
  } else {
    this._flushFlag = kind;
    this.write(Buffer.alloc(0), '', callback);
  }
};

Zlib.prototype.close = function (callback) {
  _close(this, callback);
  process.nextTick(emitCloseNT, this);
};

function _close(engine, callback) {
  if (callback) process.nextTick(callback);

  // Caller may invoke .close after a zlib error (which will null _handle).
  if (!engine._handle) return;

  engine._handle.close();
  engine._handle = null;
}

function emitCloseNT(self) {
  self.emit('close');
}

Zlib.prototype._transform = function (chunk, encoding, cb) {
  var flushFlag;
  var ws = this._writableState;
  var ending = ws.ending || ws.ended;
  var last = ending && (!chunk || ws.length === chunk.length);

  if (chunk !== null && !Buffer.isBuffer(chunk)) return cb(new Error('invalid input'));

  if (!this._handle) return cb(new Error('zlib binding closed'));

  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag
  // (or whatever flag was provided using opts.finishFlush).
  // If it's explicitly flushing at some other time, then we use
  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression
  // goodness.
  if (last) flushFlag = this._finishFlushFlag;else {
    flushFlag = this._flushFlag;
    // once we've flushed the last of the queue, stop flushing and
    // go back to the normal behavior.
    if (chunk.length >= ws.length) {
      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;
    }
  }

  this._processChunk(chunk, flushFlag, cb);
};

Zlib.prototype._processChunk = function (chunk, flushFlag, cb) {
  var availInBefore = chunk && chunk.length;
  var availOutBefore = this._chunkSize - this._offset;
  var inOff = 0;

  var self = this;

  var async = typeof cb === 'function';

  if (!async) {
    var buffers = [];
    var nread = 0;

    var error;
    this.on('error', function (er) {
      error = er;
    });

    assert(this._handle, 'zlib binding closed');
    do {
      var res = this._handle.writeSync(flushFlag, chunk, // in
      inOff, // in_off
      availInBefore, // in_len
      this._buffer, // out
      this._offset, //out_off
      availOutBefore); // out_len
    } while (!this._hadError && callback(res[0], res[1]));

    if (this._hadError) {
      throw error;
    }

    if (nread >= kMaxLength) {
      _close(this);
      throw new RangeError(kRangeErrorMessage);
    }

    var buf = Buffer.concat(buffers, nread);
    _close(this);

    return buf;
  }

  assert(this._handle, 'zlib binding closed');
  var req = this._handle.write(flushFlag, chunk, // in
  inOff, // in_off
  availInBefore, // in_len
  this._buffer, // out
  this._offset, //out_off
  availOutBefore); // out_len

  req.buffer = chunk;
  req.callback = callback;

  function callback(availInAfter, availOutAfter) {
    // When the callback is used in an async write, the callback's
    // context is the \`req\` object that was created. The req object
    // is === this._handle, and that's why it's important to null
    // out the values after they are done being used. \`this._handle\`
    // can stay in memory longer than the callback and buffer are needed.
    if (this) {
      this.buffer = null;
      this.callback = null;
    }

    if (self._hadError) return;

    var have = availOutBefore - availOutAfter;
    assert(have >= 0, 'have should not go down');

    if (have > 0) {
      var out = self._buffer.slice(self._offset, self._offset + have);
      self._offset += have;
      // serve some output to the consumer.
      if (async) {
        self.push(out);
      } else {
        buffers.push(out);
        nread += out.length;
      }
    }

    // exhausted the output buffer, or used all the input create a new one.
    if (availOutAfter === 0 || self._offset >= self._chunkSize) {
      availOutBefore = self._chunkSize;
      self._offset = 0;
      self._buffer = Buffer.allocUnsafe(self._chunkSize);
    }

    if (availOutAfter === 0) {
      // Not actually done.  Need to reprocess.
      // Also, update the availInBefore to the availInAfter value,
      // so that if we have to hit it a third (fourth, etc.) time,
      // it'll have the correct byte counts.
      inOff += availInBefore - availInAfter;
      availInBefore = availInAfter;

      if (!async) return true;

      var newReq = self._handle.write(flushFlag, chunk, inOff, availInBefore, self._buffer, self._offset, self._chunkSize);
      newReq.callback = callback; // this same function
      newReq.buffer = chunk;
      return;
    }

    if (!async) return false;

    // finished with the chunk.
    cb();
  }
};

util.inherits(Deflate, Zlib);
util.inherits(Inflate, Zlib);
util.inherits(Gzip, Zlib);
util.inherits(Gunzip, Zlib);
util.inherits(DeflateRaw, Zlib);
util.inherits(InflateRaw, Zlib);
util.inherits(Unzip, Zlib);

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/lib/index.js?`)},"./node_modules/browserify-zlib/node_modules/pako/lib/utils/common.js":(__unused_webpack_module,exports)=>{"use strict";eval(`


var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&
                (typeof Uint16Array !== 'undefined') &&
                (typeof Int32Array !== 'undefined');

function _has(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

exports.assign = function (obj /*from1, from2, from3, ...*/) {
  var sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    var source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (var p in source) {
      if (_has(source, p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// reduce buffer size, avoiding mem copy
exports.shrinkBuf = function (buf, size) {
  if (buf.length === size) { return buf; }
  if (buf.subarray) { return buf.subarray(0, size); }
  buf.length = size;
  return buf;
};


var fnTyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    if (src.subarray && dest.subarray) {
      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
      return;
    }
    // Fallback to ordinary array
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    var i, l, len, pos, chunk, result;

    // calculate data length
    len = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      len += chunks[i].length;
    }

    // join chunks
    result = new Uint8Array(len);
    pos = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      chunk = chunks[i];
      result.set(chunk, pos);
      pos += chunk.length;
    }

    return result;
  }
};

var fnUntyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    return [].concat.apply([], chunks);
  }
};


// Enable/Disable typed arrays use, for testing
//
exports.setTyped = function (on) {
  if (on) {
    exports.Buf8  = Uint8Array;
    exports.Buf16 = Uint16Array;
    exports.Buf32 = Int32Array;
    exports.assign(exports, fnTyped);
  } else {
    exports.Buf8  = Array;
    exports.Buf16 = Array;
    exports.Buf32 = Array;
    exports.assign(exports, fnUntyped);
  }
};

exports.setTyped(TYPED_OK);


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/node_modules/pako/lib/utils/common.js?`)},"./node_modules/browserify-zlib/node_modules/pako/lib/zlib/adler32.js":module=>{"use strict";eval(`

// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It isn't worth it to make additional optimizations as in original.
// Small size is preferable.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function adler32(adler, buf, len, pos) {
  var s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
}


module.exports = adler32;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/node_modules/pako/lib/zlib/adler32.js?`)},"./node_modules/browserify-zlib/node_modules/pako/lib/zlib/constants.js":module=>{"use strict";eval(`

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/node_modules/pako/lib/zlib/constants.js?`)},"./node_modules/browserify-zlib/node_modules/pako/lib/zlib/crc32.js":module=>{"use strict";eval(`

// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// Use ordinary array, since untyped makes no boost here
function makeTable() {
  var c, table = [];

  for (var n = 0; n < 256; n++) {
    c = n;
    for (var k = 0; k < 8; k++) {
      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
}

// Create table on load. Just 255 signed longs. Not a problem.
var crcTable = makeTable();


function crc32(crc, buf, len, pos) {
  var t = crcTable,
      end = pos + len;

  crc ^= -1;

  for (var i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
}


module.exports = crc32;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/node_modules/pako/lib/zlib/crc32.js?`)},"./node_modules/browserify-zlib/node_modules/pako/lib/zlib/deflate.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval(`

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils   = __webpack_require__(/*! ../utils/common */ "./node_modules/browserify-zlib/node_modules/pako/lib/utils/common.js");
var trees   = __webpack_require__(/*! ./trees */ "./node_modules/browserify-zlib/node_modules/pako/lib/zlib/trees.js");
var adler32 = __webpack_require__(/*! ./adler32 */ "./node_modules/browserify-zlib/node_modules/pako/lib/zlib/adler32.js");
var crc32   = __webpack_require__(/*! ./crc32 */ "./node_modules/browserify-zlib/node_modules/pako/lib/zlib/crc32.js");
var msg     = __webpack_require__(/*! ./messages */ "./node_modules/browserify-zlib/node_modules/pako/lib/zlib/messages.js");

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
var Z_NO_FLUSH      = 0;
var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
//var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
//var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
//var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;


/* compression levels */
//var Z_NO_COMPRESSION      = 0;
//var Z_BEST_SPEED          = 1;
//var Z_BEST_COMPRESSION    = 9;
var Z_DEFAULT_COMPRESSION = -1;


var Z_FILTERED            = 1;
var Z_HUFFMAN_ONLY        = 2;
var Z_RLE                 = 3;
var Z_FIXED               = 4;
var Z_DEFAULT_STRATEGY    = 0;

/* Possible values of the data_type field (though see inflate()) */
//var Z_BINARY              = 0;
//var Z_TEXT                = 1;
//var Z_ASCII               = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;


/* The deflate compression method */
var Z_DEFLATED  = 8;

/*============================================================================*/


var MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_MEM_LEVEL = 8;


var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
var LITERALS      = 256;
/* number of literal bytes 0..255 */
var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
var D_CODES       = 30;
/* number of distance codes */
var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */
var MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

var MIN_MATCH = 3;
var MAX_MATCH = 258;
var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

var PRESET_DICT = 0x20;

var INIT_STATE = 42;
var EXTRA_STATE = 69;
var NAME_STATE = 73;
var COMMENT_STATE = 91;
var HCRC_STATE = 103;
var BUSY_STATE = 113;
var FINISH_STATE = 666;

var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
var BS_BLOCK_DONE     = 2; /* block flush performed */
var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

function err(strm, errorCode) {
  strm.msg = msg[errorCode];
  return errorCode;
}

function rank(f) {
  return ((f) << 1) - ((f) > 4 ? 9 : 0);
}

function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }


/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */
function flush_pending(strm) {
  var s = strm.state;

  //_tr_flush_bits(s);
  var len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
}


function flush_block_only(s, last) {
  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
}


function put_byte(s, b) {
  s.pending_buf[s.pending++] = b;
}


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
function putShortMSB(s, b) {
//  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
}


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
function read_buf(strm, buf, start, size) {
  var len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  // zmemcpy(buf, strm->next_in, len);
  utils.arraySet(buf, strm.input, strm.next_in, len, start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
}


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
function longest_match(s, cur_match) {
  var chain_length = s.max_chain_length;      /* max hash chain length */
  var scan = s.strstart; /* current string */
  var match;                       /* matched string */
  var len;                           /* length of current match */
  var best_len = s.prev_length;              /* best match length so far */
  var nice_match = s.nice_match;             /* stop if match long enough */
  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  var _win = s.window; // shortcut

  var wmask = s.w_mask;
  var prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  var strend = s.strstart + MAX_MATCH;
  var scan_end1  = _win[scan + best_len - 1];
  var scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
}


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
function fill_window(s) {
  var _w_size = s.w_size;
  var p, n, m, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;

      /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

      n = s.hash_size;
      p = n;
      do {
        m = s.head[--p];
        s.head[p] = (m >= _w_size ? m - _w_size : 0);
      } while (--n);

      n = _w_size;
      p = n;
      do {
        m = s.prev[--p];
        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
        /* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */
      } while (--n);

      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    var curr = s.strstart + s.lookahead;
//    var init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
}

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */
function deflate_stored(s, flush) {
  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */
  var max_block_size = 0xffff;

  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }

  /* Copy as much as possible from input to output: */
  for (;;) {
    /* Fill the window as much as possible: */
    if (s.lookahead <= 1) {

      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
      //  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }

      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }

      if (s.lookahead === 0) {
        break;
      }
      /* flush the current block */
    }
    //Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");

    s.strstart += s.lookahead;
    s.lookahead = 0;

    /* Emit a stored block if pending_buf will be full: */
    var max_start = s.block_start + max_block_size;

    if (s.strstart === 0 || s.strstart >= max_start) {
      /* strstart == 0 is possible when wraparound on 16-bit machine */
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/


    }
    /* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */
    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }

  s.insert = 0;

  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }

  if (s.strstart > s.block_start) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_NEED_MORE;
}

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
function deflate_fast(s, flush) {
  var hash_head;        /* head of the hash chain */
  var bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
function deflate_slow(s, flush) {
  var hash_head;          /* head of hash chain */
  var bflush;              /* set if current block must be flushed */

  var max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH - 1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH - 1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length - 1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH - 1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
}


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
function deflate_rle(s, flush) {
  var bflush;            /* set if current block must be flushed */
  var prev;              /* byte at distance one to match */
  var scan, strend;      /* scan goes up to strend for length of run */

  var _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
function deflate_huff(s, flush) {
  var bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
function Config(good_length, max_lazy, nice_length, max_chain, func) {
  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
}

var configuration_table;

configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
function lm_init(s) {
  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
}


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);
  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);
  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new utils.Buf16(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.l_buf = 0;          /* buffer index for literals or lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.last_lit = 0;      /* running index in l_buf */

  this.d_buf = 0;
  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


function deflateResetKeep(strm) {
  var s;

  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = Z_NO_FLUSH;
  trees._tr_init(s);
  return Z_OK;
}


function deflateReset(strm) {
  var ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
}


function deflateSetHeader(strm, head) {
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }
  strm.state.gzhead = head;
  return Z_OK;
}


function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR;
  }
  var wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  var s = new DeflateState();

  strm.state = s;
  s.strm = strm;

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new utils.Buf8(s.w_size * 2);
  s.head = new utils.Buf16(s.hash_size);
  s.prev = new utils.Buf16(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  s.pending_buf_size = s.lit_bufsize * 4;

  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
  //s->pending_buf = (uchf *) overlay;
  s.pending_buf = new utils.Buf8(s.pending_buf_size);

  // It is offset from \`s.pending_buf\` (size is \`s.lit_bufsize * 2\`)
  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
  s.d_buf = 1 * s.lit_bufsize;

  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
  s.l_buf = (1 + 2) * s.lit_bufsize;

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
}

function deflateInit(strm, level) {
  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
}


function deflate(strm, flush) {
  var old_flush, s;
  var beg, val; // for gzip header write only

  if (!strm || !strm.state ||
    flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }

  s = strm.state;

  if (!strm.output ||
      (!strm.input && strm.avail_in !== 0) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }

  s.strm = strm; /* just in case */
  old_flush = s.last_flush;
  s.last_flush = flush;

  /* Write the header */
  if (s.status === INIT_STATE) {

    if (s.wrap === 2) { // GZIP header
      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) { // s->gzhead == Z_NULL
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      }
      else {
        put_byte(s, (s.gzhead.text ? 1 : 0) +
                    (s.gzhead.hcrc ? 2 : 0) +
                    (!s.gzhead.extra ? 0 : 4) +
                    (!s.gzhead.name ? 0 : 8) +
                    (!s.gzhead.comment ? 0 : 16)
        );
        put_byte(s, s.gzhead.time & 0xff);
        put_byte(s, (s.gzhead.time >> 8) & 0xff);
        put_byte(s, (s.gzhead.time >> 16) & 0xff);
        put_byte(s, (s.gzhead.time >> 24) & 0xff);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, s.gzhead.os & 0xff);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 0xff);
          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    }
    else // DEFLATE header
    {
      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
      var level_flags = -1;

      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= (level_flags << 6);
      if (s.strstart !== 0) { header |= PRESET_DICT; }
      header += 31 - (header % 31);

      s.status = BUSY_STATE;
      putShortMSB(s, header);

      /* Save the adler32 of the preset dictionary: */
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 0xffff);
      }
      strm.adler = 1; // adler32(0L, Z_NULL, 0);
    }
  }

//#ifdef GZIP
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */

      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    }
    else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    }
    else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    }
    else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 0xff);
        put_byte(s, (strm.adler >> 8) & 0xff);
        strm.adler = 0; //crc32(0L, Z_NULL, 0);
        s.status = BUSY_STATE;
      }
    }
    else {
      s.status = BUSY_STATE;
    }
  }
//#endif

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
        configuration_table[s.level].func(s, flush));

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        trees._tr_align(s);
      }
      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */

        trees._tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK;
      }
    }
  }
  //Assert(strm->avail_out > 0, "bug2");
  //if (strm.avail_out <= 0) { throw new Error("bug2");}

  if (flush !== Z_FINISH) { return Z_OK; }
  if (s.wrap <= 0) { return Z_STREAM_END; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
}

function deflateEnd(strm) {
  var status;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  status = strm.state.status;
  if (status !== INIT_STATE &&
    status !== EXTRA_STATE &&
    status !== NAME_STATE &&
    status !== COMMENT_STATE &&
    status !== HCRC_STATE &&
    status !== BUSY_STATE &&
    status !== FINISH_STATE
  ) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
}


/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */
function deflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var s;
  var str, n;
  var wrap;
  var avail;
  var next;
  var input;
  var tmpDict;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  s = strm.state;
  wrap = s.wrap;

  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {
    return Z_STREAM_ERROR;
  }

  /* when using zlib wrappers, compute Adler-32 for provided dictionary */
  if (wrap === 1) {
    /* adler32(strm->adler, dictionary, dictLength); */
    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
  }

  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */

  /* if dictionary would fill window, just replace the history */
  if (dictLength >= s.w_size) {
    if (wrap === 0) {            /* already empty otherwise */
      /*** CLEAR_HASH(s); ***/
      zero(s.head); // Fill with NIL (= 0);
      s.strstart = 0;
      s.block_start = 0;
      s.insert = 0;
    }
    /* use the tail */
    // dictionary = dictionary.slice(dictLength - s.w_size);
    tmpDict = new utils.Buf8(s.w_size);
    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);
    dictionary = tmpDict;
    dictLength = s.w_size;
  }
  /* insert dictionary into window and hash */
  avail = strm.avail_in;
  next = strm.next_in;
  input = strm.input;
  strm.avail_in = dictLength;
  strm.next_in = 0;
  strm.input = dictionary;
  fill_window(s);
  while (s.lookahead >= MIN_MATCH) {
    str = s.strstart;
    n = s.lookahead - (MIN_MATCH - 1);
    do {
      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

      s.prev[str & s.w_mask] = s.head[s.ins_h];

      s.head[s.ins_h] = str;
      str++;
    } while (--n);
    s.strstart = str;
    s.lookahead = MIN_MATCH - 1;
    fill_window(s);
  }
  s.strstart += s.lookahead;
  s.block_start = s.strstart;
  s.insert = s.lookahead;
  s.lookahead = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  strm.next_in = next;
  strm.input = input;
  strm.avail_in = avail;
  s.wrap = wrap;
  return Z_OK;
}


exports.deflateInit = deflateInit;
exports.deflateInit2 = deflateInit2;
exports.deflateReset = deflateReset;
exports.deflateResetKeep = deflateResetKeep;
exports.deflateSetHeader = deflateSetHeader;
exports.deflate = deflate;
exports.deflateEnd = deflateEnd;
exports.deflateSetDictionary = deflateSetDictionary;
exports.deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
exports.deflateBound = deflateBound;
exports.deflateCopy = deflateCopy;
exports.deflateParams = deflateParams;
exports.deflatePending = deflatePending;
exports.deflatePrime = deflatePrime;
exports.deflateTune = deflateTune;
*/


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/node_modules/pako/lib/zlib/deflate.js?`)},"./node_modules/browserify-zlib/node_modules/pako/lib/zlib/inffast.js":module=>{"use strict";eval(`

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// See state defs from inflate.js
var BAD = 30;       /* got a data error -- remain here until reset */
var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
module.exports = function inflate_fast(strm, start) {
  var state;
  var _in;                    /* local strm.input */
  var last;                   /* have enough input while in < last */
  var _out;                   /* local strm.output */
  var beg;                    /* inflate()'s initial strm.output */
  var end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  var dmax;                   /* maximum distance from zlib header */
//#endif
  var wsize;                  /* window size or zero if not using window */
  var whave;                  /* valid bytes in the window */
  var wnext;                  /* window write index */
  // Use \`s_window\` instead \`window\`, avoid conflict with instrumentation tools
  var s_window;               /* allocated sliding window, if wsize != 0 */
  var hold;                   /* local strm.hold */
  var bits;                   /* local strm.bits */
  var lcode;                  /* local strm.lencode */
  var dcode;                  /* local strm.distcode */
  var lmask;                  /* mask for first level of length codes */
  var dmask;                  /* mask for first level of distance codes */
  var here;                   /* retrieved table entry */
  var op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  var len;                    /* match length, unused bytes */
  var dist;                   /* match distance */
  var from;                   /* where to copy match from */
  var from_source;


  var input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\\n" :
        //        "inflate:         literal 0x%02x\\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD;
                  break top;
                }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = s_window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = s_window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\\n"));
        state.mode = TYPE;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/node_modules/pako/lib/zlib/inffast.js?`)},"./node_modules/browserify-zlib/node_modules/pako/lib/zlib/inflate.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval(`

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils         = __webpack_require__(/*! ../utils/common */ "./node_modules/browserify-zlib/node_modules/pako/lib/utils/common.js");
var adler32       = __webpack_require__(/*! ./adler32 */ "./node_modules/browserify-zlib/node_modules/pako/lib/zlib/adler32.js");
var crc32         = __webpack_require__(/*! ./crc32 */ "./node_modules/browserify-zlib/node_modules/pako/lib/zlib/crc32.js");
var inflate_fast  = __webpack_require__(/*! ./inffast */ "./node_modules/browserify-zlib/node_modules/pako/lib/zlib/inffast.js");
var inflate_table = __webpack_require__(/*! ./inftrees */ "./node_modules/browserify-zlib/node_modules/pako/lib/zlib/inftrees.js");

var CODES = 0;
var LENS = 1;
var DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
//var Z_NO_FLUSH      = 0;
//var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
//var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;

/* The deflate compression method */
var Z_DEFLATED  = 8;


/* STATES ====================================================================*/
/* ===========================================================================*/


var    HEAD = 1;       /* i: waiting for magic header */
var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
var    TIME = 3;       /* i: waiting for modification time (gzip) */
var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
var    EXLEN = 5;      /* i: waiting for extra length (gzip) */
var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
var    NAME = 7;       /* i: waiting for end of file name (gzip) */
var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
var    HCRC = 9;       /* i: waiting for header crc (gzip) */
var    DICTID = 10;    /* i: waiting for dictionary check value */
var    DICT = 11;      /* waiting for inflateSetDictionary() call */
var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
var        STORED = 14;    /* i: waiting for stored size (length and complement) */
var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
var        TABLE = 17;     /* i: waiting for dynamic block table lengths */
var        LENLENS = 18;   /* i: waiting for code length code lengths */
var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
var            LEN_ = 20;      /* i: same as LEN below, but only first time in */
var            LEN = 21;       /* i: waiting for length/lit/eob code */
var            LENEXT = 22;    /* i: waiting for length extra bits */
var            DIST = 23;      /* i: waiting for distance code */
var            DISTEXT = 24;   /* i: waiting for distance extra bits */
var            MATCH = 25;     /* o: waiting for output space to copy string */
var            LIT = 26;       /* o: waiting for output space to write literal */
var    CHECK = 27;     /* i: waiting for 32-bit check value */
var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
var    DONE = 29;      /* finished check, done -- remain here until reset */
var    BAD = 30;       /* got a data error -- remain here until reset */
var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_WBITS = MAX_WBITS;


function zswap32(q) {
  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
}


function InflateState() {
  this.mode = 0;             /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */
  this.work = new utils.Buf16(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}

function inflateResetKeep(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\\n"));
  return Z_OK;
}

function inflateReset(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

}

function inflateReset2(strm, windowBits) {
  var wrap;
  var state;

  /* get the state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
}

function inflateInit2(strm, windowBits) {
  var ret;
  var state;

  if (!strm) { return Z_STREAM_ERROR; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\\n"));
  strm.state = state;
  state.window = null/*Z_NULL*/;
  ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
}

function inflateInit(strm) {
  return inflateInit2(strm, DEF_WBITS);
}


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
var virgin = true;

var lenfix, distfix; // We have no pointers in JS, so keep tables separate

function fixedtables(state) {
  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    var sym;

    lenfix = new utils.Buf32(512);
    distfix = new utils.Buf32(32);

    /* literal/length table */
    sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
}


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
function updatewindow(strm, src, end, copy) {
  var dist;
  var state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new utils.Buf8(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    utils.arraySet(state.window, src, end - copy, dist, state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      utils.arraySet(state.window, src, end - copy, copy, 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
}

function inflate(strm, flush) {
  var state;
  var input, output;          // input/output buffers
  var next;                   /* next input INDEX */
  var put;                    /* next output INDEX */
  var have, left;             /* available input and output */
  var hold;                   /* bit buffer */
  var bits;                   /* bits in bit buffer */
  var _in, _out;              /* save starting available input and output */
  var copy;                   /* number of stored or match bytes to copy */
  var from;                   /* where to copy match bytes from */
  var from_source;
  var here = 0;               /* current decoding table entry */
  var here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //var last;                   /* parent table entry */
  var last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  var len;                    /* length to copy for repeats, bits to drop */
  var ret;                    /* return code */
  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */
  var opts;

  var n; // temporary var for NEED_BITS

  var order = /* permutation of code lengths */
    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];


  if (!strm || !strm.state || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
      case HEAD:
        if (state.wrap === 0) {
          state.mode = TYPEDO;
          break;
        }
        //=== NEEDBITS(16);
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
          state.check = 0/*crc32(0L, Z_NULL, 0)*/;
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//

          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          state.mode = FLAGS;
          break;
        }
        state.flags = 0;           /* expect zlib header */
        if (state.head) {
          state.head.done = false;
        }
        if (!(state.wrap & 1) ||   /* check if zlib header allowed */
          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
          strm.msg = 'incorrect header check';
          state.mode = BAD;
          break;
        }
        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
        len = (hold & 0x0f)/*BITS(4)*/ + 8;
        if (state.wbits === 0) {
          state.wbits = len;
        }
        else if (len > state.wbits) {
          strm.msg = 'invalid window size';
          state.mode = BAD;
          break;
        }
        state.dmax = 1 << len;
        //Tracev((stderr, "inflate:   zlib header ok\\n"));
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = hold & 0x200 ? DICTID : TYPE;
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        break;
      case FLAGS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.flags = hold;
        if ((state.flags & 0xff) !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        if (state.flags & 0xe000) {
          strm.msg = 'unknown header flags set';
          state.mode = BAD;
          break;
        }
        if (state.head) {
          state.head.text = ((hold >> 8) & 1);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = TIME;
        /* falls through */
      case TIME:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.time = hold;
        }
        if (state.flags & 0x0200) {
          //=== CRC4(state.check, hold)
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          hbuf[2] = (hold >>> 16) & 0xff;
          hbuf[3] = (hold >>> 24) & 0xff;
          state.check = crc32(state.check, hbuf, 4, 0);
          //===
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = OS;
        /* falls through */
      case OS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.xflags = (hold & 0xff);
          state.head.os = (hold >> 8);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = EXLEN;
        /* falls through */
      case EXLEN:
        if (state.flags & 0x0400) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length = hold;
          if (state.head) {
            state.head.extra_len = hold;
          }
          if (state.flags & 0x0200) {
            //=== CRC2(state.check, hold);
            hbuf[0] = hold & 0xff;
            hbuf[1] = (hold >>> 8) & 0xff;
            state.check = crc32(state.check, hbuf, 2, 0);
            //===//
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        else if (state.head) {
          state.head.extra = null/*Z_NULL*/;
        }
        state.mode = EXTRA;
        /* falls through */
      case EXTRA:
        if (state.flags & 0x0400) {
          copy = state.length;
          if (copy > have) { copy = have; }
          if (copy) {
            if (state.head) {
              len = state.head.extra_len - state.length;
              if (!state.head.extra) {
                // Use untyped array for more convenient processing later
                state.head.extra = new Array(state.head.extra_len);
              }
              utils.arraySet(
                state.head.extra,
                input,
                next,
                // extra field is limited to 65536 bytes
                // - no need for additional size check
                copy,
                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                len
              );
              //zmemcpy(state.head.extra + len, next,
              //        len + copy > state.head.extra_max ?
              //        state.head.extra_max - len : copy);
            }
            if (state.flags & 0x0200) {
              state.check = crc32(state.check, input, copy, next);
            }
            have -= copy;
            next += copy;
            state.length -= copy;
          }
          if (state.length) { break inf_leave; }
        }
        state.length = 0;
        state.mode = NAME;
        /* falls through */
      case NAME:
        if (state.flags & 0x0800) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            // TODO: 2 or 1 bytes?
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.name_max*/)) {
              state.head.name += String.fromCharCode(len);
            }
          } while (len && copy < have);

          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.name = null;
        }
        state.length = 0;
        state.mode = COMMENT;
        /* falls through */
      case COMMENT:
        if (state.flags & 0x1000) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.comm_max*/)) {
              state.head.comment += String.fromCharCode(len);
            }
          } while (len && copy < have);
          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.comment = null;
        }
        state.mode = HCRC;
        /* falls through */
      case HCRC:
        if (state.flags & 0x0200) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.check & 0xffff)) {
            strm.msg = 'header crc mismatch';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        if (state.head) {
          state.head.hcrc = ((state.flags >> 9) & 1);
          state.head.done = true;
        }
        strm.adler = state.check = 0;
        state.mode = TYPE;
        break;
      case DICTID:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        strm.adler = state.check = zswap32(hold);
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = DICT;
        /* falls through */
      case DICT:
        if (state.havedict === 0) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          return Z_NEED_DICT;
        }
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = TYPE;
        /* falls through */
      case TYPE:
        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case TYPEDO:
        if (state.last) {
          //--- BYTEBITS() ---//
          hold >>>= bits & 7;
          bits -= bits & 7;
          //---//
          state.mode = CHECK;
          break;
        }
        //=== NEEDBITS(3); */
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.last = (hold & 0x01)/*BITS(1)*/;
        //--- DROPBITS(1) ---//
        hold >>>= 1;
        bits -= 1;
        //---//

        switch ((hold & 0x03)/*BITS(2)*/) {
          case 0:                             /* stored block */
            //Tracev((stderr, "inflate:     stored block%s\\n",
            //        state.last ? " (last)" : ""));
            state.mode = STORED;
            break;
          case 1:                             /* fixed block */
            fixedtables(state);
            //Tracev((stderr, "inflate:     fixed codes block%s\\n",
            //        state.last ? " (last)" : ""));
            state.mode = LEN_;             /* decode codes */
            if (flush === Z_TREES) {
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
              break inf_leave;
            }
            break;
          case 2:                             /* dynamic block */
            //Tracev((stderr, "inflate:     dynamic codes block%s\\n",
            //        state.last ? " (last)" : ""));
            state.mode = TABLE;
            break;
          case 3:
            strm.msg = 'invalid block type';
            state.mode = BAD;
        }
        //--- DROPBITS(2) ---//
        hold >>>= 2;
        bits -= 2;
        //---//
        break;
      case STORED:
        //--- BYTEBITS() ---// /* go to byte boundary */
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
          strm.msg = 'invalid stored block lengths';
          state.mode = BAD;
          break;
        }
        state.length = hold & 0xffff;
        //Tracev((stderr, "inflate:       stored length %u\\n",
        //        state.length));
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = COPY_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case COPY_:
        state.mode = COPY;
        /* falls through */
      case COPY:
        copy = state.length;
        if (copy) {
          if (copy > have) { copy = have; }
          if (copy > left) { copy = left; }
          if (copy === 0) { break inf_leave; }
          //--- zmemcpy(put, next, copy); ---
          utils.arraySet(output, input, next, copy, put);
          //---//
          have -= copy;
          next += copy;
          left -= copy;
          put += copy;
          state.length -= copy;
          break;
        }
        //Tracev((stderr, "inflate:       stored end\\n"));
        state.mode = TYPE;
        break;
      case TABLE:
        //=== NEEDBITS(14); */
        while (bits < 14) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
//#ifndef PKZIP_BUG_WORKAROUND
        if (state.nlen > 286 || state.ndist > 30) {
          strm.msg = 'too many length or distance symbols';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracev((stderr, "inflate:       table sizes ok\\n"));
        state.have = 0;
        state.mode = LENLENS;
        /* falls through */
      case LENLENS:
        while (state.have < state.ncode) {
          //=== NEEDBITS(3);
          while (bits < 3) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
          //--- DROPBITS(3) ---//
          hold >>>= 3;
          bits -= 3;
          //---//
        }
        while (state.have < 19) {
          state.lens[order[state.have++]] = 0;
        }
        // We have separate tables & no pointers. 2 commented lines below not needed.
        //state.next = state.codes;
        //state.lencode = state.next;
        // Switch to use dynamic table
        state.lencode = state.lendyn;
        state.lenbits = 7;

        opts = { bits: state.lenbits };
        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
        state.lenbits = opts.bits;

        if (ret) {
          strm.msg = 'invalid code lengths set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, "inflate:       code lengths ok\\n"));
        state.have = 0;
        state.mode = CODELENS;
        /* falls through */
      case CODELENS:
        while (state.have < state.nlen + state.ndist) {
          for (;;) {
            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          if (here_val < 16) {
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            state.lens[state.have++] = here_val;
          }
          else {
            if (here_val === 16) {
              //=== NEEDBITS(here.bits + 2);
              n = here_bits + 2;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              if (state.have === 0) {
                strm.msg = 'invalid bit length repeat';
                state.mode = BAD;
                break;
              }
              len = state.lens[state.have - 1];
              copy = 3 + (hold & 0x03);//BITS(2);
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
            }
            else if (here_val === 17) {
              //=== NEEDBITS(here.bits + 3);
              n = here_bits + 3;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 3 + (hold & 0x07);//BITS(3);
              //--- DROPBITS(3) ---//
              hold >>>= 3;
              bits -= 3;
              //---//
            }
            else {
              //=== NEEDBITS(here.bits + 7);
              n = here_bits + 7;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 11 + (hold & 0x7f);//BITS(7);
              //--- DROPBITS(7) ---//
              hold >>>= 7;
              bits -= 7;
              //---//
            }
            if (state.have + copy > state.nlen + state.ndist) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            while (copy--) {
              state.lens[state.have++] = len;
            }
          }
        }

        /* handle error breaks in while */
        if (state.mode === BAD) { break; }

        /* check for end-of-block code (better have one) */
        if (state.lens[256] === 0) {
          strm.msg = 'invalid code -- missing end-of-block';
          state.mode = BAD;
          break;
        }

        /* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */
        state.lenbits = 9;

        opts = { bits: state.lenbits };
        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.lenbits = opts.bits;
        // state.lencode = state.next;

        if (ret) {
          strm.msg = 'invalid literal/lengths set';
          state.mode = BAD;
          break;
        }

        state.distbits = 6;
        //state.distcode.copy(state.codes);
        // Switch to use dynamic table
        state.distcode = state.distdyn;
        opts = { bits: state.distbits };
        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.distbits = opts.bits;
        // state.distcode = state.next;

        if (ret) {
          strm.msg = 'invalid distances set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, 'inflate:       codes ok\\n'));
        state.mode = LEN_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case LEN_:
        state.mode = LEN;
        /* falls through */
      case LEN:
        if (have >= 6 && left >= 258) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          inflate_fast(strm, _out);
          //--- LOAD() ---
          put = strm.next_out;
          output = strm.output;
          left = strm.avail_out;
          next = strm.next_in;
          input = strm.input;
          have = strm.avail_in;
          hold = state.hold;
          bits = state.bits;
          //---

          if (state.mode === TYPE) {
            state.back = -1;
          }
          break;
        }
        state.back = 0;
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if (here_bits <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_op && (here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.lencode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        state.length = here_val;
        if (here_op === 0) {
          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
          //        "inflate:         literal '%c'\\n" :
          //        "inflate:         literal 0x%02x\\n", here.val));
          state.mode = LIT;
          break;
        }
        if (here_op & 32) {
          //Tracevv((stderr, "inflate:         end of block\\n"));
          state.back = -1;
          state.mode = TYPE;
          break;
        }
        if (here_op & 64) {
          strm.msg = 'invalid literal/length code';
          state.mode = BAD;
          break;
        }
        state.extra = here_op & 15;
        state.mode = LENEXT;
        /* falls through */
      case LENEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
        //Tracevv((stderr, "inflate:         length %u\\n", state.length));
        state.was = state.length;
        state.mode = DIST;
        /* falls through */
      case DIST:
        for (;;) {
          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if ((here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.distcode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        if (here_op & 64) {
          strm.msg = 'invalid distance code';
          state.mode = BAD;
          break;
        }
        state.offset = here_val;
        state.extra = (here_op) & 15;
        state.mode = DISTEXT;
        /* falls through */
      case DISTEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
//#ifdef INFLATE_STRICT
        if (state.offset > state.dmax) {
          strm.msg = 'invalid distance too far back';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracevv((stderr, "inflate:         distance %u\\n", state.offset));
        state.mode = MATCH;
        /* falls through */
      case MATCH:
        if (left === 0) { break inf_leave; }
        copy = _out - left;
        if (state.offset > copy) {         /* copy from window */
          copy = state.offset - copy;
          if (copy > state.whave) {
            if (state.sane) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break;
            }
// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
          }
          if (copy > state.wnext) {
            copy -= state.wnext;
            from = state.wsize - copy;
          }
          else {
            from = state.wnext - copy;
          }
          if (copy > state.length) { copy = state.length; }
          from_source = state.window;
        }
        else {                              /* copy from output */
          from_source = output;
          from = put - state.offset;
          copy = state.length;
        }
        if (copy > left) { copy = left; }
        left -= copy;
        state.length -= copy;
        do {
          output[put++] = from_source[from++];
        } while (--copy);
        if (state.length === 0) { state.mode = LEN; }
        break;
      case LIT:
        if (left === 0) { break inf_leave; }
        output[put++] = state.length;
        left--;
        state.mode = LEN;
        break;
      case CHECK:
        if (state.wrap) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            // Use '|' instead of '+' to make sure that result is signed
            hold |= input[next++] << bits;
            bits += 8;
          }
          //===//
          _out -= left;
          strm.total_out += _out;
          state.total += _out;
          if (_out) {
            strm.adler = state.check =
                /*UPDATE(state.check, put - _out, _out);*/
                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));

          }
          _out = left;
          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
          if ((state.flags ? hold : zswap32(hold)) !== state.check) {
            strm.msg = 'incorrect data check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   check matches trailer\\n"));
        }
        state.mode = LENGTH;
        /* falls through */
      case LENGTH:
        if (state.wrap && state.flags) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.total & 0xffffffff)) {
            strm.msg = 'incorrect length check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   length matches trailer\\n"));
        }
        state.mode = DONE;
        /* falls through */
      case DONE:
        ret = Z_STREAM_END;
        break inf_leave;
      case BAD:
        ret = Z_DATA_ERROR;
        break inf_leave;
      case MEM:
        return Z_MEM_ERROR;
      case SYNC:
        /* falls through */
      default:
        return Z_STREAM_ERROR;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
      state.mode = MEM;
      return Z_MEM_ERROR;
    }
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
    ret = Z_BUF_ERROR;
  }
  return ret;
}

function inflateEnd(strm) {

  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
    return Z_STREAM_ERROR;
  }

  var state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK;
}

function inflateGetHeader(strm, head) {
  var state;

  /* check state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK;
}

function inflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var state;
  var dictid;
  var ret;

  /* check state */
  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }
  state = strm.state;

  if (state.wrap !== 0 && state.mode !== DICT) {
    return Z_STREAM_ERROR;
  }

  /* check for correct dictionary identifier */
  if (state.mode === DICT) {
    dictid = 1; /* adler32(0, null, 0)*/
    /* dictid = adler32(dictid, dictionary, dictLength); */
    dictid = adler32(dictid, dictionary, dictLength, 0);
    if (dictid !== state.check) {
      return Z_DATA_ERROR;
    }
  }
  /* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */
  ret = updatewindow(strm, dictionary, dictLength, dictLength);
  if (ret) {
    state.mode = MEM;
    return Z_MEM_ERROR;
  }
  state.havedict = 1;
  // Tracev((stderr, "inflate:   dictionary set\\n"));
  return Z_OK;
}

exports.inflateReset = inflateReset;
exports.inflateReset2 = inflateReset2;
exports.inflateResetKeep = inflateResetKeep;
exports.inflateInit = inflateInit;
exports.inflateInit2 = inflateInit2;
exports.inflate = inflate;
exports.inflateEnd = inflateEnd;
exports.inflateGetHeader = inflateGetHeader;
exports.inflateSetDictionary = inflateSetDictionary;
exports.inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
exports.inflateCopy = inflateCopy;
exports.inflateGetDictionary = inflateGetDictionary;
exports.inflateMark = inflateMark;
exports.inflatePrime = inflatePrime;
exports.inflateSync = inflateSync;
exports.inflateSyncPoint = inflateSyncPoint;
exports.inflateUndermine = inflateUndermine;
*/


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/node_modules/pako/lib/zlib/inflate.js?`)},"./node_modules/browserify-zlib/node_modules/pako/lib/zlib/inftrees.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils = __webpack_require__(/*! ../utils/common */ "./node_modules/browserify-zlib/node_modules/pako/lib/utils/common.js");

var MAXBITS = 15;
var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

var lbase = [ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
];

var lext = [ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
];

var dbase = [ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
];

var dext = [ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
];

module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)
{
  var bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  var len = 0;               /* a code's length in bits */
  var sym = 0;               /* index of code symbols */
  var min = 0, max = 0;          /* minimum and maximum code lengths */
  var root = 0;              /* number of index bits for root table */
  var curr = 0;              /* number of index bits for current table */
  var drop = 0;              /* code bits to drop for sub-table */
  var left = 0;                   /* number of prefix codes available */
  var used = 0;              /* code entries in table used */
  var huff = 0;              /* Huffman code */
  var incr;              /* for incrementing code, index */
  var fill;              /* index for replicating entries */
  var low;               /* low bits for current root entry */
  var mask;              /* mask for low root bits */
  var next;             /* next available space in table */
  var base = null;     /* base value table to use */
  var base_index = 0;
//  var shoextra;    /* extra bits table to use */
  var end;                    /* use base and extra for symbol > end */
  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
  var extra = null;
  var extra_index = 0;

  var here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES) {
    base = extra = work;    /* dummy value--not used */
    end = 19;

  } else if (type === LENS) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end = 256;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    end = -1;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS && used > ENOUGH_LENS) ||
    (type === DISTS && used > ENOUGH_DISTS)) {
    return 1;
  }

  /* process all codes and make table entries */
  for (;;) {
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] < end) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] > end) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS && used > ENOUGH_LENS) ||
        (type === DISTS && used > ENOUGH_DISTS)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/node_modules/pako/lib/zlib/inftrees.js?`)},"./node_modules/browserify-zlib/node_modules/pako/lib/zlib/messages.js":module=>{"use strict";eval(`

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {
  2:      'need dictionary',     /* Z_NEED_DICT       2  */
  1:      'stream end',          /* Z_STREAM_END      1  */
  0:      '',                    /* Z_OK              0  */
  '-1':   'file error',          /* Z_ERRNO         (-1) */
  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/node_modules/pako/lib/zlib/messages.js?`)},"./node_modules/browserify-zlib/node_modules/pako/lib/zlib/trees.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval(`

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

/* eslint-disable space-unary-ops */

var utils = __webpack_require__(/*! ../utils/common */ "./node_modules/browserify-zlib/node_modules/pako/lib/utils/common.js");

/* Public constants ==========================================================*/
/* ===========================================================================*/


//var Z_FILTERED          = 1;
//var Z_HUFFMAN_ONLY      = 2;
//var Z_RLE               = 3;
var Z_FIXED               = 4;
//var Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
var Z_BINARY              = 0;
var Z_TEXT                = 1;
//var Z_ASCII             = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;

/*============================================================================*/


function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

var STORED_BLOCK = 0;
var STATIC_TREES = 1;
var DYN_TREES    = 2;
/* The three kinds of block type */

var MIN_MATCH    = 3;
var MAX_MATCH    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */

var LITERALS      = 256;
/* number of literal bytes 0..255 */

var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */

var D_CODES       = 30;
/* number of distance codes */

var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */

var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */

var MAX_BITS      = 15;
/* All codes must not exceed MAX_BITS bits */

var Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

var MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

var END_BLOCK   = 256;
/* end of block literal code */

var REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

var REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

var REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

/* eslint-disable comma-spacing,array-bracket-spacing */
var extra_lbits =   /* extra bits for each length code */
  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];

var extra_dbits =   /* extra bits for each distance code */
  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];

var extra_blbits =  /* extra bits for each bit length code */
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];

var bl_order =
  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
/* eslint-enable comma-spacing,array-bracket-spacing */

/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

var DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1
var static_ltree  = new Array((L_CODES + 2) * 2);
zero(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

var static_dtree  = new Array(D_CODES * 2);
zero(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

var _dist_code    = new Array(DIST_CODE_LEN);
zero(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

var _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);
zero(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

var base_length   = new Array(LENGTH_CODES);
zero(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

var base_dist     = new Array(D_CODES);
zero(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if \`static_tree\` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
}


var static_l_desc;
var static_d_desc;
var static_bl_desc;


function TreeDesc(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
}



function d_code(dist) {
  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
}


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
function put_short(s, w) {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
}


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
function send_bits(s, value, length) {
  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
}


function send_code(s, c, tree) {
  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);
}


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
function bi_reverse(code, len) {
  var res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
}


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
function bi_flush(s) {
  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
}


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
function gen_bitlen(s, desc)
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{
  var tree            = desc.dyn_tree;
  var max_code        = desc.max_code;
  var stree           = desc.stat_desc.static_tree;
  var has_stree       = desc.stat_desc.has_stree;
  var extra           = desc.stat_desc.extra_bits;
  var base            = desc.stat_desc.extra_base;
  var max_length      = desc.stat_desc.max_length;
  var h;              /* heap index */
  var n, m;           /* iterate over the tree elements */
  var bits;           /* bit length */
  var xbits;          /* extra bits */
  var f;              /* frequency */
  var overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n * 2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n - base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Trace((stderr,"\\nbit length overflow\\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length - 1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m * 2 + 1]/*.Len*/ !== bits) {
        // Trace((stderr,"code %d bits %d->%d\\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;
        tree[m * 2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
}


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
function gen_codes(tree, max_code, bl_count)
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{
  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */
  var code = 0;              /* running code value */
  var bits;                  /* bit index */
  var n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS; bits++) {
    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    var len = tree[n * 2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
}


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
function tr_static_init() {
  var n;        /* iterates over tree elements */
  var bits;     /* bit counter */
  var length;   /* length value */
  var code;     /* code value */
  var dist;     /* distance index */
  var bl_count = new Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES - 1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1 << extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length - 1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1 << extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n * 2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n * 2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES + 1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n * 2 + 1]/*.Len*/ = 5;
    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);

  //static_init_done = true;
}


/* ===========================================================================
 * Initialize a new block.
 */
function init_block(s) {
  var n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
}


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
function bi_windup(s)
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
}

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */
function copy_block(s, buf, len, header)
//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{
  bi_windup(s);        /* align on byte boundary */

  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
//  while (len--) {
//    put_byte(s, *buf++);
//  }
  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
  s.pending += len;
}

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
function smaller(tree, n, m, depth) {
  var _n2 = n * 2;
  var _m2 = m * 2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
}

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
function pqdownheap(s, tree, k)
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{
  var v = s.heap[k];
  var j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
}


// inlined manually
// var SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
function compress_block(s, ltree, dtree)
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{
  var dist;           /* distance of matched string */
  var lc;             /* match length or unmatched char (if dist == 0) */
  var lx = 0;         /* running index in l_buf */
  var code;           /* the code to send */
  var extra;          /* number of extra bits to send */

  if (s.last_lit !== 0) {
    do {
      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);
      lc = s.pending_buf[s.l_buf + lx];
      lx++;

      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code + LITERALS + 1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
      //       "pendingBuf overflow");

    } while (lx < s.last_lit);
  }

  send_code(s, END_BLOCK, ltree);
}


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
function build_tree(s, desc)
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{
  var tree     = desc.dyn_tree;
  var stree    = desc.stat_desc.static_tree;
  var has_stree = desc.stat_desc.has_stree;
  var elems    = desc.stat_desc.elems;
  var n, m;          /* iterate over heap elements */
  var max_code = -1; /* largest code with non zero frequency */
  var node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n * 2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node * 2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
}


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
function scan_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
function send_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count - 3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count - 3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count - 11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
function build_bl_tree(s) {
  var max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
  //Tracev((stderr, "\\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
}


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
function send_all_trees(s, lcodes, dcodes, blcodes)
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{
  var rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\\nbl counts: "));
  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes - 1,   5);
  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
  //Tracev((stderr, "\\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
  //Tracev((stderr, "\\ndist tree: sent %ld", s->bits_sent));
}


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
function detect_data_type(s) {
  /* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  var black_mask = 0xf3ffc07f;
  var n;

  /* Check for non-textual ("black-listed") bytes. */
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("white-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
}


var static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
function _tr_init(s)
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
}


/* ===========================================================================
 * Send a stored block
 */
function _tr_stored_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */
  copy_block(s, buf, stored_len, true); /* with header */
}


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
function _tr_align(s) {
  send_bits(s, STATIC_TREES << 1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
}


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */
function _tr_flush_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  var max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len + 3 + 7) >>> 3;
    static_lenb = (s.static_len + 3 + 7) >>> 3;

    // Tracev((stderr, "\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->last_lit));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
}

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
function _tr_tally(s, dist, lc)
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
  //var out_length, in_length, dcode;

  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
  s.last_lit++;

  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc * 2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility

//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif

  return (s.last_lit === s.lit_bufsize - 1);
  /* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */
}

exports._tr_init  = _tr_init;
exports._tr_stored_block = _tr_stored_block;
exports._tr_flush_block  = _tr_flush_block;
exports._tr_tally = _tr_tally;
exports._tr_align = _tr_align;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/node_modules/pako/lib/zlib/trees.js?`)},"./node_modules/browserify-zlib/node_modules/pako/lib/zlib/zstream.js":module=>{"use strict";eval(`

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function ZStream() {
  /* next input byte */
  this.input = null; // JS specific, because we have no pointers
  this.next_in = 0;
  /* number of bytes available at input */
  this.avail_in = 0;
  /* total number of input bytes read so far */
  this.total_in = 0;
  /* next output byte should be put there */
  this.output = null; // JS specific, because we have no pointers
  this.next_out = 0;
  /* remaining free space at output */
  this.avail_out = 0;
  /* total number of bytes output so far */
  this.total_out = 0;
  /* last error message, NULL if no error */
  this.msg = ''/*Z_NULL*/;
  /* not visible by applications */
  this.state = null;
  /* best guess about the data type: binary or text */
  this.data_type = 2/*Z_UNKNOWN*/;
  /* adler32 value of the uncompressed data */
  this.adler = 0;
}

module.exports = ZStream;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/browserify-zlib/node_modules/pako/lib/zlib/zstream.js?`)},"./node_modules/buffer/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval(`/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



const base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
const ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
const customInspectSymbol =
  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation
    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
    : null

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

const K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If \`Buffer.TYPED_ARRAY_SUPPORT\`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using \`buffer\` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to \`Uint8Array\`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '\`buffer\` v5.x. Use \`buffer\` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    const arr = new Uint8Array(1)
    const proto = { foo: function () { return 42 } }
    Object.setPrototypeOf(proto, Uint8Array.prototype)
    Object.setPrototypeOf(arr, proto)
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented \`Uint8Array\` instance
  const buf = new Uint8Array(length)
  Object.setPrototypeOf(buf, Buffer.prototype)
  return buf
}

/**
 * The Buffer constructor returns instances of \`Uint8Array\` that have their
 * prototype changed to \`Buffer.prototype\`. Furthermore, \`Buffer\` is a subclass of
 * \`Uint8Array\`, so the returned instances will have all the node \`Buffer\` methods
 * and the \`Uint8Array\` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The \`Uint8Array\` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayView(value)
  }

  if (value == null) {
    throw new TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof SharedArrayBuffer !== 'undefined' &&
      (isInstance(value, SharedArrayBuffer) ||
      (value && isInstance(value.buffer, SharedArrayBuffer)))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  const valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  const b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)
Object.setPrototypeOf(Buffer, Uint8Array)

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  const length = byteLength(string, encoding) | 0
  let buf = createBuffer(length)

  const actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  const length = array.length < 0 ? 0 : checked(array.length) | 0
  const buf = createBuffer(length)
  for (let i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayView (arrayView) {
  if (isInstance(arrayView, Uint8Array)) {
    const copy = new Uint8Array(arrayView)
    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)
  }
  return fromArrayLike(arrayView)
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  let buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented \`Uint8Array\` instance
  Object.setPrototypeOf(buf, Buffer.prototype)

  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    const len = checked(obj.length) | 0
    const buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use \`length < K_MAX_LENGTH\` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  let x = a.length
  let y = b.length

  for (let i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  let i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  const buffer = Buffer.allocUnsafe(length)
  let pos = 0
  for (i = 0; i < list.length; ++i) {
    let buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      if (pos + buf.length > buffer.length) {
        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)
        buf.copy(buffer, pos)
      } else {
        Uint8Array.prototype.set.call(
          buffer,
          buf,
          pos
        )
      }
    } else if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    } else {
      buf.copy(buffer, pos)
    }
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  const len = string.length
  const mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  let loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  let loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by \`Buffer.isBuffer\` (and the \`is-buffer\` npm package)
// to detect a Buffer instance. It's not possible to use \`instanceof Buffer\`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the \`buffer\` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  const i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  const len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (let i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  const len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (let i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  const len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (let i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  const length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  let str = ''
  const max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}
if (customInspectSymbol) {
  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  let x = thisEnd - thisStart
  let y = end - start
  const len = Math.min(x, y)

  const thisCopy = this.slice(thisStart, thisEnd)
  const targetCopy = target.slice(start, end)

  for (let i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of \`val\` in \`buffer\` at offset >= \`byteOffset\`,
// OR the last index of \`val\` in \`buffer\` at offset <= \`byteOffset\`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into \`buffer\`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  let indexSize = 1
  let arrLength = arr.length
  let valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  let i
  if (dir) {
    let foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      let found = true
      for (let j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  const remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  const strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  let i
  for (i = 0; i < length; ++i) {
    const parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  const remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  let loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
      case 'latin1':
      case 'binary':
        return asciiWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  const res = []

  let i = start
  while (i < end) {
    const firstByte = buf[i]
    let codePoint = null
    let bytesPerSequence = (firstByte > 0xEF)
      ? 4
      : (firstByte > 0xDF)
          ? 3
          : (firstByte > 0xBF)
              ? 2
              : 1

    if (i + bytesPerSequence <= end) {
      let secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
const MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  const len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  let res = ''
  let i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  let ret = ''
  end = Math.min(buf.length, end)

  for (let i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  let ret = ''
  end = Math.min(buf.length, end)

  for (let i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  const len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  let out = ''
  for (let i = start; i < end; ++i) {
    out += hexSliceLookupTable[buf[i]]
  }
  return out
}

function utf16leSlice (buf, start, end) {
  const bytes = buf.slice(start, end)
  let res = ''
  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
  for (let i = 0; i < bytes.length - 1; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  const len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  const newBuf = this.subarray(start, end)
  // Return an augmented \`Uint8Array\` instance
  Object.setPrototypeOf(newBuf, Buffer.prototype)

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUintLE =
Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let val = this[offset]
  let mul = 1
  let i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUintBE =
Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  let val = this[offset + --byteLength]
  let mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUint8 =
Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUint16LE =
Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUint16BE =
Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUint32LE =
Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUint32BE =
Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const lo = first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 24

  const hi = this[++offset] +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    last * 2 ** 24

  return BigInt(lo) + (BigInt(hi) << BigInt(32))
})

Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const hi = first * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    this[++offset]

  const lo = this[++offset] * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last

  return (BigInt(hi) << BigInt(32)) + BigInt(lo)
})

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let val = this[offset]
  let mul = 1
  let i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  let i = byteLength
  let mul = 1
  let val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  const val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  const val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const val = this[offset + 4] +
    this[offset + 5] * 2 ** 8 +
    this[offset + 6] * 2 ** 16 +
    (last << 24) // Overflow

  return (BigInt(val) << BigInt(32)) +
    BigInt(first +
    this[++offset] * 2 ** 8 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 24)
})

Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {
  offset = offset >>> 0
  validateNumber(offset, 'offset')
  const first = this[offset]
  const last = this[offset + 7]
  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8)
  }

  const val = (first << 24) + // Overflow
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    this[++offset]

  return (BigInt(val) << BigInt(32)) +
    BigInt(this[++offset] * 2 ** 24 +
    this[++offset] * 2 ** 16 +
    this[++offset] * 2 ** 8 +
    last)
})

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUintLE =
Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    const maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  let mul = 1
  let i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUintBE =
Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    const maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  let i = byteLength - 1
  let mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUint8 =
Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUint16LE =
Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUint16BE =
Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUint32LE =
Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUint32BE =
Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function wrtBigUInt64LE (buf, value, offset, min, max) {
  checkIntBI(value, min, max, buf, offset, 7)

  let lo = Number(value & BigInt(0xffffffff))
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  lo = lo >> 8
  buf[offset++] = lo
  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  hi = hi >> 8
  buf[offset++] = hi
  return offset
}

function wrtBigUInt64BE (buf, value, offset, min, max) {
  checkIntBI(value, min, max, buf, offset, 7)

  let lo = Number(value & BigInt(0xffffffff))
  buf[offset + 7] = lo
  lo = lo >> 8
  buf[offset + 6] = lo
  lo = lo >> 8
  buf[offset + 5] = lo
  lo = lo >> 8
  buf[offset + 4] = lo
  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))
  buf[offset + 3] = hi
  hi = hi >> 8
  buf[offset + 2] = hi
  hi = hi >> 8
  buf[offset + 1] = hi
  hi = hi >> 8
  buf[offset] = hi
  return offset + 8
}

Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {
  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))
})

Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {
  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))
})

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    const limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  let i = 0
  let mul = 1
  let sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    const limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  let i = byteLength - 1
  let mul = 1
  let sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {
  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))
})

Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {
  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))
})

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  const len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      const code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If \`val\` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  } else if (typeof val === 'boolean') {
    val = Number(val)
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  let i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    const bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    const len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// CUSTOM ERRORS
// =============

// Simplified versions from Node, changed for Buffer-only usage
const errors = {}
function E (sym, getMessage, Base) {
  errors[sym] = class NodeError extends Base {
    constructor () {
      super()

      Object.defineProperty(this, 'message', {
        value: getMessage.apply(this, arguments),
        writable: true,
        configurable: true
      })

      // Add the error code to the name to include it in the stack trace.
      this.name = \`\${this.name} [\${sym}]\`
      // Access the stack to generate the error message including the error code
      // from the name.
      this.stack // eslint-disable-line no-unused-expressions
      // Reset the name to the actual name.
      delete this.name
    }

    get code () {
      return sym
    }

    set code (value) {
      Object.defineProperty(this, 'code', {
        configurable: true,
        enumerable: true,
        value,
        writable: true
      })
    }

    toString () {
      return \`\${this.name} [\${sym}]: \${this.message}\`
    }
  }
}

E('ERR_BUFFER_OUT_OF_BOUNDS',
  function (name) {
    if (name) {
      return \`\${name} is outside of buffer bounds\`
    }

    return 'Attempt to access memory outside buffer bounds'
  }, RangeError)
E('ERR_INVALID_ARG_TYPE',
  function (name, actual) {
    return \`The "\${name}" argument must be of type number. Received type \${typeof actual}\`
  }, TypeError)
E('ERR_OUT_OF_RANGE',
  function (str, range, input) {
    let msg = \`The value of "\${str}" is out of range.\`
    let received = input
    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
      received = addNumericalSeparator(String(input))
    } else if (typeof input === 'bigint') {
      received = String(input)
      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {
        received = addNumericalSeparator(received)
      }
      received += 'n'
    }
    msg += \` It must be \${range}. Received \${received}\`
    return msg
  }, RangeError)

function addNumericalSeparator (val) {
  let res = ''
  let i = val.length
  const start = val[0] === '-' ? 1 : 0
  for (; i >= start + 4; i -= 3) {
    res = \`_\${val.slice(i - 3, i)}\${res}\`
  }
  return \`\${val.slice(0, i)}\${res}\`
}

// CHECK FUNCTIONS
// ===============

function checkBounds (buf, offset, byteLength) {
  validateNumber(offset, 'offset')
  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {
    boundsError(offset, buf.length - (byteLength + 1))
  }
}

function checkIntBI (value, min, max, buf, offset, byteLength) {
  if (value > max || value < min) {
    const n = typeof min === 'bigint' ? 'n' : ''
    let range
    if (byteLength > 3) {
      if (min === 0 || min === BigInt(0)) {
        range = \`>= 0\${n} and < 2\${n} ** \${(byteLength + 1) * 8}\${n}\`
      } else {
        range = \`>= -(2\${n} ** \${(byteLength + 1) * 8 - 1}\${n}) and < 2 ** \` +
                \`\${(byteLength + 1) * 8 - 1}\${n}\`
      }
    } else {
      range = \`>= \${min}\${n} and <= \${max}\${n}\`
    }
    throw new errors.ERR_OUT_OF_RANGE('value', range, value)
  }
  checkBounds(buf, offset, byteLength)
}

function validateNumber (value, name) {
  if (typeof value !== 'number') {
    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)
  }
}

function boundsError (value, length, type) {
  if (Math.floor(value) !== value) {
    validateNumber(value, type)
    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)
  }

  if (length < 0) {
    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()
  }

  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',
                                    \`>= \${type ? 1 : 0} and <= \${length}\`,
                                    value)
}

// HELPER FUNCTIONS
// ================

const INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  let codePoint
  const length = string.length
  let leadSurrogate = null
  const bytes = []

  for (let i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  const byteArray = []
  for (let i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  let c, hi, lo
  const byteArray = []
  for (let i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  let i
  for (i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the \`instanceof\` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

// Create lookup table for \`toString('hex')\`
// See: https://github.com/feross/buffer/issues/219
const hexSliceLookupTable = (function () {
  const alphabet = '0123456789abcdef'
  const table = new Array(256)
  for (let i = 0; i < 16; ++i) {
    const i16 = i * 16
    for (let j = 0; j < 16; ++j) {
      table[i16 + j] = alphabet[i] + alphabet[j]
    }
  }
  return table
})()

// Return not function with Error if BigInt not supported
function defineBigIntMethod (fn) {
  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn
}

function BufferBigIntNotDefined () {
  throw new Error('BigInt not supported')
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/buffer/index.js?`)},"./node_modules/call-bind/callBound.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");

var callBind = __webpack_require__(/*! ./ */ "./node_modules/call-bind/index.js");

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/call-bind/callBound.js?`)},"./node_modules/call-bind/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");
var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");
var setFunctionLength = __webpack_require__(/*! set-function-length */ "./node_modules/set-function-length/index.js");

var $TypeError = __webpack_require__(/*! es-errors/type */ "./node_modules/es-errors/type.js");
var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $defineProperty = __webpack_require__(/*! es-define-property */ "./node_modules/es-define-property/index.js");
var $max = GetIntrinsic('%Math.max%');

module.exports = function callBind(originalFunction) {
	if (typeof originalFunction !== 'function') {
		throw new $TypeError('a function is required');
	}
	var func = $reflectApply(bind, $call, arguments);
	return setFunctionLength(
		func,
		1 + $max(0, originalFunction.length - (arguments.length - 1)),
		true
	);
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/call-bind/index.js?`)},"./node_modules/clone/clone.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
var clone = (function() {
'use strict';

function _instanceof(obj, type) {
  return type != null && obj instanceof type;
}

var nativeMap;
try {
  nativeMap = Map;
} catch(_) {
  // maybe a reference error because no \`Map\`. Give it a dummy value that no
  // value will ever be an instanceof.
  nativeMap = function() {};
}

var nativeSet;
try {
  nativeSet = Set;
} catch(_) {
  nativeSet = function() {};
}

var nativePromise;
try {
  nativePromise = Promise;
} catch(_) {
  nativePromise = function() {};
}

/**
 * Clones (copies) an Object using deep copying.
 *
 * This function supports circular references by default, but if you are certain
 * there are no circular references in your object, you can save some CPU time
 * by calling clone(obj, false).
 *
 * Caution: if \`circular\` is false and \`parent\` contains circular references,
 * your program may enter an infinite loop and crash.
 *
 * @param \`parent\` - the object to be cloned
 * @param \`circular\` - set to true if the object to be cloned may contain
 *    circular references. (optional - true by default)
 * @param \`depth\` - set to a number if the object is only to be cloned to
 *    a particular depth. (optional - defaults to Infinity)
 * @param \`prototype\` - sets the prototype to be used when cloning an object.
 *    (optional - defaults to parent prototype).
 * @param \`includeNonEnumerable\` - set to true if the non-enumerable properties
 *    should be cloned as well. Non-enumerable properties on the prototype
 *    chain will be ignored. (optional - false by default)
*/
function clone(parent, circular, depth, prototype, includeNonEnumerable) {
  if (typeof circular === 'object') {
    depth = circular.depth;
    prototype = circular.prototype;
    includeNonEnumerable = circular.includeNonEnumerable;
    circular = circular.circular;
  }
  // maintain two arrays for circular references, where corresponding parents
  // and children have the same index
  var allParents = [];
  var allChildren = [];

  var useBuffer = typeof Buffer != 'undefined';

  if (typeof circular == 'undefined')
    circular = true;

  if (typeof depth == 'undefined')
    depth = Infinity;

  // recurse this function so we don't reset allParents and allChildren
  function _clone(parent, depth) {
    // cloning null always returns null
    if (parent === null)
      return null;

    if (depth === 0)
      return parent;

    var child;
    var proto;
    if (typeof parent != 'object') {
      return parent;
    }

    if (_instanceof(parent, nativeMap)) {
      child = new nativeMap();
    } else if (_instanceof(parent, nativeSet)) {
      child = new nativeSet();
    } else if (_instanceof(parent, nativePromise)) {
      child = new nativePromise(function (resolve, reject) {
        parent.then(function(value) {
          resolve(_clone(value, depth - 1));
        }, function(err) {
          reject(_clone(err, depth - 1));
        });
      });
    } else if (clone.__isArray(parent)) {
      child = [];
    } else if (clone.__isRegExp(parent)) {
      child = new RegExp(parent.source, __getRegExpFlags(parent));
      if (parent.lastIndex) child.lastIndex = parent.lastIndex;
    } else if (clone.__isDate(parent)) {
      child = new Date(parent.getTime());
    } else if (useBuffer && Buffer.isBuffer(parent)) {
      if (Buffer.allocUnsafe) {
        // Node.js >= 4.5.0
        child = Buffer.allocUnsafe(parent.length);
      } else {
        // Older Node.js versions
        child = new Buffer(parent.length);
      }
      parent.copy(child);
      return child;
    } else if (_instanceof(parent, Error)) {
      child = Object.create(parent);
    } else {
      if (typeof prototype == 'undefined') {
        proto = Object.getPrototypeOf(parent);
        child = Object.create(proto);
      }
      else {
        child = Object.create(prototype);
        proto = prototype;
      }
    }

    if (circular) {
      var index = allParents.indexOf(parent);

      if (index != -1) {
        return allChildren[index];
      }
      allParents.push(parent);
      allChildren.push(child);
    }

    if (_instanceof(parent, nativeMap)) {
      parent.forEach(function(value, key) {
        var keyChild = _clone(key, depth - 1);
        var valueChild = _clone(value, depth - 1);
        child.set(keyChild, valueChild);
      });
    }
    if (_instanceof(parent, nativeSet)) {
      parent.forEach(function(value) {
        var entryChild = _clone(value, depth - 1);
        child.add(entryChild);
      });
    }

    for (var i in parent) {
      var attrs;
      if (proto) {
        attrs = Object.getOwnPropertyDescriptor(proto, i);
      }

      if (attrs && attrs.set == null) {
        continue;
      }
      child[i] = _clone(parent[i], depth - 1);
    }

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(parent);
      for (var i = 0; i < symbols.length; i++) {
        // Don't need to worry about cloning a symbol because it is a primitive,
        // like a number or string.
        var symbol = symbols[i];
        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);
        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
          continue;
        }
        child[symbol] = _clone(parent[symbol], depth - 1);
        if (!descriptor.enumerable) {
          Object.defineProperty(child, symbol, {
            enumerable: false
          });
        }
      }
    }

    if (includeNonEnumerable) {
      var allPropertyNames = Object.getOwnPropertyNames(parent);
      for (var i = 0; i < allPropertyNames.length; i++) {
        var propertyName = allPropertyNames[i];
        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);
        if (descriptor && descriptor.enumerable) {
          continue;
        }
        child[propertyName] = _clone(parent[propertyName], depth - 1);
        Object.defineProperty(child, propertyName, {
          enumerable: false
        });
      }
    }

    return child;
  }

  return _clone(parent, depth);
}

/**
 * Simple flat clone using prototype, accepts only objects, usefull for property
 * override on FLAT configuration object (no nested props).
 *
 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
 * works.
 */
clone.clonePrototype = function clonePrototype(parent) {
  if (parent === null)
    return null;

  var c = function () {};
  c.prototype = parent;
  return new c();
};

// private utility functions

function __objToStr(o) {
  return Object.prototype.toString.call(o);
}
clone.__objToStr = __objToStr;

function __isDate(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Date]';
}
clone.__isDate = __isDate;

function __isArray(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Array]';
}
clone.__isArray = __isArray;

function __isRegExp(o) {
  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';
}
clone.__isRegExp = __isRegExp;

function __getRegExpFlags(re) {
  var flags = '';
  if (re.global) flags += 'g';
  if (re.ignoreCase) flags += 'i';
  if (re.multiline) flags += 'm';
  return flags;
}
clone.__getRegExpFlags = __getRegExpFlags;

return clone;
})();

if ( true && module.exports) {
  module.exports = clone;
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/clone/clone.js?`)},"./node_modules/crypto-js/aes.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var BlockCipher = C_lib.BlockCipher;
	    var C_algo = C.algo;

	    // Lookup tables
	    var SBOX = [];
	    var INV_SBOX = [];
	    var SUB_MIX_0 = [];
	    var SUB_MIX_1 = [];
	    var SUB_MIX_2 = [];
	    var SUB_MIX_3 = [];
	    var INV_SUB_MIX_0 = [];
	    var INV_SUB_MIX_1 = [];
	    var INV_SUB_MIX_2 = [];
	    var INV_SUB_MIX_3 = [];

	    // Compute lookup tables
	    (function () {
	        // Compute double table
	        var d = [];
	        for (var i = 0; i < 256; i++) {
	            if (i < 128) {
	                d[i] = i << 1;
	            } else {
	                d[i] = (i << 1) ^ 0x11b;
	            }
	        }

	        // Walk GF(2^8)
	        var x = 0;
	        var xi = 0;
	        for (var i = 0; i < 256; i++) {
	            // Compute sbox
	            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);
	            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;
	            SBOX[x] = sx;
	            INV_SBOX[sx] = x;

	            // Compute multiplication
	            var x2 = d[x];
	            var x4 = d[x2];
	            var x8 = d[x4];

	            // Compute sub bytes, mix columns tables
	            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);
	            SUB_MIX_0[x] = (t << 24) | (t >>> 8);
	            SUB_MIX_1[x] = (t << 16) | (t >>> 16);
	            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);
	            SUB_MIX_3[x] = t;

	            // Compute inv sub bytes, inv mix columns tables
	            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);
	            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);
	            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);
	            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);
	            INV_SUB_MIX_3[sx] = t;

	            // Compute next counter
	            if (!x) {
	                x = xi = 1;
	            } else {
	                x = x2 ^ d[d[d[x8 ^ x2]]];
	                xi ^= d[d[xi]];
	            }
	        }
	    }());

	    // Precomputed Rcon lookup
	    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];

	    /**
	     * AES block cipher algorithm.
	     */
	    var AES = C_algo.AES = BlockCipher.extend({
	        _doReset: function () {
	            var t;

	            // Skip reset of nRounds has been set before and key did not change
	            if (this._nRounds && this._keyPriorReset === this._key) {
	                return;
	            }

	            // Shortcuts
	            var key = this._keyPriorReset = this._key;
	            var keyWords = key.words;
	            var keySize = key.sigBytes / 4;

	            // Compute number of rounds
	            var nRounds = this._nRounds = keySize + 6;

	            // Compute number of key schedule rows
	            var ksRows = (nRounds + 1) * 4;

	            // Compute key schedule
	            var keySchedule = this._keySchedule = [];
	            for (var ksRow = 0; ksRow < ksRows; ksRow++) {
	                if (ksRow < keySize) {
	                    keySchedule[ksRow] = keyWords[ksRow];
	                } else {
	                    t = keySchedule[ksRow - 1];

	                    if (!(ksRow % keySize)) {
	                        // Rot word
	                        t = (t << 8) | (t >>> 24);

	                        // Sub word
	                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];

	                        // Mix Rcon
	                        t ^= RCON[(ksRow / keySize) | 0] << 24;
	                    } else if (keySize > 6 && ksRow % keySize == 4) {
	                        // Sub word
	                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];
	                    }

	                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;
	                }
	            }

	            // Compute inv key schedule
	            var invKeySchedule = this._invKeySchedule = [];
	            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {
	                var ksRow = ksRows - invKsRow;

	                if (invKsRow % 4) {
	                    var t = keySchedule[ksRow];
	                } else {
	                    var t = keySchedule[ksRow - 4];
	                }

	                if (invKsRow < 4 || ksRow <= 4) {
	                    invKeySchedule[invKsRow] = t;
	                } else {
	                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^
	                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];
	                }
	            }
	        },

	        encryptBlock: function (M, offset) {
	            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);
	        },

	        decryptBlock: function (M, offset) {
	            // Swap 2nd and 4th rows
	            var t = M[offset + 1];
	            M[offset + 1] = M[offset + 3];
	            M[offset + 3] = t;

	            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);

	            // Inv swap 2nd and 4th rows
	            var t = M[offset + 1];
	            M[offset + 1] = M[offset + 3];
	            M[offset + 3] = t;
	        },

	        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {
	            // Shortcut
	            var nRounds = this._nRounds;

	            // Get input, add round key
	            var s0 = M[offset]     ^ keySchedule[0];
	            var s1 = M[offset + 1] ^ keySchedule[1];
	            var s2 = M[offset + 2] ^ keySchedule[2];
	            var s3 = M[offset + 3] ^ keySchedule[3];

	            // Key schedule row counter
	            var ksRow = 4;

	            // Rounds
	            for (var round = 1; round < nRounds; round++) {
	                // Shift rows, sub bytes, mix columns, add round key
	                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];
	                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];
	                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];
	                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];

	                // Update state
	                s0 = t0;
	                s1 = t1;
	                s2 = t2;
	                s3 = t3;
	            }

	            // Shift rows, sub bytes, add round key
	            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];
	            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];
	            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];
	            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];

	            // Set output
	            M[offset]     = t0;
	            M[offset + 1] = t1;
	            M[offset + 2] = t2;
	            M[offset + 3] = t3;
	        },

	        keySize: 256/32
	    });

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);
	     */
	    C.AES = BlockCipher._createHelper(AES);
	}());


	return CryptoJS.AES;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/aes.js?`)},"./node_modules/crypto-js/blowfish.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var BlockCipher = C_lib.BlockCipher;
	    var C_algo = C.algo;

	    const N = 16;

	    //Origin pbox and sbox, derived from PI
	    const ORIG_P = [
	        0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344,
	        0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89,
	        0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C,
	        0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917,
	        0x9216D5D9, 0x8979FB1B
	    ];

	    const ORIG_S = [
	        [   0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7,
	            0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99,
	            0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16,
	            0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E,
	            0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE,
	            0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013,
	            0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF,
	            0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E,
	            0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60,
	            0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440,
	            0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE,
	            0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A,
	            0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E,
	            0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677,
	            0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193,
	            0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032,
	            0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88,
	            0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239,
	            0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E,
	            0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0,
	            0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3,
	            0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98,
	            0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88,
	            0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE,
	            0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6,
	            0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D,
	            0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B,
	            0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7,
	            0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA,
	            0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463,
	            0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F,
	            0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09,
	            0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3,
	            0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB,
	            0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279,
	            0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8,
	            0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB,
	            0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82,
	            0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB,
	            0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573,
	            0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0,
	            0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B,
	            0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790,
	            0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8,
	            0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4,
	            0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0,
	            0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7,
	            0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C,
	            0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD,
	            0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1,
	            0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299,
	            0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9,
	            0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477,
	            0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF,
	            0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49,
	            0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF,
	            0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA,
	            0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5,
	            0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41,
	            0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915,
	            0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400,
	            0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915,
	            0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664,
	            0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A   ],
	        [   0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623,
	            0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266,
	            0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1,
	            0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E,
	            0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6,
	            0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1,
	            0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E,
	            0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1,
	            0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737,
	            0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8,
	            0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF,
	            0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD,
	            0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701,
	            0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7,
	            0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41,
	            0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331,
	            0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF,
	            0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF,
	            0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E,
	            0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87,
	            0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C,
	            0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2,
	            0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16,
	            0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD,
	            0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B,
	            0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509,
	            0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E,
	            0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3,
	            0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F,
	            0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A,
	            0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4,
	            0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960,
	            0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66,
	            0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28,
	            0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802,
	            0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84,
	            0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510,
	            0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF,
	            0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14,
	            0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E,
	            0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50,
	            0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7,
	            0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8,
	            0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281,
	            0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99,
	            0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696,
	            0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128,
	            0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73,
	            0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0,
	            0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0,
	            0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105,
	            0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250,
	            0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3,
	            0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285,
	            0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00,
	            0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061,
	            0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB,
	            0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E,
	            0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735,
	            0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC,
	            0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9,
	            0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340,
	            0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20,
	            0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7   ],
	        [   0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934,
	            0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068,
	            0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF,
	            0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840,
	            0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45,
	            0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504,
	            0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A,
	            0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB,
	            0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE,
	            0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6,
	            0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42,
	            0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B,
	            0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2,
	            0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB,
	            0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527,
	            0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B,
	            0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33,
	            0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C,
	            0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3,
	            0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC,
	            0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17,
	            0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564,
	            0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B,
	            0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115,
	            0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922,
	            0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728,
	            0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0,
	            0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E,
	            0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37,
	            0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D,
	            0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804,
	            0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B,
	            0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3,
	            0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB,
	            0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D,
	            0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C,
	            0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350,
	            0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9,
	            0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A,
	            0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE,
	            0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D,
	            0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC,
	            0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F,
	            0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61,
	            0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2,
	            0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9,
	            0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2,
	            0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C,
	            0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E,
	            0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633,
	            0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10,
	            0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169,
	            0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52,
	            0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027,
	            0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5,
	            0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62,
	            0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634,
	            0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76,
	            0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24,
	            0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC,
	            0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4,
	            0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C,
	            0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837,
	            0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0  ],
	        [   0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B,
	            0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE,
	            0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B,
	            0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4,
	            0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8,
	            0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6,
	            0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304,
	            0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22,
	            0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4,
	            0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6,
	            0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9,
	            0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59,
	            0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593,
	            0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51,
	            0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28,
	            0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C,
	            0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B,
	            0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28,
	            0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C,
	            0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD,
	            0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A,
	            0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319,
	            0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB,
	            0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F,
	            0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991,
	            0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32,
	            0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680,
	            0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166,
	            0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE,
	            0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB,
	            0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5,
	            0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47,
	            0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370,
	            0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D,
	            0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84,
	            0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048,
	            0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8,
	            0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD,
	            0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9,
	            0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7,
	            0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38,
	            0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F,
	            0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C,
	            0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525,
	            0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1,
	            0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442,
	            0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964,
	            0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E,
	            0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8,
	            0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D,
	            0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F,
	            0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299,
	            0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02,
	            0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC,
	            0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614,
	            0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A,
	            0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6,
	            0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B,
	            0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0,
	            0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060,
	            0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E,
	            0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9,
	            0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F,
	            0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6  ]
	    ];

	    var BLOWFISH_CTX = {
	        pbox: [],
	        sbox: []
	    }

	    function F(ctx, x){
	        let a = (x >> 24) & 0xFF;
	        let b = (x >> 16) & 0xFF;
	        let c = (x >> 8) & 0xFF;
	        let d = x & 0xFF;

	        let y = ctx.sbox[0][a] + ctx.sbox[1][b];
	        y = y ^ ctx.sbox[2][c];
	        y = y + ctx.sbox[3][d];

	        return y;
	    }

	    function BlowFish_Encrypt(ctx, left, right){
	        let Xl = left;
	        let Xr = right;
	        let temp;

	        for(let i = 0; i < N; ++i){
	            Xl = Xl ^ ctx.pbox[i];
	            Xr = F(ctx, Xl) ^ Xr;

	            temp = Xl;
	            Xl = Xr;
	            Xr = temp;
	        }

	        temp = Xl;
	        Xl = Xr;
	        Xr = temp;

	        Xr = Xr ^ ctx.pbox[N];
	        Xl = Xl ^ ctx.pbox[N + 1];

	        return {left: Xl, right: Xr};
	    }

	    function BlowFish_Decrypt(ctx, left, right){
	        let Xl = left;
	        let Xr = right;
	        let temp;

	        for(let i = N + 1; i > 1; --i){
	            Xl = Xl ^ ctx.pbox[i];
	            Xr = F(ctx, Xl) ^ Xr;

	            temp = Xl;
	            Xl = Xr;
	            Xr = temp;
	        }

	        temp = Xl;
	        Xl = Xr;
	        Xr = temp;

	        Xr = Xr ^ ctx.pbox[1];
	        Xl = Xl ^ ctx.pbox[0];

	        return {left: Xl, right: Xr};
	    }

	    /**
	     * Initialization ctx's pbox and sbox.
	     *
	     * @param {Object} ctx The object has pbox and sbox.
	     * @param {Array} key An array of 32-bit words.
	     * @param {int} keysize The length of the key.
	     *
	     * @example
	     *
	     *     BlowFishInit(BLOWFISH_CTX, key, 128/32);
	     */
	    function BlowFishInit(ctx, key, keysize)
	    {
	        for(let Row = 0; Row < 4; Row++)
	        {
	            ctx.sbox[Row] = [];
	            for(let Col = 0; Col < 256; Col++)
	            {
	                ctx.sbox[Row][Col] = ORIG_S[Row][Col];
	            }
	        }

	        let keyIndex = 0;
	        for(let index = 0; index < N + 2; index++)
	        {
	            ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];
	            keyIndex++;
	            if(keyIndex >= keysize)
	            {
	                keyIndex = 0;
	            }
	        }

	        let Data1 = 0;
	        let Data2 = 0;
	        let res = 0;
	        for(let i = 0; i < N + 2; i += 2)
	        {
	            res = BlowFish_Encrypt(ctx, Data1, Data2);
	            Data1 = res.left;
	            Data2 = res.right;
	            ctx.pbox[i] = Data1;
	            ctx.pbox[i + 1] = Data2;
	        }

	        for(let i = 0; i < 4; i++)
	        {
	            for(let j = 0; j < 256; j += 2)
	            {
	                res = BlowFish_Encrypt(ctx, Data1, Data2);
	                Data1 = res.left;
	                Data2 = res.right;
	                ctx.sbox[i][j] = Data1;
	                ctx.sbox[i][j + 1] = Data2;
	            }
	        }

	        return true;
	    }

	    /**
	     * Blowfish block cipher algorithm.
	     */
	    var Blowfish = C_algo.Blowfish = BlockCipher.extend({
	        _doReset: function () {
	            // Skip reset of nRounds has been set before and key did not change
	            if (this._keyPriorReset === this._key) {
	                return;
	            }

	            // Shortcuts
	            var key = this._keyPriorReset = this._key;
	            var keyWords = key.words;
	            var keySize = key.sigBytes / 4;

	            //Initialization pbox and sbox
	            BlowFishInit(BLOWFISH_CTX, keyWords, keySize);
	        },

	        encryptBlock: function (M, offset) {
	            var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);
	            M[offset] = res.left;
	            M[offset + 1] = res.right;
	        },

	        decryptBlock: function (M, offset) {
	            var res = BlowFish_Decrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);
	            M[offset] = res.left;
	            M[offset + 1] = res.right;
	        },

	        blockSize: 64/32,

	        keySize: 128/32,

	        ivSize: 64/32
	    });

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);
	     */
	    C.Blowfish = BlockCipher._createHelper(Blowfish);
	}());


	return CryptoJS.Blowfish;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/blowfish.js?`)},"./node_modules/crypto-js/cipher-core.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * Cipher core components.
	 */
	CryptoJS.lib.Cipher || (function (undefined) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var WordArray = C_lib.WordArray;
	    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;
	    var C_enc = C.enc;
	    var Utf8 = C_enc.Utf8;
	    var Base64 = C_enc.Base64;
	    var C_algo = C.algo;
	    var EvpKDF = C_algo.EvpKDF;

	    /**
	     * Abstract base cipher template.
	     *
	     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)
	     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)
	     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.
	     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.
	     */
	    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {WordArray} iv The IV to use for this operation.
	         */
	        cfg: Base.extend(),

	        /**
	         * Creates this cipher in encryption mode.
	         *
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {Cipher} A cipher instance.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
	         */
	        createEncryptor: function (key, cfg) {
	            return this.create(this._ENC_XFORM_MODE, key, cfg);
	        },

	        /**
	         * Creates this cipher in decryption mode.
	         *
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {Cipher} A cipher instance.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
	         */
	        createDecryptor: function (key, cfg) {
	            return this.create(this._DEC_XFORM_MODE, key, cfg);
	        },

	        /**
	         * Initializes a newly created cipher.
	         *
	         * @param {number} xformMode Either the encryption or decryption transormation mode constant.
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @example
	         *
	         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
	         */
	        init: function (xformMode, key, cfg) {
	            // Apply config defaults
	            this.cfg = this.cfg.extend(cfg);

	            // Store transform mode and key
	            this._xformMode = xformMode;
	            this._key = key;

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this cipher to its initial state.
	         *
	         * @example
	         *
	         *     cipher.reset();
	         */
	        reset: function () {
	            // Reset data buffer
	            BufferedBlockAlgorithm.reset.call(this);

	            // Perform concrete-cipher logic
	            this._doReset();
	        },

	        /**
	         * Adds data to be encrypted or decrypted.
	         *
	         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
	         *
	         * @return {WordArray} The data after processing.
	         *
	         * @example
	         *
	         *     var encrypted = cipher.process('data');
	         *     var encrypted = cipher.process(wordArray);
	         */
	        process: function (dataUpdate) {
	            // Append
	            this._append(dataUpdate);

	            // Process available blocks
	            return this._process();
	        },

	        /**
	         * Finalizes the encryption or decryption process.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
	         *
	         * @return {WordArray} The data after final processing.
	         *
	         * @example
	         *
	         *     var encrypted = cipher.finalize();
	         *     var encrypted = cipher.finalize('data');
	         *     var encrypted = cipher.finalize(wordArray);
	         */
	        finalize: function (dataUpdate) {
	            // Final data update
	            if (dataUpdate) {
	                this._append(dataUpdate);
	            }

	            // Perform concrete-cipher logic
	            var finalProcessedData = this._doFinalize();

	            return finalProcessedData;
	        },

	        keySize: 128/32,

	        ivSize: 128/32,

	        _ENC_XFORM_MODE: 1,

	        _DEC_XFORM_MODE: 2,

	        /**
	         * Creates shortcut functions to a cipher's object interface.
	         *
	         * @param {Cipher} cipher The cipher to create a helper for.
	         *
	         * @return {Object} An object with encrypt and decrypt shortcut functions.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
	         */
	        _createHelper: (function () {
	            function selectCipherStrategy(key) {
	                if (typeof key == 'string') {
	                    return PasswordBasedCipher;
	                } else {
	                    return SerializableCipher;
	                }
	            }

	            return function (cipher) {
	                return {
	                    encrypt: function (message, key, cfg) {
	                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);
	                    },

	                    decrypt: function (ciphertext, key, cfg) {
	                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);
	                    }
	                };
	            };
	        }())
	    });

	    /**
	     * Abstract base stream cipher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)
	     */
	    var StreamCipher = C_lib.StreamCipher = Cipher.extend({
	        _doFinalize: function () {
	            // Process partial blocks
	            var finalProcessedBlocks = this._process(!!'flush');

	            return finalProcessedBlocks;
	        },

	        blockSize: 1
	    });

	    /**
	     * Mode namespace.
	     */
	    var C_mode = C.mode = {};

	    /**
	     * Abstract base block cipher mode template.
	     */
	    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({
	        /**
	         * Creates this mode for encryption.
	         *
	         * @param {Cipher} cipher A block cipher instance.
	         * @param {Array} iv The IV words.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
	         */
	        createEncryptor: function (cipher, iv) {
	            return this.Encryptor.create(cipher, iv);
	        },

	        /**
	         * Creates this mode for decryption.
	         *
	         * @param {Cipher} cipher A block cipher instance.
	         * @param {Array} iv The IV words.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
	         */
	        createDecryptor: function (cipher, iv) {
	            return this.Decryptor.create(cipher, iv);
	        },

	        /**
	         * Initializes a newly created mode.
	         *
	         * @param {Cipher} cipher A block cipher instance.
	         * @param {Array} iv The IV words.
	         *
	         * @example
	         *
	         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
	         */
	        init: function (cipher, iv) {
	            this._cipher = cipher;
	            this._iv = iv;
	        }
	    });

	    /**
	     * Cipher Block Chaining mode.
	     */
	    var CBC = C_mode.CBC = (function () {
	        /**
	         * Abstract base CBC mode.
	         */
	        var CBC = BlockCipherMode.extend();

	        /**
	         * CBC encryptor.
	         */
	        CBC.Encryptor = CBC.extend({
	            /**
	             * Processes the data block at offset.
	             *
	             * @param {Array} words The data words to operate on.
	             * @param {number} offset The offset where the block starts.
	             *
	             * @example
	             *
	             *     mode.processBlock(data.words, offset);
	             */
	            processBlock: function (words, offset) {
	                // Shortcuts
	                var cipher = this._cipher;
	                var blockSize = cipher.blockSize;

	                // XOR and encrypt
	                xorBlock.call(this, words, offset, blockSize);
	                cipher.encryptBlock(words, offset);

	                // Remember this block to use with next block
	                this._prevBlock = words.slice(offset, offset + blockSize);
	            }
	        });

	        /**
	         * CBC decryptor.
	         */
	        CBC.Decryptor = CBC.extend({
	            /**
	             * Processes the data block at offset.
	             *
	             * @param {Array} words The data words to operate on.
	             * @param {number} offset The offset where the block starts.
	             *
	             * @example
	             *
	             *     mode.processBlock(data.words, offset);
	             */
	            processBlock: function (words, offset) {
	                // Shortcuts
	                var cipher = this._cipher;
	                var blockSize = cipher.blockSize;

	                // Remember this block to use with next block
	                var thisBlock = words.slice(offset, offset + blockSize);

	                // Decrypt and XOR
	                cipher.decryptBlock(words, offset);
	                xorBlock.call(this, words, offset, blockSize);

	                // This block becomes the previous block
	                this._prevBlock = thisBlock;
	            }
	        });

	        function xorBlock(words, offset, blockSize) {
	            var block;

	            // Shortcut
	            var iv = this._iv;

	            // Choose mixing block
	            if (iv) {
	                block = iv;

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            } else {
	                block = this._prevBlock;
	            }

	            // XOR blocks
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= block[i];
	            }
	        }

	        return CBC;
	    }());

	    /**
	     * Padding namespace.
	     */
	    var C_pad = C.pad = {};

	    /**
	     * PKCS #5/7 padding strategy.
	     */
	    var Pkcs7 = C_pad.Pkcs7 = {
	        /**
	         * Pads data using the algorithm defined in PKCS #5/7.
	         *
	         * @param {WordArray} data The data to pad.
	         * @param {number} blockSize The multiple that the data should be padded to.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
	         */
	        pad: function (data, blockSize) {
	            // Shortcut
	            var blockSizeBytes = blockSize * 4;

	            // Count padding bytes
	            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

	            // Create padding word
	            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;

	            // Create padding
	            var paddingWords = [];
	            for (var i = 0; i < nPaddingBytes; i += 4) {
	                paddingWords.push(paddingWord);
	            }
	            var padding = WordArray.create(paddingWords, nPaddingBytes);

	            // Add padding
	            data.concat(padding);
	        },

	        /**
	         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
	         *
	         * @param {WordArray} data The data to unpad.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     CryptoJS.pad.Pkcs7.unpad(wordArray);
	         */
	        unpad: function (data) {
	            // Get number of padding bytes from last byte
	            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

	            // Remove padding
	            data.sigBytes -= nPaddingBytes;
	        }
	    };

	    /**
	     * Abstract base block cipher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)
	     */
	    var BlockCipher = C_lib.BlockCipher = Cipher.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {Mode} mode The block mode to use. Default: CBC
	         * @property {Padding} padding The padding strategy to use. Default: Pkcs7
	         */
	        cfg: Cipher.cfg.extend({
	            mode: CBC,
	            padding: Pkcs7
	        }),

	        reset: function () {
	            var modeCreator;

	            // Reset cipher
	            Cipher.reset.call(this);

	            // Shortcuts
	            var cfg = this.cfg;
	            var iv = cfg.iv;
	            var mode = cfg.mode;

	            // Reset block mode
	            if (this._xformMode == this._ENC_XFORM_MODE) {
	                modeCreator = mode.createEncryptor;
	            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {
	                modeCreator = mode.createDecryptor;
	                // Keep at least one block in the buffer for unpadding
	                this._minBufferSize = 1;
	            }

	            if (this._mode && this._mode.__creator == modeCreator) {
	                this._mode.init(this, iv && iv.words);
	            } else {
	                this._mode = modeCreator.call(mode, this, iv && iv.words);
	                this._mode.__creator = modeCreator;
	            }
	        },

	        _doProcessBlock: function (words, offset) {
	            this._mode.processBlock(words, offset);
	        },

	        _doFinalize: function () {
	            var finalProcessedBlocks;

	            // Shortcut
	            var padding = this.cfg.padding;

	            // Finalize
	            if (this._xformMode == this._ENC_XFORM_MODE) {
	                // Pad data
	                padding.pad(this._data, this.blockSize);

	                // Process final blocks
	                finalProcessedBlocks = this._process(!!'flush');
	            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {
	                // Process final blocks
	                finalProcessedBlocks = this._process(!!'flush');

	                // Unpad data
	                padding.unpad(finalProcessedBlocks);
	            }

	            return finalProcessedBlocks;
	        },

	        blockSize: 128/32
	    });

	    /**
	     * A collection of cipher parameters.
	     *
	     * @property {WordArray} ciphertext The raw ciphertext.
	     * @property {WordArray} key The key to this ciphertext.
	     * @property {WordArray} iv The IV used in the ciphering operation.
	     * @property {WordArray} salt The salt used with a key derivation function.
	     * @property {Cipher} algorithm The cipher algorithm.
	     * @property {Mode} mode The block mode used in the ciphering operation.
	     * @property {Padding} padding The padding scheme used in the ciphering operation.
	     * @property {number} blockSize The block size of the cipher.
	     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.
	     */
	    var CipherParams = C_lib.CipherParams = Base.extend({
	        /**
	         * Initializes a newly created cipher params object.
	         *
	         * @param {Object} cipherParams An object with any of the possible cipher parameters.
	         *
	         * @example
	         *
	         *     var cipherParams = CryptoJS.lib.CipherParams.create({
	         *         ciphertext: ciphertextWordArray,
	         *         key: keyWordArray,
	         *         iv: ivWordArray,
	         *         salt: saltWordArray,
	         *         algorithm: CryptoJS.algo.AES,
	         *         mode: CryptoJS.mode.CBC,
	         *         padding: CryptoJS.pad.PKCS7,
	         *         blockSize: 4,
	         *         formatter: CryptoJS.format.OpenSSL
	         *     });
	         */
	        init: function (cipherParams) {
	            this.mixIn(cipherParams);
	        },

	        /**
	         * Converts this cipher params object to a string.
	         *
	         * @param {Format} formatter (Optional) The formatting strategy to use.
	         *
	         * @return {string} The stringified cipher params.
	         *
	         * @throws Error If neither the formatter nor the default formatter is set.
	         *
	         * @example
	         *
	         *     var string = cipherParams + '';
	         *     var string = cipherParams.toString();
	         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
	         */
	        toString: function (formatter) {
	            return (formatter || this.formatter).stringify(this);
	        }
	    });

	    /**
	     * Format namespace.
	     */
	    var C_format = C.format = {};

	    /**
	     * OpenSSL formatting strategy.
	     */
	    var OpenSSLFormatter = C_format.OpenSSL = {
	        /**
	         * Converts a cipher params object to an OpenSSL-compatible string.
	         *
	         * @param {CipherParams} cipherParams The cipher params object.
	         *
	         * @return {string} The OpenSSL-compatible string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
	         */
	        stringify: function (cipherParams) {
	            var wordArray;

	            // Shortcuts
	            var ciphertext = cipherParams.ciphertext;
	            var salt = cipherParams.salt;

	            // Format
	            if (salt) {
	                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);
	            } else {
	                wordArray = ciphertext;
	            }

	            return wordArray.toString(Base64);
	        },

	        /**
	         * Converts an OpenSSL-compatible string to a cipher params object.
	         *
	         * @param {string} openSSLStr The OpenSSL-compatible string.
	         *
	         * @return {CipherParams} The cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
	         */
	        parse: function (openSSLStr) {
	            var salt;

	            // Parse base64
	            var ciphertext = Base64.parse(openSSLStr);

	            // Shortcut
	            var ciphertextWords = ciphertext.words;

	            // Test for salt
	            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {
	                // Extract salt
	                salt = WordArray.create(ciphertextWords.slice(2, 4));

	                // Remove salt from ciphertext
	                ciphertextWords.splice(0, 4);
	                ciphertext.sigBytes -= 16;
	            }

	            return CipherParams.create({ ciphertext: ciphertext, salt: salt });
	        }
	    };

	    /**
	     * A cipher wrapper that returns ciphertext as a serializable cipher params object.
	     */
	    var SerializableCipher = C_lib.SerializableCipher = Base.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
	         */
	        cfg: Base.extend({
	            format: OpenSSLFormatter
	        }),

	        /**
	         * Encrypts a message.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {WordArray|string} message The message to encrypt.
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {CipherParams} A cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
	         */
	        encrypt: function (cipher, message, key, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Encrypt
	            var encryptor = cipher.createEncryptor(key, cfg);
	            var ciphertext = encryptor.finalize(message);

	            // Shortcut
	            var cipherCfg = encryptor.cfg;

	            // Create and return serializable cipher params
	            return CipherParams.create({
	                ciphertext: ciphertext,
	                key: key,
	                iv: cipherCfg.iv,
	                algorithm: cipher,
	                mode: cipherCfg.mode,
	                padding: cipherCfg.padding,
	                blockSize: cipher.blockSize,
	                formatter: cfg.format
	            });
	        },

	        /**
	         * Decrypts serialized ciphertext.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {WordArray} The plaintext.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
	         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
	         */
	        decrypt: function (cipher, ciphertext, key, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Convert string to CipherParams
	            ciphertext = this._parse(ciphertext, cfg.format);

	            // Decrypt
	            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);

	            return plaintext;
	        },

	        /**
	         * Converts serialized ciphertext to CipherParams,
	         * else assumed CipherParams already and returns ciphertext unchanged.
	         *
	         * @param {CipherParams|string} ciphertext The ciphertext.
	         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
	         *
	         * @return {CipherParams} The unserialized ciphertext.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
	         */
	        _parse: function (ciphertext, format) {
	            if (typeof ciphertext == 'string') {
	                return format.parse(ciphertext, this);
	            } else {
	                return ciphertext;
	            }
	        }
	    });

	    /**
	     * Key derivation function namespace.
	     */
	    var C_kdf = C.kdf = {};

	    /**
	     * OpenSSL key derivation function.
	     */
	    var OpenSSLKdf = C_kdf.OpenSSL = {
	        /**
	         * Derives a key and IV from a password.
	         *
	         * @param {string} password The password to derive from.
	         * @param {number} keySize The size in words of the key to generate.
	         * @param {number} ivSize The size in words of the IV to generate.
	         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
	         *
	         * @return {CipherParams} A cipher params object with the key, IV, and salt.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
	         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
	         */
	        execute: function (password, keySize, ivSize, salt, hasher) {
	            // Generate random salt
	            if (!salt) {
	                salt = WordArray.random(64/8);
	            }

	            // Derive key and IV
	            if (!hasher) {
	                var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);
	            } else {
	                var key = EvpKDF.create({ keySize: keySize + ivSize, hasher: hasher }).compute(password, salt);
	            }


	            // Separate key and IV
	            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);
	            key.sigBytes = keySize * 4;

	            // Return params
	            return CipherParams.create({ key: key, iv: iv, salt: salt });
	        }
	    };

	    /**
	     * A serializable cipher wrapper that derives the key from a password,
	     * and returns ciphertext as a serializable cipher params object.
	     */
	    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
	         */
	        cfg: SerializableCipher.cfg.extend({
	            kdf: OpenSSLKdf
	        }),

	        /**
	         * Encrypts a message using a password.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {WordArray|string} message The message to encrypt.
	         * @param {string} password The password.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {CipherParams} A cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
	         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
	         */
	        encrypt: function (cipher, message, password, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Derive key and other params
	            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, cfg.salt, cfg.hasher);

	            // Add IV to config
	            cfg.iv = derivedParams.iv;

	            // Encrypt
	            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);

	            // Mix in derived params
	            ciphertext.mixIn(derivedParams);

	            return ciphertext;
	        },

	        /**
	         * Decrypts serialized ciphertext using a password.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
	         * @param {string} password The password.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {WordArray} The plaintext.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
	         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
	         */
	        decrypt: function (cipher, ciphertext, password, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Convert string to CipherParams
	            ciphertext = this._parse(ciphertext, cfg.format);

	            // Derive key and other params
	            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt, cfg.hasher);

	            // Add IV to config
	            cfg.iv = derivedParams.iv;

	            // Decrypt
	            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);

	            return plaintext;
	        }
	    });
	}());


}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/cipher-core.js?`)},"./node_modules/crypto-js/core.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory();
	}
	else {}
}(this, function () {

	/*globals window, global, require*/

	/**
	 * CryptoJS core components.
	 */
	var CryptoJS = CryptoJS || (function (Math, undefined) {

	    var crypto;

	    // Native crypto from window (Browser)
	    if (typeof window !== 'undefined' && window.crypto) {
	        crypto = window.crypto;
	    }

	    // Native crypto in web worker (Browser)
	    if (typeof self !== 'undefined' && self.crypto) {
	        crypto = self.crypto;
	    }

	    // Native crypto from worker
	    if (typeof globalThis !== 'undefined' && globalThis.crypto) {
	        crypto = globalThis.crypto;
	    }

	    // Native (experimental IE 11) crypto from window (Browser)
	    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {
	        crypto = window.msCrypto;
	    }

	    // Native crypto from global (NodeJS)
	    if (!crypto && typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.crypto) {
	        crypto = __webpack_require__.g.crypto;
	    }

	    // Native crypto import via require (NodeJS)
	    if (!crypto && "function" === 'function') {
	        try {
	            crypto = __webpack_require__(/*! crypto */ "?9157");
	        } catch (err) {}
	    }

	    /*
	     * Cryptographically secure pseudorandom number generator
	     *
	     * As Math.random() is cryptographically not safe to use
	     */
	    var cryptoSecureRandomInt = function () {
	        if (crypto) {
	            // Use getRandomValues method (Browser)
	            if (typeof crypto.getRandomValues === 'function') {
	                try {
	                    return crypto.getRandomValues(new Uint32Array(1))[0];
	                } catch (err) {}
	            }

	            // Use randomBytes method (NodeJS)
	            if (typeof crypto.randomBytes === 'function') {
	                try {
	                    return crypto.randomBytes(4).readInt32LE();
	                } catch (err) {}
	            }
	        }

	        throw new Error('Native crypto module could not be used to get secure random number.');
	    };

	    /*
	     * Local polyfill of Object.create

	     */
	    var create = Object.create || (function () {
	        function F() {}

	        return function (obj) {
	            var subtype;

	            F.prototype = obj;

	            subtype = new F();

	            F.prototype = null;

	            return subtype;
	        };
	    }());

	    /**
	     * CryptoJS namespace.
	     */
	    var C = {};

	    /**
	     * Library namespace.
	     */
	    var C_lib = C.lib = {};

	    /**
	     * Base object for prototypal inheritance.
	     */
	    var Base = C_lib.Base = (function () {


	        return {
	            /**
	             * Creates a new object that inherits from this object.
	             *
	             * @param {Object} overrides Properties to copy into the new object.
	             *
	             * @return {Object} The new object.
	             *
	             * @static
	             *
	             * @example
	             *
	             *     var MyType = CryptoJS.lib.Base.extend({
	             *         field: 'value',
	             *
	             *         method: function () {
	             *         }
	             *     });
	             */
	            extend: function (overrides) {
	                // Spawn
	                var subtype = create(this);

	                // Augment
	                if (overrides) {
	                    subtype.mixIn(overrides);
	                }

	                // Create default initializer
	                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
	                    subtype.init = function () {
	                        subtype.$super.init.apply(this, arguments);
	                    };
	                }

	                // Initializer's prototype is the subtype object
	                subtype.init.prototype = subtype;

	                // Reference supertype
	                subtype.$super = this;

	                return subtype;
	            },

	            /**
	             * Extends this object and runs the init method.
	             * Arguments to create() will be passed to init().
	             *
	             * @return {Object} The new object.
	             *
	             * @static
	             *
	             * @example
	             *
	             *     var instance = MyType.create();
	             */
	            create: function () {
	                var instance = this.extend();
	                instance.init.apply(instance, arguments);

	                return instance;
	            },

	            /**
	             * Initializes a newly created object.
	             * Override this method to add some logic when your objects are created.
	             *
	             * @example
	             *
	             *     var MyType = CryptoJS.lib.Base.extend({
	             *         init: function () {
	             *             // ...
	             *         }
	             *     });
	             */
	            init: function () {
	            },

	            /**
	             * Copies properties into this object.
	             *
	             * @param {Object} properties The properties to mix in.
	             *
	             * @example
	             *
	             *     MyType.mixIn({
	             *         field: 'value'
	             *     });
	             */
	            mixIn: function (properties) {
	                for (var propertyName in properties) {
	                    if (properties.hasOwnProperty(propertyName)) {
	                        this[propertyName] = properties[propertyName];
	                    }
	                }

	                // IE won't copy toString using the loop above
	                if (properties.hasOwnProperty('toString')) {
	                    this.toString = properties.toString;
	                }
	            },

	            /**
	             * Creates a copy of this object.
	             *
	             * @return {Object} The clone.
	             *
	             * @example
	             *
	             *     var clone = instance.clone();
	             */
	            clone: function () {
	                return this.init.prototype.extend(this);
	            }
	        };
	    }());

	    /**
	     * An array of 32-bit words.
	     *
	     * @property {Array} words The array of 32-bit words.
	     * @property {number} sigBytes The number of significant bytes in this word array.
	     */
	    var WordArray = C_lib.WordArray = Base.extend({
	        /**
	         * Initializes a newly created word array.
	         *
	         * @param {Array} words (Optional) An array of 32-bit words.
	         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.lib.WordArray.create();
	         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
	         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
	         */
	        init: function (words, sigBytes) {
	            words = this.words = words || [];

	            if (sigBytes != undefined) {
	                this.sigBytes = sigBytes;
	            } else {
	                this.sigBytes = words.length * 4;
	            }
	        },

	        /**
	         * Converts this word array to a string.
	         *
	         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
	         *
	         * @return {string} The stringified word array.
	         *
	         * @example
	         *
	         *     var string = wordArray + '';
	         *     var string = wordArray.toString();
	         *     var string = wordArray.toString(CryptoJS.enc.Utf8);
	         */
	        toString: function (encoder) {
	            return (encoder || Hex).stringify(this);
	        },

	        /**
	         * Concatenates a word array to this word array.
	         *
	         * @param {WordArray} wordArray The word array to append.
	         *
	         * @return {WordArray} This word array.
	         *
	         * @example
	         *
	         *     wordArray1.concat(wordArray2);
	         */
	        concat: function (wordArray) {
	            // Shortcuts
	            var thisWords = this.words;
	            var thatWords = wordArray.words;
	            var thisSigBytes = this.sigBytes;
	            var thatSigBytes = wordArray.sigBytes;

	            // Clamp excess bits
	            this.clamp();

	            // Concat
	            if (thisSigBytes % 4) {
	                // Copy one byte at a time
	                for (var i = 0; i < thatSigBytes; i++) {
	                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);
	                }
	            } else {
	                // Copy one word at a time
	                for (var j = 0; j < thatSigBytes; j += 4) {
	                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];
	                }
	            }
	            this.sigBytes += thatSigBytes;

	            // Chainable
	            return this;
	        },

	        /**
	         * Removes insignificant bits.
	         *
	         * @example
	         *
	         *     wordArray.clamp();
	         */
	        clamp: function () {
	            // Shortcuts
	            var words = this.words;
	            var sigBytes = this.sigBytes;

	            // Clamp
	            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);
	            words.length = Math.ceil(sigBytes / 4);
	        },

	        /**
	         * Creates a copy of this word array.
	         *
	         * @return {WordArray} The clone.
	         *
	         * @example
	         *
	         *     var clone = wordArray.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);
	            clone.words = this.words.slice(0);

	            return clone;
	        },

	        /**
	         * Creates a word array filled with random bytes.
	         *
	         * @param {number} nBytes The number of random bytes to generate.
	         *
	         * @return {WordArray} The random word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.lib.WordArray.random(16);
	         */
	        random: function (nBytes) {
	            var words = [];

	            for (var i = 0; i < nBytes; i += 4) {
	                words.push(cryptoSecureRandomInt());
	            }

	            return new WordArray.init(words, nBytes);
	        }
	    });

	    /**
	     * Encoder namespace.
	     */
	    var C_enc = C.enc = {};

	    /**
	     * Hex encoding strategy.
	     */
	    var Hex = C_enc.Hex = {
	        /**
	         * Converts a word array to a hex string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The hex string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var hexChars = [];
	            for (var i = 0; i < sigBytes; i++) {
	                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                hexChars.push((bite >>> 4).toString(16));
	                hexChars.push((bite & 0x0f).toString(16));
	            }

	            return hexChars.join('');
	        },

	        /**
	         * Converts a hex string to a word array.
	         *
	         * @param {string} hexStr The hex string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
	         */
	        parse: function (hexStr) {
	            // Shortcut
	            var hexStrLength = hexStr.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < hexStrLength; i += 2) {
	                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);
	            }

	            return new WordArray.init(words, hexStrLength / 2);
	        }
	    };

	    /**
	     * Latin1 encoding strategy.
	     */
	    var Latin1 = C_enc.Latin1 = {
	        /**
	         * Converts a word array to a Latin1 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The Latin1 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var latin1Chars = [];
	            for (var i = 0; i < sigBytes; i++) {
	                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                latin1Chars.push(String.fromCharCode(bite));
	            }

	            return latin1Chars.join('');
	        },

	        /**
	         * Converts a Latin1 string to a word array.
	         *
	         * @param {string} latin1Str The Latin1 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
	         */
	        parse: function (latin1Str) {
	            // Shortcut
	            var latin1StrLength = latin1Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < latin1StrLength; i++) {
	                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);
	            }

	            return new WordArray.init(words, latin1StrLength);
	        }
	    };

	    /**
	     * UTF-8 encoding strategy.
	     */
	    var Utf8 = C_enc.Utf8 = {
	        /**
	         * Converts a word array to a UTF-8 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-8 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            try {
	                return decodeURIComponent(escape(Latin1.stringify(wordArray)));
	            } catch (e) {
	                throw new Error('Malformed UTF-8 data');
	            }
	        },

	        /**
	         * Converts a UTF-8 string to a word array.
	         *
	         * @param {string} utf8Str The UTF-8 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
	         */
	        parse: function (utf8Str) {
	            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
	        }
	    };

	    /**
	     * Abstract buffered block algorithm template.
	     *
	     * The property blockSize must be implemented in a concrete subtype.
	     *
	     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
	     */
	    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
	        /**
	         * Resets this block algorithm's data buffer to its initial state.
	         *
	         * @example
	         *
	         *     bufferedBlockAlgorithm.reset();
	         */
	        reset: function () {
	            // Initial values
	            this._data = new WordArray.init();
	            this._nDataBytes = 0;
	        },

	        /**
	         * Adds new data to this block algorithm's buffer.
	         *
	         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
	         *
	         * @example
	         *
	         *     bufferedBlockAlgorithm._append('data');
	         *     bufferedBlockAlgorithm._append(wordArray);
	         */
	        _append: function (data) {
	            // Convert string to WordArray, else assume WordArray already
	            if (typeof data == 'string') {
	                data = Utf8.parse(data);
	            }

	            // Append
	            this._data.concat(data);
	            this._nDataBytes += data.sigBytes;
	        },

	        /**
	         * Processes available data blocks.
	         *
	         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
	         *
	         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
	         *
	         * @return {WordArray} The processed data.
	         *
	         * @example
	         *
	         *     var processedData = bufferedBlockAlgorithm._process();
	         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
	         */
	        _process: function (doFlush) {
	            var processedWords;

	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;
	            var dataSigBytes = data.sigBytes;
	            var blockSize = this.blockSize;
	            var blockSizeBytes = blockSize * 4;

	            // Count blocks ready
	            var nBlocksReady = dataSigBytes / blockSizeBytes;
	            if (doFlush) {
	                // Round up to include partial blocks
	                nBlocksReady = Math.ceil(nBlocksReady);
	            } else {
	                // Round down to include only full blocks,
	                // less the number of blocks that must remain in the buffer
	                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
	            }

	            // Count words ready
	            var nWordsReady = nBlocksReady * blockSize;

	            // Count bytes ready
	            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

	            // Process blocks
	            if (nWordsReady) {
	                for (var offset = 0; offset < nWordsReady; offset += blockSize) {
	                    // Perform concrete-algorithm logic
	                    this._doProcessBlock(dataWords, offset);
	                }

	                // Remove processed words
	                processedWords = dataWords.splice(0, nWordsReady);
	                data.sigBytes -= nBytesReady;
	            }

	            // Return processed words
	            return new WordArray.init(processedWords, nBytesReady);
	        },

	        /**
	         * Creates a copy of this object.
	         *
	         * @return {Object} The clone.
	         *
	         * @example
	         *
	         *     var clone = bufferedBlockAlgorithm.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);
	            clone._data = this._data.clone();

	            return clone;
	        },

	        _minBufferSize: 0
	    });

	    /**
	     * Abstract hasher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
	     */
	    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
	        /**
	         * Configuration options.
	         */
	        cfg: Base.extend(),

	        /**
	         * Initializes a newly created hasher.
	         *
	         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
	         *
	         * @example
	         *
	         *     var hasher = CryptoJS.algo.SHA256.create();
	         */
	        init: function (cfg) {
	            // Apply config defaults
	            this.cfg = this.cfg.extend(cfg);

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this hasher to its initial state.
	         *
	         * @example
	         *
	         *     hasher.reset();
	         */
	        reset: function () {
	            // Reset data buffer
	            BufferedBlockAlgorithm.reset.call(this);

	            // Perform concrete-hasher logic
	            this._doReset();
	        },

	        /**
	         * Updates this hasher with a message.
	         *
	         * @param {WordArray|string} messageUpdate The message to append.
	         *
	         * @return {Hasher} This hasher.
	         *
	         * @example
	         *
	         *     hasher.update('message');
	         *     hasher.update(wordArray);
	         */
	        update: function (messageUpdate) {
	            // Append
	            this._append(messageUpdate);

	            // Update the hash
	            this._process();

	            // Chainable
	            return this;
	        },

	        /**
	         * Finalizes the hash computation.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} messageUpdate (Optional) A final message update.
	         *
	         * @return {WordArray} The hash.
	         *
	         * @example
	         *
	         *     var hash = hasher.finalize();
	         *     var hash = hasher.finalize('message');
	         *     var hash = hasher.finalize(wordArray);
	         */
	        finalize: function (messageUpdate) {
	            // Final message update
	            if (messageUpdate) {
	                this._append(messageUpdate);
	            }

	            // Perform concrete-hasher logic
	            var hash = this._doFinalize();

	            return hash;
	        },

	        blockSize: 512/32,

	        /**
	         * Creates a shortcut function to a hasher's object interface.
	         *
	         * @param {Hasher} hasher The hasher to create a helper for.
	         *
	         * @return {Function} The shortcut function.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
	         */
	        _createHelper: function (hasher) {
	            return function (message, cfg) {
	                return new hasher.init(cfg).finalize(message);
	            };
	        },

	        /**
	         * Creates a shortcut function to the HMAC's object interface.
	         *
	         * @param {Hasher} hasher The hasher to use in this HMAC helper.
	         *
	         * @return {Function} The shortcut function.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
	         */
	        _createHmacHelper: function (hasher) {
	            return function (message, key) {
	                return new C_algo.HMAC.init(hasher, key).finalize(message);
	            };
	        }
	    });

	    /**
	     * Algorithm namespace.
	     */
	    var C_algo = C.algo = {};

	    return C;
	}(Math));


	return CryptoJS;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/core.js?`)},"./node_modules/crypto-js/enc-base64.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_enc = C.enc;

	    /**
	     * Base64 encoding strategy.
	     */
	    var Base64 = C_enc.Base64 = {
	        /**
	         * Converts a word array to a Base64 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The Base64 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;
	            var map = this._map;

	            // Clamp excess bits
	            wordArray.clamp();

	            // Convert
	            var base64Chars = [];
	            for (var i = 0; i < sigBytes; i += 3) {
	                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;
	                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;
	                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;

	                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;

	                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {
	                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));
	                }
	            }

	            // Add padding
	            var paddingChar = map.charAt(64);
	            if (paddingChar) {
	                while (base64Chars.length % 4) {
	                    base64Chars.push(paddingChar);
	                }
	            }

	            return base64Chars.join('');
	        },

	        /**
	         * Converts a Base64 string to a word array.
	         *
	         * @param {string} base64Str The Base64 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
	         */
	        parse: function (base64Str) {
	            // Shortcuts
	            var base64StrLength = base64Str.length;
	            var map = this._map;
	            var reverseMap = this._reverseMap;

	            if (!reverseMap) {
	                    reverseMap = this._reverseMap = [];
	                    for (var j = 0; j < map.length; j++) {
	                        reverseMap[map.charCodeAt(j)] = j;
	                    }
	            }

	            // Ignore padding
	            var paddingChar = map.charAt(64);
	            if (paddingChar) {
	                var paddingIndex = base64Str.indexOf(paddingChar);
	                if (paddingIndex !== -1) {
	                    base64StrLength = paddingIndex;
	                }
	            }

	            // Convert
	            return parseLoop(base64Str, base64StrLength, reverseMap);

	        },

	        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
	    };

	    function parseLoop(base64Str, base64StrLength, reverseMap) {
	      var words = [];
	      var nBytes = 0;
	      for (var i = 0; i < base64StrLength; i++) {
	          if (i % 4) {
	              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);
	              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);
	              var bitsCombined = bits1 | bits2;
	              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);
	              nBytes++;
	          }
	      }
	      return WordArray.create(words, nBytes);
	    }
	}());


	return CryptoJS.enc.Base64;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/enc-base64.js?`)},"./node_modules/crypto-js/enc-base64url.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_enc = C.enc;

	    /**
	     * Base64url encoding strategy.
	     */
	    var Base64url = C_enc.Base64url = {
	        /**
	         * Converts a word array to a Base64url string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @param {boolean} urlSafe Whether to use url safe
	         *
	         * @return {string} The Base64url string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);
	         */
	        stringify: function (wordArray, urlSafe) {
	            if (urlSafe === undefined) {
	                urlSafe = true
	            }
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;
	            var map = urlSafe ? this._safe_map : this._map;

	            // Clamp excess bits
	            wordArray.clamp();

	            // Convert
	            var base64Chars = [];
	            for (var i = 0; i < sigBytes; i += 3) {
	                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;
	                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;
	                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;

	                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;

	                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {
	                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));
	                }
	            }

	            // Add padding
	            var paddingChar = map.charAt(64);
	            if (paddingChar) {
	                while (base64Chars.length % 4) {
	                    base64Chars.push(paddingChar);
	                }
	            }

	            return base64Chars.join('');
	        },

	        /**
	         * Converts a Base64url string to a word array.
	         *
	         * @param {string} base64Str The Base64url string.
	         *
	         * @param {boolean} urlSafe Whether to use url safe
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);
	         */
	        parse: function (base64Str, urlSafe) {
	            if (urlSafe === undefined) {
	                urlSafe = true
	            }

	            // Shortcuts
	            var base64StrLength = base64Str.length;
	            var map = urlSafe ? this._safe_map : this._map;
	            var reverseMap = this._reverseMap;

	            if (!reverseMap) {
	                reverseMap = this._reverseMap = [];
	                for (var j = 0; j < map.length; j++) {
	                    reverseMap[map.charCodeAt(j)] = j;
	                }
	            }

	            // Ignore padding
	            var paddingChar = map.charAt(64);
	            if (paddingChar) {
	                var paddingIndex = base64Str.indexOf(paddingChar);
	                if (paddingIndex !== -1) {
	                    base64StrLength = paddingIndex;
	                }
	            }

	            // Convert
	            return parseLoop(base64Str, base64StrLength, reverseMap);

	        },

	        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
	        _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',
	    };

	    function parseLoop(base64Str, base64StrLength, reverseMap) {
	        var words = [];
	        var nBytes = 0;
	        for (var i = 0; i < base64StrLength; i++) {
	            if (i % 4) {
	                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);
	                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);
	                var bitsCombined = bits1 | bits2;
	                words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);
	                nBytes++;
	            }
	        }
	        return WordArray.create(words, nBytes);
	    }
	}());


	return CryptoJS.enc.Base64url;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/enc-base64url.js?`)},"./node_modules/crypto-js/enc-utf16.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_enc = C.enc;

	    /**
	     * UTF-16 BE encoding strategy.
	     */
	    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {
	        /**
	         * Converts a word array to a UTF-16 BE string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-16 BE string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var utf16Chars = [];
	            for (var i = 0; i < sigBytes; i += 2) {
	                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;
	                utf16Chars.push(String.fromCharCode(codePoint));
	            }

	            return utf16Chars.join('');
	        },

	        /**
	         * Converts a UTF-16 BE string to a word array.
	         *
	         * @param {string} utf16Str The UTF-16 BE string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
	         */
	        parse: function (utf16Str) {
	            // Shortcut
	            var utf16StrLength = utf16Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < utf16StrLength; i++) {
	                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);
	            }

	            return WordArray.create(words, utf16StrLength * 2);
	        }
	    };

	    /**
	     * UTF-16 LE encoding strategy.
	     */
	    C_enc.Utf16LE = {
	        /**
	         * Converts a word array to a UTF-16 LE string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-16 LE string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var utf16Chars = [];
	            for (var i = 0; i < sigBytes; i += 2) {
	                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);
	                utf16Chars.push(String.fromCharCode(codePoint));
	            }

	            return utf16Chars.join('');
	        },

	        /**
	         * Converts a UTF-16 LE string to a word array.
	         *
	         * @param {string} utf16Str The UTF-16 LE string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
	         */
	        parse: function (utf16Str) {
	            // Shortcut
	            var utf16StrLength = utf16Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < utf16StrLength; i++) {
	                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));
	            }

	            return WordArray.create(words, utf16StrLength * 2);
	        }
	    };

	    function swapEndian(word) {
	        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);
	    }
	}());


	return CryptoJS.enc.Utf16;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/enc-utf16.js?`)},"./node_modules/crypto-js/evpkdf.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./sha1 */ "./node_modules/crypto-js/sha1.js"), __webpack_require__(/*! ./hmac */ "./node_modules/crypto-js/hmac.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var WordArray = C_lib.WordArray;
	    var C_algo = C.algo;
	    var MD5 = C_algo.MD5;

	    /**
	     * This key derivation function is meant to conform with EVP_BytesToKey.
	     * www.openssl.org/docs/crypto/EVP_BytesToKey.html
	     */
	    var EvpKDF = C_algo.EvpKDF = Base.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
	         * @property {Hasher} hasher The hash algorithm to use. Default: MD5
	         * @property {number} iterations The number of iterations to perform. Default: 1
	         */
	        cfg: Base.extend({
	            keySize: 128/32,
	            hasher: MD5,
	            iterations: 1
	        }),

	        /**
	         * Initializes a newly created key derivation function.
	         *
	         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
	         *
	         * @example
	         *
	         *     var kdf = CryptoJS.algo.EvpKDF.create();
	         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
	         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
	         */
	        init: function (cfg) {
	            this.cfg = this.cfg.extend(cfg);
	        },

	        /**
	         * Derives a key from a password.
	         *
	         * @param {WordArray|string} password The password.
	         * @param {WordArray|string} salt A salt.
	         *
	         * @return {WordArray} The derived key.
	         *
	         * @example
	         *
	         *     var key = kdf.compute(password, salt);
	         */
	        compute: function (password, salt) {
	            var block;

	            // Shortcut
	            var cfg = this.cfg;

	            // Init hasher
	            var hasher = cfg.hasher.create();

	            // Initial values
	            var derivedKey = WordArray.create();

	            // Shortcuts
	            var derivedKeyWords = derivedKey.words;
	            var keySize = cfg.keySize;
	            var iterations = cfg.iterations;

	            // Generate key
	            while (derivedKeyWords.length < keySize) {
	                if (block) {
	                    hasher.update(block);
	                }
	                block = hasher.update(password).finalize(salt);
	                hasher.reset();

	                // Iterations
	                for (var i = 1; i < iterations; i++) {
	                    block = hasher.finalize(block);
	                    hasher.reset();
	                }

	                derivedKey.concat(block);
	            }
	            derivedKey.sigBytes = keySize * 4;

	            return derivedKey;
	        }
	    });

	    /**
	     * Derives a key from a password.
	     *
	     * @param {WordArray|string} password The password.
	     * @param {WordArray|string} salt A salt.
	     * @param {Object} cfg (Optional) The configuration options to use for this computation.
	     *
	     * @return {WordArray} The derived key.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var key = CryptoJS.EvpKDF(password, salt);
	     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });
	     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });
	     */
	    C.EvpKDF = function (password, salt, cfg) {
	        return EvpKDF.create(cfg).compute(password, salt);
	    };
	}());


	return CryptoJS.EvpKDF;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/evpkdf.js?`)},"./node_modules/crypto-js/format-hex.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function (undefined) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var CipherParams = C_lib.CipherParams;
	    var C_enc = C.enc;
	    var Hex = C_enc.Hex;
	    var C_format = C.format;

	    var HexFormatter = C_format.Hex = {
	        /**
	         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
	         *
	         * @param {CipherParams} cipherParams The cipher params object.
	         *
	         * @return {string} The hexadecimally encoded string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
	         */
	        stringify: function (cipherParams) {
	            return cipherParams.ciphertext.toString(Hex);
	        },

	        /**
	         * Converts a hexadecimally encoded ciphertext string to a cipher params object.
	         *
	         * @param {string} input The hexadecimally encoded string.
	         *
	         * @return {CipherParams} The cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
	         */
	        parse: function (input) {
	            var ciphertext = Hex.parse(input);
	            return CipherParams.create({ ciphertext: ciphertext });
	        }
	    };
	}());


	return CryptoJS.format.Hex;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/format-hex.js?`)},"./node_modules/crypto-js/hmac.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var C_enc = C.enc;
	    var Utf8 = C_enc.Utf8;
	    var C_algo = C.algo;

	    /**
	     * HMAC algorithm.
	     */
	    var HMAC = C_algo.HMAC = Base.extend({
	        /**
	         * Initializes a newly created HMAC.
	         *
	         * @param {Hasher} hasher The hash algorithm to use.
	         * @param {WordArray|string} key The secret key.
	         *
	         * @example
	         *
	         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
	         */
	        init: function (hasher, key) {
	            // Init hasher
	            hasher = this._hasher = new hasher.init();

	            // Convert string to WordArray, else assume WordArray already
	            if (typeof key == 'string') {
	                key = Utf8.parse(key);
	            }

	            // Shortcuts
	            var hasherBlockSize = hasher.blockSize;
	            var hasherBlockSizeBytes = hasherBlockSize * 4;

	            // Allow arbitrary length keys
	            if (key.sigBytes > hasherBlockSizeBytes) {
	                key = hasher.finalize(key);
	            }

	            // Clamp excess bits
	            key.clamp();

	            // Clone key for inner and outer pads
	            var oKey = this._oKey = key.clone();
	            var iKey = this._iKey = key.clone();

	            // Shortcuts
	            var oKeyWords = oKey.words;
	            var iKeyWords = iKey.words;

	            // XOR keys with pad constants
	            for (var i = 0; i < hasherBlockSize; i++) {
	                oKeyWords[i] ^= 0x5c5c5c5c;
	                iKeyWords[i] ^= 0x36363636;
	            }
	            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this HMAC to its initial state.
	         *
	         * @example
	         *
	         *     hmacHasher.reset();
	         */
	        reset: function () {
	            // Shortcut
	            var hasher = this._hasher;

	            // Reset
	            hasher.reset();
	            hasher.update(this._iKey);
	        },

	        /**
	         * Updates this HMAC with a message.
	         *
	         * @param {WordArray|string} messageUpdate The message to append.
	         *
	         * @return {HMAC} This HMAC instance.
	         *
	         * @example
	         *
	         *     hmacHasher.update('message');
	         *     hmacHasher.update(wordArray);
	         */
	        update: function (messageUpdate) {
	            this._hasher.update(messageUpdate);

	            // Chainable
	            return this;
	        },

	        /**
	         * Finalizes the HMAC computation.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} messageUpdate (Optional) A final message update.
	         *
	         * @return {WordArray} The HMAC.
	         *
	         * @example
	         *
	         *     var hmac = hmacHasher.finalize();
	         *     var hmac = hmacHasher.finalize('message');
	         *     var hmac = hmacHasher.finalize(wordArray);
	         */
	        finalize: function (messageUpdate) {
	            // Shortcut
	            var hasher = this._hasher;

	            // Compute HMAC
	            var innerHash = hasher.finalize(messageUpdate);
	            hasher.reset();
	            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));

	            return hmac;
	        }
	    });
	}());


}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/hmac.js?`)},"./node_modules/crypto-js/index.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./x64-core */ "./node_modules/crypto-js/x64-core.js"), __webpack_require__(/*! ./lib-typedarrays */ "./node_modules/crypto-js/lib-typedarrays.js"), __webpack_require__(/*! ./enc-utf16 */ "./node_modules/crypto-js/enc-utf16.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./enc-base64url */ "./node_modules/crypto-js/enc-base64url.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./sha1 */ "./node_modules/crypto-js/sha1.js"), __webpack_require__(/*! ./sha256 */ "./node_modules/crypto-js/sha256.js"), __webpack_require__(/*! ./sha224 */ "./node_modules/crypto-js/sha224.js"), __webpack_require__(/*! ./sha512 */ "./node_modules/crypto-js/sha512.js"), __webpack_require__(/*! ./sha384 */ "./node_modules/crypto-js/sha384.js"), __webpack_require__(/*! ./sha3 */ "./node_modules/crypto-js/sha3.js"), __webpack_require__(/*! ./ripemd160 */ "./node_modules/crypto-js/ripemd160.js"), __webpack_require__(/*! ./hmac */ "./node_modules/crypto-js/hmac.js"), __webpack_require__(/*! ./pbkdf2 */ "./node_modules/crypto-js/pbkdf2.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"), __webpack_require__(/*! ./mode-cfb */ "./node_modules/crypto-js/mode-cfb.js"), __webpack_require__(/*! ./mode-ctr */ "./node_modules/crypto-js/mode-ctr.js"), __webpack_require__(/*! ./mode-ctr-gladman */ "./node_modules/crypto-js/mode-ctr-gladman.js"), __webpack_require__(/*! ./mode-ofb */ "./node_modules/crypto-js/mode-ofb.js"), __webpack_require__(/*! ./mode-ecb */ "./node_modules/crypto-js/mode-ecb.js"), __webpack_require__(/*! ./pad-ansix923 */ "./node_modules/crypto-js/pad-ansix923.js"), __webpack_require__(/*! ./pad-iso10126 */ "./node_modules/crypto-js/pad-iso10126.js"), __webpack_require__(/*! ./pad-iso97971 */ "./node_modules/crypto-js/pad-iso97971.js"), __webpack_require__(/*! ./pad-zeropadding */ "./node_modules/crypto-js/pad-zeropadding.js"), __webpack_require__(/*! ./pad-nopadding */ "./node_modules/crypto-js/pad-nopadding.js"), __webpack_require__(/*! ./format-hex */ "./node_modules/crypto-js/format-hex.js"), __webpack_require__(/*! ./aes */ "./node_modules/crypto-js/aes.js"), __webpack_require__(/*! ./tripledes */ "./node_modules/crypto-js/tripledes.js"), __webpack_require__(/*! ./rc4 */ "./node_modules/crypto-js/rc4.js"), __webpack_require__(/*! ./rabbit */ "./node_modules/crypto-js/rabbit.js"), __webpack_require__(/*! ./rabbit-legacy */ "./node_modules/crypto-js/rabbit-legacy.js"), __webpack_require__(/*! ./blowfish */ "./node_modules/crypto-js/blowfish.js"));
	}
	else {}
}(this, function (CryptoJS) {

	return CryptoJS;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/index.js?`)},"./node_modules/crypto-js/lib-typedarrays.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Check if typed arrays are supported
	    if (typeof ArrayBuffer != 'function') {
	        return;
	    }

	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;

	    // Reference original init
	    var superInit = WordArray.init;

	    // Augment WordArray.init to handle typed arrays
	    var subInit = WordArray.init = function (typedArray) {
	        // Convert buffers to uint8
	        if (typedArray instanceof ArrayBuffer) {
	            typedArray = new Uint8Array(typedArray);
	        }

	        // Convert other array views to uint8
	        if (
	            typedArray instanceof Int8Array ||
	            (typeof Uint8ClampedArray !== "undefined" && typedArray instanceof Uint8ClampedArray) ||
	            typedArray instanceof Int16Array ||
	            typedArray instanceof Uint16Array ||
	            typedArray instanceof Int32Array ||
	            typedArray instanceof Uint32Array ||
	            typedArray instanceof Float32Array ||
	            typedArray instanceof Float64Array
	        ) {
	            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
	        }

	        // Handle Uint8Array
	        if (typedArray instanceof Uint8Array) {
	            // Shortcut
	            var typedArrayByteLength = typedArray.byteLength;

	            // Extract bytes
	            var words = [];
	            for (var i = 0; i < typedArrayByteLength; i++) {
	                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);
	            }

	            // Initialize this word array
	            superInit.call(this, words, typedArrayByteLength);
	        } else {
	            // Else call normal init
	            superInit.apply(this, arguments);
	        }
	    };

	    subInit.prototype = WordArray;
	}());


	return CryptoJS.lib.WordArray;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/lib-typedarrays.js?`)},"./node_modules/crypto-js/md5.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Constants table
	    var T = [];

	    // Compute constants
	    (function () {
	        for (var i = 0; i < 64; i++) {
	            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;
	        }
	    }());

	    /**
	     * MD5 hash algorithm.
	     */
	    var MD5 = C_algo.MD5 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0x67452301, 0xefcdab89,
	                0x98badcfe, 0x10325476
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Swap endian
	            for (var i = 0; i < 16; i++) {
	                // Shortcuts
	                var offset_i = offset + i;
	                var M_offset_i = M[offset_i];

	                M[offset_i] = (
	                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
	                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
	                );
	            }

	            // Shortcuts
	            var H = this._hash.words;

	            var M_offset_0  = M[offset + 0];
	            var M_offset_1  = M[offset + 1];
	            var M_offset_2  = M[offset + 2];
	            var M_offset_3  = M[offset + 3];
	            var M_offset_4  = M[offset + 4];
	            var M_offset_5  = M[offset + 5];
	            var M_offset_6  = M[offset + 6];
	            var M_offset_7  = M[offset + 7];
	            var M_offset_8  = M[offset + 8];
	            var M_offset_9  = M[offset + 9];
	            var M_offset_10 = M[offset + 10];
	            var M_offset_11 = M[offset + 11];
	            var M_offset_12 = M[offset + 12];
	            var M_offset_13 = M[offset + 13];
	            var M_offset_14 = M[offset + 14];
	            var M_offset_15 = M[offset + 15];

	            // Working variables
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];

	            // Computation
	            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);
	            d = FF(d, a, b, c, M_offset_1,  12, T[1]);
	            c = FF(c, d, a, b, M_offset_2,  17, T[2]);
	            b = FF(b, c, d, a, M_offset_3,  22, T[3]);
	            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);
	            d = FF(d, a, b, c, M_offset_5,  12, T[5]);
	            c = FF(c, d, a, b, M_offset_6,  17, T[6]);
	            b = FF(b, c, d, a, M_offset_7,  22, T[7]);
	            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);
	            d = FF(d, a, b, c, M_offset_9,  12, T[9]);
	            c = FF(c, d, a, b, M_offset_10, 17, T[10]);
	            b = FF(b, c, d, a, M_offset_11, 22, T[11]);
	            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);
	            d = FF(d, a, b, c, M_offset_13, 12, T[13]);
	            c = FF(c, d, a, b, M_offset_14, 17, T[14]);
	            b = FF(b, c, d, a, M_offset_15, 22, T[15]);

	            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);
	            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);
	            c = GG(c, d, a, b, M_offset_11, 14, T[18]);
	            b = GG(b, c, d, a, M_offset_0,  20, T[19]);
	            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);
	            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);
	            c = GG(c, d, a, b, M_offset_15, 14, T[22]);
	            b = GG(b, c, d, a, M_offset_4,  20, T[23]);
	            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);
	            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);
	            c = GG(c, d, a, b, M_offset_3,  14, T[26]);
	            b = GG(b, c, d, a, M_offset_8,  20, T[27]);
	            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);
	            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);
	            c = GG(c, d, a, b, M_offset_7,  14, T[30]);
	            b = GG(b, c, d, a, M_offset_12, 20, T[31]);

	            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);
	            d = HH(d, a, b, c, M_offset_8,  11, T[33]);
	            c = HH(c, d, a, b, M_offset_11, 16, T[34]);
	            b = HH(b, c, d, a, M_offset_14, 23, T[35]);
	            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);
	            d = HH(d, a, b, c, M_offset_4,  11, T[37]);
	            c = HH(c, d, a, b, M_offset_7,  16, T[38]);
	            b = HH(b, c, d, a, M_offset_10, 23, T[39]);
	            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);
	            d = HH(d, a, b, c, M_offset_0,  11, T[41]);
	            c = HH(c, d, a, b, M_offset_3,  16, T[42]);
	            b = HH(b, c, d, a, M_offset_6,  23, T[43]);
	            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);
	            d = HH(d, a, b, c, M_offset_12, 11, T[45]);
	            c = HH(c, d, a, b, M_offset_15, 16, T[46]);
	            b = HH(b, c, d, a, M_offset_2,  23, T[47]);

	            a = II(a, b, c, d, M_offset_0,  6,  T[48]);
	            d = II(d, a, b, c, M_offset_7,  10, T[49]);
	            c = II(c, d, a, b, M_offset_14, 15, T[50]);
	            b = II(b, c, d, a, M_offset_5,  21, T[51]);
	            a = II(a, b, c, d, M_offset_12, 6,  T[52]);
	            d = II(d, a, b, c, M_offset_3,  10, T[53]);
	            c = II(c, d, a, b, M_offset_10, 15, T[54]);
	            b = II(b, c, d, a, M_offset_1,  21, T[55]);
	            a = II(a, b, c, d, M_offset_8,  6,  T[56]);
	            d = II(d, a, b, c, M_offset_15, 10, T[57]);
	            c = II(c, d, a, b, M_offset_6,  15, T[58]);
	            b = II(b, c, d, a, M_offset_13, 21, T[59]);
	            a = II(a, b, c, d, M_offset_4,  6,  T[60]);
	            d = II(d, a, b, c, M_offset_11, 10, T[61]);
	            c = II(c, d, a, b, M_offset_2,  15, T[62]);
	            b = II(b, c, d, a, M_offset_9,  21, T[63]);

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);

	            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
	            var nBitsTotalL = nBitsTotal;
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (
	                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)
	            );
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
	                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)
	            );

	            data.sigBytes = (dataWords.length + 1) * 4;

	            // Hash final blocks
	            this._process();

	            // Shortcuts
	            var hash = this._hash;
	            var H = hash.words;

	            // Swap endian
	            for (var i = 0; i < 4; i++) {
	                // Shortcut
	                var H_i = H[i];

	                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
	                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
	            }

	            // Return final computed hash
	            return hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    function FF(a, b, c, d, x, s, t) {
	        var n = a + ((b & c) | (~b & d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function GG(a, b, c, d, x, s, t) {
	        var n = a + ((b & d) | (c & ~d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function HH(a, b, c, d, x, s, t) {
	        var n = a + (b ^ c ^ d) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function II(a, b, c, d, x, s, t) {
	        var n = a + (c ^ (b | ~d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.MD5('message');
	     *     var hash = CryptoJS.MD5(wordArray);
	     */
	    C.MD5 = Hasher._createHelper(MD5);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacMD5(message, key);
	     */
	    C.HmacMD5 = Hasher._createHmacHelper(MD5);
	}(Math));


	return CryptoJS.MD5;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/md5.js?`)},"./node_modules/crypto-js/mode-cfb.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * Cipher Feedback block mode.
	 */
	CryptoJS.mode.CFB = (function () {
	    var CFB = CryptoJS.lib.BlockCipherMode.extend();

	    CFB.Encryptor = CFB.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher;
	            var blockSize = cipher.blockSize;

	            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

	            // Remember this block to use with next block
	            this._prevBlock = words.slice(offset, offset + blockSize);
	        }
	    });

	    CFB.Decryptor = CFB.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher;
	            var blockSize = cipher.blockSize;

	            // Remember this block to use with next block
	            var thisBlock = words.slice(offset, offset + blockSize);

	            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

	            // This block becomes the previous block
	            this._prevBlock = thisBlock;
	        }
	    });

	    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {
	        var keystream;

	        // Shortcut
	        var iv = this._iv;

	        // Generate keystream
	        if (iv) {
	            keystream = iv.slice(0);

	            // Remove IV for subsequent blocks
	            this._iv = undefined;
	        } else {
	            keystream = this._prevBlock;
	        }
	        cipher.encryptBlock(keystream, 0);

	        // Encrypt
	        for (var i = 0; i < blockSize; i++) {
	            words[offset + i] ^= keystream[i];
	        }
	    }

	    return CFB;
	}());


	return CryptoJS.mode.CFB;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/mode-cfb.js?`)},"./node_modules/crypto-js/mode-ctr-gladman.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/** @preserve
	 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
	 * derived from CryptoJS.mode.CTR
	 * Jan Hruby jhruby.web@gmail.com
	 */
	CryptoJS.mode.CTRGladman = (function () {
	    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();

		function incWord(word)
		{
			if (((word >> 24) & 0xff) === 0xff) { //overflow
			var b1 = (word >> 16)&0xff;
			var b2 = (word >> 8)&0xff;
			var b3 = word & 0xff;

			if (b1 === 0xff) // overflow b1
			{
			b1 = 0;
			if (b2 === 0xff)
			{
				b2 = 0;
				if (b3 === 0xff)
				{
					b3 = 0;
				}
				else
				{
					++b3;
				}
			}
			else
			{
				++b2;
			}
			}
			else
			{
			++b1;
			}

			word = 0;
			word += (b1 << 16);
			word += (b2 << 8);
			word += b3;
			}
			else
			{
			word += (0x01 << 24);
			}
			return word;
		}

		function incCounter(counter)
		{
			if ((counter[0] = incWord(counter[0])) === 0)
			{
				// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8
				counter[1] = incWord(counter[1]);
			}
			return counter;
		}

	    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher
	            var blockSize = cipher.blockSize;
	            var iv = this._iv;
	            var counter = this._counter;

	            // Generate keystream
	            if (iv) {
	                counter = this._counter = iv.slice(0);

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            }

				incCounter(counter);

				var keystream = counter.slice(0);
	            cipher.encryptBlock(keystream, 0);

	            // Encrypt
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= keystream[i];
	            }
	        }
	    });

	    CTRGladman.Decryptor = Encryptor;

	    return CTRGladman;
	}());




	return CryptoJS.mode.CTRGladman;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/mode-ctr-gladman.js?`)},"./node_modules/crypto-js/mode-ctr.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * Counter block mode.
	 */
	CryptoJS.mode.CTR = (function () {
	    var CTR = CryptoJS.lib.BlockCipherMode.extend();

	    var Encryptor = CTR.Encryptor = CTR.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher
	            var blockSize = cipher.blockSize;
	            var iv = this._iv;
	            var counter = this._counter;

	            // Generate keystream
	            if (iv) {
	                counter = this._counter = iv.slice(0);

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            }
	            var keystream = counter.slice(0);
	            cipher.encryptBlock(keystream, 0);

	            // Increment counter
	            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0

	            // Encrypt
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= keystream[i];
	            }
	        }
	    });

	    CTR.Decryptor = Encryptor;

	    return CTR;
	}());


	return CryptoJS.mode.CTR;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/mode-ctr.js?`)},"./node_modules/crypto-js/mode-ecb.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * Electronic Codebook block mode.
	 */
	CryptoJS.mode.ECB = (function () {
	    var ECB = CryptoJS.lib.BlockCipherMode.extend();

	    ECB.Encryptor = ECB.extend({
	        processBlock: function (words, offset) {
	            this._cipher.encryptBlock(words, offset);
	        }
	    });

	    ECB.Decryptor = ECB.extend({
	        processBlock: function (words, offset) {
	            this._cipher.decryptBlock(words, offset);
	        }
	    });

	    return ECB;
	}());


	return CryptoJS.mode.ECB;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/mode-ecb.js?`)},"./node_modules/crypto-js/mode-ofb.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * Output Feedback block mode.
	 */
	CryptoJS.mode.OFB = (function () {
	    var OFB = CryptoJS.lib.BlockCipherMode.extend();

	    var Encryptor = OFB.Encryptor = OFB.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher
	            var blockSize = cipher.blockSize;
	            var iv = this._iv;
	            var keystream = this._keystream;

	            // Generate keystream
	            if (iv) {
	                keystream = this._keystream = iv.slice(0);

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            }
	            cipher.encryptBlock(keystream, 0);

	            // Encrypt
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= keystream[i];
	            }
	        }
	    });

	    OFB.Decryptor = Encryptor;

	    return OFB;
	}());


	return CryptoJS.mode.OFB;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/mode-ofb.js?`)},"./node_modules/crypto-js/pad-ansix923.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * ANSI X.923 padding strategy.
	 */
	CryptoJS.pad.AnsiX923 = {
	    pad: function (data, blockSize) {
	        // Shortcuts
	        var dataSigBytes = data.sigBytes;
	        var blockSizeBytes = blockSize * 4;

	        // Count padding bytes
	        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;

	        // Compute last byte position
	        var lastBytePos = dataSigBytes + nPaddingBytes - 1;

	        // Pad
	        data.clamp();
	        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);
	        data.sigBytes += nPaddingBytes;
	    },

	    unpad: function (data) {
	        // Get number of padding bytes from last byte
	        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

	        // Remove padding
	        data.sigBytes -= nPaddingBytes;
	    }
	};


	return CryptoJS.pad.Ansix923;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/pad-ansix923.js?`)},"./node_modules/crypto-js/pad-iso10126.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * ISO 10126 padding strategy.
	 */
	CryptoJS.pad.Iso10126 = {
	    pad: function (data, blockSize) {
	        // Shortcut
	        var blockSizeBytes = blockSize * 4;

	        // Count padding bytes
	        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

	        // Pad
	        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).
	             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));
	    },

	    unpad: function (data) {
	        // Get number of padding bytes from last byte
	        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

	        // Remove padding
	        data.sigBytes -= nPaddingBytes;
	    }
	};


	return CryptoJS.pad.Iso10126;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/pad-iso10126.js?`)},"./node_modules/crypto-js/pad-iso97971.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * ISO/IEC 9797-1 Padding Method 2.
	 */
	CryptoJS.pad.Iso97971 = {
	    pad: function (data, blockSize) {
	        // Add 0x80 byte
	        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));

	        // Zero pad the rest
	        CryptoJS.pad.ZeroPadding.pad(data, blockSize);
	    },

	    unpad: function (data) {
	        // Remove zero padding
	        CryptoJS.pad.ZeroPadding.unpad(data);

	        // Remove one more byte -- the 0x80 byte
	        data.sigBytes--;
	    }
	};


	return CryptoJS.pad.Iso97971;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/pad-iso97971.js?`)},"./node_modules/crypto-js/pad-nopadding.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * A noop padding strategy.
	 */
	CryptoJS.pad.NoPadding = {
	    pad: function () {
	    },

	    unpad: function () {
	    }
	};


	return CryptoJS.pad.NoPadding;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/pad-nopadding.js?`)},"./node_modules/crypto-js/pad-zeropadding.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * Zero padding strategy.
	 */
	CryptoJS.pad.ZeroPadding = {
	    pad: function (data, blockSize) {
	        // Shortcut
	        var blockSizeBytes = blockSize * 4;

	        // Pad
	        data.clamp();
	        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);
	    },

	    unpad: function (data) {
	        // Shortcut
	        var dataWords = data.words;

	        // Unpad
	        var i = data.sigBytes - 1;
	        for (var i = data.sigBytes - 1; i >= 0; i--) {
	            if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {
	                data.sigBytes = i + 1;
	                break;
	            }
	        }
	    }
	};


	return CryptoJS.pad.ZeroPadding;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/pad-zeropadding.js?`)},"./node_modules/crypto-js/pbkdf2.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./sha256 */ "./node_modules/crypto-js/sha256.js"), __webpack_require__(/*! ./hmac */ "./node_modules/crypto-js/hmac.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var WordArray = C_lib.WordArray;
	    var C_algo = C.algo;
	    var SHA256 = C_algo.SHA256;
	    var HMAC = C_algo.HMAC;

	    /**
	     * Password-Based Key Derivation Function 2 algorithm.
	     */
	    var PBKDF2 = C_algo.PBKDF2 = Base.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
	         * @property {Hasher} hasher The hasher to use. Default: SHA256
	         * @property {number} iterations The number of iterations to perform. Default: 250000
	         */
	        cfg: Base.extend({
	            keySize: 128/32,
	            hasher: SHA256,
	            iterations: 250000
	        }),

	        /**
	         * Initializes a newly created key derivation function.
	         *
	         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
	         *
	         * @example
	         *
	         *     var kdf = CryptoJS.algo.PBKDF2.create();
	         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
	         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
	         */
	        init: function (cfg) {
	            this.cfg = this.cfg.extend(cfg);
	        },

	        /**
	         * Computes the Password-Based Key Derivation Function 2.
	         *
	         * @param {WordArray|string} password The password.
	         * @param {WordArray|string} salt A salt.
	         *
	         * @return {WordArray} The derived key.
	         *
	         * @example
	         *
	         *     var key = kdf.compute(password, salt);
	         */
	        compute: function (password, salt) {
	            // Shortcut
	            var cfg = this.cfg;

	            // Init HMAC
	            var hmac = HMAC.create(cfg.hasher, password);

	            // Initial values
	            var derivedKey = WordArray.create();
	            var blockIndex = WordArray.create([0x00000001]);

	            // Shortcuts
	            var derivedKeyWords = derivedKey.words;
	            var blockIndexWords = blockIndex.words;
	            var keySize = cfg.keySize;
	            var iterations = cfg.iterations;

	            // Generate key
	            while (derivedKeyWords.length < keySize) {
	                var block = hmac.update(salt).finalize(blockIndex);
	                hmac.reset();

	                // Shortcuts
	                var blockWords = block.words;
	                var blockWordsLength = blockWords.length;

	                // Iterations
	                var intermediate = block;
	                for (var i = 1; i < iterations; i++) {
	                    intermediate = hmac.finalize(intermediate);
	                    hmac.reset();

	                    // Shortcut
	                    var intermediateWords = intermediate.words;

	                    // XOR intermediate with block
	                    for (var j = 0; j < blockWordsLength; j++) {
	                        blockWords[j] ^= intermediateWords[j];
	                    }
	                }

	                derivedKey.concat(block);
	                blockIndexWords[0]++;
	            }
	            derivedKey.sigBytes = keySize * 4;

	            return derivedKey;
	        }
	    });

	    /**
	     * Computes the Password-Based Key Derivation Function 2.
	     *
	     * @param {WordArray|string} password The password.
	     * @param {WordArray|string} salt A salt.
	     * @param {Object} cfg (Optional) The configuration options to use for this computation.
	     *
	     * @return {WordArray} The derived key.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var key = CryptoJS.PBKDF2(password, salt);
	     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });
	     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });
	     */
	    C.PBKDF2 = function (password, salt, cfg) {
	        return PBKDF2.create(cfg).compute(password, salt);
	    };
	}());


	return CryptoJS.PBKDF2;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/pbkdf2.js?`)},"./node_modules/crypto-js/rabbit-legacy.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var StreamCipher = C_lib.StreamCipher;
	    var C_algo = C.algo;

	    // Reusable objects
	    var S  = [];
	    var C_ = [];
	    var G  = [];

	    /**
	     * Rabbit stream cipher algorithm.
	     *
	     * This is a legacy version that neglected to convert the key to little-endian.
	     * This error doesn't affect the cipher's security,
	     * but it does affect its compatibility with other implementations.
	     */
	    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var K = this._key.words;
	            var iv = this.cfg.iv;

	            // Generate initial state values
	            var X = this._X = [
	                K[0], (K[3] << 16) | (K[2] >>> 16),
	                K[1], (K[0] << 16) | (K[3] >>> 16),
	                K[2], (K[1] << 16) | (K[0] >>> 16),
	                K[3], (K[2] << 16) | (K[1] >>> 16)
	            ];

	            // Generate initial counter values
	            var C = this._C = [
	                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),
	                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),
	                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),
	                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)
	            ];

	            // Carry bit
	            this._b = 0;

	            // Iterate the system four times
	            for (var i = 0; i < 4; i++) {
	                nextState.call(this);
	            }

	            // Modify the counters
	            for (var i = 0; i < 8; i++) {
	                C[i] ^= X[(i + 4) & 7];
	            }

	            // IV setup
	            if (iv) {
	                // Shortcuts
	                var IV = iv.words;
	                var IV_0 = IV[0];
	                var IV_1 = IV[1];

	                // Generate four subvectors
	                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);
	                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);
	                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);
	                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);

	                // Modify counter values
	                C[0] ^= i0;
	                C[1] ^= i1;
	                C[2] ^= i2;
	                C[3] ^= i3;
	                C[4] ^= i0;
	                C[5] ^= i1;
	                C[6] ^= i2;
	                C[7] ^= i3;

	                // Iterate the system four times
	                for (var i = 0; i < 4; i++) {
	                    nextState.call(this);
	                }
	            }
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var X = this._X;

	            // Iterate the system
	            nextState.call(this);

	            // Generate four keystream words
	            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);
	            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);
	            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);
	            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);

	            for (var i = 0; i < 4; i++) {
	                // Swap endian
	                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |
	                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);

	                // Encrypt
	                M[offset + i] ^= S[i];
	            }
	        },

	        blockSize: 128/32,

	        ivSize: 64/32
	    });

	    function nextState() {
	        // Shortcuts
	        var X = this._X;
	        var C = this._C;

	        // Save old counter values
	        for (var i = 0; i < 8; i++) {
	            C_[i] = C[i];
	        }

	        // Calculate new counter values
	        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;
	        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;
	        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;
	        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;
	        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;
	        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;
	        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;
	        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;
	        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;

	        // Calculate the g-values
	        for (var i = 0; i < 8; i++) {
	            var gx = X[i] + C[i];

	            // Construct high and low argument for squaring
	            var ga = gx & 0xffff;
	            var gb = gx >>> 16;

	            // Calculate high and low result of squaring
	            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;
	            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);

	            // High XOR low
	            G[i] = gh ^ gl;
	        }

	        // Calculate new state values
	        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;
	        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;
	        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;
	        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;
	        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;
	        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;
	        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;
	        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;
	    }

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);
	     */
	    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);
	}());


	return CryptoJS.RabbitLegacy;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/rabbit-legacy.js?`)},"./node_modules/crypto-js/rabbit.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var StreamCipher = C_lib.StreamCipher;
	    var C_algo = C.algo;

	    // Reusable objects
	    var S  = [];
	    var C_ = [];
	    var G  = [];

	    /**
	     * Rabbit stream cipher algorithm
	     */
	    var Rabbit = C_algo.Rabbit = StreamCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var K = this._key.words;
	            var iv = this.cfg.iv;

	            // Swap endian
	            for (var i = 0; i < 4; i++) {
	                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |
	                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);
	            }

	            // Generate initial state values
	            var X = this._X = [
	                K[0], (K[3] << 16) | (K[2] >>> 16),
	                K[1], (K[0] << 16) | (K[3] >>> 16),
	                K[2], (K[1] << 16) | (K[0] >>> 16),
	                K[3], (K[2] << 16) | (K[1] >>> 16)
	            ];

	            // Generate initial counter values
	            var C = this._C = [
	                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),
	                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),
	                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),
	                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)
	            ];

	            // Carry bit
	            this._b = 0;

	            // Iterate the system four times
	            for (var i = 0; i < 4; i++) {
	                nextState.call(this);
	            }

	            // Modify the counters
	            for (var i = 0; i < 8; i++) {
	                C[i] ^= X[(i + 4) & 7];
	            }

	            // IV setup
	            if (iv) {
	                // Shortcuts
	                var IV = iv.words;
	                var IV_0 = IV[0];
	                var IV_1 = IV[1];

	                // Generate four subvectors
	                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);
	                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);
	                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);
	                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);

	                // Modify counter values
	                C[0] ^= i0;
	                C[1] ^= i1;
	                C[2] ^= i2;
	                C[3] ^= i3;
	                C[4] ^= i0;
	                C[5] ^= i1;
	                C[6] ^= i2;
	                C[7] ^= i3;

	                // Iterate the system four times
	                for (var i = 0; i < 4; i++) {
	                    nextState.call(this);
	                }
	            }
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var X = this._X;

	            // Iterate the system
	            nextState.call(this);

	            // Generate four keystream words
	            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);
	            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);
	            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);
	            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);

	            for (var i = 0; i < 4; i++) {
	                // Swap endian
	                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |
	                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);

	                // Encrypt
	                M[offset + i] ^= S[i];
	            }
	        },

	        blockSize: 128/32,

	        ivSize: 64/32
	    });

	    function nextState() {
	        // Shortcuts
	        var X = this._X;
	        var C = this._C;

	        // Save old counter values
	        for (var i = 0; i < 8; i++) {
	            C_[i] = C[i];
	        }

	        // Calculate new counter values
	        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;
	        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;
	        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;
	        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;
	        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;
	        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;
	        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;
	        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;
	        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;

	        // Calculate the g-values
	        for (var i = 0; i < 8; i++) {
	            var gx = X[i] + C[i];

	            // Construct high and low argument for squaring
	            var ga = gx & 0xffff;
	            var gb = gx >>> 16;

	            // Calculate high and low result of squaring
	            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;
	            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);

	            // High XOR low
	            G[i] = gh ^ gl;
	        }

	        // Calculate new state values
	        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;
	        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;
	        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;
	        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;
	        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;
	        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;
	        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;
	        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;
	    }

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);
	     */
	    C.Rabbit = StreamCipher._createHelper(Rabbit);
	}());


	return CryptoJS.Rabbit;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/rabbit.js?`)},"./node_modules/crypto-js/rc4.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var StreamCipher = C_lib.StreamCipher;
	    var C_algo = C.algo;

	    /**
	     * RC4 stream cipher algorithm.
	     */
	    var RC4 = C_algo.RC4 = StreamCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var key = this._key;
	            var keyWords = key.words;
	            var keySigBytes = key.sigBytes;

	            // Init sbox
	            var S = this._S = [];
	            for (var i = 0; i < 256; i++) {
	                S[i] = i;
	            }

	            // Key setup
	            for (var i = 0, j = 0; i < 256; i++) {
	                var keyByteIndex = i % keySigBytes;
	                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;

	                j = (j + S[i] + keyByte) % 256;

	                // Swap
	                var t = S[i];
	                S[i] = S[j];
	                S[j] = t;
	            }

	            // Counters
	            this._i = this._j = 0;
	        },

	        _doProcessBlock: function (M, offset) {
	            M[offset] ^= generateKeystreamWord.call(this);
	        },

	        keySize: 256/32,

	        ivSize: 0
	    });

	    function generateKeystreamWord() {
	        // Shortcuts
	        var S = this._S;
	        var i = this._i;
	        var j = this._j;

	        // Generate keystream word
	        var keystreamWord = 0;
	        for (var n = 0; n < 4; n++) {
	            i = (i + 1) % 256;
	            j = (j + S[i]) % 256;

	            // Swap
	            var t = S[i];
	            S[i] = S[j];
	            S[j] = t;

	            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);
	        }

	        // Update counters
	        this._i = i;
	        this._j = j;

	        return keystreamWord;
	    }

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);
	     */
	    C.RC4 = StreamCipher._createHelper(RC4);

	    /**
	     * Modified RC4 stream cipher algorithm.
	     */
	    var RC4Drop = C_algo.RC4Drop = RC4.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} drop The number of keystream words to drop. Default 192
	         */
	        cfg: RC4.cfg.extend({
	            drop: 192
	        }),

	        _doReset: function () {
	            RC4._doReset.call(this);

	            // Drop
	            for (var i = this.cfg.drop; i > 0; i--) {
	                generateKeystreamWord.call(this);
	            }
	        }
	    });

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);
	     */
	    C.RC4Drop = StreamCipher._createHelper(RC4Drop);
	}());


	return CryptoJS.RC4;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/rc4.js?`)},"./node_modules/crypto-js/ripemd160.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/** @preserve
	(c) 2012 by C\xE9dric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Constants table
	    var _zl = WordArray.create([
	        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
	        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,
	        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,
	        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,
	        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);
	    var _zr = WordArray.create([
	        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,
	        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,
	        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,
	        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,
	        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);
	    var _sl = WordArray.create([
	         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,
	        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,
	        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,
	          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,
	        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);
	    var _sr = WordArray.create([
	        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,
	        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,
	        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,
	        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,
	        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);

	    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);
	    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);

	    /**
	     * RIPEMD160 hash algorithm.
	     */
	    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({
	        _doReset: function () {
	            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);
	        },

	        _doProcessBlock: function (M, offset) {

	            // Swap endian
	            for (var i = 0; i < 16; i++) {
	                // Shortcuts
	                var offset_i = offset + i;
	                var M_offset_i = M[offset_i];

	                // Swap
	                M[offset_i] = (
	                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
	                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
	                );
	            }
	            // Shortcut
	            var H  = this._hash.words;
	            var hl = _hl.words;
	            var hr = _hr.words;
	            var zl = _zl.words;
	            var zr = _zr.words;
	            var sl = _sl.words;
	            var sr = _sr.words;

	            // Working variables
	            var al, bl, cl, dl, el;
	            var ar, br, cr, dr, er;

	            ar = al = H[0];
	            br = bl = H[1];
	            cr = cl = H[2];
	            dr = dl = H[3];
	            er = el = H[4];
	            // Computation
	            var t;
	            for (var i = 0; i < 80; i += 1) {
	                t = (al +  M[offset+zl[i]])|0;
	                if (i<16){
		            t +=  f1(bl,cl,dl) + hl[0];
	                } else if (i<32) {
		            t +=  f2(bl,cl,dl) + hl[1];
	                } else if (i<48) {
		            t +=  f3(bl,cl,dl) + hl[2];
	                } else if (i<64) {
		            t +=  f4(bl,cl,dl) + hl[3];
	                } else {// if (i<80) {
		            t +=  f5(bl,cl,dl) + hl[4];
	                }
	                t = t|0;
	                t =  rotl(t,sl[i]);
	                t = (t+el)|0;
	                al = el;
	                el = dl;
	                dl = rotl(cl, 10);
	                cl = bl;
	                bl = t;

	                t = (ar + M[offset+zr[i]])|0;
	                if (i<16){
		            t +=  f5(br,cr,dr) + hr[0];
	                } else if (i<32) {
		            t +=  f4(br,cr,dr) + hr[1];
	                } else if (i<48) {
		            t +=  f3(br,cr,dr) + hr[2];
	                } else if (i<64) {
		            t +=  f2(br,cr,dr) + hr[3];
	                } else {// if (i<80) {
		            t +=  f1(br,cr,dr) + hr[4];
	                }
	                t = t|0;
	                t =  rotl(t,sr[i]) ;
	                t = (t+er)|0;
	                ar = er;
	                er = dr;
	                dr = rotl(cr, 10);
	                cr = br;
	                br = t;
	            }
	            // Intermediate hash value
	            t    = (H[1] + cl + dr)|0;
	            H[1] = (H[2] + dl + er)|0;
	            H[2] = (H[3] + el + ar)|0;
	            H[3] = (H[4] + al + br)|0;
	            H[4] = (H[0] + bl + cr)|0;
	            H[0] =  t;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
	                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)
	            );
	            data.sigBytes = (dataWords.length + 1) * 4;

	            // Hash final blocks
	            this._process();

	            // Shortcuts
	            var hash = this._hash;
	            var H = hash.words;

	            // Swap endian
	            for (var i = 0; i < 5; i++) {
	                // Shortcut
	                var H_i = H[i];

	                // Swap
	                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
	                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
	            }

	            // Return final computed hash
	            return hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });


	    function f1(x, y, z) {
	        return ((x) ^ (y) ^ (z));

	    }

	    function f2(x, y, z) {
	        return (((x)&(y)) | ((~x)&(z)));
	    }

	    function f3(x, y, z) {
	        return (((x) | (~(y))) ^ (z));
	    }

	    function f4(x, y, z) {
	        return (((x) & (z)) | ((y)&(~(z))));
	    }

	    function f5(x, y, z) {
	        return ((x) ^ ((y) |(~(z))));

	    }

	    function rotl(x,n) {
	        return (x<<n) | (x>>>(32-n));
	    }


	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.RIPEMD160('message');
	     *     var hash = CryptoJS.RIPEMD160(wordArray);
	     */
	    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);
	     */
	    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);
	}(Math));


	return CryptoJS.RIPEMD160;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/ripemd160.js?`)},"./node_modules/crypto-js/sha1.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Reusable object
	    var W = [];

	    /**
	     * SHA-1 hash algorithm.
	     */
	    var SHA1 = C_algo.SHA1 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0x67452301, 0xefcdab89,
	                0x98badcfe, 0x10325476,
	                0xc3d2e1f0
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var H = this._hash.words;

	            // Working variables
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];
	            var e = H[4];

	            // Computation
	            for (var i = 0; i < 80; i++) {
	                if (i < 16) {
	                    W[i] = M[offset + i] | 0;
	                } else {
	                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
	                    W[i] = (n << 1) | (n >>> 31);
	                }

	                var t = ((a << 5) | (a >>> 27)) + e + W[i];
	                if (i < 20) {
	                    t += ((b & c) | (~b & d)) + 0x5a827999;
	                } else if (i < 40) {
	                    t += (b ^ c ^ d) + 0x6ed9eba1;
	                } else if (i < 60) {
	                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;
	                } else /* if (i < 80) */ {
	                    t += (b ^ c ^ d) - 0x359d3e2a;
	                }

	                e = d;
	                d = c;
	                c = (b << 30) | (b >>> 2);
	                b = a;
	                a = t;
	            }

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	            H[4] = (H[4] + e) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Return final computed hash
	            return this._hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA1('message');
	     *     var hash = CryptoJS.SHA1(wordArray);
	     */
	    C.SHA1 = Hasher._createHelper(SHA1);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA1(message, key);
	     */
	    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);
	}());


	return CryptoJS.SHA1;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/sha1.js?`)},"./node_modules/crypto-js/sha224.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./sha256 */ "./node_modules/crypto-js/sha256.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_algo = C.algo;
	    var SHA256 = C_algo.SHA256;

	    /**
	     * SHA-224 hash algorithm.
	     */
	    var SHA224 = C_algo.SHA224 = SHA256.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
	                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4
	            ]);
	        },

	        _doFinalize: function () {
	            var hash = SHA256._doFinalize.call(this);

	            hash.sigBytes -= 4;

	            return hash;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA224('message');
	     *     var hash = CryptoJS.SHA224(wordArray);
	     */
	    C.SHA224 = SHA256._createHelper(SHA224);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA224(message, key);
	     */
	    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);
	}());


	return CryptoJS.SHA224;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/sha224.js?`)},"./node_modules/crypto-js/sha256.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Initialization and round constants tables
	    var H = [];
	    var K = [];

	    // Compute constants
	    (function () {
	        function isPrime(n) {
	            var sqrtN = Math.sqrt(n);
	            for (var factor = 2; factor <= sqrtN; factor++) {
	                if (!(n % factor)) {
	                    return false;
	                }
	            }

	            return true;
	        }

	        function getFractionalBits(n) {
	            return ((n - (n | 0)) * 0x100000000) | 0;
	        }

	        var n = 2;
	        var nPrime = 0;
	        while (nPrime < 64) {
	            if (isPrime(n)) {
	                if (nPrime < 8) {
	                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));
	                }
	                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));

	                nPrime++;
	            }

	            n++;
	        }
	    }());

	    // Reusable object
	    var W = [];

	    /**
	     * SHA-256 hash algorithm.
	     */
	    var SHA256 = C_algo.SHA256 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init(H.slice(0));
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var H = this._hash.words;

	            // Working variables
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];
	            var e = H[4];
	            var f = H[5];
	            var g = H[6];
	            var h = H[7];

	            // Computation
	            for (var i = 0; i < 64; i++) {
	                if (i < 16) {
	                    W[i] = M[offset + i] | 0;
	                } else {
	                    var gamma0x = W[i - 15];
	                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^
	                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^
	                                   (gamma0x >>> 3);

	                    var gamma1x = W[i - 2];
	                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^
	                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^
	                                   (gamma1x >>> 10);

	                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
	                }

	                var ch  = (e & f) ^ (~e & g);
	                var maj = (a & b) ^ (a & c) ^ (b & c);

	                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));
	                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));

	                var t1 = h + sigma1 + ch + K[i] + W[i];
	                var t2 = sigma0 + maj;

	                h = g;
	                g = f;
	                f = e;
	                e = (d + t1) | 0;
	                d = c;
	                c = b;
	                b = a;
	                a = (t1 + t2) | 0;
	            }

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	            H[4] = (H[4] + e) | 0;
	            H[5] = (H[5] + f) | 0;
	            H[6] = (H[6] + g) | 0;
	            H[7] = (H[7] + h) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Return final computed hash
	            return this._hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA256('message');
	     *     var hash = CryptoJS.SHA256(wordArray);
	     */
	    C.SHA256 = Hasher._createHelper(SHA256);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA256(message, key);
	     */
	    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
	}(Math));


	return CryptoJS.SHA256;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/sha256.js?`)},"./node_modules/crypto-js/sha3.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./x64-core */ "./node_modules/crypto-js/x64-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_x64 = C.x64;
	    var X64Word = C_x64.Word;
	    var C_algo = C.algo;

	    // Constants tables
	    var RHO_OFFSETS = [];
	    var PI_INDEXES  = [];
	    var ROUND_CONSTANTS = [];

	    // Compute Constants
	    (function () {
	        // Compute rho offset constants
	        var x = 1, y = 0;
	        for (var t = 0; t < 24; t++) {
	            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;

	            var newX = y % 5;
	            var newY = (2 * x + 3 * y) % 5;
	            x = newX;
	            y = newY;
	        }

	        // Compute pi index constants
	        for (var x = 0; x < 5; x++) {
	            for (var y = 0; y < 5; y++) {
	                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;
	            }
	        }

	        // Compute round constants
	        var LFSR = 0x01;
	        for (var i = 0; i < 24; i++) {
	            var roundConstantMsw = 0;
	            var roundConstantLsw = 0;

	            for (var j = 0; j < 7; j++) {
	                if (LFSR & 0x01) {
	                    var bitPosition = (1 << j) - 1;
	                    if (bitPosition < 32) {
	                        roundConstantLsw ^= 1 << bitPosition;
	                    } else /* if (bitPosition >= 32) */ {
	                        roundConstantMsw ^= 1 << (bitPosition - 32);
	                    }
	                }

	                // Compute next LFSR
	                if (LFSR & 0x80) {
	                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1
	                    LFSR = (LFSR << 1) ^ 0x71;
	                } else {
	                    LFSR <<= 1;
	                }
	            }

	            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);
	        }
	    }());

	    // Reusable objects for temporary values
	    var T = [];
	    (function () {
	        for (var i = 0; i < 25; i++) {
	            T[i] = X64Word.create();
	        }
	    }());

	    /**
	     * SHA-3 hash algorithm.
	     */
	    var SHA3 = C_algo.SHA3 = Hasher.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} outputLength
	         *   The desired number of bits in the output hash.
	         *   Only values permitted are: 224, 256, 384, 512.
	         *   Default: 512
	         */
	        cfg: Hasher.cfg.extend({
	            outputLength: 512
	        }),

	        _doReset: function () {
	            var state = this._state = []
	            for (var i = 0; i < 25; i++) {
	                state[i] = new X64Word.init();
	            }

	            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcuts
	            var state = this._state;
	            var nBlockSizeLanes = this.blockSize / 2;

	            // Absorb
	            for (var i = 0; i < nBlockSizeLanes; i++) {
	                // Shortcuts
	                var M2i  = M[offset + 2 * i];
	                var M2i1 = M[offset + 2 * i + 1];

	                // Swap endian
	                M2i = (
	                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |
	                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)
	                );
	                M2i1 = (
	                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |
	                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)
	                );

	                // Absorb message into state
	                var lane = state[i];
	                lane.high ^= M2i1;
	                lane.low  ^= M2i;
	            }

	            // Rounds
	            for (var round = 0; round < 24; round++) {
	                // Theta
	                for (var x = 0; x < 5; x++) {
	                    // Mix column lanes
	                    var tMsw = 0, tLsw = 0;
	                    for (var y = 0; y < 5; y++) {
	                        var lane = state[x + 5 * y];
	                        tMsw ^= lane.high;
	                        tLsw ^= lane.low;
	                    }

	                    // Temporary values
	                    var Tx = T[x];
	                    Tx.high = tMsw;
	                    Tx.low  = tLsw;
	                }
	                for (var x = 0; x < 5; x++) {
	                    // Shortcuts
	                    var Tx4 = T[(x + 4) % 5];
	                    var Tx1 = T[(x + 1) % 5];
	                    var Tx1Msw = Tx1.high;
	                    var Tx1Lsw = Tx1.low;

	                    // Mix surrounding columns
	                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));
	                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));
	                    for (var y = 0; y < 5; y++) {
	                        var lane = state[x + 5 * y];
	                        lane.high ^= tMsw;
	                        lane.low  ^= tLsw;
	                    }
	                }

	                // Rho Pi
	                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {
	                    var tMsw;
	                    var tLsw;

	                    // Shortcuts
	                    var lane = state[laneIndex];
	                    var laneMsw = lane.high;
	                    var laneLsw = lane.low;
	                    var rhoOffset = RHO_OFFSETS[laneIndex];

	                    // Rotate lanes
	                    if (rhoOffset < 32) {
	                        tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));
	                        tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));
	                    } else /* if (rhoOffset >= 32) */ {
	                        tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));
	                        tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));
	                    }

	                    // Transpose lanes
	                    var TPiLane = T[PI_INDEXES[laneIndex]];
	                    TPiLane.high = tMsw;
	                    TPiLane.low  = tLsw;
	                }

	                // Rho pi at x = y = 0
	                var T0 = T[0];
	                var state0 = state[0];
	                T0.high = state0.high;
	                T0.low  = state0.low;

	                // Chi
	                for (var x = 0; x < 5; x++) {
	                    for (var y = 0; y < 5; y++) {
	                        // Shortcuts
	                        var laneIndex = x + 5 * y;
	                        var lane = state[laneIndex];
	                        var TLane = T[laneIndex];
	                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];
	                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];

	                        // Mix rows
	                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);
	                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);
	                    }
	                }

	                // Iota
	                var lane = state[0];
	                var roundConstant = ROUND_CONSTANTS[round];
	                lane.high ^= roundConstant.high;
	                lane.low  ^= roundConstant.low;
	            }
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;
	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;
	            var blockSizeBits = this.blockSize * 32;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);
	            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Shortcuts
	            var state = this._state;
	            var outputLengthBytes = this.cfg.outputLength / 8;
	            var outputLengthLanes = outputLengthBytes / 8;

	            // Squeeze
	            var hashWords = [];
	            for (var i = 0; i < outputLengthLanes; i++) {
	                // Shortcuts
	                var lane = state[i];
	                var laneMsw = lane.high;
	                var laneLsw = lane.low;

	                // Swap endian
	                laneMsw = (
	                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |
	                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)
	                );
	                laneLsw = (
	                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |
	                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)
	                );

	                // Squeeze state to retrieve hash
	                hashWords.push(laneLsw);
	                hashWords.push(laneMsw);
	            }

	            // Return final computed hash
	            return new WordArray.init(hashWords, outputLengthBytes);
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);

	            var state = clone._state = this._state.slice(0);
	            for (var i = 0; i < 25; i++) {
	                state[i] = state[i].clone();
	            }

	            return clone;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA3('message');
	     *     var hash = CryptoJS.SHA3(wordArray);
	     */
	    C.SHA3 = Hasher._createHelper(SHA3);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA3(message, key);
	     */
	    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);
	}(Math));


	return CryptoJS.SHA3;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/sha3.js?`)},"./node_modules/crypto-js/sha384.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./x64-core */ "./node_modules/crypto-js/x64-core.js"), __webpack_require__(/*! ./sha512 */ "./node_modules/crypto-js/sha512.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_x64 = C.x64;
	    var X64Word = C_x64.Word;
	    var X64WordArray = C_x64.WordArray;
	    var C_algo = C.algo;
	    var SHA512 = C_algo.SHA512;

	    /**
	     * SHA-384 hash algorithm.
	     */
	    var SHA384 = C_algo.SHA384 = SHA512.extend({
	        _doReset: function () {
	            this._hash = new X64WordArray.init([
	                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),
	                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),
	                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),
	                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)
	            ]);
	        },

	        _doFinalize: function () {
	            var hash = SHA512._doFinalize.call(this);

	            hash.sigBytes -= 16;

	            return hash;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA384('message');
	     *     var hash = CryptoJS.SHA384(wordArray);
	     */
	    C.SHA384 = SHA512._createHelper(SHA384);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA384(message, key);
	     */
	    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);
	}());


	return CryptoJS.SHA384;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/sha384.js?`)},"./node_modules/crypto-js/sha512.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./x64-core */ "./node_modules/crypto-js/x64-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Hasher = C_lib.Hasher;
	    var C_x64 = C.x64;
	    var X64Word = C_x64.Word;
	    var X64WordArray = C_x64.WordArray;
	    var C_algo = C.algo;

	    function X64Word_create() {
	        return X64Word.create.apply(X64Word, arguments);
	    }

	    // Constants
	    var K = [
	        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),
	        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),
	        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),
	        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),
	        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),
	        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),
	        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),
	        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),
	        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),
	        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),
	        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),
	        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),
	        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),
	        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),
	        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),
	        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),
	        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),
	        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),
	        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),
	        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),
	        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),
	        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),
	        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),
	        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),
	        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),
	        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),
	        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),
	        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),
	        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),
	        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),
	        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),
	        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),
	        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),
	        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),
	        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),
	        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),
	        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),
	        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),
	        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),
	        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)
	    ];

	    // Reusable objects
	    var W = [];
	    (function () {
	        for (var i = 0; i < 80; i++) {
	            W[i] = X64Word_create();
	        }
	    }());

	    /**
	     * SHA-512 hash algorithm.
	     */
	    var SHA512 = C_algo.SHA512 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new X64WordArray.init([
	                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),
	                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),
	                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),
	                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcuts
	            var H = this._hash.words;

	            var H0 = H[0];
	            var H1 = H[1];
	            var H2 = H[2];
	            var H3 = H[3];
	            var H4 = H[4];
	            var H5 = H[5];
	            var H6 = H[6];
	            var H7 = H[7];

	            var H0h = H0.high;
	            var H0l = H0.low;
	            var H1h = H1.high;
	            var H1l = H1.low;
	            var H2h = H2.high;
	            var H2l = H2.low;
	            var H3h = H3.high;
	            var H3l = H3.low;
	            var H4h = H4.high;
	            var H4l = H4.low;
	            var H5h = H5.high;
	            var H5l = H5.low;
	            var H6h = H6.high;
	            var H6l = H6.low;
	            var H7h = H7.high;
	            var H7l = H7.low;

	            // Working variables
	            var ah = H0h;
	            var al = H0l;
	            var bh = H1h;
	            var bl = H1l;
	            var ch = H2h;
	            var cl = H2l;
	            var dh = H3h;
	            var dl = H3l;
	            var eh = H4h;
	            var el = H4l;
	            var fh = H5h;
	            var fl = H5l;
	            var gh = H6h;
	            var gl = H6l;
	            var hh = H7h;
	            var hl = H7l;

	            // Rounds
	            for (var i = 0; i < 80; i++) {
	                var Wil;
	                var Wih;

	                // Shortcut
	                var Wi = W[i];

	                // Extend message
	                if (i < 16) {
	                    Wih = Wi.high = M[offset + i * 2]     | 0;
	                    Wil = Wi.low  = M[offset + i * 2 + 1] | 0;
	                } else {
	                    // Gamma0
	                    var gamma0x  = W[i - 15];
	                    var gamma0xh = gamma0x.high;
	                    var gamma0xl = gamma0x.low;
	                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);
	                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));

	                    // Gamma1
	                    var gamma1x  = W[i - 2];
	                    var gamma1xh = gamma1x.high;
	                    var gamma1xl = gamma1x.low;
	                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);
	                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));

	                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
	                    var Wi7  = W[i - 7];
	                    var Wi7h = Wi7.high;
	                    var Wi7l = Wi7.low;

	                    var Wi16  = W[i - 16];
	                    var Wi16h = Wi16.high;
	                    var Wi16l = Wi16.low;

	                    Wil = gamma0l + Wi7l;
	                    Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);
	                    Wil = Wil + gamma1l;
	                    Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);
	                    Wil = Wil + Wi16l;
	                    Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);

	                    Wi.high = Wih;
	                    Wi.low  = Wil;
	                }

	                var chh  = (eh & fh) ^ (~eh & gh);
	                var chl  = (el & fl) ^ (~el & gl);
	                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);
	                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);

	                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));
	                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));
	                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));
	                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));

	                // t1 = h + sigma1 + ch + K[i] + W[i]
	                var Ki  = K[i];
	                var Kih = Ki.high;
	                var Kil = Ki.low;

	                var t1l = hl + sigma1l;
	                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);
	                var t1l = t1l + chl;
	                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);
	                var t1l = t1l + Kil;
	                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);
	                var t1l = t1l + Wil;
	                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);

	                // t2 = sigma0 + maj
	                var t2l = sigma0l + majl;
	                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);

	                // Update working variables
	                hh = gh;
	                hl = gl;
	                gh = fh;
	                gl = fl;
	                fh = eh;
	                fl = el;
	                el = (dl + t1l) | 0;
	                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;
	                dh = ch;
	                dl = cl;
	                ch = bh;
	                cl = bl;
	                bh = ah;
	                bl = al;
	                al = (t1l + t2l) | 0;
	                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;
	            }

	            // Intermediate hash value
	            H0l = H0.low  = (H0l + al);
	            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));
	            H1l = H1.low  = (H1l + bl);
	            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));
	            H2l = H2.low  = (H2l + cl);
	            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));
	            H3l = H3.low  = (H3l + dl);
	            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));
	            H4l = H4.low  = (H4l + el);
	            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));
	            H5l = H5.low  = (H5l + fl);
	            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));
	            H6l = H6.low  = (H6l + gl);
	            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));
	            H7l = H7.low  = (H7l + hl);
	            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);
	            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Convert hash to 32-bit word array before returning
	            var hash = this._hash.toX32();

	            // Return final computed hash
	            return hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        },

	        blockSize: 1024/32
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA512('message');
	     *     var hash = CryptoJS.SHA512(wordArray);
	     */
	    C.SHA512 = Hasher._createHelper(SHA512);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA512(message, key);
	     */
	    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);
	}());


	return CryptoJS.SHA512;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/sha512.js?`)},"./node_modules/crypto-js/tripledes.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var BlockCipher = C_lib.BlockCipher;
	    var C_algo = C.algo;

	    // Permuted Choice 1 constants
	    var PC1 = [
	        57, 49, 41, 33, 25, 17, 9,  1,
	        58, 50, 42, 34, 26, 18, 10, 2,
	        59, 51, 43, 35, 27, 19, 11, 3,
	        60, 52, 44, 36, 63, 55, 47, 39,
	        31, 23, 15, 7,  62, 54, 46, 38,
	        30, 22, 14, 6,  61, 53, 45, 37,
	        29, 21, 13, 5,  28, 20, 12, 4
	    ];

	    // Permuted Choice 2 constants
	    var PC2 = [
	        14, 17, 11, 24, 1,  5,
	        3,  28, 15, 6,  21, 10,
	        23, 19, 12, 4,  26, 8,
	        16, 7,  27, 20, 13, 2,
	        41, 52, 31, 37, 47, 55,
	        30, 40, 51, 45, 33, 48,
	        44, 49, 39, 56, 34, 53,
	        46, 42, 50, 36, 29, 32
	    ];

	    // Cumulative bit shift constants
	    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];

	    // SBOXes and round permutation constants
	    var SBOX_P = [
	        {
	            0x0: 0x808200,
	            0x10000000: 0x8000,
	            0x20000000: 0x808002,
	            0x30000000: 0x2,
	            0x40000000: 0x200,
	            0x50000000: 0x808202,
	            0x60000000: 0x800202,
	            0x70000000: 0x800000,
	            0x80000000: 0x202,
	            0x90000000: 0x800200,
	            0xa0000000: 0x8200,
	            0xb0000000: 0x808000,
	            0xc0000000: 0x8002,
	            0xd0000000: 0x800002,
	            0xe0000000: 0x0,
	            0xf0000000: 0x8202,
	            0x8000000: 0x0,
	            0x18000000: 0x808202,
	            0x28000000: 0x8202,
	            0x38000000: 0x8000,
	            0x48000000: 0x808200,
	            0x58000000: 0x200,
	            0x68000000: 0x808002,
	            0x78000000: 0x2,
	            0x88000000: 0x800200,
	            0x98000000: 0x8200,
	            0xa8000000: 0x808000,
	            0xb8000000: 0x800202,
	            0xc8000000: 0x800002,
	            0xd8000000: 0x8002,
	            0xe8000000: 0x202,
	            0xf8000000: 0x800000,
	            0x1: 0x8000,
	            0x10000001: 0x2,
	            0x20000001: 0x808200,
	            0x30000001: 0x800000,
	            0x40000001: 0x808002,
	            0x50000001: 0x8200,
	            0x60000001: 0x200,
	            0x70000001: 0x800202,
	            0x80000001: 0x808202,
	            0x90000001: 0x808000,
	            0xa0000001: 0x800002,
	            0xb0000001: 0x8202,
	            0xc0000001: 0x202,
	            0xd0000001: 0x800200,
	            0xe0000001: 0x8002,
	            0xf0000001: 0x0,
	            0x8000001: 0x808202,
	            0x18000001: 0x808000,
	            0x28000001: 0x800000,
	            0x38000001: 0x200,
	            0x48000001: 0x8000,
	            0x58000001: 0x800002,
	            0x68000001: 0x2,
	            0x78000001: 0x8202,
	            0x88000001: 0x8002,
	            0x98000001: 0x800202,
	            0xa8000001: 0x202,
	            0xb8000001: 0x808200,
	            0xc8000001: 0x800200,
	            0xd8000001: 0x0,
	            0xe8000001: 0x8200,
	            0xf8000001: 0x808002
	        },
	        {
	            0x0: 0x40084010,
	            0x1000000: 0x4000,
	            0x2000000: 0x80000,
	            0x3000000: 0x40080010,
	            0x4000000: 0x40000010,
	            0x5000000: 0x40084000,
	            0x6000000: 0x40004000,
	            0x7000000: 0x10,
	            0x8000000: 0x84000,
	            0x9000000: 0x40004010,
	            0xa000000: 0x40000000,
	            0xb000000: 0x84010,
	            0xc000000: 0x80010,
	            0xd000000: 0x0,
	            0xe000000: 0x4010,
	            0xf000000: 0x40080000,
	            0x800000: 0x40004000,
	            0x1800000: 0x84010,
	            0x2800000: 0x10,
	            0x3800000: 0x40004010,
	            0x4800000: 0x40084010,
	            0x5800000: 0x40000000,
	            0x6800000: 0x80000,
	            0x7800000: 0x40080010,
	            0x8800000: 0x80010,
	            0x9800000: 0x0,
	            0xa800000: 0x4000,
	            0xb800000: 0x40080000,
	            0xc800000: 0x40000010,
	            0xd800000: 0x84000,
	            0xe800000: 0x40084000,
	            0xf800000: 0x4010,
	            0x10000000: 0x0,
	            0x11000000: 0x40080010,
	            0x12000000: 0x40004010,
	            0x13000000: 0x40084000,
	            0x14000000: 0x40080000,
	            0x15000000: 0x10,
	            0x16000000: 0x84010,
	            0x17000000: 0x4000,
	            0x18000000: 0x4010,
	            0x19000000: 0x80000,
	            0x1a000000: 0x80010,
	            0x1b000000: 0x40000010,
	            0x1c000000: 0x84000,
	            0x1d000000: 0x40004000,
	            0x1e000000: 0x40000000,
	            0x1f000000: 0x40084010,
	            0x10800000: 0x84010,
	            0x11800000: 0x80000,
	            0x12800000: 0x40080000,
	            0x13800000: 0x4000,
	            0x14800000: 0x40004000,
	            0x15800000: 0x40084010,
	            0x16800000: 0x10,
	            0x17800000: 0x40000000,
	            0x18800000: 0x40084000,
	            0x19800000: 0x40000010,
	            0x1a800000: 0x40004010,
	            0x1b800000: 0x80010,
	            0x1c800000: 0x0,
	            0x1d800000: 0x4010,
	            0x1e800000: 0x40080010,
	            0x1f800000: 0x84000
	        },
	        {
	            0x0: 0x104,
	            0x100000: 0x0,
	            0x200000: 0x4000100,
	            0x300000: 0x10104,
	            0x400000: 0x10004,
	            0x500000: 0x4000004,
	            0x600000: 0x4010104,
	            0x700000: 0x4010000,
	            0x800000: 0x4000000,
	            0x900000: 0x4010100,
	            0xa00000: 0x10100,
	            0xb00000: 0x4010004,
	            0xc00000: 0x4000104,
	            0xd00000: 0x10000,
	            0xe00000: 0x4,
	            0xf00000: 0x100,
	            0x80000: 0x4010100,
	            0x180000: 0x4010004,
	            0x280000: 0x0,
	            0x380000: 0x4000100,
	            0x480000: 0x4000004,
	            0x580000: 0x10000,
	            0x680000: 0x10004,
	            0x780000: 0x104,
	            0x880000: 0x4,
	            0x980000: 0x100,
	            0xa80000: 0x4010000,
	            0xb80000: 0x10104,
	            0xc80000: 0x10100,
	            0xd80000: 0x4000104,
	            0xe80000: 0x4010104,
	            0xf80000: 0x4000000,
	            0x1000000: 0x4010100,
	            0x1100000: 0x10004,
	            0x1200000: 0x10000,
	            0x1300000: 0x4000100,
	            0x1400000: 0x100,
	            0x1500000: 0x4010104,
	            0x1600000: 0x4000004,
	            0x1700000: 0x0,
	            0x1800000: 0x4000104,
	            0x1900000: 0x4000000,
	            0x1a00000: 0x4,
	            0x1b00000: 0x10100,
	            0x1c00000: 0x4010000,
	            0x1d00000: 0x104,
	            0x1e00000: 0x10104,
	            0x1f00000: 0x4010004,
	            0x1080000: 0x4000000,
	            0x1180000: 0x104,
	            0x1280000: 0x4010100,
	            0x1380000: 0x0,
	            0x1480000: 0x10004,
	            0x1580000: 0x4000100,
	            0x1680000: 0x100,
	            0x1780000: 0x4010004,
	            0x1880000: 0x10000,
	            0x1980000: 0x4010104,
	            0x1a80000: 0x10104,
	            0x1b80000: 0x4000004,
	            0x1c80000: 0x4000104,
	            0x1d80000: 0x4010000,
	            0x1e80000: 0x4,
	            0x1f80000: 0x10100
	        },
	        {
	            0x0: 0x80401000,
	            0x10000: 0x80001040,
	            0x20000: 0x401040,
	            0x30000: 0x80400000,
	            0x40000: 0x0,
	            0x50000: 0x401000,
	            0x60000: 0x80000040,
	            0x70000: 0x400040,
	            0x80000: 0x80000000,
	            0x90000: 0x400000,
	            0xa0000: 0x40,
	            0xb0000: 0x80001000,
	            0xc0000: 0x80400040,
	            0xd0000: 0x1040,
	            0xe0000: 0x1000,
	            0xf0000: 0x80401040,
	            0x8000: 0x80001040,
	            0x18000: 0x40,
	            0x28000: 0x80400040,
	            0x38000: 0x80001000,
	            0x48000: 0x401000,
	            0x58000: 0x80401040,
	            0x68000: 0x0,
	            0x78000: 0x80400000,
	            0x88000: 0x1000,
	            0x98000: 0x80401000,
	            0xa8000: 0x400000,
	            0xb8000: 0x1040,
	            0xc8000: 0x80000000,
	            0xd8000: 0x400040,
	            0xe8000: 0x401040,
	            0xf8000: 0x80000040,
	            0x100000: 0x400040,
	            0x110000: 0x401000,
	            0x120000: 0x80000040,
	            0x130000: 0x0,
	            0x140000: 0x1040,
	            0x150000: 0x80400040,
	            0x160000: 0x80401000,
	            0x170000: 0x80001040,
	            0x180000: 0x80401040,
	            0x190000: 0x80000000,
	            0x1a0000: 0x80400000,
	            0x1b0000: 0x401040,
	            0x1c0000: 0x80001000,
	            0x1d0000: 0x400000,
	            0x1e0000: 0x40,
	            0x1f0000: 0x1000,
	            0x108000: 0x80400000,
	            0x118000: 0x80401040,
	            0x128000: 0x0,
	            0x138000: 0x401000,
	            0x148000: 0x400040,
	            0x158000: 0x80000000,
	            0x168000: 0x80001040,
	            0x178000: 0x40,
	            0x188000: 0x80000040,
	            0x198000: 0x1000,
	            0x1a8000: 0x80001000,
	            0x1b8000: 0x80400040,
	            0x1c8000: 0x1040,
	            0x1d8000: 0x80401000,
	            0x1e8000: 0x400000,
	            0x1f8000: 0x401040
	        },
	        {
	            0x0: 0x80,
	            0x1000: 0x1040000,
	            0x2000: 0x40000,
	            0x3000: 0x20000000,
	            0x4000: 0x20040080,
	            0x5000: 0x1000080,
	            0x6000: 0x21000080,
	            0x7000: 0x40080,
	            0x8000: 0x1000000,
	            0x9000: 0x20040000,
	            0xa000: 0x20000080,
	            0xb000: 0x21040080,
	            0xc000: 0x21040000,
	            0xd000: 0x0,
	            0xe000: 0x1040080,
	            0xf000: 0x21000000,
	            0x800: 0x1040080,
	            0x1800: 0x21000080,
	            0x2800: 0x80,
	            0x3800: 0x1040000,
	            0x4800: 0x40000,
	            0x5800: 0x20040080,
	            0x6800: 0x21040000,
	            0x7800: 0x20000000,
	            0x8800: 0x20040000,
	            0x9800: 0x0,
	            0xa800: 0x21040080,
	            0xb800: 0x1000080,
	            0xc800: 0x20000080,
	            0xd800: 0x21000000,
	            0xe800: 0x1000000,
	            0xf800: 0x40080,
	            0x10000: 0x40000,
	            0x11000: 0x80,
	            0x12000: 0x20000000,
	            0x13000: 0x21000080,
	            0x14000: 0x1000080,
	            0x15000: 0x21040000,
	            0x16000: 0x20040080,
	            0x17000: 0x1000000,
	            0x18000: 0x21040080,
	            0x19000: 0x21000000,
	            0x1a000: 0x1040000,
	            0x1b000: 0x20040000,
	            0x1c000: 0x40080,
	            0x1d000: 0x20000080,
	            0x1e000: 0x0,
	            0x1f000: 0x1040080,
	            0x10800: 0x21000080,
	            0x11800: 0x1000000,
	            0x12800: 0x1040000,
	            0x13800: 0x20040080,
	            0x14800: 0x20000000,
	            0x15800: 0x1040080,
	            0x16800: 0x80,
	            0x17800: 0x21040000,
	            0x18800: 0x40080,
	            0x19800: 0x21040080,
	            0x1a800: 0x0,
	            0x1b800: 0x21000000,
	            0x1c800: 0x1000080,
	            0x1d800: 0x40000,
	            0x1e800: 0x20040000,
	            0x1f800: 0x20000080
	        },
	        {
	            0x0: 0x10000008,
	            0x100: 0x2000,
	            0x200: 0x10200000,
	            0x300: 0x10202008,
	            0x400: 0x10002000,
	            0x500: 0x200000,
	            0x600: 0x200008,
	            0x700: 0x10000000,
	            0x800: 0x0,
	            0x900: 0x10002008,
	            0xa00: 0x202000,
	            0xb00: 0x8,
	            0xc00: 0x10200008,
	            0xd00: 0x202008,
	            0xe00: 0x2008,
	            0xf00: 0x10202000,
	            0x80: 0x10200000,
	            0x180: 0x10202008,
	            0x280: 0x8,
	            0x380: 0x200000,
	            0x480: 0x202008,
	            0x580: 0x10000008,
	            0x680: 0x10002000,
	            0x780: 0x2008,
	            0x880: 0x200008,
	            0x980: 0x2000,
	            0xa80: 0x10002008,
	            0xb80: 0x10200008,
	            0xc80: 0x0,
	            0xd80: 0x10202000,
	            0xe80: 0x202000,
	            0xf80: 0x10000000,
	            0x1000: 0x10002000,
	            0x1100: 0x10200008,
	            0x1200: 0x10202008,
	            0x1300: 0x2008,
	            0x1400: 0x200000,
	            0x1500: 0x10000000,
	            0x1600: 0x10000008,
	            0x1700: 0x202000,
	            0x1800: 0x202008,
	            0x1900: 0x0,
	            0x1a00: 0x8,
	            0x1b00: 0x10200000,
	            0x1c00: 0x2000,
	            0x1d00: 0x10002008,
	            0x1e00: 0x10202000,
	            0x1f00: 0x200008,
	            0x1080: 0x8,
	            0x1180: 0x202000,
	            0x1280: 0x200000,
	            0x1380: 0x10000008,
	            0x1480: 0x10002000,
	            0x1580: 0x2008,
	            0x1680: 0x10202008,
	            0x1780: 0x10200000,
	            0x1880: 0x10202000,
	            0x1980: 0x10200008,
	            0x1a80: 0x2000,
	            0x1b80: 0x202008,
	            0x1c80: 0x200008,
	            0x1d80: 0x0,
	            0x1e80: 0x10000000,
	            0x1f80: 0x10002008
	        },
	        {
	            0x0: 0x100000,
	            0x10: 0x2000401,
	            0x20: 0x400,
	            0x30: 0x100401,
	            0x40: 0x2100401,
	            0x50: 0x0,
	            0x60: 0x1,
	            0x70: 0x2100001,
	            0x80: 0x2000400,
	            0x90: 0x100001,
	            0xa0: 0x2000001,
	            0xb0: 0x2100400,
	            0xc0: 0x2100000,
	            0xd0: 0x401,
	            0xe0: 0x100400,
	            0xf0: 0x2000000,
	            0x8: 0x2100001,
	            0x18: 0x0,
	            0x28: 0x2000401,
	            0x38: 0x2100400,
	            0x48: 0x100000,
	            0x58: 0x2000001,
	            0x68: 0x2000000,
	            0x78: 0x401,
	            0x88: 0x100401,
	            0x98: 0x2000400,
	            0xa8: 0x2100000,
	            0xb8: 0x100001,
	            0xc8: 0x400,
	            0xd8: 0x2100401,
	            0xe8: 0x1,
	            0xf8: 0x100400,
	            0x100: 0x2000000,
	            0x110: 0x100000,
	            0x120: 0x2000401,
	            0x130: 0x2100001,
	            0x140: 0x100001,
	            0x150: 0x2000400,
	            0x160: 0x2100400,
	            0x170: 0x100401,
	            0x180: 0x401,
	            0x190: 0x2100401,
	            0x1a0: 0x100400,
	            0x1b0: 0x1,
	            0x1c0: 0x0,
	            0x1d0: 0x2100000,
	            0x1e0: 0x2000001,
	            0x1f0: 0x400,
	            0x108: 0x100400,
	            0x118: 0x2000401,
	            0x128: 0x2100001,
	            0x138: 0x1,
	            0x148: 0x2000000,
	            0x158: 0x100000,
	            0x168: 0x401,
	            0x178: 0x2100400,
	            0x188: 0x2000001,
	            0x198: 0x2100000,
	            0x1a8: 0x0,
	            0x1b8: 0x2100401,
	            0x1c8: 0x100401,
	            0x1d8: 0x400,
	            0x1e8: 0x2000400,
	            0x1f8: 0x100001
	        },
	        {
	            0x0: 0x8000820,
	            0x1: 0x20000,
	            0x2: 0x8000000,
	            0x3: 0x20,
	            0x4: 0x20020,
	            0x5: 0x8020820,
	            0x6: 0x8020800,
	            0x7: 0x800,
	            0x8: 0x8020000,
	            0x9: 0x8000800,
	            0xa: 0x20800,
	            0xb: 0x8020020,
	            0xc: 0x820,
	            0xd: 0x0,
	            0xe: 0x8000020,
	            0xf: 0x20820,
	            0x80000000: 0x800,
	            0x80000001: 0x8020820,
	            0x80000002: 0x8000820,
	            0x80000003: 0x8000000,
	            0x80000004: 0x8020000,
	            0x80000005: 0x20800,
	            0x80000006: 0x20820,
	            0x80000007: 0x20,
	            0x80000008: 0x8000020,
	            0x80000009: 0x820,
	            0x8000000a: 0x20020,
	            0x8000000b: 0x8020800,
	            0x8000000c: 0x0,
	            0x8000000d: 0x8020020,
	            0x8000000e: 0x8000800,
	            0x8000000f: 0x20000,
	            0x10: 0x20820,
	            0x11: 0x8020800,
	            0x12: 0x20,
	            0x13: 0x800,
	            0x14: 0x8000800,
	            0x15: 0x8000020,
	            0x16: 0x8020020,
	            0x17: 0x20000,
	            0x18: 0x0,
	            0x19: 0x20020,
	            0x1a: 0x8020000,
	            0x1b: 0x8000820,
	            0x1c: 0x8020820,
	            0x1d: 0x20800,
	            0x1e: 0x820,
	            0x1f: 0x8000000,
	            0x80000010: 0x20000,
	            0x80000011: 0x800,
	            0x80000012: 0x8020020,
	            0x80000013: 0x20820,
	            0x80000014: 0x20,
	            0x80000015: 0x8020000,
	            0x80000016: 0x8000000,
	            0x80000017: 0x8000820,
	            0x80000018: 0x8020820,
	            0x80000019: 0x8000020,
	            0x8000001a: 0x8000800,
	            0x8000001b: 0x0,
	            0x8000001c: 0x20800,
	            0x8000001d: 0x820,
	            0x8000001e: 0x20020,
	            0x8000001f: 0x8020800
	        }
	    ];

	    // Masks that select the SBOX input
	    var SBOX_MASK = [
	        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,
	        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f
	    ];

	    /**
	     * DES block cipher algorithm.
	     */
	    var DES = C_algo.DES = BlockCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var key = this._key;
	            var keyWords = key.words;

	            // Select 56 bits according to PC1
	            var keyBits = [];
	            for (var i = 0; i < 56; i++) {
	                var keyBitPos = PC1[i] - 1;
	                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;
	            }

	            // Assemble 16 subkeys
	            var subKeys = this._subKeys = [];
	            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {
	                // Create subkey
	                var subKey = subKeys[nSubKey] = [];

	                // Shortcut
	                var bitShift = BIT_SHIFTS[nSubKey];

	                // Select 48 bits according to PC2
	                for (var i = 0; i < 24; i++) {
	                    // Select from the left 28 key bits
	                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);

	                    // Select from the right 28 key bits
	                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);
	                }

	                // Since each subkey is applied to an expanded 32-bit input,
	                // the subkey can be broken into 8 values scaled to 32-bits,
	                // which allows the key to be used without expansion
	                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);
	                for (var i = 1; i < 7; i++) {
	                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);
	                }
	                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);
	            }

	            // Compute inverse subkeys
	            var invSubKeys = this._invSubKeys = [];
	            for (var i = 0; i < 16; i++) {
	                invSubKeys[i] = subKeys[15 - i];
	            }
	        },

	        encryptBlock: function (M, offset) {
	            this._doCryptBlock(M, offset, this._subKeys);
	        },

	        decryptBlock: function (M, offset) {
	            this._doCryptBlock(M, offset, this._invSubKeys);
	        },

	        _doCryptBlock: function (M, offset, subKeys) {
	            // Get input
	            this._lBlock = M[offset];
	            this._rBlock = M[offset + 1];

	            // Initial permutation
	            exchangeLR.call(this, 4,  0x0f0f0f0f);
	            exchangeLR.call(this, 16, 0x0000ffff);
	            exchangeRL.call(this, 2,  0x33333333);
	            exchangeRL.call(this, 8,  0x00ff00ff);
	            exchangeLR.call(this, 1,  0x55555555);

	            // Rounds
	            for (var round = 0; round < 16; round++) {
	                // Shortcuts
	                var subKey = subKeys[round];
	                var lBlock = this._lBlock;
	                var rBlock = this._rBlock;

	                // Feistel function
	                var f = 0;
	                for (var i = 0; i < 8; i++) {
	                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];
	                }
	                this._lBlock = rBlock;
	                this._rBlock = lBlock ^ f;
	            }

	            // Undo swap from last round
	            var t = this._lBlock;
	            this._lBlock = this._rBlock;
	            this._rBlock = t;

	            // Final permutation
	            exchangeLR.call(this, 1,  0x55555555);
	            exchangeRL.call(this, 8,  0x00ff00ff);
	            exchangeRL.call(this, 2,  0x33333333);
	            exchangeLR.call(this, 16, 0x0000ffff);
	            exchangeLR.call(this, 4,  0x0f0f0f0f);

	            // Set output
	            M[offset] = this._lBlock;
	            M[offset + 1] = this._rBlock;
	        },

	        keySize: 64/32,

	        ivSize: 64/32,

	        blockSize: 64/32
	    });

	    // Swap bits across the left and right words
	    function exchangeLR(offset, mask) {
	        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;
	        this._rBlock ^= t;
	        this._lBlock ^= t << offset;
	    }

	    function exchangeRL(offset, mask) {
	        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;
	        this._lBlock ^= t;
	        this._rBlock ^= t << offset;
	    }

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);
	     */
	    C.DES = BlockCipher._createHelper(DES);

	    /**
	     * Triple-DES block cipher algorithm.
	     */
	    var TripleDES = C_algo.TripleDES = BlockCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var key = this._key;
	            var keyWords = key.words;
	            // Make sure the key length is valid (64, 128 or >= 192 bit)
	            if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {
	                throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');
	            }

	            // Extend the key according to the keying options defined in 3DES standard
	            var key1 = keyWords.slice(0, 2);
	            var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);
	            var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);

	            // Create DES instances
	            this._des1 = DES.createEncryptor(WordArray.create(key1));
	            this._des2 = DES.createEncryptor(WordArray.create(key2));
	            this._des3 = DES.createEncryptor(WordArray.create(key3));
	        },

	        encryptBlock: function (M, offset) {
	            this._des1.encryptBlock(M, offset);
	            this._des2.decryptBlock(M, offset);
	            this._des3.encryptBlock(M, offset);
	        },

	        decryptBlock: function (M, offset) {
	            this._des3.decryptBlock(M, offset);
	            this._des2.encryptBlock(M, offset);
	            this._des1.decryptBlock(M, offset);
	        },

	        keySize: 192/32,

	        ivSize: 64/32,

	        blockSize: 64/32
	    });

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);
	     */
	    C.TripleDES = BlockCipher._createHelper(TripleDES);
	}());


	return CryptoJS.TripleDES;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/tripledes.js?`)},"./node_modules/crypto-js/x64-core.js":function(module,exports,__webpack_require__){eval(`;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function (undefined) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var X32WordArray = C_lib.WordArray;

	    /**
	     * x64 namespace.
	     */
	    var C_x64 = C.x64 = {};

	    /**
	     * A 64-bit word.
	     */
	    var X64Word = C_x64.Word = Base.extend({
	        /**
	         * Initializes a newly created 64-bit word.
	         *
	         * @param {number} high The high 32 bits.
	         * @param {number} low The low 32 bits.
	         *
	         * @example
	         *
	         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
	         */
	        init: function (high, low) {
	            this.high = high;
	            this.low = low;
	        }

	        /**
	         * Bitwise NOTs this word.
	         *
	         * @return {X64Word} A new x64-Word object after negating.
	         *
	         * @example
	         *
	         *     var negated = x64Word.not();
	         */
	        // not: function () {
	            // var high = ~this.high;
	            // var low = ~this.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Bitwise ANDs this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to AND with this word.
	         *
	         * @return {X64Word} A new x64-Word object after ANDing.
	         *
	         * @example
	         *
	         *     var anded = x64Word.and(anotherX64Word);
	         */
	        // and: function (word) {
	            // var high = this.high & word.high;
	            // var low = this.low & word.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Bitwise ORs this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to OR with this word.
	         *
	         * @return {X64Word} A new x64-Word object after ORing.
	         *
	         * @example
	         *
	         *     var ored = x64Word.or(anotherX64Word);
	         */
	        // or: function (word) {
	            // var high = this.high | word.high;
	            // var low = this.low | word.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Bitwise XORs this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to XOR with this word.
	         *
	         * @return {X64Word} A new x64-Word object after XORing.
	         *
	         * @example
	         *
	         *     var xored = x64Word.xor(anotherX64Word);
	         */
	        // xor: function (word) {
	            // var high = this.high ^ word.high;
	            // var low = this.low ^ word.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Shifts this word n bits to the left.
	         *
	         * @param {number} n The number of bits to shift.
	         *
	         * @return {X64Word} A new x64-Word object after shifting.
	         *
	         * @example
	         *
	         *     var shifted = x64Word.shiftL(25);
	         */
	        // shiftL: function (n) {
	            // if (n < 32) {
	                // var high = (this.high << n) | (this.low >>> (32 - n));
	                // var low = this.low << n;
	            // } else {
	                // var high = this.low << (n - 32);
	                // var low = 0;
	            // }

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Shifts this word n bits to the right.
	         *
	         * @param {number} n The number of bits to shift.
	         *
	         * @return {X64Word} A new x64-Word object after shifting.
	         *
	         * @example
	         *
	         *     var shifted = x64Word.shiftR(7);
	         */
	        // shiftR: function (n) {
	            // if (n < 32) {
	                // var low = (this.low >>> n) | (this.high << (32 - n));
	                // var high = this.high >>> n;
	            // } else {
	                // var low = this.high >>> (n - 32);
	                // var high = 0;
	            // }

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Rotates this word n bits to the left.
	         *
	         * @param {number} n The number of bits to rotate.
	         *
	         * @return {X64Word} A new x64-Word object after rotating.
	         *
	         * @example
	         *
	         *     var rotated = x64Word.rotL(25);
	         */
	        // rotL: function (n) {
	            // return this.shiftL(n).or(this.shiftR(64 - n));
	        // },

	        /**
	         * Rotates this word n bits to the right.
	         *
	         * @param {number} n The number of bits to rotate.
	         *
	         * @return {X64Word} A new x64-Word object after rotating.
	         *
	         * @example
	         *
	         *     var rotated = x64Word.rotR(7);
	         */
	        // rotR: function (n) {
	            // return this.shiftR(n).or(this.shiftL(64 - n));
	        // },

	        /**
	         * Adds this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to add with this word.
	         *
	         * @return {X64Word} A new x64-Word object after adding.
	         *
	         * @example
	         *
	         *     var added = x64Word.add(anotherX64Word);
	         */
	        // add: function (word) {
	            // var low = (this.low + word.low) | 0;
	            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
	            // var high = (this.high + word.high + carry) | 0;

	            // return X64Word.create(high, low);
	        // }
	    });

	    /**
	     * An array of 64-bit words.
	     *
	     * @property {Array} words The array of CryptoJS.x64.Word objects.
	     * @property {number} sigBytes The number of significant bytes in this word array.
	     */
	    var X64WordArray = C_x64.WordArray = Base.extend({
	        /**
	         * Initializes a newly created word array.
	         *
	         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
	         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.x64.WordArray.create();
	         *
	         *     var wordArray = CryptoJS.x64.WordArray.create([
	         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
	         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
	         *     ]);
	         *
	         *     var wordArray = CryptoJS.x64.WordArray.create([
	         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
	         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
	         *     ], 10);
	         */
	        init: function (words, sigBytes) {
	            words = this.words = words || [];

	            if (sigBytes != undefined) {
	                this.sigBytes = sigBytes;
	            } else {
	                this.sigBytes = words.length * 8;
	            }
	        },

	        /**
	         * Converts this 64-bit word array to a 32-bit word array.
	         *
	         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
	         *
	         * @example
	         *
	         *     var x32WordArray = x64WordArray.toX32();
	         */
	        toX32: function () {
	            // Shortcuts
	            var x64Words = this.words;
	            var x64WordsLength = x64Words.length;

	            // Convert
	            var x32Words = [];
	            for (var i = 0; i < x64WordsLength; i++) {
	                var x64Word = x64Words[i];
	                x32Words.push(x64Word.high);
	                x32Words.push(x64Word.low);
	            }

	            return X32WordArray.create(x32Words, this.sigBytes);
	        },

	        /**
	         * Creates a copy of this word array.
	         *
	         * @return {X64WordArray} The clone.
	         *
	         * @example
	         *
	         *     var clone = x64WordArray.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);

	            // Clone "words" array
	            var words = clone.words = this.words.slice(0);

	            // Clone each X64Word object
	            var wordsLength = words.length;
	            for (var i = 0; i < wordsLength; i++) {
	                words[i] = words[i].clone();
	            }

	            return clone;
	        }
	    });
	}());


	return CryptoJS;

}));

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/crypto-js/x64-core.js?`)},"./node_modules/deep-equal/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var assign = __webpack_require__(/*! object.assign */ "./node_modules/object.assign/index.js");
var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");
var flags = __webpack_require__(/*! regexp.prototype.flags */ "./node_modules/regexp.prototype.flags/index.js");
var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");
var getIterator = __webpack_require__(/*! es-get-iterator */ "./node_modules/es-get-iterator/index.js");
var getSideChannel = __webpack_require__(/*! side-channel */ "./node_modules/side-channel/index.js");
var is = __webpack_require__(/*! object-is */ "./node_modules/object-is/index.js");
var isArguments = __webpack_require__(/*! is-arguments */ "./node_modules/is-arguments/index.js");
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js");
var isArrayBuffer = __webpack_require__(/*! is-array-buffer */ "./node_modules/is-array-buffer/index.js");
var isDate = __webpack_require__(/*! is-date-object */ "./node_modules/is-date-object/index.js");
var isRegex = __webpack_require__(/*! is-regex */ "./node_modules/is-regex/index.js");
var isSharedArrayBuffer = __webpack_require__(/*! is-shared-array-buffer */ "./node_modules/is-shared-array-buffer/index.js");
var objectKeys = __webpack_require__(/*! object-keys */ "./node_modules/object-keys/index.js");
var whichBoxedPrimitive = __webpack_require__(/*! which-boxed-primitive */ "./node_modules/which-boxed-primitive/index.js");
var whichCollection = __webpack_require__(/*! which-collection */ "./node_modules/which-collection/index.js");
var whichTypedArray = __webpack_require__(/*! which-typed-array */ "./node_modules/which-typed-array/index.js");
var byteLength = __webpack_require__(/*! array-buffer-byte-length */ "./node_modules/array-buffer-byte-length/index.js");

var sabByteLength = callBound('SharedArrayBuffer.prototype.byteLength', true);

var $getTime = callBound('Date.prototype.getTime');
var gPO = Object.getPrototypeOf;
var $objToString = callBound('Object.prototype.toString');

var $Set = GetIntrinsic('%Set%', true);
var $mapHas = callBound('Map.prototype.has', true);
var $mapGet = callBound('Map.prototype.get', true);
var $mapSize = callBound('Map.prototype.size', true);
var $setAdd = callBound('Set.prototype.add', true);
var $setDelete = callBound('Set.prototype.delete', true);
var $setHas = callBound('Set.prototype.has', true);
var $setSize = callBound('Set.prototype.size', true);

// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L401-L414
function setHasEqualElement(set, val1, opts, channel) {
  var i = getIterator(set);
  var result;
  while ((result = i.next()) && !result.done) {
    if (internalDeepEqual(val1, result.value, opts, channel)) { // eslint-disable-line no-use-before-define
      // Remove the matching element to make sure we do not check that again.
      $setDelete(set, result.value);
      return true;
    }
  }

  return false;
}

// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L416-L439
function findLooseMatchingPrimitives(prim) {
  if (typeof prim === 'undefined') {
    return null;
  }
  if (typeof prim === 'object') { // Only pass in null as object!
    return void 0;
  }
  if (typeof prim === 'symbol') {
    return false;
  }
  if (typeof prim === 'string' || typeof prim === 'number') {
    // Loose equal entries exist only if the string is possible to convert to a regular number and not NaN.
    return +prim === +prim; // eslint-disable-line no-implicit-coercion
  }
  return true;
}

// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L449-L460
function mapMightHaveLoosePrim(a, b, prim, item, opts, channel) {
  var altValue = findLooseMatchingPrimitives(prim);
  if (altValue != null) {
    return altValue;
  }
  var curB = $mapGet(b, altValue);
  var looseOpts = assign({}, opts, { strict: false });
  if (
    (typeof curB === 'undefined' && !$mapHas(b, altValue))
    // eslint-disable-next-line no-use-before-define
    || !internalDeepEqual(item, curB, looseOpts, channel)
  ) {
    return false;
  }
  // eslint-disable-next-line no-use-before-define
  return !$mapHas(a, altValue) && internalDeepEqual(item, curB, looseOpts, channel);
}

// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L441-L447
function setMightHaveLoosePrim(a, b, prim) {
  var altValue = findLooseMatchingPrimitives(prim);
  if (altValue != null) {
    return altValue;
  }

  return $setHas(b, altValue) && !$setHas(a, altValue);
}

// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L518-L533
function mapHasEqualEntry(set, map, key1, item1, opts, channel) {
  var i = getIterator(set);
  var result;
  var key2;
  while ((result = i.next()) && !result.done) {
    key2 = result.value;
    if (
      // eslint-disable-next-line no-use-before-define
      internalDeepEqual(key1, key2, opts, channel)
      // eslint-disable-next-line no-use-before-define
      && internalDeepEqual(item1, $mapGet(map, key2), opts, channel)
    ) {
      $setDelete(set, key2);
      return true;
    }
  }

  return false;
}

function internalDeepEqual(actual, expected, options, channel) {
  var opts = options || {};

  // 7.1. All identical values are equivalent, as determined by ===.
  if (opts.strict ? is(actual, expected) : actual === expected) {
    return true;
  }

  var actualBoxed = whichBoxedPrimitive(actual);
  var expectedBoxed = whichBoxedPrimitive(expected);
  if (actualBoxed !== expectedBoxed) {
    return false;
  }

  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.
  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {
    return opts.strict ? is(actual, expected) : actual == expected; // eslint-disable-line eqeqeq
  }

  /*
   * 7.4. For all other Object pairs, including Array objects, equivalence is
   * determined by having the same number of owned properties (as verified
   * with Object.prototype.hasOwnProperty.call), the same set of keys
   * (although not necessarily the same order), equivalent values for every
   * corresponding key, and an identical 'prototype' property. Note: this
   * accounts for both named and indexed properties on Arrays.
   */
  // see https://github.com/nodejs/node/commit/d3aafd02efd3a403d646a3044adcf14e63a88d32 for memos/channel inspiration

  var hasActual = channel.has(actual);
  var hasExpected = channel.has(expected);
  var sentinel;
  if (hasActual && hasExpected) {
    if (channel.get(actual) === channel.get(expected)) {
      return true;
    }
  } else {
    sentinel = {};
  }
  if (!hasActual) { channel.set(actual, sentinel); }
  if (!hasExpected) { channel.set(expected, sentinel); }

  // eslint-disable-next-line no-use-before-define
  return objEquiv(actual, expected, opts, channel);
}

function isBuffer(x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {
    return false;
  }
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') {
    return false;
  }

  return !!(x.constructor && x.constructor.isBuffer && x.constructor.isBuffer(x));
}

function setEquiv(a, b, opts, channel) {
  if ($setSize(a) !== $setSize(b)) {
    return false;
  }
  var iA = getIterator(a);
  var iB = getIterator(b);
  var resultA;
  var resultB;
  var set;
  while ((resultA = iA.next()) && !resultA.done) {
    if (resultA.value && typeof resultA.value === 'object') {
      if (!set) { set = new $Set(); }
      $setAdd(set, resultA.value);
    } else if (!$setHas(b, resultA.value)) {
      if (opts.strict) { return false; }
      if (!setMightHaveLoosePrim(a, b, resultA.value)) {
        return false;
      }
      if (!set) { set = new $Set(); }
      $setAdd(set, resultA.value);
    }
  }
  if (set) {
    while ((resultB = iB.next()) && !resultB.done) {
      // We have to check if a primitive value is already matching and only if it's not, go hunting for it.
      if (resultB.value && typeof resultB.value === 'object') {
        if (!setHasEqualElement(set, resultB.value, opts.strict, channel)) {
          return false;
        }
      } else if (
        !opts.strict
        && !$setHas(a, resultB.value)
        && !setHasEqualElement(set, resultB.value, opts.strict, channel)
      ) {
        return false;
      }
    }
    return $setSize(set) === 0;
  }
  return true;
}

function mapEquiv(a, b, opts, channel) {
  if ($mapSize(a) !== $mapSize(b)) {
    return false;
  }
  var iA = getIterator(a);
  var iB = getIterator(b);
  var resultA;
  var resultB;
  var set;
  var key;
  var item1;
  var item2;
  while ((resultA = iA.next()) && !resultA.done) {
    key = resultA.value[0];
    item1 = resultA.value[1];
    if (key && typeof key === 'object') {
      if (!set) { set = new $Set(); }
      $setAdd(set, key);
    } else {
      item2 = $mapGet(b, key);
      if ((typeof item2 === 'undefined' && !$mapHas(b, key)) || !internalDeepEqual(item1, item2, opts, channel)) {
        if (opts.strict) {
          return false;
        }
        if (!mapMightHaveLoosePrim(a, b, key, item1, opts, channel)) {
          return false;
        }
        if (!set) { set = new $Set(); }
        $setAdd(set, key);
      }
    }
  }

  if (set) {
    while ((resultB = iB.next()) && !resultB.done) {
      key = resultB.value[0];
      item2 = resultB.value[1];
      if (key && typeof key === 'object') {
        if (!mapHasEqualEntry(set, a, key, item2, opts, channel)) {
          return false;
        }
      } else if (
        !opts.strict
        && (!a.has(key) || !internalDeepEqual($mapGet(a, key), item2, opts, channel))
        && !mapHasEqualEntry(set, a, key, item2, assign({}, opts, { strict: false }), channel)
      ) {
        return false;
      }
    }
    return $setSize(set) === 0;
  }
  return true;
}

function objEquiv(a, b, opts, channel) {
  /* eslint max-statements: [2, 100], max-lines-per-function: [2, 120], max-depth: [2, 5], max-lines: [2, 400] */
  var i, key;

  if (typeof a !== typeof b) { return false; }
  if (a == null || b == null) { return false; }

  if ($objToString(a) !== $objToString(b)) { return false; }

  if (isArguments(a) !== isArguments(b)) { return false; }

  var aIsArray = isArray(a);
  var bIsArray = isArray(b);
  if (aIsArray !== bIsArray) { return false; }

  // TODO: replace when a cross-realm brand check is available
  var aIsError = a instanceof Error;
  var bIsError = b instanceof Error;
  if (aIsError !== bIsError) { return false; }
  if (aIsError || bIsError) {
    if (a.name !== b.name || a.message !== b.message) { return false; }
  }

  var aIsRegex = isRegex(a);
  var bIsRegex = isRegex(b);
  if (aIsRegex !== bIsRegex) { return false; }
  if ((aIsRegex || bIsRegex) && (a.source !== b.source || flags(a) !== flags(b))) {
    return false;
  }

  var aIsDate = isDate(a);
  var bIsDate = isDate(b);
  if (aIsDate !== bIsDate) { return false; }
  if (aIsDate || bIsDate) { // && would work too, because both are true or both false here
    if ($getTime(a) !== $getTime(b)) { return false; }
  }
  if (opts.strict && gPO && gPO(a) !== gPO(b)) { return false; }

  var aWhich = whichTypedArray(a);
  var bWhich = whichTypedArray(b);
  if (aWhich !== bWhich) {
    return false;
  }
  if (aWhich || bWhich) { // && would work too, because both are true or both false here
    if (a.length !== b.length) { return false; }
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) { return false; }
    }
    return true;
  }

  var aIsBuffer = isBuffer(a);
  var bIsBuffer = isBuffer(b);
  if (aIsBuffer !== bIsBuffer) { return false; }
  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here
    if (a.length !== b.length) { return false; }
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) { return false; }
    }
    return true;
  }

  var aIsArrayBuffer = isArrayBuffer(a);
  var bIsArrayBuffer = isArrayBuffer(b);
  if (aIsArrayBuffer !== bIsArrayBuffer) { return false; }
  if (aIsArrayBuffer || bIsArrayBuffer) { // && would work too, because both are true or both false here
    if (byteLength(a) !== byteLength(b)) { return false; }
    return typeof Uint8Array === 'function' && internalDeepEqual(new Uint8Array(a), new Uint8Array(b), opts, channel);
  }

  var aIsSAB = isSharedArrayBuffer(a);
  var bIsSAB = isSharedArrayBuffer(b);
  if (aIsSAB !== bIsSAB) { return false; }
  if (aIsSAB || bIsSAB) { // && would work too, because both are true or both false here
    if (sabByteLength(a) !== sabByteLength(b)) { return false; }
    return typeof Uint8Array === 'function' && internalDeepEqual(new Uint8Array(a), new Uint8Array(b), opts, channel);
  }

  if (typeof a !== typeof b) { return false; }

  var ka = objectKeys(a);
  var kb = objectKeys(b);
  // having the same number of owned properties (keys incorporates hasOwnProperty)
  if (ka.length !== kb.length) { return false; }

  // the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  // ~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i]) { return false; } // eslint-disable-line eqeqeq
  }

  // equivalent values for every corresponding key, and ~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!internalDeepEqual(a[key], b[key], opts, channel)) { return false; }
  }

  var aCollection = whichCollection(a);
  var bCollection = whichCollection(b);
  if (aCollection !== bCollection) {
    return false;
  }
  if (aCollection === 'Set' || bCollection === 'Set') { // aCollection === bCollection
    return setEquiv(a, b, opts, channel);
  }
  if (aCollection === 'Map') { // aCollection === bCollection
    return mapEquiv(a, b, opts, channel);
  }

  return true;
}

module.exports = function deepEqual(a, b, opts) {
  return internalDeepEqual(a, b, opts, getSideChannel());
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/deep-equal/index.js?`)},"./node_modules/define-data-property/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var $defineProperty = __webpack_require__(/*! es-define-property */ "./node_modules/es-define-property/index.js");

var $SyntaxError = __webpack_require__(/*! es-errors/syntax */ "./node_modules/es-errors/syntax.js");
var $TypeError = __webpack_require__(/*! es-errors/type */ "./node_modules/es-errors/type.js");

var gopd = __webpack_require__(/*! gopd */ "./node_modules/gopd/index.js");

/** @type {import('.')} */
module.exports = function defineDataProperty(
	obj,
	property,
	value
) {
	if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {
		throw new $TypeError('\`obj\` must be an object or a function\`');
	}
	if (typeof property !== 'string' && typeof property !== 'symbol') {
		throw new $TypeError('\`property\` must be a string or a symbol\`');
	}
	if (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {
		throw new $TypeError('\`nonEnumerable\`, if provided, must be a boolean or null');
	}
	if (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {
		throw new $TypeError('\`nonWritable\`, if provided, must be a boolean or null');
	}
	if (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {
		throw new $TypeError('\`nonConfigurable\`, if provided, must be a boolean or null');
	}
	if (arguments.length > 6 && typeof arguments[6] !== 'boolean') {
		throw new $TypeError('\`loose\`, if provided, must be a boolean');
	}

	var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
	var nonWritable = arguments.length > 4 ? arguments[4] : null;
	var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
	var loose = arguments.length > 6 ? arguments[6] : false;

	/* @type {false | TypedPropertyDescriptor<unknown>} */
	var desc = !!gopd && gopd(obj, property);

	if ($defineProperty) {
		$defineProperty(obj, property, {
			configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
			enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
			value: value,
			writable: nonWritable === null && desc ? desc.writable : !nonWritable
		});
	} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {
		// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable
		obj[property] = value; // eslint-disable-line no-param-reassign
	} else {
		throw new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');
	}
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/define-data-property/index.js?`)},"./node_modules/define-properties/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var keys = __webpack_require__(/*! object-keys */ "./node_modules/object-keys/index.js");
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var defineDataProperty = __webpack_require__(/*! define-data-property */ "./node_modules/define-data-property/index.js");

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var supportsDescriptors = __webpack_require__(/*! has-property-descriptors */ "./node_modules/has-property-descriptors/index.js")();

var defineProperty = function (object, name, value, predicate) {
	if (name in object) {
		if (predicate === true) {
			if (object[name] === value) {
				return;
			}
		} else if (!isFunction(predicate) || !predicate()) {
			return;
		}
	}

	if (supportsDescriptors) {
		defineDataProperty(object, name, value, true);
	} else {
		defineDataProperty(object, name, value);
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/define-properties/index.js?`)},"./node_modules/dfa/index.js":module=>{"use strict";eval(`

var INITIAL_STATE = 1;
var FAIL_STATE = 0;
/**
 * A StateMachine represents a deterministic finite automaton.
 * It can perform matches over a sequence of values, similar to a regular expression.
 */

class StateMachine {
  constructor(dfa) {
    this.stateTable = dfa.stateTable;
    this.accepting = dfa.accepting;
    this.tags = dfa.tags;
  }
  /**
   * Returns an iterable object that yields pattern matches over the input sequence.
   * Matches are of the form [startIndex, endIndex, tags].
   */


  match(str) {
    var self = this;
    return {
      *[Symbol.iterator]() {
        var state = INITIAL_STATE;
        var startRun = null;
        var lastAccepting = null;
        var lastState = null;

        for (var p = 0; p < str.length; p++) {
          var c = str[p];
          lastState = state;
          state = self.stateTable[state][c];

          if (state === FAIL_STATE) {
            // yield the last match if any
            if (startRun != null && lastAccepting != null && lastAccepting >= startRun) {
              yield [startRun, lastAccepting, self.tags[lastState]];
            } // reset the state as if we started over from the initial state


            state = self.stateTable[INITIAL_STATE][c];
            startRun = null;
          } // start a run if not in the failure state


          if (state !== FAIL_STATE && startRun == null) {
            startRun = p;
          } // if accepting, mark the potential match end


          if (self.accepting[state]) {
            lastAccepting = p;
          } // reset the state to the initial state if we get into the failure state


          if (state === FAIL_STATE) {
            state = INITIAL_STATE;
          }
        } // yield the last match if any


        if (startRun != null && lastAccepting != null && lastAccepting >= startRun) {
          yield [startRun, lastAccepting, self.tags[state]];
        }
      }

    };
  }
  /**
   * For each match over the input sequence, action functions matching
   * the tag definitions in the input pattern are called with the startIndex,
   * endIndex, and sub-match sequence.
   */


  apply(str, actions) {
    for (var [start, end, tags] of this.match(str)) {
      for (var tag of tags) {
        if (typeof actions[tag] === 'function') {
          actions[tag](start, end, str.slice(start, end + 1));
        }
      }
    }
  }

}

module.exports = StateMachine;
//# sourceMappingURL=index.js.map


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/dfa/index.js?`)},"./node_modules/es-define-property/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");

/** @type {import('.')} */
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;
if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = false;
	}
}

module.exports = $defineProperty;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/es-define-property/index.js?`)},"./node_modules/es-errors/eval.js":module=>{"use strict";eval(`

/** @type {import('./eval')} */
module.exports = EvalError;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/es-errors/eval.js?`)},"./node_modules/es-errors/index.js":module=>{"use strict";eval(`

/** @type {import('.')} */
module.exports = Error;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/es-errors/index.js?`)},"./node_modules/es-errors/range.js":module=>{"use strict";eval(`

/** @type {import('./range')} */
module.exports = RangeError;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/es-errors/range.js?`)},"./node_modules/es-errors/ref.js":module=>{"use strict";eval(`

/** @type {import('./ref')} */
module.exports = ReferenceError;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/es-errors/ref.js?`)},"./node_modules/es-errors/syntax.js":module=>{"use strict";eval(`

/** @type {import('./syntax')} */
module.exports = SyntaxError;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/es-errors/syntax.js?`)},"./node_modules/es-errors/type.js":module=>{"use strict";eval(`

/** @type {import('./type')} */
module.exports = TypeError;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/es-errors/type.js?`)},"./node_modules/es-errors/uri.js":module=>{"use strict";eval(`

/** @type {import('./uri')} */
module.exports = URIError;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/es-errors/uri.js?`)},"./node_modules/events/events.js":module=>{"use strict";eval(`// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the \`throw\` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign \`events\` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have \`error\` event semantics like Node
    // EventEmitters, we do not listen for \`error\` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin \`{ once: true }\` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/events/events.js?`)},"./node_modules/file-saver/dist/FileSaver.min.js":function(module,exports,__webpack_require__){eval(`var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(a,b){if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (b),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}})(this,function(){"use strict";function b(a,b){return"undefined"==typeof b?b={autoBom:!1}:"object"!=typeof b&&(console.warn("Deprecated: Expected third argument to be a object"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob(["\\uFEFF",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open("GET",a),d.responseType="blob",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error("could not download file")},d.send()}function d(a){var b=new XMLHttpRequest;b.open("HEAD",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent("click"))}catch(c){var b=document.createEvent("MouseEvents");b.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof __webpack_require__.g&&__webpack_require__.g.global===__webpack_require__.g?__webpack_require__.g:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||("object"!=typeof window||window!==f?function(){}:"download"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement("a");g=g||b.name||"download",j.download=g,j.rel="noopener","string"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target="_blank")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:"msSaveOrOpenBlob"in navigator?function(f,g,h){if(g=g||f.name||"download","string"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement("a");i.href=f,i.target="_blank",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open("","_blank"),g&&(g.document.title=g.document.body.innerText="downloading..."),"string"==typeof b)return c(b,d,e);var h="application/octet-stream"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&"undefined"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,"data:attachment/file;"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g, true&&(module.exports=g)});

//# sourceMappingURL=FileSaver.min.js.map

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/file-saver/dist/FileSaver.min.js?`)},"./node_modules/fontkit/node_modules/@swc/helpers/src/_apply_decorated_descriptor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _applyDecoratedDescriptor)
/* harmony export */ });
function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator ? (decorator(target, property, desc) || desc) : desc;
  }, desc);

  var hasAccessor = Object.prototype.hasOwnProperty.call(desc, 'get') || Object.prototype.hasOwnProperty.call(desc, 'set');
  if (context && desc.initializer !== void 0 && !hasAccessor) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (hasAccessor) {
    delete desc.writable;
    delete desc.initializer;
    delete desc.value;
  }
  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/fontkit/node_modules/@swc/helpers/src/_apply_decorated_descriptor.js?`)},"./node_modules/for-each/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var isCallable = __webpack_require__(/*! is-callable */ "./node_modules/is-callable/index.js");

var toStr = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

var forEachArray = function forEachArray(array, iterator, receiver) {
    for (var i = 0, len = array.length; i < len; i++) {
        if (hasOwnProperty.call(array, i)) {
            if (receiver == null) {
                iterator(array[i], i, array);
            } else {
                iterator.call(receiver, array[i], i, array);
            }
        }
    }
};

var forEachString = function forEachString(string, iterator, receiver) {
    for (var i = 0, len = string.length; i < len; i++) {
        // no such thing as a sparse string.
        if (receiver == null) {
            iterator(string.charAt(i), i, string);
        } else {
            iterator.call(receiver, string.charAt(i), i, string);
        }
    }
};

var forEachObject = function forEachObject(object, iterator, receiver) {
    for (var k in object) {
        if (hasOwnProperty.call(object, k)) {
            if (receiver == null) {
                iterator(object[k], k, object);
            } else {
                iterator.call(receiver, object[k], k, object);
            }
        }
    }
};

var forEach = function forEach(list, iterator, thisArg) {
    if (!isCallable(iterator)) {
        throw new TypeError('iterator must be a function');
    }

    var receiver;
    if (arguments.length >= 3) {
        receiver = thisArg;
    }

    if (toStr.call(list) === '[object Array]') {
        forEachArray(list, iterator, receiver);
    } else if (typeof list === 'string') {
        forEachString(list, iterator, receiver);
    } else {
        forEachObject(list, iterator, receiver);
    }
};

module.exports = forEach;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/for-each/index.js?`)},"./node_modules/function-bind/implementation.js":module=>{"use strict";eval(`

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var toStr = Object.prototype.toString;
var max = Math.max;
var funcType = '[object Function]';

var concatty = function concatty(a, b) {
    var arr = [];

    for (var i = 0; i < a.length; i += 1) {
        arr[i] = a[i];
    }
    for (var j = 0; j < b.length; j += 1) {
        arr[j + a.length] = b[j];
    }

    return arr;
};

var slicy = function slicy(arrLike, offset) {
    var arr = [];
    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {
        arr[j] = arrLike[i];
    }
    return arr;
};

var joiny = function (arr, joiner) {
    var str = '';
    for (var i = 0; i < arr.length; i += 1) {
        str += arr[i];
        if (i + 1 < arr.length) {
            str += joiner;
        }
    }
    return str;
};

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slicy(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                concatty(args, arguments)
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        }
        return target.apply(
            that,
            concatty(args, arguments)
        );

    };

    var boundLength = max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs[i] = '$' + i;
    }

    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/function-bind/implementation.js?`)},"./node_modules/function-bind/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/function-bind/implementation.js");

module.exports = Function.prototype.bind || implementation;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/function-bind/index.js?`)},"./node_modules/functions-have-names/index.js":module=>{"use strict";eval(`

var functionsHaveNames = function functionsHaveNames() {
	return typeof function f() {}.name === 'string';
};

var gOPD = Object.getOwnPropertyDescriptor;
if (gOPD) {
	try {
		gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		gOPD = null;
	}
}

functionsHaveNames.functionsHaveConfigurableNames = function functionsHaveConfigurableNames() {
	if (!functionsHaveNames() || !gOPD) {
		return false;
	}
	var desc = gOPD(function () {}, 'name');
	return !!desc && !!desc.configurable;
};

var $bind = Function.prototype.bind;

functionsHaveNames.boundFunctionsHaveNames = function boundFunctionsHaveNames() {
	return functionsHaveNames() && typeof $bind === 'function' && function f() {}.bind().name !== '';
};

module.exports = functionsHaveNames;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/functions-have-names/index.js?`)},"./node_modules/get-intrinsic/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var undefined;

var $Error = __webpack_require__(/*! es-errors */ "./node_modules/es-errors/index.js");
var $EvalError = __webpack_require__(/*! es-errors/eval */ "./node_modules/es-errors/eval.js");
var $RangeError = __webpack_require__(/*! es-errors/range */ "./node_modules/es-errors/range.js");
var $ReferenceError = __webpack_require__(/*! es-errors/ref */ "./node_modules/es-errors/ref.js");
var $SyntaxError = __webpack_require__(/*! es-errors/syntax */ "./node_modules/es-errors/syntax.js");
var $TypeError = __webpack_require__(/*! es-errors/type */ "./node_modules/es-errors/type.js");
var $URIError = __webpack_require__(/*! es-errors/uri */ "./node_modules/es-errors/uri.js");

var $Function = Function;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = __webpack_require__(/*! has-symbols */ "./node_modules/has-symbols/index.js")();
var hasProto = __webpack_require__(/*! has-proto */ "./node_modules/has-proto/index.js")();

var getProto = Object.getPrototypeOf || (
	hasProto
		? function (x) { return x.__proto__; } // eslint-disable-line no-proto
		: null
);

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	__proto__: null,
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,
	'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': $Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': $EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': $RangeError,
	'%ReferenceError%': $ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': $URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

if (getProto) {
	try {
		null.error; // eslint-disable-line no-unused-expressions
	} catch (e) {
		// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229
		var errorProto = getProto(getProto(e));
		INTRINSICS['%Error.prototype%'] = errorProto;
	}
}

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen && getProto) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	__proto__: null,
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");
var hasOwn = __webpack_require__(/*! hasown */ "./node_modules/hasown/index.js");
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
var $exec = bind.call(Function.call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|(["'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;
var reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing \`%\`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening \`%\`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	if ($exec(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError('\`%\` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '\`')
				|| (last === '"' || last === "'" || last === '\`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an \`originalValue\` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/get-intrinsic/index.js?`)},"./node_modules/gopd/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);

if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/gopd/index.js?`)},"./node_modules/has-bigints/index.js":module=>{"use strict";eval(`

var $BigInt = typeof BigInt !== 'undefined' && BigInt;

module.exports = function hasNativeBigInts() {
	return typeof $BigInt === 'function'
		&& typeof BigInt === 'function'
		&& typeof $BigInt(42) === 'bigint' // eslint-disable-line no-magic-numbers
		&& typeof BigInt(42) === 'bigint'; // eslint-disable-line no-magic-numbers
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/has-bigints/index.js?`)},"./node_modules/has-property-descriptors/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var $defineProperty = __webpack_require__(/*! es-define-property */ "./node_modules/es-define-property/index.js");

var hasPropertyDescriptors = function hasPropertyDescriptors() {
	return !!$defineProperty;
};

hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
	// node v0.6 has a bug where array lengths can be Set but not Defined
	if (!$defineProperty) {
		return null;
	}
	try {
		return $defineProperty([], 'length', { value: 1 }).length !== 1;
	} catch (e) {
		// In Firefox 4-22, defining length on an array throws an exception.
		return true;
	}
};

module.exports = hasPropertyDescriptors;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/has-property-descriptors/index.js?`)},"./node_modules/has-proto/index.js":module=>{"use strict";eval(`

var test = {
	foo: {}
};

var $Object = Object;

module.exports = function hasProto() {
	return { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/has-proto/index.js?`)},"./node_modules/has-symbols/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = __webpack_require__(/*! ./shams */ "./node_modules/has-symbols/shams.js");

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/has-symbols/index.js?`)},"./node_modules/has-symbols/shams.js":module=>{"use strict";eval(`

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/has-symbols/shams.js?`)},"./node_modules/has-tostringtag/shams.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var hasSymbols = __webpack_require__(/*! has-symbols/shams */ "./node_modules/has-symbols/shams.js");

/** @type {import('.')} */
module.exports = function hasToStringTagShams() {
	return hasSymbols() && !!Symbol.toStringTag;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/has-tostringtag/shams.js?`)},"./node_modules/hasown/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var call = Function.prototype.call;
var $hasOwn = Object.prototype.hasOwnProperty;
var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");

/** @type {import('.')} */
module.exports = bind.call(call, $hasOwn);


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/hasown/index.js?`)},"./node_modules/ieee754/index.js":(__unused_webpack_module,exports)=>{eval(`/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/ieee754/index.js?`)},"./node_modules/inherits/inherits_browser.js":module=>{eval(`if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/inherits/inherits_browser.js?`)},"./node_modules/internal-slot/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var hasOwn = __webpack_require__(/*! hasown */ "./node_modules/hasown/index.js");
var channel = __webpack_require__(/*! side-channel */ "./node_modules/side-channel/index.js")();

var $TypeError = __webpack_require__(/*! es-errors/type */ "./node_modules/es-errors/type.js");

var SLOT = {
	assert: function (O, slot) {
		if (!O || (typeof O !== 'object' && typeof O !== 'function')) {
			throw new $TypeError('\`O\` is not an object');
		}
		if (typeof slot !== 'string') {
			throw new $TypeError('\`slot\` must be a string');
		}
		channel.assert(O);
		if (!SLOT.has(O, slot)) {
			throw new $TypeError('\`' + slot + '\` is not present on \`O\`');
		}
	},
	get: function (O, slot) {
		if (!O || (typeof O !== 'object' && typeof O !== 'function')) {
			throw new $TypeError('\`O\` is not an object');
		}
		if (typeof slot !== 'string') {
			throw new $TypeError('\`slot\` must be a string');
		}
		var slots = channel.get(O);
		return slots && slots['$' + slot];
	},
	has: function (O, slot) {
		if (!O || (typeof O !== 'object' && typeof O !== 'function')) {
			throw new $TypeError('\`O\` is not an object');
		}
		if (typeof slot !== 'string') {
			throw new $TypeError('\`slot\` must be a string');
		}
		var slots = channel.get(O);
		return !!slots && hasOwn(slots, '$' + slot);
	},
	set: function (O, slot, V) {
		if (!O || (typeof O !== 'object' && typeof O !== 'function')) {
			throw new $TypeError('\`O\` is not an object');
		}
		if (typeof slot !== 'string') {
			throw new $TypeError('\`slot\` must be a string');
		}
		var slots = channel.get(O);
		if (!slots) {
			slots = {};
			channel.set(O, slots);
		}
		slots['$' + slot] = V;
	}
};

if (Object.freeze) {
	Object.freeze(SLOT);
}

module.exports = SLOT;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/internal-slot/index.js?`)},"./node_modules/is-arguments/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ "./node_modules/has-tostringtag/shams.js")();
var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");

var $toString = callBound('Object.prototype.toString');

var isStandardArguments = function isArguments(value) {
	if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {
		return false;
	}
	return $toString(value) === '[object Arguments]';
};

var isLegacyArguments = function isArguments(value) {
	if (isStandardArguments(value)) {
		return true;
	}
	return value !== null &&
		typeof value === 'object' &&
		typeof value.length === 'number' &&
		value.length >= 0 &&
		$toString(value) !== '[object Array]' &&
		$toString(value.callee) === '[object Function]';
};

var supportsStandardArguments = (function () {
	return isStandardArguments(arguments);
}());

isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests

module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-arguments/index.js?`)},"./node_modules/is-array-buffer/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var callBind = __webpack_require__(/*! call-bind */ "./node_modules/call-bind/index.js");
var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");
var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");

var $ArrayBuffer = GetIntrinsic('%ArrayBuffer%', true);
/** @type {undefined | ((receiver: ArrayBuffer) => number) | ((receiver: unknown) => never)} */
var $byteLength = callBound('ArrayBuffer.prototype.byteLength', true);
var $toString = callBound('Object.prototype.toString');

// in node 0.10, ArrayBuffers have no prototype methods, but have an own slot-checking \`slice\` method
var abSlice = !!$ArrayBuffer && !$byteLength && new $ArrayBuffer(0).slice;
var $abSlice = !!abSlice && callBind(abSlice);

/** @type {import('.')} */
module.exports = $byteLength || $abSlice
	? function isArrayBuffer(obj) {
		if (!obj || typeof obj !== 'object') {
			return false;
		}
		try {
			if ($byteLength) {
				// @ts-expect-error no idea why TS can't handle the overload
				$byteLength(obj);
			} else {
				// @ts-expect-error TS chooses not to type-narrow inside a closure
				$abSlice(obj, 0);
			}
			return true;
		} catch (e) {
			return false;
		}
	}
	: $ArrayBuffer
		// in node 0.8, ArrayBuffers have no prototype or own methods, but also no Symbol.toStringTag
		? function isArrayBuffer(obj) {
			return $toString(obj) === '[object ArrayBuffer]';
		}
		: function isArrayBuffer(obj) { // eslint-disable-line no-unused-vars
			return false;
		};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-array-buffer/index.js?`)},"./node_modules/is-bigint/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var hasBigInts = __webpack_require__(/*! has-bigints */ "./node_modules/has-bigints/index.js")();

if (hasBigInts) {
	var bigIntValueOf = BigInt.prototype.valueOf;
	var tryBigInt = function tryBigIntObject(value) {
		try {
			bigIntValueOf.call(value);
			return true;
		} catch (e) {
		}
		return false;
	};

	module.exports = function isBigInt(value) {
		if (
			value === null
			|| typeof value === 'undefined'
			|| typeof value === 'boolean'
			|| typeof value === 'string'
			|| typeof value === 'number'
			|| typeof value === 'symbol'
			|| typeof value === 'function'
		) {
			return false;
		}
		if (typeof value === 'bigint') {
			return true;
		}

		return tryBigInt(value);
	};
} else {
	module.exports = function isBigInt(value) {
		return  false && 0;
	};
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-bigint/index.js?`)},"./node_modules/is-boolean-object/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");
var $boolToStr = callBound('Boolean.prototype.toString');
var $toString = callBound('Object.prototype.toString');

var tryBooleanObject = function booleanBrandCheck(value) {
	try {
		$boolToStr(value);
		return true;
	} catch (e) {
		return false;
	}
};
var boolClass = '[object Boolean]';
var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ "./node_modules/has-tostringtag/shams.js")();

module.exports = function isBoolean(value) {
	if (typeof value === 'boolean') {
		return true;
	}
	if (value === null || typeof value !== 'object') {
		return false;
	}
	return hasToStringTag && Symbol.toStringTag in value ? tryBooleanObject(value) : $toString(value) === boolClass;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-boolean-object/index.js?`)},"./node_modules/is-callable/index.js":module=>{"use strict";eval(`

var fnToStr = Function.prototype.toString;
var reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;
var badArrayLike;
var isCallableMarker;
if (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {
	try {
		badArrayLike = Object.defineProperty({}, 'length', {
			get: function () {
				throw isCallableMarker;
			}
		});
		isCallableMarker = {};
		// eslint-disable-next-line no-throw-literal
		reflectApply(function () { throw 42; }, null, badArrayLike);
	} catch (_) {
		if (_ !== isCallableMarker) {
			reflectApply = null;
		}
	}
} else {
	reflectApply = null;
}

var constructorRegex = /^\\s*class\\b/;
var isES6ClassFn = function isES6ClassFunction(value) {
	try {
		var fnStr = fnToStr.call(value);
		return constructorRegex.test(fnStr);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionToStr(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var objectClass = '[object Object]';
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var ddaClass = '[object HTMLAllCollection]'; // IE 11
var ddaClass2 = '[object HTML document.all class]';
var ddaClass3 = '[object HTMLCollection]'; // IE 9-10
var hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use \`has-tostringtag\`

var isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing

var isDDA = function isDocumentDotAll() { return false; };
if (typeof document === 'object') {
	// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly
	var all = document.all;
	if (toStr.call(all) === toStr.call(document.all)) {
		isDDA = function isDocumentDotAll(value) {
			/* globals document: false */
			// in IE 6-8, typeof document.all is "object" and it's truthy
			if ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {
				try {
					var str = toStr.call(value);
					return (
						str === ddaClass
						|| str === ddaClass2
						|| str === ddaClass3 // opera 12.16
						|| str === objectClass // IE 6-8
					) && value('') == null; // eslint-disable-line eqeqeq
				} catch (e) { /**/ }
			}
			return false;
		};
	}
}

module.exports = reflectApply
	? function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		try {
			reflectApply(value, null, badArrayLike);
		} catch (e) {
			if (e !== isCallableMarker) { return false; }
		}
		return !isES6ClassFn(value) && tryFunctionObject(value);
	}
	: function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		if (hasToStringTag) { return tryFunctionObject(value); }
		if (isES6ClassFn(value)) { return false; }
		var strClass = toStr.call(value);
		if (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }
		return tryFunctionObject(value);
	};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-callable/index.js?`)},"./node_modules/is-date-object/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var getDay = Date.prototype.getDay;
var tryDateObject = function tryDateGetDayCall(value) {
	try {
		getDay.call(value);
		return true;
	} catch (e) {
		return false;
	}
};

var toStr = Object.prototype.toString;
var dateClass = '[object Date]';
var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ "./node_modules/has-tostringtag/shams.js")();

module.exports = function isDateObject(value) {
	if (typeof value !== 'object' || value === null) {
		return false;
	}
	return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-date-object/index.js?`)},"./node_modules/is-generator-function/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var toStr = Object.prototype.toString;
var fnToStr = Function.prototype.toString;
var isFnRegex = /^\\s*(?:function)?\\*/;
var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ "./node_modules/has-tostringtag/shams.js")();
var getProto = Object.getPrototypeOf;
var getGeneratorFunc = function () { // eslint-disable-line consistent-return
	if (!hasToStringTag) {
		return false;
	}
	try {
		return Function('return function*() {}')();
	} catch (e) {
	}
};
var GeneratorFunction;

module.exports = function isGeneratorFunction(fn) {
	if (typeof fn !== 'function') {
		return false;
	}
	if (isFnRegex.test(fnToStr.call(fn))) {
		return true;
	}
	if (!hasToStringTag) {
		var str = toStr.call(fn);
		return str === '[object GeneratorFunction]';
	}
	if (!getProto) {
		return false;
	}
	if (typeof GeneratorFunction === 'undefined') {
		var generatorFunc = getGeneratorFunc();
		GeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;
	}
	return getProto(fn) === GeneratorFunction;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-generator-function/index.js?`)},"./node_modules/is-map/index.js":module=>{"use strict";eval(`

var $Map = typeof Map === 'function' && Map.prototype ? Map : null;
var $Set = typeof Set === 'function' && Set.prototype ? Set : null;

var exported;

if (!$Map) {
	// eslint-disable-next-line no-unused-vars
	exported = function isMap(x) {
		// \`Map\` is not present in this environment.
		return false;
	};
}

var $mapHas = $Map ? Map.prototype.has : null;
var $setHas = $Set ? Set.prototype.has : null;
if (!exported && !$mapHas) {
	// eslint-disable-next-line no-unused-vars
	exported = function isMap(x) {
		// \`Map\` does not have a \`has\` method
		return false;
	};
}

module.exports = exported || function isMap(x) {
	if (!x || typeof x !== 'object') {
		return false;
	}
	try {
		$mapHas.call(x);
		if ($setHas) {
			try {
				$setHas.call(x);
			} catch (e) {
				return true;
			}
		}
		return x instanceof $Map; // core-js workaround, pre-v2.5.0
	} catch (e) {}
	return false;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-map/index.js?`)},"./node_modules/is-nan/implementation.js":module=>{"use strict";eval(`

/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */

module.exports = function isNaN(value) {
	return value !== value;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-nan/implementation.js?`)},"./node_modules/is-nan/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var callBind = __webpack_require__(/*! call-bind */ "./node_modules/call-bind/index.js");
var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/is-nan/implementation.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/is-nan/polyfill.js");
var shim = __webpack_require__(/*! ./shim */ "./node_modules/is-nan/shim.js");

var polyfill = callBind(getPolyfill(), Number);

/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */

define(polyfill, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = polyfill;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-nan/index.js?`)},"./node_modules/is-nan/polyfill.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/is-nan/implementation.js");

module.exports = function getPolyfill() {
	if (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {
		return Number.isNaN;
	}
	return implementation;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-nan/polyfill.js?`)},"./node_modules/is-nan/shim.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/is-nan/polyfill.js");

/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */

module.exports = function shimNumberIsNaN() {
	var polyfill = getPolyfill();
	define(Number, { isNaN: polyfill }, {
		isNaN: function testIsNaN() {
			return Number.isNaN !== polyfill;
		}
	});
	return polyfill;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-nan/shim.js?`)},"./node_modules/is-number-object/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var numToStr = Number.prototype.toString;
var tryNumberObject = function tryNumberObject(value) {
	try {
		numToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var numClass = '[object Number]';
var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ "./node_modules/has-tostringtag/shams.js")();

module.exports = function isNumberObject(value) {
	if (typeof value === 'number') {
		return true;
	}
	if (typeof value !== 'object') {
		return false;
	}
	return hasToStringTag ? tryNumberObject(value) : toStr.call(value) === numClass;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-number-object/index.js?`)},"./node_modules/is-regex/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");
var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ "./node_modules/has-tostringtag/shams.js")();
var has;
var $exec;
var isRegexMarker;
var badStringifier;

if (hasToStringTag) {
	has = callBound('Object.prototype.hasOwnProperty');
	$exec = callBound('RegExp.prototype.exec');
	isRegexMarker = {};

	var throwRegexMarker = function () {
		throw isRegexMarker;
	};
	badStringifier = {
		toString: throwRegexMarker,
		valueOf: throwRegexMarker
	};

	if (typeof Symbol.toPrimitive === 'symbol') {
		badStringifier[Symbol.toPrimitive] = throwRegexMarker;
	}
}

var $toString = callBound('Object.prototype.toString');
var gOPD = Object.getOwnPropertyDescriptor;
var regexClass = '[object RegExp]';

module.exports = hasToStringTag
	// eslint-disable-next-line consistent-return
	? function isRegex(value) {
		if (!value || typeof value !== 'object') {
			return false;
		}

		var descriptor = gOPD(value, 'lastIndex');
		var hasLastIndexDataProperty = descriptor && has(descriptor, 'value');
		if (!hasLastIndexDataProperty) {
			return false;
		}

		try {
			$exec(value, badStringifier);
		} catch (e) {
			return e === isRegexMarker;
		}
	}
	: function isRegex(value) {
		// In older browsers, typeof regex incorrectly returns 'function'
		if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
			return false;
		}

		return $toString(value) === regexClass;
	};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-regex/index.js?`)},"./node_modules/is-set/index.js":module=>{"use strict";eval(`

var $Map = typeof Map === 'function' && Map.prototype ? Map : null;
var $Set = typeof Set === 'function' && Set.prototype ? Set : null;

var exported;

if (!$Set) {
	// eslint-disable-next-line no-unused-vars
	exported = function isSet(x) {
		// \`Set\` is not present in this environment.
		return false;
	};
}

var $mapHas = $Map ? Map.prototype.has : null;
var $setHas = $Set ? Set.prototype.has : null;
if (!exported && !$setHas) {
	// eslint-disable-next-line no-unused-vars
	exported = function isSet(x) {
		// \`Set\` does not have a \`has\` method
		return false;
	};
}

module.exports = exported || function isSet(x) {
	if (!x || typeof x !== 'object') {
		return false;
	}
	try {
		$setHas.call(x);
		if ($mapHas) {
			try {
				$mapHas.call(x);
			} catch (e) {
				return true;
			}
		}
		return x instanceof $Set; // core-js workaround, pre-v2.5.0
	} catch (e) {}
	return false;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-set/index.js?`)},"./node_modules/is-shared-array-buffer/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");

var $byteLength = callBound('SharedArrayBuffer.prototype.byteLength', true);

module.exports = $byteLength
	? function isSharedArrayBuffer(obj) {
		if (!obj || typeof obj !== 'object') {
			return false;
		}
		try {
			$byteLength(obj);
			return true;
		} catch (e) {
			return false;
		}
	}
	: function isSharedArrayBuffer(obj) { // eslint-disable-line no-unused-vars
		return false;
	};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-shared-array-buffer/index.js?`)},"./node_modules/is-string/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var strValue = String.prototype.valueOf;
var tryStringObject = function tryStringObject(value) {
	try {
		strValue.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var strClass = '[object String]';
var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ "./node_modules/has-tostringtag/shams.js")();

module.exports = function isString(value) {
	if (typeof value === 'string') {
		return true;
	}
	if (typeof value !== 'object') {
		return false;
	}
	return hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-string/index.js?`)},"./node_modules/is-symbol/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var toStr = Object.prototype.toString;
var hasSymbols = __webpack_require__(/*! has-symbols */ "./node_modules/has-symbols/index.js")();

if (hasSymbols) {
	var symToStr = Symbol.prototype.toString;
	var symStringRegex = /^Symbol\\(.*\\)$/;
	var isSymbolObject = function isRealSymbolObject(value) {
		if (typeof value.valueOf() !== 'symbol') {
			return false;
		}
		return symStringRegex.test(symToStr.call(value));
	};

	module.exports = function isSymbol(value) {
		if (typeof value === 'symbol') {
			return true;
		}
		if (toStr.call(value) !== '[object Symbol]') {
			return false;
		}
		try {
			return isSymbolObject(value);
		} catch (e) {
			return false;
		}
	};
} else {

	module.exports = function isSymbol(value) {
		// this environment does not support Symbols.
		return  false && 0;
	};
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-symbol/index.js?`)},"./node_modules/is-typed-array/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var whichTypedArray = __webpack_require__(/*! which-typed-array */ "./node_modules/which-typed-array/index.js");

/** @type {import('.')} */
module.exports = function isTypedArray(value) {
	return !!whichTypedArray(value);
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-typed-array/index.js?`)},"./node_modules/is-weakmap/index.js":module=>{"use strict";eval(`

var $WeakMap = typeof WeakMap === 'function' && WeakMap.prototype ? WeakMap : null;
var $WeakSet = typeof WeakSet === 'function' && WeakSet.prototype ? WeakSet : null;

var exported;

if (!$WeakMap) {
	// eslint-disable-next-line no-unused-vars
	exported = function isWeakMap(x) {
		// \`WeakMap\` is not present in this environment.
		return false;
	};
}

var $mapHas = $WeakMap ? $WeakMap.prototype.has : null;
var $setHas = $WeakSet ? $WeakSet.prototype.has : null;
if (!exported && !$mapHas) {
	// eslint-disable-next-line no-unused-vars
	exported = function isWeakMap(x) {
		// \`WeakMap\` does not have a \`has\` method
		return false;
	};
}

module.exports = exported || function isWeakMap(x) {
	if (!x || typeof x !== 'object') {
		return false;
	}
	try {
		$mapHas.call(x, $mapHas);
		if ($setHas) {
			try {
				$setHas.call(x, $setHas);
			} catch (e) {
				return true;
			}
		}
		return x instanceof $WeakMap; // core-js workaround, pre-v3
	} catch (e) {}
	return false;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-weakmap/index.js?`)},"./node_modules/is-weakset/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");
var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");

var $WeakSet = GetIntrinsic('%WeakSet%', true);

var $setHas = callBound('WeakSet.prototype.has', true);

if ($setHas) {
	var $mapHas = callBound('WeakMap.prototype.has', true);

	module.exports = function isWeakSet(x) {
		if (!x || typeof x !== 'object') {
			return false;
		}
		try {
			$setHas(x, $setHas);
			if ($mapHas) {
				try {
					$mapHas(x, $mapHas);
				} catch (e) {
					return true;
				}
			}
			return x instanceof $WeakSet; // core-js workaround, pre-v3
		} catch (e) {}
		return false;
	};
} else {
	// eslint-disable-next-line no-unused-vars
	module.exports = function isWeakSet(x) {
		// \`WeakSet\` does not exist, or does not have a \`has\` method
		return false;
	};
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/is-weakset/index.js?`)},"./node_modules/isarray/index.js":module=>{eval(`var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/isarray/index.js?`)},"./node_modules/linebreak/node_modules/base64-js/lib/b64.js":(__unused_webpack_module,exports)=>{eval(`var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)
	var PLUS_URL_SAFE = '-'.charCodeAt(0)
	var SLASH_URL_SAFE = '_'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS ||
		    code === PLUS_URL_SAFE)
			return 62 // '+'
		if (code === SLASH ||
		    code === SLASH_URL_SAFE)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		// the number of equal signs (place holders)
		// if there are two placeholders, than the two characters before it
		// represent one byte
		// if there is only one, then the three characters before it represent 2 bytes
		// this is just a cheap hack to not do indexOf twice
		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		// base64 is 4/3 + up to two characters of the original data
		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		// if there are placeholders, only get up to the last complete 4 chars
		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		// go through the array every three bytes, we'll deal with trailing stuff later
		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		// pad the end with zeros, but make sure to not forget the extra bytes
		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	exports.toByteArray = b64ToByteArray
	exports.fromByteArray = uint8ToBase64
}( false ? (0) : exports))


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/linebreak/node_modules/base64-js/lib/b64.js?`)},"./node_modules/object-inspect/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;
var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
var hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;
var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
var booleanValueOf = Boolean.prototype.valueOf;
var objectToString = Object.prototype.toString;
var functionToString = Function.prototype.toString;
var $match = String.prototype.match;
var $slice = String.prototype.slice;
var $replace = String.prototype.replace;
var $toUpperCase = String.prototype.toUpperCase;
var $toLowerCase = String.prototype.toLowerCase;
var $test = RegExp.prototype.test;
var $concat = Array.prototype.concat;
var $join = Array.prototype.join;
var $arrSlice = Array.prototype.slice;
var $floor = Math.floor;
var bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
var gOPS = Object.getOwnPropertySymbols;
var symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;
var hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';
// ie, \`has-tostringtag/shams
var toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')
    ? Symbol.toStringTag
    : null;
var isEnumerable = Object.prototype.propertyIsEnumerable;

var gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (
    [].__proto__ === Array.prototype // eslint-disable-line no-proto
        ? function (O) {
            return O.__proto__; // eslint-disable-line no-proto
        }
        : null
);

function addNumericSeparator(num, str) {
    if (
        num === Infinity
        || num === -Infinity
        || num !== num
        || (num && num > -1000 && num < 1000)
        || $test.call(/e/, str)
    ) {
        return str;
    }
    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
    if (typeof num === 'number') {
        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)
        if (int !== num) {
            var intStr = String(int);
            var dec = $slice.call(str, intStr.length + 1);
            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');
        }
    }
    return $replace.call(str, sepRegex, '$&_');
}

var utilInspect = __webpack_require__(/*! ./util.inspect */ "?4f7e");
var inspectCustom = utilInspect.custom;
var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;

module.exports = function inspect_(obj, options, depth, seen) {
    var opts = options || {};

    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
    }
    if (
        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'
            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity
            : opts.maxStringLength !== null
        )
    ) {
        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or \`null\`');
    }
    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;
    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {
        throw new TypeError('option "customInspect", if provided, must be \`true\`, \`false\`, or \`\\'symbol\\'\`');
    }

    if (
        has(opts, 'indent')
        && opts.indent !== null
        && opts.indent !== '\\t'
        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)
    ) {
        throw new TypeError('option "indent" must be "\\\\t", an integer > 0, or \`null\`');
    }
    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {
        throw new TypeError('option "numericSeparator", if provided, must be \`true\` or \`false\`');
    }
    var numericSeparator = opts.numericSeparator;

    if (typeof obj === 'undefined') {
        return 'undefined';
    }
    if (obj === null) {
        return 'null';
    }
    if (typeof obj === 'boolean') {
        return obj ? 'true' : 'false';
    }

    if (typeof obj === 'string') {
        return inspectString(obj, opts);
    }
    if (typeof obj === 'number') {
        if (obj === 0) {
            return Infinity / obj > 0 ? '0' : '-0';
        }
        var str = String(obj);
        return numericSeparator ? addNumericSeparator(obj, str) : str;
    }
    if (typeof obj === 'bigint') {
        var bigIntStr = String(obj) + 'n';
        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
    }

    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
    if (typeof depth === 'undefined') { depth = 0; }
    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {
        return isArray(obj) ? '[Array]' : '[Object]';
    }

    var indent = getIndent(opts, depth);

    if (typeof seen === 'undefined') {
        seen = [];
    } else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }

    function inspect(value, from, noIndent) {
        if (from) {
            seen = $arrSlice.call(seen);
            seen.push(from);
        }
        if (noIndent) {
            var newOpts = {
                depth: opts.depth
            };
            if (has(opts, 'quoteStyle')) {
                newOpts.quoteStyle = opts.quoteStyle;
            }
            return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
    }

    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');
    }
    if (isSymbol(obj)) {
        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);
        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;
    }
    if (isElement(obj)) {
        var s = '<' + $toLowerCase.call(String(obj.nodeName));
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) { s += '...'; }
        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';
        return s;
    }
    if (isArray(obj)) {
        if (obj.length === 0) { return '[]'; }
        var xs = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs)) {
            return '[' + indentedJoin(xs, indent) + ']';
        }
        return '[ ' + $join.call(xs, ', ') + ' ]';
    }
    if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {
            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';
        }
        if (parts.length === 0) { return '[' + String(obj) + ']'; }
        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';
    }
    if (typeof obj === 'object' && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {
            return utilInspect(obj, { depth: maxDepth - depth });
        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {
            return obj.inspect();
        }
    }
    if (isMap(obj)) {
        var mapParts = [];
        if (mapForEach) {
            mapForEach.call(obj, function (value, key) {
                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));
            });
        }
        return collectionOf('Map', mapSize.call(obj), mapParts, indent);
    }
    if (isSet(obj)) {
        var setParts = [];
        if (setForEach) {
            setForEach.call(obj, function (value) {
                setParts.push(inspect(value, obj));
            });
        }
        return collectionOf('Set', setSize.call(obj), setParts, indent);
    }
    if (isWeakMap(obj)) {
        return weakCollectionOf('WeakMap');
    }
    if (isWeakSet(obj)) {
        return weakCollectionOf('WeakSet');
    }
    if (isWeakRef(obj)) {
        return weakCollectionOf('WeakRef');
    }
    if (isNumber(obj)) {
        return markBoxed(inspect(Number(obj)));
    }
    if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
    }
    if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
    }
    if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
    }
    // note: in IE 8, sometimes \`global !== window\` but both are the prototypes of each other
    /* eslint-env browser */
    if (typeof window !== 'undefined' && obj === window) {
        return '{ [object Window] }';
    }
    if (obj === __webpack_require__.g) {
        return '{ [object globalThis] }';
    }
    if (!isDate(obj) && !isRegExp(obj)) {
        var ys = arrObjKeys(obj, inspect);
        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? '' : 'null prototype';
        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';
        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';
        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');
        if (ys.length === 0) { return tag + '{}'; }
        if (indent) {
            return tag + '{' + indentedJoin(ys, indent) + '}';
        }
        return tag + '{ ' + $join.call(ys, ', ') + ' }';
    }
    return String(obj);
};

function wrapQuotes(s, defaultStyle, opts) {
    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
    return quoteChar + s + quoteChar;
}

function quote(s) {
    return $replace.call(String(s), /"/g, '&quot;');
}

function isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }

// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives
function isSymbol(obj) {
    if (hasShammedSymbols) {
        return obj && typeof obj === 'object' && obj instanceof Symbol;
    }
    if (typeof obj === 'symbol') {
        return true;
    }
    if (!obj || typeof obj !== 'object' || !symToString) {
        return false;
    }
    try {
        symToString.call(obj);
        return true;
    } catch (e) {}
    return false;
}

function isBigInt(obj) {
    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {
        return false;
    }
    try {
        bigIntValueOf.call(obj);
        return true;
    } catch (e) {}
    return false;
}

var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
function has(obj, key) {
    return hasOwn.call(obj, key);
}

function toStr(obj) {
    return objectToString.call(obj);
}

function nameOf(f) {
    if (f.name) { return f.name; }
    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);
    if (m) { return m[1]; }
    return null;
}

function indexOf(xs, x) {
    if (xs.indexOf) { return xs.indexOf(x); }
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) { return i; }
    }
    return -1;
}

function isMap(x) {
    if (!mapSize || !x || typeof x !== 'object') {
        return false;
    }
    try {
        mapSize.call(x);
        try {
            setSize.call(x);
        } catch (s) {
            return true;
        }
        return x instanceof Map; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakMap(x) {
    if (!weakMapHas || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakMapHas.call(x, weakMapHas);
        try {
            weakSetHas.call(x, weakSetHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakRef(x) {
    if (!weakRefDeref || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakRefDeref.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isSet(x) {
    if (!setSize || !x || typeof x !== 'object') {
        return false;
    }
    try {
        setSize.call(x);
        try {
            mapSize.call(x);
        } catch (m) {
            return true;
        }
        return x instanceof Set; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakSet(x) {
    if (!weakSetHas || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakSetHas.call(x, weakSetHas);
        try {
            weakMapHas.call(x, weakMapHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isElement(x) {
    if (!x || typeof x !== 'object') { return false; }
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';
}

function inspectString(str, opts) {
    if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
    }
    // eslint-disable-next-line no-control-regex
    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);
    return wrapQuotes(s, 'single', opts);
}

function lowbyte(c) {
    var n = c.charCodeAt(0);
    var x = {
        8: 'b',
        9: 't',
        10: 'n',
        12: 'f',
        13: 'r'
    }[n];
    if (x) { return '\\\\' + x; }
    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));
}

function markBoxed(str) {
    return 'Object(' + str + ')';
}

function weakCollectionOf(type) {
    return type + ' { ? }';
}

function collectionOf(type, size, entries, indent) {
    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');
    return type + ' (' + size + ') {' + joinedEntries + '}';
}

function singleLineValues(xs) {
    for (var i = 0; i < xs.length; i++) {
        if (indexOf(xs[i], '\\n') >= 0) {
            return false;
        }
    }
    return true;
}

function getIndent(opts, depth) {
    var baseIndent;
    if (opts.indent === '\\t') {
        baseIndent = '\\t';
    } else if (typeof opts.indent === 'number' && opts.indent > 0) {
        baseIndent = $join.call(Array(opts.indent + 1), ' ');
    } else {
        return null;
    }
    return {
        base: baseIndent,
        prev: $join.call(Array(depth + 1), baseIndent)
    };
}

function indentedJoin(xs, indent) {
    if (xs.length === 0) { return ''; }
    var lineJoiner = '\\n' + indent.prev + indent.base;
    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;
}

function arrObjKeys(obj, inspect) {
    var isArr = isArray(obj);
    var xs = [];
    if (isArr) {
        xs.length = obj.length;
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
    }
    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];
    var symMap;
    if (hasShammedSymbols) {
        symMap = {};
        for (var k = 0; k < syms.length; k++) {
            symMap['$' + syms[k]] = syms[k];
        }
    }

    for (var key in obj) { // eslint-disable-line no-restricted-syntax
        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {
            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section
            continue; // eslint-disable-line no-restricted-syntax, no-continue
        } else if ($test.call(/[^\\w$]/, key)) {
            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
        } else {
            xs.push(key + ': ' + inspect(obj[key], obj));
        }
    }
    if (typeof gOPS === 'function') {
        for (var j = 0; j < syms.length; j++) {
            if (isEnumerable.call(obj, syms[j])) {
                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));
            }
        }
    }
    return xs;
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/object-inspect/index.js?`)},"./node_modules/object-is/implementation.js":module=>{"use strict";eval(`

var numberIsNaN = function (value) {
	return value !== value;
};

module.exports = function is(a, b) {
	if (a === 0 && b === 0) {
		return 1 / a === 1 / b;
	}
	if (a === b) {
		return true;
	}
	if (numberIsNaN(a) && numberIsNaN(b)) {
		return true;
	}
	return false;
};



//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/object-is/implementation.js?`)},"./node_modules/object-is/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");
var callBind = __webpack_require__(/*! call-bind */ "./node_modules/call-bind/index.js");

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/object-is/implementation.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/object-is/polyfill.js");
var shim = __webpack_require__(/*! ./shim */ "./node_modules/object-is/shim.js");

var polyfill = callBind(getPolyfill(), Object);

define(polyfill, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = polyfill;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/object-is/index.js?`)},"./node_modules/object-is/polyfill.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/object-is/implementation.js");

module.exports = function getPolyfill() {
	return typeof Object.is === 'function' ? Object.is : implementation;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/object-is/polyfill.js?`)},"./node_modules/object-is/shim.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/object-is/polyfill.js");
var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");

module.exports = function shimObjectIs() {
	var polyfill = getPolyfill();
	define(Object, { is: polyfill }, {
		is: function testObjectIs() {
			return Object.is !== polyfill;
		}
	});
	return polyfill;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/object-is/shim.js?`)},"./node_modules/object-keys/implementation.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = __webpack_require__(/*! ./isArguments */ "./node_modules/object-keys/isArguments.js"); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/object-keys/implementation.js?`)},"./node_modules/object-keys/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var slice = Array.prototype.slice;
var isArgs = __webpack_require__(/*! ./isArguments */ "./node_modules/object-keys/isArguments.js");

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : __webpack_require__(/*! ./implementation */ "./node_modules/object-keys/implementation.js");

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/object-keys/index.js?`)},"./node_modules/object-keys/isArguments.js":module=>{"use strict";eval(`

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/object-keys/isArguments.js?`)},"./node_modules/object.assign/implementation.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

// modified from https://github.com/es-shims/es6-shim
var objectKeys = __webpack_require__(/*! object-keys */ "./node_modules/object-keys/index.js");
var hasSymbols = __webpack_require__(/*! has-symbols/shams */ "./node_modules/has-symbols/shams.js")();
var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");
var toObject = Object;
var $push = callBound('Array.prototype.push');
var $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');
var originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;

// eslint-disable-next-line no-unused-vars
module.exports = function assign(target, source1) {
	if (target == null) { throw new TypeError('target must be an object'); }
	var to = toObject(target); // step 1
	if (arguments.length === 1) {
		return to; // step 2
	}
	for (var s = 1; s < arguments.length; ++s) {
		var from = toObject(arguments[s]); // step 3.a.i

		// step 3.a.ii:
		var keys = objectKeys(from);
		var getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);
		if (getSymbols) {
			var syms = getSymbols(from);
			for (var j = 0; j < syms.length; ++j) {
				var key = syms[j];
				if ($propIsEnumerable(from, key)) {
					$push(keys, key);
				}
			}
		}

		// step 3.a.iii:
		for (var i = 0; i < keys.length; ++i) {
			var nextKey = keys[i];
			if ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2
				var propValue = from[nextKey]; // step 3.a.iii.2.a
				to[nextKey] = propValue; // step 3.a.iii.2.b
			}
		}
	}

	return to; // step 4
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/object.assign/implementation.js?`)},"./node_modules/object.assign/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var defineProperties = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");
var callBind = __webpack_require__(/*! call-bind */ "./node_modules/call-bind/index.js");

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/object.assign/implementation.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/object.assign/polyfill.js");
var shim = __webpack_require__(/*! ./shim */ "./node_modules/object.assign/shim.js");

var polyfill = callBind.apply(getPolyfill());
// eslint-disable-next-line no-unused-vars
var bound = function assign(target, source1) {
	return polyfill(Object, arguments);
};

defineProperties(bound, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = bound;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/object.assign/index.js?`)},"./node_modules/object.assign/polyfill.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/object.assign/implementation.js");

var lacksProperEnumerationOrder = function () {
	if (!Object.assign) {
		return false;
	}
	/*
	 * v8, specifically in node 4.x, has a bug with incorrect property enumeration order
	 * note: this does not detect the bug unless there's 20 characters
	 */
	var str = 'abcdefghijklmnopqrst';
	var letters = str.split('');
	var map = {};
	for (var i = 0; i < letters.length; ++i) {
		map[letters[i]] = letters[i];
	}
	var obj = Object.assign({}, map);
	var actual = '';
	for (var k in obj) {
		actual += k;
	}
	return str !== actual;
};

var assignHasPendingExceptions = function () {
	if (!Object.assign || !Object.preventExtensions) {
		return false;
	}
	/*
	 * Firefox 37 still has "pending exception" logic in its Object.assign implementation,
	 * which is 72% slower than our shim, and Firefox 40's native implementation.
	 */
	var thrower = Object.preventExtensions({ 1: 2 });
	try {
		Object.assign(thrower, 'xy');
	} catch (e) {
		return thrower[1] === 'y';
	}
	return false;
};

module.exports = function getPolyfill() {
	if (!Object.assign) {
		return implementation;
	}
	if (lacksProperEnumerationOrder()) {
		return implementation;
	}
	if (assignHasPendingExceptions()) {
		return implementation;
	}
	return Object.assign;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/object.assign/polyfill.js?`)},"./node_modules/object.assign/shim.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/object.assign/polyfill.js");

module.exports = function shimAssign() {
	var polyfill = getPolyfill();
	define(
		Object,
		{ assign: polyfill },
		{ assign: function () { return Object.assign !== polyfill; } }
	);
	return polyfill;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/object.assign/shim.js?`)},"./node_modules/pdfkit/js/data sync Helvetica.*\\.afm$":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`var map = {
	"./Helvetica-Bold.afm": "./node_modules/pdfkit/js/data/Helvetica-Bold.afm",
	"./Helvetica-BoldOblique.afm": "./node_modules/pdfkit/js/data/Helvetica-BoldOblique.afm",
	"./Helvetica-Oblique.afm": "./node_modules/pdfkit/js/data/Helvetica-Oblique.afm",
	"./Helvetica.afm": "./node_modules/pdfkit/js/data/Helvetica.afm"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/pdfkit/js/data sync Helvetica.*\\\\.afm$";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/_sync_nonrecursive_Helvetica.*\\.afm$?`)},"./node_modules/pdfkit/js/pdfkit.es5.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`var __dirname = "/";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ "./node_modules/readable-stream/readable-browser.js");
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ "./node_modules/pdfkit/js/virtual-fs.js");
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zlib */ "./node_modules/browserify-zlib/lib/index.js");
/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(zlib__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! crypto-js */ "./node_modules/crypto-js/index.js");
/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(crypto_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var fontkit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fontkit */ "./node_modules/fontkit/dist/module.mjs");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var linebreak__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! linebreak */ "./node_modules/linebreak/dist/module.mjs");
/* harmony import */ var png_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! png-js */ "./node_modules/png-js/png-node.js");
/* harmony import */ var png_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(png_js__WEBPACK_IMPORTED_MODULE_7__);
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];









function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;

      var F = function () {};

      return {
        s: F,
        n: function () {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function (e) {
          throw e;
        },
        f: F
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function () {
      it = o[Symbol.iterator]();
    },
    n: function () {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function (e) {
      didErr = true;
      err = e;
    },
    f: function () {
      try {
        if (!normalCompletion && it.return != null) it.return();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

/*\r
PDFAbstractReference - abstract class for PDF reference\r
*/
var PDFAbstractReference = /*#__PURE__*/function () {
  function PDFAbstractReference() {
    _classCallCheck(this, PDFAbstractReference);
  }

  _createClass(PDFAbstractReference, [{
    key: "toString",
    value: function toString() {
      throw new Error('Must be implemented by subclasses');
    }
  }]);

  return PDFAbstractReference;
}();

var PDFTree = /*#__PURE__*/function () {
  function PDFTree() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, PDFTree);

    this._items = {}; // disable /Limits output for this tree

    this.limits = typeof options.limits === 'boolean' ? options.limits : true;
  }

  _createClass(PDFTree, [{
    key: "add",
    value: function add(key, val) {
      return this._items[key] = val;
    }
  }, {
    key: "get",
    value: function get(key) {
      return this._items[key];
    }
  }, {
    key: "toString",
    value: function toString() {
      var _this = this;

      // Needs to be sorted by key
      var sortedKeys = Object.keys(this._items).sort(function (a, b) {
        return _this._compareKeys(a, b);
      });
      var out = ['<<'];

      if (this.limits && sortedKeys.length > 1) {
        var first = sortedKeys[0],
            last = sortedKeys[sortedKeys.length - 1];
        out.push("  /Limits ".concat(PDFObject.convert([this._dataForKey(first), this._dataForKey(last)])));
      }

      out.push("  /".concat(this._keysName(), " ["));

      var _iterator = _createForOfIteratorHelper(sortedKeys),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var key = _step.value;
          out.push("    ".concat(PDFObject.convert(this._dataForKey(key)), " ").concat(PDFObject.convert(this._items[key])));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      out.push(']');
      out.push('>>');
      return out.join('\\n');
    }
  }, {
    key: "_compareKeys",
    value: function _compareKeys()
    /*a, b*/
    {
      throw new Error('Must be implemented by subclasses');
    }
  }, {
    key: "_keysName",
    value: function _keysName() {
      throw new Error('Must be implemented by subclasses');
    }
  }, {
    key: "_dataForKey",
    value: function _dataForKey()
    /*k*/
    {
      throw new Error('Must be implemented by subclasses');
    }
  }]);

  return PDFTree;
}();

var pad = function pad(str, length) {
  return (Array(length + 1).join('0') + str).slice(-length);
};

var escapableRe = /[\\n\\r\\t\\b\\f()\\\\]/g;
var escapable = {
  '\\n': '\\\\n',
  '\\r': '\\\\r',
  '\\t': '\\\\t',
  '\\b': '\\\\b',
  '\\f': '\\\\f',
  '\\\\': '\\\\\\\\',
  '(': '\\\\(',
  ')': '\\\\)'
}; // Convert little endian UTF-16 to big endian

var swapBytes = function swapBytes(buff) {
  var l = buff.length;

  if (l & 0x01) {
    throw new Error('Buffer length must be even');
  } else {
    for (var i = 0, end = l - 1; i < end; i += 2) {
      var a = buff[i];
      buff[i] = buff[i + 1];
      buff[i + 1] = a;
    }
  }

  return buff;
};

var PDFObject = /*#__PURE__*/function () {
  function PDFObject() {
    _classCallCheck(this, PDFObject);
  }

  _createClass(PDFObject, null, [{
    key: "convert",
    value: function convert(object) {
      var encryptFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      // String literals are converted to the PDF name type
      if (typeof object === 'string') {
        return "/".concat(object); // String objects are converted to PDF strings (UTF-16)
      } else if (object instanceof String) {
        var string = object; // Detect if this is a unicode string

        var isUnicode = false;

        for (var i = 0, end = string.length; i < end; i++) {
          if (string.charCodeAt(i) > 0x7f) {
            isUnicode = true;
            break;
          }
        } // If so, encode it as big endian UTF-16


        var stringBuffer;

        if (isUnicode) {
          stringBuffer = swapBytes(Buffer.from("\\uFEFF".concat(string), 'utf16le'));
        } else {
          stringBuffer = Buffer.from(string.valueOf(), 'ascii');
        } // Encrypt the string when necessary


        if (encryptFn) {
          string = encryptFn(stringBuffer).toString('binary');
        } else {
          string = stringBuffer.toString('binary');
        } // Escape characters as required by the spec


        string = string.replace(escapableRe, function (c) {
          return escapable[c];
        });
        return "(".concat(string, ")"); // Buffers are converted to PDF hex strings
      } else if (Buffer.isBuffer(object)) {
        return "<".concat(object.toString('hex'), ">");
      } else if (object instanceof PDFAbstractReference || object instanceof PDFTree) {
        return object.toString();
      } else if (object instanceof Date) {
        var _string = "D:".concat(pad(object.getUTCFullYear(), 4)) + pad(object.getUTCMonth() + 1, 2) + pad(object.getUTCDate(), 2) + pad(object.getUTCHours(), 2) + pad(object.getUTCMinutes(), 2) + pad(object.getUTCSeconds(), 2) + 'Z'; // Encrypt the string when necessary


        if (encryptFn) {
          _string = encryptFn(Buffer.from(_string, 'ascii')).toString('binary'); // Escape characters as required by the spec

          _string = _string.replace(escapableRe, function (c) {
            return escapable[c];
          });
        }

        return "(".concat(_string, ")");
      } else if (Array.isArray(object)) {
        var items = object.map(function (e) {
          return PDFObject.convert(e, encryptFn);
        }).join(' ');
        return "[".concat(items, "]");
      } else if ({}.toString.call(object) === '[object Object]') {
        var out = ['<<'];

        for (var key in object) {
          var val = object[key];
          out.push("/".concat(key, " ").concat(PDFObject.convert(val, encryptFn)));
        }

        out.push('>>');
        return out.join('\\n');
      } else if (typeof object === 'number') {
        return PDFObject.number(object);
      } else {
        return "".concat(object);
      }
    }
  }, {
    key: "number",
    value: function number(n) {
      if (n > -1e21 && n < 1e21) {
        return Math.round(n * 1e6) / 1e6;
      }

      throw new Error("unsupported number: ".concat(n));
    }
  }]);

  return PDFObject;
}();

var PDFReference = /*#__PURE__*/function (_PDFAbstractReference) {
  _inherits(PDFReference, _PDFAbstractReference);

  var _super = _createSuper(PDFReference);

  function PDFReference(document, id) {
    var _this;

    var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    _classCallCheck(this, PDFReference);

    _this = _super.call(this);
    _this.document = document;
    _this.id = id;
    _this.data = data;
    _this.gen = 0;
    _this.compress = _this.document.compress && !_this.data.Filter;
    _this.uncompressedLength = 0;
    _this.buffer = [];
    return _this;
  }

  _createClass(PDFReference, [{
    key: "write",
    value: function write(chunk) {
      if (!Buffer.isBuffer(chunk)) {
        chunk = Buffer.from(chunk + '\\n', 'binary');
      }

      this.uncompressedLength += chunk.length;

      if (this.data.Length == null) {
        this.data.Length = 0;
      }

      this.buffer.push(chunk);
      this.data.Length += chunk.length;

      if (this.compress) {
        return this.data.Filter = 'FlateDecode';
      }
    }
  }, {
    key: "end",
    value: function end(chunk) {
      if (chunk) {
        this.write(chunk);
      }

      return this.finalize();
    }
  }, {
    key: "finalize",
    value: function finalize() {
      this.offset = this.document._offset;
      var encryptFn = this.document._security ? this.document._security.getEncryptFn(this.id, this.gen) : null;

      if (this.buffer.length) {
        this.buffer = Buffer.concat(this.buffer);

        if (this.compress) {
          this.buffer = zlib__WEBPACK_IMPORTED_MODULE_2___default().deflateSync(this.buffer);
        }

        if (encryptFn) {
          this.buffer = encryptFn(this.buffer);
        }

        this.data.Length = this.buffer.length;
      }

      this.document._write("".concat(this.id, " ").concat(this.gen, " obj"));

      this.document._write(PDFObject.convert(this.data, encryptFn));

      if (this.buffer.length) {
        this.document._write('stream');

        this.document._write(this.buffer);

        this.buffer = []; // free up memory

        this.document._write('\\nendstream');
      }

      this.document._write('endobj');

      this.document._refEnd(this);
    }
  }, {
    key: "toString",
    value: function toString() {
      return "".concat(this.id, " ").concat(this.gen, " R");
    }
  }]);

  return PDFReference;
}(PDFAbstractReference);

/*\r
PDFPage - represents a single page in the PDF document\r
By Devon Govett\r
*/
var DEFAULT_MARGINS = {
  top: 72,
  left: 72,
  bottom: 72,
  right: 72
};
var SIZES = {
  '4A0': [4767.87, 6740.79],
  '2A0': [3370.39, 4767.87],
  A0: [2383.94, 3370.39],
  A1: [1683.78, 2383.94],
  A2: [1190.55, 1683.78],
  A3: [841.89, 1190.55],
  A4: [595.28, 841.89],
  A5: [419.53, 595.28],
  A6: [297.64, 419.53],
  A7: [209.76, 297.64],
  A8: [147.4, 209.76],
  A9: [104.88, 147.4],
  A10: [73.7, 104.88],
  B0: [2834.65, 4008.19],
  B1: [2004.09, 2834.65],
  B2: [1417.32, 2004.09],
  B3: [1000.63, 1417.32],
  B4: [708.66, 1000.63],
  B5: [498.9, 708.66],
  B6: [354.33, 498.9],
  B7: [249.45, 354.33],
  B8: [175.75, 249.45],
  B9: [124.72, 175.75],
  B10: [87.87, 124.72],
  C0: [2599.37, 3676.54],
  C1: [1836.85, 2599.37],
  C2: [1298.27, 1836.85],
  C3: [918.43, 1298.27],
  C4: [649.13, 918.43],
  C5: [459.21, 649.13],
  C6: [323.15, 459.21],
  C7: [229.61, 323.15],
  C8: [161.57, 229.61],
  C9: [113.39, 161.57],
  C10: [79.37, 113.39],
  RA0: [2437.8, 3458.27],
  RA1: [1729.13, 2437.8],
  RA2: [1218.9, 1729.13],
  RA3: [864.57, 1218.9],
  RA4: [609.45, 864.57],
  SRA0: [2551.18, 3628.35],
  SRA1: [1814.17, 2551.18],
  SRA2: [1275.59, 1814.17],
  SRA3: [907.09, 1275.59],
  SRA4: [637.8, 907.09],
  EXECUTIVE: [521.86, 756.0],
  FOLIO: [612.0, 936.0],
  LEGAL: [612.0, 1008.0],
  LETTER: [612.0, 792.0],
  TABLOID: [792.0, 1224.0]
};

var PDFPage = /*#__PURE__*/function () {
  function PDFPage(document) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, PDFPage);

    this.document = document;
    this.size = options.size || 'letter';
    this.layout = options.layout || 'portrait'; // process margins

    if (typeof options.margin === 'number') {
      this.margins = {
        top: options.margin,
        left: options.margin,
        bottom: options.margin,
        right: options.margin
      }; // default to 1 inch margins
    } else {
      this.margins = options.margins || DEFAULT_MARGINS;
    } // calculate page dimensions


    var dimensions = Array.isArray(this.size) ? this.size : SIZES[this.size.toUpperCase()];
    this.width = dimensions[this.layout === 'portrait' ? 0 : 1];
    this.height = dimensions[this.layout === 'portrait' ? 1 : 0];
    this.content = this.document.ref(); // Initialize the Font, XObject, and ExtGState dictionaries

    this.resources = this.document.ref({
      ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI']
    }); // The page dictionary

    this.dictionary = this.document.ref({
      Type: 'Page',
      Parent: this.document._root.data.Pages,
      MediaBox: [0, 0, this.width, this.height],
      Contents: this.content,
      Resources: this.resources
    });
    this.markings = [];
  } // Lazily create these objects


  _createClass(PDFPage, [{
    key: "maxY",
    value: function maxY() {
      return this.height - this.margins.bottom;
    }
  }, {
    key: "write",
    value: function write(chunk) {
      return this.content.write(chunk);
    }
  }, {
    key: "end",
    value: function end() {
      this.dictionary.end();
      this.resources.end();
      return this.content.end();
    }
  }, {
    key: "fonts",
    get: function get() {
      var data = this.resources.data;
      return data.Font != null ? data.Font : data.Font = {};
    }
  }, {
    key: "xobjects",
    get: function get() {
      var data = this.resources.data;
      return data.XObject != null ? data.XObject : data.XObject = {};
    }
  }, {
    key: "ext_gstates",
    get: function get() {
      var data = this.resources.data;
      return data.ExtGState != null ? data.ExtGState : data.ExtGState = {};
    }
  }, {
    key: "patterns",
    get: function get() {
      var data = this.resources.data;
      return data.Pattern != null ? data.Pattern : data.Pattern = {};
    }
  }, {
    key: "annotations",
    get: function get() {
      var data = this.dictionary.data;
      return data.Annots != null ? data.Annots : data.Annots = [];
    }
  }, {
    key: "structParentTreeKey",
    get: function get() {
      var data = this.dictionary.data;
      return data.StructParents != null ? data.StructParents : data.StructParents = this.document.createStructParentTreeNextKey();
    }
  }]);

  return PDFPage;
}();

var PDFNameTree = /*#__PURE__*/function (_PDFTree) {
  _inherits(PDFNameTree, _PDFTree);

  var _super = _createSuper(PDFNameTree);

  function PDFNameTree() {
    _classCallCheck(this, PDFNameTree);

    return _super.apply(this, arguments);
  }

  _createClass(PDFNameTree, [{
    key: "_compareKeys",
    value: function _compareKeys(a, b) {
      return a.localeCompare(b);
    }
  }, {
    key: "_keysName",
    value: function _keysName() {
      return "Names";
    }
  }, {
    key: "_dataForKey",
    value: function _dataForKey(k) {
      return new String(k);
    }
  }]);

  return PDFNameTree;
}(PDFTree);

/**\r
 * Check if value is in a range group.\r
 * @param {number} value\r
 * @param {number[]} rangeGroup\r
 * @returns {boolean}\r
 */
function inRange(value, rangeGroup) {
  if (value < rangeGroup[0]) return false;
  var startRange = 0;
  var endRange = rangeGroup.length / 2;

  while (startRange <= endRange) {
    var middleRange = Math.floor((startRange + endRange) / 2); // actual array index

    var arrayIndex = middleRange * 2; // Check if value is in range pointed by actual index

    if (value >= rangeGroup[arrayIndex] && value <= rangeGroup[arrayIndex + 1]) {
      return true;
    }

    if (value > rangeGroup[arrayIndex + 1]) {
      // Search Right Side Of Array
      startRange = middleRange + 1;
    } else {
      // Search Left Side Of Array
      endRange = middleRange - 1;
    }
  }

  return false;
}

/**\r
 * A.1 Unassigned code points in Unicode 3.2\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-A.1\r
 */

var unassigned_code_points = [0x0221, 0x0221, 0x0234, 0x024f, 0x02ae, 0x02af, 0x02ef, 0x02ff, 0x0350, 0x035f, 0x0370, 0x0373, 0x0376, 0x0379, 0x037b, 0x037d, 0x037f, 0x0383, 0x038b, 0x038b, 0x038d, 0x038d, 0x03a2, 0x03a2, 0x03cf, 0x03cf, 0x03f7, 0x03ff, 0x0487, 0x0487, 0x04cf, 0x04cf, 0x04f6, 0x04f7, 0x04fa, 0x04ff, 0x0510, 0x0530, 0x0557, 0x0558, 0x0560, 0x0560, 0x0588, 0x0588, 0x058b, 0x0590, 0x05a2, 0x05a2, 0x05ba, 0x05ba, 0x05c5, 0x05cf, 0x05eb, 0x05ef, 0x05f5, 0x060b, 0x060d, 0x061a, 0x061c, 0x061e, 0x0620, 0x0620, 0x063b, 0x063f, 0x0656, 0x065f, 0x06ee, 0x06ef, 0x06ff, 0x06ff, 0x070e, 0x070e, 0x072d, 0x072f, 0x074b, 0x077f, 0x07b2, 0x0900, 0x0904, 0x0904, 0x093a, 0x093b, 0x094e, 0x094f, 0x0955, 0x0957, 0x0971, 0x0980, 0x0984, 0x0984, 0x098d, 0x098e, 0x0991, 0x0992, 0x09a9, 0x09a9, 0x09b1, 0x09b1, 0x09b3, 0x09b5, 0x09ba, 0x09bb, 0x09bd, 0x09bd, 0x09c5, 0x09c6, 0x09c9, 0x09ca, 0x09ce, 0x09d6, 0x09d8, 0x09db, 0x09de, 0x09de, 0x09e4, 0x09e5, 0x09fb, 0x0a01, 0x0a03, 0x0a04, 0x0a0b, 0x0a0e, 0x0a11, 0x0a12, 0x0a29, 0x0a29, 0x0a31, 0x0a31, 0x0a34, 0x0a34, 0x0a37, 0x0a37, 0x0a3a, 0x0a3b, 0x0a3d, 0x0a3d, 0x0a43, 0x0a46, 0x0a49, 0x0a4a, 0x0a4e, 0x0a58, 0x0a5d, 0x0a5d, 0x0a5f, 0x0a65, 0x0a75, 0x0a80, 0x0a84, 0x0a84, 0x0a8c, 0x0a8c, 0x0a8e, 0x0a8e, 0x0a92, 0x0a92, 0x0aa9, 0x0aa9, 0x0ab1, 0x0ab1, 0x0ab4, 0x0ab4, 0x0aba, 0x0abb, 0x0ac6, 0x0ac6, 0x0aca, 0x0aca, 0x0ace, 0x0acf, 0x0ad1, 0x0adf, 0x0ae1, 0x0ae5, 0x0af0, 0x0b00, 0x0b04, 0x0b04, 0x0b0d, 0x0b0e, 0x0b11, 0x0b12, 0x0b29, 0x0b29, 0x0b31, 0x0b31, 0x0b34, 0x0b35, 0x0b3a, 0x0b3b, 0x0b44, 0x0b46, 0x0b49, 0x0b4a, 0x0b4e, 0x0b55, 0x0b58, 0x0b5b, 0x0b5e, 0x0b5e, 0x0b62, 0x0b65, 0x0b71, 0x0b81, 0x0b84, 0x0b84, 0x0b8b, 0x0b8d, 0x0b91, 0x0b91, 0x0b96, 0x0b98, 0x0b9b, 0x0b9b, 0x0b9d, 0x0b9d, 0x0ba0, 0x0ba2, 0x0ba5, 0x0ba7, 0x0bab, 0x0bad, 0x0bb6, 0x0bb6, 0x0bba, 0x0bbd, 0x0bc3, 0x0bc5, 0x0bc9, 0x0bc9, 0x0bce, 0x0bd6, 0x0bd8, 0x0be6, 0x0bf3, 0x0c00, 0x0c04, 0x0c04, 0x0c0d, 0x0c0d, 0x0c11, 0x0c11, 0x0c29, 0x0c29, 0x0c34, 0x0c34, 0x0c3a, 0x0c3d, 0x0c45, 0x0c45, 0x0c49, 0x0c49, 0x0c4e, 0x0c54, 0x0c57, 0x0c5f, 0x0c62, 0x0c65, 0x0c70, 0x0c81, 0x0c84, 0x0c84, 0x0c8d, 0x0c8d, 0x0c91, 0x0c91, 0x0ca9, 0x0ca9, 0x0cb4, 0x0cb4, 0x0cba, 0x0cbd, 0x0cc5, 0x0cc5, 0x0cc9, 0x0cc9, 0x0cce, 0x0cd4, 0x0cd7, 0x0cdd, 0x0cdf, 0x0cdf, 0x0ce2, 0x0ce5, 0x0cf0, 0x0d01, 0x0d04, 0x0d04, 0x0d0d, 0x0d0d, 0x0d11, 0x0d11, 0x0d29, 0x0d29, 0x0d3a, 0x0d3d, 0x0d44, 0x0d45, 0x0d49, 0x0d49, 0x0d4e, 0x0d56, 0x0d58, 0x0d5f, 0x0d62, 0x0d65, 0x0d70, 0x0d81, 0x0d84, 0x0d84, 0x0d97, 0x0d99, 0x0db2, 0x0db2, 0x0dbc, 0x0dbc, 0x0dbe, 0x0dbf, 0x0dc7, 0x0dc9, 0x0dcb, 0x0dce, 0x0dd5, 0x0dd5, 0x0dd7, 0x0dd7, 0x0de0, 0x0df1, 0x0df5, 0x0e00, 0x0e3b, 0x0e3e, 0x0e5c, 0x0e80, 0x0e83, 0x0e83, 0x0e85, 0x0e86, 0x0e89, 0x0e89, 0x0e8b, 0x0e8c, 0x0e8e, 0x0e93, 0x0e98, 0x0e98, 0x0ea0, 0x0ea0, 0x0ea4, 0x0ea4, 0x0ea6, 0x0ea6, 0x0ea8, 0x0ea9, 0x0eac, 0x0eac, 0x0eba, 0x0eba, 0x0ebe, 0x0ebf, 0x0ec5, 0x0ec5, 0x0ec7, 0x0ec7, 0x0ece, 0x0ecf, 0x0eda, 0x0edb, 0x0ede, 0x0eff, 0x0f48, 0x0f48, 0x0f6b, 0x0f70, 0x0f8c, 0x0f8f, 0x0f98, 0x0f98, 0x0fbd, 0x0fbd, 0x0fcd, 0x0fce, 0x0fd0, 0x0fff, 0x1022, 0x1022, 0x1028, 0x1028, 0x102b, 0x102b, 0x1033, 0x1035, 0x103a, 0x103f, 0x105a, 0x109f, 0x10c6, 0x10cf, 0x10f9, 0x10fa, 0x10fc, 0x10ff, 0x115a, 0x115e, 0x11a3, 0x11a7, 0x11fa, 0x11ff, 0x1207, 0x1207, 0x1247, 0x1247, 0x1249, 0x1249, 0x124e, 0x124f, 0x1257, 0x1257, 0x1259, 0x1259, 0x125e, 0x125f, 0x1287, 0x1287, 0x1289, 0x1289, 0x128e, 0x128f, 0x12af, 0x12af, 0x12b1, 0x12b1, 0x12b6, 0x12b7, 0x12bf, 0x12bf, 0x12c1, 0x12c1, 0x12c6, 0x12c7, 0x12cf, 0x12cf, 0x12d7, 0x12d7, 0x12ef, 0x12ef, 0x130f, 0x130f, 0x1311, 0x1311, 0x1316, 0x1317, 0x131f, 0x131f, 0x1347, 0x1347, 0x135b, 0x1360, 0x137d, 0x139f, 0x13f5, 0x1400, 0x1677, 0x167f, 0x169d, 0x169f, 0x16f1, 0x16ff, 0x170d, 0x170d, 0x1715, 0x171f, 0x1737, 0x173f, 0x1754, 0x175f, 0x176d, 0x176d, 0x1771, 0x1771, 0x1774, 0x177f, 0x17dd, 0x17df, 0x17ea, 0x17ff, 0x180f, 0x180f, 0x181a, 0x181f, 0x1878, 0x187f, 0x18aa, 0x1dff, 0x1e9c, 0x1e9f, 0x1efa, 0x1eff, 0x1f16, 0x1f17, 0x1f1e, 0x1f1f, 0x1f46, 0x1f47, 0x1f4e, 0x1f4f, 0x1f58, 0x1f58, 0x1f5a, 0x1f5a, 0x1f5c, 0x1f5c, 0x1f5e, 0x1f5e, 0x1f7e, 0x1f7f, 0x1fb5, 0x1fb5, 0x1fc5, 0x1fc5, 0x1fd4, 0x1fd5, 0x1fdc, 0x1fdc, 0x1ff0, 0x1ff1, 0x1ff5, 0x1ff5, 0x1fff, 0x1fff, 0x2053, 0x2056, 0x2058, 0x205e, 0x2064, 0x2069, 0x2072, 0x2073, 0x208f, 0x209f, 0x20b2, 0x20cf, 0x20eb, 0x20ff, 0x213b, 0x213c, 0x214c, 0x2152, 0x2184, 0x218f, 0x23cf, 0x23ff, 0x2427, 0x243f, 0x244b, 0x245f, 0x24ff, 0x24ff, 0x2614, 0x2615, 0x2618, 0x2618, 0x267e, 0x267f, 0x268a, 0x2700, 0x2705, 0x2705, 0x270a, 0x270b, 0x2728, 0x2728, 0x274c, 0x274c, 0x274e, 0x274e, 0x2753, 0x2755, 0x2757, 0x2757, 0x275f, 0x2760, 0x2795, 0x2797, 0x27b0, 0x27b0, 0x27bf, 0x27cf, 0x27ec, 0x27ef, 0x2b00, 0x2e7f, 0x2e9a, 0x2e9a, 0x2ef4, 0x2eff, 0x2fd6, 0x2fef, 0x2ffc, 0x2fff, 0x3040, 0x3040, 0x3097, 0x3098, 0x3100, 0x3104, 0x312d, 0x3130, 0x318f, 0x318f, 0x31b8, 0x31ef, 0x321d, 0x321f, 0x3244, 0x3250, 0x327c, 0x327e, 0x32cc, 0x32cf, 0x32ff, 0x32ff, 0x3377, 0x337a, 0x33de, 0x33df, 0x33ff, 0x33ff, 0x4db6, 0x4dff, 0x9fa6, 0x9fff, 0xa48d, 0xa48f, 0xa4c7, 0xabff, 0xd7a4, 0xd7ff, 0xfa2e, 0xfa2f, 0xfa6b, 0xfaff, 0xfb07, 0xfb12, 0xfb18, 0xfb1c, 0xfb37, 0xfb37, 0xfb3d, 0xfb3d, 0xfb3f, 0xfb3f, 0xfb42, 0xfb42, 0xfb45, 0xfb45, 0xfbb2, 0xfbd2, 0xfd40, 0xfd4f, 0xfd90, 0xfd91, 0xfdc8, 0xfdcf, 0xfdfd, 0xfdff, 0xfe10, 0xfe1f, 0xfe24, 0xfe2f, 0xfe47, 0xfe48, 0xfe53, 0xfe53, 0xfe67, 0xfe67, 0xfe6c, 0xfe6f, 0xfe75, 0xfe75, 0xfefd, 0xfefe, 0xff00, 0xff00, 0xffbf, 0xffc1, 0xffc8, 0xffc9, 0xffd0, 0xffd1, 0xffd8, 0xffd9, 0xffdd, 0xffdf, 0xffe7, 0xffe7, 0xffef, 0xfff8, 0x10000, 0x102ff, 0x1031f, 0x1031f, 0x10324, 0x1032f, 0x1034b, 0x103ff, 0x10426, 0x10427, 0x1044e, 0x1cfff, 0x1d0f6, 0x1d0ff, 0x1d127, 0x1d129, 0x1d1de, 0x1d3ff, 0x1d455, 0x1d455, 0x1d49d, 0x1d49d, 0x1d4a0, 0x1d4a1, 0x1d4a3, 0x1d4a4, 0x1d4a7, 0x1d4a8, 0x1d4ad, 0x1d4ad, 0x1d4ba, 0x1d4ba, 0x1d4bc, 0x1d4bc, 0x1d4c1, 0x1d4c1, 0x1d4c4, 0x1d4c4, 0x1d506, 0x1d506, 0x1d50b, 0x1d50c, 0x1d515, 0x1d515, 0x1d51d, 0x1d51d, 0x1d53a, 0x1d53a, 0x1d53f, 0x1d53f, 0x1d545, 0x1d545, 0x1d547, 0x1d549, 0x1d551, 0x1d551, 0x1d6a4, 0x1d6a7, 0x1d7ca, 0x1d7cd, 0x1d800, 0x1fffd, 0x2a6d7, 0x2f7ff, 0x2fa1e, 0x2fffd, 0x30000, 0x3fffd, 0x40000, 0x4fffd, 0x50000, 0x5fffd, 0x60000, 0x6fffd, 0x70000, 0x7fffd, 0x80000, 0x8fffd, 0x90000, 0x9fffd, 0xa0000, 0xafffd, 0xb0000, 0xbfffd, 0xc0000, 0xcfffd, 0xd0000, 0xdfffd, 0xe0000, 0xe0000, 0xe0002, 0xe001f, 0xe0080, 0xefffd]; // prettier-ignore-end

var isUnassignedCodePoint = function isUnassignedCodePoint(character) {
  return inRange(character, unassigned_code_points);
}; // prettier-ignore-start

/**\r
 * B.1 Commonly mapped to nothing\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-B.1\r
 */


var commonly_mapped_to_nothing = [0x00ad, 0x00ad, 0x034f, 0x034f, 0x1806, 0x1806, 0x180b, 0x180b, 0x180c, 0x180c, 0x180d, 0x180d, 0x200b, 0x200b, 0x200c, 0x200c, 0x200d, 0x200d, 0x2060, 0x2060, 0xfe00, 0xfe00, 0xfe01, 0xfe01, 0xfe02, 0xfe02, 0xfe03, 0xfe03, 0xfe04, 0xfe04, 0xfe05, 0xfe05, 0xfe06, 0xfe06, 0xfe07, 0xfe07, 0xfe08, 0xfe08, 0xfe09, 0xfe09, 0xfe0a, 0xfe0a, 0xfe0b, 0xfe0b, 0xfe0c, 0xfe0c, 0xfe0d, 0xfe0d, 0xfe0e, 0xfe0e, 0xfe0f, 0xfe0f, 0xfeff, 0xfeff]; // prettier-ignore-end

var isCommonlyMappedToNothing = function isCommonlyMappedToNothing(character) {
  return inRange(character, commonly_mapped_to_nothing);
}; // prettier-ignore-start

/**\r
 * C.1.2 Non-ASCII space characters\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-C.1.2\r
 */


var non_ASCII_space_characters = [0x00a0, 0x00a0
/* NO-BREAK SPACE */
, 0x1680, 0x1680
/* OGHAM SPACE MARK */
, 0x2000, 0x2000
/* EN QUAD */
, 0x2001, 0x2001
/* EM QUAD */
, 0x2002, 0x2002
/* EN SPACE */
, 0x2003, 0x2003
/* EM SPACE */
, 0x2004, 0x2004
/* THREE-PER-EM SPACE */
, 0x2005, 0x2005
/* FOUR-PER-EM SPACE */
, 0x2006, 0x2006
/* SIX-PER-EM SPACE */
, 0x2007, 0x2007
/* FIGURE SPACE */
, 0x2008, 0x2008
/* PUNCTUATION SPACE */
, 0x2009, 0x2009
/* THIN SPACE */
, 0x200a, 0x200a
/* HAIR SPACE */
, 0x200b, 0x200b
/* ZERO WIDTH SPACE */
, 0x202f, 0x202f
/* NARROW NO-BREAK SPACE */
, 0x205f, 0x205f
/* MEDIUM MATHEMATICAL SPACE */
, 0x3000, 0x3000
/* IDEOGRAPHIC SPACE */
]; // prettier-ignore-end

var isNonASCIISpaceCharacter = function isNonASCIISpaceCharacter(character) {
  return inRange(character, non_ASCII_space_characters);
}; // prettier-ignore-start


var non_ASCII_controls_characters = [
/**\r
 * C.2.2 Non-ASCII control characters\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.2\r
 */
0x0080, 0x009f
/* [CONTROL CHARACTERS] */
, 0x06dd, 0x06dd
/* ARABIC END OF AYAH */
, 0x070f, 0x070f
/* SYRIAC ABBREVIATION MARK */
, 0x180e, 0x180e
/* MONGOLIAN VOWEL SEPARATOR */
, 0x200c, 0x200c
/* ZERO WIDTH NON-JOINER */
, 0x200d, 0x200d
/* ZERO WIDTH JOINER */
, 0x2028, 0x2028
/* LINE SEPARATOR */
, 0x2029, 0x2029
/* PARAGRAPH SEPARATOR */
, 0x2060, 0x2060
/* WORD JOINER */
, 0x2061, 0x2061
/* FUNCTION APPLICATION */
, 0x2062, 0x2062
/* INVISIBLE TIMES */
, 0x2063, 0x2063
/* INVISIBLE SEPARATOR */
, 0x206a, 0x206f
/* [CONTROL CHARACTERS] */
, 0xfeff, 0xfeff
/* ZERO WIDTH NO-BREAK SPACE */
, 0xfff9, 0xfffc
/* [CONTROL CHARACTERS] */
, 0x1d173, 0x1d17a
/* [MUSICAL CONTROL CHARACTERS] */
];
var non_character_codepoints = [
/**\r
 * C.4 Non-character code points\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-C.4\r
 */
0xfdd0, 0xfdef
/* [NONCHARACTER CODE POINTS] */
, 0xfffe, 0xffff
/* [NONCHARACTER CODE POINTS] */
, 0x1fffe, 0x1ffff
/* [NONCHARACTER CODE POINTS] */
, 0x2fffe, 0x2ffff
/* [NONCHARACTER CODE POINTS] */
, 0x3fffe, 0x3ffff
/* [NONCHARACTER CODE POINTS] */
, 0x4fffe, 0x4ffff
/* [NONCHARACTER CODE POINTS] */
, 0x5fffe, 0x5ffff
/* [NONCHARACTER CODE POINTS] */
, 0x6fffe, 0x6ffff
/* [NONCHARACTER CODE POINTS] */
, 0x7fffe, 0x7ffff
/* [NONCHARACTER CODE POINTS] */
, 0x8fffe, 0x8ffff
/* [NONCHARACTER CODE POINTS] */
, 0x9fffe, 0x9ffff
/* [NONCHARACTER CODE POINTS] */
, 0xafffe, 0xaffff
/* [NONCHARACTER CODE POINTS] */
, 0xbfffe, 0xbffff
/* [NONCHARACTER CODE POINTS] */
, 0xcfffe, 0xcffff
/* [NONCHARACTER CODE POINTS] */
, 0xdfffe, 0xdffff
/* [NONCHARACTER CODE POINTS] */
, 0xefffe, 0xeffff
/* [NONCHARACTER CODE POINTS] */
, 0x10fffe, 0x10ffff
/* [NONCHARACTER CODE POINTS] */
];
/**\r
 * 2.3.  Prohibited Output\r
 */

var prohibited_characters = [
/**\r
 * C.2.1 ASCII control characters\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.1\r
 */
0, 0x001f
/* [CONTROL CHARACTERS] */
, 0x007f, 0x007f
/* DELETE */
,
/**\r
 * C.8 Change display properties or are deprecated\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-C.8\r
 */
0x0340, 0x0340
/* COMBINING GRAVE TONE MARK */
, 0x0341, 0x0341
/* COMBINING ACUTE TONE MARK */
, 0x200e, 0x200e
/* LEFT-TO-RIGHT MARK */
, 0x200f, 0x200f
/* RIGHT-TO-LEFT MARK */
, 0x202a, 0x202a
/* LEFT-TO-RIGHT EMBEDDING */
, 0x202b, 0x202b
/* RIGHT-TO-LEFT EMBEDDING */
, 0x202c, 0x202c
/* POP DIRECTIONAL FORMATTING */
, 0x202d, 0x202d
/* LEFT-TO-RIGHT OVERRIDE */
, 0x202e, 0x202e
/* RIGHT-TO-LEFT OVERRIDE */
, 0x206a, 0x206a
/* INHIBIT SYMMETRIC SWAPPING */
, 0x206b, 0x206b
/* ACTIVATE SYMMETRIC SWAPPING */
, 0x206c, 0x206c
/* INHIBIT ARABIC FORM SHAPING */
, 0x206d, 0x206d
/* ACTIVATE ARABIC FORM SHAPING */
, 0x206e, 0x206e
/* NATIONAL DIGIT SHAPES */
, 0x206f, 0x206f
/* NOMINAL DIGIT SHAPES */
,
/**\r
 * C.7 Inappropriate for canonical representation\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-C.7\r
 */
0x2ff0, 0x2ffb
/* [IDEOGRAPHIC DESCRIPTION CHARACTERS] */
,
/**\r
 * C.5 Surrogate codes\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-C.5\r
 */
0xd800, 0xdfff,
/**\r
 * C.3 Private use\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-C.3\r
 */
0xe000, 0xf8ff
/* [PRIVATE USE, PLANE 0] */
,
/**\r
 * C.6 Inappropriate for plain text\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-C.6\r
 */
0xfff9, 0xfff9
/* INTERLINEAR ANNOTATION ANCHOR */
, 0xfffa, 0xfffa
/* INTERLINEAR ANNOTATION SEPARATOR */
, 0xfffb, 0xfffb
/* INTERLINEAR ANNOTATION TERMINATOR */
, 0xfffc, 0xfffc
/* OBJECT REPLACEMENT CHARACTER */
, 0xfffd, 0xfffd
/* REPLACEMENT CHARACTER */
,
/**\r
 * C.9 Tagging characters\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-C.9\r
 */
0xe0001, 0xe0001
/* LANGUAGE TAG */
, 0xe0020, 0xe007f
/* [TAGGING CHARACTERS] */
,
/**\r
 * C.3 Private use\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-C.3\r
 */
0xf0000, 0xffffd
/* [PRIVATE USE, PLANE 15] */
, 0x100000, 0x10fffd
/* [PRIVATE USE, PLANE 16] */
]; // prettier-ignore-end

var isProhibitedCharacter = function isProhibitedCharacter(character) {
  return inRange(character, non_ASCII_space_characters) || inRange(character, prohibited_characters) || inRange(character, non_ASCII_controls_characters) || inRange(character, non_character_codepoints);
}; // prettier-ignore-start

/**\r
 * D.1 Characters with bidirectional property "R" or "AL"\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-D.1\r
 */


var bidirectional_r_al = [0x05be, 0x05be, 0x05c0, 0x05c0, 0x05c3, 0x05c3, 0x05d0, 0x05ea, 0x05f0, 0x05f4, 0x061b, 0x061b, 0x061f, 0x061f, 0x0621, 0x063a, 0x0640, 0x064a, 0x066d, 0x066f, 0x0671, 0x06d5, 0x06dd, 0x06dd, 0x06e5, 0x06e6, 0x06fa, 0x06fe, 0x0700, 0x070d, 0x0710, 0x0710, 0x0712, 0x072c, 0x0780, 0x07a5, 0x07b1, 0x07b1, 0x200f, 0x200f, 0xfb1d, 0xfb1d, 0xfb1f, 0xfb28, 0xfb2a, 0xfb36, 0xfb38, 0xfb3c, 0xfb3e, 0xfb3e, 0xfb40, 0xfb41, 0xfb43, 0xfb44, 0xfb46, 0xfbb1, 0xfbd3, 0xfd3d, 0xfd50, 0xfd8f, 0xfd92, 0xfdc7, 0xfdf0, 0xfdfc, 0xfe70, 0xfe74, 0xfe76, 0xfefc]; // prettier-ignore-end

var isBidirectionalRAL = function isBidirectionalRAL(character) {
  return inRange(character, bidirectional_r_al);
}; // prettier-ignore-start

/**\r
 * D.2 Characters with bidirectional property "L"\r
 * @link https://tools.ietf.org/html/rfc3454#appendix-D.2\r
 */


var bidirectional_l = [0x0041, 0x005a, 0x0061, 0x007a, 0x00aa, 0x00aa, 0x00b5, 0x00b5, 0x00ba, 0x00ba, 0x00c0, 0x00d6, 0x00d8, 0x00f6, 0x00f8, 0x0220, 0x0222, 0x0233, 0x0250, 0x02ad, 0x02b0, 0x02b8, 0x02bb, 0x02c1, 0x02d0, 0x02d1, 0x02e0, 0x02e4, 0x02ee, 0x02ee, 0x037a, 0x037a, 0x0386, 0x0386, 0x0388, 0x038a, 0x038c, 0x038c, 0x038e, 0x03a1, 0x03a3, 0x03ce, 0x03d0, 0x03f5, 0x0400, 0x0482, 0x048a, 0x04ce, 0x04d0, 0x04f5, 0x04f8, 0x04f9, 0x0500, 0x050f, 0x0531, 0x0556, 0x0559, 0x055f, 0x0561, 0x0587, 0x0589, 0x0589, 0x0903, 0x0903, 0x0905, 0x0939, 0x093d, 0x0940, 0x0949, 0x094c, 0x0950, 0x0950, 0x0958, 0x0961, 0x0964, 0x0970, 0x0982, 0x0983, 0x0985, 0x098c, 0x098f, 0x0990, 0x0993, 0x09a8, 0x09aa, 0x09b0, 0x09b2, 0x09b2, 0x09b6, 0x09b9, 0x09be, 0x09c0, 0x09c7, 0x09c8, 0x09cb, 0x09cc, 0x09d7, 0x09d7, 0x09dc, 0x09dd, 0x09df, 0x09e1, 0x09e6, 0x09f1, 0x09f4, 0x09fa, 0x0a05, 0x0a0a, 0x0a0f, 0x0a10, 0x0a13, 0x0a28, 0x0a2a, 0x0a30, 0x0a32, 0x0a33, 0x0a35, 0x0a36, 0x0a38, 0x0a39, 0x0a3e, 0x0a40, 0x0a59, 0x0a5c, 0x0a5e, 0x0a5e, 0x0a66, 0x0a6f, 0x0a72, 0x0a74, 0x0a83, 0x0a83, 0x0a85, 0x0a8b, 0x0a8d, 0x0a8d, 0x0a8f, 0x0a91, 0x0a93, 0x0aa8, 0x0aaa, 0x0ab0, 0x0ab2, 0x0ab3, 0x0ab5, 0x0ab9, 0x0abd, 0x0ac0, 0x0ac9, 0x0ac9, 0x0acb, 0x0acc, 0x0ad0, 0x0ad0, 0x0ae0, 0x0ae0, 0x0ae6, 0x0aef, 0x0b02, 0x0b03, 0x0b05, 0x0b0c, 0x0b0f, 0x0b10, 0x0b13, 0x0b28, 0x0b2a, 0x0b30, 0x0b32, 0x0b33, 0x0b36, 0x0b39, 0x0b3d, 0x0b3e, 0x0b40, 0x0b40, 0x0b47, 0x0b48, 0x0b4b, 0x0b4c, 0x0b57, 0x0b57, 0x0b5c, 0x0b5d, 0x0b5f, 0x0b61, 0x0b66, 0x0b70, 0x0b83, 0x0b83, 0x0b85, 0x0b8a, 0x0b8e, 0x0b90, 0x0b92, 0x0b95, 0x0b99, 0x0b9a, 0x0b9c, 0x0b9c, 0x0b9e, 0x0b9f, 0x0ba3, 0x0ba4, 0x0ba8, 0x0baa, 0x0bae, 0x0bb5, 0x0bb7, 0x0bb9, 0x0bbe, 0x0bbf, 0x0bc1, 0x0bc2, 0x0bc6, 0x0bc8, 0x0bca, 0x0bcc, 0x0bd7, 0x0bd7, 0x0be7, 0x0bf2, 0x0c01, 0x0c03, 0x0c05, 0x0c0c, 0x0c0e, 0x0c10, 0x0c12, 0x0c28, 0x0c2a, 0x0c33, 0x0c35, 0x0c39, 0x0c41, 0x0c44, 0x0c60, 0x0c61, 0x0c66, 0x0c6f, 0x0c82, 0x0c83, 0x0c85, 0x0c8c, 0x0c8e, 0x0c90, 0x0c92, 0x0ca8, 0x0caa, 0x0cb3, 0x0cb5, 0x0cb9, 0x0cbe, 0x0cbe, 0x0cc0, 0x0cc4, 0x0cc7, 0x0cc8, 0x0cca, 0x0ccb, 0x0cd5, 0x0cd6, 0x0cde, 0x0cde, 0x0ce0, 0x0ce1, 0x0ce6, 0x0cef, 0x0d02, 0x0d03, 0x0d05, 0x0d0c, 0x0d0e, 0x0d10, 0x0d12, 0x0d28, 0x0d2a, 0x0d39, 0x0d3e, 0x0d40, 0x0d46, 0x0d48, 0x0d4a, 0x0d4c, 0x0d57, 0x0d57, 0x0d60, 0x0d61, 0x0d66, 0x0d6f, 0x0d82, 0x0d83, 0x0d85, 0x0d96, 0x0d9a, 0x0db1, 0x0db3, 0x0dbb, 0x0dbd, 0x0dbd, 0x0dc0, 0x0dc6, 0x0dcf, 0x0dd1, 0x0dd8, 0x0ddf, 0x0df2, 0x0df4, 0x0e01, 0x0e30, 0x0e32, 0x0e33, 0x0e40, 0x0e46, 0x0e4f, 0x0e5b, 0x0e81, 0x0e82, 0x0e84, 0x0e84, 0x0e87, 0x0e88, 0x0e8a, 0x0e8a, 0x0e8d, 0x0e8d, 0x0e94, 0x0e97, 0x0e99, 0x0e9f, 0x0ea1, 0x0ea3, 0x0ea5, 0x0ea5, 0x0ea7, 0x0ea7, 0x0eaa, 0x0eab, 0x0ead, 0x0eb0, 0x0eb2, 0x0eb3, 0x0ebd, 0x0ebd, 0x0ec0, 0x0ec4, 0x0ec6, 0x0ec6, 0x0ed0, 0x0ed9, 0x0edc, 0x0edd, 0x0f00, 0x0f17, 0x0f1a, 0x0f34, 0x0f36, 0x0f36, 0x0f38, 0x0f38, 0x0f3e, 0x0f47, 0x0f49, 0x0f6a, 0x0f7f, 0x0f7f, 0x0f85, 0x0f85, 0x0f88, 0x0f8b, 0x0fbe, 0x0fc5, 0x0fc7, 0x0fcc, 0x0fcf, 0x0fcf, 0x1000, 0x1021, 0x1023, 0x1027, 0x1029, 0x102a, 0x102c, 0x102c, 0x1031, 0x1031, 0x1038, 0x1038, 0x1040, 0x1057, 0x10a0, 0x10c5, 0x10d0, 0x10f8, 0x10fb, 0x10fb, 0x1100, 0x1159, 0x115f, 0x11a2, 0x11a8, 0x11f9, 0x1200, 0x1206, 0x1208, 0x1246, 0x1248, 0x1248, 0x124a, 0x124d, 0x1250, 0x1256, 0x1258, 0x1258, 0x125a, 0x125d, 0x1260, 0x1286, 0x1288, 0x1288, 0x128a, 0x128d, 0x1290, 0x12ae, 0x12b0, 0x12b0, 0x12b2, 0x12b5, 0x12b8, 0x12be, 0x12c0, 0x12c0, 0x12c2, 0x12c5, 0x12c8, 0x12ce, 0x12d0, 0x12d6, 0x12d8, 0x12ee, 0x12f0, 0x130e, 0x1310, 0x1310, 0x1312, 0x1315, 0x1318, 0x131e, 0x1320, 0x1346, 0x1348, 0x135a, 0x1361, 0x137c, 0x13a0, 0x13f4, 0x1401, 0x1676, 0x1681, 0x169a, 0x16a0, 0x16f0, 0x1700, 0x170c, 0x170e, 0x1711, 0x1720, 0x1731, 0x1735, 0x1736, 0x1740, 0x1751, 0x1760, 0x176c, 0x176e, 0x1770, 0x1780, 0x17b6, 0x17be, 0x17c5, 0x17c7, 0x17c8, 0x17d4, 0x17da, 0x17dc, 0x17dc, 0x17e0, 0x17e9, 0x1810, 0x1819, 0x1820, 0x1877, 0x1880, 0x18a8, 0x1e00, 0x1e9b, 0x1ea0, 0x1ef9, 0x1f00, 0x1f15, 0x1f18, 0x1f1d, 0x1f20, 0x1f45, 0x1f48, 0x1f4d, 0x1f50, 0x1f57, 0x1f59, 0x1f59, 0x1f5b, 0x1f5b, 0x1f5d, 0x1f5d, 0x1f5f, 0x1f7d, 0x1f80, 0x1fb4, 0x1fb6, 0x1fbc, 0x1fbe, 0x1fbe, 0x1fc2, 0x1fc4, 0x1fc6, 0x1fcc, 0x1fd0, 0x1fd3, 0x1fd6, 0x1fdb, 0x1fe0, 0x1fec, 0x1ff2, 0x1ff4, 0x1ff6, 0x1ffc, 0x200e, 0x200e, 0x2071, 0x2071, 0x207f, 0x207f, 0x2102, 0x2102, 0x2107, 0x2107, 0x210a, 0x2113, 0x2115, 0x2115, 0x2119, 0x211d, 0x2124, 0x2124, 0x2126, 0x2126, 0x2128, 0x2128, 0x212a, 0x212d, 0x212f, 0x2131, 0x2133, 0x2139, 0x213d, 0x213f, 0x2145, 0x2149, 0x2160, 0x2183, 0x2336, 0x237a, 0x2395, 0x2395, 0x249c, 0x24e9, 0x3005, 0x3007, 0x3021, 0x3029, 0x3031, 0x3035, 0x3038, 0x303c, 0x3041, 0x3096, 0x309d, 0x309f, 0x30a1, 0x30fa, 0x30fc, 0x30ff, 0x3105, 0x312c, 0x3131, 0x318e, 0x3190, 0x31b7, 0x31f0, 0x321c, 0x3220, 0x3243, 0x3260, 0x327b, 0x327f, 0x32b0, 0x32c0, 0x32cb, 0x32d0, 0x32fe, 0x3300, 0x3376, 0x337b, 0x33dd, 0x33e0, 0x33fe, 0x3400, 0x4db5, 0x4e00, 0x9fa5, 0xa000, 0xa48c, 0xac00, 0xd7a3, 0xd800, 0xfa2d, 0xfa30, 0xfa6a, 0xfb00, 0xfb06, 0xfb13, 0xfb17, 0xff21, 0xff3a, 0xff41, 0xff5a, 0xff66, 0xffbe, 0xffc2, 0xffc7, 0xffca, 0xffcf, 0xffd2, 0xffd7, 0xffda, 0xffdc, 0x10300, 0x1031e, 0x10320, 0x10323, 0x10330, 0x1034a, 0x10400, 0x10425, 0x10428, 0x1044d, 0x1d000, 0x1d0f5, 0x1d100, 0x1d126, 0x1d12a, 0x1d166, 0x1d16a, 0x1d172, 0x1d183, 0x1d184, 0x1d18c, 0x1d1a9, 0x1d1ae, 0x1d1dd, 0x1d400, 0x1d454, 0x1d456, 0x1d49c, 0x1d49e, 0x1d49f, 0x1d4a2, 0x1d4a2, 0x1d4a5, 0x1d4a6, 0x1d4a9, 0x1d4ac, 0x1d4ae, 0x1d4b9, 0x1d4bb, 0x1d4bb, 0x1d4bd, 0x1d4c0, 0x1d4c2, 0x1d4c3, 0x1d4c5, 0x1d505, 0x1d507, 0x1d50a, 0x1d50d, 0x1d514, 0x1d516, 0x1d51c, 0x1d51e, 0x1d539, 0x1d53b, 0x1d53e, 0x1d540, 0x1d544, 0x1d546, 0x1d546, 0x1d54a, 0x1d550, 0x1d552, 0x1d6a3, 0x1d6a8, 0x1d7c9, 0x20000, 0x2a6d6, 0x2f800, 0x2fa1d, 0xf0000, 0xffffd, 0x100000, 0x10fffd]; // prettier-ignore-end

var isBidirectionalL = function isBidirectionalL(character) {
  return inRange(character, bidirectional_l);
};

/**\r
 * non-ASCII space characters [StringPrep, C.1.2] that can be\r
 * mapped to SPACE (U+0020)\r
 */

var mapping2space = isNonASCIISpaceCharacter;
/**\r
 * the "commonly mapped to nothing" characters [StringPrep, B.1]\r
 * that can be mapped to nothing.\r
 */

var mapping2nothing = isCommonlyMappedToNothing; // utils

var getCodePoint = function getCodePoint(character) {
  return character.codePointAt(0);
};

var first = function first(x) {
  return x[0];
};

var last = function last(x) {
  return x[x.length - 1];
};
/**\r
 * Convert provided string into an array of Unicode Code Points.\r
 * Based on https://stackoverflow.com/a/21409165/1556249\r
 * and https://www.npmjs.com/package/code-point-at.\r
 * @param {string} input\r
 * @returns {number[]}\r
 */


function toCodePoints(input) {
  var codepoints = [];
  var size = input.length;

  for (var i = 0; i < size; i += 1) {
    var before = input.charCodeAt(i);

    if (before >= 0xd800 && before <= 0xdbff && size > i + 1) {
      var next = input.charCodeAt(i + 1);

      if (next >= 0xdc00 && next <= 0xdfff) {
        codepoints.push((before - 0xd800) * 0x400 + next - 0xdc00 + 0x10000);
        i += 1;
        continue;
      }
    }

    codepoints.push(before);
  }

  return codepoints;
}
/**\r
 * SASLprep.\r
 * @param {string} input\r
 * @param {Object} opts\r
 * @param {boolean} opts.allowUnassigned\r
 * @returns {string}\r
 */


function saslprep(input) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (typeof input !== 'string') {
    throw new TypeError('Expected string.');
  }

  if (input.length === 0) {
    return '';
  } // 1. Map


  var mapped_input = toCodePoints(input) // 1.1 mapping to space
  .map(function (character) {
    return mapping2space(character) ? 0x20 : character;
  }) // 1.2 mapping to nothing
  .filter(function (character) {
    return !mapping2nothing(character);
  }); // 2. Normalize

  var normalized_input = String.fromCodePoint.apply(null, mapped_input).normalize('NFKC');
  var normalized_map = toCodePoints(normalized_input); // 3. Prohibit

  var hasProhibited = normalized_map.some(isProhibitedCharacter);

  if (hasProhibited) {
    throw new Error('Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3');
  } // Unassigned Code Points


  if (opts.allowUnassigned !== true) {
    var hasUnassigned = normalized_map.some(isUnassignedCodePoint);

    if (hasUnassigned) {
      throw new Error('Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5');
    }
  } // 4. check bidi


  var hasBidiRAL = normalized_map.some(isBidirectionalRAL);
  var hasBidiL = normalized_map.some(isBidirectionalL); // 4.1 If a string contains any RandALCat character, the string MUST NOT
  // contain any LCat character.

  if (hasBidiRAL && hasBidiL) {
    throw new Error('String must not contain RandALCat and LCat at the same time,' + ' see https://tools.ietf.org/html/rfc3454#section-6');
  }
  /**\r
   * 4.2 If a string contains any RandALCat character, a RandALCat\r
   * character MUST be the first character of the string, and a\r
   * RandALCat character MUST be the last character of the string.\r
   */


  var isFirstBidiRAL = isBidirectionalRAL(getCodePoint(first(normalized_input)));
  var isLastBidiRAL = isBidirectionalRAL(getCodePoint(last(normalized_input)));

  if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {
    throw new Error('Bidirectional RandALCat character must be the first and the last' + ' character of the string, see https://tools.ietf.org/html/rfc3454#section-6');
  }

  return normalized_input;
}

var PDFSecurity = /*#__PURE__*/function () {
  _createClass(PDFSecurity, null, [{
    key: "generateFileID",
    value: function generateFileID() {
      var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var infoStr = "".concat(info.CreationDate.getTime(), "\\n");

      for (var key in info) {
        // eslint-disable-next-line no-prototype-builtins
        if (!info.hasOwnProperty(key)) {
          continue;
        }

        infoStr += "".concat(key, ": ").concat(info[key].valueOf(), "\\n");
      }

      return wordArrayToBuffer(crypto_js__WEBPACK_IMPORTED_MODULE_3___default().MD5(infoStr));
    }
  }, {
    key: "generateRandomWordArray",
    value: function generateRandomWordArray(bytes) {
      return crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.random(bytes);
    }
  }, {
    key: "create",
    value: function create(document) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!options.ownerPassword && !options.userPassword) {
        return null;
      }

      return new PDFSecurity(document, options);
    }
  }]);

  function PDFSecurity(document) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, PDFSecurity);

    if (!options.ownerPassword && !options.userPassword) {
      throw new Error('None of owner password and user password is defined.');
    }

    this.document = document;

    this._setupEncryption(options);
  }

  _createClass(PDFSecurity, [{
    key: "_setupEncryption",
    value: function _setupEncryption(options) {
      switch (options.pdfVersion) {
        case '1.4':
        case '1.5':
          this.version = 2;
          break;

        case '1.6':
        case '1.7':
          this.version = 4;
          break;

        case '1.7ext3':
          this.version = 5;
          break;

        default:
          this.version = 1;
          break;
      }

      var encDict = {
        Filter: 'Standard'
      };

      switch (this.version) {
        case 1:
        case 2:
        case 4:
          this._setupEncryptionV1V2V4(this.version, encDict, options);

          break;

        case 5:
          this._setupEncryptionV5(encDict, options);

          break;
      }

      this.dictionary = this.document.ref(encDict);
    }
  }, {
    key: "_setupEncryptionV1V2V4",
    value: function _setupEncryptionV1V2V4(v, encDict, options) {
      var r, permissions;

      switch (v) {
        case 1:
          r = 2;
          this.keyBits = 40;
          permissions = getPermissionsR2(options.permissions);
          break;

        case 2:
          r = 3;
          this.keyBits = 128;
          permissions = getPermissionsR3(options.permissions);
          break;

        case 4:
          r = 4;
          this.keyBits = 128;
          permissions = getPermissionsR3(options.permissions);
          break;
      }

      var paddedUserPassword = processPasswordR2R3R4(options.userPassword);
      var paddedOwnerPassword = options.ownerPassword ? processPasswordR2R3R4(options.ownerPassword) : paddedUserPassword;
      var ownerPasswordEntry = getOwnerPasswordR2R3R4(r, this.keyBits, paddedUserPassword, paddedOwnerPassword);
      this.encryptionKey = getEncryptionKeyR2R3R4(r, this.keyBits, this.document._id, paddedUserPassword, ownerPasswordEntry, permissions);
      var userPasswordEntry;

      if (r === 2) {
        userPasswordEntry = getUserPasswordR2(this.encryptionKey);
      } else {
        userPasswordEntry = getUserPasswordR3R4(this.document._id, this.encryptionKey);
      }

      encDict.V = v;

      if (v >= 2) {
        encDict.Length = this.keyBits;
      }

      if (v === 4) {
        encDict.CF = {
          StdCF: {
            AuthEvent: 'DocOpen',
            CFM: 'AESV2',
            Length: this.keyBits / 8
          }
        };
        encDict.StmF = 'StdCF';
        encDict.StrF = 'StdCF';
      }

      encDict.R = r;
      encDict.O = wordArrayToBuffer(ownerPasswordEntry);
      encDict.U = wordArrayToBuffer(userPasswordEntry);
      encDict.P = permissions;
    }
  }, {
    key: "_setupEncryptionV5",
    value: function _setupEncryptionV5(encDict, options) {
      this.keyBits = 256;
      var permissions = getPermissionsR3(options.permissions);
      var processedUserPassword = processPasswordR5(options.userPassword);
      var processedOwnerPassword = options.ownerPassword ? processPasswordR5(options.ownerPassword) : processedUserPassword;
      this.encryptionKey = getEncryptionKeyR5(PDFSecurity.generateRandomWordArray);
      var userPasswordEntry = getUserPasswordR5(processedUserPassword, PDFSecurity.generateRandomWordArray);
      var userKeySalt = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create(userPasswordEntry.words.slice(10, 12), 8);
      var userEncryptionKeyEntry = getUserEncryptionKeyR5(processedUserPassword, userKeySalt, this.encryptionKey);
      var ownerPasswordEntry = getOwnerPasswordR5(processedOwnerPassword, userPasswordEntry, PDFSecurity.generateRandomWordArray);
      var ownerKeySalt = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create(ownerPasswordEntry.words.slice(10, 12), 8);
      var ownerEncryptionKeyEntry = getOwnerEncryptionKeyR5(processedOwnerPassword, ownerKeySalt, userPasswordEntry, this.encryptionKey);
      var permsEntry = getEncryptedPermissionsR5(permissions, this.encryptionKey, PDFSecurity.generateRandomWordArray);
      encDict.V = 5;
      encDict.Length = this.keyBits;
      encDict.CF = {
        StdCF: {
          AuthEvent: 'DocOpen',
          CFM: 'AESV3',
          Length: this.keyBits / 8
        }
      };
      encDict.StmF = 'StdCF';
      encDict.StrF = 'StdCF';
      encDict.R = 5;
      encDict.O = wordArrayToBuffer(ownerPasswordEntry);
      encDict.OE = wordArrayToBuffer(ownerEncryptionKeyEntry);
      encDict.U = wordArrayToBuffer(userPasswordEntry);
      encDict.UE = wordArrayToBuffer(userEncryptionKeyEntry);
      encDict.P = permissions;
      encDict.Perms = wordArrayToBuffer(permsEntry);
    }
  }, {
    key: "getEncryptFn",
    value: function getEncryptFn(obj, gen) {
      var digest;

      if (this.version < 5) {
        digest = this.encryptionKey.clone().concat(crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create([(obj & 0xff) << 24 | (obj & 0xff00) << 8 | obj >> 8 & 0xff00 | gen & 0xff, (gen & 0xff00) << 16], 5));
      }

      if (this.version === 1 || this.version === 2) {
        var _key = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().MD5(digest);

        _key.sigBytes = Math.min(16, this.keyBits / 8 + 5);
        return function (buffer) {
          return wordArrayToBuffer(crypto_js__WEBPACK_IMPORTED_MODULE_3___default().RC4.encrypt(crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create(buffer), _key).ciphertext);
        };
      }

      var key;

      if (this.version === 4) {
        key = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().MD5(digest.concat(crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create([0x73416c54], 4)));
      } else {
        key = this.encryptionKey;
      }

      var iv = PDFSecurity.generateRandomWordArray(16);
      var options = {
        mode: (crypto_js__WEBPACK_IMPORTED_MODULE_3___default().mode).CBC,
        padding: (crypto_js__WEBPACK_IMPORTED_MODULE_3___default().pad).Pkcs7,
        iv: iv
      };
      return function (buffer) {
        return wordArrayToBuffer(iv.clone().concat(crypto_js__WEBPACK_IMPORTED_MODULE_3___default().AES.encrypt(crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create(buffer), key, options).ciphertext));
      };
    }
  }, {
    key: "end",
    value: function end() {
      this.dictionary.end();
    }
  }]);

  return PDFSecurity;
}();

function getPermissionsR2() {
  var permissionObject = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var permissions = 0xffffffc0 >> 0;

  if (permissionObject.printing) {
    permissions |= 4;
  }

  if (permissionObject.modifying) {
    permissions |= 8;
  }

  if (permissionObject.copying) {
    permissions |= 16;
  }

  if (permissionObject.annotating) {
    permissions |= 32;
  }

  return permissions;
}

function getPermissionsR3() {
  var permissionObject = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var permissions = 0xfffff0c0 >> 0;

  if (permissionObject.printing === 'lowResolution') {
    permissions |= 4;
  }

  if (permissionObject.printing === 'highResolution') {
    permissions |= 2052;
  }

  if (permissionObject.modifying) {
    permissions |= 8;
  }

  if (permissionObject.copying) {
    permissions |= 16;
  }

  if (permissionObject.annotating) {
    permissions |= 32;
  }

  if (permissionObject.fillingForms) {
    permissions |= 256;
  }

  if (permissionObject.contentAccessibility) {
    permissions |= 512;
  }

  if (permissionObject.documentAssembly) {
    permissions |= 1024;
  }

  return permissions;
}

function getUserPasswordR2(encryptionKey) {
  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default().RC4.encrypt(processPasswordR2R3R4(), encryptionKey).ciphertext;
}

function getUserPasswordR3R4(documentId, encryptionKey) {
  var key = encryptionKey.clone();
  var cipher = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().MD5(processPasswordR2R3R4().concat(crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create(documentId)));

  for (var i = 0; i < 20; i++) {
    var xorRound = Math.ceil(key.sigBytes / 4);

    for (var j = 0; j < xorRound; j++) {
      key.words[j] = encryptionKey.words[j] ^ (i | i << 8 | i << 16 | i << 24);
    }

    cipher = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().RC4.encrypt(cipher, key).ciphertext;
  }

  return cipher.concat(crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create(null, 16));
}

function getOwnerPasswordR2R3R4(r, keyBits, paddedUserPassword, paddedOwnerPassword) {
  var digest = paddedOwnerPassword;
  var round = r >= 3 ? 51 : 1;

  for (var i = 0; i < round; i++) {
    digest = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().MD5(digest);
  }

  var key = digest.clone();
  key.sigBytes = keyBits / 8;
  var cipher = paddedUserPassword;
  round = r >= 3 ? 20 : 1;

  for (var _i = 0; _i < round; _i++) {
    var xorRound = Math.ceil(key.sigBytes / 4);

    for (var j = 0; j < xorRound; j++) {
      key.words[j] = digest.words[j] ^ (_i | _i << 8 | _i << 16 | _i << 24);
    }

    cipher = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().RC4.encrypt(cipher, key).ciphertext;
  }

  return cipher;
}

function getEncryptionKeyR2R3R4(r, keyBits, documentId, paddedUserPassword, ownerPasswordEntry, permissions) {
  var key = paddedUserPassword.clone().concat(ownerPasswordEntry).concat(crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create([lsbFirstWord(permissions)], 4)).concat(crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create(documentId));
  var round = r >= 3 ? 51 : 1;

  for (var i = 0; i < round; i++) {
    key = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().MD5(key);
    key.sigBytes = keyBits / 8;
  }

  return key;
}

function getUserPasswordR5(processedUserPassword, generateRandomWordArray) {
  var validationSalt = generateRandomWordArray(8);
  var keySalt = generateRandomWordArray(8);
  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default().SHA256(processedUserPassword.clone().concat(validationSalt)).concat(validationSalt).concat(keySalt);
}

function getUserEncryptionKeyR5(processedUserPassword, userKeySalt, encryptionKey) {
  var key = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().SHA256(processedUserPassword.clone().concat(userKeySalt));
  var options = {
    mode: (crypto_js__WEBPACK_IMPORTED_MODULE_3___default().mode).CBC,
    padding: (crypto_js__WEBPACK_IMPORTED_MODULE_3___default().pad).NoPadding,
    iv: crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create(null, 16)
  };
  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default().AES.encrypt(encryptionKey, key, options).ciphertext;
}

function getOwnerPasswordR5(processedOwnerPassword, userPasswordEntry, generateRandomWordArray) {
  var validationSalt = generateRandomWordArray(8);
  var keySalt = generateRandomWordArray(8);
  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default().SHA256(processedOwnerPassword.clone().concat(validationSalt).concat(userPasswordEntry)).concat(validationSalt).concat(keySalt);
}

function getOwnerEncryptionKeyR5(processedOwnerPassword, ownerKeySalt, userPasswordEntry, encryptionKey) {
  var key = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().SHA256(processedOwnerPassword.clone().concat(ownerKeySalt).concat(userPasswordEntry));
  var options = {
    mode: (crypto_js__WEBPACK_IMPORTED_MODULE_3___default().mode).CBC,
    padding: (crypto_js__WEBPACK_IMPORTED_MODULE_3___default().pad).NoPadding,
    iv: crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create(null, 16)
  };
  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default().AES.encrypt(encryptionKey, key, options).ciphertext;
}

function getEncryptionKeyR5(generateRandomWordArray) {
  return generateRandomWordArray(32);
}

function getEncryptedPermissionsR5(permissions, encryptionKey, generateRandomWordArray) {
  var cipher = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create([lsbFirstWord(permissions), 0xffffffff, 0x54616462], 12).concat(generateRandomWordArray(4));
  var options = {
    mode: (crypto_js__WEBPACK_IMPORTED_MODULE_3___default().mode).ECB,
    padding: (crypto_js__WEBPACK_IMPORTED_MODULE_3___default().pad).NoPadding
  };
  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default().AES.encrypt(cipher, encryptionKey, options).ciphertext;
}

function processPasswordR2R3R4() {
  var password = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var out = Buffer.alloc(32);
  var length = password.length;
  var index = 0;

  while (index < length && index < 32) {
    var code = password.charCodeAt(index);

    if (code > 0xff) {
      throw new Error('Password contains one or more invalid characters.');
    }

    out[index] = code;
    index++;
  }

  while (index < 32) {
    out[index] = PASSWORD_PADDING[index - length];
    index++;
  }

  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create(out);
}

function processPasswordR5() {
  var password = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  password = unescape(encodeURIComponent(saslprep(password)));
  var length = Math.min(127, password.length);
  var out = Buffer.alloc(length);

  for (var i = 0; i < length; i++) {
    out[i] = password.charCodeAt(i);
  }

  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create(out);
}

function lsbFirstWord(data) {
  return (data & 0xff) << 24 | (data & 0xff00) << 8 | data >> 8 & 0xff00 | data >> 24 & 0xff;
}

function wordArrayToBuffer(wordArray) {
  var byteArray = [];

  for (var i = 0; i < wordArray.sigBytes; i++) {
    byteArray.push(wordArray.words[Math.floor(i / 4)] >> 8 * (3 - i % 4) & 0xff);
  }

  return Buffer.from(byteArray);
}

var PASSWORD_PADDING = [0x28, 0xbf, 0x4e, 0x5e, 0x4e, 0x75, 0x8a, 0x41, 0x64, 0x00, 0x4e, 0x56, 0xff, 0xfa, 0x01, 0x08, 0x2e, 0x2e, 0x00, 0xb6, 0xd0, 0x68, 0x3e, 0x80, 0x2f, 0x0c, 0xa9, 0xfe, 0x64, 0x53, 0x69, 0x7a];

var number = PDFObject.number;

var PDFGradient = /*#__PURE__*/function () {
  function PDFGradient(doc) {
    _classCallCheck(this, PDFGradient);

    this.doc = doc;
    this.stops = [];
    this.embedded = false;
    this.transform = [1, 0, 0, 1, 0, 0];
  }

  _createClass(PDFGradient, [{
    key: "stop",
    value: function stop(pos, color, opacity) {
      if (opacity == null) {
        opacity = 1;
      }

      color = this.doc._normalizeColor(color);

      if (this.stops.length === 0) {
        if (color.length === 3) {
          this._colorSpace = 'DeviceRGB';
        } else if (color.length === 4) {
          this._colorSpace = 'DeviceCMYK';
        } else if (color.length === 1) {
          this._colorSpace = 'DeviceGray';
        } else {
          throw new Error('Unknown color space');
        }
      } else if (this._colorSpace === 'DeviceRGB' && color.length !== 3 || this._colorSpace === 'DeviceCMYK' && color.length !== 4 || this._colorSpace === 'DeviceGray' && color.length !== 1) {
        throw new Error('All gradient stops must use the same color space');
      }

      opacity = Math.max(0, Math.min(1, opacity));
      this.stops.push([pos, color, opacity]);
      return this;
    }
  }, {
    key: "setTransform",
    value: function setTransform(m11, m12, m21, m22, dx, dy) {
      this.transform = [m11, m12, m21, m22, dx, dy];
      return this;
    }
  }, {
    key: "embed",
    value: function embed(m) {
      var fn;
      var stopsLength = this.stops.length;

      if (stopsLength === 0) {
        return;
      }

      this.embedded = true;
      this.matrix = m; // if the last stop comes before 100%, add a copy at 100%

      var last = this.stops[stopsLength - 1];

      if (last[0] < 1) {
        this.stops.push([1, last[1], last[2]]);
      }

      var bounds = [];
      var encode = [];
      var stops = [];

      for (var i = 0; i < stopsLength - 1; i++) {
        encode.push(0, 1);

        if (i + 2 !== stopsLength) {
          bounds.push(this.stops[i + 1][0]);
        }

        fn = this.doc.ref({
          FunctionType: 2,
          Domain: [0, 1],
          C0: this.stops[i + 0][1],
          C1: this.stops[i + 1][1],
          N: 1
        });
        stops.push(fn);
        fn.end();
      } // if there are only two stops, we don't need a stitching function


      if (stopsLength === 1) {
        fn = stops[0];
      } else {
        fn = this.doc.ref({
          FunctionType: 3,
          // stitching function
          Domain: [0, 1],
          Functions: stops,
          Bounds: bounds,
          Encode: encode
        });
        fn.end();
      }

      this.id = "Sh".concat(++this.doc._gradCount);
      var shader = this.shader(fn);
      shader.end();
      var pattern = this.doc.ref({
        Type: 'Pattern',
        PatternType: 2,
        Shading: shader,
        Matrix: this.matrix.map(number)
      });
      pattern.end();

      if (this.stops.some(function (stop) {
        return stop[2] < 1;
      })) {
        var grad = this.opacityGradient();
        grad._colorSpace = 'DeviceGray';

        var _iterator = _createForOfIteratorHelper(this.stops),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var stop = _step.value;
            grad.stop(stop[0], [stop[2]]);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        grad = grad.embed(this.matrix);
        var pageBBox = [0, 0, this.doc.page.width, this.doc.page.height];
        var form = this.doc.ref({
          Type: 'XObject',
          Subtype: 'Form',
          FormType: 1,
          BBox: pageBBox,
          Group: {
            Type: 'Group',
            S: 'Transparency',
            CS: 'DeviceGray'
          },
          Resources: {
            ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],
            Pattern: {
              Sh1: grad
            }
          }
        });
        form.write('/Pattern cs /Sh1 scn');
        form.end("".concat(pageBBox.join(' '), " re f"));
        var gstate = this.doc.ref({
          Type: 'ExtGState',
          SMask: {
            Type: 'Mask',
            S: 'Luminosity',
            G: form
          }
        });
        gstate.end();
        var opacityPattern = this.doc.ref({
          Type: 'Pattern',
          PatternType: 1,
          PaintType: 1,
          TilingType: 2,
          BBox: pageBBox,
          XStep: pageBBox[2],
          YStep: pageBBox[3],
          Resources: {
            ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],
            Pattern: {
              Sh1: pattern
            },
            ExtGState: {
              Gs1: gstate
            }
          }
        });
        opacityPattern.write('/Gs1 gs /Pattern cs /Sh1 scn');
        opacityPattern.end("".concat(pageBBox.join(' '), " re f"));
        this.doc.page.patterns[this.id] = opacityPattern;
      } else {
        this.doc.page.patterns[this.id] = pattern;
      }

      return pattern;
    }
  }, {
    key: "apply",
    value: function apply(op) {
      // apply gradient transform to existing document ctm
      var _this$doc$_ctm = _slicedToArray(this.doc._ctm, 6),
          m0 = _this$doc$_ctm[0],
          m1 = _this$doc$_ctm[1],
          m2 = _this$doc$_ctm[2],
          m3 = _this$doc$_ctm[3],
          m4 = _this$doc$_ctm[4],
          m5 = _this$doc$_ctm[5];

      var _this$transform = _slicedToArray(this.transform, 6),
          m11 = _this$transform[0],
          m12 = _this$transform[1],
          m21 = _this$transform[2],
          m22 = _this$transform[3],
          dx = _this$transform[4],
          dy = _this$transform[5];

      var m = [m0 * m11 + m2 * m12, m1 * m11 + m3 * m12, m0 * m21 + m2 * m22, m1 * m21 + m3 * m22, m0 * dx + m2 * dy + m4, m1 * dx + m3 * dy + m5];

      if (!this.embedded || m.join(' ') !== this.matrix.join(' ')) {
        this.embed(m);
      }

      return this.doc.addContent("/".concat(this.id, " ").concat(op));
    }
  }]);

  return PDFGradient;
}();

var PDFLinearGradient = /*#__PURE__*/function (_PDFGradient) {
  _inherits(PDFLinearGradient, _PDFGradient);

  var _super = _createSuper(PDFLinearGradient);

  function PDFLinearGradient(doc, x1, y1, x2, y2) {
    var _this;

    _classCallCheck(this, PDFLinearGradient);

    _this = _super.call(this, doc);
    _this.x1 = x1;
    _this.y1 = y1;
    _this.x2 = x2;
    _this.y2 = y2;
    return _this;
  }

  _createClass(PDFLinearGradient, [{
    key: "shader",
    value: function shader(fn) {
      return this.doc.ref({
        ShadingType: 2,
        ColorSpace: this._colorSpace,
        Coords: [this.x1, this.y1, this.x2, this.y2],
        Function: fn,
        Extend: [true, true]
      });
    }
  }, {
    key: "opacityGradient",
    value: function opacityGradient() {
      return new PDFLinearGradient(this.doc, this.x1, this.y1, this.x2, this.y2);
    }
  }]);

  return PDFLinearGradient;
}(PDFGradient);

var PDFRadialGradient = /*#__PURE__*/function (_PDFGradient2) {
  _inherits(PDFRadialGradient, _PDFGradient2);

  var _super2 = _createSuper(PDFRadialGradient);

  function PDFRadialGradient(doc, x1, y1, r1, x2, y2, r2) {
    var _this2;

    _classCallCheck(this, PDFRadialGradient);

    _this2 = _super2.call(this, doc);
    _this2.doc = doc;
    _this2.x1 = x1;
    _this2.y1 = y1;
    _this2.r1 = r1;
    _this2.x2 = x2;
    _this2.y2 = y2;
    _this2.r2 = r2;
    return _this2;
  }

  _createClass(PDFRadialGradient, [{
    key: "shader",
    value: function shader(fn) {
      return this.doc.ref({
        ShadingType: 3,
        ColorSpace: this._colorSpace,
        Coords: [this.x1, this.y1, this.r1, this.x2, this.y2, this.r2],
        Function: fn,
        Extend: [true, true]
      });
    }
  }, {
    key: "opacityGradient",
    value: function opacityGradient() {
      return new PDFRadialGradient(this.doc, this.x1, this.y1, this.r1, this.x2, this.y2, this.r2);
    }
  }]);

  return PDFRadialGradient;
}(PDFGradient);

var Gradient = {
  PDFGradient: PDFGradient,
  PDFLinearGradient: PDFLinearGradient,
  PDFRadialGradient: PDFRadialGradient
};

var PDFGradient$1 = Gradient.PDFGradient,
    PDFLinearGradient$1 = Gradient.PDFLinearGradient,
    PDFRadialGradient$1 = Gradient.PDFRadialGradient;
var ColorMixin = {
  initColor: function initColor() {
    // The opacity dictionaries
    this._opacityRegistry = {};
    this._opacityCount = 0;
    return this._gradCount = 0;
  },
  _normalizeColor: function _normalizeColor(color) {
    if (color instanceof PDFGradient$1) {
      return color;
    }

    if (typeof color === 'string') {
      if (color.charAt(0) === '#') {
        if (color.length === 4) {
          color = color.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i, '#$1$1$2$2$3$3');
        }

        var hex = parseInt(color.slice(1), 16);
        color = [hex >> 16, hex >> 8 & 0xff, hex & 0xff];
      } else if (namedColors[color]) {
        color = namedColors[color];
      }
    }

    if (Array.isArray(color)) {
      // RGB
      if (color.length === 3) {
        color = color.map(function (part) {
          return part / 255;
        }); // CMYK
      } else if (color.length === 4) {
        color = color.map(function (part) {
          return part / 100;
        });
      }

      return color;
    }

    return null;
  },
  _setColor: function _setColor(color, stroke) {
    color = this._normalizeColor(color);

    if (!color) {
      return false;
    }

    var op = stroke ? 'SCN' : 'scn';

    if (color instanceof PDFGradient$1) {
      this._setColorSpace('Pattern', stroke);

      color.apply(op);
    } else {
      var space = color.length === 4 ? 'DeviceCMYK' : 'DeviceRGB';

      this._setColorSpace(space, stroke);

      color = color.join(' ');
      this.addContent("".concat(color, " ").concat(op));
    }

    return true;
  },
  _setColorSpace: function _setColorSpace(space, stroke) {
    var op = stroke ? 'CS' : 'cs';
    return this.addContent("/".concat(space, " ").concat(op));
  },
  fillColor: function fillColor(color, opacity) {
    var set = this._setColor(color, false);

    if (set) {
      this.fillOpacity(opacity);
    } // save this for text wrapper, which needs to reset
    // the fill color on new pages


    this._fillColor = [color, opacity];
    return this;
  },
  strokeColor: function strokeColor(color, opacity) {
    var set = this._setColor(color, true);

    if (set) {
      this.strokeOpacity(opacity);
    }

    return this;
  },
  opacity: function opacity(_opacity) {
    this._doOpacity(_opacity, _opacity);

    return this;
  },
  fillOpacity: function fillOpacity(opacity) {
    this._doOpacity(opacity, null);

    return this;
  },
  strokeOpacity: function strokeOpacity(opacity) {
    this._doOpacity(null, opacity);

    return this;
  },
  _doOpacity: function _doOpacity(fillOpacity, strokeOpacity) {
    var dictionary, name;

    if (fillOpacity == null && strokeOpacity == null) {
      return;
    }

    if (fillOpacity != null) {
      fillOpacity = Math.max(0, Math.min(1, fillOpacity));
    }

    if (strokeOpacity != null) {
      strokeOpacity = Math.max(0, Math.min(1, strokeOpacity));
    }

    var key = "".concat(fillOpacity, "_").concat(strokeOpacity);

    if (this._opacityRegistry[key]) {
      var _this$_opacityRegistr = _slicedToArray(this._opacityRegistry[key], 2);

      dictionary = _this$_opacityRegistr[0];
      name = _this$_opacityRegistr[1];
    } else {
      dictionary = {
        Type: 'ExtGState'
      };

      if (fillOpacity != null) {
        dictionary.ca = fillOpacity;
      }

      if (strokeOpacity != null) {
        dictionary.CA = strokeOpacity;
      }

      dictionary = this.ref(dictionary);
      dictionary.end();
      var id = ++this._opacityCount;
      name = "Gs".concat(id);
      this._opacityRegistry[key] = [dictionary, name];
    }

    this.page.ext_gstates[name] = dictionary;
    return this.addContent("/".concat(name, " gs"));
  },
  linearGradient: function linearGradient(x1, y1, x2, y2) {
    return new PDFLinearGradient$1(this, x1, y1, x2, y2);
  },
  radialGradient: function radialGradient(x1, y1, r1, x2, y2, r2) {
    return new PDFRadialGradient$1(this, x1, y1, r1, x2, y2, r2);
  }
};
var namedColors = {
  aliceblue: [240, 248, 255],
  antiquewhite: [250, 235, 215],
  aqua: [0, 255, 255],
  aquamarine: [127, 255, 212],
  azure: [240, 255, 255],
  beige: [245, 245, 220],
  bisque: [255, 228, 196],
  black: [0, 0, 0],
  blanchedalmond: [255, 235, 205],
  blue: [0, 0, 255],
  blueviolet: [138, 43, 226],
  brown: [165, 42, 42],
  burlywood: [222, 184, 135],
  cadetblue: [95, 158, 160],
  chartreuse: [127, 255, 0],
  chocolate: [210, 105, 30],
  coral: [255, 127, 80],
  cornflowerblue: [100, 149, 237],
  cornsilk: [255, 248, 220],
  crimson: [220, 20, 60],
  cyan: [0, 255, 255],
  darkblue: [0, 0, 139],
  darkcyan: [0, 139, 139],
  darkgoldenrod: [184, 134, 11],
  darkgray: [169, 169, 169],
  darkgreen: [0, 100, 0],
  darkgrey: [169, 169, 169],
  darkkhaki: [189, 183, 107],
  darkmagenta: [139, 0, 139],
  darkolivegreen: [85, 107, 47],
  darkorange: [255, 140, 0],
  darkorchid: [153, 50, 204],
  darkred: [139, 0, 0],
  darksalmon: [233, 150, 122],
  darkseagreen: [143, 188, 143],
  darkslateblue: [72, 61, 139],
  darkslategray: [47, 79, 79],
  darkslategrey: [47, 79, 79],
  darkturquoise: [0, 206, 209],
  darkviolet: [148, 0, 211],
  deeppink: [255, 20, 147],
  deepskyblue: [0, 191, 255],
  dimgray: [105, 105, 105],
  dimgrey: [105, 105, 105],
  dodgerblue: [30, 144, 255],
  firebrick: [178, 34, 34],
  floralwhite: [255, 250, 240],
  forestgreen: [34, 139, 34],
  fuchsia: [255, 0, 255],
  gainsboro: [220, 220, 220],
  ghostwhite: [248, 248, 255],
  gold: [255, 215, 0],
  goldenrod: [218, 165, 32],
  gray: [128, 128, 128],
  grey: [128, 128, 128],
  green: [0, 128, 0],
  greenyellow: [173, 255, 47],
  honeydew: [240, 255, 240],
  hotpink: [255, 105, 180],
  indianred: [205, 92, 92],
  indigo: [75, 0, 130],
  ivory: [255, 255, 240],
  khaki: [240, 230, 140],
  lavender: [230, 230, 250],
  lavenderblush: [255, 240, 245],
  lawngreen: [124, 252, 0],
  lemonchiffon: [255, 250, 205],
  lightblue: [173, 216, 230],
  lightcoral: [240, 128, 128],
  lightcyan: [224, 255, 255],
  lightgoldenrodyellow: [250, 250, 210],
  lightgray: [211, 211, 211],
  lightgreen: [144, 238, 144],
  lightgrey: [211, 211, 211],
  lightpink: [255, 182, 193],
  lightsalmon: [255, 160, 122],
  lightseagreen: [32, 178, 170],
  lightskyblue: [135, 206, 250],
  lightslategray: [119, 136, 153],
  lightslategrey: [119, 136, 153],
  lightsteelblue: [176, 196, 222],
  lightyellow: [255, 255, 224],
  lime: [0, 255, 0],
  limegreen: [50, 205, 50],
  linen: [250, 240, 230],
  magenta: [255, 0, 255],
  maroon: [128, 0, 0],
  mediumaquamarine: [102, 205, 170],
  mediumblue: [0, 0, 205],
  mediumorchid: [186, 85, 211],
  mediumpurple: [147, 112, 219],
  mediumseagreen: [60, 179, 113],
  mediumslateblue: [123, 104, 238],
  mediumspringgreen: [0, 250, 154],
  mediumturquoise: [72, 209, 204],
  mediumvioletred: [199, 21, 133],
  midnightblue: [25, 25, 112],
  mintcream: [245, 255, 250],
  mistyrose: [255, 228, 225],
  moccasin: [255, 228, 181],
  navajowhite: [255, 222, 173],
  navy: [0, 0, 128],
  oldlace: [253, 245, 230],
  olive: [128, 128, 0],
  olivedrab: [107, 142, 35],
  orange: [255, 165, 0],
  orangered: [255, 69, 0],
  orchid: [218, 112, 214],
  palegoldenrod: [238, 232, 170],
  palegreen: [152, 251, 152],
  paleturquoise: [175, 238, 238],
  palevioletred: [219, 112, 147],
  papayawhip: [255, 239, 213],
  peachpuff: [255, 218, 185],
  peru: [205, 133, 63],
  pink: [255, 192, 203],
  plum: [221, 160, 221],
  powderblue: [176, 224, 230],
  purple: [128, 0, 128],
  red: [255, 0, 0],
  rosybrown: [188, 143, 143],
  royalblue: [65, 105, 225],
  saddlebrown: [139, 69, 19],
  salmon: [250, 128, 114],
  sandybrown: [244, 164, 96],
  seagreen: [46, 139, 87],
  seashell: [255, 245, 238],
  sienna: [160, 82, 45],
  silver: [192, 192, 192],
  skyblue: [135, 206, 235],
  slateblue: [106, 90, 205],
  slategray: [112, 128, 144],
  slategrey: [112, 128, 144],
  snow: [255, 250, 250],
  springgreen: [0, 255, 127],
  steelblue: [70, 130, 180],
  tan: [210, 180, 140],
  teal: [0, 128, 128],
  thistle: [216, 191, 216],
  tomato: [255, 99, 71],
  turquoise: [64, 224, 208],
  violet: [238, 130, 238],
  wheat: [245, 222, 179],
  white: [255, 255, 255],
  whitesmoke: [245, 245, 245],
  yellow: [255, 255, 0],
  yellowgreen: [154, 205, 50]
};

var cx, cy, px, py, sx, sy;
cx = cy = px = py = sx = sy = 0;
var parameters = {
  A: 7,
  a: 7,
  C: 6,
  c: 6,
  H: 1,
  h: 1,
  L: 2,
  l: 2,
  M: 2,
  m: 2,
  Q: 4,
  q: 4,
  S: 4,
  s: 4,
  T: 2,
  t: 2,
  V: 1,
  v: 1,
  Z: 0,
  z: 0
};

var parse = function parse(path) {
  var cmd;
  var ret = [];
  var args = [];
  var curArg = '';
  var foundDecimal = false;
  var params = 0;

  var _iterator = _createForOfIteratorHelper(path),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var c = _step.value;

      if (parameters[c] != null) {
        params = parameters[c];

        if (cmd) {
          // save existing command
          if (curArg.length > 0) {
            args[args.length] = +curArg;
          }

          ret[ret.length] = {
            cmd: cmd,
            args: args
          };
          args = [];
          curArg = '';
          foundDecimal = false;
        }

        cmd = c;
      } else if ([' ', ','].includes(c) || c === '-' && curArg.length > 0 && curArg[curArg.length - 1] !== 'e' || c === '.' && foundDecimal) {
        if (curArg.length === 0) {
          continue;
        }

        if (args.length === params) {
          // handle reused commands
          ret[ret.length] = {
            cmd: cmd,
            args: args
          };
          args = [+curArg]; // handle assumed commands

          if (cmd === 'M') {
            cmd = 'L';
          }

          if (cmd === 'm') {
            cmd = 'l';
          }
        } else {
          args[args.length] = +curArg;
        }

        foundDecimal = c === '.'; // fix for negative numbers or repeated decimals with no delimeter between commands

        curArg = ['-', '.'].includes(c) ? c : '';
      } else {
        curArg += c;

        if (c === '.') {
          foundDecimal = true;
        }
      }
    } // add the last command

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  if (curArg.length > 0) {
    if (args.length === params) {
      // handle reused commands
      ret[ret.length] = {
        cmd: cmd,
        args: args
      };
      args = [+curArg]; // handle assumed commands

      if (cmd === 'M') {
        cmd = 'L';
      }

      if (cmd === 'm') {
        cmd = 'l';
      }
    } else {
      args[args.length] = +curArg;
    }
  }

  ret[ret.length] = {
    cmd: cmd,
    args: args
  };
  return ret;
};

var _apply = function apply(commands, doc) {
  // current point, control point, and subpath starting point
  cx = cy = px = py = sx = sy = 0; // run the commands

  for (var i = 0; i < commands.length; i++) {
    var c = commands[i];

    if (typeof runners[c.cmd] === 'function') {
      runners[c.cmd](doc, c.args);
    }
  }
};

var runners = {
  M: function M(doc, a) {
    cx = a[0];
    cy = a[1];
    px = py = null;
    sx = cx;
    sy = cy;
    return doc.moveTo(cx, cy);
  },
  m: function m(doc, a) {
    cx += a[0];
    cy += a[1];
    px = py = null;
    sx = cx;
    sy = cy;
    return doc.moveTo(cx, cy);
  },
  C: function C(doc, a) {
    cx = a[4];
    cy = a[5];
    px = a[2];
    py = a[3];
    return doc.bezierCurveTo.apply(doc, _toConsumableArray(a));
  },
  c: function c(doc, a) {
    doc.bezierCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);
    px = cx + a[2];
    py = cy + a[3];
    cx += a[4];
    return cy += a[5];
  },
  S: function S(doc, a) {
    if (px === null) {
      px = cx;
      py = cy;
    }

    doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);
    px = a[0];
    py = a[1];
    cx = a[2];
    return cy = a[3];
  },
  s: function s(doc, a) {
    if (px === null) {
      px = cx;
      py = cy;
    }

    doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);
    px = cx + a[0];
    py = cy + a[1];
    cx += a[2];
    return cy += a[3];
  },
  Q: function Q(doc, a) {
    px = a[0];
    py = a[1];
    cx = a[2];
    cy = a[3];
    return doc.quadraticCurveTo(a[0], a[1], cx, cy);
  },
  q: function q(doc, a) {
    doc.quadraticCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);
    px = cx + a[0];
    py = cy + a[1];
    cx += a[2];
    return cy += a[3];
  },
  T: function T(doc, a) {
    if (px === null) {
      px = cx;
      py = cy;
    } else {
      px = cx - (px - cx);
      py = cy - (py - cy);
    }

    doc.quadraticCurveTo(px, py, a[0], a[1]);
    px = cx - (px - cx);
    py = cy - (py - cy);
    cx = a[0];
    return cy = a[1];
  },
  t: function t(doc, a) {
    if (px === null) {
      px = cx;
      py = cy;
    } else {
      px = cx - (px - cx);
      py = cy - (py - cy);
    }

    doc.quadraticCurveTo(px, py, cx + a[0], cy + a[1]);
    cx += a[0];
    return cy += a[1];
  },
  A: function A(doc, a) {
    solveArc(doc, cx, cy, a);
    cx = a[5];
    return cy = a[6];
  },
  a: function a(doc, _a) {
    _a[5] += cx;
    _a[6] += cy;
    solveArc(doc, cx, cy, _a);
    cx = _a[5];
    return cy = _a[6];
  },
  L: function L(doc, a) {
    cx = a[0];
    cy = a[1];
    px = py = null;
    return doc.lineTo(cx, cy);
  },
  l: function l(doc, a) {
    cx += a[0];
    cy += a[1];
    px = py = null;
    return doc.lineTo(cx, cy);
  },
  H: function H(doc, a) {
    cx = a[0];
    px = py = null;
    return doc.lineTo(cx, cy);
  },
  h: function h(doc, a) {
    cx += a[0];
    px = py = null;
    return doc.lineTo(cx, cy);
  },
  V: function V(doc, a) {
    cy = a[0];
    px = py = null;
    return doc.lineTo(cx, cy);
  },
  v: function v(doc, a) {
    cy += a[0];
    px = py = null;
    return doc.lineTo(cx, cy);
  },
  Z: function Z(doc) {
    doc.closePath();
    cx = sx;
    return cy = sy;
  },
  z: function z(doc) {
    doc.closePath();
    cx = sx;
    return cy = sy;
  }
};

var solveArc = function solveArc(doc, x, y, coords) {
  var _coords = _slicedToArray(coords, 7),
      rx = _coords[0],
      ry = _coords[1],
      rot = _coords[2],
      large = _coords[3],
      sweep = _coords[4],
      ex = _coords[5],
      ey = _coords[6];

  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);

  var _iterator2 = _createForOfIteratorHelper(segs),
      _step2;

  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var seg = _step2.value;
      var bez = segmentToBezier.apply(void 0, _toConsumableArray(seg));
      doc.bezierCurveTo.apply(doc, _toConsumableArray(bez));
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
}; // from Inkscape svgtopdf, thanks!


var arcToSegments = function arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {
  var th = rotateX * (Math.PI / 180);
  var sin_th = Math.sin(th);
  var cos_th = Math.cos(th);
  rx = Math.abs(rx);
  ry = Math.abs(ry);
  px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;
  py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;
  var pl = px * px / (rx * rx) + py * py / (ry * ry);

  if (pl > 1) {
    pl = Math.sqrt(pl);
    rx *= pl;
    ry *= pl;
  }

  var a00 = cos_th / rx;
  var a01 = sin_th / rx;
  var a10 = -sin_th / ry;
  var a11 = cos_th / ry;
  var x0 = a00 * ox + a01 * oy;
  var y0 = a10 * ox + a11 * oy;
  var x1 = a00 * x + a01 * y;
  var y1 = a10 * x + a11 * y;
  var d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);
  var sfactor_sq = 1 / d - 0.25;

  if (sfactor_sq < 0) {
    sfactor_sq = 0;
  }

  var sfactor = Math.sqrt(sfactor_sq);

  if (sweep === large) {
    sfactor = -sfactor;
  }

  var xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);
  var yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);
  var th0 = Math.atan2(y0 - yc, x0 - xc);
  var th1 = Math.atan2(y1 - yc, x1 - xc);
  var th_arc = th1 - th0;

  if (th_arc < 0 && sweep === 1) {
    th_arc += 2 * Math.PI;
  } else if (th_arc > 0 && sweep === 0) {
    th_arc -= 2 * Math.PI;
  }

  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));
  var result = [];

  for (var i = 0; i < segments; i++) {
    var th2 = th0 + i * th_arc / segments;
    var th3 = th0 + (i + 1) * th_arc / segments;
    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];
  }

  return result;
};

var segmentToBezier = function segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {
  var a00 = cos_th * rx;
  var a01 = -sin_th * ry;
  var a10 = sin_th * rx;
  var a11 = cos_th * ry;
  var th_half = 0.5 * (th1 - th0);
  var t = 8 / 3 * Math.sin(th_half * 0.5) * Math.sin(th_half * 0.5) / Math.sin(th_half);
  var x1 = cx + Math.cos(th0) - t * Math.sin(th0);
  var y1 = cy + Math.sin(th0) + t * Math.cos(th0);
  var x3 = cx + Math.cos(th1);
  var y3 = cy + Math.sin(th1);
  var x2 = x3 + t * Math.sin(th1);
  var y2 = y3 - t * Math.cos(th1);
  return [a00 * x1 + a01 * y1, a10 * x1 + a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, a10 * x3 + a11 * y3];
};

var SVGPath = /*#__PURE__*/function () {
  function SVGPath() {
    _classCallCheck(this, SVGPath);
  }

  _createClass(SVGPath, null, [{
    key: "apply",
    value: function apply(doc, path) {
      var commands = parse(path);

      _apply(commands, doc);
    }
  }]);

  return SVGPath;
}();

var number$1 = PDFObject.number; // This constant is used to approximate a symmetrical arc using a cubic
// Bezier curve.

var KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);
var VectorMixin = {
  initVector: function initVector() {
    this._ctm = [1, 0, 0, 1, 0, 0]; // current transformation matrix

    return this._ctmStack = [];
  },
  save: function save() {
    this._ctmStack.push(this._ctm.slice()); // TODO: save/restore colorspace and styles so not setting it unnessesarily all the time?


    return this.addContent('q');
  },
  restore: function restore() {
    this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0];
    return this.addContent('Q');
  },
  closePath: function closePath() {
    return this.addContent('h');
  },
  lineWidth: function lineWidth(w) {
    return this.addContent("".concat(number$1(w), " w"));
  },
  _CAP_STYLES: {
    BUTT: 0,
    ROUND: 1,
    SQUARE: 2
  },
  lineCap: function lineCap(c) {
    if (typeof c === 'string') {
      c = this._CAP_STYLES[c.toUpperCase()];
    }

    return this.addContent("".concat(c, " J"));
  },
  _JOIN_STYLES: {
    MITER: 0,
    ROUND: 1,
    BEVEL: 2
  },
  lineJoin: function lineJoin(j) {
    if (typeof j === 'string') {
      j = this._JOIN_STYLES[j.toUpperCase()];
    }

    return this.addContent("".concat(j, " j"));
  },
  miterLimit: function miterLimit(m) {
    return this.addContent("".concat(number$1(m), " M"));
  },
  dash: function dash(length) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var originalLength = length;

    if (!Array.isArray(length)) {
      length = [length, options.space || length];
    }

    var valid = length.every(function (x) {
      return Number.isFinite(x) && x > 0;
    });

    if (!valid) {
      throw new Error("dash(".concat(JSON.stringify(originalLength), ", ").concat(JSON.stringify(options), ") invalid, lengths must be numeric and greater than zero"));
    }

    length = length.map(number$1).join(' ');
    return this.addContent("[".concat(length, "] ").concat(number$1(options.phase || 0), " d"));
  },
  undash: function undash() {
    return this.addContent('[] 0 d');
  },
  moveTo: function moveTo(x, y) {
    return this.addContent("".concat(number$1(x), " ").concat(number$1(y), " m"));
  },
  lineTo: function lineTo(x, y) {
    return this.addContent("".concat(number$1(x), " ").concat(number$1(y), " l"));
  },
  bezierCurveTo: function bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {
    return this.addContent("".concat(number$1(cp1x), " ").concat(number$1(cp1y), " ").concat(number$1(cp2x), " ").concat(number$1(cp2y), " ").concat(number$1(x), " ").concat(number$1(y), " c"));
  },
  quadraticCurveTo: function quadraticCurveTo(cpx, cpy, x, y) {
    return this.addContent("".concat(number$1(cpx), " ").concat(number$1(cpy), " ").concat(number$1(x), " ").concat(number$1(y), " v"));
  },
  rect: function rect(x, y, w, h) {
    return this.addContent("".concat(number$1(x), " ").concat(number$1(y), " ").concat(number$1(w), " ").concat(number$1(h), " re"));
  },
  roundedRect: function roundedRect(x, y, w, h, r) {
    if (r == null) {
      r = 0;
    }

    r = Math.min(r, 0.5 * w, 0.5 * h); // amount to inset control points from corners (see \`ellipse\`)

    var c = r * (1.0 - KAPPA);
    this.moveTo(x + r, y);
    this.lineTo(x + w - r, y);
    this.bezierCurveTo(x + w - c, y, x + w, y + c, x + w, y + r);
    this.lineTo(x + w, y + h - r);
    this.bezierCurveTo(x + w, y + h - c, x + w - c, y + h, x + w - r, y + h);
    this.lineTo(x + r, y + h);
    this.bezierCurveTo(x + c, y + h, x, y + h - c, x, y + h - r);
    this.lineTo(x, y + r);
    this.bezierCurveTo(x, y + c, x + c, y, x + r, y);
    return this.closePath();
  },
  ellipse: function ellipse(x, y, r1, r2) {
    // based on http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas/2173084#2173084
    if (r2 == null) {
      r2 = r1;
    }

    x -= r1;
    y -= r2;
    var ox = r1 * KAPPA;
    var oy = r2 * KAPPA;
    var xe = x + r1 * 2;
    var ye = y + r2 * 2;
    var xm = x + r1;
    var ym = y + r2;
    this.moveTo(x, ym);
    this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);
    this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);
    this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);
    this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);
    return this.closePath();
  },
  circle: function circle(x, y, radius) {
    return this.ellipse(x, y, radius);
  },
  arc: function arc(x, y, radius, startAngle, endAngle, anticlockwise) {
    if (anticlockwise == null) {
      anticlockwise = false;
    }

    var TWO_PI = 2.0 * Math.PI;
    var HALF_PI = 0.5 * Math.PI;
    var deltaAng = endAngle - startAngle;

    if (Math.abs(deltaAng) > TWO_PI) {
      // draw only full circle if more than that is specified
      deltaAng = TWO_PI;
    } else if (deltaAng !== 0 && anticlockwise !== deltaAng < 0) {
      // necessary to flip direction of rendering
      var dir = anticlockwise ? -1 : 1;
      deltaAng = dir * TWO_PI + deltaAng;
    }

    var numSegs = Math.ceil(Math.abs(deltaAng) / HALF_PI);
    var segAng = deltaAng / numSegs;
    var handleLen = segAng / HALF_PI * KAPPA * radius;
    var curAng = startAngle; // component distances between anchor point and control point

    var deltaCx = -Math.sin(curAng) * handleLen;
    var deltaCy = Math.cos(curAng) * handleLen; // anchor point

    var ax = x + Math.cos(curAng) * radius;
    var ay = y + Math.sin(curAng) * radius; // calculate and render segments

    this.moveTo(ax, ay);

    for (var segIdx = 0; segIdx < numSegs; segIdx++) {
      // starting control point
      var cp1x = ax + deltaCx;
      var cp1y = ay + deltaCy; // step angle

      curAng += segAng; // next anchor point

      ax = x + Math.cos(curAng) * radius;
      ay = y + Math.sin(curAng) * radius; // next control point delta

      deltaCx = -Math.sin(curAng) * handleLen;
      deltaCy = Math.cos(curAng) * handleLen; // ending control point

      var cp2x = ax - deltaCx;
      var cp2y = ay - deltaCy; // render segment

      this.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, ax, ay);
    }

    return this;
  },
  polygon: function polygon() {
    for (var _len = arguments.length, points = new Array(_len), _key = 0; _key < _len; _key++) {
      points[_key] = arguments[_key];
    }

    this.moveTo.apply(this, _toConsumableArray(points.shift() || []));

    for (var _i = 0, _points = points; _i < _points.length; _i++) {
      var point = _points[_i];
      this.lineTo.apply(this, _toConsumableArray(point || []));
    }

    return this.closePath();
  },
  path: function path(_path) {
    SVGPath.apply(this, _path);
    return this;
  },
  _windingRule: function _windingRule(rule) {
    if (/even-?odd/.test(rule)) {
      return '*';
    }

    return '';
  },
  fill: function fill(color, rule) {
    if (/(even-?odd)|(non-?zero)/.test(color)) {
      rule = color;
      color = null;
    }

    if (color) {
      this.fillColor(color);
    }

    return this.addContent("f".concat(this._windingRule(rule)));
  },
  stroke: function stroke(color) {
    if (color) {
      this.strokeColor(color);
    }

    return this.addContent('S');
  },
  fillAndStroke: function fillAndStroke(fillColor, strokeColor, rule) {
    if (strokeColor == null) {
      strokeColor = fillColor;
    }

    var isFillRule = /(even-?odd)|(non-?zero)/;

    if (isFillRule.test(fillColor)) {
      rule = fillColor;
      fillColor = null;
    }

    if (isFillRule.test(strokeColor)) {
      rule = strokeColor;
      strokeColor = fillColor;
    }

    if (fillColor) {
      this.fillColor(fillColor);
      this.strokeColor(strokeColor);
    }

    return this.addContent("B".concat(this._windingRule(rule)));
  },
  clip: function clip(rule) {
    return this.addContent("W".concat(this._windingRule(rule), " n"));
  },
  transform: function transform(m11, m12, m21, m22, dx, dy) {
    // keep track of the current transformation matrix
    var m = this._ctm;

    var _m = _slicedToArray(m, 6),
        m0 = _m[0],
        m1 = _m[1],
        m2 = _m[2],
        m3 = _m[3],
        m4 = _m[4],
        m5 = _m[5];

    m[0] = m0 * m11 + m2 * m12;
    m[1] = m1 * m11 + m3 * m12;
    m[2] = m0 * m21 + m2 * m22;
    m[3] = m1 * m21 + m3 * m22;
    m[4] = m0 * dx + m2 * dy + m4;
    m[5] = m1 * dx + m3 * dy + m5;
    var values = [m11, m12, m21, m22, dx, dy].map(function (v) {
      return number$1(v);
    }).join(' ');
    return this.addContent("".concat(values, " cm"));
  },
  translate: function translate(x, y) {
    return this.transform(1, 0, 0, 1, x, y);
  },
  rotate: function rotate(angle) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var y;
    var rad = angle * Math.PI / 180;
    var cos = Math.cos(rad);
    var sin = Math.sin(rad);
    var x = y = 0;

    if (options.origin != null) {
      var _options$origin = _slicedToArray(options.origin, 2);

      x = _options$origin[0];
      y = _options$origin[1];
      var x1 = x * cos - y * sin;
      var y1 = x * sin + y * cos;
      x -= x1;
      y -= y1;
    }

    return this.transform(cos, sin, -sin, cos, x, y);
  },
  scale: function scale(xFactor, yFactor) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var y;

    if (yFactor == null) {
      yFactor = xFactor;
    }

    if (typeof yFactor === 'object') {
      options = yFactor;
      yFactor = xFactor;
    }

    var x = y = 0;

    if (options.origin != null) {
      var _options$origin2 = _slicedToArray(options.origin, 2);

      x = _options$origin2[0];
      y = _options$origin2[1];
      x -= xFactor * x;
      y -= yFactor * y;
    }

    return this.transform(xFactor, 0, 0, yFactor, x, y);
  }
};

var WIN_ANSI_MAP = {
  402: 131,
  8211: 150,
  8212: 151,
  8216: 145,
  8217: 146,
  8218: 130,
  8220: 147,
  8221: 148,
  8222: 132,
  8224: 134,
  8225: 135,
  8226: 149,
  8230: 133,
  8364: 128,
  8240: 137,
  8249: 139,
  8250: 155,
  710: 136,
  8482: 153,
  338: 140,
  339: 156,
  732: 152,
  352: 138,
  353: 154,
  376: 159,
  381: 142,
  382: 158
};
var characters = ".notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n  \\nspace         exclam         quotedbl       numbersign\\ndollar        percent        ampersand      quotesingle\\nparenleft     parenright     asterisk       plus\\ncomma         hyphen         period         slash\\nzero          one            two            three\\nfour          five           six            seven\\neight         nine           colon          semicolon\\nless          equal          greater        question\\n  \\nat            A              B              C\\nD             E              F              G\\nH             I              J              K\\nL             M              N              O\\nP             Q              R              S\\nT             U              V              W\\nX             Y              Z              bracketleft\\nbackslash     bracketright   asciicircum    underscore\\n  \\ngrave         a              b              c\\nd             e              f              g\\nh             i              j              k\\nl             m              n              o\\np             q              r              s\\nt             u              v              w\\nx             y              z              braceleft\\nbar           braceright     asciitilde     .notdef\\n  \\nEuro          .notdef        quotesinglbase florin\\nquotedblbase  ellipsis       dagger         daggerdbl\\ncircumflex    perthousand    Scaron         guilsinglleft\\nOE            .notdef        Zcaron         .notdef\\n.notdef       quoteleft      quoteright     quotedblleft\\nquotedblright bullet         endash         emdash\\ntilde         trademark      scaron         guilsinglright\\noe            .notdef        zcaron         ydieresis\\n  \\nspace         exclamdown     cent           sterling\\ncurrency      yen            brokenbar      section\\ndieresis      copyright      ordfeminine    guillemotleft\\nlogicalnot    hyphen         registered     macron\\ndegree        plusminus      twosuperior    threesuperior\\nacute         mu             paragraph      periodcentered\\ncedilla       onesuperior    ordmasculine   guillemotright\\nonequarter    onehalf        threequarters  questiondown\\n  \\nAgrave        Aacute         Acircumflex    Atilde\\nAdieresis     Aring          AE             Ccedilla\\nEgrave        Eacute         Ecircumflex    Edieresis\\nIgrave        Iacute         Icircumflex    Idieresis\\nEth           Ntilde         Ograve         Oacute\\nOcircumflex   Otilde         Odieresis      multiply\\nOslash        Ugrave         Uacute         Ucircumflex\\nUdieresis     Yacute         Thorn          germandbls\\n  \\nagrave        aacute         acircumflex    atilde\\nadieresis     aring          ae             ccedilla\\negrave        eacute         ecircumflex    edieresis\\nigrave        iacute         icircumflex    idieresis\\neth           ntilde         ograve         oacute\\nocircumflex   otilde         odieresis      divide\\noslash        ugrave         uacute         ucircumflex\\nudieresis     yacute         thorn          ydieresis".split(/\\s+/);

var AFMFont = /*#__PURE__*/function () {
  _createClass(AFMFont, null, [{
    key: "open",
    value: function open(filename) {
      return new AFMFont(fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(filename, 'utf8'));
    }
  }]);

  function AFMFont(contents) {
    _classCallCheck(this, AFMFont);

    this.contents = contents;
    this.attributes = {};
    this.glyphWidths = {};
    this.boundingBoxes = {};
    this.kernPairs = {};
    this.parse(); // todo: remove charWidths since appears to not be used

    this.charWidths = new Array(256);

    for (var char = 0; char <= 255; char++) {
      this.charWidths[char] = this.glyphWidths[characters[char]];
    }

    this.bbox = this.attributes['FontBBox'].split(/\\s+/).map(function (e) {
      return +e;
    });
    this.ascender = +(this.attributes['Ascender'] || 0);
    this.descender = +(this.attributes['Descender'] || 0);
    this.xHeight = +(this.attributes['XHeight'] || 0);
    this.capHeight = +(this.attributes['CapHeight'] || 0);
    this.lineGap = this.bbox[3] - this.bbox[1] - (this.ascender - this.descender);
  }

  _createClass(AFMFont, [{
    key: "parse",
    value: function parse() {
      var section = '';

      var _iterator = _createForOfIteratorHelper(this.contents.split('\\n')),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var line = _step.value;
          var match;
          var a;

          if (match = line.match(/^Start(\\w+)/)) {
            section = match[1];
            continue;
          } else if (match = line.match(/^End(\\w+)/)) {
            section = '';
            continue;
          }

          switch (section) {
            case 'FontMetrics':
              match = line.match(/(^\\w+)\\s+(.*)/);
              var key = match[1];
              var value = match[2];

              if (a = this.attributes[key]) {
                if (!Array.isArray(a)) {
                  a = this.attributes[key] = [a];
                }

                a.push(value);
              } else {
                this.attributes[key] = value;
              }

              break;

            case 'CharMetrics':
              if (!/^CH?\\s/.test(line)) {
                continue;
              }

              var name = line.match(/\\bN\\s+(\\.?\\w+)\\s*;/)[1];
              this.glyphWidths[name] = +line.match(/\\bWX\\s+(\\d+)\\s*;/)[1];
              break;

            case 'KernPairs':
              match = line.match(/^KPX\\s+(\\.?\\w+)\\s+(\\.?\\w+)\\s+(-?\\d+)/);

              if (match) {
                this.kernPairs[match[1] + '\\0' + match[2]] = parseInt(match[3]);
              }

              break;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "encodeText",
    value: function encodeText(text) {
      var res = [];

      for (var i = 0, len = text.length; i < len; i++) {
        var char = text.charCodeAt(i);
        char = WIN_ANSI_MAP[char] || char;
        res.push(char.toString(16));
      }

      return res;
    }
  }, {
    key: "glyphsForString",
    value: function glyphsForString(string) {
      var glyphs = [];

      for (var i = 0, len = string.length; i < len; i++) {
        var charCode = string.charCodeAt(i);
        glyphs.push(this.characterToGlyph(charCode));
      }

      return glyphs;
    }
  }, {
    key: "characterToGlyph",
    value: function characterToGlyph(character) {
      return characters[WIN_ANSI_MAP[character] || character] || '.notdef';
    }
  }, {
    key: "widthOfGlyph",
    value: function widthOfGlyph(glyph) {
      return this.glyphWidths[glyph] || 0;
    }
  }, {
    key: "getKernPair",
    value: function getKernPair(left, right) {
      return this.kernPairs[left + '\\0' + right] || 0;
    }
  }, {
    key: "advancesForGlyphs",
    value: function advancesForGlyphs(glyphs) {
      var advances = [];

      for (var index = 0; index < glyphs.length; index++) {
        var left = glyphs[index];
        var right = glyphs[index + 1];
        advances.push(this.widthOfGlyph(left) + this.getKernPair(left, right));
      }

      return advances;
    }
  }]);

  return AFMFont;
}();

var PDFFont = /*#__PURE__*/function () {
  function PDFFont() {
    _classCallCheck(this, PDFFont);
  }

  _createClass(PDFFont, [{
    key: "encode",
    value: function encode() {
      throw new Error('Must be implemented by subclasses');
    }
  }, {
    key: "widthOfString",
    value: function widthOfString() {
      throw new Error('Must be implemented by subclasses');
    }
  }, {
    key: "ref",
    value: function ref() {
      return this.dictionary != null ? this.dictionary : this.dictionary = this.document.ref();
    }
  }, {
    key: "finalize",
    value: function finalize() {
      if (this.embedded || this.dictionary == null) {
        return;
      }

      this.embed();
      return this.embedded = true;
    }
  }, {
    key: "embed",
    value: function embed() {
      throw new Error('Must be implemented by subclasses');
    }
  }, {
    key: "lineHeight",
    value: function lineHeight(size, includeGap) {
      if (includeGap == null) {
        includeGap = false;
      }

      var gap = includeGap ? this.lineGap : 0;
      return (this.ascender + gap - this.descender) / 1000 * size;
    }
  }]);

  return PDFFont;
}();

var STANDARD_FONTS = {
  Courier: function Courier() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Courier.afm', 'utf8');
  },
  'Courier-Bold': function CourierBold() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Courier-Bold.afm', 'utf8');
  },
  'Courier-Oblique': function CourierOblique() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Courier-Oblique.afm', 'utf8');
  },
  'Courier-BoldOblique': function CourierBoldOblique() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Courier-BoldOblique.afm', 'utf8');
  },
  Helvetica: function Helvetica() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Helvetica.afm', 'utf8');
  },
  'Helvetica-Bold': function HelveticaBold() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Helvetica-Bold.afm', 'utf8');
  },
  'Helvetica-Oblique': function HelveticaOblique() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Helvetica-Oblique.afm', 'utf8');
  },
  'Helvetica-BoldOblique': function HelveticaBoldOblique() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Helvetica-BoldOblique.afm', 'utf8');
  },
  'Times-Roman': function TimesRoman() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Times-Roman.afm', 'utf8');
  },
  'Times-Bold': function TimesBold() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Times-Bold.afm', 'utf8');
  },
  'Times-Italic': function TimesItalic() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Times-Italic.afm', 'utf8');
  },
  'Times-BoldItalic': function TimesBoldItalic() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Times-BoldItalic.afm', 'utf8');
  },
  Symbol: function Symbol() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/Symbol.afm', 'utf8');
  },
  ZapfDingbats: function ZapfDingbats() {
    return fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(__dirname + '/data/ZapfDingbats.afm', 'utf8');
  }
};

var StandardFont = /*#__PURE__*/function (_PDFFont) {
  _inherits(StandardFont, _PDFFont);

  var _super = _createSuper(StandardFont);

  function StandardFont(document, name, id) {
    var _this;

    _classCallCheck(this, StandardFont);

    _this = _super.call(this);
    _this.document = document;
    _this.name = name;
    _this.id = id;
    _this.font = new AFMFont(STANDARD_FONTS[_this.name]());
    var _this$font = _this.font;
    _this.ascender = _this$font.ascender;
    _this.descender = _this$font.descender;
    _this.bbox = _this$font.bbox;
    _this.lineGap = _this$font.lineGap;
    _this.xHeight = _this$font.xHeight;
    _this.capHeight = _this$font.capHeight;
    return _this;
  }

  _createClass(StandardFont, [{
    key: "embed",
    value: function embed() {
      this.dictionary.data = {
        Type: 'Font',
        BaseFont: this.name,
        Subtype: 'Type1',
        Encoding: 'WinAnsiEncoding'
      };
      return this.dictionary.end();
    }
  }, {
    key: "encode",
    value: function encode(text) {
      var encoded = this.font.encodeText(text);
      var glyphs = this.font.glyphsForString("".concat(text));
      var advances = this.font.advancesForGlyphs(glyphs);
      var positions = [];

      for (var i = 0; i < glyphs.length; i++) {
        var glyph = glyphs[i];
        positions.push({
          xAdvance: advances[i],
          yAdvance: 0,
          xOffset: 0,
          yOffset: 0,
          advanceWidth: this.font.widthOfGlyph(glyph)
        });
      }

      return [encoded, positions];
    }
  }, {
    key: "widthOfString",
    value: function widthOfString(string, size) {
      var glyphs = this.font.glyphsForString("".concat(string));
      var advances = this.font.advancesForGlyphs(glyphs);
      var width = 0;

      var _iterator = _createForOfIteratorHelper(advances),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var advance = _step.value;
          width += advance;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      var scale = size / 1000;
      return width * scale;
    }
  }], [{
    key: "isStandardFont",
    value: function isStandardFont(name) {
      return name in STANDARD_FONTS;
    }
  }]);

  return StandardFont;
}(PDFFont);

var toHex = function toHex(num) {
  return "0000".concat(num.toString(16)).slice(-4);
};

var EmbeddedFont = /*#__PURE__*/function (_PDFFont) {
  _inherits(EmbeddedFont, _PDFFont);

  var _super = _createSuper(EmbeddedFont);

  function EmbeddedFont(document, font, id) {
    var _this;

    _classCallCheck(this, EmbeddedFont);

    _this = _super.call(this);
    _this.document = document;
    _this.font = font;
    _this.id = id;
    _this.subset = _this.font.createSubset();
    _this.unicode = [[0]];
    _this.widths = [_this.font.getGlyph(0).advanceWidth];
    _this.name = _this.font.postscriptName;
    _this.scale = 1000 / _this.font.unitsPerEm;
    _this.ascender = _this.font.ascent * _this.scale;
    _this.descender = _this.font.descent * _this.scale;
    _this.xHeight = _this.font.xHeight * _this.scale;
    _this.capHeight = _this.font.capHeight * _this.scale;
    _this.lineGap = _this.font.lineGap * _this.scale;
    _this.bbox = _this.font.bbox;

    if (document.options.fontLayoutCache !== false) {
      _this.layoutCache = Object.create(null);
    }

    return _this;
  }

  _createClass(EmbeddedFont, [{
    key: "layoutRun",
    value: function layoutRun(text, features) {
      var run = this.font.layout(text, features); // Normalize position values

      for (var i = 0; i < run.positions.length; i++) {
        var position = run.positions[i];

        for (var key in position) {
          position[key] *= this.scale;
        }

        position.advanceWidth = run.glyphs[i].advanceWidth * this.scale;
      }

      return run;
    }
  }, {
    key: "layoutCached",
    value: function layoutCached(text) {
      if (!this.layoutCache) {
        return this.layoutRun(text);
      }

      var cached;

      if (cached = this.layoutCache[text]) {
        return cached;
      }

      var run = this.layoutRun(text);
      this.layoutCache[text] = run;
      return run;
    }
  }, {
    key: "layout",
    value: function layout(text, features, onlyWidth) {
      // Skip the cache if any user defined features are applied
      if (features) {
        return this.layoutRun(text, features);
      }

      var glyphs = onlyWidth ? null : [];
      var positions = onlyWidth ? null : [];
      var advanceWidth = 0; // Split the string by words to increase cache efficiency.
      // For this purpose, spaces and tabs are a good enough delimeter.

      var last = 0;
      var index = 0;

      while (index <= text.length) {
        var needle;

        if (index === text.length && last < index || (needle = text.charAt(index), [' ', '\\t'].includes(needle))) {
          var run = this.layoutCached(text.slice(last, ++index));

          if (!onlyWidth) {
            glyphs = glyphs.concat(run.glyphs);
            positions = positions.concat(run.positions);
          }

          advanceWidth += run.advanceWidth;
          last = index;
        } else {
          index++;
        }
      }

      return {
        glyphs: glyphs,
        positions: positions,
        advanceWidth: advanceWidth
      };
    }
  }, {
    key: "encode",
    value: function encode(text, features) {
      var _this$layout = this.layout(text, features),
          glyphs = _this$layout.glyphs,
          positions = _this$layout.positions;

      var res = [];

      for (var i = 0; i < glyphs.length; i++) {
        var glyph = glyphs[i];
        var gid = this.subset.includeGlyph(glyph.id);
        res.push("0000".concat(gid.toString(16)).slice(-4));

        if (this.widths[gid] == null) {
          this.widths[gid] = glyph.advanceWidth * this.scale;
        }

        if (this.unicode[gid] == null) {
          this.unicode[gid] = glyph.codePoints;
        }
      }

      return [res, positions];
    }
  }, {
    key: "widthOfString",
    value: function widthOfString(string, size, features) {
      var width = this.layout(string, features, true).advanceWidth;
      var scale = size / 1000;
      return width * scale;
    }
  }, {
    key: "embed",
    value: function embed() {
      var _this2 = this;

      var isCFF = this.subset.cff != null;
      var fontFile = this.document.ref();

      if (isCFF) {
        fontFile.data.Subtype = 'CIDFontType0C';
      }

      this.subset.encodeStream().on('data', function (data) {
        return fontFile.write(data);
      }).on('end', function () {
        return fontFile.end();
      });
      var familyClass = ((this.font['OS/2'] != null ? this.font['OS/2'].sFamilyClass : undefined) || 0) >> 8;
      var flags = 0;

      if (this.font.post.isFixedPitch) {
        flags |= 1 << 0;
      }

      if (1 <= familyClass && familyClass <= 7) {
        flags |= 1 << 1;
      }

      flags |= 1 << 2; // assume the font uses non-latin characters

      if (familyClass === 10) {
        flags |= 1 << 3;
      }

      if (this.font.head.macStyle.italic) {
        flags |= 1 << 6;
      } // generate a tag (6 uppercase letters. 17 is the char code offset from '0' to 'A'. 73 will map to 'Z')


      var tag = [1, 2, 3, 4, 5, 6].map(function (i) {
        return String.fromCharCode((_this2.id.charCodeAt(i) || 73) + 17);
      }).join('');
      var name = tag + '+' + this.font.postscriptName;
      var bbox = this.font.bbox;
      var descriptor = this.document.ref({
        Type: 'FontDescriptor',
        FontName: name,
        Flags: flags,
        FontBBox: [bbox.minX * this.scale, bbox.minY * this.scale, bbox.maxX * this.scale, bbox.maxY * this.scale],
        ItalicAngle: this.font.italicAngle,
        Ascent: this.ascender,
        Descent: this.descender,
        CapHeight: (this.font.capHeight || this.font.ascent) * this.scale,
        XHeight: (this.font.xHeight || 0) * this.scale,
        StemV: 0
      }); // not sure how to calculate this

      if (isCFF) {
        descriptor.data.FontFile3 = fontFile;
      } else {
        descriptor.data.FontFile2 = fontFile;
      }

      descriptor.end();
      var descendantFontData = {
        Type: 'Font',
        Subtype: 'CIDFontType0',
        BaseFont: name,
        CIDSystemInfo: {
          Registry: new String('Adobe'),
          Ordering: new String('Identity'),
          Supplement: 0
        },
        FontDescriptor: descriptor,
        W: [0, this.widths]
      };

      if (!isCFF) {
        descendantFontData.Subtype = 'CIDFontType2';
        descendantFontData.CIDToGIDMap = 'Identity';
      }

      var descendantFont = this.document.ref(descendantFontData);
      descendantFont.end();
      this.dictionary.data = {
        Type: 'Font',
        Subtype: 'Type0',
        BaseFont: name,
        Encoding: 'Identity-H',
        DescendantFonts: [descendantFont],
        ToUnicode: this.toUnicodeCmap()
      };
      return this.dictionary.end();
    } // Maps the glyph ids encoded in the PDF back to unicode strings
    // Because of ligature substitutions and the like, there may be one or more
    // unicode characters represented by each glyph.

  }, {
    key: "toUnicodeCmap",
    value: function toUnicodeCmap() {
      var cmap = this.document.ref();
      var entries = [];

      var _iterator = _createForOfIteratorHelper(this.unicode),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var codePoints = _step.value;
          var encoded = []; // encode codePoints to utf16

          var _iterator2 = _createForOfIteratorHelper(codePoints),
              _step2;

          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var value = _step2.value;

              if (value > 0xffff) {
                value -= 0x10000;
                encoded.push(toHex(value >>> 10 & 0x3ff | 0xd800));
                value = 0xdc00 | value & 0x3ff;
              }

              encoded.push(toHex(value));
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }

          entries.push("<".concat(encoded.join(' '), ">"));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      cmap.end("/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap\\n/CIDSystemInfo <<\\n  /Registry (Adobe)\\n  /Ordering (UCS)\\n  /Supplement 0\\n>> def\\n/CMapName /Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange\\n<0000><ffff>\\nendcodespacerange\\n1 beginbfrange\\n<0000> <".concat(toHex(entries.length - 1), "> [").concat(entries.join(' '), "]\\nendbfrange\\nendcmap\\nCMapName currentdict /CMap defineresource pop\\nend\\nend"));
      return cmap;
    }
  }]);

  return EmbeddedFont;
}(PDFFont);

var PDFFontFactory = /*#__PURE__*/function () {
  function PDFFontFactory() {
    _classCallCheck(this, PDFFontFactory);
  }

  _createClass(PDFFontFactory, null, [{
    key: "open",
    value: function open(document, src, family, id) {
      var font;

      if (typeof src === 'string') {
        if (StandardFont.isStandardFont(src)) {
          return new StandardFont(document, src, id);
        }

        src = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(src);
      }

      if (Buffer.isBuffer(src)) {
        font = fontkit__WEBPACK_IMPORTED_MODULE_4__["default"].create(src, family);
      } else if (src instanceof Uint8Array) {
        font = fontkit__WEBPACK_IMPORTED_MODULE_4__["default"].create(Buffer.from(src), family);
      } else if (src instanceof ArrayBuffer) {
        font = fontkit__WEBPACK_IMPORTED_MODULE_4__["default"].create(Buffer.from(new Uint8Array(src)), family);
      }

      if (font == null) {
        throw new Error('Not a supported font format or standard PDF font.');
      }

      return new EmbeddedFont(document, font, id);
    }
  }]);

  return PDFFontFactory;
}();

var FontsMixin = {
  initFonts: function initFonts() {
    var defaultFont = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Helvetica';
    // Lookup table for embedded fonts
    this._fontFamilies = {};
    this._fontCount = 0; // Font state

    this._fontSize = 12;
    this._font = null;
    this._registeredFonts = {}; // Set the default font

    if (defaultFont) {
      this.font(defaultFont);
    }
  },
  font: function font(src, family, size) {
    var cacheKey, font;

    if (typeof family === 'number') {
      size = family;
      family = null;
    } // check registered fonts if src is a string


    if (typeof src === 'string' && this._registeredFonts[src]) {
      cacheKey = src;
      var _this$_registeredFont = this._registeredFonts[src];
      src = _this$_registeredFont.src;
      family = _this$_registeredFont.family;
    } else {
      cacheKey = family || src;

      if (typeof cacheKey !== 'string') {
        cacheKey = null;
      }
    }

    if (size != null) {
      this.fontSize(size);
    } // fast path: check if the font is already in the PDF


    if (font = this._fontFamilies[cacheKey]) {
      this._font = font;
      return this;
    } // load the font


    var id = "F".concat(++this._fontCount);
    this._font = PDFFontFactory.open(this, src, family, id); // check for existing font familes with the same name already in the PDF
    // useful if the font was passed as a buffer

    if (font = this._fontFamilies[this._font.name]) {
      this._font = font;
      return this;
    } // save the font for reuse later


    if (cacheKey) {
      this._fontFamilies[cacheKey] = this._font;
    }

    if (this._font.name) {
      this._fontFamilies[this._font.name] = this._font;
    }

    return this;
  },
  fontSize: function fontSize(_fontSize) {
    this._fontSize = _fontSize;
    return this;
  },
  currentLineHeight: function currentLineHeight(includeGap) {
    if (includeGap == null) {
      includeGap = false;
    }

    return this._font.lineHeight(this._fontSize, includeGap);
  },
  registerFont: function registerFont(name, src, family) {
    this._registeredFonts[name] = {
      src: src,
      family: family
    };
    return this;
  }
};

var LineWrapper = /*#__PURE__*/function (_EventEmitter) {
  _inherits(LineWrapper, _EventEmitter);

  var _super = _createSuper(LineWrapper);

  function LineWrapper(document, options) {
    var _this;

    _classCallCheck(this, LineWrapper);

    _this = _super.call(this);
    _this.document = document;
    _this.indent = options.indent || 0;
    _this.characterSpacing = options.characterSpacing || 0;
    _this.wordSpacing = options.wordSpacing === 0;
    _this.columns = options.columns || 1;
    _this.columnGap = options.columnGap != null ? options.columnGap : 18; // 1/4 inch

    _this.lineWidth = (options.width - _this.columnGap * (_this.columns - 1)) / _this.columns;
    _this.spaceLeft = _this.lineWidth;
    _this.startX = _this.document.x;
    _this.startY = _this.document.y;
    _this.column = 1;
    _this.ellipsis = options.ellipsis;
    _this.continuedX = 0;
    _this.features = options.features; // calculate the maximum Y position the text can appear at

    if (options.height != null) {
      _this.height = options.height;
      _this.maxY = _this.startY + options.height;
    } else {
      _this.maxY = _this.document.page.maxY();
    } // handle paragraph indents


    _this.on('firstLine', function (options) {
      // if this is the first line of the text segment, and
      // we're continuing where we left off, indent that much
      // otherwise use the user specified indent option
      var indent = _this.continuedX || _this.indent;
      _this.document.x += indent;
      _this.lineWidth -= indent;
      return _this.once('line', function () {
        _this.document.x -= indent;
        _this.lineWidth += indent;

        if (options.continued && !_this.continuedX) {
          _this.continuedX = _this.indent;
        }

        if (!options.continued) {
          return _this.continuedX = 0;
        }
      });
    }); // handle left aligning last lines of paragraphs


    _this.on('lastLine', function (options) {
      var align = options.align;

      if (align === 'justify') {
        options.align = 'left';
      }

      _this.lastLine = true;
      return _this.once('line', function () {
        _this.document.y += options.paragraphGap || 0;
        options.align = align;
        return _this.lastLine = false;
      });
    });

    return _this;
  }

  _createClass(LineWrapper, [{
    key: "wordWidth",
    value: function wordWidth(word) {
      return this.document.widthOfString(word, this) + this.characterSpacing + this.wordSpacing;
    }
  }, {
    key: "eachWord",
    value: function eachWord(text, fn) {
      // setup a unicode line breaker
      var bk;
      var breaker = new linebreak__WEBPACK_IMPORTED_MODULE_6__["default"](text);
      var last = null;
      var wordWidths = Object.create(null);

      while (bk = breaker.nextBreak()) {
        var shouldContinue;
        var word = text.slice((last != null ? last.position : undefined) || 0, bk.position);
        var w = wordWidths[word] != null ? wordWidths[word] : wordWidths[word] = this.wordWidth(word); // if the word is longer than the whole line, chop it up
        // TODO: break by grapheme clusters, not JS string characters

        if (w > this.lineWidth + this.continuedX) {
          // make some fake break objects
          var lbk = last;
          var fbk = {};

          while (word.length) {
            // fit as much of the word as possible into the space we have
            var l, mightGrow;

            if (w > this.spaceLeft) {
              // start our check at the end of our available space - this method is faster than a loop of each character and it resolves
              // an issue with long loops when processing massive words, such as a huge number of spaces
              l = Math.ceil(this.spaceLeft / (w / word.length));
              w = this.wordWidth(word.slice(0, l));
              mightGrow = w <= this.spaceLeft && l < word.length;
            } else {
              l = word.length;
            }

            var mustShrink = w > this.spaceLeft && l > 0; // shrink or grow word as necessary after our near-guess above

            while (mustShrink || mightGrow) {
              if (mustShrink) {
                w = this.wordWidth(word.slice(0, --l));
                mustShrink = w > this.spaceLeft && l > 0;
              } else {
                w = this.wordWidth(word.slice(0, ++l));
                mustShrink = w > this.spaceLeft && l > 0;
                mightGrow = w <= this.spaceLeft && l < word.length;
              }
            } // check for the edge case where a single character cannot fit into a line.


            if (l === 0 && this.spaceLeft === this.lineWidth) {
              l = 1;
            } // send a required break unless this is the last piece and a linebreak is not specified


            fbk.required = bk.required || l < word.length;
            shouldContinue = fn(word.slice(0, l), w, fbk, lbk);
            lbk = {
              required: false
            }; // get the remaining piece of the word

            word = word.slice(l);
            w = this.wordWidth(word);

            if (shouldContinue === false) {
              break;
            }
          }
        } else {
          // otherwise just emit the break as it was given to us
          shouldContinue = fn(word, w, bk, last);
        }

        if (shouldContinue === false) {
          break;
        }

        last = bk;
      }
    }
  }, {
    key: "wrap",
    value: function wrap(text, options) {
      var _this2 = this;

      // override options from previous continued fragments
      if (options.indent != null) {
        this.indent = options.indent;
      }

      if (options.characterSpacing != null) {
        this.characterSpacing = options.characterSpacing;
      }

      if (options.wordSpacing != null) {
        this.wordSpacing = options.wordSpacing;
      }

      if (options.ellipsis != null) {
        this.ellipsis = options.ellipsis;
      } // make sure we're actually on the page
      // and that the first line of is never by
      // itself at the bottom of a page (orphans)


      var nextY = this.document.y + this.document.currentLineHeight(true);

      if (this.document.y > this.maxY || nextY > this.maxY) {
        this.nextSection();
      }

      var buffer = '';
      var textWidth = 0;
      var wc = 0;
      var lc = 0;
      var y = this.document.y; // used to reset Y pos if options.continued (below)

      var emitLine = function emitLine() {
        options.textWidth = textWidth + _this2.wordSpacing * (wc - 1);
        options.wordCount = wc;
        options.lineWidth = _this2.lineWidth;
        y = _this2.document.y;

        _this2.emit('line', buffer, options, _this2);

        return lc++;
      };

      this.emit('sectionStart', options, this);
      this.eachWord(text, function (word, w, bk, last) {
        if (last == null || last.required) {
          _this2.emit('firstLine', options, _this2);

          _this2.spaceLeft = _this2.lineWidth;
        }

        if (w <= _this2.spaceLeft) {
          buffer += word;
          textWidth += w;
          wc++;
        }

        if (bk.required || w > _this2.spaceLeft) {
          // if the user specified a max height and an ellipsis, and is about to pass the
          // max height and max columns after the next line, append the ellipsis
          var lh = _this2.document.currentLineHeight(true);

          if (_this2.height != null && _this2.ellipsis && _this2.document.y + lh * 2 > _this2.maxY && _this2.column >= _this2.columns) {
            if (_this2.ellipsis === true) {
              _this2.ellipsis = '\u2026';
            } // map default ellipsis character


            buffer = buffer.replace(/\\s+$/, '');
            textWidth = _this2.wordWidth(buffer + _this2.ellipsis); // remove characters from the buffer until the ellipsis fits
            // to avoid infinite loop need to stop while-loop if buffer is empty string

            while (buffer && textWidth > _this2.lineWidth) {
              buffer = buffer.slice(0, -1).replace(/\\s+$/, '');
              textWidth = _this2.wordWidth(buffer + _this2.ellipsis);
            } // need to add ellipsis only if there is enough space for it


            if (textWidth <= _this2.lineWidth) {
              buffer = buffer + _this2.ellipsis;
            }

            textWidth = _this2.wordWidth(buffer);
          }

          if (bk.required) {
            if (w > _this2.spaceLeft) {
              emitLine();
              buffer = word;
              textWidth = w;
              wc = 1;
            }

            _this2.emit('lastLine', options, _this2);
          }

          emitLine(); // if we've reached the edge of the page,
          // continue on a new page or column

          if (_this2.document.y + lh > _this2.maxY) {
            var shouldContinue = _this2.nextSection(); // stop if we reached the maximum height


            if (!shouldContinue) {
              wc = 0;
              buffer = '';
              return false;
            }
          } // reset the space left and buffer


          if (bk.required) {
            _this2.spaceLeft = _this2.lineWidth;
            buffer = '';
            textWidth = 0;
            return wc = 0;
          } else {
            // reset the space left and buffer
            _this2.spaceLeft = _this2.lineWidth - w;
            buffer = word;
            textWidth = w;
            return wc = 1;
          }
        } else {
          return _this2.spaceLeft -= w;
        }
      });

      if (wc > 0) {
        this.emit('lastLine', options, this);
        emitLine();
      }

      this.emit('sectionEnd', options, this); // if the wrap is set to be continued, save the X position
      // to start the first line of the next segment at, and reset
      // the y position

      if (options.continued === true) {
        if (lc > 1) {
          this.continuedX = 0;
        }

        this.continuedX += options.textWidth || 0;
        return this.document.y = y;
      } else {
        return this.document.x = this.startX;
      }
    }
  }, {
    key: "nextSection",
    value: function nextSection(options) {
      this.emit('sectionEnd', options, this);

      if (++this.column > this.columns) {
        // if a max height was specified by the user, we're done.
        // otherwise, the default is to make a new page at the bottom.
        if (this.height != null) {
          return false;
        }

        this.document.continueOnNewPage();
        this.column = 1;
        this.startY = this.document.page.margins.top;
        this.maxY = this.document.page.maxY();
        this.document.x = this.startX;

        if (this.document._fillColor) {
          var _this$document;

          (_this$document = this.document).fillColor.apply(_this$document, _toConsumableArray(this.document._fillColor));
        }

        this.emit('pageBreak', options, this);
      } else {
        this.document.x += this.lineWidth + this.columnGap;
        this.document.y = this.startY;
        this.emit('columnBreak', options, this);
      }

      this.emit('sectionStart', options, this);
      return true;
    }
  }]);

  return LineWrapper;
}(events__WEBPACK_IMPORTED_MODULE_5__.EventEmitter);

var number$2 = PDFObject.number;
var TextMixin = {
  initText: function initText() {
    this._line = this._line.bind(this); // Current coordinates

    this.x = 0;
    this.y = 0;
    return this._lineGap = 0;
  },
  lineGap: function lineGap(_lineGap) {
    this._lineGap = _lineGap;
    return this;
  },
  moveDown: function moveDown(lines) {
    if (lines == null) {
      lines = 1;
    }

    this.y += this.currentLineHeight(true) * lines + this._lineGap;
    return this;
  },
  moveUp: function moveUp(lines) {
    if (lines == null) {
      lines = 1;
    }

    this.y -= this.currentLineHeight(true) * lines + this._lineGap;
    return this;
  },
  _text: function _text(text, x, y, options, lineCallback) {
    var _this = this;

    options = this._initOptions(x, y, options); // Convert text to a string

    text = text == null ? '' : "".concat(text); // if the wordSpacing option is specified, remove multiple consecutive spaces

    if (options.wordSpacing) {
      text = text.replace(/\\s{2,}/g, ' ');
    }

    var addStructure = function addStructure() {
      if (options.structParent) {
        options.structParent.add(_this.struct(options.structType || 'P', [_this.markStructureContent(options.structType || 'P')]));
      }
    }; // word wrapping


    if (options.width) {
      var wrapper = this._wrapper;

      if (!wrapper) {
        wrapper = new LineWrapper(this, options);
        wrapper.on('line', lineCallback);
        wrapper.on('firstLine', addStructure);
      }

      this._wrapper = options.continued ? wrapper : null;
      this._textOptions = options.continued ? options : null;
      wrapper.wrap(text, options); // render paragraphs as single lines
    } else {
      var _iterator = _createForOfIteratorHelper(text.split('\\n')),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var line = _step.value;
          addStructure();
          lineCallback(line, options);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }

    return this;
  },
  text: function text(_text2, x, y, options) {
    return this._text(_text2, x, y, options, this._line);
  },
  widthOfString: function widthOfString(string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return this._font.widthOfString(string, this._fontSize, options.features) + (options.characterSpacing || 0) * (string.length - 1);
  },
  heightOfString: function heightOfString(text, options) {
    var _this2 = this;

    var x = this.x,
        y = this.y;
    options = this._initOptions(options);
    options.height = Infinity; // don't break pages

    var lineGap = options.lineGap || this._lineGap || 0;

    this._text(text, this.x, this.y, options, function () {
      return _this2.y += _this2.currentLineHeight(true) + lineGap;
    });

    var height = this.y - y;
    this.x = x;
    this.y = y;
    return height;
  },
  list: function list(_list, x, y, options, wrapper) {
    var _this3 = this;

    options = this._initOptions(x, y, options);
    var listType = options.listType || 'bullet';
    var unit = Math.round(this._font.ascender / 1000 * this._fontSize);
    var midLine = unit / 2;
    var r = options.bulletRadius || unit / 3;
    var indent = options.textIndent || (listType === 'bullet' ? r * 5 : unit * 2);
    var itemIndent = options.bulletIndent || (listType === 'bullet' ? r * 8 : unit * 2);
    var level = 1;
    var items = [];
    var levels = [];
    var numbers = [];

    var flatten = function flatten(list) {
      var n = 1;

      for (var _i = 0; _i < list.length; _i++) {
        var item = list[_i];

        if (Array.isArray(item)) {
          level++;
          flatten(item);
          level--;
        } else {
          items.push(item);
          levels.push(level);

          if (listType !== 'bullet') {
            numbers.push(n++);
          }
        }
      }
    };

    flatten(_list);

    var label = function label(n) {
      switch (listType) {
        case 'numbered':
          return "".concat(n, ".");

        case 'lettered':
          var letter = String.fromCharCode((n - 1) % 26 + 65);
          var times = Math.floor((n - 1) / 26 + 1);
          var text = Array(times + 1).join(letter);
          return "".concat(text, ".");
      }
    };

    wrapper = new LineWrapper(this, options);
    wrapper.on('line', this._line);
    level = 1;
    var i = 0;
    wrapper.on('firstLine', function () {
      var item, itemType, labelType, bodyType;

      if (options.structParent) {
        if (options.structTypes) {
          var _options$structTypes = _slicedToArray(options.structTypes, 3);

          itemType = _options$structTypes[0];
          labelType = _options$structTypes[1];
          bodyType = _options$structTypes[2];
        } else {
          itemType = 'LI';
          labelType = 'Lbl';
          bodyType = 'LBody';
        }
      }

      if (itemType) {
        item = _this3.struct(itemType);
        options.structParent.add(item);
      } else if (options.structParent) {
        item = options.structParent;
      }

      var l;

      if ((l = levels[i++]) !== level) {
        var diff = itemIndent * (l - level);
        _this3.x += diff;
        wrapper.lineWidth -= diff;
        level = l;
      }

      if (item && (labelType || bodyType)) {
        item.add(_this3.struct(labelType || bodyType, [_this3.markStructureContent(labelType || bodyType)]));
      }

      switch (listType) {
        case 'bullet':
          _this3.circle(_this3.x - indent + r, _this3.y + midLine, r);

          _this3.fill();

          break;

        case 'numbered':
        case 'lettered':
          var text = label(numbers[i - 1]);

          _this3._fragment(text, _this3.x - indent, _this3.y, options);

          break;
      }

      if (item && labelType && bodyType) {
        item.add(_this3.struct(bodyType, [_this3.markStructureContent(bodyType)]));
      }

      if (item && item !== options.structParent) {
        item.end();
      }
    });
    wrapper.on('sectionStart', function () {
      var pos = indent + itemIndent * (level - 1);
      _this3.x += pos;
      return wrapper.lineWidth -= pos;
    });
    wrapper.on('sectionEnd', function () {
      var pos = indent + itemIndent * (level - 1);
      _this3.x -= pos;
      return wrapper.lineWidth += pos;
    });
    wrapper.wrap(items.join('\\n'), options);
    return this;
  },
  _initOptions: function _initOptions() {
    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var y = arguments.length > 1 ? arguments[1] : undefined;
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    if (typeof x === 'object') {
      options = x;
      x = null;
    } // clone options object


    var result = Object.assign({}, options); // extend options with previous values for continued text

    if (this._textOptions) {
      for (var key in this._textOptions) {
        var val = this._textOptions[key];

        if (key !== 'continued') {
          if (result[key] === undefined) {
            result[key] = val;
          }
        }
      }
    } // Update the current position


    if (x != null) {
      this.x = x;
    }

    if (y != null) {
      this.y = y;
    } // wrap to margins if no x or y position passed


    if (result.lineBreak !== false) {
      if (result.width == null) {
        result.width = this.page.width - this.x - this.page.margins.right;
      }

      result.width = Math.max(result.width, 0);
    }

    if (!result.columns) {
      result.columns = 0;
    }

    if (result.columnGap == null) {
      result.columnGap = 18;
    } // 1/4 inch


    return result;
  },
  _line: function _line(text) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var wrapper = arguments.length > 2 ? arguments[2] : undefined;

    this._fragment(text, this.x, this.y, options);

    var lineGap = options.lineGap || this._lineGap || 0;

    if (!wrapper) {
      return this.x += this.widthOfString(text);
    } else {
      return this.y += this.currentLineHeight(true) + lineGap;
    }
  },
  _fragment: function _fragment(text, x, y, options) {
    var _this4 = this;

    var dy, encoded, i, positions, textWidth, words;
    text = "".concat(text).replace(/\\n/g, '');

    if (text.length === 0) {
      return;
    } // handle options


    var align = options.align || 'left';
    var wordSpacing = options.wordSpacing || 0;
    var characterSpacing = options.characterSpacing || 0; // text alignments

    if (options.width) {
      switch (align) {
        case 'right':
          textWidth = this.widthOfString(text.replace(/\\s+$/, ''), options);
          x += options.lineWidth - textWidth;
          break;

        case 'center':
          x += options.lineWidth / 2 - options.textWidth / 2;
          break;

        case 'justify':
          // calculate the word spacing value
          words = text.trim().split(/\\s+/);
          textWidth = this.widthOfString(text.replace(/\\s+/g, ''), options);
          var spaceWidth = this.widthOfString(' ') + characterSpacing;
          wordSpacing = Math.max(0, (options.lineWidth - textWidth) / Math.max(1, words.length - 1) - spaceWidth);
          break;
      }
    } // text baseline alignments based on http://wiki.apache.org/xmlgraphics-fop/LineLayout/AlignmentHandling


    if (typeof options.baseline === 'number') {
      dy = -options.baseline;
    } else {
      switch (options.baseline) {
        case 'svg-middle':
          dy = 0.5 * this._font.xHeight;
          break;

        case 'middle':
        case 'svg-central':
          dy = 0.5 * (this._font.descender + this._font.ascender);
          break;

        case 'bottom':
        case 'ideographic':
          dy = this._font.descender;
          break;

        case 'alphabetic':
          dy = 0;
          break;

        case 'mathematical':
          dy = 0.5 * this._font.ascender;
          break;

        case 'hanging':
          dy = 0.8 * this._font.ascender;
          break;

        case 'top':
          dy = this._font.ascender;
          break;

        default:
          dy = this._font.ascender;
      }

      dy = dy / 1000 * this._fontSize;
    } // calculate the actual rendered width of the string after word and character spacing


    var renderedWidth = options.textWidth + wordSpacing * (options.wordCount - 1) + characterSpacing * (text.length - 1); // create link annotations if the link option is given

    if (options.link != null) {
      this.link(x, y, renderedWidth, this.currentLineHeight(), options.link);
    }

    if (options.goTo != null) {
      this.goTo(x, y, renderedWidth, this.currentLineHeight(), options.goTo);
    }

    if (options.destination != null) {
      this.addNamedDestination(options.destination, 'XYZ', x, y, null);
    } // create underline


    if (options.underline) {
      this.save();

      if (!options.stroke) {
        this.strokeColor.apply(this, _toConsumableArray(this._fillColor || []));
      }

      var lineWidth = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);
      this.lineWidth(lineWidth);
      var lineY = y + this.currentLineHeight() - lineWidth;
      this.moveTo(x, lineY);
      this.lineTo(x + renderedWidth, lineY);
      this.stroke();
      this.restore();
    } // create strikethrough line


    if (options.strike) {
      this.save();

      if (!options.stroke) {
        this.strokeColor.apply(this, _toConsumableArray(this._fillColor || []));
      }

      var _lineWidth = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);

      this.lineWidth(_lineWidth);

      var _lineY = y + this.currentLineHeight() / 2;

      this.moveTo(x, _lineY);
      this.lineTo(x + renderedWidth, _lineY);
      this.stroke();
      this.restore();
    }

    this.save(); // oblique (angle in degrees or boolean)

    if (options.oblique) {
      var skew;

      if (typeof options.oblique === 'number') {
        skew = -Math.tan(options.oblique * Math.PI / 180);
      } else {
        skew = -0.25;
      }

      this.transform(1, 0, 0, 1, x, y);
      this.transform(1, 0, skew, 1, -skew * dy, 0);
      this.transform(1, 0, 0, 1, -x, -y);
    } // flip coordinate system


    this.transform(1, 0, 0, -1, 0, this.page.height);
    y = this.page.height - y - dy; // add current font to page if necessary

    if (this.page.fonts[this._font.id] == null) {
      this.page.fonts[this._font.id] = this._font.ref();
    } // begin the text object


    this.addContent('BT'); // text position

    this.addContent("1 0 0 1 ".concat(number$2(x), " ").concat(number$2(y), " Tm")); // font and font size

    this.addContent("/".concat(this._font.id, " ").concat(number$2(this._fontSize), " Tf")); // rendering mode

    var mode = options.fill && options.stroke ? 2 : options.stroke ? 1 : 0;

    if (mode) {
      this.addContent("".concat(mode, " Tr"));
    } // Character spacing


    if (characterSpacing) {
      this.addContent("".concat(number$2(characterSpacing), " Tc"));
    } // Add the actual text
    // If we have a word spacing value, we need to encode each word separately
    // since the normal Tw operator only works on character code 32, which isn't
    // used for embedded fonts.


    if (wordSpacing) {
      words = text.trim().split(/\\s+/);
      wordSpacing += this.widthOfString(' ') + characterSpacing;
      wordSpacing *= 1000 / this._fontSize;
      encoded = [];
      positions = [];

      var _iterator2 = _createForOfIteratorHelper(words),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var word = _step2.value;

          var _this$_font$encode = this._font.encode(word, options.features),
              _this$_font$encode2 = _slicedToArray(_this$_font$encode, 2),
              encodedWord = _this$_font$encode2[0],
              positionsWord = _this$_font$encode2[1];

          encoded = encoded.concat(encodedWord);
          positions = positions.concat(positionsWord); // add the word spacing to the end of the word
          // clone object because of cache

          var space = {};
          var object = positions[positions.length - 1];

          for (var key in object) {
            var val = object[key];
            space[key] = val;
          }

          space.xAdvance += wordSpacing;
          positions[positions.length - 1] = space;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    } else {
      var _this$_font$encode3 = this._font.encode(text, options.features);

      var _this$_font$encode4 = _slicedToArray(_this$_font$encode3, 2);

      encoded = _this$_font$encode4[0];
      positions = _this$_font$encode4[1];
    }

    var scale = this._fontSize / 1000;
    var commands = [];
    var last = 0;
    var hadOffset = false; // Adds a segment of text to the TJ command buffer

    var addSegment = function addSegment(cur) {
      if (last < cur) {
        var hex = encoded.slice(last, cur).join('');
        var advance = positions[cur - 1].xAdvance - positions[cur - 1].advanceWidth;
        commands.push("<".concat(hex, "> ").concat(number$2(-advance)));
      }

      return last = cur;
    }; // Flushes the current TJ commands to the output stream


    var flush = function flush(i) {
      addSegment(i);

      if (commands.length > 0) {
        _this4.addContent("[".concat(commands.join(' '), "] TJ"));

        return commands.length = 0;
      }
    };

    for (i = 0; i < positions.length; i++) {
      // If we have an x or y offset, we have to break out of the current TJ command
      // so we can move the text position.
      var pos = positions[i];

      if (pos.xOffset || pos.yOffset) {
        // Flush the current buffer
        flush(i); // Move the text position and flush just the current character

        this.addContent("1 0 0 1 ".concat(number$2(x + pos.xOffset * scale), " ").concat(number$2(y + pos.yOffset * scale), " Tm"));
        flush(i + 1);
        hadOffset = true;
      } else {
        // If the last character had an offset, reset the text position
        if (hadOffset) {
          this.addContent("1 0 0 1 ".concat(number$2(x), " ").concat(number$2(y), " Tm"));
          hadOffset = false;
        } // Group segments that don't have any advance adjustments


        if (pos.xAdvance - pos.advanceWidth !== 0) {
          addSegment(i + 1);
        }
      }

      x += pos.xAdvance * scale;
    } // Flush any remaining commands


    flush(i); // end the text object

    this.addContent('ET'); // restore flipped coordinate system

    return this.restore();
  }
};

var MARKERS = [0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc8, 0xffc9, 0xffca, 0xffcb, 0xffcc, 0xffcd, 0xffce, 0xffcf];
var COLOR_SPACE_MAP = {
  1: 'DeviceGray',
  3: 'DeviceRGB',
  4: 'DeviceCMYK'
};

var JPEG = /*#__PURE__*/function () {
  function JPEG(data, label) {
    _classCallCheck(this, JPEG);

    var marker;
    this.data = data;
    this.label = label;

    if (this.data.readUInt16BE(0) !== 0xffd8) {
      throw 'SOI not found in JPEG';
    }

    var pos = 2;

    while (pos < this.data.length) {
      marker = this.data.readUInt16BE(pos);
      pos += 2;

      if (MARKERS.includes(marker)) {
        break;
      }

      pos += this.data.readUInt16BE(pos);
    }

    if (!MARKERS.includes(marker)) {
      throw 'Invalid JPEG.';
    }

    pos += 2;
    this.bits = this.data[pos++];
    this.height = this.data.readUInt16BE(pos);
    pos += 2;
    this.width = this.data.readUInt16BE(pos);
    pos += 2;
    var channels = this.data[pos++];
    this.colorSpace = COLOR_SPACE_MAP[channels];
    this.obj = null;
  }

  _createClass(JPEG, [{
    key: "embed",
    value: function embed(document) {
      if (this.obj) {
        return;
      }

      this.obj = document.ref({
        Type: 'XObject',
        Subtype: 'Image',
        BitsPerComponent: this.bits,
        Width: this.width,
        Height: this.height,
        ColorSpace: this.colorSpace,
        Filter: 'DCTDecode'
      }); // add extra decode params for CMYK images. By swapping the
      // min and max values from the default, we invert the colors. See
      // section 4.8.4 of the spec.

      if (this.colorSpace === 'DeviceCMYK') {
        this.obj.data['Decode'] = [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0];
      }

      this.obj.end(this.data); // free memory

      return this.data = null;
    }
  }]);

  return JPEG;
}();

var PNGImage = /*#__PURE__*/function () {
  function PNGImage(data, label) {
    _classCallCheck(this, PNGImage);

    this.label = label;
    this.image = new (png_js__WEBPACK_IMPORTED_MODULE_7___default())(data);
    this.width = this.image.width;
    this.height = this.image.height;
    this.imgData = this.image.imgData;
    this.obj = null;
  }

  _createClass(PNGImage, [{
    key: "embed",
    value: function embed(document) {
      var dataDecoded = false;
      this.document = document;

      if (this.obj) {
        return;
      }

      var hasAlphaChannel = this.image.hasAlphaChannel;
      var isInterlaced = this.image.interlaceMethod === 1;
      this.obj = this.document.ref({
        Type: 'XObject',
        Subtype: 'Image',
        BitsPerComponent: hasAlphaChannel ? 8 : this.image.bits,
        Width: this.width,
        Height: this.height,
        Filter: 'FlateDecode'
      });

      if (!hasAlphaChannel) {
        var params = this.document.ref({
          Predictor: isInterlaced ? 1 : 15,
          Colors: this.image.colors,
          BitsPerComponent: this.image.bits,
          Columns: this.width
        });
        this.obj.data['DecodeParms'] = params;
        params.end();
      }

      if (this.image.palette.length === 0) {
        this.obj.data['ColorSpace'] = this.image.colorSpace;
      } else {
        // embed the color palette in the PDF as an object stream
        var palette = this.document.ref();
        palette.end(Buffer.from(this.image.palette)); // build the color space array for the image

        this.obj.data['ColorSpace'] = ['Indexed', 'DeviceRGB', this.image.palette.length / 3 - 1, palette];
      } // For PNG color types 0, 2 and 3, the transparency data is stored in
      // a dedicated PNG chunk.


      if (this.image.transparency.grayscale != null) {
        // Use Color Key Masking (spec section 4.8.5)
        // An array with N elements, where N is two times the number of color components.
        var val = this.image.transparency.grayscale;
        this.obj.data['Mask'] = [val, val];
      } else if (this.image.transparency.rgb) {
        // Use Color Key Masking (spec section 4.8.5)
        // An array with N elements, where N is two times the number of color components.
        var rgb = this.image.transparency.rgb;
        var mask = [];

        var _iterator = _createForOfIteratorHelper(rgb),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var x = _step.value;
            mask.push(x, x);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        this.obj.data['Mask'] = mask;
      } else if (this.image.transparency.indexed) {
        // Create a transparency SMask for the image based on the data
        // in the PLTE and tRNS sections. See below for details on SMasks.
        dataDecoded = true;
        return this.loadIndexedAlphaChannel();
      } else if (hasAlphaChannel) {
        // For PNG color types 4 and 6, the transparency data is stored as a alpha
        // channel mixed in with the main image data. Separate this data out into an
        // SMask object and store it separately in the PDF.
        dataDecoded = true;
        return this.splitAlphaChannel();
      }

      if (isInterlaced && !dataDecoded) {
        return this.decodeData();
      }

      this.finalize();
    }
  }, {
    key: "finalize",
    value: function finalize() {
      if (this.alphaChannel) {
        var sMask = this.document.ref({
          Type: 'XObject',
          Subtype: 'Image',
          Height: this.height,
          Width: this.width,
          BitsPerComponent: 8,
          Filter: 'FlateDecode',
          ColorSpace: 'DeviceGray',
          Decode: [0, 1]
        });
        sMask.end(this.alphaChannel);
        this.obj.data['SMask'] = sMask;
      } // add the actual image data


      this.obj.end(this.imgData); // free memory

      this.image = null;
      return this.imgData = null;
    }
  }, {
    key: "splitAlphaChannel",
    value: function splitAlphaChannel() {
      var _this = this;

      return this.image.decodePixels(function (pixels) {
        var a, p;
        var colorCount = _this.image.colors;
        var pixelCount = _this.width * _this.height;
        var imgData = Buffer.alloc(pixelCount * colorCount);
        var alphaChannel = Buffer.alloc(pixelCount);
        var i = p = a = 0;
        var len = pixels.length; // For 16bit images copy only most significant byte (MSB) - PNG data is always stored in network byte order (MSB first)

        var skipByteCount = _this.image.bits === 16 ? 1 : 0;

        while (i < len) {
          for (var colorIndex = 0; colorIndex < colorCount; colorIndex++) {
            imgData[p++] = pixels[i++];
            i += skipByteCount;
          }

          alphaChannel[a++] = pixels[i++];
          i += skipByteCount;
        }

        _this.imgData = zlib__WEBPACK_IMPORTED_MODULE_2___default().deflateSync(imgData);
        _this.alphaChannel = zlib__WEBPACK_IMPORTED_MODULE_2___default().deflateSync(alphaChannel);
        return _this.finalize();
      });
    }
  }, {
    key: "loadIndexedAlphaChannel",
    value: function loadIndexedAlphaChannel() {
      var _this2 = this;

      var transparency = this.image.transparency.indexed;
      return this.image.decodePixels(function (pixels) {
        var alphaChannel = Buffer.alloc(_this2.width * _this2.height);
        var i = 0;

        for (var j = 0, end = pixels.length; j < end; j++) {
          alphaChannel[i++] = transparency[pixels[j]];
        }

        _this2.alphaChannel = zlib__WEBPACK_IMPORTED_MODULE_2___default().deflateSync(alphaChannel);
        return _this2.finalize();
      });
    }
  }, {
    key: "decodeData",
    value: function decodeData() {
      var _this3 = this;

      this.image.decodePixels(function (pixels) {
        _this3.imgData = zlib__WEBPACK_IMPORTED_MODULE_2___default().deflateSync(pixels);

        _this3.finalize();
      });
    }
  }]);

  return PNGImage;
}();

var PDFImage = /*#__PURE__*/function () {
  function PDFImage() {
    _classCallCheck(this, PDFImage);
  }

  _createClass(PDFImage, null, [{
    key: "open",
    value: function open(src, label) {
      var data;

      if (Buffer.isBuffer(src)) {
        data = src;
      } else if (src instanceof ArrayBuffer) {
        data = Buffer.from(new Uint8Array(src));
      } else {
        var match;

        if (match = /^data:.+;base64,(.*)$/.exec(src)) {
          data = Buffer.from(match[1], 'base64');
        } else {
          data = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(src);

          if (!data) {
            return;
          }
        }
      }

      if (data[0] === 0xff && data[1] === 0xd8) {
        return new JPEG(data, label);
      } else if (data[0] === 0x89 && data.toString('ascii', 1, 4) === 'PNG') {
        return new PNGImage(data, label);
      } else {
        throw new Error('Unknown image format.');
      }
    }
  }]);

  return PDFImage;
}();

var ImagesMixin = {
  initImages: function initImages() {
    this._imageRegistry = {};
    return this._imageCount = 0;
  },
  image: function image(src, x, y) {
    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    var bh, bp, bw, image, ip, left, left1;

    if (typeof x === 'object') {
      options = x;
      x = null;
    }

    x = (left = x != null ? x : options.x) != null ? left : this.x;
    y = (left1 = y != null ? y : options.y) != null ? left1 : this.y;

    if (typeof src === 'string') {
      image = this._imageRegistry[src];
    }

    if (!image) {
      if (src.width && src.height) {
        image = src;
      } else {
        image = this.openImage(src);
      }
    }

    if (!image.obj) {
      image.embed(this);
    }

    if (this.page.xobjects[image.label] == null) {
      this.page.xobjects[image.label] = image.obj;
    }

    var w = options.width || image.width;
    var h = options.height || image.height;

    if (options.width && !options.height) {
      var wp = w / image.width;
      w = image.width * wp;
      h = image.height * wp;
    } else if (options.height && !options.width) {
      var hp = h / image.height;
      w = image.width * hp;
      h = image.height * hp;
    } else if (options.scale) {
      w = image.width * options.scale;
      h = image.height * options.scale;
    } else if (options.fit) {
      var _options$fit = _slicedToArray(options.fit, 2);

      bw = _options$fit[0];
      bh = _options$fit[1];
      bp = bw / bh;
      ip = image.width / image.height;

      if (ip > bp) {
        w = bw;
        h = bw / ip;
      } else {
        h = bh;
        w = bh * ip;
      }
    } else if (options.cover) {
      var _options$cover = _slicedToArray(options.cover, 2);

      bw = _options$cover[0];
      bh = _options$cover[1];
      bp = bw / bh;
      ip = image.width / image.height;

      if (ip > bp) {
        h = bh;
        w = bh * ip;
      } else {
        w = bw;
        h = bw / ip;
      }
    }

    if (options.fit || options.cover) {
      if (options.align === 'center') {
        x = x + bw / 2 - w / 2;
      } else if (options.align === 'right') {
        x = x + bw - w;
      }

      if (options.valign === 'center') {
        y = y + bh / 2 - h / 2;
      } else if (options.valign === 'bottom') {
        y = y + bh - h;
      }
    } // create link annotations if the link option is given


    if (options.link != null) {
      this.link(x, y, w, h, options.link);
    }

    if (options.goTo != null) {
      this.goTo(x, y, w, h, options.goTo);
    }

    if (options.destination != null) {
      this.addNamedDestination(options.destination, 'XYZ', x, y, null);
    } // Set the current y position to below the image if it is in the document flow


    if (this.y === y) {
      this.y += h;
    }

    this.save();
    this.transform(w, 0, 0, -h, x, y + h);
    this.addContent("/".concat(image.label, " Do"));
    this.restore();
    return this;
  },
  openImage: function openImage(src) {
    var image;

    if (typeof src === 'string') {
      image = this._imageRegistry[src];
    }

    if (!image) {
      image = PDFImage.open(src, "I".concat(++this._imageCount));

      if (typeof src === 'string') {
        this._imageRegistry[src] = image;
      }
    }

    return image;
  }
};

var AnnotationsMixin = {
  annotate: function annotate(x, y, w, h, options) {
    options.Type = 'Annot';
    options.Rect = this._convertRect(x, y, w, h);
    options.Border = [0, 0, 0];

    if (options.Subtype === 'Link' && typeof options.F === 'undefined') {
      options.F = 1 << 2; // Print Annotation Flag
    }

    if (options.Subtype !== 'Link') {
      if (options.C == null) {
        options.C = this._normalizeColor(options.color || [0, 0, 0]);
      }
    } // convert colors


    delete options.color;

    if (typeof options.Dest === 'string') {
      options.Dest = new String(options.Dest);
    } // Capitalize keys


    for (var key in options) {
      var val = options[key];
      options[key[0].toUpperCase() + key.slice(1)] = val;
    }

    var ref = this.ref(options);
    this.page.annotations.push(ref);
    ref.end();
    return this;
  },
  note: function note(x, y, w, h, contents) {
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    options.Subtype = 'Text';
    options.Contents = new String(contents);
    options.Name = 'Comment';

    if (options.color == null) {
      options.color = [243, 223, 92];
    }

    return this.annotate(x, y, w, h, options);
  },
  goTo: function goTo(x, y, w, h, name) {
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    options.Subtype = 'Link';
    options.A = this.ref({
      S: 'GoTo',
      D: new String(name)
    });
    options.A.end();
    return this.annotate(x, y, w, h, options);
  },
  link: function link(x, y, w, h, url) {
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    options.Subtype = 'Link';

    if (typeof url === 'number') {
      // Link to a page in the document (the page must already exist)
      var pages = this._root.data.Pages.data;

      if (url >= 0 && url < pages.Kids.length) {
        options.A = this.ref({
          S: 'GoTo',
          D: [pages.Kids[url], 'XYZ', null, null, null]
        });
        options.A.end();
      } else {
        throw new Error("The document has no page ".concat(url));
      }
    } else {
      // Link to an external url
      options.A = this.ref({
        S: 'URI',
        URI: new String(url)
      });
      options.A.end();
    }

    return this.annotate(x, y, w, h, options);
  },
  _markup: function _markup(x, y, w, h) {
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

    var _this$_convertRect = this._convertRect(x, y, w, h),
        _this$_convertRect2 = _slicedToArray(_this$_convertRect, 4),
        x1 = _this$_convertRect2[0],
        y1 = _this$_convertRect2[1],
        x2 = _this$_convertRect2[2],
        y2 = _this$_convertRect2[3];

    options.QuadPoints = [x1, y2, x2, y2, x1, y1, x2, y1];
    options.Contents = new String();
    return this.annotate(x, y, w, h, options);
  },
  highlight: function highlight(x, y, w, h) {
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    options.Subtype = 'Highlight';

    if (options.color == null) {
      options.color = [241, 238, 148];
    }

    return this._markup(x, y, w, h, options);
  },
  underline: function underline(x, y, w, h) {
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    options.Subtype = 'Underline';
    return this._markup(x, y, w, h, options);
  },
  strike: function strike(x, y, w, h) {
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    options.Subtype = 'StrikeOut';
    return this._markup(x, y, w, h, options);
  },
  lineAnnotation: function lineAnnotation(x1, y1, x2, y2) {
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    options.Subtype = 'Line';
    options.Contents = new String();
    options.L = [x1, this.page.height - y1, x2, this.page.height - y2];
    return this.annotate(x1, y1, x2, y2, options);
  },
  rectAnnotation: function rectAnnotation(x, y, w, h) {
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    options.Subtype = 'Square';
    options.Contents = new String();
    return this.annotate(x, y, w, h, options);
  },
  ellipseAnnotation: function ellipseAnnotation(x, y, w, h) {
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    options.Subtype = 'Circle';
    options.Contents = new String();
    return this.annotate(x, y, w, h, options);
  },
  textAnnotation: function textAnnotation(x, y, w, h, text) {
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    options.Subtype = 'FreeText';
    options.Contents = new String(text);
    options.DA = new String();
    return this.annotate(x, y, w, h, options);
  },
  fileAnnotation: function fileAnnotation(x, y, w, h) {
    var file = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    // create hidden file
    var filespec = this.file(file.src, Object.assign({
      hidden: true
    }, file));
    options.Subtype = 'FileAttachment';
    options.FS = filespec; // add description from filespec unless description (Contents) has already been set

    if (options.Contents) {
      options.Contents = new String(options.Contents);
    } else if (filespec.data.Desc) {
      options.Contents = filespec.data.Desc;
    }

    return this.annotate(x, y, w, h, options);
  },
  _convertRect: function _convertRect(x1, y1, w, h) {
    // flip y1 and y2
    var y2 = y1;
    y1 += h; // make x2

    var x2 = x1 + w; // apply current transformation matrix to points

    var _this$_ctm = _slicedToArray(this._ctm, 6),
        m0 = _this$_ctm[0],
        m1 = _this$_ctm[1],
        m2 = _this$_ctm[2],
        m3 = _this$_ctm[3],
        m4 = _this$_ctm[4],
        m5 = _this$_ctm[5];

    x1 = m0 * x1 + m2 * y1 + m4;
    y1 = m1 * x1 + m3 * y1 + m5;
    x2 = m0 * x2 + m2 * y2 + m4;
    y2 = m1 * x2 + m3 * y2 + m5;
    return [x1, y1, x2, y2];
  }
};

var PDFOutline = /*#__PURE__*/function () {
  function PDFOutline(document, parent, title, dest) {
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {
      expanded: false
    };

    _classCallCheck(this, PDFOutline);

    this.document = document;
    this.options = options;
    this.outlineData = {};

    if (dest !== null) {
      this.outlineData['Dest'] = [dest.dictionary, 'Fit'];
    }

    if (parent !== null) {
      this.outlineData['Parent'] = parent;
    }

    if (title !== null) {
      this.outlineData['Title'] = new String(title);
    }

    this.dictionary = this.document.ref(this.outlineData);
    this.children = [];
  }

  _createClass(PDFOutline, [{
    key: "addItem",
    value: function addItem(title) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        expanded: false
      };
      var result = new PDFOutline(this.document, this.dictionary, title, this.document.page, options);
      this.children.push(result);
      return result;
    }
  }, {
    key: "endOutline",
    value: function endOutline() {
      if (this.children.length > 0) {
        if (this.options.expanded) {
          this.outlineData.Count = this.children.length;
        }

        var first = this.children[0],
            last = this.children[this.children.length - 1];
        this.outlineData.First = first.dictionary;
        this.outlineData.Last = last.dictionary;

        for (var i = 0, len = this.children.length; i < len; i++) {
          var child = this.children[i];

          if (i > 0) {
            child.outlineData.Prev = this.children[i - 1].dictionary;
          }

          if (i < this.children.length - 1) {
            child.outlineData.Next = this.children[i + 1].dictionary;
          }

          child.endOutline();
        }
      }

      return this.dictionary.end();
    }
  }]);

  return PDFOutline;
}();

var OutlineMixin = {
  initOutline: function initOutline() {
    return this.outline = new PDFOutline(this, null, null, null);
  },
  endOutline: function endOutline() {
    this.outline.endOutline();

    if (this.outline.children.length > 0) {
      this._root.data.Outlines = this.outline.dictionary;
      return this._root.data.PageMode = 'UseOutlines';
    }
  }
};

/*\r
PDFStructureContent - a reference to a marked structure content\r
By Ben Schmidt\r
*/
var PDFStructureContent = /*#__PURE__*/function () {
  function PDFStructureContent(pageRef, mcid) {
    _classCallCheck(this, PDFStructureContent);

    this.refs = [{
      pageRef: pageRef,
      mcid: mcid
    }];
  }

  _createClass(PDFStructureContent, [{
    key: "push",
    value: function push(structContent) {
      var _this = this;

      structContent.refs.forEach(function (ref) {
        return _this.refs.push(ref);
      });
    }
  }]);

  return PDFStructureContent;
}();

var PDFStructureElement = /*#__PURE__*/function () {
  function PDFStructureElement(document, type) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var children = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

    _classCallCheck(this, PDFStructureElement);

    this.document = document;
    this._attached = false;
    this._ended = false;
    this._flushed = false;
    this.dictionary = document.ref({
      // Type: "StructElem",
      S: type
    });
    var data = this.dictionary.data;

    if (Array.isArray(options) || this._isValidChild(options)) {
      children = options;
      options = {};
    }

    if (typeof options.title !== 'undefined') {
      data.T = new String(options.title);
    }

    if (typeof options.lang !== 'undefined') {
      data.Lang = new String(options.lang);
    }

    if (typeof options.alt !== 'undefined') {
      data.Alt = new String(options.alt);
    }

    if (typeof options.expanded !== 'undefined') {
      data.E = new String(options.expanded);
    }

    if (typeof options.actual !== 'undefined') {
      data.ActualText = new String(options.actual);
    }

    this._children = [];

    if (children) {
      if (!Array.isArray(children)) {
        children = [children];
      }

      children.forEach(function (child) {
        return _this.add(child);
      });
      this.end();
    }
  }

  _createClass(PDFStructureElement, [{
    key: "add",
    value: function add(child) {
      if (this._ended) {
        throw new Error("Cannot add child to already-ended structure element");
      }

      if (!this._isValidChild(child)) {
        throw new Error("Invalid structure element child");
      }

      if (child instanceof PDFStructureElement) {
        child.setParent(this.dictionary);

        if (this._attached) {
          child.setAttached();
        }
      }

      if (child instanceof PDFStructureContent) {
        this._addContentToParentTree(child);
      }

      if (typeof child === 'function' && this._attached) {
        // _contentForClosure() adds the content to the parent tree
        child = this._contentForClosure(child);
      }

      this._children.push(child);

      return this;
    }
  }, {
    key: "_addContentToParentTree",
    value: function _addContentToParentTree(content) {
      var _this2 = this;

      content.refs.forEach(function (_ref) {
        var pageRef = _ref.pageRef,
            mcid = _ref.mcid;

        var pageStructParents = _this2.document.getStructParentTree().get(pageRef.data.StructParents);

        pageStructParents[mcid] = _this2.dictionary;
      });
    }
  }, {
    key: "setParent",
    value: function setParent(parentRef) {
      if (this.dictionary.data.P) {
        throw new Error("Structure element added to more than one parent");
      }

      this.dictionary.data.P = parentRef;

      this._flush();
    }
  }, {
    key: "setAttached",
    value: function setAttached() {
      var _this3 = this;

      if (this._attached) {
        return;
      }

      this._children.forEach(function (child, index) {
        if (child instanceof PDFStructureElement) {
          child.setAttached();
        }

        if (typeof child === 'function') {
          _this3._children[index] = _this3._contentForClosure(child);
        }
      });

      this._attached = true;

      this._flush();
    }
  }, {
    key: "end",
    value: function end() {
      if (this._ended) {
        return;
      }

      this._children.filter(function (child) {
        return child instanceof PDFStructureElement;
      }).forEach(function (child) {
        return child.end();
      });

      this._ended = true;

      this._flush();
    }
  }, {
    key: "_isValidChild",
    value: function _isValidChild(child) {
      return child instanceof PDFStructureElement || child instanceof PDFStructureContent || typeof child === 'function';
    }
  }, {
    key: "_contentForClosure",
    value: function _contentForClosure(closure) {
      var content = this.document.markStructureContent(this.dictionary.data.S);
      closure();
      this.document.endMarkedContent();

      this._addContentToParentTree(content);

      return content;
    }
  }, {
    key: "_isFlushable",
    value: function _isFlushable() {
      if (!this.dictionary.data.P || !this._ended) {
        return false;
      }

      return this._children.every(function (child) {
        if (typeof child === 'function') {
          return false;
        }

        if (child instanceof PDFStructureElement) {
          return child._isFlushable();
        }

        return true;
      });
    }
  }, {
    key: "_flush",
    value: function _flush() {
      var _this4 = this;

      if (this._flushed || !this._isFlushable()) {
        return;
      }

      this.dictionary.data.K = [];

      this._children.forEach(function (child) {
        return _this4._flushChild(child);
      });

      this.dictionary.end(); // free memory used by children; the dictionary itself may still be
      // referenced by a parent structure element or root, but we can
      // at least trim the tree here

      this._children = [];
      this.dictionary.data.K = null;
      this._flushed = true;
    }
  }, {
    key: "_flushChild",
    value: function _flushChild(child) {
      var _this5 = this;

      if (child instanceof PDFStructureElement) {
        this.dictionary.data.K.push(child.dictionary);
      }

      if (child instanceof PDFStructureContent) {
        child.refs.forEach(function (_ref2) {
          var pageRef = _ref2.pageRef,
              mcid = _ref2.mcid;

          if (!_this5.dictionary.data.Pg) {
            _this5.dictionary.data.Pg = pageRef;
          }

          if (_this5.dictionary.data.Pg === pageRef) {
            _this5.dictionary.data.K.push(mcid);
          } else {
            _this5.dictionary.data.K.push({
              Type: "MCR",
              Pg: pageRef,
              MCID: mcid
            });
          }
        });
      }
    }
  }]);

  return PDFStructureElement;
}();

var PDFNumberTree = /*#__PURE__*/function (_PDFTree) {
  _inherits(PDFNumberTree, _PDFTree);

  var _super = _createSuper(PDFNumberTree);

  function PDFNumberTree() {
    _classCallCheck(this, PDFNumberTree);

    return _super.apply(this, arguments);
  }

  _createClass(PDFNumberTree, [{
    key: "_compareKeys",
    value: function _compareKeys(a, b) {
      return parseInt(a) - parseInt(b);
    }
  }, {
    key: "_keysName",
    value: function _keysName() {
      return "Nums";
    }
  }, {
    key: "_dataForKey",
    value: function _dataForKey(k) {
      return parseInt(k);
    }
  }]);

  return PDFNumberTree;
}(PDFTree);

var MarkingsMixin = {
  initMarkings: function initMarkings(options) {
    this.structChildren = [];

    if (options.tagged) {
      this.getMarkInfoDictionary().data.Marked = true;
      this.getStructTreeRoot();
    }
  },
  markContent: function markContent(tag) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    if (tag === 'Artifact' || options && options.mcid) {
      var toClose = 0;
      this.page.markings.forEach(function (marking) {
        if (toClose || marking.structContent || marking.tag === 'Artifact') {
          toClose++;
        }
      });

      while (toClose--) {
        this.endMarkedContent();
      }
    }

    if (!options) {
      this.page.markings.push({
        tag: tag
      });
      this.addContent("/".concat(tag, " BMC"));
      return this;
    }

    this.page.markings.push({
      tag: tag,
      options: options
    });
    var dictionary = {};

    if (typeof options.mcid !== 'undefined') {
      dictionary.MCID = options.mcid;
    }

    if (tag === 'Artifact') {
      if (typeof options.type === 'string') {
        dictionary.Type = options.type;
      }

      if (Array.isArray(options.bbox)) {
        dictionary.BBox = [options.bbox[0], this.page.height - options.bbox[3], options.bbox[2], this.page.height - options.bbox[1]];
      }

      if (Array.isArray(options.attached) && options.attached.every(function (val) {
        return typeof val === 'string';
      })) {
        dictionary.Attached = options.attached;
      }
    }

    if (tag === 'Span') {
      if (options.lang) {
        dictionary.Lang = new String(options.lang);
      }

      if (options.alt) {
        dictionary.Alt = new String(options.alt);
      }

      if (options.expanded) {
        dictionary.E = new String(options.expanded);
      }

      if (options.actual) {
        dictionary.ActualText = new String(options.actual);
      }
    }

    this.addContent("/".concat(tag, " ").concat(PDFObject.convert(dictionary), " BDC"));
    return this;
  },
  markStructureContent: function markStructureContent(tag) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var pageStructParents = this.getStructParentTree().get(this.page.structParentTreeKey);
    var mcid = pageStructParents.length;
    pageStructParents.push(null);
    this.markContent(tag, _objectSpread2(_objectSpread2({}, options), {}, {
      mcid: mcid
    }));
    var structContent = new PDFStructureContent(this.page.dictionary, mcid);
    this.page.markings.slice(-1)[0].structContent = structContent;
    return structContent;
  },
  endMarkedContent: function endMarkedContent() {
    this.page.markings.pop();
    this.addContent('EMC');
    return this;
  },
  struct: function struct(type) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var children = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    return new PDFStructureElement(this, type, options, children);
  },
  addStructure: function addStructure(structElem) {
    var structTreeRoot = this.getStructTreeRoot();
    structElem.setParent(structTreeRoot);
    structElem.setAttached();
    this.structChildren.push(structElem);

    if (!structTreeRoot.data.K) {
      structTreeRoot.data.K = [];
    }

    structTreeRoot.data.K.push(structElem.dictionary);
    return this;
  },
  initPageMarkings: function initPageMarkings(pageMarkings) {
    var _this = this;

    pageMarkings.forEach(function (marking) {
      if (marking.structContent) {
        var structContent = marking.structContent;

        var newStructContent = _this.markStructureContent(marking.tag, marking.options);

        structContent.push(newStructContent);
        _this.page.markings.slice(-1)[0].structContent = structContent;
      } else {
        _this.markContent(marking.tag, marking.options);
      }
    });
  },
  endPageMarkings: function endPageMarkings(page) {
    var pageMarkings = page.markings;
    pageMarkings.forEach(function () {
      return page.write('EMC');
    });
    page.markings = [];
    return pageMarkings;
  },
  getMarkInfoDictionary: function getMarkInfoDictionary() {
    if (!this._root.data.MarkInfo) {
      this._root.data.MarkInfo = this.ref({});
    }

    return this._root.data.MarkInfo;
  },
  getStructTreeRoot: function getStructTreeRoot() {
    if (!this._root.data.StructTreeRoot) {
      this._root.data.StructTreeRoot = this.ref({
        Type: 'StructTreeRoot',
        ParentTree: new PDFNumberTree(),
        ParentTreeNextKey: 0
      });
    }

    return this._root.data.StructTreeRoot;
  },
  getStructParentTree: function getStructParentTree() {
    return this.getStructTreeRoot().data.ParentTree;
  },
  createStructParentTreeNextKey: function createStructParentTreeNextKey() {
    // initialise the MarkInfo dictionary
    this.getMarkInfoDictionary();
    var structTreeRoot = this.getStructTreeRoot();
    var key = structTreeRoot.data.ParentTreeNextKey++;
    structTreeRoot.data.ParentTree.add(key, []);
    return key;
  },
  endMarkings: function endMarkings() {
    var structTreeRoot = this._root.data.StructTreeRoot;

    if (structTreeRoot) {
      structTreeRoot.end();
      this.structChildren.forEach(function (structElem) {
        return structElem.end();
      });
    }

    if (this._root.data.MarkInfo) {
      this._root.data.MarkInfo.end();
    }
  }
};

var FIELD_FLAGS = {
  readOnly: 1,
  required: 2,
  noExport: 4,
  multiline: 0x1000,
  password: 0x2000,
  toggleToOffButton: 0x4000,
  radioButton: 0x8000,
  pushButton: 0x10000,
  combo: 0x20000,
  edit: 0x40000,
  sort: 0x80000,
  multiSelect: 0x200000,
  noSpell: 0x400000
};
var FIELD_JUSTIFY = {
  left: 0,
  center: 1,
  right: 2
};
var VALUE_MAP = {
  value: 'V',
  defaultValue: 'DV'
};
var FORMAT_SPECIAL = {
  zip: '0',
  zipPlus4: '1',
  zip4: '1',
  phone: '2',
  ssn: '3'
};
var FORMAT_DEFAULT = {
  number: {
    nDec: 0,
    sepComma: false,
    negStyle: 'MinusBlack',
    currency: '',
    currencyPrepend: true
  },
  percent: {
    nDec: 0,
    sepComma: false
  }
};
var AcroFormMixin = {
  /**\r
   * Must call if adding AcroForms to a document. Must also call font() before\r
   * this method to set the default font.\r
   */
  initForm: function initForm() {
    if (!this._font) {
      throw new Error('Must set a font before calling initForm method');
    }

    this._acroform = {
      fonts: {},
      defaultFont: this._font.name
    };
    this._acroform.fonts[this._font.id] = this._font.ref();
    var data = {
      Fields: [],
      NeedAppearances: true,
      DA: new String("/".concat(this._font.id, " 0 Tf 0 g")),
      DR: {
        Font: {}
      }
    };
    data.DR.Font[this._font.id] = this._font.ref();
    var AcroForm = this.ref(data);
    this._root.data.AcroForm = AcroForm;
    return this;
  },

  /**\r
   * Called automatically by document.js\r
   */
  endAcroForm: function endAcroForm() {
    var _this = this;

    if (this._root.data.AcroForm) {
      if (!Object.keys(this._acroform.fonts).length && !this._acroform.defaultFont) {
        throw new Error('No fonts specified for PDF form');
      }

      var fontDict = this._root.data.AcroForm.data.DR.Font;
      Object.keys(this._acroform.fonts).forEach(function (name) {
        fontDict[name] = _this._acroform.fonts[name];
      });

      this._root.data.AcroForm.data.Fields.forEach(function (fieldRef) {
        _this._endChild(fieldRef);
      });

      this._root.data.AcroForm.end();
    }

    return this;
  },
  _endChild: function _endChild(ref) {
    var _this2 = this;

    if (Array.isArray(ref.data.Kids)) {
      ref.data.Kids.forEach(function (childRef) {
        _this2._endChild(childRef);
      });
      ref.end();
    }

    return this;
  },

  /**\r
   * Creates and adds a form field to the document. Form fields are intermediate\r
   * nodes in a PDF form that are used to specify form name heirarchy and form\r
   * value defaults.\r
   * @param {string} name - field name (T attribute in field dictionary)\r
   * @param {object} options  - other attributes to include in field dictionary\r
   */
  formField: function formField(name) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var fieldDict = this._fieldDict(name, null, options);

    var fieldRef = this.ref(fieldDict);

    this._addToParent(fieldRef);

    return fieldRef;
  },

  /**\r
   * Creates and adds a Form Annotation to the document. Form annotations are\r
   * called Widget annotations internally within a PDF file.\r
   * @param {string} name - form field name (T attribute of widget annotation\r
   * dictionary)\r
   * @param {number} x\r
   * @param {number} y\r
   * @param {number} w\r
   * @param {number} h\r
   * @param {object} options\r
   */
  formAnnotation: function formAnnotation(name, type, x, y, w, h) {
    var options = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};

    var fieldDict = this._fieldDict(name, type, options);

    fieldDict.Subtype = 'Widget';

    if (fieldDict.F === undefined) {
      fieldDict.F = 4; // print the annotation
    } // Add Field annot to page, and get it's ref


    this.annotate(x, y, w, h, fieldDict);
    var annotRef = this.page.annotations[this.page.annotations.length - 1];
    return this._addToParent(annotRef);
  },
  formText: function formText(name, x, y, w, h) {
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    return this.formAnnotation(name, 'text', x, y, w, h, options);
  },
  formPushButton: function formPushButton(name, x, y, w, h) {
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    return this.formAnnotation(name, 'pushButton', x, y, w, h, options);
  },
  formCombo: function formCombo(name, x, y, w, h) {
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    return this.formAnnotation(name, 'combo', x, y, w, h, options);
  },
  formList: function formList(name, x, y, w, h) {
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    return this.formAnnotation(name, 'list', x, y, w, h, options);
  },
  formRadioButton: function formRadioButton(name, x, y, w, h) {
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    return this.formAnnotation(name, 'radioButton', x, y, w, h, options);
  },
  formCheckbox: function formCheckbox(name, x, y, w, h) {
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    return this.formAnnotation(name, 'checkbox', x, y, w, h, options);
  },
  _addToParent: function _addToParent(fieldRef) {
    var parent = fieldRef.data.Parent;

    if (parent) {
      if (!parent.data.Kids) {
        parent.data.Kids = [];
      }

      parent.data.Kids.push(fieldRef);
    } else {
      this._root.data.AcroForm.data.Fields.push(fieldRef);
    }

    return this;
  },
  _fieldDict: function _fieldDict(name, type) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    if (!this._acroform) {
      throw new Error('Call document.initForms() method before adding form elements to document');
    }

    var opts = Object.assign({}, options);

    if (type !== null) {
      opts = this._resolveType(type, options);
    }

    opts = this._resolveFlags(opts);
    opts = this._resolveJustify(opts);
    opts = this._resolveFont(opts);
    opts = this._resolveStrings(opts);
    opts = this._resolveColors(opts);
    opts = this._resolveFormat(opts);
    opts.T = new String(name);

    if (opts.parent) {
      opts.Parent = opts.parent;
      delete opts.parent;
    }

    return opts;
  },
  _resolveType: function _resolveType(type, opts) {
    if (type === 'text') {
      opts.FT = 'Tx';
    } else if (type === 'pushButton') {
      opts.FT = 'Btn';
      opts.pushButton = true;
    } else if (type === 'radioButton') {
      opts.FT = 'Btn';
      opts.radioButton = true;
    } else if (type === 'checkbox') {
      opts.FT = 'Btn';
    } else if (type === 'combo') {
      opts.FT = 'Ch';
      opts.combo = true;
    } else if (type === 'list') {
      opts.FT = 'Ch';
    } else {
      throw new Error("Invalid form annotation type '".concat(type, "'"));
    }

    return opts;
  },
  _resolveFormat: function _resolveFormat(opts) {
    var f = opts.format;

    if (f && f.type) {
      var fnKeystroke;
      var fnFormat;
      var params = '';

      if (FORMAT_SPECIAL[f.type] !== undefined) {
        fnKeystroke = "AFSpecial_Keystroke";
        fnFormat = "AFSpecial_Format";
        params = FORMAT_SPECIAL[f.type];
      } else {
        var format = f.type.charAt(0).toUpperCase() + f.type.slice(1);
        fnKeystroke = "AF".concat(format, "_Keystroke");
        fnFormat = "AF".concat(format, "_Format");

        if (f.type === 'date') {
          fnKeystroke += 'Ex';
          params = String(f.param);
        } else if (f.type === 'time') {
          params = String(f.param);
        } else if (f.type === 'number') {
          var p = Object.assign({}, FORMAT_DEFAULT.number, f);
          params = String([String(p.nDec), p.sepComma ? '0' : '1', '"' + p.negStyle + '"', 'null', '"' + p.currency + '"', String(p.currencyPrepend)].join(','));
        } else if (f.type === 'percent') {
          var _p = Object.assign({}, FORMAT_DEFAULT.percent, f);

          params = String([String(_p.nDec), _p.sepComma ? '0' : '1'].join(','));
        }
      }

      opts.AA = opts.AA ? opts.AA : {};
      opts.AA.K = {
        S: 'JavaScript',
        JS: new String("".concat(fnKeystroke, "(").concat(params, ");"))
      };
      opts.AA.F = {
        S: 'JavaScript',
        JS: new String("".concat(fnFormat, "(").concat(params, ");"))
      };
    }

    delete opts.format;
    return opts;
  },
  _resolveColors: function _resolveColors(opts) {
    var color = this._normalizeColor(opts.backgroundColor);

    if (color) {
      if (!opts.MK) {
        opts.MK = {};
      }

      opts.MK.BG = color;
    }

    color = this._normalizeColor(opts.borderColor);

    if (color) {
      if (!opts.MK) {
        opts.MK = {};
      }

      opts.MK.BC = color;
    }

    delete opts.backgroundColor;
    delete opts.borderColor;
    return opts;
  },
  _resolveFlags: function _resolveFlags(options) {
    var result = 0;
    Object.keys(options).forEach(function (key) {
      if (FIELD_FLAGS[key]) {
        result |= FIELD_FLAGS[key];
        delete options[key];
      }
    });

    if (result !== 0) {
      options.Ff = options.Ff ? options.Ff : 0;
      options.Ff |= result;
    }

    return options;
  },
  _resolveJustify: function _resolveJustify(options) {
    var result = 0;

    if (options.align !== undefined) {
      if (typeof FIELD_JUSTIFY[options.align] === 'number') {
        result = FIELD_JUSTIFY[options.align];
      }

      delete options.align;
    }

    if (result !== 0) {
      options.Q = result; // default
    }

    return options;
  },
  _resolveFont: function _resolveFont(options) {
    // add current font to document-level AcroForm dict if necessary
    if (this._acroform.fonts[this._font.id] === null) {
      this._acroform.fonts[this._font.id] = this._font.ref();
    } // add current font to field's resource dict (RD) if not the default acroform font


    if (this._acroform.defaultFont !== this._font.name) {
      options.DR = {
        Font: {}
      }; // Get the fontSize option. If not set use auto sizing

      var fontSize = options.fontSize || 0;
      options.DR.Font[this._font.id] = this._font.ref();
      options.DA = new String("/".concat(this._font.id, " ").concat(fontSize, " Tf 0 g"));
    }

    return options;
  },
  _resolveStrings: function _resolveStrings(options) {
    var select = [];

    function appendChoices(a) {
      if (Array.isArray(a)) {
        for (var idx = 0; idx < a.length; idx++) {
          if (typeof a[idx] === 'string') {
            select.push(new String(a[idx]));
          } else {
            select.push(a[idx]);
          }
        }
      }
    }

    appendChoices(options.Opt);

    if (options.select) {
      appendChoices(options.select);
      delete options.select;
    }

    if (select.length) {
      options.Opt = select;
    }

    Object.keys(VALUE_MAP).forEach(function (key) {
      if (options[key] !== undefined) {
        options[VALUE_MAP[key]] = options[key];
        delete options[key];
      }
    });
    ['V', 'DV'].forEach(function (key) {
      if (typeof options[key] === 'string') {
        options[key] = new String(options[key]);
      }
    });

    if (options.MK && options.MK.CA) {
      options.MK.CA = new String(options.MK.CA);
    }

    if (options.label) {
      options.MK = options.MK ? options.MK : {};
      options.MK.CA = new String(options.label);
      delete options.label;
    }

    return options;
  }
};

var AttachmentsMixin = {
  /**\r
   * Embed contents of \`src\` in PDF\r
   * @param {Buffer | ArrayBuffer | string} src input Buffer, ArrayBuffer, base64 encoded string or path to file\r
   * @param {object} options\r
   *  * options.name: filename to be shown in PDF, will use \`src\` if none set\r
   *  * options.type: filetype to be shown in PDF\r
   *  * options.description: description to be shown in PDF\r
   *  * options.hidden: if true, do not add attachment to EmbeddedFiles dictionary. Useful for file attachment annotations\r
   *  * options.creationDate: override creation date\r
   *  * options.modifiedDate: override modified date\r
   * @returns filespec reference\r
   */
  file: function file(src) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    options.name = options.name || src;
    var refBody = {
      Type: 'EmbeddedFile',
      Params: {}
    };
    var data;

    if (!src) {
      throw new Error('No src specified');
    }

    if (Buffer.isBuffer(src)) {
      data = src;
    } else if (src instanceof ArrayBuffer) {
      data = Buffer.from(new Uint8Array(src));
    } else {
      var match;

      if (match = /^data:(.*);base64,(.*)$/.exec(src)) {
        if (match[1]) {
          refBody.Subtype = match[1].replace('/', '#2F');
        }

        data = Buffer.from(match[2], 'base64');
      } else {
        data = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(src);

        if (!data) {
          throw new Error("Could not read contents of file at filepath ".concat(src));
        } // update CreationDate and ModDate


        var _fs$statSync = fs__WEBPACK_IMPORTED_MODULE_1___default().statSync(src),
            birthtime = _fs$statSync.birthtime,
            ctime = _fs$statSync.ctime;

        refBody.Params.CreationDate = birthtime;
        refBody.Params.ModDate = ctime;
      }
    } // override creation date and modified date


    if (options.creationDate instanceof Date) {
      refBody.Params.CreationDate = options.creationDate;
    }

    if (options.modifiedDate instanceof Date) {
      refBody.Params.ModDate = options.modifiedDate;
    } // add optional subtype


    if (options.type) {
      refBody.Subtype = options.type.replace('/', '#2F');
    } // add checksum and size information


    var checksum = crypto_js__WEBPACK_IMPORTED_MODULE_3___default().MD5(crypto_js__WEBPACK_IMPORTED_MODULE_3___default().lib.WordArray.create(new Uint8Array(data)));
    refBody.Params.CheckSum = new String(checksum);
    refBody.Params.Size = data.byteLength; // save some space when embedding the same file again
    // if a file with the same name and metadata exists, reuse its reference

    var ref;
    if (!this._fileRegistry) this._fileRegistry = {};
    var file = this._fileRegistry[options.name];

    if (file && isEqual(refBody, file)) {
      ref = file.ref;
    } else {
      ref = this.ref(refBody);
      ref.end(data);
      this._fileRegistry[options.name] = _objectSpread2(_objectSpread2({}, refBody), {}, {
        ref: ref
      });
    } // add filespec for embedded file


    var fileSpecBody = {
      Type: 'Filespec',
      F: new String(options.name),
      EF: {
        F: ref
      },
      UF: new String(options.name)
    };

    if (options.description) {
      fileSpecBody.Desc = new String(options.description);
    }

    var filespec = this.ref(fileSpecBody);
    filespec.end();

    if (!options.hidden) {
      this.addNamedEmbeddedFile(options.name, filespec);
    }

    return filespec;
  }
};
/** check two embedded file metadata objects for equality */

function isEqual(a, b) {
  return a.Subtype === b.Subtype && a.Params.CheckSum.toString() === b.Params.CheckSum.toString() && a.Params.Size === b.Params.Size && a.Params.CreationDate === b.Params.CreationDate && a.Params.ModDate === b.Params.ModDate;
}

var PDFDocument = /*#__PURE__*/function (_stream$Readable) {
  _inherits(PDFDocument, _stream$Readable);

  var _super = _createSuper(PDFDocument);

  function PDFDocument() {
    var _this;

    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, PDFDocument);

    _this = _super.call(this, options);
    _this.options = options; // PDF version

    switch (options.pdfVersion) {
      case '1.4':
        _this.version = 1.4;
        break;

      case '1.5':
        _this.version = 1.5;
        break;

      case '1.6':
        _this.version = 1.6;
        break;

      case '1.7':
      case '1.7ext3':
        _this.version = 1.7;
        break;

      default:
        _this.version = 1.3;
        break;
    } // Whether streams should be compressed


    _this.compress = _this.options.compress != null ? _this.options.compress : true;
    _this._pageBuffer = [];
    _this._pageBufferStart = 0; // The PDF object store

    _this._offsets = [];
    _this._waiting = 0;
    _this._ended = false;
    _this._offset = 0;

    var Pages = _this.ref({
      Type: 'Pages',
      Count: 0,
      Kids: []
    });

    var Names = _this.ref({
      Dests: new PDFNameTree()
    });

    _this._root = _this.ref({
      Type: 'Catalog',
      Pages: Pages,
      Names: Names
    });

    if (_this.options.lang) {
      _this._root.data.Lang = new String(_this.options.lang);
    } // The current page


    _this.page = null; // Initialize mixins

    _this.initColor();

    _this.initVector();

    _this.initFonts(options.font);

    _this.initText();

    _this.initImages();

    _this.initOutline();

    _this.initMarkings(options); // Initialize the metadata


    _this.info = {
      Producer: 'PDFKit',
      Creator: 'PDFKit',
      CreationDate: new Date()
    };

    if (_this.options.info) {
      for (var key in _this.options.info) {
        var val = _this.options.info[key];
        _this.info[key] = val;
      }
    }

    if (_this.options.displayTitle) {
      _this._root.data.ViewerPreferences = _this.ref({
        DisplayDocTitle: true
      });
    } // Generate file ID


    _this._id = PDFSecurity.generateFileID(_this.info); // Initialize security settings

    _this._security = PDFSecurity.create(_assertThisInitialized(_this), options); // Write the header
    // PDF version

    _this._write("%PDF-".concat(_this.version)); // 4 binary chars, as recommended by the spec


    _this._write('%\\xFF\\xFF\\xFF\\xFF'); // Add the first page


    if (_this.options.autoFirstPage !== false) {
      _this.addPage();
    }

    return _this;
  }

  _createClass(PDFDocument, [{
    key: "addPage",
    value: function addPage(options) {
      if (options == null) {
        options = this.options;
      } // end the current page if needed


      if (!this.options.bufferPages) {
        this.flushPages();
      } // create a page object


      this.page = new PDFPage(this, options);

      this._pageBuffer.push(this.page); // add the page to the object store


      var pages = this._root.data.Pages.data;
      pages.Kids.push(this.page.dictionary);
      pages.Count++; // reset x and y coordinates

      this.x = this.page.margins.left;
      this.y = this.page.margins.top; // flip PDF coordinate system so that the origin is in
      // the top left rather than the bottom left

      this._ctm = [1, 0, 0, 1, 0, 0];
      this.transform(1, 0, 0, -1, 0, this.page.height);
      this.emit('pageAdded');
      return this;
    }
  }, {
    key: "continueOnNewPage",
    value: function continueOnNewPage(options) {
      var pageMarkings = this.endPageMarkings(this.page);
      this.addPage(options);
      this.initPageMarkings(pageMarkings);
      return this;
    }
  }, {
    key: "bufferedPageRange",
    value: function bufferedPageRange() {
      return {
        start: this._pageBufferStart,
        count: this._pageBuffer.length
      };
    }
  }, {
    key: "switchToPage",
    value: function switchToPage(n) {
      var page;

      if (!(page = this._pageBuffer[n - this._pageBufferStart])) {
        throw new Error("switchToPage(".concat(n, ") out of bounds, current buffer covers pages ").concat(this._pageBufferStart, " to ").concat(this._pageBufferStart + this._pageBuffer.length - 1));
      }

      return this.page = page;
    }
  }, {
    key: "flushPages",
    value: function flushPages() {
      // this local variable exists so we're future-proof against
      // reentrant calls to flushPages.
      var pages = this._pageBuffer;
      this._pageBuffer = [];
      this._pageBufferStart += pages.length;

      var _iterator = _createForOfIteratorHelper(pages),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var page = _step.value;
          this.endPageMarkings(page);
          page.end();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "addNamedDestination",
    value: function addNamedDestination(name) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      if (args.length === 0) {
        args = ['XYZ', null, null, null];
      }

      if (args[0] === 'XYZ' && args[2] !== null) {
        args[2] = this.page.height - args[2];
      }

      args.unshift(this.page.dictionary);

      this._root.data.Names.data.Dests.add(name, args);
    }
  }, {
    key: "addNamedEmbeddedFile",
    value: function addNamedEmbeddedFile(name, ref) {
      if (!this._root.data.Names.data.EmbeddedFiles) {
        // disabling /Limits for this tree fixes attachments not showing in Adobe Reader
        this._root.data.Names.data.EmbeddedFiles = new PDFNameTree({
          limits: false
        });
      } // add filespec to EmbeddedFiles


      this._root.data.Names.data.EmbeddedFiles.add(name, ref);
    }
  }, {
    key: "addNamedJavaScript",
    value: function addNamedJavaScript(name, js) {
      if (!this._root.data.Names.data.JavaScript) {
        this._root.data.Names.data.JavaScript = new PDFNameTree();
      }

      var data = {
        JS: new String(js),
        S: 'JavaScript'
      };

      this._root.data.Names.data.JavaScript.add(name, data);
    }
  }, {
    key: "ref",
    value: function ref(data) {
      var ref = new PDFReference(this, this._offsets.length + 1, data);

      this._offsets.push(null); // placeholder for this object's offset once it is finalized


      this._waiting++;
      return ref;
    }
  }, {
    key: "_read",
    value: function _read() {} // do nothing, but this method is required by node

  }, {
    key: "_write",
    value: function _write(data) {
      if (!Buffer.isBuffer(data)) {
        data = Buffer.from(data + '\\n', 'binary');
      }

      this.push(data);
      return this._offset += data.length;
    }
  }, {
    key: "addContent",
    value: function addContent(data) {
      this.page.write(data);
      return this;
    }
  }, {
    key: "_refEnd",
    value: function _refEnd(ref) {
      this._offsets[ref.id - 1] = ref.offset;

      if (--this._waiting === 0 && this._ended) {
        this._finalize();

        return this._ended = false;
      }
    }
  }, {
    key: "write",
    value: function write(filename, fn) {
      // print a deprecation warning with a stacktrace
      var err = new Error("PDFDocument#write is deprecated, and will be removed in a future version of PDFKit. Please pipe the document into a Node stream.");
      console.warn(err.stack);
      this.pipe(fs__WEBPACK_IMPORTED_MODULE_1___default().createWriteStream(filename));
      this.end();
      return this.once('end', fn);
    }
  }, {
    key: "end",
    value: function end() {
      this.flushPages();
      this._info = this.ref();

      for (var key in this.info) {
        var val = this.info[key];

        if (typeof val === 'string') {
          val = new String(val);
        }

        var entry = this.ref(val);
        entry.end();
        this._info.data[key] = entry;
      }

      this._info.end();

      for (var name in this._fontFamilies) {
        var font = this._fontFamilies[name];
        font.finalize();
      }

      this.endOutline();
      this.endMarkings();

      this._root.end();

      this._root.data.Pages.end();

      this._root.data.Names.end();

      this.endAcroForm();

      if (this._root.data.ViewerPreferences) {
        this._root.data.ViewerPreferences.end();
      }

      if (this._security) {
        this._security.end();
      }

      if (this._waiting === 0) {
        return this._finalize();
      } else {
        return this._ended = true;
      }
    }
  }, {
    key: "_finalize",
    value: function _finalize() {
      // generate xref
      var xRefOffset = this._offset;

      this._write('xref');

      this._write("0 ".concat(this._offsets.length + 1));

      this._write('0000000000 65535 f ');

      var _iterator2 = _createForOfIteratorHelper(this._offsets),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var offset = _step2.value;
          offset = "0000000000".concat(offset).slice(-10);

          this._write(offset + ' 00000 n ');
        } // trailer

      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      var trailer = {
        Size: this._offsets.length + 1,
        Root: this._root,
        Info: this._info,
        ID: [this._id, this._id]
      };

      if (this._security) {
        trailer.Encrypt = this._security.dictionary;
      }

      this._write('trailer');

      this._write(PDFObject.convert(trailer));

      this._write('startxref');

      this._write("".concat(xRefOffset));

      this._write('%%EOF'); // end the stream


      return this.push(null);
    }
  }, {
    key: "toString",
    value: function toString() {
      return '[object PDFDocument]';
    }
  }]);

  return PDFDocument;
}((stream__WEBPACK_IMPORTED_MODULE_0___default().Readable));

var mixin = function mixin(methods) {
  Object.assign(PDFDocument.prototype, methods);
};

mixin(ColorMixin);
mixin(VectorMixin);
mixin(FontsMixin);
mixin(TextMixin);
mixin(ImagesMixin);
mixin(AnnotationsMixin);
mixin(OutlineMixin);
mixin(MarkingsMixin);
mixin(AcroFormMixin);
mixin(AttachmentsMixin);
PDFDocument.LineWrapper = LineWrapper;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PDFDocument);
//# sourceMappingURL=pdfkit.es5.js.map


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/pdfkit.es5.js?`)},"./node_modules/pdfkit/js/virtual-fs.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`var __dirname = "/";
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];


var VirtualFileSystem = /*#__PURE__*/function () {
  function VirtualFileSystem() {
    this.fileData = {};
  }

  var _proto = VirtualFileSystem.prototype;

  _proto.readFileSync = function readFileSync(fileName, options) {
    if (options === void 0) {
      options = {};
    }

    var encoding = typeof options === 'string' ? options : options.encoding;
    var virtualFileName = normalizeFilename(fileName);
    var data = this.fileData[virtualFileName];

    if (data == null) {
      throw new Error("File '" + virtualFileName + "' not found in virtual file system");
    }

    if (encoding) {
      // return a string
      return typeof data === 'string' ? data : data.toString(encoding);
    }

    return Buffer.from(data, typeof data === 'string' ? 'base64' : undefined);
  };

  _proto.writeFileSync = function writeFileSync(fileName, content) {
    this.fileData[normalizeFilename(fileName)] = content;
  };

  _proto.bindFileData = function bindFileData(data, options) {
    if (data === void 0) {
      data = {};
    }

    if (options === void 0) {
      options = {};
    }

    if (options.reset) {
      this.fileData = data;
    } else {
      Object.assign(this.fileData, data);
    }
  };

  return VirtualFileSystem;
}();

function normalizeFilename(fileName) {
  if (fileName.indexOf(__dirname) === 0) {
    fileName = fileName.substring(__dirname.length);
  }

  if (fileName.indexOf('/') === 0) {
    fileName = fileName.substring(1);
  }

  return fileName;
}

var virtualFs = new VirtualFileSystem();

module.exports = virtualFs;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/virtual-fs.js?`)},"./node_modules/png-js/png-node.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
/*
 * MIT LICENSE
 * Copyright (c) 2011 Devon Govett
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this
 * software and associated documentation files (the "Software"), to deal in the Software
 * without restriction, including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons
 * to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
 * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

const fs = __webpack_require__(/*! fs */ "./node_modules/pdfkit/js/virtual-fs.js");
const zlib = __webpack_require__(/*! zlib */ "./node_modules/browserify-zlib/lib/index.js");

module.exports = class PNG {
  static decode(path, fn) {
    return fs.readFile(path, function(err, file) {
      const png = new PNG(file);
      return png.decode(pixels => fn(pixels));
    });
  }

  static load(path) {
    const file = fs.readFileSync(path);
    return new PNG(file);
  }

  constructor(data) {
    let i;
    this.data = data;
    this.pos = 8; // Skip the default header

    this.palette = [];
    this.imgData = [];
    this.transparency = {};
    this.text = {};

    while (true) {
      const chunkSize = this.readUInt32();
      let section = '';
      for (i = 0; i < 4; i++) {
        section += String.fromCharCode(this.data[this.pos++]);
      }

      switch (section) {
        case 'IHDR':
          // we can grab  interesting values from here (like width, height, etc)
          this.width = this.readUInt32();
          this.height = this.readUInt32();
          this.bits = this.data[this.pos++];
          this.colorType = this.data[this.pos++];
          this.compressionMethod = this.data[this.pos++];
          this.filterMethod = this.data[this.pos++];
          this.interlaceMethod = this.data[this.pos++];
          break;

        case 'PLTE':
          this.palette = this.read(chunkSize);
          break;

        case 'IDAT':
          for (i = 0; i < chunkSize; i++) {
            this.imgData.push(this.data[this.pos++]);
          }
          break;

        case 'tRNS':
          // This chunk can only occur once and it must occur after the
          // PLTE chunk and before the IDAT chunk.
          this.transparency = {};
          switch (this.colorType) {
            case 3:
              // Indexed color, RGB. Each byte in this chunk is an alpha for
              // the palette index in the PLTE ("palette") chunk up until the
              // last non-opaque entry. Set up an array, stretching over all
              // palette entries which will be 0 (opaque) or 1 (transparent).
              this.transparency.indexed = this.read(chunkSize);
              var short = 255 - this.transparency.indexed.length;
              if (short > 0) {
                for (i = 0; i < short; i++) {
                  this.transparency.indexed.push(255);
                }
              }
              break;
            case 0:
              // Greyscale. Corresponding to entries in the PLTE chunk.
              // Grey is two bytes, range 0 .. (2 ^ bit-depth) - 1
              this.transparency.grayscale = this.read(chunkSize)[0];
              break;
            case 2:
              // True color with proper alpha channel.
              this.transparency.rgb = this.read(chunkSize);
              break;
          }
          break;

        case 'tEXt':
          var text = this.read(chunkSize);
          var index = text.indexOf(0);
          var key = String.fromCharCode.apply(String, text.slice(0, index));
          this.text[key] = String.fromCharCode.apply(
            String,
            text.slice(index + 1)
          );
          break;

        case 'IEND':
          // we've got everything we need!
          switch (this.colorType) {
            case 0:
            case 3:
            case 4:
              this.colors = 1;
              break;
            case 2:
            case 6:
              this.colors = 3;
              break;
          }

          this.hasAlphaChannel = [4, 6].includes(this.colorType);
          var colors = this.colors + (this.hasAlphaChannel ? 1 : 0);
          this.pixelBitlength = this.bits * colors;

          switch (this.colors) {
            case 1:
              this.colorSpace = 'DeviceGray';
              break;
            case 3:
              this.colorSpace = 'DeviceRGB';
              break;
          }

          this.imgData = new Buffer(this.imgData);
          return;
          break;

        default:
          // unknown (or unimportant) section, skip it
          this.pos += chunkSize;
      }

      this.pos += 4; // Skip the CRC

      if (this.pos > this.data.length) {
        throw new Error('Incomplete or corrupt PNG file');
      }
    }
  }

  read(bytes) {
    const result = new Array(bytes);
    for (let i = 0; i < bytes; i++) {
      result[i] = this.data[this.pos++];
    }
    return result;
  }

  readUInt32() {
    const b1 = this.data[this.pos++] << 24;
    const b2 = this.data[this.pos++] << 16;
    const b3 = this.data[this.pos++] << 8;
    const b4 = this.data[this.pos++];
    return b1 | b2 | b3 | b4;
  }

  readUInt16() {
    const b1 = this.data[this.pos++] << 8;
    const b2 = this.data[this.pos++];
    return b1 | b2;
  }

  decodePixels(fn) {
    return zlib.inflate(this.imgData, (err, data) => {
      if (err) {
        throw err;
      }

      const { width, height } = this;
      const pixelBytes = this.pixelBitlength / 8;

      const pixels = new Buffer(width * height * pixelBytes);
      const { length } = data;
      let pos = 0;

      function pass(x0, y0, dx, dy, singlePass = false) {
        const w = Math.ceil((width - x0) / dx);
        const h = Math.ceil((height - y0) / dy);
        const scanlineLength = pixelBytes * w;
        const buffer = singlePass ? pixels : new Buffer(scanlineLength * h);
        let row = 0;
        let c = 0;
        while (row < h && pos < length) {
          var byte, col, i, left, upper;
          switch (data[pos++]) {
            case 0: // None
              for (i = 0; i < scanlineLength; i++) {
                buffer[c++] = data[pos++];
              }
              break;

            case 1: // Sub
              for (i = 0; i < scanlineLength; i++) {
                byte = data[pos++];
                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];
                buffer[c++] = (byte + left) % 256;
              }
              break;

            case 2: // Up
              for (i = 0; i < scanlineLength; i++) {
                byte = data[pos++];
                col = (i - (i % pixelBytes)) / pixelBytes;
                upper =
                  row &&
                  buffer[
                    (row - 1) * scanlineLength +
                      col * pixelBytes +
                      (i % pixelBytes)
                  ];
                buffer[c++] = (upper + byte) % 256;
              }
              break;

            case 3: // Average
              for (i = 0; i < scanlineLength; i++) {
                byte = data[pos++];
                col = (i - (i % pixelBytes)) / pixelBytes;
                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];
                upper =
                  row &&
                  buffer[
                    (row - 1) * scanlineLength +
                      col * pixelBytes +
                      (i % pixelBytes)
                  ];
                buffer[c++] = (byte + Math.floor((left + upper) / 2)) % 256;
              }
              break;

            case 4: // Paeth
              for (i = 0; i < scanlineLength; i++) {
                var paeth, upperLeft;
                byte = data[pos++];
                col = (i - (i % pixelBytes)) / pixelBytes;
                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];

                if (row === 0) {
                  upper = upperLeft = 0;
                } else {
                  upper =
                    buffer[
                      (row - 1) * scanlineLength +
                        col * pixelBytes +
                        (i % pixelBytes)
                    ];
                  upperLeft =
                    col &&
                    buffer[
                      (row - 1) * scanlineLength +
                        (col - 1) * pixelBytes +
                        (i % pixelBytes)
                    ];
                }

                const p = left + upper - upperLeft;
                const pa = Math.abs(p - left);
                const pb = Math.abs(p - upper);
                const pc = Math.abs(p - upperLeft);

                if (pa <= pb && pa <= pc) {
                  paeth = left;
                } else if (pb <= pc) {
                  paeth = upper;
                } else {
                  paeth = upperLeft;
                }

                buffer[c++] = (byte + paeth) % 256;
              }
              break;

            default:
              throw new Error(\`Invalid filter algorithm: \${data[pos - 1]}\`);
          }

          if (!singlePass) {
            let pixelsPos = ((y0 + row * dy) * width + x0) * pixelBytes;
            let bufferPos = row * scanlineLength;
            for (i = 0; i < w; i++) {
              for (let j = 0; j < pixelBytes; j++)
                pixels[pixelsPos++] = buffer[bufferPos++];
              pixelsPos += (dx - 1) * pixelBytes;
            }
          }

          row++;
        }
      }

      if (this.interlaceMethod === 1) {
        /*
          1 6 4 6 2 6 4 6
          7 7 7 7 7 7 7 7
          5 6 5 6 5 6 5 6
          7 7 7 7 7 7 7 7
          3 6 4 6 3 6 4 6
          7 7 7 7 7 7 7 7
          5 6 5 6 5 6 5 6
          7 7 7 7 7 7 7 7
        */
        pass(0, 0, 8, 8); // 1
        pass(4, 0, 8, 8); // 2
        pass(0, 4, 4, 8); // 3
        pass(2, 0, 4, 4); // 4
        pass(0, 2, 2, 4); // 5
        pass(1, 0, 2, 2); // 6
        pass(0, 1, 1, 2); // 7
      } else {
        pass(0, 0, 1, 1, true);
      }

      return fn(pixels);
    });
  }

  decodePalette() {
    const { palette } = this;
    const { length } = palette;
    const transparency = this.transparency.indexed || [];
    const ret = new Buffer(transparency.length + length);
    let pos = 0;
    let c = 0;

    for (let i = 0; i < length; i += 3) {
      var left;
      ret[pos++] = palette[i];
      ret[pos++] = palette[i + 1];
      ret[pos++] = palette[i + 2];
      ret[pos++] = (left = transparency[c++]) != null ? left : 255;
    }

    return ret;
  }

  copyToImageData(imageData, pixels) {
    let j, k;
    let { colors } = this;
    let palette = null;
    let alpha = this.hasAlphaChannel;

    if (this.palette.length) {
      palette =
        this._decodedPalette || (this._decodedPalette = this.decodePalette());
      colors = 4;
      alpha = true;
    }

    const data = imageData.data || imageData;
    const { length } = data;
    const input = palette || pixels;
    let i = (j = 0);

    if (colors === 1) {
      while (i < length) {
        k = palette ? pixels[i / 4] * 4 : j;
        const v = input[k++];
        data[i++] = v;
        data[i++] = v;
        data[i++] = v;
        data[i++] = alpha ? input[k++] : 255;
        j = k;
      }
    } else {
      while (i < length) {
        k = palette ? pixels[i / 4] * 4 : j;
        data[i++] = input[k++];
        data[i++] = input[k++];
        data[i++] = input[k++];
        data[i++] = alpha ? input[k++] : 255;
        j = k;
      }
    }
  }

  decode(fn) {
    const ret = new Buffer(this.width * this.height * 4);
    return this.decodePixels(pixels => {
      this.copyToImageData(ret, pixels);
      return fn(ret);
    });
  }
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/png-js/png-node.js?`)},"./node_modules/process/browser.js":module=>{eval(`// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/process/browser.js?`)},"./node_modules/readable-stream/errors-browser.js":module=>{"use strict";eval(`

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \\"".concat(name, "\\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/errors-browser.js?`)},"./node_modules/readable-stream/lib/_stream_duplex.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
};
/*</replacement>*/

module.exports = Duplex;
var Readable = __webpack_require__(/*! ./_stream_readable */ "./node_modules/readable-stream/lib/_stream_readable.js");
var Writable = __webpack_require__(/*! ./_stream_writable */ "./node_modules/readable-stream/lib/_stream_writable.js");
__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Duplex, Readable);
{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}
function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;
  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;
    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}
Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

// the no-half-open enforcer
function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  process.nextTick(onEndNT, this);
}
function onEndNT(self) {
  self.end();
}
Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/_stream_duplex.js?`)},"./node_modules/readable-stream/lib/_stream_passthrough.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;
var Transform = __webpack_require__(/*! ./_stream_transform */ "./node_modules/readable-stream/lib/_stream_transform.js");
__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(PassThrough, Transform);
function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}
PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/_stream_passthrough.js?`)},"./node_modules/readable-stream/lib/_stream_readable.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



module.exports = Readable;

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = (__webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter);
var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/

var Buffer = (__webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer);
var OurUint8Array = (typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*<replacement>*/
var debugUtil = __webpack_require__(/*! util */ "?d17e");
var debug;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/

var BufferList = __webpack_require__(/*! ./internal/streams/buffer_list */ "./node_modules/readable-stream/lib/internal/streams/buffer_list.js");
var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/readable-stream/lib/internal/streams/destroy.js");
var _require = __webpack_require__(/*! ./internal/streams/state */ "./node_modules/readable-stream/lib/internal/streams/state.js"),
  getHighWaterMark = _require.getHighWaterMark;
var _require$codes = (__webpack_require__(/*! ../errors */ "./node_modules/readable-stream/errors-browser.js").codes),
  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;

// Lazy loaded to improve the startup performance.
var StringDecoder;
var createReadableStreamAsyncIterator;
var from;
__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Readable, Stream);
var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];
function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}
function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");
  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true;

  // Should close be emitted on destroy. Defaults to true.
  this.emitClose = options.emitClose !== false;

  // Should .destroy() be called after 'end' (and potentially 'finish')
  this.autoDestroy = !!options.autoDestroy;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ "./node_modules/string_decoder/lib/string_decoder.js").StringDecoder);
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}
function Readable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");
  if (!(this instanceof Readable)) return new Readable(options);

  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5
  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex);

  // legacy
  this.readable = true;
  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }
  Stream.call(this);
}
Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;
  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }
  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};
function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }
      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  }

  // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.
  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}
function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}
function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }
  return er;
}
Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ "./node_modules/string_decoder/lib/string_decoder.js").StringDecoder);
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder;
  // If setEncoding(null), decoder.encoding equals utf8
  this._readableState.encoding = this._readableState.decoder.encoding;

  // Iterate over current buffer to convert already stored Buffers:
  var p = this._readableState.buffer.head;
  var content = '';
  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }
  this._readableState.buffer.clear();
  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
};

// Don't raise the hwm > 1GB
var MAX_HWM = 0x40000000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }
  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then \`reading\` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }
  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;
  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }
  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }
  if (ret !== null) this.emit('data', ret);
  return ret;
};
function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;
  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;
    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}
function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);
  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  }

  // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.
  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}
function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};
Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;
  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }
  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);
    if (ret === false) {
      // If the user unpiped during \`dest.write()\`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether \`dest\` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);
  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }
  return dest;
};
function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}
Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {
      hasUnpiped: false
    });
    return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;
  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0;

    // Try start flowing on next tick if stream isn't explicitly paused
    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);
      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }
  return res;
};
Readable.prototype.addListener = Readable.prototype.on;
Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);
  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }
  return res;
};
Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);
  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }
  return res;
};
function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;
  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true;

    // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}
function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()
    state.flowing = !state.readableListening;
    resume(this, state);
  }
  state.paused = false;
  return this;
};
function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}
function resume_(stream, state) {
  debug('resume', state.reading);
  if (!state.reading) {
    stream.read(0);
  }
  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}
Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  this._readableState.paused = true;
  return this;
};
function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null);
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;
  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }
    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;
    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };
  return this;
};
if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = __webpack_require__(/*! ./internal/streams/async_iterator */ "./node_modules/readable-stream/lib/internal/streams/async_iterator.js");
    }
    return createReadableStreamAsyncIterator(this);
  };
}
Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
});

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}
function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);
  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}
function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length);

  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;
      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}
if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = __webpack_require__(/*! ./internal/streams/from */ "./node_modules/readable-stream/lib/internal/streams/from-browser.js");
    }
    return from(Readable, iterable, opts);
  };
}
function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/_stream_readable.js?`)},"./node_modules/readable-stream/lib/_stream_transform.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;
var _require$codes = (__webpack_require__(/*! ../errors */ "./node_modules/readable-stream/errors-browser.js").codes),
  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;
var Duplex = __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");
__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Transform, Duplex);
function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;
  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }
  ts.writechunk = null;
  ts.writecb = null;
  if (data != null)
    // single equals check for both \`null\` and \`undefined\`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}
function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;
  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}
function prefinish() {
  var _this = this;
  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}
Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call \`push(newChunk)\` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call \`cb(err)\` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};
Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;
  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};
Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};
function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null)
    // single equals check for both \`null\` and \`undefined\`
    stream.push(data);

  // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/_stream_transform.js?`)},"./node_modules/readable-stream/lib/_stream_writable.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;
  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(/*! util-deprecate */ "./node_modules/util-deprecate/browser.js")
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/

var Buffer = (__webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer);
var OurUint8Array = (typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/readable-stream/lib/internal/streams/destroy.js");
var _require = __webpack_require__(/*! ./internal/streams/state */ "./node_modules/readable-stream/lib/internal/streams/state.js"),
  getHighWaterMark = _require.getHighWaterMark;
var _require$codes = (__webpack_require__(/*! ../errors */ "./node_modules/readable-stream/errors-browser.js").codes),
  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;
var errorOrDestroy = destroyImpl.errorOrDestroy;
__webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")(Writable, Stream);
function nop() {}
function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");
  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.
  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // Should close be emitted on destroy. Defaults to true.
  this.emitClose = options.emitClose !== false;

  // Should .destroy() be called after 'finish' (and potentially 'end')
  this.autoDestroy = !!options.autoDestroy;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}
WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};
(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}
function Writable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");

  // Writable ctor is applied to Duplexes, too.
  // \`realHasInstance\` is necessary because using plain \`instanceof\`
  // would return false, as no \`_writableState\` property is attached.

  // Trying to use the custom \`instanceof\` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // \`_writableState\` that would lead to infinite recursion.

  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5
  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex);

  // legacy.
  this.writable = true;
  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }
  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};
function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END();
  // TODO: defer error events consistently everywhere, not just the cb
  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that \`null\` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var er;
  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }
  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }
  return true;
}
Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);
  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }
  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }
  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};
Writable.prototype.cork = function () {
  this._writableState.corked++;
};
Writable.prototype.uncork = function () {
  var state = this._writableState;
  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};
Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};
Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}
Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;
  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }
  return ret;
}
function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}
function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;
  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}
function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}
function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;
    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }
    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}
function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;
  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }
    if (entry === null) state.lastBufferedRequest = null;
  }
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}
Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};
Writable.prototype._writev = null;
Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;
  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }
  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending) endWritable(this, state, cb);
  return this;
};
Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});
function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      errorOrDestroy(stream, err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}
function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;
        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }
  return need;
}
function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}
function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }

  // reuse the free corkReq.
  state.corkedRequestsFree.next = corkReq;
}
Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  cb(err);
};

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/_stream_writable.js?`)},"./node_modules/readable-stream/lib/internal/streams/async_iterator.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");


var _Object$setPrototypeO;
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var finished = __webpack_require__(/*! ./end-of-stream */ "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js");
var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');
function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}
function readAndResolve(iter) {
  var resolve = iter[kLastResolve];
  if (resolve !== null) {
    var data = iter[kStream].read();
    // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'
    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}
function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}
function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }
      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}
var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },
  next: function next() {
    var _this = this;
    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];
    if (error !== null) {
      return Promise.reject(error);
    }
    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }
    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    }

    // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time
    var lastPromise = this[kLastPromise];
    var promise;
    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();
      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }
      promise = new Promise(this[kHandlePromise]);
    }
    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;
  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }
      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);
var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;
  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();
      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject];
      // reject if we are waiting for data in the Promise
      // returned by next() and store the error
      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }
      iterator[kError] = err;
      return;
    }
    var resolve = iterator[kLastResolve];
    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }
    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};
module.exports = createReadableStreamAsyncIterator;

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/internal/streams/async_iterator.js?`)},"./node_modules/readable-stream/lib/internal/streams/buffer_list.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var _require = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js"),
  Buffer = _require.Buffer;
var _require2 = __webpack_require__(/*! util */ "?ed1b"),
  inspect = _require2.inspect;
var custom = inspect && inspect.custom || 'inspect';
function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}
module.exports = /*#__PURE__*/function () {
  function BufferList() {
    _classCallCheck(this, BufferList);
    this.head = null;
    this.tail = null;
    this.length = 0;
  }
  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;
      while (p = p.next) ret += s + p.data;
      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;
      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }
      return ret;
    }

    // Consumes a specified amount of bytes or characters from the buffered data.
  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;
      if (n < this.head.data.length) {
        // \`slice\` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }
      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    }

    // Consumes a specified amount of characters from the buffered data.
  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;
      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;
        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }
          break;
        }
        ++c;
      }
      this.length -= c;
      return ret;
    }

    // Consumes a specified amount of bytes from the buffered data.
  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;
      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;
        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }
          break;
        }
        ++c;
      }
      this.length -= c;
      return ret;
    }

    // Make sure the linked list only shows the minimal necessary information.
  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);
  return BufferList;
}();

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/internal/streams/buffer_list.js?`)},"./node_modules/readable-stream/lib/internal/streams/destroy.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");


// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;
  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;
  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }
  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });
  return this;
}
function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}
function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}
function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }
  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}
function emitErrorNT(self, err) {
  self.emit('error', err);
}
function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.

  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}
module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/internal/streams/destroy.js?`)},"./node_modules/readable-stream/lib/internal/streams/end-of-stream.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).



var ERR_STREAM_PREMATURE_CLOSE = (__webpack_require__(/*! ../../../errors */ "./node_modules/readable-stream/errors-browser.js").codes).ERR_STREAM_PREMATURE_CLOSE;
function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    callback.apply(this, args);
  };
}
function noop() {}
function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}
function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;
  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };
  var writableEnded = stream._writableState && stream._writableState.finished;
  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };
  var readableEnded = stream._readableState && stream._readableState.endEmitted;
  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };
  var onerror = function onerror(err) {
    callback.call(stream, err);
  };
  var onclose = function onclose() {
    var err;
    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };
  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };
  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }
  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}
module.exports = eos;

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/internal/streams/end-of-stream.js?`)},"./node_modules/readable-stream/lib/internal/streams/from-browser.js":module=>{eval(`module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/internal/streams/from-browser.js?`)},"./node_modules/readable-stream/lib/internal/streams/pipeline.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).



var eos;
function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}
var _require$codes = (__webpack_require__(/*! ../../../errors */ "./node_modules/readable-stream/errors-browser.js").codes),
  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}
function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}
function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = __webpack_require__(/*! ./end-of-stream */ "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js");
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true;

    // request.destroy just do .end - .abort is what we want
    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}
function call(fn) {
  fn();
}
function pipe(from, to) {
  return from.pipe(to);
}
function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}
function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }
  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];
  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }
  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}
module.exports = pipeline;

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/internal/streams/pipeline.js?`)},"./node_modules/readable-stream/lib/internal/streams/state.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var ERR_INVALID_OPT_VALUE = (__webpack_require__(/*! ../../../errors */ "./node_modules/readable-stream/errors-browser.js").codes).ERR_INVALID_OPT_VALUE;
function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}
function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }
    return Math.floor(hwm);
  }

  // Default value
  return state.objectMode ? 16 : 16 * 1024;
}
module.exports = {
  getHighWaterMark: getHighWaterMark
};

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/internal/streams/state.js?`)},"./node_modules/readable-stream/lib/internal/streams/stream-browser.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`module.exports = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/lib/internal/streams/stream-browser.js?`)},"./node_modules/readable-stream/readable-browser.js":(module,exports,__webpack_require__)=>{eval(`exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ "./node_modules/readable-stream/lib/_stream_readable.js");
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ "./node_modules/readable-stream/lib/_stream_writable.js");
exports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ "./node_modules/readable-stream/lib/_stream_duplex.js");
exports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ "./node_modules/readable-stream/lib/_stream_transform.js");
exports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ "./node_modules/readable-stream/lib/_stream_passthrough.js");
exports.finished = __webpack_require__(/*! ./lib/internal/streams/end-of-stream.js */ "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js");
exports.pipeline = __webpack_require__(/*! ./lib/internal/streams/pipeline.js */ "./node_modules/readable-stream/lib/internal/streams/pipeline.js");


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/readable-stream/readable-browser.js?`)},"./node_modules/regexp.prototype.flags/implementation.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var setFunctionName = __webpack_require__(/*! set-function-name */ "./node_modules/set-function-name/index.js");
var $TypeError = __webpack_require__(/*! es-errors/type */ "./node_modules/es-errors/type.js");

var $Object = Object;

module.exports = setFunctionName(function flags() {
	if (this == null || this !== $Object(this)) {
		throw new $TypeError('RegExp.prototype.flags getter called on non-object');
	}
	var result = '';
	if (this.hasIndices) {
		result += 'd';
	}
	if (this.global) {
		result += 'g';
	}
	if (this.ignoreCase) {
		result += 'i';
	}
	if (this.multiline) {
		result += 'm';
	}
	if (this.dotAll) {
		result += 's';
	}
	if (this.unicode) {
		result += 'u';
	}
	if (this.unicodeSets) {
		result += 'v';
	}
	if (this.sticky) {
		result += 'y';
	}
	return result;
}, 'get flags', true);



//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/regexp.prototype.flags/implementation.js?`)},"./node_modules/regexp.prototype.flags/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");
var callBind = __webpack_require__(/*! call-bind */ "./node_modules/call-bind/index.js");

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/regexp.prototype.flags/implementation.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/regexp.prototype.flags/polyfill.js");
var shim = __webpack_require__(/*! ./shim */ "./node_modules/regexp.prototype.flags/shim.js");

var flagsBound = callBind(getPolyfill());

define(flagsBound, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = flagsBound;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/regexp.prototype.flags/index.js?`)},"./node_modules/regexp.prototype.flags/polyfill.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/regexp.prototype.flags/implementation.js");

var supportsDescriptors = (__webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js").supportsDescriptors);
var $gOPD = Object.getOwnPropertyDescriptor;

module.exports = function getPolyfill() {
	if (supportsDescriptors && (/a/mig).flags === 'gim') {
		var descriptor = $gOPD(RegExp.prototype, 'flags');
		if (
			descriptor
			&& typeof descriptor.get === 'function'
			&& typeof RegExp.prototype.dotAll === 'boolean'
			&& typeof RegExp.prototype.hasIndices === 'boolean'
		) {
			/* eslint getter-return: 0 */
			var calls = '';
			var o = {};
			Object.defineProperty(o, 'hasIndices', {
				get: function () {
					calls += 'd';
				}
			});
			Object.defineProperty(o, 'sticky', {
				get: function () {
					calls += 'y';
				}
			});
			if (calls === 'dy') {
				return descriptor.get;
			}
		}
	}
	return implementation;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/regexp.prototype.flags/polyfill.js?`)},"./node_modules/regexp.prototype.flags/shim.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var supportsDescriptors = (__webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js").supportsDescriptors);
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/regexp.prototype.flags/polyfill.js");
var gOPD = Object.getOwnPropertyDescriptor;
var defineProperty = Object.defineProperty;
var TypeErr = TypeError;
var getProto = Object.getPrototypeOf;
var regex = /a/;

module.exports = function shimFlags() {
	if (!supportsDescriptors || !getProto) {
		throw new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
	}
	var polyfill = getPolyfill();
	var proto = getProto(regex);
	var descriptor = gOPD(proto, 'flags');
	if (!descriptor || descriptor.get !== polyfill) {
		defineProperty(proto, 'flags', {
			configurable: true,
			enumerable: false,
			get: polyfill
		});
	}
	return polyfill;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/regexp.prototype.flags/shim.js?`)},"./node_modules/restructure/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval(`exports.EncodeStream = __webpack_require__(/*! ./src/EncodeStream */ "./node_modules/restructure/src/EncodeStream.js");
exports.DecodeStream = __webpack_require__(/*! ./src/DecodeStream */ "./node_modules/restructure/src/DecodeStream.js");
exports.Array = __webpack_require__(/*! ./src/Array */ "./node_modules/restructure/src/Array.js");
exports.LazyArray = __webpack_require__(/*! ./src/LazyArray */ "./node_modules/restructure/src/LazyArray.js");
exports.Bitfield = __webpack_require__(/*! ./src/Bitfield */ "./node_modules/restructure/src/Bitfield.js");
exports.Boolean = __webpack_require__(/*! ./src/Boolean */ "./node_modules/restructure/src/Boolean.js");
exports.Buffer = __webpack_require__(/*! ./src/Buffer */ "./node_modules/restructure/src/Buffer.js");
exports.Enum = __webpack_require__(/*! ./src/Enum */ "./node_modules/restructure/src/Enum.js");
exports.Optional = __webpack_require__(/*! ./src/Optional */ "./node_modules/restructure/src/Optional.js");
exports.Reserved = __webpack_require__(/*! ./src/Reserved */ "./node_modules/restructure/src/Reserved.js");
exports.String = __webpack_require__(/*! ./src/String */ "./node_modules/restructure/src/String.js");
exports.Struct = __webpack_require__(/*! ./src/Struct */ "./node_modules/restructure/src/Struct.js");
exports.VersionedStruct = __webpack_require__(/*! ./src/VersionedStruct */ "./node_modules/restructure/src/VersionedStruct.js");

const utils             = __webpack_require__(/*! ./src/utils */ "./node_modules/restructure/src/utils.js");
const NumberT           = __webpack_require__(/*! ./src/Number */ "./node_modules/restructure/src/Number.js");
const Pointer           = __webpack_require__(/*! ./src/Pointer */ "./node_modules/restructure/src/Pointer.js");

Object.assign(exports, utils, NumberT, Pointer);


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/index.js?`)},"./node_modules/restructure/src/Array.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`const {Number:NumberT} = __webpack_require__(/*! ./Number */ "./node_modules/restructure/src/Number.js");
const utils = __webpack_require__(/*! ./utils */ "./node_modules/restructure/src/utils.js");

class ArrayT {
  constructor(type, length, lengthType = 'count') {
    this.type = type;
    this.length = length;
    this.lengthType = lengthType;
  }

  decode(stream, parent) {
    let length;
    const { pos } = stream;

    const res = [];
    let ctx = parent;

    if (this.length != null) {
      length = utils.resolveLength(this.length, stream, parent);
    }

    if (this.length instanceof NumberT) {
      // define hidden properties
      Object.defineProperties(res, {
        parent:         { value: parent },
        _startOffset:   { value: pos },
        _currentOffset: { value: 0, writable: true },
        _length:        { value: length }
      });

      ctx = res;
    }

    if ((length == null) || (this.lengthType === 'bytes')) {
      const target = (length != null) ?
        stream.pos + length
      : (parent != null ? parent._length : undefined) ?
        parent._startOffset + parent._length
      :
        stream.length;

      while (stream.pos < target) {
        res.push(this.type.decode(stream, ctx));
      }

    } else {
      for (let i = 0, end = length; i < end; i++) {
        res.push(this.type.decode(stream, ctx));
      }
    }

    return res;
  }

  size(array, ctx) {
    if (!array) {
      return this.type.size(null, ctx) * utils.resolveLength(this.length, null, ctx);
    }

    let size = 0;
    if (this.length instanceof NumberT) {
      size += this.length.size();
      ctx = {parent: ctx};
    }

    for (let item of array) {
      size += this.type.size(item, ctx);
    }

    return size;
  }

  encode(stream, array, parent) {
    let ctx = parent;
    if (this.length instanceof NumberT) {
      ctx = {
        pointers: [],
        startOffset: stream.pos,
        parent
      };

      ctx.pointerOffset = stream.pos + this.size(array, ctx);
      this.length.encode(stream, array.length);
    }

    for (let item of array) {
      this.type.encode(stream, item, ctx);
    }

    if (this.length instanceof NumberT) {
      let i = 0;
      while (i < ctx.pointers.length) {
        const ptr = ctx.pointers[i++];
        ptr.type.encode(stream, ptr.val);
      }
    }

  }
}

module.exports = ArrayT;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/Array.js?`)},"./node_modules/restructure/src/Bitfield.js":module=>{eval(`class Bitfield {
  constructor(type, flags = []) {
    this.type = type;
    this.flags = flags;
  }
  decode(stream) {
    const val = this.type.decode(stream);

    const res = {};
    for (let i = 0; i < this.flags.length; i++) {
      const flag = this.flags[i];
      if (flag != null) {
        res[flag] = !!(val & (1 << i));
      }
    }

    return res;
  }

  size() {
    return this.type.size();
  }

  encode(stream, keys) {
    let val = 0;
    for (let i = 0; i < this.flags.length; i++) {
      const flag = this.flags[i];
      if (flag != null) {
        if (keys[flag]) { val |= (1 << i); }
      }
    }

    return this.type.encode(stream, val);
  }
}

module.exports = Bitfield;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/Bitfield.js?`)},"./node_modules/restructure/src/Boolean.js":module=>{eval(`class BooleanT {
  constructor(type) {
    this.type = type;
  }

  decode(stream, parent) {
    return !!this.type.decode(stream, parent);
  }

  size(val, parent) {
    return this.type.size(val, parent);
  }

  encode(stream, val, parent) {
    return this.type.encode(stream, +val, parent);
  }
}

module.exports = BooleanT;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/Boolean.js?`)},"./node_modules/restructure/src/Buffer.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`const utils = __webpack_require__(/*! ./utils */ "./node_modules/restructure/src/utils.js");
const {Number:NumberT} = __webpack_require__(/*! ./Number */ "./node_modules/restructure/src/Number.js");

class BufferT {
  constructor(length) {
    this.length = length;
  }
  decode(stream, parent) {
    const length = utils.resolveLength(this.length, stream, parent);
    return stream.readBuffer(length);
  }

  size(val, parent) {
    if (!val) {
      return utils.resolveLength(this.length, null, parent);
    }

    return val.length;
  }

  encode(stream, buf, parent) {
    if (this.length instanceof NumberT) {
      this.length.encode(stream, buf.length);
    }

    return stream.writeBuffer(buf);
  }
}

module.exports = BufferT;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/Buffer.js?`)},"./node_modules/restructure/src/DecodeStream.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
let iconv;
try { iconv = __webpack_require__(/*! iconv-lite */ "?fddb"); } catch (error) {}

class DecodeStream {
  constructor(buffer) {
    this.buffer = buffer;
    this.pos = 0;
    this.length = this.buffer.length;
  }

  readString(length, encoding = 'ascii') {
    switch (encoding) {
      case 'utf16le': case 'ucs2': case 'utf8': case 'ascii':
        return this.buffer.toString(encoding, this.pos, (this.pos += length));

      case 'utf16be':
        var buf = Buffer.from(this.readBuffer(length));

        // swap the bytes
        for (let i = 0, end = buf.length - 1; i < end; i += 2) {
          const byte = buf[i];
          buf[i] = buf[i + 1];
          buf[i + 1] = byte;
        }

        return buf.toString('utf16le');

      default:
        buf = this.readBuffer(length);
        if (iconv) {
          try {
            return iconv.decode(buf, encoding);
          } catch (error1) {}
        }

        return buf;
    }
  }

  readBuffer(length) {
    return this.buffer.slice(this.pos, (this.pos += length));
  }

  readUInt24BE() {
    return (this.readUInt16BE() << 8) + this.readUInt8();
  }

  readUInt24LE() {
    return this.readUInt16LE() + (this.readUInt8() << 16);
  }

  readInt24BE() {
    return (this.readInt16BE() << 8) + this.readUInt8();
  }

  readInt24LE() {
    return this.readUInt16LE() + (this.readInt8() << 16);
  }
}

DecodeStream.TYPES = {
  UInt8: 1,
  UInt16: 2,
  UInt24: 3,
  UInt32: 4,
  Int8: 1,
  Int16: 2,
  Int24: 3,
  Int32: 4,
  Float: 4,
  Double: 8
};

for (let key in Buffer.prototype) {
  if (key.slice(0, 4) === 'read') {
    const bytes = DecodeStream.TYPES[key.replace(/read|[BL]E/g, '')];
    DecodeStream.prototype[key] = function() {
      const ret = this.buffer[key](this.pos);
      this.pos += bytes;
      return ret;
    };
  }
}

module.exports = DecodeStream;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/DecodeStream.js?`)},"./node_modules/restructure/src/EncodeStream.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
let iconv;
const stream = __webpack_require__(/*! stream */ "./node_modules/readable-stream/readable-browser.js");
const DecodeStream = __webpack_require__(/*! ./DecodeStream */ "./node_modules/restructure/src/DecodeStream.js");
try { iconv = __webpack_require__(/*! iconv-lite */ "?fddb"); } catch (error) {}

class EncodeStream extends stream.Readable {
  constructor(bufferSize =  65536) {
    super(...arguments);
    this.buffer = Buffer.alloc(bufferSize);
    this.bufferOffset = 0;
    this.pos = 0;
  }

  // do nothing, required by node
  _read() {}

  ensure(bytes) {
    if ((this.bufferOffset + bytes) > this.buffer.length) {
      return this.flush();
    }
  }

  flush() {
    if (this.bufferOffset > 0) {
      this.push(Buffer.from(this.buffer.slice(0, this.bufferOffset)));
      return this.bufferOffset = 0;
    }
  }

  writeBuffer(buffer) {
    this.flush();
    this.push(buffer);
    return this.pos += buffer.length;
  }

  writeString(string, encoding = 'ascii') {
    switch (encoding) {
      case 'utf16le': case 'ucs2': case 'utf8': case 'ascii':
        return this.writeBuffer(Buffer.from(string, encoding));

      case 'utf16be':
        var buf = Buffer.from(string, 'utf16le');

        // swap the bytes
        for (let i = 0, end = buf.length - 1; i < end; i += 2) {
          const byte = buf[i];
          buf[i] = buf[i + 1];
          buf[i + 1] = byte;
        }

        return this.writeBuffer(buf);

      default:
        if (iconv) {
          return this.writeBuffer(iconv.encode(string, encoding));
        } else {
          throw new Error('Install iconv-lite to enable additional string encodings.');
        }
    }
  }

  writeUInt24BE(val) {
    this.ensure(3);
    this.buffer[this.bufferOffset++] = (val >>> 16) & 0xff;
    this.buffer[this.bufferOffset++] = (val >>> 8)  & 0xff;
    this.buffer[this.bufferOffset++] = val & 0xff;
    return this.pos += 3;
  }

  writeUInt24LE(val) {
    this.ensure(3);
    this.buffer[this.bufferOffset++] = val & 0xff;
    this.buffer[this.bufferOffset++] = (val >>> 8) & 0xff;
    this.buffer[this.bufferOffset++] = (val >>> 16) & 0xff;
    return this.pos += 3;
  }

  writeInt24BE(val) {
    if (val >= 0) {
      return this.writeUInt24BE(val);
    } else {
      return this.writeUInt24BE(val + 0xffffff + 1);
    }
  }

  writeInt24LE(val) {
    if (val >= 0) {
      return this.writeUInt24LE(val);
    } else {
      return this.writeUInt24LE(val + 0xffffff + 1);
    }
  }

  fill(val, length) {
    if (length < this.buffer.length) {
      this.ensure(length);
      this.buffer.fill(val, this.bufferOffset, this.bufferOffset + length);
      this.bufferOffset += length;
      return this.pos += length;
    } else {
      const buf = Buffer.alloc(length);
      buf.fill(val);
      return this.writeBuffer(buf);
    }
  }

  end() {
    this.flush();
    return this.push(null);
  }
}

for (let key in Buffer.prototype) {
  if (key.slice(0, 5) === 'write') {
    const bytes = +DecodeStream.TYPES[key.replace(/write|[BL]E/g, '')];
    EncodeStream.prototype[key] = function(value) {
      this.ensure(bytes);
      this.buffer[key](value, this.bufferOffset);
      this.bufferOffset += bytes;
      return this.pos += bytes;
    };
  }
}

module.exports = EncodeStream;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/EncodeStream.js?`)},"./node_modules/restructure/src/Enum.js":module=>{eval(`class Enum {
  constructor(type, options = []) {
    this.type = type;
    this.options = options;
  }
  decode(stream) {
    const index = this.type.decode(stream);
    return this.options[index] || index;
  }

  size() {
    return this.type.size();
  }

  encode(stream, val) {
    const index = this.options.indexOf(val);
    if (index === -1) {
      throw new Error(\`Unknown option in enum: \${val}\`);
    }

    return this.type.encode(stream, index);
  }
}

module.exports = Enum;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/Enum.js?`)},"./node_modules/restructure/src/LazyArray.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`const ArrayT = __webpack_require__(/*! ./Array */ "./node_modules/restructure/src/Array.js");
const {Number:NumberT} = __webpack_require__(/*! ./Number */ "./node_modules/restructure/src/Number.js");
const utils = __webpack_require__(/*! ./utils */ "./node_modules/restructure/src/utils.js");
const {inspect} = __webpack_require__(/*! util */ "./node_modules/util/util.js");

class LazyArrayT extends ArrayT {
  decode(stream, parent) {
    const { pos } = stream;
    const length = utils.resolveLength(this.length, stream, parent);

    if (this.length instanceof NumberT) {
      parent = {
        parent,
        _startOffset: pos,
        _currentOffset: 0,
        _length: length
      };
    }

    const res = new LazyArray(this.type, length, stream, parent);

    stream.pos += length * this.type.size(null, parent);
    return res;
  }

  size(val, ctx) {
    if (val instanceof LazyArray) {
      val = val.toArray();
    }

    return super.size(val, ctx);
  }

  encode(stream, val, ctx) {
    if (val instanceof LazyArray) {
      val = val.toArray();
    }

    return super.encode(stream, val, ctx);
  }
}

class LazyArray {
  constructor(type, length, stream, ctx) {
    this.type = type;
    this.length = length;
    this.stream = stream;
    this.ctx = ctx;
    this.base = this.stream.pos;
    this.items = [];
  }

  get(index) {
    if ((index < 0) || (index >= this.length)) {
      return undefined;
    }

    if (this.items[index] == null) {
      const { pos } = this.stream;
      this.stream.pos = this.base + (this.type.size(null, this.ctx) * index);
      this.items[index] = this.type.decode(this.stream, this.ctx);
      this.stream.pos = pos;
    }

    return this.items[index];
  }

  toArray() {
    const result = [];
    for (let i = 0, end = this.length; i < end; i++) {
      result.push(this.get(i));
    }
    return result;
  }

  inspect() {
    return inspect(this.toArray());
  }
}

module.exports = LazyArrayT;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/LazyArray.js?`)},"./node_modules/restructure/src/Number.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval(`const DecodeStream = __webpack_require__(/*! ./DecodeStream */ "./node_modules/restructure/src/DecodeStream.js");

class NumberT {
  constructor(type, endian = 'BE') {
    this.type = type;
    this.endian = endian;
    this.fn = this.type;
    if (this.type[this.type.length - 1] !== '8') {
      this.fn += this.endian;
    }
  }

  size() {
    return DecodeStream.TYPES[this.type];
  }

  decode(stream) {
    return stream[\`read\${this.fn}\`]();
  }

  encode(stream, val) {
    return stream[\`write\${this.fn}\`](val);
  }
}

exports.Number = NumberT;
exports.uint8 = new NumberT('UInt8');
exports.uint16be = (exports.uint16 = new NumberT('UInt16', 'BE'));
exports.uint16le = new NumberT('UInt16', 'LE');
exports.uint24be = (exports.uint24 = new NumberT('UInt24', 'BE'));
exports.uint24le = new NumberT('UInt24', 'LE');
exports.uint32be = (exports.uint32 = new NumberT('UInt32', 'BE'));
exports.uint32le = new NumberT('UInt32', 'LE');
exports.int8 = new NumberT('Int8');
exports.int16be = (exports.int16 = new NumberT('Int16', 'BE'));
exports.int16le = new NumberT('Int16', 'LE');
exports.int24be = (exports.int24 = new NumberT('Int24', 'BE'));
exports.int24le = new NumberT('Int24', 'LE');
exports.int32be = (exports.int32 = new NumberT('Int32', 'BE'));
exports.int32le = new NumberT('Int32', 'LE');
exports.floatbe = (exports.float = new NumberT('Float', 'BE'));
exports.floatle = new NumberT('Float', 'LE');
exports.doublebe = (exports.double = new NumberT('Double', 'BE'));
exports.doublele = new NumberT('Double', 'LE');

class Fixed extends NumberT {
  constructor(size, endian, fracBits = size >> 1) {
    super(\`Int\${size}\`, endian);
    this._point = 1 << fracBits;
  }

  decode(stream) {
    return super.decode(stream) / this._point;
  }

  encode(stream, val) {
    return super.encode(stream, (val * this._point) | 0);
  }
}

exports.Fixed = Fixed;
exports.fixed16be = (exports.fixed16 = new Fixed(16, 'BE'));
exports.fixed16le = new Fixed(16, 'LE');
exports.fixed32be = (exports.fixed32 =new Fixed(32, 'BE'));
exports.fixed32le = new Fixed(32, 'LE');


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/Number.js?`)},"./node_modules/restructure/src/Optional.js":module=>{eval(`class Optional {
  constructor(type, condition = true) {
    this.type = type;
    this.condition = condition;
  }

  decode(stream, parent) {
    let { condition } = this;
    if (typeof condition === 'function') {
      condition = condition.call(parent, parent);
    }

    if (condition) {
      return this.type.decode(stream, parent);
    }
  }

  size(val, parent) {
    let { condition } = this;
    if (typeof condition === 'function') {
      condition = condition.call(parent, parent);
    }

    if (condition) {
      return this.type.size(val, parent);
    } else {
      return 0;
    }
  }

  encode(stream, val, parent) {
    let { condition } = this;
    if (typeof condition === 'function') {
      condition = condition.call(parent, parent);
    }

    if (condition) {
      return this.type.encode(stream, val, parent);
    }
  }
}

module.exports = Optional;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/Optional.js?`)},"./node_modules/restructure/src/Pointer.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval(`const utils = __webpack_require__(/*! ./utils */ "./node_modules/restructure/src/utils.js");

class Pointer {
  constructor(offsetType, type, options = {}) {
    this.offsetType = offsetType;
    this.type = type;
    this.options = options;
    if (this.type === 'void') { this.type = null; }
    if (this.options.type == null) { this.options.type = 'local'; }
    if (this.options.allowNull == null) { this.options.allowNull = true; }
    if (this.options.nullValue == null) { this.options.nullValue = 0; }
    if (this.options.lazy == null) { this.options.lazy = false; }
    if (this.options.relativeTo) {
      if (typeof this.options.relativeTo !== 'function') {
        throw new Error('relativeTo option must be a function');
      }
      this.relativeToGetter = options.relativeTo;
    }
  }

  decode(stream, ctx) {
    const offset = this.offsetType.decode(stream, ctx);

    // handle NULL pointers
    if ((offset === this.options.nullValue) && this.options.allowNull) {
      return null;
    }

    let relative;
    switch (this.options.type) {
      case 'local':     relative = ctx._startOffset; break;
      case 'immediate': relative = stream.pos - this.offsetType.size(); break;
      case 'parent':    relative = ctx.parent._startOffset; break;
      default:
        var c = ctx;
        while (c.parent) {
          c = c.parent;
        }

        relative = c._startOffset || 0;
    }

    if (this.options.relativeTo) {
      relative += this.relativeToGetter(ctx);
    }

    const ptr = offset + relative;

    if (this.type != null) {
      let val = null;
      const decodeValue = () => {
        if (val != null) { return val; }

        const { pos } = stream;
        stream.pos = ptr;
        val = this.type.decode(stream, ctx);
        stream.pos = pos;
        return val;
      };

      // If this is a lazy pointer, define a getter to decode only when needed.
      // This obviously only works when the pointer is contained by a Struct.
      if (this.options.lazy) {
        return new utils.PropertyDescriptor({
          get: decodeValue});
      }

      return decodeValue();
    } else {
      return ptr;
    }
  }

  size(val, ctx) {
    const parent = ctx;
    switch (this.options.type) {
      case 'local': case 'immediate':
        break;
      case 'parent':
        ctx = ctx.parent;
        break;
      default: // global
        while (ctx.parent) {
          ctx = ctx.parent;
        }
    }

    let { type } = this;
    if (type == null) {
      if (!(val instanceof VoidPointer)) {
        throw new Error("Must be a VoidPointer");
      }

      ({ type } = val);
      val = val.value;
    }

    if (val && ctx) {
      ctx.pointerSize += type.size(val, parent);
    }

    return this.offsetType.size();
  }

  encode(stream, val, ctx) {
    let relative;
    const parent = ctx;
    if ((val == null)) {
      this.offsetType.encode(stream, this.options.nullValue);
      return;
    }

    switch (this.options.type) {
      case 'local':
        relative = ctx.startOffset;
        break;
      case 'immediate':
        relative = stream.pos + this.offsetType.size(val, parent);
        break;
      case 'parent':
        ctx = ctx.parent;
        relative = ctx.startOffset;
        break;
      default: // global
        relative = 0;
        while (ctx.parent) {
          ctx = ctx.parent;
        }
    }

    if (this.options.relativeTo) {
      relative += this.relativeToGetter(parent.val);
    }

    this.offsetType.encode(stream, ctx.pointerOffset - relative);

    let { type } = this;
    if (type == null) {
      if (!(val instanceof VoidPointer)) {
        throw new Error("Must be a VoidPointer");
      }

      ({ type } = val);
      val = val.value;
    }

    ctx.pointers.push({
      type,
      val,
      parent
    });

    return ctx.pointerOffset += type.size(val, parent);
  }
}

// A pointer whose type is determined at decode time
class VoidPointer {
  constructor(type, value) {
    this.type = type;
    this.value = value;
  }
}

exports.Pointer = Pointer;
exports.VoidPointer = VoidPointer;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/Pointer.js?`)},"./node_modules/restructure/src/Reserved.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`const utils = __webpack_require__(/*! ./utils */ "./node_modules/restructure/src/utils.js");

class Reserved {
  constructor(type, count = 1) {
    this.type = type;
    this.count = count;
  }
  decode(stream, parent) {
    stream.pos += this.size(null, parent);
    return undefined;
  }

  size(data, parent) {
    const count = utils.resolveLength(this.count, null, parent);
    return this.type.size() * count;
  }

  encode(stream, val, parent) {
    return stream.fill(0, this.size(val, parent));
  }
}

module.exports = Reserved;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/Reserved.js?`)},"./node_modules/restructure/src/String.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
const {Number:NumberT} = __webpack_require__(/*! ./Number */ "./node_modules/restructure/src/Number.js");
const utils = __webpack_require__(/*! ./utils */ "./node_modules/restructure/src/utils.js");

class StringT {
  constructor(length, encoding = 'ascii') {
    this.length = length;
    this.encoding = encoding;
  }

  decode(stream, parent) {
    let length, pos;

    if (this.length != null) {
      length = utils.resolveLength(this.length, stream, parent);
    } else {
      let buffer;
      ({buffer, length, pos} = stream);

      while ((pos < length) && (buffer[pos] !== 0x00)) {
        ++pos;
      }

      length = pos - stream.pos;
    }

    let { encoding } = this;
    if (typeof encoding === 'function') {
      encoding = encoding.call(parent, parent) || 'ascii';
    }

    const string = stream.readString(length, encoding);

    if ((this.length == null) && (stream.pos < stream.length)) {
      stream.pos++;
    }

    return string;
  }

  size(val, parent) {
    // Use the defined value if no value was given
    if (!val) {
      return utils.resolveLength(this.length, null, parent);
    }

    let { encoding } = this;
    if (typeof encoding === 'function') {
      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';
    }

    if (encoding === 'utf16be') {
      encoding = 'utf16le';
    }

    let size = Buffer.byteLength(val, encoding);
    if (this.length instanceof NumberT) {
      size += this.length.size();
    }

    if ((this.length == null)) {
      size++;
    }

    return size;
  }

  encode(stream, val, parent) {
    let { encoding } = this;
    if (typeof encoding === 'function') {
      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';
    }

    if (this.length instanceof NumberT) {
      this.length.encode(stream, Buffer.byteLength(val, encoding));
    }

    stream.writeString(val, encoding);

    if ((this.length == null)) {
      return stream.writeUInt8(0x00);
    }
  }
}

module.exports = StringT;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/String.js?`)},"./node_modules/restructure/src/Struct.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`const utils = __webpack_require__(/*! ./utils */ "./node_modules/restructure/src/utils.js");

class Struct {
  constructor(fields = {}) {
    this.fields = fields;
  }

  decode(stream, parent, length = 0) {
    const res = this._setup(stream, parent, length);
    this._parseFields(stream, res, this.fields);

    if (this.process != null) {
      this.process.call(res, stream);
    }
    return res;
  }

  _setup(stream, parent, length) {
    const res = {};

    // define hidden properties
    Object.defineProperties(res, {
      parent:         { value: parent },
      _startOffset:   { value: stream.pos },
      _currentOffset: { value: 0, writable: true },
      _length:        { value: length }
    });

    return res;
  }

  _parseFields(stream, res, fields) {
    for (let key in fields) {
      var val;
      const type = fields[key];
      if (typeof type === 'function') {
        val = type.call(res, res);
      } else {
        val = type.decode(stream, res);
      }

      if (val !== undefined) {
        if (val instanceof utils.PropertyDescriptor) {
          Object.defineProperty(res, key, val);
        } else {
          res[key] = val;
        }
      }

      res._currentOffset = stream.pos - res._startOffset;
    }

  }

  size(val, parent, includePointers) {
    if (val == null) { val = {}; }
    if (includePointers == null) { includePointers = true; }
    const ctx = {
      parent,
      val,
      pointerSize: 0
    };

    let size = 0;
    for (let key in this.fields) {
      const type = this.fields[key];
      if (type.size != null) {
        size += type.size(val[key], ctx);
      }
    }

    if (includePointers) {
      size += ctx.pointerSize;
    }

    return size;
  }

  encode(stream, val, parent) {
    let type;
    if (this.preEncode != null) {
      this.preEncode.call(val, stream);
    }

    const ctx = {
      pointers: [],
      startOffset: stream.pos,
      parent,
      val,
      pointerSize: 0
    };

    ctx.pointerOffset = stream.pos + this.size(val, ctx, false);

    for (let key in this.fields) {
      type = this.fields[key];
      if (type.encode != null) {
        type.encode(stream, val[key], ctx);
      }
    }

    let i = 0;
    while (i < ctx.pointers.length) {
      const ptr = ctx.pointers[i++];
      ptr.type.encode(stream, ptr.val, ptr.parent);
    }

  }
}

module.exports = Struct;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/Struct.js?`)},"./node_modules/restructure/src/VersionedStruct.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`const Struct = __webpack_require__(/*! ./Struct */ "./node_modules/restructure/src/Struct.js");

const getPath = (object, pathArray) => {
  return pathArray.reduce((prevObj, key) => prevObj && prevObj[key], object);
};

class VersionedStruct extends Struct {
  constructor(type, versions = {}) {
    super();
    this.type = type;
    this.versions = versions;
    if (typeof type === 'string') {
      this.versionPath = type.split('.');
    }
  }

  decode(stream, parent, length = 0) {
    const res = this._setup(stream, parent, length);

    if (typeof this.type === 'string') {
      res.version = getPath(parent, this.versionPath);
    } else {
      res.version = this.type.decode(stream);
    }

    if (this.versions.header) {
      this._parseFields(stream, res, this.versions.header);
    }

    const fields = this.versions[res.version];
    if ((fields == null)) {
      throw new Error(\`Unknown version \${res.version}\`);
    }

    if (fields instanceof VersionedStruct) {
      return fields.decode(stream, parent);
    }

    this._parseFields(stream, res, fields);

    if (this.process != null) {
      this.process.call(res, stream);
    }
    return res;
  }

  size(val, parent, includePointers = true) {
    let key, type;
    if (!val) {
      throw new Error('Not a fixed size');
    }

    const ctx = {
      parent,
      val,
      pointerSize: 0
    };

    let size = 0;
    if (typeof this.type !== 'string') {
      size += this.type.size(val.version, ctx);
    }

    if (this.versions.header) {
      for (key in this.versions.header) {
        type = this.versions.header[key];
        if (type.size != null) {
          size += type.size(val[key], ctx);
        }
      }
    }

    const fields = this.versions[val.version];
    if ((fields == null)) {
      throw new Error(\`Unknown version \${val.version}\`);
    }

    for (key in fields) {
      type = fields[key];
      if (type.size != null) {
        size += type.size(val[key], ctx);
      }
    }

    if (includePointers) {
      size += ctx.pointerSize;
    }

    return size;
  }

  encode(stream, val, parent) {
    let key, type;
    if (this.preEncode != null) {
      this.preEncode.call(val, stream);
    }

    const ctx = {
      pointers: [],
      startOffset: stream.pos,
      parent,
      val,
      pointerSize: 0
    };

    ctx.pointerOffset = stream.pos + this.size(val, ctx, false);

    if (typeof this.type !== 'string') {
      this.type.encode(stream, val.version);
    }

    if (this.versions.header) {
      for (key in this.versions.header) {
        type = this.versions.header[key];
        if (type.encode != null) {
          type.encode(stream, val[key], ctx);
        }
      }
    }

    const fields = this.versions[val.version];
    for (key in fields) {
      type = fields[key];
      if (type.encode != null) {
        type.encode(stream, val[key], ctx);
      }
    }

    let i = 0;
    while (i < ctx.pointers.length) {
      const ptr = ctx.pointers[i++];
      ptr.type.encode(stream, ptr.val, ptr.parent);
    }

  }
}

module.exports = VersionedStruct;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/VersionedStruct.js?`)},"./node_modules/restructure/src/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval(`const {Number:NumberT} = __webpack_require__(/*! ./Number */ "./node_modules/restructure/src/Number.js");

exports.resolveLength = function(length, stream, parent) {
  let res;
  if (typeof length === 'number') {
    res = length;

  } else if (typeof length === 'function') {
    res = length.call(parent, parent);

  } else if (parent && (typeof length === 'string')) {
    res = parent[length];

  } else if (stream && length instanceof NumberT) {
    res = length.decode(stream);
  }

  if (isNaN(res)) {
    throw new Error('Not a fixed size');
  }

  return res;
};

class PropertyDescriptor {
  constructor(opts = {}) {
    this.enumerable = true;
    this.configurable = true;

    for (let key in opts) {
      const val = opts[key];
      this[key] = val;
    }
  }
}

exports.PropertyDescriptor = PropertyDescriptor;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/restructure/src/utils.js?`)},"./node_modules/set-function-length/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");
var define = __webpack_require__(/*! define-data-property */ "./node_modules/define-data-property/index.js");
var hasDescriptors = __webpack_require__(/*! has-property-descriptors */ "./node_modules/has-property-descriptors/index.js")();
var gOPD = __webpack_require__(/*! gopd */ "./node_modules/gopd/index.js");

var $TypeError = __webpack_require__(/*! es-errors/type */ "./node_modules/es-errors/type.js");
var $floor = GetIntrinsic('%Math.floor%');

/** @typedef {(...args: unknown[]) => unknown} Func */

/** @type {<T extends Func = Func>(fn: T, length: number, loose?: boolean) => T} */
module.exports = function setFunctionLength(fn, length) {
	if (typeof fn !== 'function') {
		throw new $TypeError('\`fn\` is not a function');
	}
	if (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {
		throw new $TypeError('\`length\` must be a positive 32-bit integer');
	}

	var loose = arguments.length > 2 && !!arguments[2];

	var functionLengthIsConfigurable = true;
	var functionLengthIsWritable = true;
	if ('length' in fn && gOPD) {
		var desc = gOPD(fn, 'length');
		if (desc && !desc.configurable) {
			functionLengthIsConfigurable = false;
		}
		if (desc && !desc.writable) {
			functionLengthIsWritable = false;
		}
	}

	if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
		if (hasDescriptors) {
			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);
		} else {
			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length);
		}
	}
	return fn;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/set-function-length/index.js?`)},"./node_modules/set-function-name/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var define = __webpack_require__(/*! define-data-property */ "./node_modules/define-data-property/index.js");
var hasDescriptors = __webpack_require__(/*! has-property-descriptors */ "./node_modules/has-property-descriptors/index.js")();
var functionsHaveConfigurableNames = (__webpack_require__(/*! functions-have-names */ "./node_modules/functions-have-names/index.js").functionsHaveConfigurableNames)();

var $TypeError = TypeError;

module.exports = function setFunctionName(fn, name) {
	if (typeof fn !== 'function') {
		throw new $TypeError('\`fn\` is not a function');
	}
	var loose = arguments.length > 2 && !!arguments[2];
	if (!loose || functionsHaveConfigurableNames) {
		if (hasDescriptors) {
			define(fn, 'name', name, true, true);
		} else {
			define(fn, 'name', name);
		}
	}
	return fn;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/set-function-name/index.js?`)},"./node_modules/side-channel/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");
var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");
var inspect = __webpack_require__(/*! object-inspect */ "./node_modules/object-inspect/index.js");

var $TypeError = __webpack_require__(/*! es-errors/type */ "./node_modules/es-errors/type.js");
var $WeakMap = GetIntrinsic('%WeakMap%', true);
var $Map = GetIntrinsic('%Map%', true);

var $weakMapGet = callBound('WeakMap.prototype.get', true);
var $weakMapSet = callBound('WeakMap.prototype.set', true);
var $weakMapHas = callBound('WeakMap.prototype.has', true);
var $mapGet = callBound('Map.prototype.get', true);
var $mapSet = callBound('Map.prototype.set', true);
var $mapHas = callBound('Map.prototype.has', true);

/*
* This function traverses the list returning the node corresponding to the given key.
*
* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.
*/
var listGetNode = function (list, key) { // eslint-disable-line consistent-return
	for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
		if (curr.key === key) {
			prev.next = curr.next;
			curr.next = list.next;
			list.next = curr; // eslint-disable-line no-param-reassign
			return curr;
		}
	}
};

var listGet = function (objects, key) {
	var node = listGetNode(objects, key);
	return node && node.value;
};
var listSet = function (objects, key, value) {
	var node = listGetNode(objects, key);
	if (node) {
		node.value = value;
	} else {
		// Prepend the new node to the beginning of the list
		objects.next = { // eslint-disable-line no-param-reassign
			key: key,
			next: objects.next,
			value: value
		};
	}
};
var listHas = function (objects, key) {
	return !!listGetNode(objects, key);
};

module.exports = function getSideChannel() {
	var $wm;
	var $m;
	var $o;
	var channel = {
		assert: function (key) {
			if (!channel.has(key)) {
				throw new $TypeError('Side channel does not contain ' + inspect(key));
			}
		},
		get: function (key) { // eslint-disable-line consistent-return
			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
				if ($wm) {
					return $weakMapGet($wm, key);
				}
			} else if ($Map) {
				if ($m) {
					return $mapGet($m, key);
				}
			} else {
				if ($o) { // eslint-disable-line no-lonely-if
					return listGet($o, key);
				}
			}
		},
		has: function (key) {
			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
				if ($wm) {
					return $weakMapHas($wm, key);
				}
			} else if ($Map) {
				if ($m) {
					return $mapHas($m, key);
				}
			} else {
				if ($o) { // eslint-disable-line no-lonely-if
					return listHas($o, key);
				}
			}
			return false;
		},
		set: function (key, value) {
			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
				if (!$wm) {
					$wm = new $WeakMap();
				}
				$weakMapSet($wm, key, value);
			} else if ($Map) {
				if (!$m) {
					$m = new $Map();
				}
				$mapSet($m, key, value);
			} else {
				if (!$o) {
					// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head
					$o = { key: {}, next: null };
				}
				listSet($o, key, value);
			}
		}
	};
	return channel;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/side-channel/index.js?`)},"./node_modules/stop-iteration-iterator/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var SLOT = __webpack_require__(/*! internal-slot */ "./node_modules/internal-slot/index.js");

var $SyntaxError = SyntaxError;
var $StopIteration = typeof StopIteration === 'object' ? StopIteration : null;

module.exports = function getStopIterationIterator(origIterator) {
	if (!$StopIteration) {
		throw new $SyntaxError('this environment lacks StopIteration');
	}

	SLOT.set(origIterator, '[[Done]]', false);

	var siIterator = {
		next: function next() {
			var iterator = SLOT.get(this, '[[Iterator]]');
			var done = SLOT.get(iterator, '[[Done]]');
			try {
				return {
					done: done,
					value: done ? void undefined : iterator.next()
				};
			} catch (e) {
				SLOT.set(iterator, '[[Done]]', true);
				if (e !== $StopIteration) {
					throw e;
				}
				return {
					done: true,
					value: void undefined
				};
			}
		}
	};

	SLOT.set(siIterator, '[[Iterator]]', origIterator);

	return siIterator;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/stop-iteration-iterator/index.js?`)},"./node_modules/string_decoder/lib/string_decoder.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval(`// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = (__webpack_require__(/*! safe-buffer */ "./node_modules/string_decoder/node_modules/safe-buffer/index.js").Buffer);
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache \`Buffer.isEncoding\` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/string_decoder/lib/string_decoder.js?`)},"./node_modules/string_decoder/node_modules/safe-buffer/index.js":(module,exports,__webpack_require__)=>{eval(`/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/string_decoder/node_modules/safe-buffer/index.js?`)},"./node_modules/tiny-inflate/index.js":module=>{eval(`var TINF_OK = 0;
var TINF_DATA_ERROR = -3;

function Tree() {
  this.table = new Uint16Array(16);   /* table of code length counts */
  this.trans = new Uint16Array(288);  /* code -> symbol translation table */
}

function Data(source, dest) {
  this.source = source;
  this.sourceIndex = 0;
  this.tag = 0;
  this.bitcount = 0;
  
  this.dest = dest;
  this.destLen = 0;
  
  this.ltree = new Tree();  /* dynamic length/symbol tree */
  this.dtree = new Tree();  /* dynamic distance tree */
}

/* --------------------------------------------------- *
 * -- uninitialized global data (static structures) -- *
 * --------------------------------------------------- */

var sltree = new Tree();
var sdtree = new Tree();

/* extra bits and base tables for length codes */
var length_bits = new Uint8Array(30);
var length_base = new Uint16Array(30);

/* extra bits and base tables for distance codes */
var dist_bits = new Uint8Array(30);
var dist_base = new Uint16Array(30);

/* special ordering of code length codes */
var clcidx = new Uint8Array([
  16, 17, 18, 0, 8, 7, 9, 6,
  10, 5, 11, 4, 12, 3, 13, 2,
  14, 1, 15
]);

/* used by tinf_decode_trees, avoids allocations every call */
var code_tree = new Tree();
var lengths = new Uint8Array(288 + 32);

/* ----------------------- *
 * -- utility functions -- *
 * ----------------------- */

/* build extra bits and base tables */
function tinf_build_bits_base(bits, base, delta, first) {
  var i, sum;

  /* build bits table */
  for (i = 0; i < delta; ++i) bits[i] = 0;
  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;

  /* build base table */
  for (sum = first, i = 0; i < 30; ++i) {
    base[i] = sum;
    sum += 1 << bits[i];
  }
}

/* build the fixed huffman trees */
function tinf_build_fixed_trees(lt, dt) {
  var i;

  /* build fixed length tree */
  for (i = 0; i < 7; ++i) lt.table[i] = 0;

  lt.table[7] = 24;
  lt.table[8] = 152;
  lt.table[9] = 112;

  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;
  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;
  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;
  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;

  /* build fixed distance tree */
  for (i = 0; i < 5; ++i) dt.table[i] = 0;

  dt.table[5] = 32;

  for (i = 0; i < 32; ++i) dt.trans[i] = i;
}

/* given an array of code lengths, build a tree */
var offs = new Uint16Array(16);

function tinf_build_tree(t, lengths, off, num) {
  var i, sum;

  /* clear code length count table */
  for (i = 0; i < 16; ++i) t.table[i] = 0;

  /* scan symbol lengths, and sum code length counts */
  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;

  t.table[0] = 0;

  /* compute offset table for distribution sort */
  for (sum = 0, i = 0; i < 16; ++i) {
    offs[i] = sum;
    sum += t.table[i];
  }

  /* create code->symbol translation table (symbols sorted by code) */
  for (i = 0; i < num; ++i) {
    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;
  }
}

/* ---------------------- *
 * -- decode functions -- *
 * ---------------------- */

/* get one bit from source stream */
function tinf_getbit(d) {
  /* check if tag is empty */
  if (!d.bitcount--) {
    /* load next tag */
    d.tag = d.source[d.sourceIndex++];
    d.bitcount = 7;
  }

  /* shift bit out of tag */
  var bit = d.tag & 1;
  d.tag >>>= 1;

  return bit;
}

/* read a num bit value from a stream and add base */
function tinf_read_bits(d, num, base) {
  if (!num)
    return base;

  while (d.bitcount < 24) {
    d.tag |= d.source[d.sourceIndex++] << d.bitcount;
    d.bitcount += 8;
  }

  var val = d.tag & (0xffff >>> (16 - num));
  d.tag >>>= num;
  d.bitcount -= num;
  return val + base;
}

/* given a data stream and a tree, decode a symbol */
function tinf_decode_symbol(d, t) {
  while (d.bitcount < 24) {
    d.tag |= d.source[d.sourceIndex++] << d.bitcount;
    d.bitcount += 8;
  }
  
  var sum = 0, cur = 0, len = 0;
  var tag = d.tag;

  /* get more bits while code value is above sum */
  do {
    cur = 2 * cur + (tag & 1);
    tag >>>= 1;
    ++len;

    sum += t.table[len];
    cur -= t.table[len];
  } while (cur >= 0);
  
  d.tag = tag;
  d.bitcount -= len;

  return t.trans[sum + cur];
}

/* given a data stream, decode dynamic trees from it */
function tinf_decode_trees(d, lt, dt) {
  var hlit, hdist, hclen;
  var i, num, length;

  /* get 5 bits HLIT (257-286) */
  hlit = tinf_read_bits(d, 5, 257);

  /* get 5 bits HDIST (1-32) */
  hdist = tinf_read_bits(d, 5, 1);

  /* get 4 bits HCLEN (4-19) */
  hclen = tinf_read_bits(d, 4, 4);

  for (i = 0; i < 19; ++i) lengths[i] = 0;

  /* read code lengths for code length alphabet */
  for (i = 0; i < hclen; ++i) {
    /* get 3 bits code length (0-7) */
    var clen = tinf_read_bits(d, 3, 0);
    lengths[clcidx[i]] = clen;
  }

  /* build code length tree */
  tinf_build_tree(code_tree, lengths, 0, 19);

  /* decode code lengths for the dynamic trees */
  for (num = 0; num < hlit + hdist;) {
    var sym = tinf_decode_symbol(d, code_tree);

    switch (sym) {
      case 16:
        /* copy previous code length 3-6 times (read 2 bits) */
        var prev = lengths[num - 1];
        for (length = tinf_read_bits(d, 2, 3); length; --length) {
          lengths[num++] = prev;
        }
        break;
      case 17:
        /* repeat code length 0 for 3-10 times (read 3 bits) */
        for (length = tinf_read_bits(d, 3, 3); length; --length) {
          lengths[num++] = 0;
        }
        break;
      case 18:
        /* repeat code length 0 for 11-138 times (read 7 bits) */
        for (length = tinf_read_bits(d, 7, 11); length; --length) {
          lengths[num++] = 0;
        }
        break;
      default:
        /* values 0-15 represent the actual code lengths */
        lengths[num++] = sym;
        break;
    }
  }

  /* build dynamic trees */
  tinf_build_tree(lt, lengths, 0, hlit);
  tinf_build_tree(dt, lengths, hlit, hdist);
}

/* ----------------------------- *
 * -- block inflate functions -- *
 * ----------------------------- */

/* given a stream and two trees, inflate a block of data */
function tinf_inflate_block_data(d, lt, dt) {
  while (1) {
    var sym = tinf_decode_symbol(d, lt);

    /* check for end of block */
    if (sym === 256) {
      return TINF_OK;
    }

    if (sym < 256) {
      d.dest[d.destLen++] = sym;
    } else {
      var length, dist, offs;
      var i;

      sym -= 257;

      /* possibly get more bits from length code */
      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);

      dist = tinf_decode_symbol(d, dt);

      /* possibly get more bits from distance code */
      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);

      /* copy match */
      for (i = offs; i < offs + length; ++i) {
        d.dest[d.destLen++] = d.dest[i];
      }
    }
  }
}

/* inflate an uncompressed block of data */
function tinf_inflate_uncompressed_block(d) {
  var length, invlength;
  var i;
  
  /* unread from bitbuffer */
  while (d.bitcount > 8) {
    d.sourceIndex--;
    d.bitcount -= 8;
  }

  /* get length */
  length = d.source[d.sourceIndex + 1];
  length = 256 * length + d.source[d.sourceIndex];

  /* get one's complement of length */
  invlength = d.source[d.sourceIndex + 3];
  invlength = 256 * invlength + d.source[d.sourceIndex + 2];

  /* check length */
  if (length !== (~invlength & 0x0000ffff))
    return TINF_DATA_ERROR;

  d.sourceIndex += 4;

  /* copy block */
  for (i = length; i; --i)
    d.dest[d.destLen++] = d.source[d.sourceIndex++];

  /* make sure we start next block on a byte boundary */
  d.bitcount = 0;

  return TINF_OK;
}

/* inflate stream from source to dest */
function tinf_uncompress(source, dest) {
  var d = new Data(source, dest);
  var bfinal, btype, res;

  do {
    /* read final block flag */
    bfinal = tinf_getbit(d);

    /* read block type (2 bits) */
    btype = tinf_read_bits(d, 2, 0);

    /* decompress block */
    switch (btype) {
      case 0:
        /* decompress uncompressed block */
        res = tinf_inflate_uncompressed_block(d);
        break;
      case 1:
        /* decompress block with fixed huffman trees */
        res = tinf_inflate_block_data(d, sltree, sdtree);
        break;
      case 2:
        /* decompress block with dynamic huffman trees */
        tinf_decode_trees(d, d.ltree, d.dtree);
        res = tinf_inflate_block_data(d, d.ltree, d.dtree);
        break;
      default:
        res = TINF_DATA_ERROR;
    }

    if (res !== TINF_OK)
      throw new Error('Data error');

  } while (!bfinal);

  if (d.destLen < d.dest.length) {
    if (typeof d.dest.slice === 'function')
      return d.dest.slice(0, d.destLen);
    else
      return d.dest.subarray(0, d.destLen);
  }
  
  return d.dest;
}

/* -------------------- *
 * -- initialization -- *
 * -------------------- */

/* build fixed huffman trees */
tinf_build_fixed_trees(sltree, sdtree);

/* build extra bits and base tables */
tinf_build_bits_base(length_bits, length_base, 4, 3);
tinf_build_bits_base(dist_bits, dist_base, 2, 1);

/* fix a special case */
length_bits[28] = 0;
length_base[28] = 258;

module.exports = tinf_uncompress;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/tiny-inflate/index.js?`)},"./node_modules/unicode-trie/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`const inflate = __webpack_require__(/*! tiny-inflate */ "./node_modules/tiny-inflate/index.js");
const { swap32LE } = __webpack_require__(/*! ./swap */ "./node_modules/unicode-trie/swap.js");

// Shift size for getting the index-1 table offset.
const SHIFT_1 = 6 + 5;

// Shift size for getting the index-2 table offset.
const SHIFT_2 = 5;

// Difference between the two shift sizes,
// for getting an index-1 offset from an index-2 offset. 6=11-5
const SHIFT_1_2 = SHIFT_1 - SHIFT_2;

// Number of index-1 entries for the BMP. 32=0x20
// This part of the index-1 table is omitted from the serialized form.
const OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> SHIFT_1;

// Number of entries in an index-2 block. 64=0x40
const INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;

// Mask for getting the lower bits for the in-index-2-block offset. */
const INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;

// Shift size for shifting left the index array values.
// Increases possible data size with 16-bit index values at the cost
// of compactability.
// This requires data blocks to be aligned by DATA_GRANULARITY.
const INDEX_SHIFT = 2;

// Number of entries in a data block. 32=0x20
const DATA_BLOCK_LENGTH = 1 << SHIFT_2;

// Mask for getting the lower bits for the in-data-block offset.
const DATA_MASK = DATA_BLOCK_LENGTH - 1;

// The part of the index-2 table for U+D800..U+DBFF stores values for
// lead surrogate code _units_ not code _points_.
// Values for lead surrogate code _points_ are indexed with this portion of the table.
// Length=32=0x20=0x400>>SHIFT_2. (There are 1024=0x400 lead surrogates.)
const LSCP_INDEX_2_OFFSET = 0x10000 >> SHIFT_2;
const LSCP_INDEX_2_LENGTH = 0x400 >> SHIFT_2;

// Count the lengths of both BMP pieces. 2080=0x820
const INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;

// The 2-byte UTF-8 version of the index-2 table follows at offset 2080=0x820.
// Length 32=0x20 for lead bytes C0..DF, regardless of SHIFT_2.
const UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;
const UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6;  // U+0800 is the first code point after 2-byte UTF-8

// The index-1 table, only used for supplementary code points, at offset 2112=0x840.
// Variable length, for code points up to highStart, where the last single-value range starts.
// Maximum length 512=0x200=0x100000>>SHIFT_1.
// (For 0x100000 supplementary code points U+10000..U+10ffff.)
//
// The part of the index-2 table for supplementary code points starts
// after this index-1 table.
//
// Both the index-1 table and the following part of the index-2 table
// are omitted completely if there is only BMP data.
const INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;

// The alignment size of a data block. Also the granularity for compaction.
const DATA_GRANULARITY = 1 << INDEX_SHIFT;

class UnicodeTrie {
  constructor(data) {
    const isBuffer = (typeof data.readUInt32BE === 'function') && (typeof data.slice === 'function');

    if (isBuffer || data instanceof Uint8Array) {
      // read binary format
      let uncompressedLength;
      if (isBuffer) {
        this.highStart = data.readUInt32LE(0);
        this.errorValue = data.readUInt32LE(4);
        uncompressedLength = data.readUInt32LE(8);
        data = data.slice(12);
      } else {
        const view = new DataView(data.buffer);
        this.highStart = view.getUint32(0, true);
        this.errorValue = view.getUint32(4, true);
        uncompressedLength = view.getUint32(8, true);
        data = data.subarray(12);
      }

      // double inflate the actual trie data
      data = inflate(data, new Uint8Array(uncompressedLength));
      data = inflate(data, new Uint8Array(uncompressedLength));

      // swap bytes from little-endian
      swap32LE(data);

      this.data = new Uint32Array(data.buffer);

    } else {
      // pre-parsed data
      ({ data: this.data, highStart: this.highStart, errorValue: this.errorValue } = data);
    }
  }

  get(codePoint) {
    let index;
    if ((codePoint < 0) || (codePoint > 0x10ffff)) {
      return this.errorValue;
    }

    if ((codePoint < 0xd800) || ((codePoint > 0xdbff) && (codePoint <= 0xffff))) {
      // Ordinary BMP code point, excluding leading surrogates.
      // BMP uses a single level lookup.  BMP index starts at offset 0 in the index.
      // data is stored in the index array itself.
      index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);
      return this.data[index];
    }

    if (codePoint <= 0xffff) {
      // Lead Surrogate Code Point.  A Separate index section is stored for
      // lead surrogate code units and code points.
      //   The main index has the code unit data.
      //   For this function, we need the code point data.
      index = (this.data[LSCP_INDEX_2_OFFSET + ((codePoint - 0xd800) >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);
      return this.data[index];
    }

    if (codePoint < this.highStart) {
      // Supplemental code point, use two-level lookup.
      index = this.data[(INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH) + (codePoint >> SHIFT_1)];
      index = this.data[index + ((codePoint >> SHIFT_2) & INDEX_2_MASK)];
      index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);
      return this.data[index];
    }

    return this.data[this.data.length - DATA_GRANULARITY];
  }
}

module.exports = UnicodeTrie;

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/unicode-trie/index.js?`)},"./node_modules/unicode-trie/swap.js":module=>{eval(`const isBigEndian = (new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x12);

const swap = (b, n, m) => {
  let i = b[n];
  b[n] = b[m];
  b[m] = i;
};

const swap32 = array => {
  const len = array.length;
  for (let i = 0; i < len; i += 4) {
    swap(array, i, i + 3);
    swap(array, i + 1, i + 2);
  }
};

const swap32LE = array => {
  if (isBigEndian) {
    swap32(array);
  }
};

module.exports = {
  swap32LE: swap32LE
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/unicode-trie/swap.js?`)},"./node_modules/util-deprecate/browser.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`
/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If \`localStorage.noDeprecation = true\` is set, then it is a no-op.
 *
 * If \`localStorage.throwDeprecation = true\` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If \`localStorage.traceDeprecation = true\` is set, then deprecated functions
 * will invoke \`console.trace()\` instead of \`console.error()\`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when \`fn\` is invoked
 * @returns {Function} a new "deprecated" version of \`fn\`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks \`localStorage\` for boolean values for the given \`name\`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!__webpack_require__.g.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = __webpack_require__.g.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/util-deprecate/browser.js?`)},"./node_modules/util/support/isBufferBrowser.js":module=>{eval(`module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/util/support/isBufferBrowser.js?`)},"./node_modules/util/support/types.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval(`// Currently in sync with Node.js lib/internal/util/types.js
// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9



var isArgumentsObject = __webpack_require__(/*! is-arguments */ "./node_modules/is-arguments/index.js");
var isGeneratorFunction = __webpack_require__(/*! is-generator-function */ "./node_modules/is-generator-function/index.js");
var whichTypedArray = __webpack_require__(/*! which-typed-array */ "./node_modules/which-typed-array/index.js");
var isTypedArray = __webpack_require__(/*! is-typed-array */ "./node_modules/is-typed-array/index.js");

function uncurryThis(f) {
  return f.call.bind(f);
}

var BigIntSupported = typeof BigInt !== 'undefined';
var SymbolSupported = typeof Symbol !== 'undefined';

var ObjectToString = uncurryThis(Object.prototype.toString);

var numberValue = uncurryThis(Number.prototype.valueOf);
var stringValue = uncurryThis(String.prototype.valueOf);
var booleanValue = uncurryThis(Boolean.prototype.valueOf);

if (BigIntSupported) {
  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);
}

if (SymbolSupported) {
  var symbolValue = uncurryThis(Symbol.prototype.valueOf);
}

function checkBoxedPrimitive(value, prototypeValueOf) {
  if (typeof value !== 'object') {
    return false;
  }
  try {
    prototypeValueOf(value);
    return true;
  } catch(e) {
    return false;
  }
}

exports.isArgumentsObject = isArgumentsObject;
exports.isGeneratorFunction = isGeneratorFunction;
exports.isTypedArray = isTypedArray;

// Taken from here and modified for better browser support
// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js
function isPromise(input) {
	return (
		(
			typeof Promise !== 'undefined' &&
			input instanceof Promise
		) ||
		(
			input !== null &&
			typeof input === 'object' &&
			typeof input.then === 'function' &&
			typeof input.catch === 'function'
		)
	);
}
exports.isPromise = isPromise;

function isArrayBufferView(value) {
  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    return ArrayBuffer.isView(value);
  }

  return (
    isTypedArray(value) ||
    isDataView(value)
  );
}
exports.isArrayBufferView = isArrayBufferView;


function isUint8Array(value) {
  return whichTypedArray(value) === 'Uint8Array';
}
exports.isUint8Array = isUint8Array;

function isUint8ClampedArray(value) {
  return whichTypedArray(value) === 'Uint8ClampedArray';
}
exports.isUint8ClampedArray = isUint8ClampedArray;

function isUint16Array(value) {
  return whichTypedArray(value) === 'Uint16Array';
}
exports.isUint16Array = isUint16Array;

function isUint32Array(value) {
  return whichTypedArray(value) === 'Uint32Array';
}
exports.isUint32Array = isUint32Array;

function isInt8Array(value) {
  return whichTypedArray(value) === 'Int8Array';
}
exports.isInt8Array = isInt8Array;

function isInt16Array(value) {
  return whichTypedArray(value) === 'Int16Array';
}
exports.isInt16Array = isInt16Array;

function isInt32Array(value) {
  return whichTypedArray(value) === 'Int32Array';
}
exports.isInt32Array = isInt32Array;

function isFloat32Array(value) {
  return whichTypedArray(value) === 'Float32Array';
}
exports.isFloat32Array = isFloat32Array;

function isFloat64Array(value) {
  return whichTypedArray(value) === 'Float64Array';
}
exports.isFloat64Array = isFloat64Array;

function isBigInt64Array(value) {
  return whichTypedArray(value) === 'BigInt64Array';
}
exports.isBigInt64Array = isBigInt64Array;

function isBigUint64Array(value) {
  return whichTypedArray(value) === 'BigUint64Array';
}
exports.isBigUint64Array = isBigUint64Array;

function isMapToString(value) {
  return ObjectToString(value) === '[object Map]';
}
isMapToString.working = (
  typeof Map !== 'undefined' &&
  isMapToString(new Map())
);

function isMap(value) {
  if (typeof Map === 'undefined') {
    return false;
  }

  return isMapToString.working
    ? isMapToString(value)
    : value instanceof Map;
}
exports.isMap = isMap;

function isSetToString(value) {
  return ObjectToString(value) === '[object Set]';
}
isSetToString.working = (
  typeof Set !== 'undefined' &&
  isSetToString(new Set())
);
function isSet(value) {
  if (typeof Set === 'undefined') {
    return false;
  }

  return isSetToString.working
    ? isSetToString(value)
    : value instanceof Set;
}
exports.isSet = isSet;

function isWeakMapToString(value) {
  return ObjectToString(value) === '[object WeakMap]';
}
isWeakMapToString.working = (
  typeof WeakMap !== 'undefined' &&
  isWeakMapToString(new WeakMap())
);
function isWeakMap(value) {
  if (typeof WeakMap === 'undefined') {
    return false;
  }

  return isWeakMapToString.working
    ? isWeakMapToString(value)
    : value instanceof WeakMap;
}
exports.isWeakMap = isWeakMap;

function isWeakSetToString(value) {
  return ObjectToString(value) === '[object WeakSet]';
}
isWeakSetToString.working = (
  typeof WeakSet !== 'undefined' &&
  isWeakSetToString(new WeakSet())
);
function isWeakSet(value) {
  return isWeakSetToString(value);
}
exports.isWeakSet = isWeakSet;

function isArrayBufferToString(value) {
  return ObjectToString(value) === '[object ArrayBuffer]';
}
isArrayBufferToString.working = (
  typeof ArrayBuffer !== 'undefined' &&
  isArrayBufferToString(new ArrayBuffer())
);
function isArrayBuffer(value) {
  if (typeof ArrayBuffer === 'undefined') {
    return false;
  }

  return isArrayBufferToString.working
    ? isArrayBufferToString(value)
    : value instanceof ArrayBuffer;
}
exports.isArrayBuffer = isArrayBuffer;

function isDataViewToString(value) {
  return ObjectToString(value) === '[object DataView]';
}
isDataViewToString.working = (
  typeof ArrayBuffer !== 'undefined' &&
  typeof DataView !== 'undefined' &&
  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))
);
function isDataView(value) {
  if (typeof DataView === 'undefined') {
    return false;
  }

  return isDataViewToString.working
    ? isDataViewToString(value)
    : value instanceof DataView;
}
exports.isDataView = isDataView;

// Store a copy of SharedArrayBuffer in case it's deleted elsewhere
var SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;
function isSharedArrayBufferToString(value) {
  return ObjectToString(value) === '[object SharedArrayBuffer]';
}
function isSharedArrayBuffer(value) {
  if (typeof SharedArrayBufferCopy === 'undefined') {
    return false;
  }

  if (typeof isSharedArrayBufferToString.working === 'undefined') {
    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());
  }

  return isSharedArrayBufferToString.working
    ? isSharedArrayBufferToString(value)
    : value instanceof SharedArrayBufferCopy;
}
exports.isSharedArrayBuffer = isSharedArrayBuffer;

function isAsyncFunction(value) {
  return ObjectToString(value) === '[object AsyncFunction]';
}
exports.isAsyncFunction = isAsyncFunction;

function isMapIterator(value) {
  return ObjectToString(value) === '[object Map Iterator]';
}
exports.isMapIterator = isMapIterator;

function isSetIterator(value) {
  return ObjectToString(value) === '[object Set Iterator]';
}
exports.isSetIterator = isSetIterator;

function isGeneratorObject(value) {
  return ObjectToString(value) === '[object Generator]';
}
exports.isGeneratorObject = isGeneratorObject;

function isWebAssemblyCompiledModule(value) {
  return ObjectToString(value) === '[object WebAssembly.Module]';
}
exports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;

function isNumberObject(value) {
  return checkBoxedPrimitive(value, numberValue);
}
exports.isNumberObject = isNumberObject;

function isStringObject(value) {
  return checkBoxedPrimitive(value, stringValue);
}
exports.isStringObject = isStringObject;

function isBooleanObject(value) {
  return checkBoxedPrimitive(value, booleanValue);
}
exports.isBooleanObject = isBooleanObject;

function isBigIntObject(value) {
  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);
}
exports.isBigIntObject = isBigIntObject;

function isSymbolObject(value) {
  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);
}
exports.isSymbolObject = isSymbolObject;

function isBoxedPrimitive(value) {
  return (
    isNumberObject(value) ||
    isStringObject(value) ||
    isBooleanObject(value) ||
    isBigIntObject(value) ||
    isSymbolObject(value)
  );
}
exports.isBoxedPrimitive = isBoxedPrimitive;

function isAnyArrayBuffer(value) {
  return typeof Uint8Array !== 'undefined' && (
    isArrayBuffer(value) ||
    isSharedArrayBuffer(value)
  );
}
exports.isAnyArrayBuffer = isAnyArrayBuffer;

['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {
  Object.defineProperty(exports, method, {
    enumerable: false,
    value: function() {
      throw new Error(method + ' is not supported in userland');
    }
  });
});


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/util/support/types.js?`)},"./node_modules/util/util.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval(`/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||
  function getOwnPropertyDescriptors(obj) {
    var keys = Object.keys(obj);
    var descriptors = {};
    for (var i = 0; i < keys.length; i++) {
      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
    }
    return descriptors;
  };

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  if (typeof process !== 'undefined' && process.noDeprecation === true) {
    return fn;
  }

  // Allow for deprecating things in the process of starting up.
  if (typeof process === 'undefined') {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnvRegex = /^$/;

if (process.env.NODE_DEBUG) {
  var debugEnv = process.env.NODE_DEBUG;
  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')
    .replace(/\\*/g, '.*')
    .replace(/,/g, '$|^')
    .toUpperCase();
  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');
}
exports.debuglog = function(set) {
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (debugEnvRegex.test(set)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\\\'")
                                             .replace(/\\\\"/g, '"') + '\\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\\n') > -1) {
        if (array) {
          str = str.split('\\n').map(function(line) {
            return '  ' + line;
          }).join('\\n').slice(2);
        } else {
          str = '\\n' + str.split('\\n').map(function(line) {
            return '   ' + line;
          }).join('\\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.slice(1, -1);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\\\'")
                 .replace(/\\\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\\n ') +
           ' ' +
           output.join(',\\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use \`instanceof\`
// because it is fragile and can be easily faked with \`Object.create()\`.
exports.types = __webpack_require__(/*! ./support/types */ "./node_modules/util/support/types.js");

function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;
exports.types.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;
exports.types.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;
exports.types.isNativeError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ "./node_modules/util/support/isBufferBrowser.js");

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;

exports.promisify = function promisify(original) {
  if (typeof original !== 'function')
    throw new TypeError('The "original" argument must be of type Function');

  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
    var fn = original[kCustomPromisifiedSymbol];
    if (typeof fn !== 'function') {
      throw new TypeError('The "util.promisify.custom" argument must be of type Function');
    }
    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
      value: fn, enumerable: false, writable: false, configurable: true
    });
    return fn;
  }

  function fn() {
    var promiseResolve, promiseReject;
    var promise = new Promise(function (resolve, reject) {
      promiseResolve = resolve;
      promiseReject = reject;
    });

    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }
    args.push(function (err, value) {
      if (err) {
        promiseReject(err);
      } else {
        promiseResolve(value);
      }
    });

    try {
      original.apply(this, args);
    } catch (err) {
      promiseReject(err);
    }

    return promise;
  }

  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));

  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {
    value: fn, enumerable: false, writable: false, configurable: true
  });
  return Object.defineProperties(
    fn,
    getOwnPropertyDescriptors(original)
  );
}

exports.promisify.custom = kCustomPromisifiedSymbol

function callbackifyOnRejected(reason, cb) {
  // \`!reason\` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
  // Because \`null\` is a special error value in callbacks which means "no error
  // occurred", we error-wrap so the callback consumer can distinguish between
  // "the promise rejected with null" or "the promise fulfilled with undefined".
  if (!reason) {
    var newReason = new Error('Promise was rejected with a falsy value');
    newReason.reason = reason;
    reason = newReason;
  }
  return cb(reason);
}

function callbackify(original) {
  if (typeof original !== 'function') {
    throw new TypeError('The "original" argument must be of type Function');
  }

  // We DO NOT return the promise as it gives the user a false sense that
  // the promise is actually somehow related to the callback's execution
  // and that the callback throwing will reject the promise.
  function callbackified() {
    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    var maybeCb = args.pop();
    if (typeof maybeCb !== 'function') {
      throw new TypeError('The last argument must be of type Function');
    }
    var self = this;
    var cb = function() {
      return maybeCb.apply(self, arguments);
    };
    // In true node style we process the callback on \`nextTick\` with all the
    // implications (stack, \`uncaughtException\`, \`async_hooks\`)
    original.apply(this, args)
      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },
            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });
  }

  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
  Object.defineProperties(callbackified,
                          getOwnPropertyDescriptors(original));
  return callbackified;
}
exports.callbackify = callbackify;


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/util/util.js?`)},"./node_modules/which-boxed-primitive/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var isString = __webpack_require__(/*! is-string */ "./node_modules/is-string/index.js");
var isNumber = __webpack_require__(/*! is-number-object */ "./node_modules/is-number-object/index.js");
var isBoolean = __webpack_require__(/*! is-boolean-object */ "./node_modules/is-boolean-object/index.js");
var isSymbol = __webpack_require__(/*! is-symbol */ "./node_modules/is-symbol/index.js");
var isBigInt = __webpack_require__(/*! is-bigint */ "./node_modules/is-bigint/index.js");

// eslint-disable-next-line consistent-return
module.exports = function whichBoxedPrimitive(value) {
	// eslint-disable-next-line eqeqeq
	if (value == null || (typeof value !== 'object' && typeof value !== 'function')) {
		return null;
	}
	if (isString(value)) {
		return 'String';
	}
	if (isNumber(value)) {
		return 'Number';
	}
	if (isBoolean(value)) {
		return 'Boolean';
	}
	if (isSymbol(value)) {
		return 'Symbol';
	}
	if (isBigInt(value)) {
		return 'BigInt';
	}
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/which-boxed-primitive/index.js?`)},"./node_modules/which-typed-array/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var forEach = __webpack_require__(/*! for-each */ "./node_modules/for-each/index.js");
var availableTypedArrays = __webpack_require__(/*! available-typed-arrays */ "./node_modules/available-typed-arrays/index.js");
var callBind = __webpack_require__(/*! call-bind */ "./node_modules/call-bind/index.js");
var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");
var gOPD = __webpack_require__(/*! gopd */ "./node_modules/gopd/index.js");

var $toString = callBound('Object.prototype.toString');
var hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ "./node_modules/has-tostringtag/shams.js")();

var g = typeof globalThis === 'undefined' ? __webpack_require__.g : globalThis;
var typedArrays = availableTypedArrays();

var $slice = callBound('String.prototype.slice');
var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');

var $indexOf = callBound('Array.prototype.indexOf', true) || /** @type {(array: readonly unknown[], value: unknown) => keyof array} */ function indexOf(array, value) {
	for (var i = 0; i < array.length; i += 1) {
		if (array[i] === value) {
			return i;
		}
	}
	return -1;
};

/** @typedef {Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | Uint16Array | Int32Array | Uint32Array | Float32Array | Float64Array | BigInt64Array | BigUint64Array} TypedArray */
/** @typedef {'Int8Array' | 'Uint8Array' | 'Uint8ClampedArray' | 'Int16Array' | 'Uint16Array' | 'Int32Array' | 'Uint32Array' | 'Float32Array' | 'Float64Array' | 'BigInt64Array' | 'BigUint64Array'} TypedArrayName */
/** @type {{ [k in \`\\$\${TypedArrayName}\`]?: (receiver: TypedArray) => string | typeof Uint8Array.prototype.slice.call | typeof Uint8Array.prototype.set.call } & { __proto__: null }} */
var cache = { __proto__: null };
if (hasToStringTag && gOPD && getPrototypeOf) {
	forEach(typedArrays, function (typedArray) {
		var arr = new g[typedArray]();
		if (Symbol.toStringTag in arr) {
			var proto = getPrototypeOf(arr);
			// @ts-expect-error TS won't narrow inside a closure
			var descriptor = gOPD(proto, Symbol.toStringTag);
			if (!descriptor) {
				var superProto = getPrototypeOf(proto);
				// @ts-expect-error TS won't narrow inside a closure
				descriptor = gOPD(superProto, Symbol.toStringTag);
			}
			// @ts-expect-error TODO: fix
			cache['$' + typedArray] = callBind(descriptor.get);
		}
	});
} else {
	forEach(typedArrays, function (typedArray) {
		var arr = new g[typedArray]();
		var fn = arr.slice || arr.set;
		if (fn) {
			// @ts-expect-error TODO: fix
			cache['$' + typedArray] = callBind(fn);
		}
	});
}

/** @type {import('.')} */
var tryTypedArrays = function tryAllTypedArrays(value) {
	/** @type {ReturnType<tryAllTypedArrays>} */ var found = false;
	forEach(
		// eslint-disable-next-line no-extra-parens
		/** @type {Record<\`\\$\${TypedArrayName}\`, typeof cache>} */ /** @type {any} */ (cache),
		/** @type {(getter: typeof cache, name: \`\\$\${TypedArrayName}\`) => void} */ function (getter, typedArray) {
			if (!found) {
				try {
				// @ts-expect-error TODO: fix
					if ('$' + getter(value) === typedArray) {
						found = $slice(typedArray, 1);
					}
				} catch (e) { /**/ }
			}
		}
	);
	return found;
};

/** @type {import('.')} */
var trySlices = function tryAllSlices(value) {
	/** @type {ReturnType<tryAllSlices>} */ var found = false;
	forEach(
		// eslint-disable-next-line no-extra-parens
		/** @type {any} */ (cache),
		/** @type {(getter: typeof cache, name: \`\\$\${TypedArrayName}\`) => void} */ function (getter, name) {
			if (!found) {
				try {
				// @ts-expect-error TODO: fix
					getter(value);
					found = $slice(name, 1);
				} catch (e) { /**/ }
			}
		}
	);
	return found;
};

/** @type {import('.')} */
module.exports = function whichTypedArray(value) {
	if (!value || typeof value !== 'object') { return false; }
	if (!hasToStringTag) {
		var tag = $slice($toString(value), 8, -1);
		if ($indexOf(typedArrays, tag) > -1) {
			return tag;
		}
		if (tag !== 'Object') {
			return false;
		}
		// node < 0.6 hits here on real Typed Arrays
		return trySlices(value);
	}
	if (!gOPD) { return null; } // unknown engine
	return tryTypedArrays(value);
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/which-typed-array/index.js?`)},"./src/aop.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createAOP: () => (/* binding */ createAOP)
/* harmony export */ });
// This is a super-basic implementation of AOP, where we can define "advice" that runs before/after methods.

function createAdviceMap() {
  const map = new Map();

  map.add = (key, val) => {
    if(map.has(key))
      map.get(key).push(val);
    else
      map.set(key, [val]);
  };

  map.getDef = (key) => {
    return map.has(key) ? map.get(key) : [];
  }

  return map;
}


function array(names) {
  if(Array.isArray(names))
    return names;
  return names.split(' ').filter(s => s.length > 0);
}

function minus(allNames, names) {
  const namesArray = array(names);
  return allNames.filter(n => !namesArray.includes(n));
}

function isFunction(obj, fname) {
  return !isAccessor(obj, fname) && typeof obj[fname] === 'function';
}

function isAccessor(obj, fname) {
  const desc = Object.getOwnPropertyDescriptor(obj, fname);
  return desc && desc.configurable && 'get' in desc && 'set' in desc;
}


function createAOP() {
  const beforeAdvice = createAdviceMap();
  const afterAdvice  = createAdviceMap();
  const allNames = [];
  const stateMap = new Map();
  
  const deferredAdviceSetters = [];

  const setAdvice = (names, advice, f) => {
    deferredAdviceSetters.push(() => {
      const ns = (typeof names === 'function') ? names() : names;
      array(ns).forEach(n => advice.add(n, f));
    });
  };

  const callbacks = {
    before: (names, f) => setAdvice(names, beforeAdvice, f),
    after:  (names, f) => setAdvice(names, afterAdvice,  f),
    beforeAll: (f) => setAdvice(allNames, beforeAdvice, f),
    afterAll:  (f) => setAdvice(allNames, afterAdvice,  f),
    beforeAllExcept: (names, f) => setAdvice(() => minus(allNames, names), beforeAdvice, f),
    afterAllExcept:  (names, f) => setAdvice(() => minus(allNames, names), afterAdvice,  f),
  }

  const wrapFunctions = (obj) => {  // call at end
    // we have to defer setting the advice on functions until after we know the function names
    for(const fname in obj) {
      if(isFunction(obj, fname) || isAccessor(obj, fname)) {
        allNames.push(fname);
      }
    }

    deferredAdviceSetters.forEach(f => f());

    for(const fname in obj) {
      const before = beforeAdvice.getDef(fname);
      const after  = afterAdvice .getDef(fname);
      const runBefore = (fname, ...args) => before.forEach(f => f(fname, ...args));
      const runAfter  = (fname, ...args) => after.slice().reverse().forEach(f => f(fname, ...args));

      if(isFunction(obj, fname)) {
        const f = obj[fname];

        obj[fname] = function(...args) {
          runBefore(fname, ...args);
          const rv = f.call(obj, ...args);
          runAfter(fname, ...args);
          return rv;
        };
      } 
      else if(isAccessor(obj, fname)) {
        const desc = Object.getOwnPropertyDescriptor(obj, fname);
        const getter = desc.get;
        const setter = desc.set;

        Object.defineProperty(obj, fname, {
          ...desc,
          get: function () {
            runBefore(fname);
            const rv = getter.call(obj);
            runAfter(fname);
            return rv;
          },
          set: function(value) {
            runBefore(fname, value);
            const rv = setter.call(obj, value);
            runAfter(fname, value);
            return rv;
          },
        });
      }
    }
  };
  
  const advice = (stateName, f) => {
    const rv = f(callbacks);
    stateMap.set(stateName, rv);
  };
  
  const state = (stateName) => {
    return stateMap.get(stateName);
  };

  return {
    wrapFunctions,
    advice,
    state
  };
}




//# sourceURL=webpack://cytoscape-pdf-export/./src/aop.js?`)},"./src/arcTo.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calculateArcToGeom: () => (/* binding */ calculateArcToGeom)
/* harmony export */ });
// https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/arcTo

/* Some math for 2-D vectors */
class Math2D {
  /* Create new point */
  static point(x = 0, y = 0) {
    return { x: x, y: y };
  }

  /* Create new vector */
  static vector(x = 0, y = 0) {
    return this.point(x, y);
  }

  /* Subtraction: difference = minuend - subtrahend */
  static subtract(difference, minuend, subtrahend) {
    difference.x = minuend.x - subtrahend.x;
    difference.y = minuend.y - subtrahend.y;
  }

  /* Find L2 norm */
  static L2(a) {
    return Math.hypot(a.x, a.y);
  }

  /* Dot product */
  static dot(a, b) {
    return a.x * b.x + a.y * b.y;
  }

  static mag(a) {
    return Math.sqrt(a.x * a.x + a.y * a.y);
  }

  // https://www.geeksforgeeks.org/orientation-3-ordered-points/
  // To find orientation of ordered triplet 
  // (p1, p2, p3). The function returns 
  // following values 
  // 'co' --> p, q and r are collinear
  // 'cw' --> Clockwise
  // 'ccw' --> Counterclockwise
  static orientation(p1, p2, p3) {
    // See 10th slides from following link 
    // for derivation of the formula
    let val = (p2.y - p1.y) * (p3.x - p2.x) - (p2.x - p1.x) * (p3.y - p2.y);
    if (val == 0) return 'co'; // collinear
    // clock or counterclock wise
    return (val > 0) ? 'ccw' : 'cw';
  }

  /* Find point on line defined parametrically by
    * L = P0 + t * direction */
  static linePointAt(P0, t, dir) {
    return this.point(P0.x + t * dir.x, P0.y + t * dir.y);
  }
} /* end of class Math2D */


/* Find the geometry that arcTo() uses to draw the path */
function calculateArcToGeom({ P0, P1, P2, r }) {

  /* Find the center of a circle of radius r having a point T with a
   * tangent in the direction d and the center on the same side of
   * the tangent as dirTan. */
  function findCenter(T, d, r, dirTan) {
    /* Find direction of line normal to tangent line
     * Taking larger value to avoid division by 0.
     * a . n = 0. Set smaller component to 1 */
    const dn =
      Math.abs(d.x) < Math.abs(d.y)
        ? Math2D.point(1, -d.x / d.y)
        : Math2D.point(-d.y / d.x, 1);

    /* The normal may be pointing towards center or away.
     * Make towards center if not */
    if (Math2D.dot(dn, dirTan) < 0) {
      dn.x = -dn.x;
      dn.y = -dn.y;
    }

    /* Move a distance of the radius along line Tx + t * dn
     * to get to the center of the circle */
    return Math2D.linePointAt(T, r / Math2D.L2(dn), dn);
  }

  /* Test for coincidence. Note that points will have small integer
   * coordinates, so there is no issue with checking for exact
   * equality */
  const dir1 = Math2D.vector(P0.x - P1.x, P0.y - P1.y); // dir line 1
  if (dir1.x === 0 && dir1.y === 0) {
    // P0 and P1 coincident
    return [false];
  }

  const dir2 = Math2D.vector(P2.x - P1.x, P2.y - P1.y); // dir of line 2
  if (dir2.x === 0 && dir2.y === 0) {
    // P2 and P1 coincident
    return [false];
  }

  /* Magnitudes of direction vectors defining lines */
  const dir1Mag = Math2D.L2(dir1);
  const dir2Mag = Math2D.L2(dir2);

  /* Make direction vectors unit length */
  const dir1_unit = Math2D.vector(dir1.x / dir1Mag, dir1.y / dir1Mag);
  const dir2_unit = Math2D.vector(dir2.x / dir2Mag, dir2.y / dir2Mag);

  /* Angle between lines -- cos angle = a.b/(|a||b|)
   * Using unit vectors, so |a| = |b| = 1 */
  const dp = Math2D.dot(dir1_unit, dir2_unit);
  /* Test for collinearity */
  if (Math.abs(dp) > 0.999999) {
    /* Angle 0 or 180 degrees, or nearly so */
    return [false];
  }
  const angle = Math.acos(Math2D.dot(dir1_unit, dir2_unit));

  /* Distance to tangent points from P1 --
   * (T1, P1, C) form a right triangle (T2, P1, C) same triangle.
   * An angle of each triangle is half of the angle between the lines
   * tan(angle/2) = r / length(P1,T1) */
  const distToTangent = r / Math.tan(0.5 * angle);

  /* Locate tangent points */
  const T1 = Math2D.linePointAt(P1, distToTangent, dir1_unit);
  const T2 = Math2D.linePointAt(P1, distToTangent, dir2_unit);

  /* Center is along normal to tangent at tangent point at
   * a distance equal to the radius of the circle.
   * Locate center two ways. Should be equal */
  const dirT2_T1 = Math2D.vector(T2.x - T1.x, T2.y - T1.y);
  const dirT1_T2 = Math2D.vector(-dirT2_T1.x, -dirT2_T1.y);
  const C1 = findCenter(T1, dir1_unit, r, dirT2_T1);
  const C2 = findCenter(T2, dir2_unit, r, dirT1_T2);

  // /* Error in center calculations */
  const deltaC = Math2D.vector(C2.x - C1.x, C2.y - C1.y);
  // if (deltaC.x * deltaC.x + deltaC.y * deltaC.y > errorTolCenter) {
  //   console.error(
  //     \`Programming or numerical error, \` +
  //       \`P0(\${P0.x},\${P0.y}); \` +
  //       \`P1(\${P1.x},\${P1.y}); \` +
  //       \`P2(\${P2.x},\${P2.y}); \` +
  //       \`r=\${r};\`,
  //   );
  // }

  /* Average the center values */
  const C = Math2D.point(C1.x + 0.5 * deltaC.x, C1.y + 0.5 * deltaC.y);

  // Calculate the angles that need to be passed to the arc(...) function
  function getAngleFromPosXAxis(T, C) {
    var dy = T.y - C.y;
    var dx = T.x - C.x;
    var theta = Math.atan2(dy, dx); // range (-PI, PI]
    return theta;
  }

  const a1 = getAngleFromPosXAxis(T1, C);
  const a2 = getAngleFromPosXAxis(T2, C);
  const ccw = Math2D.orientation(P0, P1, P2) === 'ccw';

  return { T1, T2, C, a1, a2, ccw };
} /* end of function findConstruction */

//# sourceURL=webpack://cytoscape-pdf-export/./src/arcTo.js?`)},"./src/canvas2event.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ CanvasEventBuffer)
/* harmony export */ });

// Canvas API methods that we will support
const canvasProps = new Set([
  'background', 'end', 'save', 'restore', 'scale', 'rotate', 'translate',
  'transform', 'beginPath', 'lineTo', 'moveTo', 'arcTo', 'closePath', 
  'stroke', 'fill', 'ellipse', 'rect', 'arc', 'bezierCurveTo', 'quadraticCurveTo',
  'adjustTextX', 'adjustTextY', 'fillText', 'strokeText', 'fillRect', 'clip',
  'drawImage', 'setLineDash', 'drawSvgLayers'
]);

const gradientProps = new Set([
  'createLinearGradient', 'createRadialGradient'
]);

/**
 * Records calls to the canvas API (made by cytoscape.js) and saves 
 * them as an array of 'event' objects.
 * 
 * The array of events can then be converted into a form that can be
 * used to draw to PDF instead of canvas.
 */
function CanvasEventBuffer(debug) {

  const events = [];
  
  const propertyState = { // TODO: verify these defaults
    font: "10px Helvetica",
    textBaseline: "alphabetic",
    textAlign: "left",
    fillStyle: null,
    strokeStyle: null, 
    lineWidth: null,
    lineCap: null,
    lineJoin: null,
    globalAlpha: null
  };

  // The proxy is a stand-in for CanvasRenderingContext2D.
  // Instead of drawing to the screen, it records calls to the canvas API and
  // stores them as 'event' objects, which can be transformed and used to draw to PDF.
  const proxy = new Proxy({}, {
    get(target, prop) {
      if(canvasProps.has(prop)) {
        return (...args) => events.push({ prop, type: 'method', args });
      } else if(propertyState.hasOwnProperty(prop)) {
        return propertyState[prop];
      } else if(gradientProps.has(prop)) {
        return (...args) => {
          const event = { prop, type: 'gradient', args, stops: [] };
          events.push(event);
          return new Proxy({}, {
            get(target, prop) {
              if(prop === 'addColorStop') {
                return (...stopArgs) => event.stops.push(stopArgs);
              }
            }
          });
        }
      } else {
        console.log('get: unsupported canvas property: ' + prop);
      }
    },
    set(target, prop, value) {
      if(propertyState.hasOwnProperty(prop)) {
        propertyState[prop] = value;
        events.push({ prop, type: 'set', value });
      } else {
        console.log('set: unsupported canvas property: ' + prop);
      }
      return true;
    }
  })

  const convertEvents = () => convertEventsImpl(events);
  const runDrawEvents = (ctx) => {
    if(debug)
      console.log('Drawing PDF Events...')
    runDrawEventsImpl(ctx, events, debug);
  };

  return {
    proxy,
    events,
    convertEvents,
    runDrawEvents,
  }
};


function runDrawEventsImpl(ctx, events, debug) {
  for(const event of events) {
    if(event === null)
      continue;
    if(debug)
      console.log(event);

    if(event.type === 'method') {
      ctx[event.prop](...event.args);
    } else if(event.type === 'set') {
      if(event.gradientEvent) {
        const gradient = runDrawEventsImpl(ctx, [event.gradientEvent]);
        ctx[event.prop] = gradient;
      } else {
        ctx[event.prop] = event.value;
      }
    } else if(event.type === 'multi') {
      runDrawEventsImpl(ctx, event.events);
    } else if(event.type === 'gradient') {
      return ctx[event.prop](...event.args, event.stops);
    }
  }
}



const drawFunctions = [
  'lineTo', 'moveTo', 'arcTo', 'bezierCurveTo', 'quadraticCurveTo',
  'ellipse', 'rect', 'arc'
];

const pathEndFunctions = [
  'endPath', 'fill', 'stroke'
];

/**
 * Converts cytoscape.js canvas drawing "Events" into a form that is acceptible
 * for drawing to PDF.
 * 
 * This is the reason why we are using an array of 'event' objects.
 * We can look ahead in the array and convert events into a format that is acceptable
 * for PDF.
 * 
 * For example PDF does not support calling fill() then stroke(), it has to be converted
 * into one call to fillAndStroke(). But fill() and stroke() might not be next to each
 * other, we need to search ahead for the call to stroke() that corresponds to a fill().
 */
function convertEventsImpl(events) {
  let savedPath = [];
  const point = { px: 0, py: 0 };
  let nextStrokeNeedsPath = false;

  // Using a loop counter because we can look ahead or back in the buffer
  for(let i = 0; i < events.length; i++) {
    const event = events[i];
    if(event === null)
      continue;
    const { prop, type } = event;

    if(type === 'gradient') {
      const nextEvt = events[i+1];
      if(nextEvt.prop === 'fillStyle' || nextEvt.prop === 'strokeStyle') { // TODO search ahead for next fillStyle?
        events[i] = null;
        nextEvt.gradientEvent = event;
      }
    }

    /**
     * Sometimes cy.js calls beginPath() and then immediatley calls lineTo() which doesn't work with pdfkit.
     * Need to replace the the first call to lineTo() with a call to moveTo().
     */
    if(prop === 'beginPath') {
      // TODO: need to scan ahead for 'lineTo', it might not be right after the 'beginPath'
      if(events[i+1].prop === 'lineTo') {
        events[i+1] = { ...events[i+1], prop: 'moveTo' };
      }
    }

    // If we encounter a beginPath(), ..., endPath() sequence then save the path.
    if(prop === 'beginPath') {
      savedPath = [];
      let j = i + 1;
      while(j < events.length && !pathEndFunctions.includes(events[j].prop)) {
        if(drawFunctions.includes(events[j].prop)) {
          savedPath.push(events[j]);
        }
        j++;
      }
      nextStrokeNeedsPath = false;
    }

    // PDF does not support calling fill() then calling stroke()
    // Either fill()-stroke() needs to be repliaced with a call to fillAndStroke()
    // or the path needs to be replayed before the call to stroke.
    if(prop === 'fill') {
      if(events[i+1].prop === 'stroke') { // easy case, replace fill then stroke with a fillAndStroke
        events[i] = { ...event, prop: 'fillAndStroke' };
        events[i+1] = null;
        nextStrokeNeedsPath = false;
      } else { // otherwise we will duplicate the path before the stroke
        nextStrokeNeedsPath = true;
      }
    }

    if(prop === 'clip') {
      nextStrokeNeedsPath = true;
    }

    if(prop === 'stroke') {
      if(nextStrokeNeedsPath) {
        events.splice(i, 0, 
          { type: 'multi',
            description: 'nextStrokeNeedsPath',
            events: [
              { prop: 'beginPath', type: 'method', args: [] },
              ...savedPath,
              { prop: 'closePath', type: 'method', args: [] },
            ]
          }
        );
      }
      nextStrokeNeedsPath = false;
    }

    /**
     * Remember the (x,y) point where calls to various drawing methods end up.
     * Pass the point to the arcTo() function.
     */
    if(['lineTo', 'moveTo'].includes(prop)) {
      const [ x, y ] = event.args;
      point.px = x;
      point.py = y;
    }
    if(prop === 'arcTo') {
      event.args.push(point.px, point.py);
    }
    if(['arcTo', 'bezierCurveTo', 'quadraticCurveTo'].includes(prop)) {
      const [ x, y ] = event.args;
      point.px = x;
      point.py = y;
    }
  }

}

//# sourceURL=webpack://cytoscape-pdf-export/./src/canvas2event.js?`)},"./src/colors.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   color2tuple: () => (/* binding */ color2tuple),
/* harmony export */   colorname2tuple: () => (/* binding */ colorname2tuple),
/* harmony export */   colors: () => (/* binding */ colors),
/* harmony export */   hex2tuple: () => (/* binding */ hex2tuple),
/* harmony export */   hsl2tuple: () => (/* binding */ hsl2tuple),
/* harmony export */   rgb2tuple: () => (/* binding */ rgb2tuple),
/* harmony export */   rgbToHex: () => (/* binding */ rgbToHex)
/* harmony export */ });
// This file was taken from the cytoscape.js style parser

const number = '(?:[-+]?(?:(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[Ee][+-]?\\\\d+)?))';
const rgba = 'rgb[a]?\\\\((' + number + '[%]?)\\\\s*,\\\\s*(' + number + '[%]?)\\\\s*,\\\\s*(' + number + '[%]?)(?:\\\\s*,\\\\s*(' + number + '))?\\\\)';
const rgbaNoBackRefs = 'rgb[a]?\\\\((?:' + number + '[%]?)\\\\s*,\\\\s*(?:' + number + '[%]?)\\\\s*,\\\\s*(?:' + number + '[%]?)(?:\\\\s*,\\\\s*(?:' + number + '))?\\\\)';
const hsla = 'hsl[a]?\\\\((' + number + ')\\\\s*,\\\\s*(' + number + '[%])\\\\s*,\\\\s*(' + number + '[%])(?:\\\\s*,\\\\s*(' + number + '))?\\\\)';
const hslaNoBackRefs = 'hsl[a]?\\\\((?:' + number + ')\\\\s*,\\\\s*(?:' + number + '[%])\\\\s*,\\\\s*(?:' + number + '[%])(?:\\\\s*,\\\\s*(?:' + number + '))?\\\\)';
const hex3 = '\\\\#[0-9a-fA-F]{3}';
const hex6 = '\\\\#[0-9a-fA-F]{6}';

function hex(v) {
  return v < 0x10
    ? "0" + Math.max(0, v).toString(16)
    : Math.min(255, v).toString(16);
}

function rgbToHex(r, g, b, a) {
  return { c: "#" + hex(r) + hex(g) + hex(b), a: a === undefined ? 1 : a };
};

  // get [r, g, b] from #abc or #aabbcc
const hex2tuple = hex => {
  if( !(hex.length === 4 || hex.length === 7) || hex[0] !== '#' ){ return; }

  let shortHex = hex.length === 4;
  let r, g, b;
  let base = 16;

  if( shortHex ){
    r = parseInt( hex[1] + hex[1], base );
    g = parseInt( hex[2] + hex[2], base );
    b = parseInt( hex[3] + hex[3], base );
  } else {
    r = parseInt( hex[1] + hex[2], base );
    g = parseInt( hex[3] + hex[4], base );
    b = parseInt( hex[5] + hex[6], base );
  }

  return [ r, g, b ];
};

  // get [r, g, b, a] from hsl(0, 0, 0) or hsla(0, 0, 0, 0)
const hsl2tuple = hsl => {
  let ret;
  let h, s, l, a, r, g, b;
  function hue2rgb( p, q, t ){
    if( t < 0 ) t += 1;
    if( t > 1 ) t -= 1;
    if( t < 1 / 6 ) return p + (q - p) * 6 * t;
    if( t < 1 / 2 ) return q;
    if( t < 2 / 3 ) return p + (q - p) * (2 / 3 - t) * 6;
    return p;
  }

  let m = new RegExp( '^' + hsla + '$' ).exec( hsl );
  if( m ){

    // get hue
    h = parseInt( m[1] );
    if( h < 0 ){
      h = ( 360 - (-1 * h % 360) ) % 360;
    } else if( h > 360 ){
      h = h % 360;
    }
    h /= 360; // normalise on [0, 1]

    s = parseFloat( m[2] );
    if( s < 0 || s > 100 ){ return; } // saturation is [0, 100]
    s = s / 100; // normalise on [0, 1]

    l = parseFloat( m[3] );
    if( l < 0 || l > 100 ){ return; } // lightness is [0, 100]
    l = l / 100; // normalise on [0, 1]

    a = m[4];
    if( a !== undefined ){
      a = parseFloat( a );

      if( a < 0 || a > 1 ){ return; } // alpha is [0, 1]
    }

    // now, convert to rgb
    // code from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript
    if( s === 0 ){
      r = g = b = Math.round( l * 255 ); // achromatic
    } else {
      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;
      let p = 2 * l - q;
      r = Math.round( 255 * hue2rgb( p, q, h + 1 / 3 ) );
      g = Math.round( 255 * hue2rgb( p, q, h ) );
      b = Math.round( 255 * hue2rgb( p, q, h - 1 / 3 ) );
    }

    ret = [ r, g, b, a ];
  }

  return ret;
};

// get [r, g, b, a] from rgb(0, 0, 0) or rgba(0, 0, 0, 0)
const rgb2tuple = rgb => {
  let ret;

  let m = new RegExp( '^' + rgba + '$' ).exec( rgb );
  if( m ){
    ret = [];

    let isPct = [];
    for( let i = 1; i <= 3; i++ ){
      let channel = m[ i ];

      if( channel[ channel.length - 1 ] === '%' ){
        isPct[ i ] = true;
      }
      channel = parseFloat( channel );

      if( isPct[ i ] ){
        channel = channel / 100 * 255; // normalise to [0, 255]
      }

      if( channel < 0 || channel > 255 ){ return; } // invalid channel value

      ret.push( Math.floor( channel ) );
    }

    let atLeastOneIsPct = isPct[1] || isPct[2] || isPct[3];
    let allArePct = isPct[1] && isPct[2] && isPct[3];
    if( atLeastOneIsPct && !allArePct ){ return; } // must all be percent values if one is

    let alpha = m[4];
    if( alpha !== undefined ){
      alpha = parseFloat( alpha );

      if( alpha < 0 || alpha > 1 ){ return; } // invalid alpha value

      ret.push( alpha );
    }
  }

  return ret;
};

const colorname2tuple = color => {
  return colors[ color.toLowerCase() ];
};

const color2tuple = color => {
  return ( Array.isArray( color ) ? color : null )
    || colorname2tuple( color )
    || hex2tuple( color )
    || rgb2tuple( color )
    || hsl2tuple( color );
};

const colors = {
  // special colour names
  transparent: [0, 0, 0, 0], // NB alpha === 0

  // regular colours
  aliceblue: [ 240, 248, 255 ],
  antiquewhite: [ 250, 235, 215 ],
  aqua: [0, 255, 255 ],
  aquamarine: [ 127, 255, 212 ],
  azure: [ 240, 255, 255 ],
  beige: [ 245, 245, 220 ],
  bisque: [ 255, 228, 196 ],
  black: [0, 0, 0],
  blanchedalmond: [ 255, 235, 205 ],
  blue: [0, 0, 255 ],
  blueviolet: [ 138, 43, 226 ],
  brown: [ 165, 42, 42 ],
  burlywood: [ 222, 184, 135 ],
  cadetblue: [ 95, 158, 160 ],
  chartreuse: [ 127, 255, 0],
  chocolate: [ 210, 105, 30 ],
  coral: [ 255, 127, 80 ],
  cornflowerblue: [ 100, 149, 237 ],
  cornsilk: [ 255, 248, 220 ],
  crimson: [ 220, 20, 60 ],
  cyan: [0, 255, 255 ],
  darkblue: [0, 0, 139 ],
  darkcyan: [0, 139, 139 ],
  darkgoldenrod: [ 184, 134, 11 ],
  darkgray: [ 169, 169, 169 ],
  darkgreen: [0, 100, 0],
  darkgrey: [ 169, 169, 169 ],
  darkkhaki: [ 189, 183, 107 ],
  darkmagenta: [ 139, 0, 139 ],
  darkolivegreen: [ 85, 107, 47 ],
  darkorange: [ 255, 140, 0],
  darkorchid: [ 153, 50, 204 ],
  darkred: [ 139, 0, 0],
  darksalmon: [ 233, 150, 122 ],
  darkseagreen: [ 143, 188, 143 ],
  darkslateblue: [ 72, 61, 139 ],
  darkslategray: [ 47, 79, 79 ],
  darkslategrey: [ 47, 79, 79 ],
  darkturquoise: [0, 206, 209 ],
  darkviolet: [ 148, 0, 211 ],
  deeppink: [ 255, 20, 147 ],
  deepskyblue: [0, 191, 255 ],
  dimgray: [ 105, 105, 105 ],
  dimgrey: [ 105, 105, 105 ],
  dodgerblue: [ 30, 144, 255 ],
  firebrick: [ 178, 34, 34 ],
  floralwhite: [ 255, 250, 240 ],
  forestgreen: [ 34, 139, 34 ],
  fuchsia: [ 255, 0, 255 ],
  gainsboro: [ 220, 220, 220 ],
  ghostwhite: [ 248, 248, 255 ],
  gold: [ 255, 215, 0],
  goldenrod: [ 218, 165, 32 ],
  gray: [ 128, 128, 128 ],
  grey: [ 128, 128, 128 ],
  green: [0, 128, 0],
  greenyellow: [ 173, 255, 47 ],
  honeydew: [ 240, 255, 240 ],
  hotpink: [ 255, 105, 180 ],
  indianred: [ 205, 92, 92 ],
  indigo: [ 75, 0, 130 ],
  ivory: [ 255, 255, 240 ],
  khaki: [ 240, 230, 140 ],
  lavender: [ 230, 230, 250 ],
  lavenderblush: [ 255, 240, 245 ],
  lawngreen: [ 124, 252, 0],
  lemonchiffon: [ 255, 250, 205 ],
  lightblue: [ 173, 216, 230 ],
  lightcoral: [ 240, 128, 128 ],
  lightcyan: [ 224, 255, 255 ],
  lightgoldenrodyellow: [ 250, 250, 210 ],
  lightgray: [ 211, 211, 211 ],
  lightgreen: [ 144, 238, 144 ],
  lightgrey: [ 211, 211, 211 ],
  lightpink: [ 255, 182, 193 ],
  lightsalmon: [ 255, 160, 122 ],
  lightseagreen: [ 32, 178, 170 ],
  lightskyblue: [ 135, 206, 250 ],
  lightslategray: [ 119, 136, 153 ],
  lightslategrey: [ 119, 136, 153 ],
  lightsteelblue: [ 176, 196, 222 ],
  lightyellow: [ 255, 255, 224 ],
  lime: [0, 255, 0],
  limegreen: [ 50, 205, 50 ],
  linen: [ 250, 240, 230 ],
  magenta: [ 255, 0, 255 ],
  maroon: [ 128, 0, 0],
  mediumaquamarine: [ 102, 205, 170 ],
  mediumblue: [0, 0, 205 ],
  mediumorchid: [ 186, 85, 211 ],
  mediumpurple: [ 147, 112, 219 ],
  mediumseagreen: [ 60, 179, 113 ],
  mediumslateblue: [ 123, 104, 238 ],
  mediumspringgreen: [0, 250, 154 ],
  mediumturquoise: [ 72, 209, 204 ],
  mediumvioletred: [ 199, 21, 133 ],
  midnightblue: [ 25, 25, 112 ],
  mintcream: [ 245, 255, 250 ],
  mistyrose: [ 255, 228, 225 ],
  moccasin: [ 255, 228, 181 ],
  navajowhite: [ 255, 222, 173 ],
  navy: [0, 0, 128 ],
  oldlace: [ 253, 245, 230 ],
  olive: [ 128, 128, 0],
  olivedrab: [ 107, 142, 35 ],
  orange: [ 255, 165, 0],
  orangered: [ 255, 69, 0],
  orchid: [ 218, 112, 214 ],
  palegoldenrod: [ 238, 232, 170 ],
  palegreen: [ 152, 251, 152 ],
  paleturquoise: [ 175, 238, 238 ],
  palevioletred: [ 219, 112, 147 ],
  papayawhip: [ 255, 239, 213 ],
  peachpuff: [ 255, 218, 185 ],
  peru: [ 205, 133, 63 ],
  pink: [ 255, 192, 203 ],
  plum: [ 221, 160, 221 ],
  powderblue: [ 176, 224, 230 ],
  purple: [ 128, 0, 128 ],
  red: [ 255, 0, 0],
  rosybrown: [ 188, 143, 143 ],
  royalblue: [ 65, 105, 225 ],
  saddlebrown: [ 139, 69, 19 ],
  salmon: [ 250, 128, 114 ],
  sandybrown: [ 244, 164, 96 ],
  seagreen: [ 46, 139, 87 ],
  seashell: [ 255, 245, 238 ],
  sienna: [ 160, 82, 45 ],
  silver: [ 192, 192, 192 ],
  skyblue: [ 135, 206, 235 ],
  slateblue: [ 106, 90, 205 ],
  slategray: [ 112, 128, 144 ],
  slategrey: [ 112, 128, 144 ],
  snow: [ 255, 250, 250 ],
  springgreen: [0, 255, 127 ],
  steelblue: [ 70, 130, 180 ],
  tan: [ 210, 180, 140 ],
  teal: [0, 128, 128 ],
  thistle: [ 216, 191, 216 ],
  tomato: [ 255, 99, 71 ],
  turquoise: [ 64, 224, 208 ],
  violet: [ 238, 130, 238 ],
  wheat: [ 245, 222, 179 ],
  white: [ 255, 255, 255 ],
  whitesmoke: [ 245, 245, 245 ],
  yellow: [ 255, 255, 0],
  yellowgreen: [ 154, 205, 50 ]
};


//# sourceURL=webpack://cytoscape-pdf-export/./src/colors.js?`)},"./src/event2pdf.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var pdfkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pdfkit */ "./node_modules/pdfkit/js/pdfkit.es5.js");
/* harmony import */ var _arcTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arcTo */ "./src/arcTo.js");
/* harmony import */ var _aop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aop */ "./src/aop.js");
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./colors */ "./src/colors.js");
/* harmony import */ var _fonts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fonts */ "./src/fonts.js");






/*
 *
 *  A canvas to PDF converter. Uses a mock canvas context to build a PDF document.
 */

function isPDFGradient(value) {
  if(value?.constructor?.name === 'PDFLinearGradient' || 
     value?.constructor?.name === 'PDFRadialGradient') {
    return true;
  }
  return false;
}

function fixColor(value) {
  if(isPDFGradient(value))
    return value;
  const [ r, g, b, a ] = (0,_colors__WEBPACK_IMPORTED_MODULE_3__.color2tuple)(value);
  return (0,_colors__WEBPACK_IMPORTED_MODULE_3__.rgbToHex)(r, g, b, a);
}


/**
 *
 * @param stream Stream to write the PDF to.
 * @param options Options passed to PDFDocument constructor.
 * @constructor
 */
const PdfEventProcessor = function(stream, width, height, debug) {
  if (stream == null) {
    throw new Error("Stream must be provided.");
  }

  const doc = new pdfkit__WEBPACK_IMPORTED_MODULE_0__["default"]({ autoFirstPage: false });
  
  doc.addPage({ size: [width, height] }); // PDF has 72 'units' per inch

  this.doc = doc;
  this.stream = doc.pipe(stream);

  // Allows properties to be affected by AOP module
  const propProps = { enumerable: true, configurable: true };

  // We have to remember the values of these properties, pdfkit doesn't have getters for these.
  let lineHeight = doc.currentLineHeight(false);
  let fontValue = _fonts__WEBPACK_IMPORTED_MODULE_4__.defaultFontData.family;
  Object.defineProperty(this, "font", { ...propProps,
    get() { return fontValue; },
    set(value) {
      fontValue = value;
      const parsedFont = (0,_fonts__WEBPACK_IMPORTED_MODULE_4__.parseFont)(value);
      doc.fontSize(parsedFont.size);
      doc.font(parsedFont.family);
      lineHeight = doc.currentLineHeight(false);
    },
  });
  
  let textBaseline = "alphabetic";
  Object.defineProperty(this, "textBaseline", { ...propProps,
    get() { return textBaseline; },
    set(value) { textBaseline = value; },
  });

  let textAlign = "left";
  Object.defineProperty(this, "textAlign", { ...propProps,
    get() { return textAlign; },
    set(value) { textAlign = value; },
  });

  let fillStyleVal;
  Object.defineProperty(this, "fillStyle", { ...propProps,
    get() { return fillStyleVal; },
    set(value) {
      fillStyleVal = value;
      if(isPDFGradient(value)) {
        doc.fillColor(value, 1);
      } else {
        const { c, a } = fixColor(value);
        doc.fillColor(c, a);
      }
    },
  });

  let strokeStyleVal;
  Object.defineProperty(this, "strokeStyle", { ...propProps,
    get() { return strokeStyleVal; },
    set(value) {
      strokeStyleVal = value;
      if(isPDFGradient(value)) {
        doc.strokeColor(value);
      } else {
        const { c, a } = fixColor(value);
        doc.strokeColor(c, a);
      }
    },
  });

  let lineWidthVal;
  Object.defineProperty(this, "lineWidth", { ...propProps,
    get() { return lineWidthVal; },
    set(value) { doc.lineWidth(lineWidthVal = value); },
  });

  let lineCapVal;
  Object.defineProperty(this, "lineCap", { ...propProps,
    get() { return lineCapVal; },
    set(value) { doc.lineCap(lineCapVal = value); },
  });

  let lineJoinVal;
  Object.defineProperty(this, "lineJoin", { ...propProps,
    get() { return lineJoinVal; },
    set(value) { doc.lineJoin(lineJoinVal = value); },
  });

  let globalAlphaVal;
  Object.defineProperty(this, "globalAlpha", { ...propProps,
    get() { return globalAlphaVal; },
    set(value) {
      globalAlphaVal = value;
      value >= 0.0 && value <= 1.0 && doc.opacity(value);
    },
  });


  if(debug) {
    // Debug tracing for calls to the PDFDocument API
    const pdfkitAop = (0,_aop__WEBPACK_IMPORTED_MODULE_2__.createAOP)();
    pdfkitAop.advice('debug-trace', ({ beforeAll }) => {
      beforeAll((fname, ...args) => {
        if(fname[0] !== '_' && !['emit','read','begin','push','removeListener'].includes(fname)) {
          const printArgs = Array.from(args).map(a => (typeof a === 'string') ? a.slice(0, 100) : a);
          console.log(\`... \${fname}(\${printArgs})\`);
        }
      });
    });
    pdfkitAop.wrapFunctions(doc);
  }

  this.background = function (x, y, width, height, color) {
    const { c } = fixColor(color);
    doc.rect(x, y, width, height);
    doc.fill(c);
  }

  this.save = function () {
    doc.save();
  };

  this.restore = function () {
    doc.restore();
  };

  this.scale = function (x, y) {
    doc.scale(x, y);
  };

  this.rotate = function (angle) {
    const degrees = (angle * 180) / Math.PI;
    doc.rotate(degrees);
  };

  this.translate = function (x, y) {
    doc.translate(x, y);
  };

  this.transform = function (a, b, c, d, e, f) {
    doc.transform(a, b, c, d, e, f);
  };

  this.beginPath = function () {
    // no-op
  };

  this.lineTo = function (x, y) {
    if(isNaN(x) || isNaN(y))
      return;
    doc.lineTo(x, y);
  };


  this.moveTo = function (x, y) {
    if(isNaN(x) || isNaN(y))
      return;
    doc.moveTo(x, y);
  };

  // TODO change px, py to be last two args
  this.arcTo = function (x1, y1, x2, y2, r, px, py) {
    // pdfkit doesn't have an arcTo() function, so we convert arcTo() into lineTo() then arc()
    const { T1, T2, C, a1, a2, ccw } = 
      (0,_arcTo__WEBPACK_IMPORTED_MODULE_1__.calculateArcToGeom)({
        P0: { x: px, y: py},
        P1: { x: x1, y: y1},
        P2: { x: x2, y: y2},
        r
      });

    doc.lineTo(T1.x, T1.y);

    // the pdfkit arc() function calls moveTo(), which messes up calls to closePath()
    const moveTo = doc.moveTo;
    doc.moveTo = () => null;
    doc.arc(C.x, C.y, r, a1, a2, ccw);
    doc.moveTo = moveTo;
  };


  this.closePath = function () {
    doc.closePath();
  };

  this.stroke = function () {
    doc.stroke();
  };

  this.fill = function () {
    doc.fill();
  };

  this.fillAndStroke = function () {
    doc.fillAndStroke();
  };

  this.ellipse = function (...args) {
    doc.ellipse(...args);
  }

  this.rect = function (x, y, width, height) {
    doc.rect(x, y, width, height);
  };

  this.fillRect = function (x, y, width, height) {
    doc.rect(x, y, width, height);
    doc.fill();
  };

  this.strokeRect = function (x, y, width, height) {
    doc.rect(x, y, width, height);
    doc.stroke();
  };

  /**
   * "Clears" a canvas by just drawing a white rectangle in the current group.
   */
  this.clearRect = function (x, y, width, height) {
    const oldFill = doc.fillColor();
    doc.fillColor("white");
    doc.rect(x, y, width, height);
    doc.fill();
    doc.fillColor(oldFill);
  };

  this.arc = function (x, y, r, a0, a1, ccw) {
    const pi = Math.PI,
      tau = 2 * pi,
      epsilon = 1e-6,
      tauEpsilon = tau - epsilon;
    (x = +x), (y = +y), (r = +r);
    let dx = r * Math.cos(a0),
      dy = r * Math.sin(a0),
      x0 = x + dx,
      y0 = y + dy,
      cw = 1 ^ ccw,
      da = ccw ? a0 - a1 : a1 - a0;

    // Is the radius negative? Error.
    if (r < 0) {
      throw new Error("negative radius: " + r);
    }
    let cmd = "";
    // Is this path empty? Move to (x0,y0).

    cmd += "M" + x0 + "," + y0;

    // // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    // else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
    //   cmd += 'L' + x0 + ',' + y0;
    // }
    // Is this arc empty? We\u2019re done.
    if (!r) {
      return;
    }
    // Does the angle go the wrong way? Flip the direction.
    if (da < 0) {
      da = (da % tau) + tau;
    }
    // Is this a complete circle? Draw two arcs to complete the circle.
    if (da > tauEpsilon) {
      cmd += "A" + r +  "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" +
             r + "," + r +  ",0,1," + cw + "," + x0 + "," + y0;
    }
    // Is this arc non-empty? Draw an arc!
    else if (da > epsilon) {
      cmd += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," +
             (x + r * Math.cos(a1)) + "," + (y + r * Math.sin(a1));
    }
    doc.path(cmd);
  };

  this.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {
    doc.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);
  };

  this.quadraticCurveTo = function (cpx, cpy, x, y) {
    doc.quadraticCurveTo(cpx, cpy, x, y);
  };

  this.createLinearGradient = function (x1, y1, x2, y2, stops) {
    const gradient = doc.linearGradient(x1, y1, x2, y2);
    for(const [ offset, color ] of stops) {
      const fixedColor = fixColor(color);
      gradient.stop(offset, fixedColor.c, fixedColor.a);
    }
    return gradient;
  };

  this.createRadialGradient = function (x0, y0, r0, x1, y1, r1, stops) {
    const gradient = doc.radialGradient(x0, y0, r0, x1, y1, r1);
    for(const [ offset, color ] of stops) {
      const fixedColor = fixColor(color);
      gradient.stop(offset, fixedColor.c, fixedColor.a);
    }
    return gradient;
  };

  this.adjustTextX = function (text, x) {
    if (textAlign !== "start" || textAlign !== "left") {
      const width = doc.widthOfString(text);
      if (textAlign === "right" || textAlign === "end") {
        x -= width;
      } else if (textAlign === "center") {
        x -= width / 2;
      }
    }
    return x;
  };

  this.adjustTextY = function (text, y) {
    // baseline is top by default
    if (textBaseline === "bottom") {
      y -= lineHeight;
    } else if (textBaseline === "middle") {
      y -= lineHeight / 2;
    } else if (textBaseline === "alphabetic") {
      y -= lineHeight / 2 + 1;
    }
    return y;
  };

  this.fillText = function (text, x, y) {
    x = this.adjustTextX(text, x);
    y = this.adjustTextY(text, y);
    doc.text(text, x, y, {
      lineBreak: false,
      stroke: false,
      fill: true,
    }); 
  };

  this.strokeText = function (text, x, y) {
    x = this.adjustTextX(text, x);
    y = this.adjustTextY(text, y);
    doc.text(text, x, y, { lineBreak: false, stroke: true, fill: false });
  };

  this.measureText = function (text) {
    text = "" + text;
    const width = doc.widthOfString(text);
    return { width: width, height: lineHeight };
  };

  this.clip = function () {
    doc.clip();
  };

  this.drawImage = function (image) {
    const args = Array.prototype.slice.call(arguments);
    image = args[0];
    let dx, dy, dw, dh, sx = 0, sy = 0, sw, sh;
    if (args.length === 3) {
      [ dx, dy ] = args.slice(1);
      sw = image.width;
      sh = image.height;
      dw = sw;
      dh = sh;
    } else if (args.length === 5) {
      [ dx, dy, dw, dh ] = args.slice(1);
      sw = image.width;
      sh = image.height;
    } else if (args.length === 9) {
      [ sx, sy, sw, sh, dx, dy, dw, dh ] = args.slice(1);
    } else {
      throw new Error("Invalid number of arguments passed to drawImage: " + arguments.length);
    }

    if (image.nodeName === "IMG") {
      const canvas = document.createElement("canvas");
      canvas.width = image.width;
      canvas.height = image.height;
      canvas.getContext("2d").drawImage(image, 0, 0);
      const dataURL = canvas.toDataURL("image/png");
      doc.image(dataURL, dx, dy, { width: dw, height: dh });
    } else {
      doc.image(image, dx, dy, { width: dw, height: dh });
    }
  };

  this.setTransform = function (a, b, c, d, e, f) {
    const ctm = doc._ctm;
    const height = doc.page.height;
    const [a1, b1, c1, d1, e1, f1] = ctm;
    const determinant = a1 * d1 - b1 * c1;
    const inverse = [
      d1 / determinant,
      -b1 / determinant,
      -c1 / determinant,
      a1 / determinant,
      (c1 * f1 - d1 * e1) / determinant,
      (b1 * e1 - a1 * f1) / determinant,
    ];
    doc.transform(...inverse);
    doc.translate(0, height);
    doc.scale(1, -1);
    doc.transform(a, b, c, d, e, f);
  };


  this.setLineDash = function (arr) {
    if(!Array.isArray(arr)) {
      console.log("argument to setLineDash must be an array");
      return;
    }

    if(arr.length === 0) {
      doc.undash();
      return;
    }

    if(arr.length % 2 == 1) {
      arr.push(...arr);
    }

    if(arr.length == 2) {
      const [ dashLength, gapLength ] = arr;
      doc.dash(dashLength, { space: gapLength });
    } else {
      doc.addContent(\`[\${arr.join(' ')}] 0 d\`);
    }
  };


  this.drawSvgLayers = function(svgElements) {
    function drawSvgPath(path) {
      const setColor = (val, rgbcb, alphacb) => {
        if(typeof val === 'string') {
          const tuple = (0,_colors__WEBPACK_IMPORTED_MODULE_3__.color2tuple)(val);
          if(tuple) {
            const rgb = tuple.slice(0, 3);
            const a = tuple[3];
            rgbcb(rgb);
            if(typeof a !== 'undefined') {
              alphacb(a);
            }
          }
        }
      };
    
      const setNum = (val, cb) => {
        const num = Number(val);
        if(!isNaN(num)) {
          cb(num);
        }
      };
    
      const { style } = path;
      if(style) {
        setColor(style.fill, 
          rgb => doc.fillColor(rgb),
          a   => doc.fillOpacity(a)
        );
        setColor(style.stroke, 
          rgb => doc.strokeColor(rgb),
          a   => doc.strokeOpacity(a)
        );
        setNum(style.strokeWidth, 
          w => doc.lineWidth(w)
        );
      }
        
      const svgPathStr = path.getAttribute('d');

      doc.path(svgPathStr);
      doc.fillAndStroke();
    }

    for(const svg of svgElements) {
      const gs = svg.getElementsByTagName('g');
      for(const g of gs) {
        const paths = g.getElementsByTagName('path');
        for(const path of paths) {
          drawSvgPath(path);
        }
      }
    }
  }



  /**
   * Not yet implemented
   */
  this.createPattern = function (image, repetition) {
    console.log("createPattern not implemented");
  };

  this.drawFocusRing = function () {
    console.log("drawFocusRing not implemented");
  };

  this.createImageData = function () {
    console.log("drawFocusRing not implemented");
  };

  this.getImageData = function () {
    console.log("getImageData not implemented");
  };

  this.putImageData = function () {
    console.log("putImageData not implemented");
  };

  this.globalCompositeOperation = function () {
    console.log("globalCompositeOperation not implemented");
  };

  this.end = function () {
    doc.end();
  }

};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PdfEventProcessor);


//# sourceURL=webpack://cytoscape-pdf-export/./src/event2pdf.js?`)},"./src/fonts.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defaultFontData: () => (/* binding */ defaultFontData),
/* harmony export */   parseFont: () => (/* binding */ parseFont)
/* harmony export */ });

const fontRegex =
  /^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-,\\'\\"\\sa-z]+?)\\s*$/i;

const defaultFontData = {
  style: "normal",
  size: 10,
  family: "Helvetica",
  weight: "normal",
};

function parseFontSize(size) {
  if(size.endsWith('px')) {
    size = size.slice(0, -2);
  }
  return parseInt(size);
};

// See 'pdfkit-virtual-files.js' for list of supported fonts.
function getFont(fontFamilyStr, weight, style) {
  const families = fontFamilyStr.split(',').map(s => s.trim());  
  for(const family of families) {
    if(family === 'Courier' || family === 'Helvetica') {
      if(weight === 'bold' && (style === 'oblique' || style === 'italic')) {
        return family + '-BoldOblique';
      } else if(weight === 'bold') {
        return family + '-Bold';
      } else if(style === 'oblique' || style === 'italic') {
        return family + '-Oblique';
      } else {
        return family;
      }
    } else if(family === 'Times') {
      if(weight === 'bold' && (style === 'oblique' || style === 'italic')) {
        return 'Times-BoldItalic';
      } else if(weight === 'bold') {
        return 'Times-Bold';
      } else if(style === 'oblique' || style === 'italic') {
        return 'Times-Italic';
      } else {
        return 'Times-Roman';
      }
    } else if(family === 'Times New Roman') {
      return 'Times-Roman';
    } else if(family === 'Symbol' || family === 'ZapfDingbats') {
      return family;
    } else if(family === 'sans-serif') {
      return 'Helvetica';
    } else if(family === 'serif') {
      return 'Times-Roman';
    }
  }
  return defaultFontData.family;
}


function parseFont(font) {
  const fontPart = fontRegex.exec(font);
  if (fontPart === null) {
    return defaultFontData;
  }

  const style  = fontPart[1] || "normal";
  const weight = fontPart[3] || "normal";
  const size   = parseFontSize(fontPart[4]) || 10;
  const family = getFont(fontPart[6], weight, style);

  const data = {
    style,
    size,
    family,
    weight,
  };

  return data;
};

//# sourceURL=webpack://cytoscape-pdf-export/./src/fonts.js?`)},"./src/pdf-export.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ register),
/* harmony export */   defaultOptions: () => (/* binding */ defaultOptions),
/* harmony export */   pdfExport: () => (/* binding */ pdfExport)
/* harmony export */ });
/* harmony import */ var _canvas2event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./canvas2event.js */ "./src/canvas2event.js");
/* harmony import */ var _event2pdf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./event2pdf.js */ "./src/event2pdf.js");
/* harmony import */ var pdfkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pdfkit */ "./node_modules/pdfkit/js/pdfkit.es5.js");
/* harmony import */ var blob_stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! blob-stream */ "./node_modules/blob-stream/index.js");
/* harmony import */ var blob_stream__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(blob_stream__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _pdfkit_virtual_files_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pdfkit-virtual-files.js */ "./src/pdfkit-virtual-files.js");





 // TODO remove this dependency?
  // https://github.com/blikblum/pdfkit-webpack-example/issues/1


// Sizes are in "PostScript points", 72 points per inch
const PAPER_SIZES = {
  LETTER: [612, 792],
  LEGAL: [612, 1008],
  TABLOID: [792, 1224], 
  A0: [2384, 3370],
  A1: [1684, 2384],
  A2: [1191, 1684],
  A3: [842, 1190],
  A4: [595, 842],
  A5: [420, 595],
};
const UNITS_PER_INCH = 72;
const DEFAULT_PAPER_SIZE = 'LETTER';
const DEFAULT_MARGIN = UNITS_PER_INCH * 0.75;


/**
 * Options for the pdf() function.
 */
const defaultOptions = {
  save: false, // TODO remove this, its only here for now because its convenient
  fileName: 'cytoscape.pdf',
  includeSvgLayers: false,
  full: false,
  bg: false, // HEX color code
  paperSize: DEFAULT_PAPER_SIZE, // one of the values in the PAPER_SIZES enum, or 'CUSTOM'
  orientation: 'portrait', // 'portrait' or 'landscape'
  width: null,  // paper width  in "PostScript points", 72 units per inch
  height: null, // paper height in "PostScript points", 72 units per inch
  margin: DEFAULT_MARGIN, // margin in "PostScript points",
  debug: false, // if true will log debug info to the console
};


/**
 * Register pdf() function as a cytoscape.js extension.
 */
function register(cytoscape) {
  if(!cytoscape) { return; }
  cytoscape('core', 'pdf', pdfExport);
};

// expose to global cytoscape (i.e. window.cytoscape)
if(typeof cytoscape !== 'undefined') { 
  register(cytoscape);
}

// housekeeping to make pdfkit happy
window.PDFDocument = pdfkit__WEBPACK_IMPORTED_MODULE_2__["default"];
window.blobStream = (blob_stream__WEBPACK_IMPORTED_MODULE_3___default());


/**
 * The main entrypoint.
 */
async function pdfExport(options) {
  options = { ...defaultOptions, ...options };
  if(options.debug) {
    console.log('pdfExport options', options);
  }
  const cy = this;

  const blob = await createPdfBlob(cy, options);
  if(options.save) {
    file_saver__WEBPACK_IMPORTED_MODULE_4___default()(blob, options.fileName, true);
  } else {
    return blob;
  }
}


/**
 * Prepare the cytoscape.js canvas renderer for drawing to PDF.
 */
function initRenderer(cy) {
  const renderer = cy.renderer();
  const allEles = cy.elements();

  // Some caches need to be cleared.
  allEles.dirtyBoundingBoxCache();
  allEles.dirtyCompoundBoundsCache();
  allEles.dirtyStyleCache();

  // Cached Path2D objects are used for clipping, pdfkit doesn't support that.
  const paths = new Map();
  for(const ele of allEles) {
    paths.set(ele.id(), ele.rscratch('pathCache'));
  }
  allEles.removeRscratch('pathCache'); 

  // pdfkit doesn't support Path2D
  const path2dEnabled = renderer.path2dEnabled();
  renderer.path2dEnabled(false);

  return function restore() {
    for(const ele of allEles) {
      ele.rscratch('pathCache', paths.get(ele.id()));
    }
    renderer.path2dEnabled(path2dEnabled);
  };
}


function getPaperSize(options) {
  if(options.paperSize === 'CUSTOM') {
    if(options.width > 0 && options.height > 0) {
      return [ options.width, options.height ];
    }
    console.warn(\`paperSize=CUSTOM but valid width/height not provided, using \${DEFAULT_PAPER_SIZE} instead\`);
    return PAPER_SIZES[DEFAULT_PAPER_SIZE];
  }

  let size = PAPER_SIZES[options.paperSize] || PAPER_SIZES[DEFAULT_PAPER_SIZE];
  if(options.orientation === 'landscape' || options.orientation === 'LANDSCAPE') {
    return size.reverse();
  }
  return size;
}


/**
 * Create the PDF.
 */
function createPdfBlob(cy, options) {
  const renderer = cy.renderer();
  const eles = cy.mutableElements();
  const bb = eles.boundingBox();

  const { margin } = options;
  const [ paperWidth, paperHeight ] = getPaperSize(options); 
  const paperDrawWidth  = paperWidth  - (margin * 2);
  const paperDrawHeight = paperHeight - (margin * 2);

  // Fit the network to the paper drawing region
  let scale, width, height;
  if(options.full) {
    scale = Math.min(paperDrawWidth / bb.w, paperDrawHeight / bb.h);
    width  = bb.w;
    height = bb.h;
  } else {
    const [,, containerWidth, containerHeight ] = renderer.findContainerClientCoords();
    scale = Math.min(paperDrawWidth / containerWidth, paperDrawHeight / containerHeight);
    width  = containerWidth;
    height = containerHeight;
  }

  if(options.debug) {
    console.log('paper draw area width/height', paperDrawWidth, paperDrawHeight);
    console.log('network width/height', width, height);
    console.log('scale', scale);
  }

  // Record the calls to the canvas API, but don't actually draw anything yet.
  const eventBuffer = (0,_canvas2event_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.debug);
  const proxy = eventBuffer.proxy; // The proxy is a stand-in for CanvasRenderingContext2D

  // Initialize the renderer
  const restoreRenderer = initRenderer(cy);
  const zsortedEles = renderer.getCachedZSortedEles();

  // Setup the viewport
  proxy.translate(margin, margin);
  proxy.scale(scale, scale);
  if(options.bg) {
    proxy.background(0, 0, width, height, options.bg);
  }
  proxy.rect(0, 0, width, height);
  proxy.clip();

  if(options.full) {
    proxy.translate(-bb.x1, -bb.y1);
  } else {
    const [ pan, zoom ] = [ cy.pan(), cy.zoom() ];
    proxy.translate(pan.x, pan.y);
    proxy.scale(zoom, zoom);
  }

  // Draw the network (ie record drawing events)
  if(options.includeSvgLayers) {
    const svgLayers = getSvgLayers(cy);
    proxy.drawSvgLayers(svgLayers.bg);
    renderer.drawElements(proxy, zsortedEles);
    proxy.drawSvgLayers(svgLayers.fg);
  } else {
    renderer.drawElements(proxy, zsortedEles);
  }

  proxy.end();
  restoreRenderer();

  // Convert the canvas API 'events'
  if(options.debug) {
    console.log("Canvas events...")
    eventBuffer.events.forEach(evt => console.log(evt));
  }

  eventBuffer.convertEvents();

  if(options.debug) {
    console.log("PDF events...")
    eventBuffer.events.forEach(evt => console.log(evt));
  }

  // Now draw to the PDF context
  const stream = blob_stream__WEBPACK_IMPORTED_MODULE_3___default()();
  const ctx = new _event2pdf_js__WEBPACK_IMPORTED_MODULE_1__["default"](stream, paperWidth, paperHeight, options.debug);
  const p = createBlobPromise(ctx);

  eventBuffer.runDrawEvents(ctx);

  return p;
};


function createBlobPromise(ctx) {
  return new Promise((resolve, reject) => {
    try {
      ctx.stream.on('finish', () => {
        const blob = ctx.stream.toBlob("application/pdf");
        resolve(blob);
      });
    } catch(err) {
      reject(err);
    }
  });
}



function getSvgLayers(cy) {
  const isTag = (ele, tagName) =>
    ele.tagName && ele.tagName.toLowerCase() === tagName.toLowerCase();

  const bgLayers = [];
  const fgLayers = [];
  const containerDiv = cy.container().children[0];
  if(isTag(containerDiv, 'div')) {
    let bg = true;
    for(const layer of containerDiv.children) {
      if(isTag(layer, 'svg')) {
        (bg ? bgLayers : fgLayers).push(layer);
      } else if(isTag(layer, 'canvas')) {
        bg = false;
      }
    }
  }
  return {
    bg: bgLayers,
    fg: fgLayers
  }
}


//# sourceURL=webpack://cytoscape-pdf-export/./src/pdf-export.js?`)},"./src/pdfkit-virtual-files.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ "./node_modules/pdfkit/js/virtual-fs.js");
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var pdfkit_js_data_Courier_Bold_afm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pdfkit/js/data/Courier-Bold.afm */ "./node_modules/pdfkit/js/data/Courier-Bold.afm");
/* harmony import */ var pdfkit_js_data_Courier_BoldOblique_afm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pdfkit/js/data/Courier-BoldOblique.afm */ "./node_modules/pdfkit/js/data/Courier-BoldOblique.afm");
/* harmony import */ var pdfkit_js_data_Courier_Oblique_afm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! pdfkit/js/data/Courier-Oblique.afm */ "./node_modules/pdfkit/js/data/Courier-Oblique.afm");
/* harmony import */ var pdfkit_js_data_Courier_afm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! pdfkit/js/data/Courier.afm */ "./node_modules/pdfkit/js/data/Courier.afm");
/* harmony import */ var pdfkit_js_data_Helvetica_Bold_afm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! pdfkit/js/data/Helvetica-Bold.afm */ "./node_modules/pdfkit/js/data/Helvetica-Bold.afm");
/* harmony import */ var pdfkit_js_data_Helvetica_BoldOblique_afm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! pdfkit/js/data/Helvetica-BoldOblique.afm */ "./node_modules/pdfkit/js/data/Helvetica-BoldOblique.afm");
/* harmony import */ var pdfkit_js_data_Helvetica_Oblique_afm__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! pdfkit/js/data/Helvetica-Oblique.afm */ "./node_modules/pdfkit/js/data/Helvetica-Oblique.afm");
/* harmony import */ var pdfkit_js_data_Helvetica_afm__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! pdfkit/js/data/Helvetica.afm */ "./node_modules/pdfkit/js/data/Helvetica.afm");
/* harmony import */ var pdfkit_js_data_Symbol_afm__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! pdfkit/js/data/Symbol.afm */ "./node_modules/pdfkit/js/data/Symbol.afm");
/* harmony import */ var pdfkit_js_data_Times_Bold_afm__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! pdfkit/js/data/Times-Bold.afm */ "./node_modules/pdfkit/js/data/Times-Bold.afm");
/* harmony import */ var pdfkit_js_data_Times_BoldItalic_afm__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! pdfkit/js/data/Times-BoldItalic.afm */ "./node_modules/pdfkit/js/data/Times-BoldItalic.afm");
/* harmony import */ var pdfkit_js_data_Times_Italic_afm__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! pdfkit/js/data/Times-Italic.afm */ "./node_modules/pdfkit/js/data/Times-Italic.afm");
/* harmony import */ var pdfkit_js_data_Times_Roman_afm__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! pdfkit/js/data/Times-Roman.afm */ "./node_modules/pdfkit/js/data/Times-Roman.afm");
/* harmony import */ var pdfkit_js_data_ZapfDingbats_afm__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! pdfkit/js/data/ZapfDingbats.afm */ "./node_modules/pdfkit/js/data/ZapfDingbats.afm");
// the fs here is not node fs but the provided virtual one


function registerBinaryFiles(ctx) {
  ctx.keys().forEach(key => {
    // extracts "./" from beginning of the key
    fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(key.substring(2), ctx(key));
  });
}

function registerAFMFonts(ctx) {
  ctx.keys().forEach(key => {
    const match = key.match(/([^/]*\\.afm$)/);
    if (match) {
      // afm files must be stored on data path
      fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(\`data/\${match[0]}\`, ctx(key));
    }
  });
}

// register all files found in assets folder (relative to src)
//registerBinaryFiles(require.context('./static-assets', true));

// register AFM fonts distributed with pdfkit
// is good practice to register only required fonts to avoid the bundle size increase too much
registerAFMFonts(__webpack_require__("./node_modules/pdfkit/js/data sync Helvetica.*\\\\.afm$"));


// the content file is returned as is (webpack is configured to load *.afm files as asset/source)
// register files imported directly
// https://github.com/blikblum/pdfkit-webpack-example/issues/1















fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Courier-Bold.afm', pdfkit_js_data_Courier_Bold_afm__WEBPACK_IMPORTED_MODULE_1__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Courier-BoldOblique.afm', pdfkit_js_data_Courier_BoldOblique_afm__WEBPACK_IMPORTED_MODULE_2__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Courier-Oblique.afm', pdfkit_js_data_Courier_Oblique_afm__WEBPACK_IMPORTED_MODULE_3__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Courier.afm', pdfkit_js_data_Courier_afm__WEBPACK_IMPORTED_MODULE_4__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Helvetica-Bold.afm', pdfkit_js_data_Helvetica_Bold_afm__WEBPACK_IMPORTED_MODULE_5__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Helvetica-BoldOblique.afm', pdfkit_js_data_Helvetica_BoldOblique_afm__WEBPACK_IMPORTED_MODULE_6__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Helvetica-Oblique.afm', pdfkit_js_data_Helvetica_Oblique_afm__WEBPACK_IMPORTED_MODULE_7__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Helvetica.afm', pdfkit_js_data_Helvetica_afm__WEBPACK_IMPORTED_MODULE_8__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Symbol.afm', pdfkit_js_data_Symbol_afm__WEBPACK_IMPORTED_MODULE_9__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Times-Bold.afm', pdfkit_js_data_Times_Bold_afm__WEBPACK_IMPORTED_MODULE_10__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Times-BoldItalic.afm', pdfkit_js_data_Times_BoldItalic_afm__WEBPACK_IMPORTED_MODULE_11__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Times-Italic.afm', pdfkit_js_data_Times_Italic_afm__WEBPACK_IMPORTED_MODULE_12__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/Times-Roman.afm', pdfkit_js_data_Times_Roman_afm__WEBPACK_IMPORTED_MODULE_13__);
fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync('data/ZapfDingbats.af', pdfkit_js_data_ZapfDingbats_afm__WEBPACK_IMPORTED_MODULE_14__);



//# sourceURL=webpack://cytoscape-pdf-export/./src/pdfkit-virtual-files.js?`)},"./node_modules/pdfkit/js/data/Courier-Bold.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nComment Creation Date: Mon Jun 23 16:28:00 1997\\r\\nComment UniqueID 43048\\r\\nComment VMusage 41139 52164\\r\\nFontName Courier-Bold\\r\\nFullName Courier Bold\\r\\nFamilyName Courier\\r\\nWeight Bold\\r\\nItalicAngle 0\\r\\nIsFixedPitch true\\r\\nCharacterSet ExtendedRoman\\r\\nFontBBox -113 -250 749 801 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 003.000\\r\\nNotice Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nEncodingScheme AdobeStandardEncoding\\r\\nCapHeight 562\\r\\nXHeight 439\\r\\nAscender 629\\r\\nDescender -157\\r\\nStdHW 84\\r\\nStdVW 106\\r\\nStartCharMetrics 315\\r\\nC 32 ; WX 600 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 600 ; N exclam ; B 202 -15 398 572 ;\\r\\nC 34 ; WX 600 ; N quotedbl ; B 135 277 465 562 ;\\r\\nC 35 ; WX 600 ; N numbersign ; B 56 -45 544 651 ;\\r\\nC 36 ; WX 600 ; N dollar ; B 82 -126 519 666 ;\\r\\nC 37 ; WX 600 ; N percent ; B 5 -15 595 616 ;\\r\\nC 38 ; WX 600 ; N ampersand ; B 36 -15 546 543 ;\\r\\nC 39 ; WX 600 ; N quoteright ; B 171 277 423 562 ;\\r\\nC 40 ; WX 600 ; N parenleft ; B 219 -102 461 616 ;\\r\\nC 41 ; WX 600 ; N parenright ; B 139 -102 381 616 ;\\r\\nC 42 ; WX 600 ; N asterisk ; B 91 219 509 601 ;\\r\\nC 43 ; WX 600 ; N plus ; B 71 39 529 478 ;\\r\\nC 44 ; WX 600 ; N comma ; B 123 -111 393 174 ;\\r\\nC 45 ; WX 600 ; N hyphen ; B 100 203 500 313 ;\\r\\nC 46 ; WX 600 ; N period ; B 192 -15 408 171 ;\\r\\nC 47 ; WX 600 ; N slash ; B 98 -77 502 626 ;\\r\\nC 48 ; WX 600 ; N zero ; B 87 -15 513 616 ;\\r\\nC 49 ; WX 600 ; N one ; B 81 0 539 616 ;\\r\\nC 50 ; WX 600 ; N two ; B 61 0 499 616 ;\\r\\nC 51 ; WX 600 ; N three ; B 63 -15 501 616 ;\\r\\nC 52 ; WX 600 ; N four ; B 53 0 507 616 ;\\r\\nC 53 ; WX 600 ; N five ; B 70 -15 521 601 ;\\r\\nC 54 ; WX 600 ; N six ; B 90 -15 521 616 ;\\r\\nC 55 ; WX 600 ; N seven ; B 55 0 494 601 ;\\r\\nC 56 ; WX 600 ; N eight ; B 83 -15 517 616 ;\\r\\nC 57 ; WX 600 ; N nine ; B 79 -15 510 616 ;\\r\\nC 58 ; WX 600 ; N colon ; B 191 -15 407 425 ;\\r\\nC 59 ; WX 600 ; N semicolon ; B 123 -111 408 425 ;\\r\\nC 60 ; WX 600 ; N less ; B 66 15 523 501 ;\\r\\nC 61 ; WX 600 ; N equal ; B 71 118 529 398 ;\\r\\nC 62 ; WX 600 ; N greater ; B 77 15 534 501 ;\\r\\nC 63 ; WX 600 ; N question ; B 98 -14 501 580 ;\\r\\nC 64 ; WX 600 ; N at ; B 16 -15 584 616 ;\\r\\nC 65 ; WX 600 ; N A ; B -9 0 609 562 ;\\r\\nC 66 ; WX 600 ; N B ; B 30 0 573 562 ;\\r\\nC 67 ; WX 600 ; N C ; B 22 -18 560 580 ;\\r\\nC 68 ; WX 600 ; N D ; B 30 0 594 562 ;\\r\\nC 69 ; WX 600 ; N E ; B 25 0 560 562 ;\\r\\nC 70 ; WX 600 ; N F ; B 39 0 570 562 ;\\r\\nC 71 ; WX 600 ; N G ; B 22 -18 594 580 ;\\r\\nC 72 ; WX 600 ; N H ; B 20 0 580 562 ;\\r\\nC 73 ; WX 600 ; N I ; B 77 0 523 562 ;\\r\\nC 74 ; WX 600 ; N J ; B 37 -18 601 562 ;\\r\\nC 75 ; WX 600 ; N K ; B 21 0 599 562 ;\\r\\nC 76 ; WX 600 ; N L ; B 39 0 578 562 ;\\r\\nC 77 ; WX 600 ; N M ; B -2 0 602 562 ;\\r\\nC 78 ; WX 600 ; N N ; B 8 -12 610 562 ;\\r\\nC 79 ; WX 600 ; N O ; B 22 -18 578 580 ;\\r\\nC 80 ; WX 600 ; N P ; B 48 0 559 562 ;\\r\\nC 81 ; WX 600 ; N Q ; B 32 -138 578 580 ;\\r\\nC 82 ; WX 600 ; N R ; B 24 0 599 562 ;\\r\\nC 83 ; WX 600 ; N S ; B 47 -22 553 582 ;\\r\\nC 84 ; WX 600 ; N T ; B 21 0 579 562 ;\\r\\nC 85 ; WX 600 ; N U ; B 4 -18 596 562 ;\\r\\nC 86 ; WX 600 ; N V ; B -13 0 613 562 ;\\r\\nC 87 ; WX 600 ; N W ; B -18 0 618 562 ;\\r\\nC 88 ; WX 600 ; N X ; B 12 0 588 562 ;\\r\\nC 89 ; WX 600 ; N Y ; B 12 0 589 562 ;\\r\\nC 90 ; WX 600 ; N Z ; B 62 0 539 562 ;\\r\\nC 91 ; WX 600 ; N bracketleft ; B 245 -102 475 616 ;\\r\\nC 92 ; WX 600 ; N backslash ; B 99 -77 503 626 ;\\r\\nC 93 ; WX 600 ; N bracketright ; B 125 -102 355 616 ;\\r\\nC 94 ; WX 600 ; N asciicircum ; B 108 250 492 616 ;\\r\\nC 95 ; WX 600 ; N underscore ; B 0 -125 600 -75 ;\\r\\nC 96 ; WX 600 ; N quoteleft ; B 178 277 428 562 ;\\r\\nC 97 ; WX 600 ; N a ; B 35 -15 570 454 ;\\r\\nC 98 ; WX 600 ; N b ; B 0 -15 584 626 ;\\r\\nC 99 ; WX 600 ; N c ; B 40 -15 545 459 ;\\r\\nC 100 ; WX 600 ; N d ; B 20 -15 591 626 ;\\r\\nC 101 ; WX 600 ; N e ; B 40 -15 563 454 ;\\r\\nC 102 ; WX 600 ; N f ; B 83 0 547 626 ; L i fi ; L l fl ;\\r\\nC 103 ; WX 600 ; N g ; B 30 -146 580 454 ;\\r\\nC 104 ; WX 600 ; N h ; B 5 0 592 626 ;\\r\\nC 105 ; WX 600 ; N i ; B 77 0 523 658 ;\\r\\nC 106 ; WX 600 ; N j ; B 63 -146 440 658 ;\\r\\nC 107 ; WX 600 ; N k ; B 20 0 585 626 ;\\r\\nC 108 ; WX 600 ; N l ; B 77 0 523 626 ;\\r\\nC 109 ; WX 600 ; N m ; B -22 0 626 454 ;\\r\\nC 110 ; WX 600 ; N n ; B 18 0 592 454 ;\\r\\nC 111 ; WX 600 ; N o ; B 30 -15 570 454 ;\\r\\nC 112 ; WX 600 ; N p ; B -1 -142 570 454 ;\\r\\nC 113 ; WX 600 ; N q ; B 20 -142 591 454 ;\\r\\nC 114 ; WX 600 ; N r ; B 47 0 580 454 ;\\r\\nC 115 ; WX 600 ; N s ; B 68 -17 535 459 ;\\r\\nC 116 ; WX 600 ; N t ; B 47 -15 532 562 ;\\r\\nC 117 ; WX 600 ; N u ; B -1 -15 569 439 ;\\r\\nC 118 ; WX 600 ; N v ; B -1 0 601 439 ;\\r\\nC 119 ; WX 600 ; N w ; B -18 0 618 439 ;\\r\\nC 120 ; WX 600 ; N x ; B 6 0 594 439 ;\\r\\nC 121 ; WX 600 ; N y ; B -4 -142 601 439 ;\\r\\nC 122 ; WX 600 ; N z ; B 81 0 520 439 ;\\r\\nC 123 ; WX 600 ; N braceleft ; B 160 -102 464 616 ;\\r\\nC 124 ; WX 600 ; N bar ; B 255 -250 345 750 ;\\r\\nC 125 ; WX 600 ; N braceright ; B 136 -102 440 616 ;\\r\\nC 126 ; WX 600 ; N asciitilde ; B 71 153 530 356 ;\\r\\nC 161 ; WX 600 ; N exclamdown ; B 202 -146 398 449 ;\\r\\nC 162 ; WX 600 ; N cent ; B 66 -49 518 614 ;\\r\\nC 163 ; WX 600 ; N sterling ; B 72 -28 558 611 ;\\r\\nC 164 ; WX 600 ; N fraction ; B 25 -60 576 661 ;\\r\\nC 165 ; WX 600 ; N yen ; B 10 0 590 562 ;\\r\\nC 166 ; WX 600 ; N florin ; B -30 -131 572 616 ;\\r\\nC 167 ; WX 600 ; N section ; B 83 -70 517 580 ;\\r\\nC 168 ; WX 600 ; N currency ; B 54 49 546 517 ;\\r\\nC 169 ; WX 600 ; N quotesingle ; B 227 277 373 562 ;\\r\\nC 170 ; WX 600 ; N quotedblleft ; B 71 277 535 562 ;\\r\\nC 171 ; WX 600 ; N guillemotleft ; B 8 70 553 446 ;\\r\\nC 172 ; WX 600 ; N guilsinglleft ; B 141 70 459 446 ;\\r\\nC 173 ; WX 600 ; N guilsinglright ; B 141 70 459 446 ;\\r\\nC 174 ; WX 600 ; N fi ; B 12 0 593 626 ;\\r\\nC 175 ; WX 600 ; N fl ; B 12 0 593 626 ;\\r\\nC 177 ; WX 600 ; N endash ; B 65 203 535 313 ;\\r\\nC 178 ; WX 600 ; N dagger ; B 106 -70 494 580 ;\\r\\nC 179 ; WX 600 ; N daggerdbl ; B 106 -70 494 580 ;\\r\\nC 180 ; WX 600 ; N periodcentered ; B 196 165 404 351 ;\\r\\nC 182 ; WX 600 ; N paragraph ; B 6 -70 576 580 ;\\r\\nC 183 ; WX 600 ; N bullet ; B 140 132 460 430 ;\\r\\nC 184 ; WX 600 ; N quotesinglbase ; B 175 -142 427 143 ;\\r\\nC 185 ; WX 600 ; N quotedblbase ; B 65 -142 529 143 ;\\r\\nC 186 ; WX 600 ; N quotedblright ; B 61 277 525 562 ;\\r\\nC 187 ; WX 600 ; N guillemotright ; B 47 70 592 446 ;\\r\\nC 188 ; WX 600 ; N ellipsis ; B 26 -15 574 116 ;\\r\\nC 189 ; WX 600 ; N perthousand ; B -113 -15 713 616 ;\\r\\nC 191 ; WX 600 ; N questiondown ; B 99 -146 502 449 ;\\r\\nC 193 ; WX 600 ; N grave ; B 132 508 395 661 ;\\r\\nC 194 ; WX 600 ; N acute ; B 205 508 468 661 ;\\r\\nC 195 ; WX 600 ; N circumflex ; B 103 483 497 657 ;\\r\\nC 196 ; WX 600 ; N tilde ; B 89 493 512 636 ;\\r\\nC 197 ; WX 600 ; N macron ; B 88 505 512 585 ;\\r\\nC 198 ; WX 600 ; N breve ; B 83 468 517 631 ;\\r\\nC 199 ; WX 600 ; N dotaccent ; B 230 498 370 638 ;\\r\\nC 200 ; WX 600 ; N dieresis ; B 128 498 472 638 ;\\r\\nC 202 ; WX 600 ; N ring ; B 198 481 402 678 ;\\r\\nC 203 ; WX 600 ; N cedilla ; B 205 -206 387 0 ;\\r\\nC 205 ; WX 600 ; N hungarumlaut ; B 68 488 588 661 ;\\r\\nC 206 ; WX 600 ; N ogonek ; B 169 -199 400 0 ;\\r\\nC 207 ; WX 600 ; N caron ; B 103 493 497 667 ;\\r\\nC 208 ; WX 600 ; N emdash ; B -10 203 610 313 ;\\r\\nC 225 ; WX 600 ; N AE ; B -29 0 602 562 ;\\r\\nC 227 ; WX 600 ; N ordfeminine ; B 147 196 453 580 ;\\r\\nC 232 ; WX 600 ; N Lslash ; B 39 0 578 562 ;\\r\\nC 233 ; WX 600 ; N Oslash ; B 22 -22 578 584 ;\\r\\nC 234 ; WX 600 ; N OE ; B -25 0 595 562 ;\\r\\nC 235 ; WX 600 ; N ordmasculine ; B 147 196 453 580 ;\\r\\nC 241 ; WX 600 ; N ae ; B -4 -15 601 454 ;\\r\\nC 245 ; WX 600 ; N dotlessi ; B 77 0 523 439 ;\\r\\nC 248 ; WX 600 ; N lslash ; B 77 0 523 626 ;\\r\\nC 249 ; WX 600 ; N oslash ; B 30 -24 570 463 ;\\r\\nC 250 ; WX 600 ; N oe ; B -18 -15 611 454 ;\\r\\nC 251 ; WX 600 ; N germandbls ; B 22 -15 596 626 ;\\r\\nC -1 ; WX 600 ; N Idieresis ; B 77 0 523 761 ;\\r\\nC -1 ; WX 600 ; N eacute ; B 40 -15 563 661 ;\\r\\nC -1 ; WX 600 ; N abreve ; B 35 -15 570 661 ;\\r\\nC -1 ; WX 600 ; N uhungarumlaut ; B -1 -15 628 661 ;\\r\\nC -1 ; WX 600 ; N ecaron ; B 40 -15 563 667 ;\\r\\nC -1 ; WX 600 ; N Ydieresis ; B 12 0 589 761 ;\\r\\nC -1 ; WX 600 ; N divide ; B 71 16 529 500 ;\\r\\nC -1 ; WX 600 ; N Yacute ; B 12 0 589 784 ;\\r\\nC -1 ; WX 600 ; N Acircumflex ; B -9 0 609 780 ;\\r\\nC -1 ; WX 600 ; N aacute ; B 35 -15 570 661 ;\\r\\nC -1 ; WX 600 ; N Ucircumflex ; B 4 -18 596 780 ;\\r\\nC -1 ; WX 600 ; N yacute ; B -4 -142 601 661 ;\\r\\nC -1 ; WX 600 ; N scommaaccent ; B 68 -250 535 459 ;\\r\\nC -1 ; WX 600 ; N ecircumflex ; B 40 -15 563 657 ;\\r\\nC -1 ; WX 600 ; N Uring ; B 4 -18 596 801 ;\\r\\nC -1 ; WX 600 ; N Udieresis ; B 4 -18 596 761 ;\\r\\nC -1 ; WX 600 ; N aogonek ; B 35 -199 586 454 ;\\r\\nC -1 ; WX 600 ; N Uacute ; B 4 -18 596 784 ;\\r\\nC -1 ; WX 600 ; N uogonek ; B -1 -199 585 439 ;\\r\\nC -1 ; WX 600 ; N Edieresis ; B 25 0 560 761 ;\\r\\nC -1 ; WX 600 ; N Dcroat ; B 30 0 594 562 ;\\r\\nC -1 ; WX 600 ; N commaaccent ; B 205 -250 397 -57 ;\\r\\nC -1 ; WX 600 ; N copyright ; B 0 -18 600 580 ;\\r\\nC -1 ; WX 600 ; N Emacron ; B 25 0 560 708 ;\\r\\nC -1 ; WX 600 ; N ccaron ; B 40 -15 545 667 ;\\r\\nC -1 ; WX 600 ; N aring ; B 35 -15 570 678 ;\\r\\nC -1 ; WX 600 ; N Ncommaaccent ; B 8 -250 610 562 ;\\r\\nC -1 ; WX 600 ; N lacute ; B 77 0 523 801 ;\\r\\nC -1 ; WX 600 ; N agrave ; B 35 -15 570 661 ;\\r\\nC -1 ; WX 600 ; N Tcommaaccent ; B 21 -250 579 562 ;\\r\\nC -1 ; WX 600 ; N Cacute ; B 22 -18 560 784 ;\\r\\nC -1 ; WX 600 ; N atilde ; B 35 -15 570 636 ;\\r\\nC -1 ; WX 600 ; N Edotaccent ; B 25 0 560 761 ;\\r\\nC -1 ; WX 600 ; N scaron ; B 68 -17 535 667 ;\\r\\nC -1 ; WX 600 ; N scedilla ; B 68 -206 535 459 ;\\r\\nC -1 ; WX 600 ; N iacute ; B 77 0 523 661 ;\\r\\nC -1 ; WX 600 ; N lozenge ; B 66 0 534 740 ;\\r\\nC -1 ; WX 600 ; N Rcaron ; B 24 0 599 790 ;\\r\\nC -1 ; WX 600 ; N Gcommaaccent ; B 22 -250 594 580 ;\\r\\nC -1 ; WX 600 ; N ucircumflex ; B -1 -15 569 657 ;\\r\\nC -1 ; WX 600 ; N acircumflex ; B 35 -15 570 657 ;\\r\\nC -1 ; WX 600 ; N Amacron ; B -9 0 609 708 ;\\r\\nC -1 ; WX 600 ; N rcaron ; B 47 0 580 667 ;\\r\\nC -1 ; WX 600 ; N ccedilla ; B 40 -206 545 459 ;\\r\\nC -1 ; WX 600 ; N Zdotaccent ; B 62 0 539 761 ;\\r\\nC -1 ; WX 600 ; N Thorn ; B 48 0 557 562 ;\\r\\nC -1 ; WX 600 ; N Omacron ; B 22 -18 578 708 ;\\r\\nC -1 ; WX 600 ; N Racute ; B 24 0 599 784 ;\\r\\nC -1 ; WX 600 ; N Sacute ; B 47 -22 553 784 ;\\r\\nC -1 ; WX 600 ; N dcaron ; B 20 -15 727 626 ;\\r\\nC -1 ; WX 600 ; N Umacron ; B 4 -18 596 708 ;\\r\\nC -1 ; WX 600 ; N uring ; B -1 -15 569 678 ;\\r\\nC -1 ; WX 600 ; N threesuperior ; B 138 222 433 616 ;\\r\\nC -1 ; WX 600 ; N Ograve ; B 22 -18 578 784 ;\\r\\nC -1 ; WX 600 ; N Agrave ; B -9 0 609 784 ;\\r\\nC -1 ; WX 600 ; N Abreve ; B -9 0 609 784 ;\\r\\nC -1 ; WX 600 ; N multiply ; B 81 39 520 478 ;\\r\\nC -1 ; WX 600 ; N uacute ; B -1 -15 569 661 ;\\r\\nC -1 ; WX 600 ; N Tcaron ; B 21 0 579 790 ;\\r\\nC -1 ; WX 600 ; N partialdiff ; B 63 -38 537 728 ;\\r\\nC -1 ; WX 600 ; N ydieresis ; B -4 -142 601 638 ;\\r\\nC -1 ; WX 600 ; N Nacute ; B 8 -12 610 784 ;\\r\\nC -1 ; WX 600 ; N icircumflex ; B 73 0 523 657 ;\\r\\nC -1 ; WX 600 ; N Ecircumflex ; B 25 0 560 780 ;\\r\\nC -1 ; WX 600 ; N adieresis ; B 35 -15 570 638 ;\\r\\nC -1 ; WX 600 ; N edieresis ; B 40 -15 563 638 ;\\r\\nC -1 ; WX 600 ; N cacute ; B 40 -15 545 661 ;\\r\\nC -1 ; WX 600 ; N nacute ; B 18 0 592 661 ;\\r\\nC -1 ; WX 600 ; N umacron ; B -1 -15 569 585 ;\\r\\nC -1 ; WX 600 ; N Ncaron ; B 8 -12 610 790 ;\\r\\nC -1 ; WX 600 ; N Iacute ; B 77 0 523 784 ;\\r\\nC -1 ; WX 600 ; N plusminus ; B 71 24 529 515 ;\\r\\nC -1 ; WX 600 ; N brokenbar ; B 255 -175 345 675 ;\\r\\nC -1 ; WX 600 ; N registered ; B 0 -18 600 580 ;\\r\\nC -1 ; WX 600 ; N Gbreve ; B 22 -18 594 784 ;\\r\\nC -1 ; WX 600 ; N Idotaccent ; B 77 0 523 761 ;\\r\\nC -1 ; WX 600 ; N summation ; B 15 -10 586 706 ;\\r\\nC -1 ; WX 600 ; N Egrave ; B 25 0 560 784 ;\\r\\nC -1 ; WX 600 ; N racute ; B 47 0 580 661 ;\\r\\nC -1 ; WX 600 ; N omacron ; B 30 -15 570 585 ;\\r\\nC -1 ; WX 600 ; N Zacute ; B 62 0 539 784 ;\\r\\nC -1 ; WX 600 ; N Zcaron ; B 62 0 539 790 ;\\r\\nC -1 ; WX 600 ; N greaterequal ; B 26 0 523 696 ;\\r\\nC -1 ; WX 600 ; N Eth ; B 30 0 594 562 ;\\r\\nC -1 ; WX 600 ; N Ccedilla ; B 22 -206 560 580 ;\\r\\nC -1 ; WX 600 ; N lcommaaccent ; B 77 -250 523 626 ;\\r\\nC -1 ; WX 600 ; N tcaron ; B 47 -15 532 703 ;\\r\\nC -1 ; WX 600 ; N eogonek ; B 40 -199 563 454 ;\\r\\nC -1 ; WX 600 ; N Uogonek ; B 4 -199 596 562 ;\\r\\nC -1 ; WX 600 ; N Aacute ; B -9 0 609 784 ;\\r\\nC -1 ; WX 600 ; N Adieresis ; B -9 0 609 761 ;\\r\\nC -1 ; WX 600 ; N egrave ; B 40 -15 563 661 ;\\r\\nC -1 ; WX 600 ; N zacute ; B 81 0 520 661 ;\\r\\nC -1 ; WX 600 ; N iogonek ; B 77 -199 523 658 ;\\r\\nC -1 ; WX 600 ; N Oacute ; B 22 -18 578 784 ;\\r\\nC -1 ; WX 600 ; N oacute ; B 30 -15 570 661 ;\\r\\nC -1 ; WX 600 ; N amacron ; B 35 -15 570 585 ;\\r\\nC -1 ; WX 600 ; N sacute ; B 68 -17 535 661 ;\\r\\nC -1 ; WX 600 ; N idieresis ; B 77 0 523 618 ;\\r\\nC -1 ; WX 600 ; N Ocircumflex ; B 22 -18 578 780 ;\\r\\nC -1 ; WX 600 ; N Ugrave ; B 4 -18 596 784 ;\\r\\nC -1 ; WX 600 ; N Delta ; B 6 0 594 688 ;\\r\\nC -1 ; WX 600 ; N thorn ; B -14 -142 570 626 ;\\r\\nC -1 ; WX 600 ; N twosuperior ; B 143 230 436 616 ;\\r\\nC -1 ; WX 600 ; N Odieresis ; B 22 -18 578 761 ;\\r\\nC -1 ; WX 600 ; N mu ; B -1 -142 569 439 ;\\r\\nC -1 ; WX 600 ; N igrave ; B 77 0 523 661 ;\\r\\nC -1 ; WX 600 ; N ohungarumlaut ; B 30 -15 668 661 ;\\r\\nC -1 ; WX 600 ; N Eogonek ; B 25 -199 576 562 ;\\r\\nC -1 ; WX 600 ; N dcroat ; B 20 -15 591 626 ;\\r\\nC -1 ; WX 600 ; N threequarters ; B -47 -60 648 661 ;\\r\\nC -1 ; WX 600 ; N Scedilla ; B 47 -206 553 582 ;\\r\\nC -1 ; WX 600 ; N lcaron ; B 77 0 597 626 ;\\r\\nC -1 ; WX 600 ; N Kcommaaccent ; B 21 -250 599 562 ;\\r\\nC -1 ; WX 600 ; N Lacute ; B 39 0 578 784 ;\\r\\nC -1 ; WX 600 ; N trademark ; B -9 230 749 562 ;\\r\\nC -1 ; WX 600 ; N edotaccent ; B 40 -15 563 638 ;\\r\\nC -1 ; WX 600 ; N Igrave ; B 77 0 523 784 ;\\r\\nC -1 ; WX 600 ; N Imacron ; B 77 0 523 708 ;\\r\\nC -1 ; WX 600 ; N Lcaron ; B 39 0 637 562 ;\\r\\nC -1 ; WX 600 ; N onehalf ; B -47 -60 648 661 ;\\r\\nC -1 ; WX 600 ; N lessequal ; B 26 0 523 696 ;\\r\\nC -1 ; WX 600 ; N ocircumflex ; B 30 -15 570 657 ;\\r\\nC -1 ; WX 600 ; N ntilde ; B 18 0 592 636 ;\\r\\nC -1 ; WX 600 ; N Uhungarumlaut ; B 4 -18 638 784 ;\\r\\nC -1 ; WX 600 ; N Eacute ; B 25 0 560 784 ;\\r\\nC -1 ; WX 600 ; N emacron ; B 40 -15 563 585 ;\\r\\nC -1 ; WX 600 ; N gbreve ; B 30 -146 580 661 ;\\r\\nC -1 ; WX 600 ; N onequarter ; B -56 -60 656 661 ;\\r\\nC -1 ; WX 600 ; N Scaron ; B 47 -22 553 790 ;\\r\\nC -1 ; WX 600 ; N Scommaaccent ; B 47 -250 553 582 ;\\r\\nC -1 ; WX 600 ; N Ohungarumlaut ; B 22 -18 628 784 ;\\r\\nC -1 ; WX 600 ; N degree ; B 86 243 474 616 ;\\r\\nC -1 ; WX 600 ; N ograve ; B 30 -15 570 661 ;\\r\\nC -1 ; WX 600 ; N Ccaron ; B 22 -18 560 790 ;\\r\\nC -1 ; WX 600 ; N ugrave ; B -1 -15 569 661 ;\\r\\nC -1 ; WX 600 ; N radical ; B -19 -104 473 778 ;\\r\\nC -1 ; WX 600 ; N Dcaron ; B 30 0 594 790 ;\\r\\nC -1 ; WX 600 ; N rcommaaccent ; B 47 -250 580 454 ;\\r\\nC -1 ; WX 600 ; N Ntilde ; B 8 -12 610 759 ;\\r\\nC -1 ; WX 600 ; N otilde ; B 30 -15 570 636 ;\\r\\nC -1 ; WX 600 ; N Rcommaaccent ; B 24 -250 599 562 ;\\r\\nC -1 ; WX 600 ; N Lcommaaccent ; B 39 -250 578 562 ;\\r\\nC -1 ; WX 600 ; N Atilde ; B -9 0 609 759 ;\\r\\nC -1 ; WX 600 ; N Aogonek ; B -9 -199 625 562 ;\\r\\nC -1 ; WX 600 ; N Aring ; B -9 0 609 801 ;\\r\\nC -1 ; WX 600 ; N Otilde ; B 22 -18 578 759 ;\\r\\nC -1 ; WX 600 ; N zdotaccent ; B 81 0 520 638 ;\\r\\nC -1 ; WX 600 ; N Ecaron ; B 25 0 560 790 ;\\r\\nC -1 ; WX 600 ; N Iogonek ; B 77 -199 523 562 ;\\r\\nC -1 ; WX 600 ; N kcommaaccent ; B 20 -250 585 626 ;\\r\\nC -1 ; WX 600 ; N minus ; B 71 203 529 313 ;\\r\\nC -1 ; WX 600 ; N Icircumflex ; B 77 0 523 780 ;\\r\\nC -1 ; WX 600 ; N ncaron ; B 18 0 592 667 ;\\r\\nC -1 ; WX 600 ; N tcommaaccent ; B 47 -250 532 562 ;\\r\\nC -1 ; WX 600 ; N logicalnot ; B 71 103 529 413 ;\\r\\nC -1 ; WX 600 ; N odieresis ; B 30 -15 570 638 ;\\r\\nC -1 ; WX 600 ; N udieresis ; B -1 -15 569 638 ;\\r\\nC -1 ; WX 600 ; N notequal ; B 12 -47 537 563 ;\\r\\nC -1 ; WX 600 ; N gcommaaccent ; B 30 -146 580 714 ;\\r\\nC -1 ; WX 600 ; N eth ; B 58 -27 543 626 ;\\r\\nC -1 ; WX 600 ; N zcaron ; B 81 0 520 667 ;\\r\\nC -1 ; WX 600 ; N ncommaaccent ; B 18 -250 592 454 ;\\r\\nC -1 ; WX 600 ; N onesuperior ; B 153 230 447 616 ;\\r\\nC -1 ; WX 600 ; N imacron ; B 77 0 523 585 ;\\r\\nC -1 ; WX 600 ; N Euro ; B 0 0 0 0 ;\\r\\nEndCharMetrics\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Courier-Bold.afm?`)},"./node_modules/pdfkit/js/data/Courier-BoldOblique.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nComment Creation Date: Mon Jun 23 16:28:46 1997\\r\\nComment UniqueID 43049\\r\\nComment VMusage 17529 79244\\r\\nFontName Courier-BoldOblique\\r\\nFullName Courier Bold Oblique\\r\\nFamilyName Courier\\r\\nWeight Bold\\r\\nItalicAngle -12\\r\\nIsFixedPitch true\\r\\nCharacterSet ExtendedRoman\\r\\nFontBBox -57 -250 869 801 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 003.000\\r\\nNotice Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nEncodingScheme AdobeStandardEncoding\\r\\nCapHeight 562\\r\\nXHeight 439\\r\\nAscender 629\\r\\nDescender -157\\r\\nStdHW 84\\r\\nStdVW 106\\r\\nStartCharMetrics 315\\r\\nC 32 ; WX 600 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 600 ; N exclam ; B 215 -15 495 572 ;\\r\\nC 34 ; WX 600 ; N quotedbl ; B 211 277 585 562 ;\\r\\nC 35 ; WX 600 ; N numbersign ; B 88 -45 641 651 ;\\r\\nC 36 ; WX 600 ; N dollar ; B 87 -126 630 666 ;\\r\\nC 37 ; WX 600 ; N percent ; B 101 -15 625 616 ;\\r\\nC 38 ; WX 600 ; N ampersand ; B 61 -15 595 543 ;\\r\\nC 39 ; WX 600 ; N quoteright ; B 229 277 543 562 ;\\r\\nC 40 ; WX 600 ; N parenleft ; B 265 -102 592 616 ;\\r\\nC 41 ; WX 600 ; N parenright ; B 117 -102 444 616 ;\\r\\nC 42 ; WX 600 ; N asterisk ; B 179 219 598 601 ;\\r\\nC 43 ; WX 600 ; N plus ; B 114 39 596 478 ;\\r\\nC 44 ; WX 600 ; N comma ; B 99 -111 430 174 ;\\r\\nC 45 ; WX 600 ; N hyphen ; B 143 203 567 313 ;\\r\\nC 46 ; WX 600 ; N period ; B 206 -15 427 171 ;\\r\\nC 47 ; WX 600 ; N slash ; B 90 -77 626 626 ;\\r\\nC 48 ; WX 600 ; N zero ; B 135 -15 593 616 ;\\r\\nC 49 ; WX 600 ; N one ; B 93 0 562 616 ;\\r\\nC 50 ; WX 600 ; N two ; B 61 0 594 616 ;\\r\\nC 51 ; WX 600 ; N three ; B 71 -15 571 616 ;\\r\\nC 52 ; WX 600 ; N four ; B 81 0 559 616 ;\\r\\nC 53 ; WX 600 ; N five ; B 77 -15 621 601 ;\\r\\nC 54 ; WX 600 ; N six ; B 135 -15 652 616 ;\\r\\nC 55 ; WX 600 ; N seven ; B 147 0 622 601 ;\\r\\nC 56 ; WX 600 ; N eight ; B 115 -15 604 616 ;\\r\\nC 57 ; WX 600 ; N nine ; B 75 -15 592 616 ;\\r\\nC 58 ; WX 600 ; N colon ; B 205 -15 480 425 ;\\r\\nC 59 ; WX 600 ; N semicolon ; B 99 -111 481 425 ;\\r\\nC 60 ; WX 600 ; N less ; B 120 15 613 501 ;\\r\\nC 61 ; WX 600 ; N equal ; B 96 118 614 398 ;\\r\\nC 62 ; WX 600 ; N greater ; B 97 15 589 501 ;\\r\\nC 63 ; WX 600 ; N question ; B 183 -14 592 580 ;\\r\\nC 64 ; WX 600 ; N at ; B 65 -15 642 616 ;\\r\\nC 65 ; WX 600 ; N A ; B -9 0 632 562 ;\\r\\nC 66 ; WX 600 ; N B ; B 30 0 630 562 ;\\r\\nC 67 ; WX 600 ; N C ; B 74 -18 675 580 ;\\r\\nC 68 ; WX 600 ; N D ; B 30 0 664 562 ;\\r\\nC 69 ; WX 600 ; N E ; B 25 0 670 562 ;\\r\\nC 70 ; WX 600 ; N F ; B 39 0 684 562 ;\\r\\nC 71 ; WX 600 ; N G ; B 74 -18 675 580 ;\\r\\nC 72 ; WX 600 ; N H ; B 20 0 700 562 ;\\r\\nC 73 ; WX 600 ; N I ; B 77 0 643 562 ;\\r\\nC 74 ; WX 600 ; N J ; B 58 -18 721 562 ;\\r\\nC 75 ; WX 600 ; N K ; B 21 0 692 562 ;\\r\\nC 76 ; WX 600 ; N L ; B 39 0 636 562 ;\\r\\nC 77 ; WX 600 ; N M ; B -2 0 722 562 ;\\r\\nC 78 ; WX 600 ; N N ; B 8 -12 730 562 ;\\r\\nC 79 ; WX 600 ; N O ; B 74 -18 645 580 ;\\r\\nC 80 ; WX 600 ; N P ; B 48 0 643 562 ;\\r\\nC 81 ; WX 600 ; N Q ; B 83 -138 636 580 ;\\r\\nC 82 ; WX 600 ; N R ; B 24 0 617 562 ;\\r\\nC 83 ; WX 600 ; N S ; B 54 -22 673 582 ;\\r\\nC 84 ; WX 600 ; N T ; B 86 0 679 562 ;\\r\\nC 85 ; WX 600 ; N U ; B 101 -18 716 562 ;\\r\\nC 86 ; WX 600 ; N V ; B 84 0 733 562 ;\\r\\nC 87 ; WX 600 ; N W ; B 79 0 738 562 ;\\r\\nC 88 ; WX 600 ; N X ; B 12 0 690 562 ;\\r\\nC 89 ; WX 600 ; N Y ; B 109 0 709 562 ;\\r\\nC 90 ; WX 600 ; N Z ; B 62 0 637 562 ;\\r\\nC 91 ; WX 600 ; N bracketleft ; B 223 -102 606 616 ;\\r\\nC 92 ; WX 600 ; N backslash ; B 222 -77 496 626 ;\\r\\nC 93 ; WX 600 ; N bracketright ; B 103 -102 486 616 ;\\r\\nC 94 ; WX 600 ; N asciicircum ; B 171 250 556 616 ;\\r\\nC 95 ; WX 600 ; N underscore ; B -27 -125 585 -75 ;\\r\\nC 96 ; WX 600 ; N quoteleft ; B 297 277 487 562 ;\\r\\nC 97 ; WX 600 ; N a ; B 61 -15 593 454 ;\\r\\nC 98 ; WX 600 ; N b ; B 13 -15 636 626 ;\\r\\nC 99 ; WX 600 ; N c ; B 81 -15 631 459 ;\\r\\nC 100 ; WX 600 ; N d ; B 60 -15 645 626 ;\\r\\nC 101 ; WX 600 ; N e ; B 81 -15 605 454 ;\\r\\nC 102 ; WX 600 ; N f ; B 83 0 677 626 ; L i fi ; L l fl ;\\r\\nC 103 ; WX 600 ; N g ; B 40 -146 674 454 ;\\r\\nC 104 ; WX 600 ; N h ; B 18 0 615 626 ;\\r\\nC 105 ; WX 600 ; N i ; B 77 0 546 658 ;\\r\\nC 106 ; WX 600 ; N j ; B 36 -146 580 658 ;\\r\\nC 107 ; WX 600 ; N k ; B 33 0 643 626 ;\\r\\nC 108 ; WX 600 ; N l ; B 77 0 546 626 ;\\r\\nC 109 ; WX 600 ; N m ; B -22 0 649 454 ;\\r\\nC 110 ; WX 600 ; N n ; B 18 0 615 454 ;\\r\\nC 111 ; WX 600 ; N o ; B 71 -15 622 454 ;\\r\\nC 112 ; WX 600 ; N p ; B -32 -142 622 454 ;\\r\\nC 113 ; WX 600 ; N q ; B 60 -142 685 454 ;\\r\\nC 114 ; WX 600 ; N r ; B 47 0 655 454 ;\\r\\nC 115 ; WX 600 ; N s ; B 66 -17 608 459 ;\\r\\nC 116 ; WX 600 ; N t ; B 118 -15 567 562 ;\\r\\nC 117 ; WX 600 ; N u ; B 70 -15 592 439 ;\\r\\nC 118 ; WX 600 ; N v ; B 70 0 695 439 ;\\r\\nC 119 ; WX 600 ; N w ; B 53 0 712 439 ;\\r\\nC 120 ; WX 600 ; N x ; B 6 0 671 439 ;\\r\\nC 121 ; WX 600 ; N y ; B -21 -142 695 439 ;\\r\\nC 122 ; WX 600 ; N z ; B 81 0 614 439 ;\\r\\nC 123 ; WX 600 ; N braceleft ; B 203 -102 595 616 ;\\r\\nC 124 ; WX 600 ; N bar ; B 201 -250 505 750 ;\\r\\nC 125 ; WX 600 ; N braceright ; B 114 -102 506 616 ;\\r\\nC 126 ; WX 600 ; N asciitilde ; B 120 153 590 356 ;\\r\\nC 161 ; WX 600 ; N exclamdown ; B 196 -146 477 449 ;\\r\\nC 162 ; WX 600 ; N cent ; B 121 -49 605 614 ;\\r\\nC 163 ; WX 600 ; N sterling ; B 106 -28 650 611 ;\\r\\nC 164 ; WX 600 ; N fraction ; B 22 -60 708 661 ;\\r\\nC 165 ; WX 600 ; N yen ; B 98 0 710 562 ;\\r\\nC 166 ; WX 600 ; N florin ; B -57 -131 702 616 ;\\r\\nC 167 ; WX 600 ; N section ; B 74 -70 620 580 ;\\r\\nC 168 ; WX 600 ; N currency ; B 77 49 644 517 ;\\r\\nC 169 ; WX 600 ; N quotesingle ; B 303 277 493 562 ;\\r\\nC 170 ; WX 600 ; N quotedblleft ; B 190 277 594 562 ;\\r\\nC 171 ; WX 600 ; N guillemotleft ; B 62 70 639 446 ;\\r\\nC 172 ; WX 600 ; N guilsinglleft ; B 195 70 545 446 ;\\r\\nC 173 ; WX 600 ; N guilsinglright ; B 165 70 514 446 ;\\r\\nC 174 ; WX 600 ; N fi ; B 12 0 644 626 ;\\r\\nC 175 ; WX 600 ; N fl ; B 12 0 644 626 ;\\r\\nC 177 ; WX 600 ; N endash ; B 108 203 602 313 ;\\r\\nC 178 ; WX 600 ; N dagger ; B 175 -70 586 580 ;\\r\\nC 179 ; WX 600 ; N daggerdbl ; B 121 -70 587 580 ;\\r\\nC 180 ; WX 600 ; N periodcentered ; B 248 165 461 351 ;\\r\\nC 182 ; WX 600 ; N paragraph ; B 61 -70 700 580 ;\\r\\nC 183 ; WX 600 ; N bullet ; B 196 132 523 430 ;\\r\\nC 184 ; WX 600 ; N quotesinglbase ; B 144 -142 458 143 ;\\r\\nC 185 ; WX 600 ; N quotedblbase ; B 34 -142 560 143 ;\\r\\nC 186 ; WX 600 ; N quotedblright ; B 119 277 645 562 ;\\r\\nC 187 ; WX 600 ; N guillemotright ; B 71 70 647 446 ;\\r\\nC 188 ; WX 600 ; N ellipsis ; B 35 -15 587 116 ;\\r\\nC 189 ; WX 600 ; N perthousand ; B -45 -15 743 616 ;\\r\\nC 191 ; WX 600 ; N questiondown ; B 100 -146 509 449 ;\\r\\nC 193 ; WX 600 ; N grave ; B 272 508 503 661 ;\\r\\nC 194 ; WX 600 ; N acute ; B 312 508 609 661 ;\\r\\nC 195 ; WX 600 ; N circumflex ; B 212 483 607 657 ;\\r\\nC 196 ; WX 600 ; N tilde ; B 199 493 643 636 ;\\r\\nC 197 ; WX 600 ; N macron ; B 195 505 637 585 ;\\r\\nC 198 ; WX 600 ; N breve ; B 217 468 652 631 ;\\r\\nC 199 ; WX 600 ; N dotaccent ; B 348 498 493 638 ;\\r\\nC 200 ; WX 600 ; N dieresis ; B 246 498 595 638 ;\\r\\nC 202 ; WX 600 ; N ring ; B 319 481 528 678 ;\\r\\nC 203 ; WX 600 ; N cedilla ; B 168 -206 368 0 ;\\r\\nC 205 ; WX 600 ; N hungarumlaut ; B 171 488 729 661 ;\\r\\nC 206 ; WX 600 ; N ogonek ; B 143 -199 367 0 ;\\r\\nC 207 ; WX 600 ; N caron ; B 238 493 633 667 ;\\r\\nC 208 ; WX 600 ; N emdash ; B 33 203 677 313 ;\\r\\nC 225 ; WX 600 ; N AE ; B -29 0 708 562 ;\\r\\nC 227 ; WX 600 ; N ordfeminine ; B 188 196 526 580 ;\\r\\nC 232 ; WX 600 ; N Lslash ; B 39 0 636 562 ;\\r\\nC 233 ; WX 600 ; N Oslash ; B 48 -22 673 584 ;\\r\\nC 234 ; WX 600 ; N OE ; B 26 0 701 562 ;\\r\\nC 235 ; WX 600 ; N ordmasculine ; B 188 196 543 580 ;\\r\\nC 241 ; WX 600 ; N ae ; B 21 -15 652 454 ;\\r\\nC 245 ; WX 600 ; N dotlessi ; B 77 0 546 439 ;\\r\\nC 248 ; WX 600 ; N lslash ; B 77 0 587 626 ;\\r\\nC 249 ; WX 600 ; N oslash ; B 54 -24 638 463 ;\\r\\nC 250 ; WX 600 ; N oe ; B 18 -15 662 454 ;\\r\\nC 251 ; WX 600 ; N germandbls ; B 22 -15 629 626 ;\\r\\nC -1 ; WX 600 ; N Idieresis ; B 77 0 643 761 ;\\r\\nC -1 ; WX 600 ; N eacute ; B 81 -15 609 661 ;\\r\\nC -1 ; WX 600 ; N abreve ; B 61 -15 658 661 ;\\r\\nC -1 ; WX 600 ; N uhungarumlaut ; B 70 -15 769 661 ;\\r\\nC -1 ; WX 600 ; N ecaron ; B 81 -15 633 667 ;\\r\\nC -1 ; WX 600 ; N Ydieresis ; B 109 0 709 761 ;\\r\\nC -1 ; WX 600 ; N divide ; B 114 16 596 500 ;\\r\\nC -1 ; WX 600 ; N Yacute ; B 109 0 709 784 ;\\r\\nC -1 ; WX 600 ; N Acircumflex ; B -9 0 632 780 ;\\r\\nC -1 ; WX 600 ; N aacute ; B 61 -15 609 661 ;\\r\\nC -1 ; WX 600 ; N Ucircumflex ; B 101 -18 716 780 ;\\r\\nC -1 ; WX 600 ; N yacute ; B -21 -142 695 661 ;\\r\\nC -1 ; WX 600 ; N scommaaccent ; B 66 -250 608 459 ;\\r\\nC -1 ; WX 600 ; N ecircumflex ; B 81 -15 607 657 ;\\r\\nC -1 ; WX 600 ; N Uring ; B 101 -18 716 801 ;\\r\\nC -1 ; WX 600 ; N Udieresis ; B 101 -18 716 761 ;\\r\\nC -1 ; WX 600 ; N aogonek ; B 61 -199 593 454 ;\\r\\nC -1 ; WX 600 ; N Uacute ; B 101 -18 716 784 ;\\r\\nC -1 ; WX 600 ; N uogonek ; B 70 -199 592 439 ;\\r\\nC -1 ; WX 600 ; N Edieresis ; B 25 0 670 761 ;\\r\\nC -1 ; WX 600 ; N Dcroat ; B 30 0 664 562 ;\\r\\nC -1 ; WX 600 ; N commaaccent ; B 151 -250 385 -57 ;\\r\\nC -1 ; WX 600 ; N copyright ; B 53 -18 667 580 ;\\r\\nC -1 ; WX 600 ; N Emacron ; B 25 0 670 708 ;\\r\\nC -1 ; WX 600 ; N ccaron ; B 81 -15 633 667 ;\\r\\nC -1 ; WX 600 ; N aring ; B 61 -15 593 678 ;\\r\\nC -1 ; WX 600 ; N Ncommaaccent ; B 8 -250 730 562 ;\\r\\nC -1 ; WX 600 ; N lacute ; B 77 0 639 801 ;\\r\\nC -1 ; WX 600 ; N agrave ; B 61 -15 593 661 ;\\r\\nC -1 ; WX 600 ; N Tcommaaccent ; B 86 -250 679 562 ;\\r\\nC -1 ; WX 600 ; N Cacute ; B 74 -18 675 784 ;\\r\\nC -1 ; WX 600 ; N atilde ; B 61 -15 643 636 ;\\r\\nC -1 ; WX 600 ; N Edotaccent ; B 25 0 670 761 ;\\r\\nC -1 ; WX 600 ; N scaron ; B 66 -17 633 667 ;\\r\\nC -1 ; WX 600 ; N scedilla ; B 66 -206 608 459 ;\\r\\nC -1 ; WX 600 ; N iacute ; B 77 0 609 661 ;\\r\\nC -1 ; WX 600 ; N lozenge ; B 145 0 614 740 ;\\r\\nC -1 ; WX 600 ; N Rcaron ; B 24 0 659 790 ;\\r\\nC -1 ; WX 600 ; N Gcommaaccent ; B 74 -250 675 580 ;\\r\\nC -1 ; WX 600 ; N ucircumflex ; B 70 -15 597 657 ;\\r\\nC -1 ; WX 600 ; N acircumflex ; B 61 -15 607 657 ;\\r\\nC -1 ; WX 600 ; N Amacron ; B -9 0 633 708 ;\\r\\nC -1 ; WX 600 ; N rcaron ; B 47 0 655 667 ;\\r\\nC -1 ; WX 600 ; N ccedilla ; B 81 -206 631 459 ;\\r\\nC -1 ; WX 600 ; N Zdotaccent ; B 62 0 637 761 ;\\r\\nC -1 ; WX 600 ; N Thorn ; B 48 0 620 562 ;\\r\\nC -1 ; WX 600 ; N Omacron ; B 74 -18 663 708 ;\\r\\nC -1 ; WX 600 ; N Racute ; B 24 0 665 784 ;\\r\\nC -1 ; WX 600 ; N Sacute ; B 54 -22 673 784 ;\\r\\nC -1 ; WX 600 ; N dcaron ; B 60 -15 861 626 ;\\r\\nC -1 ; WX 600 ; N Umacron ; B 101 -18 716 708 ;\\r\\nC -1 ; WX 600 ; N uring ; B 70 -15 592 678 ;\\r\\nC -1 ; WX 600 ; N threesuperior ; B 193 222 526 616 ;\\r\\nC -1 ; WX 600 ; N Ograve ; B 74 -18 645 784 ;\\r\\nC -1 ; WX 600 ; N Agrave ; B -9 0 632 784 ;\\r\\nC -1 ; WX 600 ; N Abreve ; B -9 0 684 784 ;\\r\\nC -1 ; WX 600 ; N multiply ; B 104 39 606 478 ;\\r\\nC -1 ; WX 600 ; N uacute ; B 70 -15 599 661 ;\\r\\nC -1 ; WX 600 ; N Tcaron ; B 86 0 679 790 ;\\r\\nC -1 ; WX 600 ; N partialdiff ; B 91 -38 627 728 ;\\r\\nC -1 ; WX 600 ; N ydieresis ; B -21 -142 695 638 ;\\r\\nC -1 ; WX 600 ; N Nacute ; B 8 -12 730 784 ;\\r\\nC -1 ; WX 600 ; N icircumflex ; B 77 0 577 657 ;\\r\\nC -1 ; WX 600 ; N Ecircumflex ; B 25 0 670 780 ;\\r\\nC -1 ; WX 600 ; N adieresis ; B 61 -15 595 638 ;\\r\\nC -1 ; WX 600 ; N edieresis ; B 81 -15 605 638 ;\\r\\nC -1 ; WX 600 ; N cacute ; B 81 -15 649 661 ;\\r\\nC -1 ; WX 600 ; N nacute ; B 18 0 639 661 ;\\r\\nC -1 ; WX 600 ; N umacron ; B 70 -15 637 585 ;\\r\\nC -1 ; WX 600 ; N Ncaron ; B 8 -12 730 790 ;\\r\\nC -1 ; WX 600 ; N Iacute ; B 77 0 643 784 ;\\r\\nC -1 ; WX 600 ; N plusminus ; B 76 24 614 515 ;\\r\\nC -1 ; WX 600 ; N brokenbar ; B 217 -175 489 675 ;\\r\\nC -1 ; WX 600 ; N registered ; B 53 -18 667 580 ;\\r\\nC -1 ; WX 600 ; N Gbreve ; B 74 -18 684 784 ;\\r\\nC -1 ; WX 600 ; N Idotaccent ; B 77 0 643 761 ;\\r\\nC -1 ; WX 600 ; N summation ; B 15 -10 672 706 ;\\r\\nC -1 ; WX 600 ; N Egrave ; B 25 0 670 784 ;\\r\\nC -1 ; WX 600 ; N racute ; B 47 0 655 661 ;\\r\\nC -1 ; WX 600 ; N omacron ; B 71 -15 637 585 ;\\r\\nC -1 ; WX 600 ; N Zacute ; B 62 0 665 784 ;\\r\\nC -1 ; WX 600 ; N Zcaron ; B 62 0 659 790 ;\\r\\nC -1 ; WX 600 ; N greaterequal ; B 26 0 627 696 ;\\r\\nC -1 ; WX 600 ; N Eth ; B 30 0 664 562 ;\\r\\nC -1 ; WX 600 ; N Ccedilla ; B 74 -206 675 580 ;\\r\\nC -1 ; WX 600 ; N lcommaaccent ; B 77 -250 546 626 ;\\r\\nC -1 ; WX 600 ; N tcaron ; B 118 -15 627 703 ;\\r\\nC -1 ; WX 600 ; N eogonek ; B 81 -199 605 454 ;\\r\\nC -1 ; WX 600 ; N Uogonek ; B 101 -199 716 562 ;\\r\\nC -1 ; WX 600 ; N Aacute ; B -9 0 655 784 ;\\r\\nC -1 ; WX 600 ; N Adieresis ; B -9 0 632 761 ;\\r\\nC -1 ; WX 600 ; N egrave ; B 81 -15 605 661 ;\\r\\nC -1 ; WX 600 ; N zacute ; B 81 0 614 661 ;\\r\\nC -1 ; WX 600 ; N iogonek ; B 77 -199 546 658 ;\\r\\nC -1 ; WX 600 ; N Oacute ; B 74 -18 645 784 ;\\r\\nC -1 ; WX 600 ; N oacute ; B 71 -15 649 661 ;\\r\\nC -1 ; WX 600 ; N amacron ; B 61 -15 637 585 ;\\r\\nC -1 ; WX 600 ; N sacute ; B 66 -17 609 661 ;\\r\\nC -1 ; WX 600 ; N idieresis ; B 77 0 561 618 ;\\r\\nC -1 ; WX 600 ; N Ocircumflex ; B 74 -18 645 780 ;\\r\\nC -1 ; WX 600 ; N Ugrave ; B 101 -18 716 784 ;\\r\\nC -1 ; WX 600 ; N Delta ; B 6 0 594 688 ;\\r\\nC -1 ; WX 600 ; N thorn ; B -32 -142 622 626 ;\\r\\nC -1 ; WX 600 ; N twosuperior ; B 191 230 542 616 ;\\r\\nC -1 ; WX 600 ; N Odieresis ; B 74 -18 645 761 ;\\r\\nC -1 ; WX 600 ; N mu ; B 49 -142 592 439 ;\\r\\nC -1 ; WX 600 ; N igrave ; B 77 0 546 661 ;\\r\\nC -1 ; WX 600 ; N ohungarumlaut ; B 71 -15 809 661 ;\\r\\nC -1 ; WX 600 ; N Eogonek ; B 25 -199 670 562 ;\\r\\nC -1 ; WX 600 ; N dcroat ; B 60 -15 712 626 ;\\r\\nC -1 ; WX 600 ; N threequarters ; B 8 -60 699 661 ;\\r\\nC -1 ; WX 600 ; N Scedilla ; B 54 -206 673 582 ;\\r\\nC -1 ; WX 600 ; N lcaron ; B 77 0 731 626 ;\\r\\nC -1 ; WX 600 ; N Kcommaaccent ; B 21 -250 692 562 ;\\r\\nC -1 ; WX 600 ; N Lacute ; B 39 0 636 784 ;\\r\\nC -1 ; WX 600 ; N trademark ; B 86 230 869 562 ;\\r\\nC -1 ; WX 600 ; N edotaccent ; B 81 -15 605 638 ;\\r\\nC -1 ; WX 600 ; N Igrave ; B 77 0 643 784 ;\\r\\nC -1 ; WX 600 ; N Imacron ; B 77 0 663 708 ;\\r\\nC -1 ; WX 600 ; N Lcaron ; B 39 0 757 562 ;\\r\\nC -1 ; WX 600 ; N onehalf ; B 22 -60 716 661 ;\\r\\nC -1 ; WX 600 ; N lessequal ; B 26 0 671 696 ;\\r\\nC -1 ; WX 600 ; N ocircumflex ; B 71 -15 622 657 ;\\r\\nC -1 ; WX 600 ; N ntilde ; B 18 0 643 636 ;\\r\\nC -1 ; WX 600 ; N Uhungarumlaut ; B 101 -18 805 784 ;\\r\\nC -1 ; WX 600 ; N Eacute ; B 25 0 670 784 ;\\r\\nC -1 ; WX 600 ; N emacron ; B 81 -15 637 585 ;\\r\\nC -1 ; WX 600 ; N gbreve ; B 40 -146 674 661 ;\\r\\nC -1 ; WX 600 ; N onequarter ; B 13 -60 707 661 ;\\r\\nC -1 ; WX 600 ; N Scaron ; B 54 -22 689 790 ;\\r\\nC -1 ; WX 600 ; N Scommaaccent ; B 54 -250 673 582 ;\\r\\nC -1 ; WX 600 ; N Ohungarumlaut ; B 74 -18 795 784 ;\\r\\nC -1 ; WX 600 ; N degree ; B 173 243 570 616 ;\\r\\nC -1 ; WX 600 ; N ograve ; B 71 -15 622 661 ;\\r\\nC -1 ; WX 600 ; N Ccaron ; B 74 -18 689 790 ;\\r\\nC -1 ; WX 600 ; N ugrave ; B 70 -15 592 661 ;\\r\\nC -1 ; WX 600 ; N radical ; B 67 -104 635 778 ;\\r\\nC -1 ; WX 600 ; N Dcaron ; B 30 0 664 790 ;\\r\\nC -1 ; WX 600 ; N rcommaaccent ; B 47 -250 655 454 ;\\r\\nC -1 ; WX 600 ; N Ntilde ; B 8 -12 730 759 ;\\r\\nC -1 ; WX 600 ; N otilde ; B 71 -15 643 636 ;\\r\\nC -1 ; WX 600 ; N Rcommaaccent ; B 24 -250 617 562 ;\\r\\nC -1 ; WX 600 ; N Lcommaaccent ; B 39 -250 636 562 ;\\r\\nC -1 ; WX 600 ; N Atilde ; B -9 0 669 759 ;\\r\\nC -1 ; WX 600 ; N Aogonek ; B -9 -199 632 562 ;\\r\\nC -1 ; WX 600 ; N Aring ; B -9 0 632 801 ;\\r\\nC -1 ; WX 600 ; N Otilde ; B 74 -18 669 759 ;\\r\\nC -1 ; WX 600 ; N zdotaccent ; B 81 0 614 638 ;\\r\\nC -1 ; WX 600 ; N Ecaron ; B 25 0 670 790 ;\\r\\nC -1 ; WX 600 ; N Iogonek ; B 77 -199 643 562 ;\\r\\nC -1 ; WX 600 ; N kcommaaccent ; B 33 -250 643 626 ;\\r\\nC -1 ; WX 600 ; N minus ; B 114 203 596 313 ;\\r\\nC -1 ; WX 600 ; N Icircumflex ; B 77 0 643 780 ;\\r\\nC -1 ; WX 600 ; N ncaron ; B 18 0 633 667 ;\\r\\nC -1 ; WX 600 ; N tcommaaccent ; B 118 -250 567 562 ;\\r\\nC -1 ; WX 600 ; N logicalnot ; B 135 103 617 413 ;\\r\\nC -1 ; WX 600 ; N odieresis ; B 71 -15 622 638 ;\\r\\nC -1 ; WX 600 ; N udieresis ; B 70 -15 595 638 ;\\r\\nC -1 ; WX 600 ; N notequal ; B 30 -47 626 563 ;\\r\\nC -1 ; WX 600 ; N gcommaaccent ; B 40 -146 674 714 ;\\r\\nC -1 ; WX 600 ; N eth ; B 93 -27 661 626 ;\\r\\nC -1 ; WX 600 ; N zcaron ; B 81 0 643 667 ;\\r\\nC -1 ; WX 600 ; N ncommaaccent ; B 18 -250 615 454 ;\\r\\nC -1 ; WX 600 ; N onesuperior ; B 212 230 514 616 ;\\r\\nC -1 ; WX 600 ; N imacron ; B 77 0 575 585 ;\\r\\nC -1 ; WX 600 ; N Euro ; B 0 0 0 0 ;\\r\\nEndCharMetrics\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Courier-BoldOblique.afm?`)},"./node_modules/pdfkit/js/data/Courier-Oblique.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nComment Creation Date: Thu May  1 17:37:52 1997\\r\\nComment UniqueID 43051\\r\\nComment VMusage 16248 75829\\r\\nFontName Courier-Oblique\\r\\nFullName Courier Oblique\\r\\nFamilyName Courier\\r\\nWeight Medium\\r\\nItalicAngle -12\\r\\nIsFixedPitch true\\r\\nCharacterSet ExtendedRoman\\r\\nFontBBox -27 -250 849 805 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 003.000\\r\\nNotice Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nEncodingScheme AdobeStandardEncoding\\r\\nCapHeight 562\\r\\nXHeight 426\\r\\nAscender 629\\r\\nDescender -157\\r\\nStdHW 51\\r\\nStdVW 51\\r\\nStartCharMetrics 315\\r\\nC 32 ; WX 600 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 600 ; N exclam ; B 243 -15 464 572 ;\\r\\nC 34 ; WX 600 ; N quotedbl ; B 273 328 532 562 ;\\r\\nC 35 ; WX 600 ; N numbersign ; B 133 -32 596 639 ;\\r\\nC 36 ; WX 600 ; N dollar ; B 108 -126 596 662 ;\\r\\nC 37 ; WX 600 ; N percent ; B 134 -15 599 622 ;\\r\\nC 38 ; WX 600 ; N ampersand ; B 87 -15 580 543 ;\\r\\nC 39 ; WX 600 ; N quoteright ; B 283 328 495 562 ;\\r\\nC 40 ; WX 600 ; N parenleft ; B 313 -108 572 622 ;\\r\\nC 41 ; WX 600 ; N parenright ; B 137 -108 396 622 ;\\r\\nC 42 ; WX 600 ; N asterisk ; B 212 257 580 607 ;\\r\\nC 43 ; WX 600 ; N plus ; B 129 44 580 470 ;\\r\\nC 44 ; WX 600 ; N comma ; B 157 -112 370 122 ;\\r\\nC 45 ; WX 600 ; N hyphen ; B 152 231 558 285 ;\\r\\nC 46 ; WX 600 ; N period ; B 238 -15 382 109 ;\\r\\nC 47 ; WX 600 ; N slash ; B 112 -80 604 629 ;\\r\\nC 48 ; WX 600 ; N zero ; B 154 -15 575 622 ;\\r\\nC 49 ; WX 600 ; N one ; B 98 0 515 622 ;\\r\\nC 50 ; WX 600 ; N two ; B 70 0 568 622 ;\\r\\nC 51 ; WX 600 ; N three ; B 82 -15 538 622 ;\\r\\nC 52 ; WX 600 ; N four ; B 108 0 541 622 ;\\r\\nC 53 ; WX 600 ; N five ; B 99 -15 589 607 ;\\r\\nC 54 ; WX 600 ; N six ; B 155 -15 629 622 ;\\r\\nC 55 ; WX 600 ; N seven ; B 182 0 612 607 ;\\r\\nC 56 ; WX 600 ; N eight ; B 132 -15 588 622 ;\\r\\nC 57 ; WX 600 ; N nine ; B 93 -15 574 622 ;\\r\\nC 58 ; WX 600 ; N colon ; B 238 -15 441 385 ;\\r\\nC 59 ; WX 600 ; N semicolon ; B 157 -112 441 385 ;\\r\\nC 60 ; WX 600 ; N less ; B 96 42 610 472 ;\\r\\nC 61 ; WX 600 ; N equal ; B 109 138 600 376 ;\\r\\nC 62 ; WX 600 ; N greater ; B 85 42 599 472 ;\\r\\nC 63 ; WX 600 ; N question ; B 222 -15 583 572 ;\\r\\nC 64 ; WX 600 ; N at ; B 127 -15 582 622 ;\\r\\nC 65 ; WX 600 ; N A ; B 3 0 607 562 ;\\r\\nC 66 ; WX 600 ; N B ; B 43 0 616 562 ;\\r\\nC 67 ; WX 600 ; N C ; B 93 -18 655 580 ;\\r\\nC 68 ; WX 600 ; N D ; B 43 0 645 562 ;\\r\\nC 69 ; WX 600 ; N E ; B 53 0 660 562 ;\\r\\nC 70 ; WX 600 ; N F ; B 53 0 660 562 ;\\r\\nC 71 ; WX 600 ; N G ; B 83 -18 645 580 ;\\r\\nC 72 ; WX 600 ; N H ; B 32 0 687 562 ;\\r\\nC 73 ; WX 600 ; N I ; B 96 0 623 562 ;\\r\\nC 74 ; WX 600 ; N J ; B 52 -18 685 562 ;\\r\\nC 75 ; WX 600 ; N K ; B 38 0 671 562 ;\\r\\nC 76 ; WX 600 ; N L ; B 47 0 607 562 ;\\r\\nC 77 ; WX 600 ; N M ; B 4 0 715 562 ;\\r\\nC 78 ; WX 600 ; N N ; B 7 -13 712 562 ;\\r\\nC 79 ; WX 600 ; N O ; B 94 -18 625 580 ;\\r\\nC 80 ; WX 600 ; N P ; B 79 0 644 562 ;\\r\\nC 81 ; WX 600 ; N Q ; B 95 -138 625 580 ;\\r\\nC 82 ; WX 600 ; N R ; B 38 0 598 562 ;\\r\\nC 83 ; WX 600 ; N S ; B 76 -20 650 580 ;\\r\\nC 84 ; WX 600 ; N T ; B 108 0 665 562 ;\\r\\nC 85 ; WX 600 ; N U ; B 125 -18 702 562 ;\\r\\nC 86 ; WX 600 ; N V ; B 105 -13 723 562 ;\\r\\nC 87 ; WX 600 ; N W ; B 106 -13 722 562 ;\\r\\nC 88 ; WX 600 ; N X ; B 23 0 675 562 ;\\r\\nC 89 ; WX 600 ; N Y ; B 133 0 695 562 ;\\r\\nC 90 ; WX 600 ; N Z ; B 86 0 610 562 ;\\r\\nC 91 ; WX 600 ; N bracketleft ; B 246 -108 574 622 ;\\r\\nC 92 ; WX 600 ; N backslash ; B 249 -80 468 629 ;\\r\\nC 93 ; WX 600 ; N bracketright ; B 135 -108 463 622 ;\\r\\nC 94 ; WX 600 ; N asciicircum ; B 175 354 587 622 ;\\r\\nC 95 ; WX 600 ; N underscore ; B -27 -125 584 -75 ;\\r\\nC 96 ; WX 600 ; N quoteleft ; B 343 328 457 562 ;\\r\\nC 97 ; WX 600 ; N a ; B 76 -15 569 441 ;\\r\\nC 98 ; WX 600 ; N b ; B 29 -15 625 629 ;\\r\\nC 99 ; WX 600 ; N c ; B 106 -15 608 441 ;\\r\\nC 100 ; WX 600 ; N d ; B 85 -15 640 629 ;\\r\\nC 101 ; WX 600 ; N e ; B 106 -15 598 441 ;\\r\\nC 102 ; WX 600 ; N f ; B 114 0 662 629 ; L i fi ; L l fl ;\\r\\nC 103 ; WX 600 ; N g ; B 61 -157 657 441 ;\\r\\nC 104 ; WX 600 ; N h ; B 33 0 592 629 ;\\r\\nC 105 ; WX 600 ; N i ; B 95 0 515 657 ;\\r\\nC 106 ; WX 600 ; N j ; B 52 -157 550 657 ;\\r\\nC 107 ; WX 600 ; N k ; B 58 0 633 629 ;\\r\\nC 108 ; WX 600 ; N l ; B 95 0 515 629 ;\\r\\nC 109 ; WX 600 ; N m ; B -5 0 615 441 ;\\r\\nC 110 ; WX 600 ; N n ; B 26 0 585 441 ;\\r\\nC 111 ; WX 600 ; N o ; B 102 -15 588 441 ;\\r\\nC 112 ; WX 600 ; N p ; B -24 -157 605 441 ;\\r\\nC 113 ; WX 600 ; N q ; B 85 -157 682 441 ;\\r\\nC 114 ; WX 600 ; N r ; B 60 0 636 441 ;\\r\\nC 115 ; WX 600 ; N s ; B 78 -15 584 441 ;\\r\\nC 116 ; WX 600 ; N t ; B 167 -15 561 561 ;\\r\\nC 117 ; WX 600 ; N u ; B 101 -15 572 426 ;\\r\\nC 118 ; WX 600 ; N v ; B 90 -10 681 426 ;\\r\\nC 119 ; WX 600 ; N w ; B 76 -10 695 426 ;\\r\\nC 120 ; WX 600 ; N x ; B 20 0 655 426 ;\\r\\nC 121 ; WX 600 ; N y ; B -4 -157 683 426 ;\\r\\nC 122 ; WX 600 ; N z ; B 99 0 593 426 ;\\r\\nC 123 ; WX 600 ; N braceleft ; B 233 -108 569 622 ;\\r\\nC 124 ; WX 600 ; N bar ; B 222 -250 485 750 ;\\r\\nC 125 ; WX 600 ; N braceright ; B 140 -108 477 622 ;\\r\\nC 126 ; WX 600 ; N asciitilde ; B 116 197 600 320 ;\\r\\nC 161 ; WX 600 ; N exclamdown ; B 225 -157 445 430 ;\\r\\nC 162 ; WX 600 ; N cent ; B 151 -49 588 614 ;\\r\\nC 163 ; WX 600 ; N sterling ; B 124 -21 621 611 ;\\r\\nC 164 ; WX 600 ; N fraction ; B 84 -57 646 665 ;\\r\\nC 165 ; WX 600 ; N yen ; B 120 0 693 562 ;\\r\\nC 166 ; WX 600 ; N florin ; B -26 -143 671 622 ;\\r\\nC 167 ; WX 600 ; N section ; B 104 -78 590 580 ;\\r\\nC 168 ; WX 600 ; N currency ; B 94 58 628 506 ;\\r\\nC 169 ; WX 600 ; N quotesingle ; B 345 328 460 562 ;\\r\\nC 170 ; WX 600 ; N quotedblleft ; B 262 328 541 562 ;\\r\\nC 171 ; WX 600 ; N guillemotleft ; B 92 70 652 446 ;\\r\\nC 172 ; WX 600 ; N guilsinglleft ; B 204 70 540 446 ;\\r\\nC 173 ; WX 600 ; N guilsinglright ; B 170 70 506 446 ;\\r\\nC 174 ; WX 600 ; N fi ; B 3 0 619 629 ;\\r\\nC 175 ; WX 600 ; N fl ; B 3 0 619 629 ;\\r\\nC 177 ; WX 600 ; N endash ; B 124 231 586 285 ;\\r\\nC 178 ; WX 600 ; N dagger ; B 217 -78 546 580 ;\\r\\nC 179 ; WX 600 ; N daggerdbl ; B 163 -78 546 580 ;\\r\\nC 180 ; WX 600 ; N periodcentered ; B 275 189 434 327 ;\\r\\nC 182 ; WX 600 ; N paragraph ; B 100 -78 630 562 ;\\r\\nC 183 ; WX 600 ; N bullet ; B 224 130 485 383 ;\\r\\nC 184 ; WX 600 ; N quotesinglbase ; B 185 -134 397 100 ;\\r\\nC 185 ; WX 600 ; N quotedblbase ; B 115 -134 478 100 ;\\r\\nC 186 ; WX 600 ; N quotedblright ; B 213 328 576 562 ;\\r\\nC 187 ; WX 600 ; N guillemotright ; B 58 70 618 446 ;\\r\\nC 188 ; WX 600 ; N ellipsis ; B 46 -15 575 111 ;\\r\\nC 189 ; WX 600 ; N perthousand ; B 59 -15 627 622 ;\\r\\nC 191 ; WX 600 ; N questiondown ; B 105 -157 466 430 ;\\r\\nC 193 ; WX 600 ; N grave ; B 294 497 484 672 ;\\r\\nC 194 ; WX 600 ; N acute ; B 348 497 612 672 ;\\r\\nC 195 ; WX 600 ; N circumflex ; B 229 477 581 654 ;\\r\\nC 196 ; WX 600 ; N tilde ; B 212 489 629 606 ;\\r\\nC 197 ; WX 600 ; N macron ; B 232 525 600 565 ;\\r\\nC 198 ; WX 600 ; N breve ; B 279 501 576 609 ;\\r\\nC 199 ; WX 600 ; N dotaccent ; B 373 537 478 640 ;\\r\\nC 200 ; WX 600 ; N dieresis ; B 272 537 579 640 ;\\r\\nC 202 ; WX 600 ; N ring ; B 332 463 500 627 ;\\r\\nC 203 ; WX 600 ; N cedilla ; B 197 -151 344 10 ;\\r\\nC 205 ; WX 600 ; N hungarumlaut ; B 239 497 683 672 ;\\r\\nC 206 ; WX 600 ; N ogonek ; B 189 -172 377 4 ;\\r\\nC 207 ; WX 600 ; N caron ; B 262 492 614 669 ;\\r\\nC 208 ; WX 600 ; N emdash ; B 49 231 661 285 ;\\r\\nC 225 ; WX 600 ; N AE ; B 3 0 655 562 ;\\r\\nC 227 ; WX 600 ; N ordfeminine ; B 209 249 512 580 ;\\r\\nC 232 ; WX 600 ; N Lslash ; B 47 0 607 562 ;\\r\\nC 233 ; WX 600 ; N Oslash ; B 94 -80 625 629 ;\\r\\nC 234 ; WX 600 ; N OE ; B 59 0 672 562 ;\\r\\nC 235 ; WX 600 ; N ordmasculine ; B 210 249 535 580 ;\\r\\nC 241 ; WX 600 ; N ae ; B 41 -15 626 441 ;\\r\\nC 245 ; WX 600 ; N dotlessi ; B 95 0 515 426 ;\\r\\nC 248 ; WX 600 ; N lslash ; B 95 0 587 629 ;\\r\\nC 249 ; WX 600 ; N oslash ; B 102 -80 588 506 ;\\r\\nC 250 ; WX 600 ; N oe ; B 54 -15 615 441 ;\\r\\nC 251 ; WX 600 ; N germandbls ; B 48 -15 617 629 ;\\r\\nC -1 ; WX 600 ; N Idieresis ; B 96 0 623 753 ;\\r\\nC -1 ; WX 600 ; N eacute ; B 106 -15 612 672 ;\\r\\nC -1 ; WX 600 ; N abreve ; B 76 -15 576 609 ;\\r\\nC -1 ; WX 600 ; N uhungarumlaut ; B 101 -15 723 672 ;\\r\\nC -1 ; WX 600 ; N ecaron ; B 106 -15 614 669 ;\\r\\nC -1 ; WX 600 ; N Ydieresis ; B 133 0 695 753 ;\\r\\nC -1 ; WX 600 ; N divide ; B 136 48 573 467 ;\\r\\nC -1 ; WX 600 ; N Yacute ; B 133 0 695 805 ;\\r\\nC -1 ; WX 600 ; N Acircumflex ; B 3 0 607 787 ;\\r\\nC -1 ; WX 600 ; N aacute ; B 76 -15 612 672 ;\\r\\nC -1 ; WX 600 ; N Ucircumflex ; B 125 -18 702 787 ;\\r\\nC -1 ; WX 600 ; N yacute ; B -4 -157 683 672 ;\\r\\nC -1 ; WX 600 ; N scommaaccent ; B 78 -250 584 441 ;\\r\\nC -1 ; WX 600 ; N ecircumflex ; B 106 -15 598 654 ;\\r\\nC -1 ; WX 600 ; N Uring ; B 125 -18 702 760 ;\\r\\nC -1 ; WX 600 ; N Udieresis ; B 125 -18 702 753 ;\\r\\nC -1 ; WX 600 ; N aogonek ; B 76 -172 569 441 ;\\r\\nC -1 ; WX 600 ; N Uacute ; B 125 -18 702 805 ;\\r\\nC -1 ; WX 600 ; N uogonek ; B 101 -172 572 426 ;\\r\\nC -1 ; WX 600 ; N Edieresis ; B 53 0 660 753 ;\\r\\nC -1 ; WX 600 ; N Dcroat ; B 43 0 645 562 ;\\r\\nC -1 ; WX 600 ; N commaaccent ; B 145 -250 323 -58 ;\\r\\nC -1 ; WX 600 ; N copyright ; B 53 -18 667 580 ;\\r\\nC -1 ; WX 600 ; N Emacron ; B 53 0 660 698 ;\\r\\nC -1 ; WX 600 ; N ccaron ; B 106 -15 614 669 ;\\r\\nC -1 ; WX 600 ; N aring ; B 76 -15 569 627 ;\\r\\nC -1 ; WX 600 ; N Ncommaaccent ; B 7 -250 712 562 ;\\r\\nC -1 ; WX 600 ; N lacute ; B 95 0 640 805 ;\\r\\nC -1 ; WX 600 ; N agrave ; B 76 -15 569 672 ;\\r\\nC -1 ; WX 600 ; N Tcommaaccent ; B 108 -250 665 562 ;\\r\\nC -1 ; WX 600 ; N Cacute ; B 93 -18 655 805 ;\\r\\nC -1 ; WX 600 ; N atilde ; B 76 -15 629 606 ;\\r\\nC -1 ; WX 600 ; N Edotaccent ; B 53 0 660 753 ;\\r\\nC -1 ; WX 600 ; N scaron ; B 78 -15 614 669 ;\\r\\nC -1 ; WX 600 ; N scedilla ; B 78 -151 584 441 ;\\r\\nC -1 ; WX 600 ; N iacute ; B 95 0 612 672 ;\\r\\nC -1 ; WX 600 ; N lozenge ; B 94 0 519 706 ;\\r\\nC -1 ; WX 600 ; N Rcaron ; B 38 0 642 802 ;\\r\\nC -1 ; WX 600 ; N Gcommaaccent ; B 83 -250 645 580 ;\\r\\nC -1 ; WX 600 ; N ucircumflex ; B 101 -15 572 654 ;\\r\\nC -1 ; WX 600 ; N acircumflex ; B 76 -15 581 654 ;\\r\\nC -1 ; WX 600 ; N Amacron ; B 3 0 607 698 ;\\r\\nC -1 ; WX 600 ; N rcaron ; B 60 0 636 669 ;\\r\\nC -1 ; WX 600 ; N ccedilla ; B 106 -151 614 441 ;\\r\\nC -1 ; WX 600 ; N Zdotaccent ; B 86 0 610 753 ;\\r\\nC -1 ; WX 600 ; N Thorn ; B 79 0 606 562 ;\\r\\nC -1 ; WX 600 ; N Omacron ; B 94 -18 628 698 ;\\r\\nC -1 ; WX 600 ; N Racute ; B 38 0 670 805 ;\\r\\nC -1 ; WX 600 ; N Sacute ; B 76 -20 650 805 ;\\r\\nC -1 ; WX 600 ; N dcaron ; B 85 -15 849 629 ;\\r\\nC -1 ; WX 600 ; N Umacron ; B 125 -18 702 698 ;\\r\\nC -1 ; WX 600 ; N uring ; B 101 -15 572 627 ;\\r\\nC -1 ; WX 600 ; N threesuperior ; B 213 240 501 622 ;\\r\\nC -1 ; WX 600 ; N Ograve ; B 94 -18 625 805 ;\\r\\nC -1 ; WX 600 ; N Agrave ; B 3 0 607 805 ;\\r\\nC -1 ; WX 600 ; N Abreve ; B 3 0 607 732 ;\\r\\nC -1 ; WX 600 ; N multiply ; B 103 43 607 470 ;\\r\\nC -1 ; WX 600 ; N uacute ; B 101 -15 602 672 ;\\r\\nC -1 ; WX 600 ; N Tcaron ; B 108 0 665 802 ;\\r\\nC -1 ; WX 600 ; N partialdiff ; B 45 -38 546 710 ;\\r\\nC -1 ; WX 600 ; N ydieresis ; B -4 -157 683 620 ;\\r\\nC -1 ; WX 600 ; N Nacute ; B 7 -13 712 805 ;\\r\\nC -1 ; WX 600 ; N icircumflex ; B 95 0 551 654 ;\\r\\nC -1 ; WX 600 ; N Ecircumflex ; B 53 0 660 787 ;\\r\\nC -1 ; WX 600 ; N adieresis ; B 76 -15 575 620 ;\\r\\nC -1 ; WX 600 ; N edieresis ; B 106 -15 598 620 ;\\r\\nC -1 ; WX 600 ; N cacute ; B 106 -15 612 672 ;\\r\\nC -1 ; WX 600 ; N nacute ; B 26 0 602 672 ;\\r\\nC -1 ; WX 600 ; N umacron ; B 101 -15 600 565 ;\\r\\nC -1 ; WX 600 ; N Ncaron ; B 7 -13 712 802 ;\\r\\nC -1 ; WX 600 ; N Iacute ; B 96 0 640 805 ;\\r\\nC -1 ; WX 600 ; N plusminus ; B 96 44 594 558 ;\\r\\nC -1 ; WX 600 ; N brokenbar ; B 238 -175 469 675 ;\\r\\nC -1 ; WX 600 ; N registered ; B 53 -18 667 580 ;\\r\\nC -1 ; WX 600 ; N Gbreve ; B 83 -18 645 732 ;\\r\\nC -1 ; WX 600 ; N Idotaccent ; B 96 0 623 753 ;\\r\\nC -1 ; WX 600 ; N summation ; B 15 -10 670 706 ;\\r\\nC -1 ; WX 600 ; N Egrave ; B 53 0 660 805 ;\\r\\nC -1 ; WX 600 ; N racute ; B 60 0 636 672 ;\\r\\nC -1 ; WX 600 ; N omacron ; B 102 -15 600 565 ;\\r\\nC -1 ; WX 600 ; N Zacute ; B 86 0 670 805 ;\\r\\nC -1 ; WX 600 ; N Zcaron ; B 86 0 642 802 ;\\r\\nC -1 ; WX 600 ; N greaterequal ; B 98 0 594 710 ;\\r\\nC -1 ; WX 600 ; N Eth ; B 43 0 645 562 ;\\r\\nC -1 ; WX 600 ; N Ccedilla ; B 93 -151 658 580 ;\\r\\nC -1 ; WX 600 ; N lcommaaccent ; B 95 -250 515 629 ;\\r\\nC -1 ; WX 600 ; N tcaron ; B 167 -15 587 717 ;\\r\\nC -1 ; WX 600 ; N eogonek ; B 106 -172 598 441 ;\\r\\nC -1 ; WX 600 ; N Uogonek ; B 124 -172 702 562 ;\\r\\nC -1 ; WX 600 ; N Aacute ; B 3 0 660 805 ;\\r\\nC -1 ; WX 600 ; N Adieresis ; B 3 0 607 753 ;\\r\\nC -1 ; WX 600 ; N egrave ; B 106 -15 598 672 ;\\r\\nC -1 ; WX 600 ; N zacute ; B 99 0 612 672 ;\\r\\nC -1 ; WX 600 ; N iogonek ; B 95 -172 515 657 ;\\r\\nC -1 ; WX 600 ; N Oacute ; B 94 -18 640 805 ;\\r\\nC -1 ; WX 600 ; N oacute ; B 102 -15 612 672 ;\\r\\nC -1 ; WX 600 ; N amacron ; B 76 -15 600 565 ;\\r\\nC -1 ; WX 600 ; N sacute ; B 78 -15 612 672 ;\\r\\nC -1 ; WX 600 ; N idieresis ; B 95 0 545 620 ;\\r\\nC -1 ; WX 600 ; N Ocircumflex ; B 94 -18 625 787 ;\\r\\nC -1 ; WX 600 ; N Ugrave ; B 125 -18 702 805 ;\\r\\nC -1 ; WX 600 ; N Delta ; B 6 0 598 688 ;\\r\\nC -1 ; WX 600 ; N thorn ; B -24 -157 605 629 ;\\r\\nC -1 ; WX 600 ; N twosuperior ; B 230 249 535 622 ;\\r\\nC -1 ; WX 600 ; N Odieresis ; B 94 -18 625 753 ;\\r\\nC -1 ; WX 600 ; N mu ; B 72 -157 572 426 ;\\r\\nC -1 ; WX 600 ; N igrave ; B 95 0 515 672 ;\\r\\nC -1 ; WX 600 ; N ohungarumlaut ; B 102 -15 723 672 ;\\r\\nC -1 ; WX 600 ; N Eogonek ; B 53 -172 660 562 ;\\r\\nC -1 ; WX 600 ; N dcroat ; B 85 -15 704 629 ;\\r\\nC -1 ; WX 600 ; N threequarters ; B 73 -56 659 666 ;\\r\\nC -1 ; WX 600 ; N Scedilla ; B 76 -151 650 580 ;\\r\\nC -1 ; WX 600 ; N lcaron ; B 95 0 667 629 ;\\r\\nC -1 ; WX 600 ; N Kcommaaccent ; B 38 -250 671 562 ;\\r\\nC -1 ; WX 600 ; N Lacute ; B 47 0 607 805 ;\\r\\nC -1 ; WX 600 ; N trademark ; B 75 263 742 562 ;\\r\\nC -1 ; WX 600 ; N edotaccent ; B 106 -15 598 620 ;\\r\\nC -1 ; WX 600 ; N Igrave ; B 96 0 623 805 ;\\r\\nC -1 ; WX 600 ; N Imacron ; B 96 0 628 698 ;\\r\\nC -1 ; WX 600 ; N Lcaron ; B 47 0 632 562 ;\\r\\nC -1 ; WX 600 ; N onehalf ; B 65 -57 669 665 ;\\r\\nC -1 ; WX 600 ; N lessequal ; B 98 0 645 710 ;\\r\\nC -1 ; WX 600 ; N ocircumflex ; B 102 -15 588 654 ;\\r\\nC -1 ; WX 600 ; N ntilde ; B 26 0 629 606 ;\\r\\nC -1 ; WX 600 ; N Uhungarumlaut ; B 125 -18 761 805 ;\\r\\nC -1 ; WX 600 ; N Eacute ; B 53 0 670 805 ;\\r\\nC -1 ; WX 600 ; N emacron ; B 106 -15 600 565 ;\\r\\nC -1 ; WX 600 ; N gbreve ; B 61 -157 657 609 ;\\r\\nC -1 ; WX 600 ; N onequarter ; B 65 -57 674 665 ;\\r\\nC -1 ; WX 600 ; N Scaron ; B 76 -20 672 802 ;\\r\\nC -1 ; WX 600 ; N Scommaaccent ; B 76 -250 650 580 ;\\r\\nC -1 ; WX 600 ; N Ohungarumlaut ; B 94 -18 751 805 ;\\r\\nC -1 ; WX 600 ; N degree ; B 214 269 576 622 ;\\r\\nC -1 ; WX 600 ; N ograve ; B 102 -15 588 672 ;\\r\\nC -1 ; WX 600 ; N Ccaron ; B 93 -18 672 802 ;\\r\\nC -1 ; WX 600 ; N ugrave ; B 101 -15 572 672 ;\\r\\nC -1 ; WX 600 ; N radical ; B 85 -15 765 792 ;\\r\\nC -1 ; WX 600 ; N Dcaron ; B 43 0 645 802 ;\\r\\nC -1 ; WX 600 ; N rcommaaccent ; B 60 -250 636 441 ;\\r\\nC -1 ; WX 600 ; N Ntilde ; B 7 -13 712 729 ;\\r\\nC -1 ; WX 600 ; N otilde ; B 102 -15 629 606 ;\\r\\nC -1 ; WX 600 ; N Rcommaaccent ; B 38 -250 598 562 ;\\r\\nC -1 ; WX 600 ; N Lcommaaccent ; B 47 -250 607 562 ;\\r\\nC -1 ; WX 600 ; N Atilde ; B 3 0 655 729 ;\\r\\nC -1 ; WX 600 ; N Aogonek ; B 3 -172 607 562 ;\\r\\nC -1 ; WX 600 ; N Aring ; B 3 0 607 750 ;\\r\\nC -1 ; WX 600 ; N Otilde ; B 94 -18 655 729 ;\\r\\nC -1 ; WX 600 ; N zdotaccent ; B 99 0 593 620 ;\\r\\nC -1 ; WX 600 ; N Ecaron ; B 53 0 660 802 ;\\r\\nC -1 ; WX 600 ; N Iogonek ; B 96 -172 623 562 ;\\r\\nC -1 ; WX 600 ; N kcommaaccent ; B 58 -250 633 629 ;\\r\\nC -1 ; WX 600 ; N minus ; B 129 232 580 283 ;\\r\\nC -1 ; WX 600 ; N Icircumflex ; B 96 0 623 787 ;\\r\\nC -1 ; WX 600 ; N ncaron ; B 26 0 614 669 ;\\r\\nC -1 ; WX 600 ; N tcommaaccent ; B 165 -250 561 561 ;\\r\\nC -1 ; WX 600 ; N logicalnot ; B 155 108 591 369 ;\\r\\nC -1 ; WX 600 ; N odieresis ; B 102 -15 588 620 ;\\r\\nC -1 ; WX 600 ; N udieresis ; B 101 -15 575 620 ;\\r\\nC -1 ; WX 600 ; N notequal ; B 43 -16 621 529 ;\\r\\nC -1 ; WX 600 ; N gcommaaccent ; B 61 -157 657 708 ;\\r\\nC -1 ; WX 600 ; N eth ; B 102 -15 639 629 ;\\r\\nC -1 ; WX 600 ; N zcaron ; B 99 0 624 669 ;\\r\\nC -1 ; WX 600 ; N ncommaaccent ; B 26 -250 585 441 ;\\r\\nC -1 ; WX 600 ; N onesuperior ; B 231 249 491 622 ;\\r\\nC -1 ; WX 600 ; N imacron ; B 95 0 543 565 ;\\r\\nC -1 ; WX 600 ; N Euro ; B 0 0 0 0 ;\\r\\nEndCharMetrics\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Courier-Oblique.afm?`)},"./node_modules/pdfkit/js/data/Courier.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nComment Creation Date: Thu May  1 17:27:09 1997\\r\\nComment UniqueID 43050\\r\\nComment VMusage 39754 50779\\r\\nFontName Courier\\r\\nFullName Courier\\r\\nFamilyName Courier\\r\\nWeight Medium\\r\\nItalicAngle 0\\r\\nIsFixedPitch true\\r\\nCharacterSet ExtendedRoman\\r\\nFontBBox -23 -250 715 805 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 003.000\\r\\nNotice Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nEncodingScheme AdobeStandardEncoding\\r\\nCapHeight 562\\r\\nXHeight 426\\r\\nAscender 629\\r\\nDescender -157\\r\\nStdHW 51\\r\\nStdVW 51\\r\\nStartCharMetrics 315\\r\\nC 32 ; WX 600 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 600 ; N exclam ; B 236 -15 364 572 ;\\r\\nC 34 ; WX 600 ; N quotedbl ; B 187 328 413 562 ;\\r\\nC 35 ; WX 600 ; N numbersign ; B 93 -32 507 639 ;\\r\\nC 36 ; WX 600 ; N dollar ; B 105 -126 496 662 ;\\r\\nC 37 ; WX 600 ; N percent ; B 81 -15 518 622 ;\\r\\nC 38 ; WX 600 ; N ampersand ; B 63 -15 538 543 ;\\r\\nC 39 ; WX 600 ; N quoteright ; B 213 328 376 562 ;\\r\\nC 40 ; WX 600 ; N parenleft ; B 269 -108 440 622 ;\\r\\nC 41 ; WX 600 ; N parenright ; B 160 -108 331 622 ;\\r\\nC 42 ; WX 600 ; N asterisk ; B 116 257 484 607 ;\\r\\nC 43 ; WX 600 ; N plus ; B 80 44 520 470 ;\\r\\nC 44 ; WX 600 ; N comma ; B 181 -112 344 122 ;\\r\\nC 45 ; WX 600 ; N hyphen ; B 103 231 497 285 ;\\r\\nC 46 ; WX 600 ; N period ; B 229 -15 371 109 ;\\r\\nC 47 ; WX 600 ; N slash ; B 125 -80 475 629 ;\\r\\nC 48 ; WX 600 ; N zero ; B 106 -15 494 622 ;\\r\\nC 49 ; WX 600 ; N one ; B 96 0 505 622 ;\\r\\nC 50 ; WX 600 ; N two ; B 70 0 471 622 ;\\r\\nC 51 ; WX 600 ; N three ; B 75 -15 466 622 ;\\r\\nC 52 ; WX 600 ; N four ; B 78 0 500 622 ;\\r\\nC 53 ; WX 600 ; N five ; B 92 -15 497 607 ;\\r\\nC 54 ; WX 600 ; N six ; B 111 -15 497 622 ;\\r\\nC 55 ; WX 600 ; N seven ; B 82 0 483 607 ;\\r\\nC 56 ; WX 600 ; N eight ; B 102 -15 498 622 ;\\r\\nC 57 ; WX 600 ; N nine ; B 96 -15 489 622 ;\\r\\nC 58 ; WX 600 ; N colon ; B 229 -15 371 385 ;\\r\\nC 59 ; WX 600 ; N semicolon ; B 181 -112 371 385 ;\\r\\nC 60 ; WX 600 ; N less ; B 41 42 519 472 ;\\r\\nC 61 ; WX 600 ; N equal ; B 80 138 520 376 ;\\r\\nC 62 ; WX 600 ; N greater ; B 66 42 544 472 ;\\r\\nC 63 ; WX 600 ; N question ; B 129 -15 492 572 ;\\r\\nC 64 ; WX 600 ; N at ; B 77 -15 533 622 ;\\r\\nC 65 ; WX 600 ; N A ; B 3 0 597 562 ;\\r\\nC 66 ; WX 600 ; N B ; B 43 0 559 562 ;\\r\\nC 67 ; WX 600 ; N C ; B 41 -18 540 580 ;\\r\\nC 68 ; WX 600 ; N D ; B 43 0 574 562 ;\\r\\nC 69 ; WX 600 ; N E ; B 53 0 550 562 ;\\r\\nC 70 ; WX 600 ; N F ; B 53 0 545 562 ;\\r\\nC 71 ; WX 600 ; N G ; B 31 -18 575 580 ;\\r\\nC 72 ; WX 600 ; N H ; B 32 0 568 562 ;\\r\\nC 73 ; WX 600 ; N I ; B 96 0 504 562 ;\\r\\nC 74 ; WX 600 ; N J ; B 34 -18 566 562 ;\\r\\nC 75 ; WX 600 ; N K ; B 38 0 582 562 ;\\r\\nC 76 ; WX 600 ; N L ; B 47 0 554 562 ;\\r\\nC 77 ; WX 600 ; N M ; B 4 0 596 562 ;\\r\\nC 78 ; WX 600 ; N N ; B 7 -13 593 562 ;\\r\\nC 79 ; WX 600 ; N O ; B 43 -18 557 580 ;\\r\\nC 80 ; WX 600 ; N P ; B 79 0 558 562 ;\\r\\nC 81 ; WX 600 ; N Q ; B 43 -138 557 580 ;\\r\\nC 82 ; WX 600 ; N R ; B 38 0 588 562 ;\\r\\nC 83 ; WX 600 ; N S ; B 72 -20 529 580 ;\\r\\nC 84 ; WX 600 ; N T ; B 38 0 563 562 ;\\r\\nC 85 ; WX 600 ; N U ; B 17 -18 583 562 ;\\r\\nC 86 ; WX 600 ; N V ; B -4 -13 604 562 ;\\r\\nC 87 ; WX 600 ; N W ; B -3 -13 603 562 ;\\r\\nC 88 ; WX 600 ; N X ; B 23 0 577 562 ;\\r\\nC 89 ; WX 600 ; N Y ; B 24 0 576 562 ;\\r\\nC 90 ; WX 600 ; N Z ; B 86 0 514 562 ;\\r\\nC 91 ; WX 600 ; N bracketleft ; B 269 -108 442 622 ;\\r\\nC 92 ; WX 600 ; N backslash ; B 118 -80 482 629 ;\\r\\nC 93 ; WX 600 ; N bracketright ; B 158 -108 331 622 ;\\r\\nC 94 ; WX 600 ; N asciicircum ; B 94 354 506 622 ;\\r\\nC 95 ; WX 600 ; N underscore ; B 0 -125 600 -75 ;\\r\\nC 96 ; WX 600 ; N quoteleft ; B 224 328 387 562 ;\\r\\nC 97 ; WX 600 ; N a ; B 53 -15 559 441 ;\\r\\nC 98 ; WX 600 ; N b ; B 14 -15 575 629 ;\\r\\nC 99 ; WX 600 ; N c ; B 66 -15 529 441 ;\\r\\nC 100 ; WX 600 ; N d ; B 45 -15 591 629 ;\\r\\nC 101 ; WX 600 ; N e ; B 66 -15 548 441 ;\\r\\nC 102 ; WX 600 ; N f ; B 114 0 531 629 ; L i fi ; L l fl ;\\r\\nC 103 ; WX 600 ; N g ; B 45 -157 566 441 ;\\r\\nC 104 ; WX 600 ; N h ; B 18 0 582 629 ;\\r\\nC 105 ; WX 600 ; N i ; B 95 0 505 657 ;\\r\\nC 106 ; WX 600 ; N j ; B 82 -157 410 657 ;\\r\\nC 107 ; WX 600 ; N k ; B 43 0 580 629 ;\\r\\nC 108 ; WX 600 ; N l ; B 95 0 505 629 ;\\r\\nC 109 ; WX 600 ; N m ; B -5 0 605 441 ;\\r\\nC 110 ; WX 600 ; N n ; B 26 0 575 441 ;\\r\\nC 111 ; WX 600 ; N o ; B 62 -15 538 441 ;\\r\\nC 112 ; WX 600 ; N p ; B 9 -157 555 441 ;\\r\\nC 113 ; WX 600 ; N q ; B 45 -157 591 441 ;\\r\\nC 114 ; WX 600 ; N r ; B 60 0 559 441 ;\\r\\nC 115 ; WX 600 ; N s ; B 80 -15 513 441 ;\\r\\nC 116 ; WX 600 ; N t ; B 87 -15 530 561 ;\\r\\nC 117 ; WX 600 ; N u ; B 21 -15 562 426 ;\\r\\nC 118 ; WX 600 ; N v ; B 10 -10 590 426 ;\\r\\nC 119 ; WX 600 ; N w ; B -4 -10 604 426 ;\\r\\nC 120 ; WX 600 ; N x ; B 20 0 580 426 ;\\r\\nC 121 ; WX 600 ; N y ; B 7 -157 592 426 ;\\r\\nC 122 ; WX 600 ; N z ; B 99 0 502 426 ;\\r\\nC 123 ; WX 600 ; N braceleft ; B 182 -108 437 622 ;\\r\\nC 124 ; WX 600 ; N bar ; B 275 -250 326 750 ;\\r\\nC 125 ; WX 600 ; N braceright ; B 163 -108 418 622 ;\\r\\nC 126 ; WX 600 ; N asciitilde ; B 63 197 540 320 ;\\r\\nC 161 ; WX 600 ; N exclamdown ; B 236 -157 364 430 ;\\r\\nC 162 ; WX 600 ; N cent ; B 96 -49 500 614 ;\\r\\nC 163 ; WX 600 ; N sterling ; B 84 -21 521 611 ;\\r\\nC 164 ; WX 600 ; N fraction ; B 92 -57 509 665 ;\\r\\nC 165 ; WX 600 ; N yen ; B 26 0 574 562 ;\\r\\nC 166 ; WX 600 ; N florin ; B 4 -143 539 622 ;\\r\\nC 167 ; WX 600 ; N section ; B 113 -78 488 580 ;\\r\\nC 168 ; WX 600 ; N currency ; B 73 58 527 506 ;\\r\\nC 169 ; WX 600 ; N quotesingle ; B 259 328 341 562 ;\\r\\nC 170 ; WX 600 ; N quotedblleft ; B 143 328 471 562 ;\\r\\nC 171 ; WX 600 ; N guillemotleft ; B 37 70 563 446 ;\\r\\nC 172 ; WX 600 ; N guilsinglleft ; B 149 70 451 446 ;\\r\\nC 173 ; WX 600 ; N guilsinglright ; B 149 70 451 446 ;\\r\\nC 174 ; WX 600 ; N fi ; B 3 0 597 629 ;\\r\\nC 175 ; WX 600 ; N fl ; B 3 0 597 629 ;\\r\\nC 177 ; WX 600 ; N endash ; B 75 231 525 285 ;\\r\\nC 178 ; WX 600 ; N dagger ; B 141 -78 459 580 ;\\r\\nC 179 ; WX 600 ; N daggerdbl ; B 141 -78 459 580 ;\\r\\nC 180 ; WX 600 ; N periodcentered ; B 222 189 378 327 ;\\r\\nC 182 ; WX 600 ; N paragraph ; B 50 -78 511 562 ;\\r\\nC 183 ; WX 600 ; N bullet ; B 172 130 428 383 ;\\r\\nC 184 ; WX 600 ; N quotesinglbase ; B 213 -134 376 100 ;\\r\\nC 185 ; WX 600 ; N quotedblbase ; B 143 -134 457 100 ;\\r\\nC 186 ; WX 600 ; N quotedblright ; B 143 328 457 562 ;\\r\\nC 187 ; WX 600 ; N guillemotright ; B 37 70 563 446 ;\\r\\nC 188 ; WX 600 ; N ellipsis ; B 37 -15 563 111 ;\\r\\nC 189 ; WX 600 ; N perthousand ; B 3 -15 600 622 ;\\r\\nC 191 ; WX 600 ; N questiondown ; B 108 -157 471 430 ;\\r\\nC 193 ; WX 600 ; N grave ; B 151 497 378 672 ;\\r\\nC 194 ; WX 600 ; N acute ; B 242 497 469 672 ;\\r\\nC 195 ; WX 600 ; N circumflex ; B 124 477 476 654 ;\\r\\nC 196 ; WX 600 ; N tilde ; B 105 489 503 606 ;\\r\\nC 197 ; WX 600 ; N macron ; B 120 525 480 565 ;\\r\\nC 198 ; WX 600 ; N breve ; B 153 501 447 609 ;\\r\\nC 199 ; WX 600 ; N dotaccent ; B 249 537 352 640 ;\\r\\nC 200 ; WX 600 ; N dieresis ; B 148 537 453 640 ;\\r\\nC 202 ; WX 600 ; N ring ; B 218 463 382 627 ;\\r\\nC 203 ; WX 600 ; N cedilla ; B 224 -151 362 10 ;\\r\\nC 205 ; WX 600 ; N hungarumlaut ; B 133 497 540 672 ;\\r\\nC 206 ; WX 600 ; N ogonek ; B 211 -172 407 4 ;\\r\\nC 207 ; WX 600 ; N caron ; B 124 492 476 669 ;\\r\\nC 208 ; WX 600 ; N emdash ; B 0 231 600 285 ;\\r\\nC 225 ; WX 600 ; N AE ; B 3 0 550 562 ;\\r\\nC 227 ; WX 600 ; N ordfeminine ; B 156 249 442 580 ;\\r\\nC 232 ; WX 600 ; N Lslash ; B 47 0 554 562 ;\\r\\nC 233 ; WX 600 ; N Oslash ; B 43 -80 557 629 ;\\r\\nC 234 ; WX 600 ; N OE ; B 7 0 567 562 ;\\r\\nC 235 ; WX 600 ; N ordmasculine ; B 157 249 443 580 ;\\r\\nC 241 ; WX 600 ; N ae ; B 19 -15 570 441 ;\\r\\nC 245 ; WX 600 ; N dotlessi ; B 95 0 505 426 ;\\r\\nC 248 ; WX 600 ; N lslash ; B 95 0 505 629 ;\\r\\nC 249 ; WX 600 ; N oslash ; B 62 -80 538 506 ;\\r\\nC 250 ; WX 600 ; N oe ; B 19 -15 559 441 ;\\r\\nC 251 ; WX 600 ; N germandbls ; B 48 -15 588 629 ;\\r\\nC -1 ; WX 600 ; N Idieresis ; B 96 0 504 753 ;\\r\\nC -1 ; WX 600 ; N eacute ; B 66 -15 548 672 ;\\r\\nC -1 ; WX 600 ; N abreve ; B 53 -15 559 609 ;\\r\\nC -1 ; WX 600 ; N uhungarumlaut ; B 21 -15 580 672 ;\\r\\nC -1 ; WX 600 ; N ecaron ; B 66 -15 548 669 ;\\r\\nC -1 ; WX 600 ; N Ydieresis ; B 24 0 576 753 ;\\r\\nC -1 ; WX 600 ; N divide ; B 87 48 513 467 ;\\r\\nC -1 ; WX 600 ; N Yacute ; B 24 0 576 805 ;\\r\\nC -1 ; WX 600 ; N Acircumflex ; B 3 0 597 787 ;\\r\\nC -1 ; WX 600 ; N aacute ; B 53 -15 559 672 ;\\r\\nC -1 ; WX 600 ; N Ucircumflex ; B 17 -18 583 787 ;\\r\\nC -1 ; WX 600 ; N yacute ; B 7 -157 592 672 ;\\r\\nC -1 ; WX 600 ; N scommaaccent ; B 80 -250 513 441 ;\\r\\nC -1 ; WX 600 ; N ecircumflex ; B 66 -15 548 654 ;\\r\\nC -1 ; WX 600 ; N Uring ; B 17 -18 583 760 ;\\r\\nC -1 ; WX 600 ; N Udieresis ; B 17 -18 583 753 ;\\r\\nC -1 ; WX 600 ; N aogonek ; B 53 -172 587 441 ;\\r\\nC -1 ; WX 600 ; N Uacute ; B 17 -18 583 805 ;\\r\\nC -1 ; WX 600 ; N uogonek ; B 21 -172 590 426 ;\\r\\nC -1 ; WX 600 ; N Edieresis ; B 53 0 550 753 ;\\r\\nC -1 ; WX 600 ; N Dcroat ; B 30 0 574 562 ;\\r\\nC -1 ; WX 600 ; N commaaccent ; B 198 -250 335 -58 ;\\r\\nC -1 ; WX 600 ; N copyright ; B 0 -18 600 580 ;\\r\\nC -1 ; WX 600 ; N Emacron ; B 53 0 550 698 ;\\r\\nC -1 ; WX 600 ; N ccaron ; B 66 -15 529 669 ;\\r\\nC -1 ; WX 600 ; N aring ; B 53 -15 559 627 ;\\r\\nC -1 ; WX 600 ; N Ncommaaccent ; B 7 -250 593 562 ;\\r\\nC -1 ; WX 600 ; N lacute ; B 95 0 505 805 ;\\r\\nC -1 ; WX 600 ; N agrave ; B 53 -15 559 672 ;\\r\\nC -1 ; WX 600 ; N Tcommaaccent ; B 38 -250 563 562 ;\\r\\nC -1 ; WX 600 ; N Cacute ; B 41 -18 540 805 ;\\r\\nC -1 ; WX 600 ; N atilde ; B 53 -15 559 606 ;\\r\\nC -1 ; WX 600 ; N Edotaccent ; B 53 0 550 753 ;\\r\\nC -1 ; WX 600 ; N scaron ; B 80 -15 513 669 ;\\r\\nC -1 ; WX 600 ; N scedilla ; B 80 -151 513 441 ;\\r\\nC -1 ; WX 600 ; N iacute ; B 95 0 505 672 ;\\r\\nC -1 ; WX 600 ; N lozenge ; B 18 0 443 706 ;\\r\\nC -1 ; WX 600 ; N Rcaron ; B 38 0 588 802 ;\\r\\nC -1 ; WX 600 ; N Gcommaaccent ; B 31 -250 575 580 ;\\r\\nC -1 ; WX 600 ; N ucircumflex ; B 21 -15 562 654 ;\\r\\nC -1 ; WX 600 ; N acircumflex ; B 53 -15 559 654 ;\\r\\nC -1 ; WX 600 ; N Amacron ; B 3 0 597 698 ;\\r\\nC -1 ; WX 600 ; N rcaron ; B 60 0 559 669 ;\\r\\nC -1 ; WX 600 ; N ccedilla ; B 66 -151 529 441 ;\\r\\nC -1 ; WX 600 ; N Zdotaccent ; B 86 0 514 753 ;\\r\\nC -1 ; WX 600 ; N Thorn ; B 79 0 538 562 ;\\r\\nC -1 ; WX 600 ; N Omacron ; B 43 -18 557 698 ;\\r\\nC -1 ; WX 600 ; N Racute ; B 38 0 588 805 ;\\r\\nC -1 ; WX 600 ; N Sacute ; B 72 -20 529 805 ;\\r\\nC -1 ; WX 600 ; N dcaron ; B 45 -15 715 629 ;\\r\\nC -1 ; WX 600 ; N Umacron ; B 17 -18 583 698 ;\\r\\nC -1 ; WX 600 ; N uring ; B 21 -15 562 627 ;\\r\\nC -1 ; WX 600 ; N threesuperior ; B 155 240 406 622 ;\\r\\nC -1 ; WX 600 ; N Ograve ; B 43 -18 557 805 ;\\r\\nC -1 ; WX 600 ; N Agrave ; B 3 0 597 805 ;\\r\\nC -1 ; WX 600 ; N Abreve ; B 3 0 597 732 ;\\r\\nC -1 ; WX 600 ; N multiply ; B 87 43 515 470 ;\\r\\nC -1 ; WX 600 ; N uacute ; B 21 -15 562 672 ;\\r\\nC -1 ; WX 600 ; N Tcaron ; B 38 0 563 802 ;\\r\\nC -1 ; WX 600 ; N partialdiff ; B 17 -38 459 710 ;\\r\\nC -1 ; WX 600 ; N ydieresis ; B 7 -157 592 620 ;\\r\\nC -1 ; WX 600 ; N Nacute ; B 7 -13 593 805 ;\\r\\nC -1 ; WX 600 ; N icircumflex ; B 94 0 505 654 ;\\r\\nC -1 ; WX 600 ; N Ecircumflex ; B 53 0 550 787 ;\\r\\nC -1 ; WX 600 ; N adieresis ; B 53 -15 559 620 ;\\r\\nC -1 ; WX 600 ; N edieresis ; B 66 -15 548 620 ;\\r\\nC -1 ; WX 600 ; N cacute ; B 66 -15 529 672 ;\\r\\nC -1 ; WX 600 ; N nacute ; B 26 0 575 672 ;\\r\\nC -1 ; WX 600 ; N umacron ; B 21 -15 562 565 ;\\r\\nC -1 ; WX 600 ; N Ncaron ; B 7 -13 593 802 ;\\r\\nC -1 ; WX 600 ; N Iacute ; B 96 0 504 805 ;\\r\\nC -1 ; WX 600 ; N plusminus ; B 87 44 513 558 ;\\r\\nC -1 ; WX 600 ; N brokenbar ; B 275 -175 326 675 ;\\r\\nC -1 ; WX 600 ; N registered ; B 0 -18 600 580 ;\\r\\nC -1 ; WX 600 ; N Gbreve ; B 31 -18 575 732 ;\\r\\nC -1 ; WX 600 ; N Idotaccent ; B 96 0 504 753 ;\\r\\nC -1 ; WX 600 ; N summation ; B 15 -10 585 706 ;\\r\\nC -1 ; WX 600 ; N Egrave ; B 53 0 550 805 ;\\r\\nC -1 ; WX 600 ; N racute ; B 60 0 559 672 ;\\r\\nC -1 ; WX 600 ; N omacron ; B 62 -15 538 565 ;\\r\\nC -1 ; WX 600 ; N Zacute ; B 86 0 514 805 ;\\r\\nC -1 ; WX 600 ; N Zcaron ; B 86 0 514 802 ;\\r\\nC -1 ; WX 600 ; N greaterequal ; B 98 0 502 710 ;\\r\\nC -1 ; WX 600 ; N Eth ; B 30 0 574 562 ;\\r\\nC -1 ; WX 600 ; N Ccedilla ; B 41 -151 540 580 ;\\r\\nC -1 ; WX 600 ; N lcommaaccent ; B 95 -250 505 629 ;\\r\\nC -1 ; WX 600 ; N tcaron ; B 87 -15 530 717 ;\\r\\nC -1 ; WX 600 ; N eogonek ; B 66 -172 548 441 ;\\r\\nC -1 ; WX 600 ; N Uogonek ; B 17 -172 583 562 ;\\r\\nC -1 ; WX 600 ; N Aacute ; B 3 0 597 805 ;\\r\\nC -1 ; WX 600 ; N Adieresis ; B 3 0 597 753 ;\\r\\nC -1 ; WX 600 ; N egrave ; B 66 -15 548 672 ;\\r\\nC -1 ; WX 600 ; N zacute ; B 99 0 502 672 ;\\r\\nC -1 ; WX 600 ; N iogonek ; B 95 -172 505 657 ;\\r\\nC -1 ; WX 600 ; N Oacute ; B 43 -18 557 805 ;\\r\\nC -1 ; WX 600 ; N oacute ; B 62 -15 538 672 ;\\r\\nC -1 ; WX 600 ; N amacron ; B 53 -15 559 565 ;\\r\\nC -1 ; WX 600 ; N sacute ; B 80 -15 513 672 ;\\r\\nC -1 ; WX 600 ; N idieresis ; B 95 0 505 620 ;\\r\\nC -1 ; WX 600 ; N Ocircumflex ; B 43 -18 557 787 ;\\r\\nC -1 ; WX 600 ; N Ugrave ; B 17 -18 583 805 ;\\r\\nC -1 ; WX 600 ; N Delta ; B 6 0 598 688 ;\\r\\nC -1 ; WX 600 ; N thorn ; B -6 -157 555 629 ;\\r\\nC -1 ; WX 600 ; N twosuperior ; B 177 249 424 622 ;\\r\\nC -1 ; WX 600 ; N Odieresis ; B 43 -18 557 753 ;\\r\\nC -1 ; WX 600 ; N mu ; B 21 -157 562 426 ;\\r\\nC -1 ; WX 600 ; N igrave ; B 95 0 505 672 ;\\r\\nC -1 ; WX 600 ; N ohungarumlaut ; B 62 -15 580 672 ;\\r\\nC -1 ; WX 600 ; N Eogonek ; B 53 -172 561 562 ;\\r\\nC -1 ; WX 600 ; N dcroat ; B 45 -15 591 629 ;\\r\\nC -1 ; WX 600 ; N threequarters ; B 8 -56 593 666 ;\\r\\nC -1 ; WX 600 ; N Scedilla ; B 72 -151 529 580 ;\\r\\nC -1 ; WX 600 ; N lcaron ; B 95 0 533 629 ;\\r\\nC -1 ; WX 600 ; N Kcommaaccent ; B 38 -250 582 562 ;\\r\\nC -1 ; WX 600 ; N Lacute ; B 47 0 554 805 ;\\r\\nC -1 ; WX 600 ; N trademark ; B -23 263 623 562 ;\\r\\nC -1 ; WX 600 ; N edotaccent ; B 66 -15 548 620 ;\\r\\nC -1 ; WX 600 ; N Igrave ; B 96 0 504 805 ;\\r\\nC -1 ; WX 600 ; N Imacron ; B 96 0 504 698 ;\\r\\nC -1 ; WX 600 ; N Lcaron ; B 47 0 554 562 ;\\r\\nC -1 ; WX 600 ; N onehalf ; B 0 -57 611 665 ;\\r\\nC -1 ; WX 600 ; N lessequal ; B 98 0 502 710 ;\\r\\nC -1 ; WX 600 ; N ocircumflex ; B 62 -15 538 654 ;\\r\\nC -1 ; WX 600 ; N ntilde ; B 26 0 575 606 ;\\r\\nC -1 ; WX 600 ; N Uhungarumlaut ; B 17 -18 590 805 ;\\r\\nC -1 ; WX 600 ; N Eacute ; B 53 0 550 805 ;\\r\\nC -1 ; WX 600 ; N emacron ; B 66 -15 548 565 ;\\r\\nC -1 ; WX 600 ; N gbreve ; B 45 -157 566 609 ;\\r\\nC -1 ; WX 600 ; N onequarter ; B 0 -57 600 665 ;\\r\\nC -1 ; WX 600 ; N Scaron ; B 72 -20 529 802 ;\\r\\nC -1 ; WX 600 ; N Scommaaccent ; B 72 -250 529 580 ;\\r\\nC -1 ; WX 600 ; N Ohungarumlaut ; B 43 -18 580 805 ;\\r\\nC -1 ; WX 600 ; N degree ; B 123 269 477 622 ;\\r\\nC -1 ; WX 600 ; N ograve ; B 62 -15 538 672 ;\\r\\nC -1 ; WX 600 ; N Ccaron ; B 41 -18 540 802 ;\\r\\nC -1 ; WX 600 ; N ugrave ; B 21 -15 562 672 ;\\r\\nC -1 ; WX 600 ; N radical ; B 3 -15 597 792 ;\\r\\nC -1 ; WX 600 ; N Dcaron ; B 43 0 574 802 ;\\r\\nC -1 ; WX 600 ; N rcommaaccent ; B 60 -250 559 441 ;\\r\\nC -1 ; WX 600 ; N Ntilde ; B 7 -13 593 729 ;\\r\\nC -1 ; WX 600 ; N otilde ; B 62 -15 538 606 ;\\r\\nC -1 ; WX 600 ; N Rcommaaccent ; B 38 -250 588 562 ;\\r\\nC -1 ; WX 600 ; N Lcommaaccent ; B 47 -250 554 562 ;\\r\\nC -1 ; WX 600 ; N Atilde ; B 3 0 597 729 ;\\r\\nC -1 ; WX 600 ; N Aogonek ; B 3 -172 608 562 ;\\r\\nC -1 ; WX 600 ; N Aring ; B 3 0 597 750 ;\\r\\nC -1 ; WX 600 ; N Otilde ; B 43 -18 557 729 ;\\r\\nC -1 ; WX 600 ; N zdotaccent ; B 99 0 502 620 ;\\r\\nC -1 ; WX 600 ; N Ecaron ; B 53 0 550 802 ;\\r\\nC -1 ; WX 600 ; N Iogonek ; B 96 -172 504 562 ;\\r\\nC -1 ; WX 600 ; N kcommaaccent ; B 43 -250 580 629 ;\\r\\nC -1 ; WX 600 ; N minus ; B 80 232 520 283 ;\\r\\nC -1 ; WX 600 ; N Icircumflex ; B 96 0 504 787 ;\\r\\nC -1 ; WX 600 ; N ncaron ; B 26 0 575 669 ;\\r\\nC -1 ; WX 600 ; N tcommaaccent ; B 87 -250 530 561 ;\\r\\nC -1 ; WX 600 ; N logicalnot ; B 87 108 513 369 ;\\r\\nC -1 ; WX 600 ; N odieresis ; B 62 -15 538 620 ;\\r\\nC -1 ; WX 600 ; N udieresis ; B 21 -15 562 620 ;\\r\\nC -1 ; WX 600 ; N notequal ; B 15 -16 540 529 ;\\r\\nC -1 ; WX 600 ; N gcommaaccent ; B 45 -157 566 708 ;\\r\\nC -1 ; WX 600 ; N eth ; B 62 -15 538 629 ;\\r\\nC -1 ; WX 600 ; N zcaron ; B 99 0 502 669 ;\\r\\nC -1 ; WX 600 ; N ncommaaccent ; B 26 -250 575 441 ;\\r\\nC -1 ; WX 600 ; N onesuperior ; B 172 249 428 622 ;\\r\\nC -1 ; WX 600 ; N imacron ; B 95 0 505 565 ;\\r\\nC -1 ; WX 600 ; N Euro ; B 0 0 0 0 ;\\r\\nEndCharMetrics\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Courier.afm?`)},"./node_modules/pdfkit/js/data/Helvetica-Bold.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nComment Creation Date: Thu May  1 12:43:52 1997\\r\\nComment UniqueID 43052\\r\\nComment VMusage 37169 48194\\r\\nFontName Helvetica-Bold\\r\\nFullName Helvetica Bold\\r\\nFamilyName Helvetica\\r\\nWeight Bold\\r\\nItalicAngle 0\\r\\nIsFixedPitch false\\r\\nCharacterSet ExtendedRoman\\r\\nFontBBox -170 -228 1003 962 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 002.000\\r\\nNotice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.\\r\\nEncodingScheme AdobeStandardEncoding\\r\\nCapHeight 718\\r\\nXHeight 532\\r\\nAscender 718\\r\\nDescender -207\\r\\nStdHW 118\\r\\nStdVW 140\\r\\nStartCharMetrics 315\\r\\nC 32 ; WX 278 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 333 ; N exclam ; B 90 0 244 718 ;\\r\\nC 34 ; WX 474 ; N quotedbl ; B 98 447 376 718 ;\\r\\nC 35 ; WX 556 ; N numbersign ; B 18 0 538 698 ;\\r\\nC 36 ; WX 556 ; N dollar ; B 30 -115 523 775 ;\\r\\nC 37 ; WX 889 ; N percent ; B 28 -19 861 710 ;\\r\\nC 38 ; WX 722 ; N ampersand ; B 54 -19 701 718 ;\\r\\nC 39 ; WX 278 ; N quoteright ; B 69 445 209 718 ;\\r\\nC 40 ; WX 333 ; N parenleft ; B 35 -208 314 734 ;\\r\\nC 41 ; WX 333 ; N parenright ; B 19 -208 298 734 ;\\r\\nC 42 ; WX 389 ; N asterisk ; B 27 387 362 718 ;\\r\\nC 43 ; WX 584 ; N plus ; B 40 0 544 506 ;\\r\\nC 44 ; WX 278 ; N comma ; B 64 -168 214 146 ;\\r\\nC 45 ; WX 333 ; N hyphen ; B 27 215 306 345 ;\\r\\nC 46 ; WX 278 ; N period ; B 64 0 214 146 ;\\r\\nC 47 ; WX 278 ; N slash ; B -33 -19 311 737 ;\\r\\nC 48 ; WX 556 ; N zero ; B 32 -19 524 710 ;\\r\\nC 49 ; WX 556 ; N one ; B 69 0 378 710 ;\\r\\nC 50 ; WX 556 ; N two ; B 26 0 511 710 ;\\r\\nC 51 ; WX 556 ; N three ; B 27 -19 516 710 ;\\r\\nC 52 ; WX 556 ; N four ; B 27 0 526 710 ;\\r\\nC 53 ; WX 556 ; N five ; B 27 -19 516 698 ;\\r\\nC 54 ; WX 556 ; N six ; B 31 -19 520 710 ;\\r\\nC 55 ; WX 556 ; N seven ; B 25 0 528 698 ;\\r\\nC 56 ; WX 556 ; N eight ; B 32 -19 524 710 ;\\r\\nC 57 ; WX 556 ; N nine ; B 30 -19 522 710 ;\\r\\nC 58 ; WX 333 ; N colon ; B 92 0 242 512 ;\\r\\nC 59 ; WX 333 ; N semicolon ; B 92 -168 242 512 ;\\r\\nC 60 ; WX 584 ; N less ; B 38 -8 546 514 ;\\r\\nC 61 ; WX 584 ; N equal ; B 40 87 544 419 ;\\r\\nC 62 ; WX 584 ; N greater ; B 38 -8 546 514 ;\\r\\nC 63 ; WX 611 ; N question ; B 60 0 556 727 ;\\r\\nC 64 ; WX 975 ; N at ; B 118 -19 856 737 ;\\r\\nC 65 ; WX 722 ; N A ; B 20 0 702 718 ;\\r\\nC 66 ; WX 722 ; N B ; B 76 0 669 718 ;\\r\\nC 67 ; WX 722 ; N C ; B 44 -19 684 737 ;\\r\\nC 68 ; WX 722 ; N D ; B 76 0 685 718 ;\\r\\nC 69 ; WX 667 ; N E ; B 76 0 621 718 ;\\r\\nC 70 ; WX 611 ; N F ; B 76 0 587 718 ;\\r\\nC 71 ; WX 778 ; N G ; B 44 -19 713 737 ;\\r\\nC 72 ; WX 722 ; N H ; B 71 0 651 718 ;\\r\\nC 73 ; WX 278 ; N I ; B 64 0 214 718 ;\\r\\nC 74 ; WX 556 ; N J ; B 22 -18 484 718 ;\\r\\nC 75 ; WX 722 ; N K ; B 87 0 722 718 ;\\r\\nC 76 ; WX 611 ; N L ; B 76 0 583 718 ;\\r\\nC 77 ; WX 833 ; N M ; B 69 0 765 718 ;\\r\\nC 78 ; WX 722 ; N N ; B 69 0 654 718 ;\\r\\nC 79 ; WX 778 ; N O ; B 44 -19 734 737 ;\\r\\nC 80 ; WX 667 ; N P ; B 76 0 627 718 ;\\r\\nC 81 ; WX 778 ; N Q ; B 44 -52 737 737 ;\\r\\nC 82 ; WX 722 ; N R ; B 76 0 677 718 ;\\r\\nC 83 ; WX 667 ; N S ; B 39 -19 629 737 ;\\r\\nC 84 ; WX 611 ; N T ; B 14 0 598 718 ;\\r\\nC 85 ; WX 722 ; N U ; B 72 -19 651 718 ;\\r\\nC 86 ; WX 667 ; N V ; B 19 0 648 718 ;\\r\\nC 87 ; WX 944 ; N W ; B 16 0 929 718 ;\\r\\nC 88 ; WX 667 ; N X ; B 14 0 653 718 ;\\r\\nC 89 ; WX 667 ; N Y ; B 15 0 653 718 ;\\r\\nC 90 ; WX 611 ; N Z ; B 25 0 586 718 ;\\r\\nC 91 ; WX 333 ; N bracketleft ; B 63 -196 309 722 ;\\r\\nC 92 ; WX 278 ; N backslash ; B -33 -19 311 737 ;\\r\\nC 93 ; WX 333 ; N bracketright ; B 24 -196 270 722 ;\\r\\nC 94 ; WX 584 ; N asciicircum ; B 62 323 522 698 ;\\r\\nC 95 ; WX 556 ; N underscore ; B 0 -125 556 -75 ;\\r\\nC 96 ; WX 278 ; N quoteleft ; B 69 454 209 727 ;\\r\\nC 97 ; WX 556 ; N a ; B 29 -14 527 546 ;\\r\\nC 98 ; WX 611 ; N b ; B 61 -14 578 718 ;\\r\\nC 99 ; WX 556 ; N c ; B 34 -14 524 546 ;\\r\\nC 100 ; WX 611 ; N d ; B 34 -14 551 718 ;\\r\\nC 101 ; WX 556 ; N e ; B 23 -14 528 546 ;\\r\\nC 102 ; WX 333 ; N f ; B 10 0 318 727 ; L i fi ; L l fl ;\\r\\nC 103 ; WX 611 ; N g ; B 40 -217 553 546 ;\\r\\nC 104 ; WX 611 ; N h ; B 65 0 546 718 ;\\r\\nC 105 ; WX 278 ; N i ; B 69 0 209 725 ;\\r\\nC 106 ; WX 278 ; N j ; B 3 -214 209 725 ;\\r\\nC 107 ; WX 556 ; N k ; B 69 0 562 718 ;\\r\\nC 108 ; WX 278 ; N l ; B 69 0 209 718 ;\\r\\nC 109 ; WX 889 ; N m ; B 64 0 826 546 ;\\r\\nC 110 ; WX 611 ; N n ; B 65 0 546 546 ;\\r\\nC 111 ; WX 611 ; N o ; B 34 -14 578 546 ;\\r\\nC 112 ; WX 611 ; N p ; B 62 -207 578 546 ;\\r\\nC 113 ; WX 611 ; N q ; B 34 -207 552 546 ;\\r\\nC 114 ; WX 389 ; N r ; B 64 0 373 546 ;\\r\\nC 115 ; WX 556 ; N s ; B 30 -14 519 546 ;\\r\\nC 116 ; WX 333 ; N t ; B 10 -6 309 676 ;\\r\\nC 117 ; WX 611 ; N u ; B 66 -14 545 532 ;\\r\\nC 118 ; WX 556 ; N v ; B 13 0 543 532 ;\\r\\nC 119 ; WX 778 ; N w ; B 10 0 769 532 ;\\r\\nC 120 ; WX 556 ; N x ; B 15 0 541 532 ;\\r\\nC 121 ; WX 556 ; N y ; B 10 -214 539 532 ;\\r\\nC 122 ; WX 500 ; N z ; B 20 0 480 532 ;\\r\\nC 123 ; WX 389 ; N braceleft ; B 48 -196 365 722 ;\\r\\nC 124 ; WX 280 ; N bar ; B 84 -225 196 775 ;\\r\\nC 125 ; WX 389 ; N braceright ; B 24 -196 341 722 ;\\r\\nC 126 ; WX 584 ; N asciitilde ; B 61 163 523 343 ;\\r\\nC 161 ; WX 333 ; N exclamdown ; B 90 -186 244 532 ;\\r\\nC 162 ; WX 556 ; N cent ; B 34 -118 524 628 ;\\r\\nC 163 ; WX 556 ; N sterling ; B 28 -16 541 718 ;\\r\\nC 164 ; WX 167 ; N fraction ; B -170 -19 336 710 ;\\r\\nC 165 ; WX 556 ; N yen ; B -9 0 565 698 ;\\r\\nC 166 ; WX 556 ; N florin ; B -10 -210 516 737 ;\\r\\nC 167 ; WX 556 ; N section ; B 34 -184 522 727 ;\\r\\nC 168 ; WX 556 ; N currency ; B -3 76 559 636 ;\\r\\nC 169 ; WX 238 ; N quotesingle ; B 70 447 168 718 ;\\r\\nC 170 ; WX 500 ; N quotedblleft ; B 64 454 436 727 ;\\r\\nC 171 ; WX 556 ; N guillemotleft ; B 88 76 468 484 ;\\r\\nC 172 ; WX 333 ; N guilsinglleft ; B 83 76 250 484 ;\\r\\nC 173 ; WX 333 ; N guilsinglright ; B 83 76 250 484 ;\\r\\nC 174 ; WX 611 ; N fi ; B 10 0 542 727 ;\\r\\nC 175 ; WX 611 ; N fl ; B 10 0 542 727 ;\\r\\nC 177 ; WX 556 ; N endash ; B 0 227 556 333 ;\\r\\nC 178 ; WX 556 ; N dagger ; B 36 -171 520 718 ;\\r\\nC 179 ; WX 556 ; N daggerdbl ; B 36 -171 520 718 ;\\r\\nC 180 ; WX 278 ; N periodcentered ; B 58 172 220 334 ;\\r\\nC 182 ; WX 556 ; N paragraph ; B -8 -191 539 700 ;\\r\\nC 183 ; WX 350 ; N bullet ; B 10 194 340 524 ;\\r\\nC 184 ; WX 278 ; N quotesinglbase ; B 69 -146 209 127 ;\\r\\nC 185 ; WX 500 ; N quotedblbase ; B 64 -146 436 127 ;\\r\\nC 186 ; WX 500 ; N quotedblright ; B 64 445 436 718 ;\\r\\nC 187 ; WX 556 ; N guillemotright ; B 88 76 468 484 ;\\r\\nC 188 ; WX 1000 ; N ellipsis ; B 92 0 908 146 ;\\r\\nC 189 ; WX 1000 ; N perthousand ; B -3 -19 1003 710 ;\\r\\nC 191 ; WX 611 ; N questiondown ; B 55 -195 551 532 ;\\r\\nC 193 ; WX 333 ; N grave ; B -23 604 225 750 ;\\r\\nC 194 ; WX 333 ; N acute ; B 108 604 356 750 ;\\r\\nC 195 ; WX 333 ; N circumflex ; B -10 604 343 750 ;\\r\\nC 196 ; WX 333 ; N tilde ; B -17 610 350 737 ;\\r\\nC 197 ; WX 333 ; N macron ; B -6 604 339 678 ;\\r\\nC 198 ; WX 333 ; N breve ; B -2 604 335 750 ;\\r\\nC 199 ; WX 333 ; N dotaccent ; B 104 614 230 729 ;\\r\\nC 200 ; WX 333 ; N dieresis ; B 6 614 327 729 ;\\r\\nC 202 ; WX 333 ; N ring ; B 59 568 275 776 ;\\r\\nC 203 ; WX 333 ; N cedilla ; B 6 -228 245 0 ;\\r\\nC 205 ; WX 333 ; N hungarumlaut ; B 9 604 486 750 ;\\r\\nC 206 ; WX 333 ; N ogonek ; B 71 -228 304 0 ;\\r\\nC 207 ; WX 333 ; N caron ; B -10 604 343 750 ;\\r\\nC 208 ; WX 1000 ; N emdash ; B 0 227 1000 333 ;\\r\\nC 225 ; WX 1000 ; N AE ; B 5 0 954 718 ;\\r\\nC 227 ; WX 370 ; N ordfeminine ; B 22 401 347 737 ;\\r\\nC 232 ; WX 611 ; N Lslash ; B -20 0 583 718 ;\\r\\nC 233 ; WX 778 ; N Oslash ; B 33 -27 744 745 ;\\r\\nC 234 ; WX 1000 ; N OE ; B 37 -19 961 737 ;\\r\\nC 235 ; WX 365 ; N ordmasculine ; B 6 401 360 737 ;\\r\\nC 241 ; WX 889 ; N ae ; B 29 -14 858 546 ;\\r\\nC 245 ; WX 278 ; N dotlessi ; B 69 0 209 532 ;\\r\\nC 248 ; WX 278 ; N lslash ; B -18 0 296 718 ;\\r\\nC 249 ; WX 611 ; N oslash ; B 22 -29 589 560 ;\\r\\nC 250 ; WX 944 ; N oe ; B 34 -14 912 546 ;\\r\\nC 251 ; WX 611 ; N germandbls ; B 69 -14 579 731 ;\\r\\nC -1 ; WX 278 ; N Idieresis ; B -21 0 300 915 ;\\r\\nC -1 ; WX 556 ; N eacute ; B 23 -14 528 750 ;\\r\\nC -1 ; WX 556 ; N abreve ; B 29 -14 527 750 ;\\r\\nC -1 ; WX 611 ; N uhungarumlaut ; B 66 -14 625 750 ;\\r\\nC -1 ; WX 556 ; N ecaron ; B 23 -14 528 750 ;\\r\\nC -1 ; WX 667 ; N Ydieresis ; B 15 0 653 915 ;\\r\\nC -1 ; WX 584 ; N divide ; B 40 -42 544 548 ;\\r\\nC -1 ; WX 667 ; N Yacute ; B 15 0 653 936 ;\\r\\nC -1 ; WX 722 ; N Acircumflex ; B 20 0 702 936 ;\\r\\nC -1 ; WX 556 ; N aacute ; B 29 -14 527 750 ;\\r\\nC -1 ; WX 722 ; N Ucircumflex ; B 72 -19 651 936 ;\\r\\nC -1 ; WX 556 ; N yacute ; B 10 -214 539 750 ;\\r\\nC -1 ; WX 556 ; N scommaaccent ; B 30 -228 519 546 ;\\r\\nC -1 ; WX 556 ; N ecircumflex ; B 23 -14 528 750 ;\\r\\nC -1 ; WX 722 ; N Uring ; B 72 -19 651 962 ;\\r\\nC -1 ; WX 722 ; N Udieresis ; B 72 -19 651 915 ;\\r\\nC -1 ; WX 556 ; N aogonek ; B 29 -224 545 546 ;\\r\\nC -1 ; WX 722 ; N Uacute ; B 72 -19 651 936 ;\\r\\nC -1 ; WX 611 ; N uogonek ; B 66 -228 545 532 ;\\r\\nC -1 ; WX 667 ; N Edieresis ; B 76 0 621 915 ;\\r\\nC -1 ; WX 722 ; N Dcroat ; B -5 0 685 718 ;\\r\\nC -1 ; WX 250 ; N commaaccent ; B 64 -228 199 -50 ;\\r\\nC -1 ; WX 737 ; N copyright ; B -11 -19 749 737 ;\\r\\nC -1 ; WX 667 ; N Emacron ; B 76 0 621 864 ;\\r\\nC -1 ; WX 556 ; N ccaron ; B 34 -14 524 750 ;\\r\\nC -1 ; WX 556 ; N aring ; B 29 -14 527 776 ;\\r\\nC -1 ; WX 722 ; N Ncommaaccent ; B 69 -228 654 718 ;\\r\\nC -1 ; WX 278 ; N lacute ; B 69 0 329 936 ;\\r\\nC -1 ; WX 556 ; N agrave ; B 29 -14 527 750 ;\\r\\nC -1 ; WX 611 ; N Tcommaaccent ; B 14 -228 598 718 ;\\r\\nC -1 ; WX 722 ; N Cacute ; B 44 -19 684 936 ;\\r\\nC -1 ; WX 556 ; N atilde ; B 29 -14 527 737 ;\\r\\nC -1 ; WX 667 ; N Edotaccent ; B 76 0 621 915 ;\\r\\nC -1 ; WX 556 ; N scaron ; B 30 -14 519 750 ;\\r\\nC -1 ; WX 556 ; N scedilla ; B 30 -228 519 546 ;\\r\\nC -1 ; WX 278 ; N iacute ; B 69 0 329 750 ;\\r\\nC -1 ; WX 494 ; N lozenge ; B 10 0 484 745 ;\\r\\nC -1 ; WX 722 ; N Rcaron ; B 76 0 677 936 ;\\r\\nC -1 ; WX 778 ; N Gcommaaccent ; B 44 -228 713 737 ;\\r\\nC -1 ; WX 611 ; N ucircumflex ; B 66 -14 545 750 ;\\r\\nC -1 ; WX 556 ; N acircumflex ; B 29 -14 527 750 ;\\r\\nC -1 ; WX 722 ; N Amacron ; B 20 0 702 864 ;\\r\\nC -1 ; WX 389 ; N rcaron ; B 18 0 373 750 ;\\r\\nC -1 ; WX 556 ; N ccedilla ; B 34 -228 524 546 ;\\r\\nC -1 ; WX 611 ; N Zdotaccent ; B 25 0 586 915 ;\\r\\nC -1 ; WX 667 ; N Thorn ; B 76 0 627 718 ;\\r\\nC -1 ; WX 778 ; N Omacron ; B 44 -19 734 864 ;\\r\\nC -1 ; WX 722 ; N Racute ; B 76 0 677 936 ;\\r\\nC -1 ; WX 667 ; N Sacute ; B 39 -19 629 936 ;\\r\\nC -1 ; WX 743 ; N dcaron ; B 34 -14 750 718 ;\\r\\nC -1 ; WX 722 ; N Umacron ; B 72 -19 651 864 ;\\r\\nC -1 ; WX 611 ; N uring ; B 66 -14 545 776 ;\\r\\nC -1 ; WX 333 ; N threesuperior ; B 8 271 326 710 ;\\r\\nC -1 ; WX 778 ; N Ograve ; B 44 -19 734 936 ;\\r\\nC -1 ; WX 722 ; N Agrave ; B 20 0 702 936 ;\\r\\nC -1 ; WX 722 ; N Abreve ; B 20 0 702 936 ;\\r\\nC -1 ; WX 584 ; N multiply ; B 40 1 545 505 ;\\r\\nC -1 ; WX 611 ; N uacute ; B 66 -14 545 750 ;\\r\\nC -1 ; WX 611 ; N Tcaron ; B 14 0 598 936 ;\\r\\nC -1 ; WX 494 ; N partialdiff ; B 11 -21 494 750 ;\\r\\nC -1 ; WX 556 ; N ydieresis ; B 10 -214 539 729 ;\\r\\nC -1 ; WX 722 ; N Nacute ; B 69 0 654 936 ;\\r\\nC -1 ; WX 278 ; N icircumflex ; B -37 0 316 750 ;\\r\\nC -1 ; WX 667 ; N Ecircumflex ; B 76 0 621 936 ;\\r\\nC -1 ; WX 556 ; N adieresis ; B 29 -14 527 729 ;\\r\\nC -1 ; WX 556 ; N edieresis ; B 23 -14 528 729 ;\\r\\nC -1 ; WX 556 ; N cacute ; B 34 -14 524 750 ;\\r\\nC -1 ; WX 611 ; N nacute ; B 65 0 546 750 ;\\r\\nC -1 ; WX 611 ; N umacron ; B 66 -14 545 678 ;\\r\\nC -1 ; WX 722 ; N Ncaron ; B 69 0 654 936 ;\\r\\nC -1 ; WX 278 ; N Iacute ; B 64 0 329 936 ;\\r\\nC -1 ; WX 584 ; N plusminus ; B 40 0 544 506 ;\\r\\nC -1 ; WX 280 ; N brokenbar ; B 84 -150 196 700 ;\\r\\nC -1 ; WX 737 ; N registered ; B -11 -19 748 737 ;\\r\\nC -1 ; WX 778 ; N Gbreve ; B 44 -19 713 936 ;\\r\\nC -1 ; WX 278 ; N Idotaccent ; B 64 0 214 915 ;\\r\\nC -1 ; WX 600 ; N summation ; B 14 -10 585 706 ;\\r\\nC -1 ; WX 667 ; N Egrave ; B 76 0 621 936 ;\\r\\nC -1 ; WX 389 ; N racute ; B 64 0 384 750 ;\\r\\nC -1 ; WX 611 ; N omacron ; B 34 -14 578 678 ;\\r\\nC -1 ; WX 611 ; N Zacute ; B 25 0 586 936 ;\\r\\nC -1 ; WX 611 ; N Zcaron ; B 25 0 586 936 ;\\r\\nC -1 ; WX 549 ; N greaterequal ; B 26 0 523 704 ;\\r\\nC -1 ; WX 722 ; N Eth ; B -5 0 685 718 ;\\r\\nC -1 ; WX 722 ; N Ccedilla ; B 44 -228 684 737 ;\\r\\nC -1 ; WX 278 ; N lcommaaccent ; B 69 -228 213 718 ;\\r\\nC -1 ; WX 389 ; N tcaron ; B 10 -6 421 878 ;\\r\\nC -1 ; WX 556 ; N eogonek ; B 23 -228 528 546 ;\\r\\nC -1 ; WX 722 ; N Uogonek ; B 72 -228 651 718 ;\\r\\nC -1 ; WX 722 ; N Aacute ; B 20 0 702 936 ;\\r\\nC -1 ; WX 722 ; N Adieresis ; B 20 0 702 915 ;\\r\\nC -1 ; WX 556 ; N egrave ; B 23 -14 528 750 ;\\r\\nC -1 ; WX 500 ; N zacute ; B 20 0 480 750 ;\\r\\nC -1 ; WX 278 ; N iogonek ; B 16 -224 249 725 ;\\r\\nC -1 ; WX 778 ; N Oacute ; B 44 -19 734 936 ;\\r\\nC -1 ; WX 611 ; N oacute ; B 34 -14 578 750 ;\\r\\nC -1 ; WX 556 ; N amacron ; B 29 -14 527 678 ;\\r\\nC -1 ; WX 556 ; N sacute ; B 30 -14 519 750 ;\\r\\nC -1 ; WX 278 ; N idieresis ; B -21 0 300 729 ;\\r\\nC -1 ; WX 778 ; N Ocircumflex ; B 44 -19 734 936 ;\\r\\nC -1 ; WX 722 ; N Ugrave ; B 72 -19 651 936 ;\\r\\nC -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;\\r\\nC -1 ; WX 611 ; N thorn ; B 62 -208 578 718 ;\\r\\nC -1 ; WX 333 ; N twosuperior ; B 9 283 324 710 ;\\r\\nC -1 ; WX 778 ; N Odieresis ; B 44 -19 734 915 ;\\r\\nC -1 ; WX 611 ; N mu ; B 66 -207 545 532 ;\\r\\nC -1 ; WX 278 ; N igrave ; B -50 0 209 750 ;\\r\\nC -1 ; WX 611 ; N ohungarumlaut ; B 34 -14 625 750 ;\\r\\nC -1 ; WX 667 ; N Eogonek ; B 76 -224 639 718 ;\\r\\nC -1 ; WX 611 ; N dcroat ; B 34 -14 650 718 ;\\r\\nC -1 ; WX 834 ; N threequarters ; B 16 -19 799 710 ;\\r\\nC -1 ; WX 667 ; N Scedilla ; B 39 -228 629 737 ;\\r\\nC -1 ; WX 400 ; N lcaron ; B 69 0 408 718 ;\\r\\nC -1 ; WX 722 ; N Kcommaaccent ; B 87 -228 722 718 ;\\r\\nC -1 ; WX 611 ; N Lacute ; B 76 0 583 936 ;\\r\\nC -1 ; WX 1000 ; N trademark ; B 44 306 956 718 ;\\r\\nC -1 ; WX 556 ; N edotaccent ; B 23 -14 528 729 ;\\r\\nC -1 ; WX 278 ; N Igrave ; B -50 0 214 936 ;\\r\\nC -1 ; WX 278 ; N Imacron ; B -33 0 312 864 ;\\r\\nC -1 ; WX 611 ; N Lcaron ; B 76 0 583 718 ;\\r\\nC -1 ; WX 834 ; N onehalf ; B 26 -19 794 710 ;\\r\\nC -1 ; WX 549 ; N lessequal ; B 29 0 526 704 ;\\r\\nC -1 ; WX 611 ; N ocircumflex ; B 34 -14 578 750 ;\\r\\nC -1 ; WX 611 ; N ntilde ; B 65 0 546 737 ;\\r\\nC -1 ; WX 722 ; N Uhungarumlaut ; B 72 -19 681 936 ;\\r\\nC -1 ; WX 667 ; N Eacute ; B 76 0 621 936 ;\\r\\nC -1 ; WX 556 ; N emacron ; B 23 -14 528 678 ;\\r\\nC -1 ; WX 611 ; N gbreve ; B 40 -217 553 750 ;\\r\\nC -1 ; WX 834 ; N onequarter ; B 26 -19 766 710 ;\\r\\nC -1 ; WX 667 ; N Scaron ; B 39 -19 629 936 ;\\r\\nC -1 ; WX 667 ; N Scommaaccent ; B 39 -228 629 737 ;\\r\\nC -1 ; WX 778 ; N Ohungarumlaut ; B 44 -19 734 936 ;\\r\\nC -1 ; WX 400 ; N degree ; B 57 426 343 712 ;\\r\\nC -1 ; WX 611 ; N ograve ; B 34 -14 578 750 ;\\r\\nC -1 ; WX 722 ; N Ccaron ; B 44 -19 684 936 ;\\r\\nC -1 ; WX 611 ; N ugrave ; B 66 -14 545 750 ;\\r\\nC -1 ; WX 549 ; N radical ; B 10 -46 512 850 ;\\r\\nC -1 ; WX 722 ; N Dcaron ; B 76 0 685 936 ;\\r\\nC -1 ; WX 389 ; N rcommaaccent ; B 64 -228 373 546 ;\\r\\nC -1 ; WX 722 ; N Ntilde ; B 69 0 654 923 ;\\r\\nC -1 ; WX 611 ; N otilde ; B 34 -14 578 737 ;\\r\\nC -1 ; WX 722 ; N Rcommaaccent ; B 76 -228 677 718 ;\\r\\nC -1 ; WX 611 ; N Lcommaaccent ; B 76 -228 583 718 ;\\r\\nC -1 ; WX 722 ; N Atilde ; B 20 0 702 923 ;\\r\\nC -1 ; WX 722 ; N Aogonek ; B 20 -224 742 718 ;\\r\\nC -1 ; WX 722 ; N Aring ; B 20 0 702 962 ;\\r\\nC -1 ; WX 778 ; N Otilde ; B 44 -19 734 923 ;\\r\\nC -1 ; WX 500 ; N zdotaccent ; B 20 0 480 729 ;\\r\\nC -1 ; WX 667 ; N Ecaron ; B 76 0 621 936 ;\\r\\nC -1 ; WX 278 ; N Iogonek ; B -11 -228 222 718 ;\\r\\nC -1 ; WX 556 ; N kcommaaccent ; B 69 -228 562 718 ;\\r\\nC -1 ; WX 584 ; N minus ; B 40 197 544 309 ;\\r\\nC -1 ; WX 278 ; N Icircumflex ; B -37 0 316 936 ;\\r\\nC -1 ; WX 611 ; N ncaron ; B 65 0 546 750 ;\\r\\nC -1 ; WX 333 ; N tcommaaccent ; B 10 -228 309 676 ;\\r\\nC -1 ; WX 584 ; N logicalnot ; B 40 108 544 419 ;\\r\\nC -1 ; WX 611 ; N odieresis ; B 34 -14 578 729 ;\\r\\nC -1 ; WX 611 ; N udieresis ; B 66 -14 545 729 ;\\r\\nC -1 ; WX 549 ; N notequal ; B 15 -49 540 570 ;\\r\\nC -1 ; WX 611 ; N gcommaaccent ; B 40 -217 553 850 ;\\r\\nC -1 ; WX 611 ; N eth ; B 34 -14 578 737 ;\\r\\nC -1 ; WX 500 ; N zcaron ; B 20 0 480 750 ;\\r\\nC -1 ; WX 611 ; N ncommaaccent ; B 65 -228 546 546 ;\\r\\nC -1 ; WX 333 ; N onesuperior ; B 26 283 237 710 ;\\r\\nC -1 ; WX 278 ; N imacron ; B -8 0 285 678 ;\\r\\nC -1 ; WX 556 ; N Euro ; B 0 0 0 0 ;\\r\\nEndCharMetrics\\r\\nStartKernData\\r\\nStartKernPairs 2481\\r\\nKPX A C -40\\r\\nKPX A Cacute -40\\r\\nKPX A Ccaron -40\\r\\nKPX A Ccedilla -40\\r\\nKPX A G -50\\r\\nKPX A Gbreve -50\\r\\nKPX A Gcommaaccent -50\\r\\nKPX A O -40\\r\\nKPX A Oacute -40\\r\\nKPX A Ocircumflex -40\\r\\nKPX A Odieresis -40\\r\\nKPX A Ograve -40\\r\\nKPX A Ohungarumlaut -40\\r\\nKPX A Omacron -40\\r\\nKPX A Oslash -40\\r\\nKPX A Otilde -40\\r\\nKPX A Q -40\\r\\nKPX A T -90\\r\\nKPX A Tcaron -90\\r\\nKPX A Tcommaaccent -90\\r\\nKPX A U -50\\r\\nKPX A Uacute -50\\r\\nKPX A Ucircumflex -50\\r\\nKPX A Udieresis -50\\r\\nKPX A Ugrave -50\\r\\nKPX A Uhungarumlaut -50\\r\\nKPX A Umacron -50\\r\\nKPX A Uogonek -50\\r\\nKPX A Uring -50\\r\\nKPX A V -80\\r\\nKPX A W -60\\r\\nKPX A Y -110\\r\\nKPX A Yacute -110\\r\\nKPX A Ydieresis -110\\r\\nKPX A u -30\\r\\nKPX A uacute -30\\r\\nKPX A ucircumflex -30\\r\\nKPX A udieresis -30\\r\\nKPX A ugrave -30\\r\\nKPX A uhungarumlaut -30\\r\\nKPX A umacron -30\\r\\nKPX A uogonek -30\\r\\nKPX A uring -30\\r\\nKPX A v -40\\r\\nKPX A w -30\\r\\nKPX A y -30\\r\\nKPX A yacute -30\\r\\nKPX A ydieresis -30\\r\\nKPX Aacute C -40\\r\\nKPX Aacute Cacute -40\\r\\nKPX Aacute Ccaron -40\\r\\nKPX Aacute Ccedilla -40\\r\\nKPX Aacute G -50\\r\\nKPX Aacute Gbreve -50\\r\\nKPX Aacute Gcommaaccent -50\\r\\nKPX Aacute O -40\\r\\nKPX Aacute Oacute -40\\r\\nKPX Aacute Ocircumflex -40\\r\\nKPX Aacute Odieresis -40\\r\\nKPX Aacute Ograve -40\\r\\nKPX Aacute Ohungarumlaut -40\\r\\nKPX Aacute Omacron -40\\r\\nKPX Aacute Oslash -40\\r\\nKPX Aacute Otilde -40\\r\\nKPX Aacute Q -40\\r\\nKPX Aacute T -90\\r\\nKPX Aacute Tcaron -90\\r\\nKPX Aacute Tcommaaccent -90\\r\\nKPX Aacute U -50\\r\\nKPX Aacute Uacute -50\\r\\nKPX Aacute Ucircumflex -50\\r\\nKPX Aacute Udieresis -50\\r\\nKPX Aacute Ugrave -50\\r\\nKPX Aacute Uhungarumlaut -50\\r\\nKPX Aacute Umacron -50\\r\\nKPX Aacute Uogonek -50\\r\\nKPX Aacute Uring -50\\r\\nKPX Aacute V -80\\r\\nKPX Aacute W -60\\r\\nKPX Aacute Y -110\\r\\nKPX Aacute Yacute -110\\r\\nKPX Aacute Ydieresis -110\\r\\nKPX Aacute u -30\\r\\nKPX Aacute uacute -30\\r\\nKPX Aacute ucircumflex -30\\r\\nKPX Aacute udieresis -30\\r\\nKPX Aacute ugrave -30\\r\\nKPX Aacute uhungarumlaut -30\\r\\nKPX Aacute umacron -30\\r\\nKPX Aacute uogonek -30\\r\\nKPX Aacute uring -30\\r\\nKPX Aacute v -40\\r\\nKPX Aacute w -30\\r\\nKPX Aacute y -30\\r\\nKPX Aacute yacute -30\\r\\nKPX Aacute ydieresis -30\\r\\nKPX Abreve C -40\\r\\nKPX Abreve Cacute -40\\r\\nKPX Abreve Ccaron -40\\r\\nKPX Abreve Ccedilla -40\\r\\nKPX Abreve G -50\\r\\nKPX Abreve Gbreve -50\\r\\nKPX Abreve Gcommaaccent -50\\r\\nKPX Abreve O -40\\r\\nKPX Abreve Oacute -40\\r\\nKPX Abreve Ocircumflex -40\\r\\nKPX Abreve Odieresis -40\\r\\nKPX Abreve Ograve -40\\r\\nKPX Abreve Ohungarumlaut -40\\r\\nKPX Abreve Omacron -40\\r\\nKPX Abreve Oslash -40\\r\\nKPX Abreve Otilde -40\\r\\nKPX Abreve Q -40\\r\\nKPX Abreve T -90\\r\\nKPX Abreve Tcaron -90\\r\\nKPX Abreve Tcommaaccent -90\\r\\nKPX Abreve U -50\\r\\nKPX Abreve Uacute -50\\r\\nKPX Abreve Ucircumflex -50\\r\\nKPX Abreve Udieresis -50\\r\\nKPX Abreve Ugrave -50\\r\\nKPX Abreve Uhungarumlaut -50\\r\\nKPX Abreve Umacron -50\\r\\nKPX Abreve Uogonek -50\\r\\nKPX Abreve Uring -50\\r\\nKPX Abreve V -80\\r\\nKPX Abreve W -60\\r\\nKPX Abreve Y -110\\r\\nKPX Abreve Yacute -110\\r\\nKPX Abreve Ydieresis -110\\r\\nKPX Abreve u -30\\r\\nKPX Abreve uacute -30\\r\\nKPX Abreve ucircumflex -30\\r\\nKPX Abreve udieresis -30\\r\\nKPX Abreve ugrave -30\\r\\nKPX Abreve uhungarumlaut -30\\r\\nKPX Abreve umacron -30\\r\\nKPX Abreve uogonek -30\\r\\nKPX Abreve uring -30\\r\\nKPX Abreve v -40\\r\\nKPX Abreve w -30\\r\\nKPX Abreve y -30\\r\\nKPX Abreve yacute -30\\r\\nKPX Abreve ydieresis -30\\r\\nKPX Acircumflex C -40\\r\\nKPX Acircumflex Cacute -40\\r\\nKPX Acircumflex Ccaron -40\\r\\nKPX Acircumflex Ccedilla -40\\r\\nKPX Acircumflex G -50\\r\\nKPX Acircumflex Gbreve -50\\r\\nKPX Acircumflex Gcommaaccent -50\\r\\nKPX Acircumflex O -40\\r\\nKPX Acircumflex Oacute -40\\r\\nKPX Acircumflex Ocircumflex -40\\r\\nKPX Acircumflex Odieresis -40\\r\\nKPX Acircumflex Ograve -40\\r\\nKPX Acircumflex Ohungarumlaut -40\\r\\nKPX Acircumflex Omacron -40\\r\\nKPX Acircumflex Oslash -40\\r\\nKPX Acircumflex Otilde -40\\r\\nKPX Acircumflex Q -40\\r\\nKPX Acircumflex T -90\\r\\nKPX Acircumflex Tcaron -90\\r\\nKPX Acircumflex Tcommaaccent -90\\r\\nKPX Acircumflex U -50\\r\\nKPX Acircumflex Uacute -50\\r\\nKPX Acircumflex Ucircumflex -50\\r\\nKPX Acircumflex Udieresis -50\\r\\nKPX Acircumflex Ugrave -50\\r\\nKPX Acircumflex Uhungarumlaut -50\\r\\nKPX Acircumflex Umacron -50\\r\\nKPX Acircumflex Uogonek -50\\r\\nKPX Acircumflex Uring -50\\r\\nKPX Acircumflex V -80\\r\\nKPX Acircumflex W -60\\r\\nKPX Acircumflex Y -110\\r\\nKPX Acircumflex Yacute -110\\r\\nKPX Acircumflex Ydieresis -110\\r\\nKPX Acircumflex u -30\\r\\nKPX Acircumflex uacute -30\\r\\nKPX Acircumflex ucircumflex -30\\r\\nKPX Acircumflex udieresis -30\\r\\nKPX Acircumflex ugrave -30\\r\\nKPX Acircumflex uhungarumlaut -30\\r\\nKPX Acircumflex umacron -30\\r\\nKPX Acircumflex uogonek -30\\r\\nKPX Acircumflex uring -30\\r\\nKPX Acircumflex v -40\\r\\nKPX Acircumflex w -30\\r\\nKPX Acircumflex y -30\\r\\nKPX Acircumflex yacute -30\\r\\nKPX Acircumflex ydieresis -30\\r\\nKPX Adieresis C -40\\r\\nKPX Adieresis Cacute -40\\r\\nKPX Adieresis Ccaron -40\\r\\nKPX Adieresis Ccedilla -40\\r\\nKPX Adieresis G -50\\r\\nKPX Adieresis Gbreve -50\\r\\nKPX Adieresis Gcommaaccent -50\\r\\nKPX Adieresis O -40\\r\\nKPX Adieresis Oacute -40\\r\\nKPX Adieresis Ocircumflex -40\\r\\nKPX Adieresis Odieresis -40\\r\\nKPX Adieresis Ograve -40\\r\\nKPX Adieresis Ohungarumlaut -40\\r\\nKPX Adieresis Omacron -40\\r\\nKPX Adieresis Oslash -40\\r\\nKPX Adieresis Otilde -40\\r\\nKPX Adieresis Q -40\\r\\nKPX Adieresis T -90\\r\\nKPX Adieresis Tcaron -90\\r\\nKPX Adieresis Tcommaaccent -90\\r\\nKPX Adieresis U -50\\r\\nKPX Adieresis Uacute -50\\r\\nKPX Adieresis Ucircumflex -50\\r\\nKPX Adieresis Udieresis -50\\r\\nKPX Adieresis Ugrave -50\\r\\nKPX Adieresis Uhungarumlaut -50\\r\\nKPX Adieresis Umacron -50\\r\\nKPX Adieresis Uogonek -50\\r\\nKPX Adieresis Uring -50\\r\\nKPX Adieresis V -80\\r\\nKPX Adieresis W -60\\r\\nKPX Adieresis Y -110\\r\\nKPX Adieresis Yacute -110\\r\\nKPX Adieresis Ydieresis -110\\r\\nKPX Adieresis u -30\\r\\nKPX Adieresis uacute -30\\r\\nKPX Adieresis ucircumflex -30\\r\\nKPX Adieresis udieresis -30\\r\\nKPX Adieresis ugrave -30\\r\\nKPX Adieresis uhungarumlaut -30\\r\\nKPX Adieresis umacron -30\\r\\nKPX Adieresis uogonek -30\\r\\nKPX Adieresis uring -30\\r\\nKPX Adieresis v -40\\r\\nKPX Adieresis w -30\\r\\nKPX Adieresis y -30\\r\\nKPX Adieresis yacute -30\\r\\nKPX Adieresis ydieresis -30\\r\\nKPX Agrave C -40\\r\\nKPX Agrave Cacute -40\\r\\nKPX Agrave Ccaron -40\\r\\nKPX Agrave Ccedilla -40\\r\\nKPX Agrave G -50\\r\\nKPX Agrave Gbreve -50\\r\\nKPX Agrave Gcommaaccent -50\\r\\nKPX Agrave O -40\\r\\nKPX Agrave Oacute -40\\r\\nKPX Agrave Ocircumflex -40\\r\\nKPX Agrave Odieresis -40\\r\\nKPX Agrave Ograve -40\\r\\nKPX Agrave Ohungarumlaut -40\\r\\nKPX Agrave Omacron -40\\r\\nKPX Agrave Oslash -40\\r\\nKPX Agrave Otilde -40\\r\\nKPX Agrave Q -40\\r\\nKPX Agrave T -90\\r\\nKPX Agrave Tcaron -90\\r\\nKPX Agrave Tcommaaccent -90\\r\\nKPX Agrave U -50\\r\\nKPX Agrave Uacute -50\\r\\nKPX Agrave Ucircumflex -50\\r\\nKPX Agrave Udieresis -50\\r\\nKPX Agrave Ugrave -50\\r\\nKPX Agrave Uhungarumlaut -50\\r\\nKPX Agrave Umacron -50\\r\\nKPX Agrave Uogonek -50\\r\\nKPX Agrave Uring -50\\r\\nKPX Agrave V -80\\r\\nKPX Agrave W -60\\r\\nKPX Agrave Y -110\\r\\nKPX Agrave Yacute -110\\r\\nKPX Agrave Ydieresis -110\\r\\nKPX Agrave u -30\\r\\nKPX Agrave uacute -30\\r\\nKPX Agrave ucircumflex -30\\r\\nKPX Agrave udieresis -30\\r\\nKPX Agrave ugrave -30\\r\\nKPX Agrave uhungarumlaut -30\\r\\nKPX Agrave umacron -30\\r\\nKPX Agrave uogonek -30\\r\\nKPX Agrave uring -30\\r\\nKPX Agrave v -40\\r\\nKPX Agrave w -30\\r\\nKPX Agrave y -30\\r\\nKPX Agrave yacute -30\\r\\nKPX Agrave ydieresis -30\\r\\nKPX Amacron C -40\\r\\nKPX Amacron Cacute -40\\r\\nKPX Amacron Ccaron -40\\r\\nKPX Amacron Ccedilla -40\\r\\nKPX Amacron G -50\\r\\nKPX Amacron Gbreve -50\\r\\nKPX Amacron Gcommaaccent -50\\r\\nKPX Amacron O -40\\r\\nKPX Amacron Oacute -40\\r\\nKPX Amacron Ocircumflex -40\\r\\nKPX Amacron Odieresis -40\\r\\nKPX Amacron Ograve -40\\r\\nKPX Amacron Ohungarumlaut -40\\r\\nKPX Amacron Omacron -40\\r\\nKPX Amacron Oslash -40\\r\\nKPX Amacron Otilde -40\\r\\nKPX Amacron Q -40\\r\\nKPX Amacron T -90\\r\\nKPX Amacron Tcaron -90\\r\\nKPX Amacron Tcommaaccent -90\\r\\nKPX Amacron U -50\\r\\nKPX Amacron Uacute -50\\r\\nKPX Amacron Ucircumflex -50\\r\\nKPX Amacron Udieresis -50\\r\\nKPX Amacron Ugrave -50\\r\\nKPX Amacron Uhungarumlaut -50\\r\\nKPX Amacron Umacron -50\\r\\nKPX Amacron Uogonek -50\\r\\nKPX Amacron Uring -50\\r\\nKPX Amacron V -80\\r\\nKPX Amacron W -60\\r\\nKPX Amacron Y -110\\r\\nKPX Amacron Yacute -110\\r\\nKPX Amacron Ydieresis -110\\r\\nKPX Amacron u -30\\r\\nKPX Amacron uacute -30\\r\\nKPX Amacron ucircumflex -30\\r\\nKPX Amacron udieresis -30\\r\\nKPX Amacron ugrave -30\\r\\nKPX Amacron uhungarumlaut -30\\r\\nKPX Amacron umacron -30\\r\\nKPX Amacron uogonek -30\\r\\nKPX Amacron uring -30\\r\\nKPX Amacron v -40\\r\\nKPX Amacron w -30\\r\\nKPX Amacron y -30\\r\\nKPX Amacron yacute -30\\r\\nKPX Amacron ydieresis -30\\r\\nKPX Aogonek C -40\\r\\nKPX Aogonek Cacute -40\\r\\nKPX Aogonek Ccaron -40\\r\\nKPX Aogonek Ccedilla -40\\r\\nKPX Aogonek G -50\\r\\nKPX Aogonek Gbreve -50\\r\\nKPX Aogonek Gcommaaccent -50\\r\\nKPX Aogonek O -40\\r\\nKPX Aogonek Oacute -40\\r\\nKPX Aogonek Ocircumflex -40\\r\\nKPX Aogonek Odieresis -40\\r\\nKPX Aogonek Ograve -40\\r\\nKPX Aogonek Ohungarumlaut -40\\r\\nKPX Aogonek Omacron -40\\r\\nKPX Aogonek Oslash -40\\r\\nKPX Aogonek Otilde -40\\r\\nKPX Aogonek Q -40\\r\\nKPX Aogonek T -90\\r\\nKPX Aogonek Tcaron -90\\r\\nKPX Aogonek Tcommaaccent -90\\r\\nKPX Aogonek U -50\\r\\nKPX Aogonek Uacute -50\\r\\nKPX Aogonek Ucircumflex -50\\r\\nKPX Aogonek Udieresis -50\\r\\nKPX Aogonek Ugrave -50\\r\\nKPX Aogonek Uhungarumlaut -50\\r\\nKPX Aogonek Umacron -50\\r\\nKPX Aogonek Uogonek -50\\r\\nKPX Aogonek Uring -50\\r\\nKPX Aogonek V -80\\r\\nKPX Aogonek W -60\\r\\nKPX Aogonek Y -110\\r\\nKPX Aogonek Yacute -110\\r\\nKPX Aogonek Ydieresis -110\\r\\nKPX Aogonek u -30\\r\\nKPX Aogonek uacute -30\\r\\nKPX Aogonek ucircumflex -30\\r\\nKPX Aogonek udieresis -30\\r\\nKPX Aogonek ugrave -30\\r\\nKPX Aogonek uhungarumlaut -30\\r\\nKPX Aogonek umacron -30\\r\\nKPX Aogonek uogonek -30\\r\\nKPX Aogonek uring -30\\r\\nKPX Aogonek v -40\\r\\nKPX Aogonek w -30\\r\\nKPX Aogonek y -30\\r\\nKPX Aogonek yacute -30\\r\\nKPX Aogonek ydieresis -30\\r\\nKPX Aring C -40\\r\\nKPX Aring Cacute -40\\r\\nKPX Aring Ccaron -40\\r\\nKPX Aring Ccedilla -40\\r\\nKPX Aring G -50\\r\\nKPX Aring Gbreve -50\\r\\nKPX Aring Gcommaaccent -50\\r\\nKPX Aring O -40\\r\\nKPX Aring Oacute -40\\r\\nKPX Aring Ocircumflex -40\\r\\nKPX Aring Odieresis -40\\r\\nKPX Aring Ograve -40\\r\\nKPX Aring Ohungarumlaut -40\\r\\nKPX Aring Omacron -40\\r\\nKPX Aring Oslash -40\\r\\nKPX Aring Otilde -40\\r\\nKPX Aring Q -40\\r\\nKPX Aring T -90\\r\\nKPX Aring Tcaron -90\\r\\nKPX Aring Tcommaaccent -90\\r\\nKPX Aring U -50\\r\\nKPX Aring Uacute -50\\r\\nKPX Aring Ucircumflex -50\\r\\nKPX Aring Udieresis -50\\r\\nKPX Aring Ugrave -50\\r\\nKPX Aring Uhungarumlaut -50\\r\\nKPX Aring Umacron -50\\r\\nKPX Aring Uogonek -50\\r\\nKPX Aring Uring -50\\r\\nKPX Aring V -80\\r\\nKPX Aring W -60\\r\\nKPX Aring Y -110\\r\\nKPX Aring Yacute -110\\r\\nKPX Aring Ydieresis -110\\r\\nKPX Aring u -30\\r\\nKPX Aring uacute -30\\r\\nKPX Aring ucircumflex -30\\r\\nKPX Aring udieresis -30\\r\\nKPX Aring ugrave -30\\r\\nKPX Aring uhungarumlaut -30\\r\\nKPX Aring umacron -30\\r\\nKPX Aring uogonek -30\\r\\nKPX Aring uring -30\\r\\nKPX Aring v -40\\r\\nKPX Aring w -30\\r\\nKPX Aring y -30\\r\\nKPX Aring yacute -30\\r\\nKPX Aring ydieresis -30\\r\\nKPX Atilde C -40\\r\\nKPX Atilde Cacute -40\\r\\nKPX Atilde Ccaron -40\\r\\nKPX Atilde Ccedilla -40\\r\\nKPX Atilde G -50\\r\\nKPX Atilde Gbreve -50\\r\\nKPX Atilde Gcommaaccent -50\\r\\nKPX Atilde O -40\\r\\nKPX Atilde Oacute -40\\r\\nKPX Atilde Ocircumflex -40\\r\\nKPX Atilde Odieresis -40\\r\\nKPX Atilde Ograve -40\\r\\nKPX Atilde Ohungarumlaut -40\\r\\nKPX Atilde Omacron -40\\r\\nKPX Atilde Oslash -40\\r\\nKPX Atilde Otilde -40\\r\\nKPX Atilde Q -40\\r\\nKPX Atilde T -90\\r\\nKPX Atilde Tcaron -90\\r\\nKPX Atilde Tcommaaccent -90\\r\\nKPX Atilde U -50\\r\\nKPX Atilde Uacute -50\\r\\nKPX Atilde Ucircumflex -50\\r\\nKPX Atilde Udieresis -50\\r\\nKPX Atilde Ugrave -50\\r\\nKPX Atilde Uhungarumlaut -50\\r\\nKPX Atilde Umacron -50\\r\\nKPX Atilde Uogonek -50\\r\\nKPX Atilde Uring -50\\r\\nKPX Atilde V -80\\r\\nKPX Atilde W -60\\r\\nKPX Atilde Y -110\\r\\nKPX Atilde Yacute -110\\r\\nKPX Atilde Ydieresis -110\\r\\nKPX Atilde u -30\\r\\nKPX Atilde uacute -30\\r\\nKPX Atilde ucircumflex -30\\r\\nKPX Atilde udieresis -30\\r\\nKPX Atilde ugrave -30\\r\\nKPX Atilde uhungarumlaut -30\\r\\nKPX Atilde umacron -30\\r\\nKPX Atilde uogonek -30\\r\\nKPX Atilde uring -30\\r\\nKPX Atilde v -40\\r\\nKPX Atilde w -30\\r\\nKPX Atilde y -30\\r\\nKPX Atilde yacute -30\\r\\nKPX Atilde ydieresis -30\\r\\nKPX B A -30\\r\\nKPX B Aacute -30\\r\\nKPX B Abreve -30\\r\\nKPX B Acircumflex -30\\r\\nKPX B Adieresis -30\\r\\nKPX B Agrave -30\\r\\nKPX B Amacron -30\\r\\nKPX B Aogonek -30\\r\\nKPX B Aring -30\\r\\nKPX B Atilde -30\\r\\nKPX B U -10\\r\\nKPX B Uacute -10\\r\\nKPX B Ucircumflex -10\\r\\nKPX B Udieresis -10\\r\\nKPX B Ugrave -10\\r\\nKPX B Uhungarumlaut -10\\r\\nKPX B Umacron -10\\r\\nKPX B Uogonek -10\\r\\nKPX B Uring -10\\r\\nKPX D A -40\\r\\nKPX D Aacute -40\\r\\nKPX D Abreve -40\\r\\nKPX D Acircumflex -40\\r\\nKPX D Adieresis -40\\r\\nKPX D Agrave -40\\r\\nKPX D Amacron -40\\r\\nKPX D Aogonek -40\\r\\nKPX D Aring -40\\r\\nKPX D Atilde -40\\r\\nKPX D V -40\\r\\nKPX D W -40\\r\\nKPX D Y -70\\r\\nKPX D Yacute -70\\r\\nKPX D Ydieresis -70\\r\\nKPX D comma -30\\r\\nKPX D period -30\\r\\nKPX Dcaron A -40\\r\\nKPX Dcaron Aacute -40\\r\\nKPX Dcaron Abreve -40\\r\\nKPX Dcaron Acircumflex -40\\r\\nKPX Dcaron Adieresis -40\\r\\nKPX Dcaron Agrave -40\\r\\nKPX Dcaron Amacron -40\\r\\nKPX Dcaron Aogonek -40\\r\\nKPX Dcaron Aring -40\\r\\nKPX Dcaron Atilde -40\\r\\nKPX Dcaron V -40\\r\\nKPX Dcaron W -40\\r\\nKPX Dcaron Y -70\\r\\nKPX Dcaron Yacute -70\\r\\nKPX Dcaron Ydieresis -70\\r\\nKPX Dcaron comma -30\\r\\nKPX Dcaron period -30\\r\\nKPX Dcroat A -40\\r\\nKPX Dcroat Aacute -40\\r\\nKPX Dcroat Abreve -40\\r\\nKPX Dcroat Acircumflex -40\\r\\nKPX Dcroat Adieresis -40\\r\\nKPX Dcroat Agrave -40\\r\\nKPX Dcroat Amacron -40\\r\\nKPX Dcroat Aogonek -40\\r\\nKPX Dcroat Aring -40\\r\\nKPX Dcroat Atilde -40\\r\\nKPX Dcroat V -40\\r\\nKPX Dcroat W -40\\r\\nKPX Dcroat Y -70\\r\\nKPX Dcroat Yacute -70\\r\\nKPX Dcroat Ydieresis -70\\r\\nKPX Dcroat comma -30\\r\\nKPX Dcroat period -30\\r\\nKPX F A -80\\r\\nKPX F Aacute -80\\r\\nKPX F Abreve -80\\r\\nKPX F Acircumflex -80\\r\\nKPX F Adieresis -80\\r\\nKPX F Agrave -80\\r\\nKPX F Amacron -80\\r\\nKPX F Aogonek -80\\r\\nKPX F Aring -80\\r\\nKPX F Atilde -80\\r\\nKPX F a -20\\r\\nKPX F aacute -20\\r\\nKPX F abreve -20\\r\\nKPX F acircumflex -20\\r\\nKPX F adieresis -20\\r\\nKPX F agrave -20\\r\\nKPX F amacron -20\\r\\nKPX F aogonek -20\\r\\nKPX F aring -20\\r\\nKPX F atilde -20\\r\\nKPX F comma -100\\r\\nKPX F period -100\\r\\nKPX J A -20\\r\\nKPX J Aacute -20\\r\\nKPX J Abreve -20\\r\\nKPX J Acircumflex -20\\r\\nKPX J Adieresis -20\\r\\nKPX J Agrave -20\\r\\nKPX J Amacron -20\\r\\nKPX J Aogonek -20\\r\\nKPX J Aring -20\\r\\nKPX J Atilde -20\\r\\nKPX J comma -20\\r\\nKPX J period -20\\r\\nKPX J u -20\\r\\nKPX J uacute -20\\r\\nKPX J ucircumflex -20\\r\\nKPX J udieresis -20\\r\\nKPX J ugrave -20\\r\\nKPX J uhungarumlaut -20\\r\\nKPX J umacron -20\\r\\nKPX J uogonek -20\\r\\nKPX J uring -20\\r\\nKPX K O -30\\r\\nKPX K Oacute -30\\r\\nKPX K Ocircumflex -30\\r\\nKPX K Odieresis -30\\r\\nKPX K Ograve -30\\r\\nKPX K Ohungarumlaut -30\\r\\nKPX K Omacron -30\\r\\nKPX K Oslash -30\\r\\nKPX K Otilde -30\\r\\nKPX K e -15\\r\\nKPX K eacute -15\\r\\nKPX K ecaron -15\\r\\nKPX K ecircumflex -15\\r\\nKPX K edieresis -15\\r\\nKPX K edotaccent -15\\r\\nKPX K egrave -15\\r\\nKPX K emacron -15\\r\\nKPX K eogonek -15\\r\\nKPX K o -35\\r\\nKPX K oacute -35\\r\\nKPX K ocircumflex -35\\r\\nKPX K odieresis -35\\r\\nKPX K ograve -35\\r\\nKPX K ohungarumlaut -35\\r\\nKPX K omacron -35\\r\\nKPX K oslash -35\\r\\nKPX K otilde -35\\r\\nKPX K u -30\\r\\nKPX K uacute -30\\r\\nKPX K ucircumflex -30\\r\\nKPX K udieresis -30\\r\\nKPX K ugrave -30\\r\\nKPX K uhungarumlaut -30\\r\\nKPX K umacron -30\\r\\nKPX K uogonek -30\\r\\nKPX K uring -30\\r\\nKPX K y -40\\r\\nKPX K yacute -40\\r\\nKPX K ydieresis -40\\r\\nKPX Kcommaaccent O -30\\r\\nKPX Kcommaaccent Oacute -30\\r\\nKPX Kcommaaccent Ocircumflex -30\\r\\nKPX Kcommaaccent Odieresis -30\\r\\nKPX Kcommaaccent Ograve -30\\r\\nKPX Kcommaaccent Ohungarumlaut -30\\r\\nKPX Kcommaaccent Omacron -30\\r\\nKPX Kcommaaccent Oslash -30\\r\\nKPX Kcommaaccent Otilde -30\\r\\nKPX Kcommaaccent e -15\\r\\nKPX Kcommaaccent eacute -15\\r\\nKPX Kcommaaccent ecaron -15\\r\\nKPX Kcommaaccent ecircumflex -15\\r\\nKPX Kcommaaccent edieresis -15\\r\\nKPX Kcommaaccent edotaccent -15\\r\\nKPX Kcommaaccent egrave -15\\r\\nKPX Kcommaaccent emacron -15\\r\\nKPX Kcommaaccent eogonek -15\\r\\nKPX Kcommaaccent o -35\\r\\nKPX Kcommaaccent oacute -35\\r\\nKPX Kcommaaccent ocircumflex -35\\r\\nKPX Kcommaaccent odieresis -35\\r\\nKPX Kcommaaccent ograve -35\\r\\nKPX Kcommaaccent ohungarumlaut -35\\r\\nKPX Kcommaaccent omacron -35\\r\\nKPX Kcommaaccent oslash -35\\r\\nKPX Kcommaaccent otilde -35\\r\\nKPX Kcommaaccent u -30\\r\\nKPX Kcommaaccent uacute -30\\r\\nKPX Kcommaaccent ucircumflex -30\\r\\nKPX Kcommaaccent udieresis -30\\r\\nKPX Kcommaaccent ugrave -30\\r\\nKPX Kcommaaccent uhungarumlaut -30\\r\\nKPX Kcommaaccent umacron -30\\r\\nKPX Kcommaaccent uogonek -30\\r\\nKPX Kcommaaccent uring -30\\r\\nKPX Kcommaaccent y -40\\r\\nKPX Kcommaaccent yacute -40\\r\\nKPX Kcommaaccent ydieresis -40\\r\\nKPX L T -90\\r\\nKPX L Tcaron -90\\r\\nKPX L Tcommaaccent -90\\r\\nKPX L V -110\\r\\nKPX L W -80\\r\\nKPX L Y -120\\r\\nKPX L Yacute -120\\r\\nKPX L Ydieresis -120\\r\\nKPX L quotedblright -140\\r\\nKPX L quoteright -140\\r\\nKPX L y -30\\r\\nKPX L yacute -30\\r\\nKPX L ydieresis -30\\r\\nKPX Lacute T -90\\r\\nKPX Lacute Tcaron -90\\r\\nKPX Lacute Tcommaaccent -90\\r\\nKPX Lacute V -110\\r\\nKPX Lacute W -80\\r\\nKPX Lacute Y -120\\r\\nKPX Lacute Yacute -120\\r\\nKPX Lacute Ydieresis -120\\r\\nKPX Lacute quotedblright -140\\r\\nKPX Lacute quoteright -140\\r\\nKPX Lacute y -30\\r\\nKPX Lacute yacute -30\\r\\nKPX Lacute ydieresis -30\\r\\nKPX Lcommaaccent T -90\\r\\nKPX Lcommaaccent Tcaron -90\\r\\nKPX Lcommaaccent Tcommaaccent -90\\r\\nKPX Lcommaaccent V -110\\r\\nKPX Lcommaaccent W -80\\r\\nKPX Lcommaaccent Y -120\\r\\nKPX Lcommaaccent Yacute -120\\r\\nKPX Lcommaaccent Ydieresis -120\\r\\nKPX Lcommaaccent quotedblright -140\\r\\nKPX Lcommaaccent quoteright -140\\r\\nKPX Lcommaaccent y -30\\r\\nKPX Lcommaaccent yacute -30\\r\\nKPX Lcommaaccent ydieresis -30\\r\\nKPX Lslash T -90\\r\\nKPX Lslash Tcaron -90\\r\\nKPX Lslash Tcommaaccent -90\\r\\nKPX Lslash V -110\\r\\nKPX Lslash W -80\\r\\nKPX Lslash Y -120\\r\\nKPX Lslash Yacute -120\\r\\nKPX Lslash Ydieresis -120\\r\\nKPX Lslash quotedblright -140\\r\\nKPX Lslash quoteright -140\\r\\nKPX Lslash y -30\\r\\nKPX Lslash yacute -30\\r\\nKPX Lslash ydieresis -30\\r\\nKPX O A -50\\r\\nKPX O Aacute -50\\r\\nKPX O Abreve -50\\r\\nKPX O Acircumflex -50\\r\\nKPX O Adieresis -50\\r\\nKPX O Agrave -50\\r\\nKPX O Amacron -50\\r\\nKPX O Aogonek -50\\r\\nKPX O Aring -50\\r\\nKPX O Atilde -50\\r\\nKPX O T -40\\r\\nKPX O Tcaron -40\\r\\nKPX O Tcommaaccent -40\\r\\nKPX O V -50\\r\\nKPX O W -50\\r\\nKPX O X -50\\r\\nKPX O Y -70\\r\\nKPX O Yacute -70\\r\\nKPX O Ydieresis -70\\r\\nKPX O comma -40\\r\\nKPX O period -40\\r\\nKPX Oacute A -50\\r\\nKPX Oacute Aacute -50\\r\\nKPX Oacute Abreve -50\\r\\nKPX Oacute Acircumflex -50\\r\\nKPX Oacute Adieresis -50\\r\\nKPX Oacute Agrave -50\\r\\nKPX Oacute Amacron -50\\r\\nKPX Oacute Aogonek -50\\r\\nKPX Oacute Aring -50\\r\\nKPX Oacute Atilde -50\\r\\nKPX Oacute T -40\\r\\nKPX Oacute Tcaron -40\\r\\nKPX Oacute Tcommaaccent -40\\r\\nKPX Oacute V -50\\r\\nKPX Oacute W -50\\r\\nKPX Oacute X -50\\r\\nKPX Oacute Y -70\\r\\nKPX Oacute Yacute -70\\r\\nKPX Oacute Ydieresis -70\\r\\nKPX Oacute comma -40\\r\\nKPX Oacute period -40\\r\\nKPX Ocircumflex A -50\\r\\nKPX Ocircumflex Aacute -50\\r\\nKPX Ocircumflex Abreve -50\\r\\nKPX Ocircumflex Acircumflex -50\\r\\nKPX Ocircumflex Adieresis -50\\r\\nKPX Ocircumflex Agrave -50\\r\\nKPX Ocircumflex Amacron -50\\r\\nKPX Ocircumflex Aogonek -50\\r\\nKPX Ocircumflex Aring -50\\r\\nKPX Ocircumflex Atilde -50\\r\\nKPX Ocircumflex T -40\\r\\nKPX Ocircumflex Tcaron -40\\r\\nKPX Ocircumflex Tcommaaccent -40\\r\\nKPX Ocircumflex V -50\\r\\nKPX Ocircumflex W -50\\r\\nKPX Ocircumflex X -50\\r\\nKPX Ocircumflex Y -70\\r\\nKPX Ocircumflex Yacute -70\\r\\nKPX Ocircumflex Ydieresis -70\\r\\nKPX Ocircumflex comma -40\\r\\nKPX Ocircumflex period -40\\r\\nKPX Odieresis A -50\\r\\nKPX Odieresis Aacute -50\\r\\nKPX Odieresis Abreve -50\\r\\nKPX Odieresis Acircumflex -50\\r\\nKPX Odieresis Adieresis -50\\r\\nKPX Odieresis Agrave -50\\r\\nKPX Odieresis Amacron -50\\r\\nKPX Odieresis Aogonek -50\\r\\nKPX Odieresis Aring -50\\r\\nKPX Odieresis Atilde -50\\r\\nKPX Odieresis T -40\\r\\nKPX Odieresis Tcaron -40\\r\\nKPX Odieresis Tcommaaccent -40\\r\\nKPX Odieresis V -50\\r\\nKPX Odieresis W -50\\r\\nKPX Odieresis X -50\\r\\nKPX Odieresis Y -70\\r\\nKPX Odieresis Yacute -70\\r\\nKPX Odieresis Ydieresis -70\\r\\nKPX Odieresis comma -40\\r\\nKPX Odieresis period -40\\r\\nKPX Ograve A -50\\r\\nKPX Ograve Aacute -50\\r\\nKPX Ograve Abreve -50\\r\\nKPX Ograve Acircumflex -50\\r\\nKPX Ograve Adieresis -50\\r\\nKPX Ograve Agrave -50\\r\\nKPX Ograve Amacron -50\\r\\nKPX Ograve Aogonek -50\\r\\nKPX Ograve Aring -50\\r\\nKPX Ograve Atilde -50\\r\\nKPX Ograve T -40\\r\\nKPX Ograve Tcaron -40\\r\\nKPX Ograve Tcommaaccent -40\\r\\nKPX Ograve V -50\\r\\nKPX Ograve W -50\\r\\nKPX Ograve X -50\\r\\nKPX Ograve Y -70\\r\\nKPX Ograve Yacute -70\\r\\nKPX Ograve Ydieresis -70\\r\\nKPX Ograve comma -40\\r\\nKPX Ograve period -40\\r\\nKPX Ohungarumlaut A -50\\r\\nKPX Ohungarumlaut Aacute -50\\r\\nKPX Ohungarumlaut Abreve -50\\r\\nKPX Ohungarumlaut Acircumflex -50\\r\\nKPX Ohungarumlaut Adieresis -50\\r\\nKPX Ohungarumlaut Agrave -50\\r\\nKPX Ohungarumlaut Amacron -50\\r\\nKPX Ohungarumlaut Aogonek -50\\r\\nKPX Ohungarumlaut Aring -50\\r\\nKPX Ohungarumlaut Atilde -50\\r\\nKPX Ohungarumlaut T -40\\r\\nKPX Ohungarumlaut Tcaron -40\\r\\nKPX Ohungarumlaut Tcommaaccent -40\\r\\nKPX Ohungarumlaut V -50\\r\\nKPX Ohungarumlaut W -50\\r\\nKPX Ohungarumlaut X -50\\r\\nKPX Ohungarumlaut Y -70\\r\\nKPX Ohungarumlaut Yacute -70\\r\\nKPX Ohungarumlaut Ydieresis -70\\r\\nKPX Ohungarumlaut comma -40\\r\\nKPX Ohungarumlaut period -40\\r\\nKPX Omacron A -50\\r\\nKPX Omacron Aacute -50\\r\\nKPX Omacron Abreve -50\\r\\nKPX Omacron Acircumflex -50\\r\\nKPX Omacron Adieresis -50\\r\\nKPX Omacron Agrave -50\\r\\nKPX Omacron Amacron -50\\r\\nKPX Omacron Aogonek -50\\r\\nKPX Omacron Aring -50\\r\\nKPX Omacron Atilde -50\\r\\nKPX Omacron T -40\\r\\nKPX Omacron Tcaron -40\\r\\nKPX Omacron Tcommaaccent -40\\r\\nKPX Omacron V -50\\r\\nKPX Omacron W -50\\r\\nKPX Omacron X -50\\r\\nKPX Omacron Y -70\\r\\nKPX Omacron Yacute -70\\r\\nKPX Omacron Ydieresis -70\\r\\nKPX Omacron comma -40\\r\\nKPX Omacron period -40\\r\\nKPX Oslash A -50\\r\\nKPX Oslash Aacute -50\\r\\nKPX Oslash Abreve -50\\r\\nKPX Oslash Acircumflex -50\\r\\nKPX Oslash Adieresis -50\\r\\nKPX Oslash Agrave -50\\r\\nKPX Oslash Amacron -50\\r\\nKPX Oslash Aogonek -50\\r\\nKPX Oslash Aring -50\\r\\nKPX Oslash Atilde -50\\r\\nKPX Oslash T -40\\r\\nKPX Oslash Tcaron -40\\r\\nKPX Oslash Tcommaaccent -40\\r\\nKPX Oslash V -50\\r\\nKPX Oslash W -50\\r\\nKPX Oslash X -50\\r\\nKPX Oslash Y -70\\r\\nKPX Oslash Yacute -70\\r\\nKPX Oslash Ydieresis -70\\r\\nKPX Oslash comma -40\\r\\nKPX Oslash period -40\\r\\nKPX Otilde A -50\\r\\nKPX Otilde Aacute -50\\r\\nKPX Otilde Abreve -50\\r\\nKPX Otilde Acircumflex -50\\r\\nKPX Otilde Adieresis -50\\r\\nKPX Otilde Agrave -50\\r\\nKPX Otilde Amacron -50\\r\\nKPX Otilde Aogonek -50\\r\\nKPX Otilde Aring -50\\r\\nKPX Otilde Atilde -50\\r\\nKPX Otilde T -40\\r\\nKPX Otilde Tcaron -40\\r\\nKPX Otilde Tcommaaccent -40\\r\\nKPX Otilde V -50\\r\\nKPX Otilde W -50\\r\\nKPX Otilde X -50\\r\\nKPX Otilde Y -70\\r\\nKPX Otilde Yacute -70\\r\\nKPX Otilde Ydieresis -70\\r\\nKPX Otilde comma -40\\r\\nKPX Otilde period -40\\r\\nKPX P A -100\\r\\nKPX P Aacute -100\\r\\nKPX P Abreve -100\\r\\nKPX P Acircumflex -100\\r\\nKPX P Adieresis -100\\r\\nKPX P Agrave -100\\r\\nKPX P Amacron -100\\r\\nKPX P Aogonek -100\\r\\nKPX P Aring -100\\r\\nKPX P Atilde -100\\r\\nKPX P a -30\\r\\nKPX P aacute -30\\r\\nKPX P abreve -30\\r\\nKPX P acircumflex -30\\r\\nKPX P adieresis -30\\r\\nKPX P agrave -30\\r\\nKPX P amacron -30\\r\\nKPX P aogonek -30\\r\\nKPX P aring -30\\r\\nKPX P atilde -30\\r\\nKPX P comma -120\\r\\nKPX P e -30\\r\\nKPX P eacute -30\\r\\nKPX P ecaron -30\\r\\nKPX P ecircumflex -30\\r\\nKPX P edieresis -30\\r\\nKPX P edotaccent -30\\r\\nKPX P egrave -30\\r\\nKPX P emacron -30\\r\\nKPX P eogonek -30\\r\\nKPX P o -40\\r\\nKPX P oacute -40\\r\\nKPX P ocircumflex -40\\r\\nKPX P odieresis -40\\r\\nKPX P ograve -40\\r\\nKPX P ohungarumlaut -40\\r\\nKPX P omacron -40\\r\\nKPX P oslash -40\\r\\nKPX P otilde -40\\r\\nKPX P period -120\\r\\nKPX Q U -10\\r\\nKPX Q Uacute -10\\r\\nKPX Q Ucircumflex -10\\r\\nKPX Q Udieresis -10\\r\\nKPX Q Ugrave -10\\r\\nKPX Q Uhungarumlaut -10\\r\\nKPX Q Umacron -10\\r\\nKPX Q Uogonek -10\\r\\nKPX Q Uring -10\\r\\nKPX Q comma 20\\r\\nKPX Q period 20\\r\\nKPX R O -20\\r\\nKPX R Oacute -20\\r\\nKPX R Ocircumflex -20\\r\\nKPX R Odieresis -20\\r\\nKPX R Ograve -20\\r\\nKPX R Ohungarumlaut -20\\r\\nKPX R Omacron -20\\r\\nKPX R Oslash -20\\r\\nKPX R Otilde -20\\r\\nKPX R T -20\\r\\nKPX R Tcaron -20\\r\\nKPX R Tcommaaccent -20\\r\\nKPX R U -20\\r\\nKPX R Uacute -20\\r\\nKPX R Ucircumflex -20\\r\\nKPX R Udieresis -20\\r\\nKPX R Ugrave -20\\r\\nKPX R Uhungarumlaut -20\\r\\nKPX R Umacron -20\\r\\nKPX R Uogonek -20\\r\\nKPX R Uring -20\\r\\nKPX R V -50\\r\\nKPX R W -40\\r\\nKPX R Y -50\\r\\nKPX R Yacute -50\\r\\nKPX R Ydieresis -50\\r\\nKPX Racute O -20\\r\\nKPX Racute Oacute -20\\r\\nKPX Racute Ocircumflex -20\\r\\nKPX Racute Odieresis -20\\r\\nKPX Racute Ograve -20\\r\\nKPX Racute Ohungarumlaut -20\\r\\nKPX Racute Omacron -20\\r\\nKPX Racute Oslash -20\\r\\nKPX Racute Otilde -20\\r\\nKPX Racute T -20\\r\\nKPX Racute Tcaron -20\\r\\nKPX Racute Tcommaaccent -20\\r\\nKPX Racute U -20\\r\\nKPX Racute Uacute -20\\r\\nKPX Racute Ucircumflex -20\\r\\nKPX Racute Udieresis -20\\r\\nKPX Racute Ugrave -20\\r\\nKPX Racute Uhungarumlaut -20\\r\\nKPX Racute Umacron -20\\r\\nKPX Racute Uogonek -20\\r\\nKPX Racute Uring -20\\r\\nKPX Racute V -50\\r\\nKPX Racute W -40\\r\\nKPX Racute Y -50\\r\\nKPX Racute Yacute -50\\r\\nKPX Racute Ydieresis -50\\r\\nKPX Rcaron O -20\\r\\nKPX Rcaron Oacute -20\\r\\nKPX Rcaron Ocircumflex -20\\r\\nKPX Rcaron Odieresis -20\\r\\nKPX Rcaron Ograve -20\\r\\nKPX Rcaron Ohungarumlaut -20\\r\\nKPX Rcaron Omacron -20\\r\\nKPX Rcaron Oslash -20\\r\\nKPX Rcaron Otilde -20\\r\\nKPX Rcaron T -20\\r\\nKPX Rcaron Tcaron -20\\r\\nKPX Rcaron Tcommaaccent -20\\r\\nKPX Rcaron U -20\\r\\nKPX Rcaron Uacute -20\\r\\nKPX Rcaron Ucircumflex -20\\r\\nKPX Rcaron Udieresis -20\\r\\nKPX Rcaron Ugrave -20\\r\\nKPX Rcaron Uhungarumlaut -20\\r\\nKPX Rcaron Umacron -20\\r\\nKPX Rcaron Uogonek -20\\r\\nKPX Rcaron Uring -20\\r\\nKPX Rcaron V -50\\r\\nKPX Rcaron W -40\\r\\nKPX Rcaron Y -50\\r\\nKPX Rcaron Yacute -50\\r\\nKPX Rcaron Ydieresis -50\\r\\nKPX Rcommaaccent O -20\\r\\nKPX Rcommaaccent Oacute -20\\r\\nKPX Rcommaaccent Ocircumflex -20\\r\\nKPX Rcommaaccent Odieresis -20\\r\\nKPX Rcommaaccent Ograve -20\\r\\nKPX Rcommaaccent Ohungarumlaut -20\\r\\nKPX Rcommaaccent Omacron -20\\r\\nKPX Rcommaaccent Oslash -20\\r\\nKPX Rcommaaccent Otilde -20\\r\\nKPX Rcommaaccent T -20\\r\\nKPX Rcommaaccent Tcaron -20\\r\\nKPX Rcommaaccent Tcommaaccent -20\\r\\nKPX Rcommaaccent U -20\\r\\nKPX Rcommaaccent Uacute -20\\r\\nKPX Rcommaaccent Ucircumflex -20\\r\\nKPX Rcommaaccent Udieresis -20\\r\\nKPX Rcommaaccent Ugrave -20\\r\\nKPX Rcommaaccent Uhungarumlaut -20\\r\\nKPX Rcommaaccent Umacron -20\\r\\nKPX Rcommaaccent Uogonek -20\\r\\nKPX Rcommaaccent Uring -20\\r\\nKPX Rcommaaccent V -50\\r\\nKPX Rcommaaccent W -40\\r\\nKPX Rcommaaccent Y -50\\r\\nKPX Rcommaaccent Yacute -50\\r\\nKPX Rcommaaccent Ydieresis -50\\r\\nKPX T A -90\\r\\nKPX T Aacute -90\\r\\nKPX T Abreve -90\\r\\nKPX T Acircumflex -90\\r\\nKPX T Adieresis -90\\r\\nKPX T Agrave -90\\r\\nKPX T Amacron -90\\r\\nKPX T Aogonek -90\\r\\nKPX T Aring -90\\r\\nKPX T Atilde -90\\r\\nKPX T O -40\\r\\nKPX T Oacute -40\\r\\nKPX T Ocircumflex -40\\r\\nKPX T Odieresis -40\\r\\nKPX T Ograve -40\\r\\nKPX T Ohungarumlaut -40\\r\\nKPX T Omacron -40\\r\\nKPX T Oslash -40\\r\\nKPX T Otilde -40\\r\\nKPX T a -80\\r\\nKPX T aacute -80\\r\\nKPX T abreve -80\\r\\nKPX T acircumflex -80\\r\\nKPX T adieresis -80\\r\\nKPX T agrave -80\\r\\nKPX T amacron -80\\r\\nKPX T aogonek -80\\r\\nKPX T aring -80\\r\\nKPX T atilde -80\\r\\nKPX T colon -40\\r\\nKPX T comma -80\\r\\nKPX T e -60\\r\\nKPX T eacute -60\\r\\nKPX T ecaron -60\\r\\nKPX T ecircumflex -60\\r\\nKPX T edieresis -60\\r\\nKPX T edotaccent -60\\r\\nKPX T egrave -60\\r\\nKPX T emacron -60\\r\\nKPX T eogonek -60\\r\\nKPX T hyphen -120\\r\\nKPX T o -80\\r\\nKPX T oacute -80\\r\\nKPX T ocircumflex -80\\r\\nKPX T odieresis -80\\r\\nKPX T ograve -80\\r\\nKPX T ohungarumlaut -80\\r\\nKPX T omacron -80\\r\\nKPX T oslash -80\\r\\nKPX T otilde -80\\r\\nKPX T period -80\\r\\nKPX T r -80\\r\\nKPX T racute -80\\r\\nKPX T rcommaaccent -80\\r\\nKPX T semicolon -40\\r\\nKPX T u -90\\r\\nKPX T uacute -90\\r\\nKPX T ucircumflex -90\\r\\nKPX T udieresis -90\\r\\nKPX T ugrave -90\\r\\nKPX T uhungarumlaut -90\\r\\nKPX T umacron -90\\r\\nKPX T uogonek -90\\r\\nKPX T uring -90\\r\\nKPX T w -60\\r\\nKPX T y -60\\r\\nKPX T yacute -60\\r\\nKPX T ydieresis -60\\r\\nKPX Tcaron A -90\\r\\nKPX Tcaron Aacute -90\\r\\nKPX Tcaron Abreve -90\\r\\nKPX Tcaron Acircumflex -90\\r\\nKPX Tcaron Adieresis -90\\r\\nKPX Tcaron Agrave -90\\r\\nKPX Tcaron Amacron -90\\r\\nKPX Tcaron Aogonek -90\\r\\nKPX Tcaron Aring -90\\r\\nKPX Tcaron Atilde -90\\r\\nKPX Tcaron O -40\\r\\nKPX Tcaron Oacute -40\\r\\nKPX Tcaron Ocircumflex -40\\r\\nKPX Tcaron Odieresis -40\\r\\nKPX Tcaron Ograve -40\\r\\nKPX Tcaron Ohungarumlaut -40\\r\\nKPX Tcaron Omacron -40\\r\\nKPX Tcaron Oslash -40\\r\\nKPX Tcaron Otilde -40\\r\\nKPX Tcaron a -80\\r\\nKPX Tcaron aacute -80\\r\\nKPX Tcaron abreve -80\\r\\nKPX Tcaron acircumflex -80\\r\\nKPX Tcaron adieresis -80\\r\\nKPX Tcaron agrave -80\\r\\nKPX Tcaron amacron -80\\r\\nKPX Tcaron aogonek -80\\r\\nKPX Tcaron aring -80\\r\\nKPX Tcaron atilde -80\\r\\nKPX Tcaron colon -40\\r\\nKPX Tcaron comma -80\\r\\nKPX Tcaron e -60\\r\\nKPX Tcaron eacute -60\\r\\nKPX Tcaron ecaron -60\\r\\nKPX Tcaron ecircumflex -60\\r\\nKPX Tcaron edieresis -60\\r\\nKPX Tcaron edotaccent -60\\r\\nKPX Tcaron egrave -60\\r\\nKPX Tcaron emacron -60\\r\\nKPX Tcaron eogonek -60\\r\\nKPX Tcaron hyphen -120\\r\\nKPX Tcaron o -80\\r\\nKPX Tcaron oacute -80\\r\\nKPX Tcaron ocircumflex -80\\r\\nKPX Tcaron odieresis -80\\r\\nKPX Tcaron ograve -80\\r\\nKPX Tcaron ohungarumlaut -80\\r\\nKPX Tcaron omacron -80\\r\\nKPX Tcaron oslash -80\\r\\nKPX Tcaron otilde -80\\r\\nKPX Tcaron period -80\\r\\nKPX Tcaron r -80\\r\\nKPX Tcaron racute -80\\r\\nKPX Tcaron rcommaaccent -80\\r\\nKPX Tcaron semicolon -40\\r\\nKPX Tcaron u -90\\r\\nKPX Tcaron uacute -90\\r\\nKPX Tcaron ucircumflex -90\\r\\nKPX Tcaron udieresis -90\\r\\nKPX Tcaron ugrave -90\\r\\nKPX Tcaron uhungarumlaut -90\\r\\nKPX Tcaron umacron -90\\r\\nKPX Tcaron uogonek -90\\r\\nKPX Tcaron uring -90\\r\\nKPX Tcaron w -60\\r\\nKPX Tcaron y -60\\r\\nKPX Tcaron yacute -60\\r\\nKPX Tcaron ydieresis -60\\r\\nKPX Tcommaaccent A -90\\r\\nKPX Tcommaaccent Aacute -90\\r\\nKPX Tcommaaccent Abreve -90\\r\\nKPX Tcommaaccent Acircumflex -90\\r\\nKPX Tcommaaccent Adieresis -90\\r\\nKPX Tcommaaccent Agrave -90\\r\\nKPX Tcommaaccent Amacron -90\\r\\nKPX Tcommaaccent Aogonek -90\\r\\nKPX Tcommaaccent Aring -90\\r\\nKPX Tcommaaccent Atilde -90\\r\\nKPX Tcommaaccent O -40\\r\\nKPX Tcommaaccent Oacute -40\\r\\nKPX Tcommaaccent Ocircumflex -40\\r\\nKPX Tcommaaccent Odieresis -40\\r\\nKPX Tcommaaccent Ograve -40\\r\\nKPX Tcommaaccent Ohungarumlaut -40\\r\\nKPX Tcommaaccent Omacron -40\\r\\nKPX Tcommaaccent Oslash -40\\r\\nKPX Tcommaaccent Otilde -40\\r\\nKPX Tcommaaccent a -80\\r\\nKPX Tcommaaccent aacute -80\\r\\nKPX Tcommaaccent abreve -80\\r\\nKPX Tcommaaccent acircumflex -80\\r\\nKPX Tcommaaccent adieresis -80\\r\\nKPX Tcommaaccent agrave -80\\r\\nKPX Tcommaaccent amacron -80\\r\\nKPX Tcommaaccent aogonek -80\\r\\nKPX Tcommaaccent aring -80\\r\\nKPX Tcommaaccent atilde -80\\r\\nKPX Tcommaaccent colon -40\\r\\nKPX Tcommaaccent comma -80\\r\\nKPX Tcommaaccent e -60\\r\\nKPX Tcommaaccent eacute -60\\r\\nKPX Tcommaaccent ecaron -60\\r\\nKPX Tcommaaccent ecircumflex -60\\r\\nKPX Tcommaaccent edieresis -60\\r\\nKPX Tcommaaccent edotaccent -60\\r\\nKPX Tcommaaccent egrave -60\\r\\nKPX Tcommaaccent emacron -60\\r\\nKPX Tcommaaccent eogonek -60\\r\\nKPX Tcommaaccent hyphen -120\\r\\nKPX Tcommaaccent o -80\\r\\nKPX Tcommaaccent oacute -80\\r\\nKPX Tcommaaccent ocircumflex -80\\r\\nKPX Tcommaaccent odieresis -80\\r\\nKPX Tcommaaccent ograve -80\\r\\nKPX Tcommaaccent ohungarumlaut -80\\r\\nKPX Tcommaaccent omacron -80\\r\\nKPX Tcommaaccent oslash -80\\r\\nKPX Tcommaaccent otilde -80\\r\\nKPX Tcommaaccent period -80\\r\\nKPX Tcommaaccent r -80\\r\\nKPX Tcommaaccent racute -80\\r\\nKPX Tcommaaccent rcommaaccent -80\\r\\nKPX Tcommaaccent semicolon -40\\r\\nKPX Tcommaaccent u -90\\r\\nKPX Tcommaaccent uacute -90\\r\\nKPX Tcommaaccent ucircumflex -90\\r\\nKPX Tcommaaccent udieresis -90\\r\\nKPX Tcommaaccent ugrave -90\\r\\nKPX Tcommaaccent uhungarumlaut -90\\r\\nKPX Tcommaaccent umacron -90\\r\\nKPX Tcommaaccent uogonek -90\\r\\nKPX Tcommaaccent uring -90\\r\\nKPX Tcommaaccent w -60\\r\\nKPX Tcommaaccent y -60\\r\\nKPX Tcommaaccent yacute -60\\r\\nKPX Tcommaaccent ydieresis -60\\r\\nKPX U A -50\\r\\nKPX U Aacute -50\\r\\nKPX U Abreve -50\\r\\nKPX U Acircumflex -50\\r\\nKPX U Adieresis -50\\r\\nKPX U Agrave -50\\r\\nKPX U Amacron -50\\r\\nKPX U Aogonek -50\\r\\nKPX U Aring -50\\r\\nKPX U Atilde -50\\r\\nKPX U comma -30\\r\\nKPX U period -30\\r\\nKPX Uacute A -50\\r\\nKPX Uacute Aacute -50\\r\\nKPX Uacute Abreve -50\\r\\nKPX Uacute Acircumflex -50\\r\\nKPX Uacute Adieresis -50\\r\\nKPX Uacute Agrave -50\\r\\nKPX Uacute Amacron -50\\r\\nKPX Uacute Aogonek -50\\r\\nKPX Uacute Aring -50\\r\\nKPX Uacute Atilde -50\\r\\nKPX Uacute comma -30\\r\\nKPX Uacute period -30\\r\\nKPX Ucircumflex A -50\\r\\nKPX Ucircumflex Aacute -50\\r\\nKPX Ucircumflex Abreve -50\\r\\nKPX Ucircumflex Acircumflex -50\\r\\nKPX Ucircumflex Adieresis -50\\r\\nKPX Ucircumflex Agrave -50\\r\\nKPX Ucircumflex Amacron -50\\r\\nKPX Ucircumflex Aogonek -50\\r\\nKPX Ucircumflex Aring -50\\r\\nKPX Ucircumflex Atilde -50\\r\\nKPX Ucircumflex comma -30\\r\\nKPX Ucircumflex period -30\\r\\nKPX Udieresis A -50\\r\\nKPX Udieresis Aacute -50\\r\\nKPX Udieresis Abreve -50\\r\\nKPX Udieresis Acircumflex -50\\r\\nKPX Udieresis Adieresis -50\\r\\nKPX Udieresis Agrave -50\\r\\nKPX Udieresis Amacron -50\\r\\nKPX Udieresis Aogonek -50\\r\\nKPX Udieresis Aring -50\\r\\nKPX Udieresis Atilde -50\\r\\nKPX Udieresis comma -30\\r\\nKPX Udieresis period -30\\r\\nKPX Ugrave A -50\\r\\nKPX Ugrave Aacute -50\\r\\nKPX Ugrave Abreve -50\\r\\nKPX Ugrave Acircumflex -50\\r\\nKPX Ugrave Adieresis -50\\r\\nKPX Ugrave Agrave -50\\r\\nKPX Ugrave Amacron -50\\r\\nKPX Ugrave Aogonek -50\\r\\nKPX Ugrave Aring -50\\r\\nKPX Ugrave Atilde -50\\r\\nKPX Ugrave comma -30\\r\\nKPX Ugrave period -30\\r\\nKPX Uhungarumlaut A -50\\r\\nKPX Uhungarumlaut Aacute -50\\r\\nKPX Uhungarumlaut Abreve -50\\r\\nKPX Uhungarumlaut Acircumflex -50\\r\\nKPX Uhungarumlaut Adieresis -50\\r\\nKPX Uhungarumlaut Agrave -50\\r\\nKPX Uhungarumlaut Amacron -50\\r\\nKPX Uhungarumlaut Aogonek -50\\r\\nKPX Uhungarumlaut Aring -50\\r\\nKPX Uhungarumlaut Atilde -50\\r\\nKPX Uhungarumlaut comma -30\\r\\nKPX Uhungarumlaut period -30\\r\\nKPX Umacron A -50\\r\\nKPX Umacron Aacute -50\\r\\nKPX Umacron Abreve -50\\r\\nKPX Umacron Acircumflex -50\\r\\nKPX Umacron Adieresis -50\\r\\nKPX Umacron Agrave -50\\r\\nKPX Umacron Amacron -50\\r\\nKPX Umacron Aogonek -50\\r\\nKPX Umacron Aring -50\\r\\nKPX Umacron Atilde -50\\r\\nKPX Umacron comma -30\\r\\nKPX Umacron period -30\\r\\nKPX Uogonek A -50\\r\\nKPX Uogonek Aacute -50\\r\\nKPX Uogonek Abreve -50\\r\\nKPX Uogonek Acircumflex -50\\r\\nKPX Uogonek Adieresis -50\\r\\nKPX Uogonek Agrave -50\\r\\nKPX Uogonek Amacron -50\\r\\nKPX Uogonek Aogonek -50\\r\\nKPX Uogonek Aring -50\\r\\nKPX Uogonek Atilde -50\\r\\nKPX Uogonek comma -30\\r\\nKPX Uogonek period -30\\r\\nKPX Uring A -50\\r\\nKPX Uring Aacute -50\\r\\nKPX Uring Abreve -50\\r\\nKPX Uring Acircumflex -50\\r\\nKPX Uring Adieresis -50\\r\\nKPX Uring Agrave -50\\r\\nKPX Uring Amacron -50\\r\\nKPX Uring Aogonek -50\\r\\nKPX Uring Aring -50\\r\\nKPX Uring Atilde -50\\r\\nKPX Uring comma -30\\r\\nKPX Uring period -30\\r\\nKPX V A -80\\r\\nKPX V Aacute -80\\r\\nKPX V Abreve -80\\r\\nKPX V Acircumflex -80\\r\\nKPX V Adieresis -80\\r\\nKPX V Agrave -80\\r\\nKPX V Amacron -80\\r\\nKPX V Aogonek -80\\r\\nKPX V Aring -80\\r\\nKPX V Atilde -80\\r\\nKPX V G -50\\r\\nKPX V Gbreve -50\\r\\nKPX V Gcommaaccent -50\\r\\nKPX V O -50\\r\\nKPX V Oacute -50\\r\\nKPX V Ocircumflex -50\\r\\nKPX V Odieresis -50\\r\\nKPX V Ograve -50\\r\\nKPX V Ohungarumlaut -50\\r\\nKPX V Omacron -50\\r\\nKPX V Oslash -50\\r\\nKPX V Otilde -50\\r\\nKPX V a -60\\r\\nKPX V aacute -60\\r\\nKPX V abreve -60\\r\\nKPX V acircumflex -60\\r\\nKPX V adieresis -60\\r\\nKPX V agrave -60\\r\\nKPX V amacron -60\\r\\nKPX V aogonek -60\\r\\nKPX V aring -60\\r\\nKPX V atilde -60\\r\\nKPX V colon -40\\r\\nKPX V comma -120\\r\\nKPX V e -50\\r\\nKPX V eacute -50\\r\\nKPX V ecaron -50\\r\\nKPX V ecircumflex -50\\r\\nKPX V edieresis -50\\r\\nKPX V edotaccent -50\\r\\nKPX V egrave -50\\r\\nKPX V emacron -50\\r\\nKPX V eogonek -50\\r\\nKPX V hyphen -80\\r\\nKPX V o -90\\r\\nKPX V oacute -90\\r\\nKPX V ocircumflex -90\\r\\nKPX V odieresis -90\\r\\nKPX V ograve -90\\r\\nKPX V ohungarumlaut -90\\r\\nKPX V omacron -90\\r\\nKPX V oslash -90\\r\\nKPX V otilde -90\\r\\nKPX V period -120\\r\\nKPX V semicolon -40\\r\\nKPX V u -60\\r\\nKPX V uacute -60\\r\\nKPX V ucircumflex -60\\r\\nKPX V udieresis -60\\r\\nKPX V ugrave -60\\r\\nKPX V uhungarumlaut -60\\r\\nKPX V umacron -60\\r\\nKPX V uogonek -60\\r\\nKPX V uring -60\\r\\nKPX W A -60\\r\\nKPX W Aacute -60\\r\\nKPX W Abreve -60\\r\\nKPX W Acircumflex -60\\r\\nKPX W Adieresis -60\\r\\nKPX W Agrave -60\\r\\nKPX W Amacron -60\\r\\nKPX W Aogonek -60\\r\\nKPX W Aring -60\\r\\nKPX W Atilde -60\\r\\nKPX W O -20\\r\\nKPX W Oacute -20\\r\\nKPX W Ocircumflex -20\\r\\nKPX W Odieresis -20\\r\\nKPX W Ograve -20\\r\\nKPX W Ohungarumlaut -20\\r\\nKPX W Omacron -20\\r\\nKPX W Oslash -20\\r\\nKPX W Otilde -20\\r\\nKPX W a -40\\r\\nKPX W aacute -40\\r\\nKPX W abreve -40\\r\\nKPX W acircumflex -40\\r\\nKPX W adieresis -40\\r\\nKPX W agrave -40\\r\\nKPX W amacron -40\\r\\nKPX W aogonek -40\\r\\nKPX W aring -40\\r\\nKPX W atilde -40\\r\\nKPX W colon -10\\r\\nKPX W comma -80\\r\\nKPX W e -35\\r\\nKPX W eacute -35\\r\\nKPX W ecaron -35\\r\\nKPX W ecircumflex -35\\r\\nKPX W edieresis -35\\r\\nKPX W edotaccent -35\\r\\nKPX W egrave -35\\r\\nKPX W emacron -35\\r\\nKPX W eogonek -35\\r\\nKPX W hyphen -40\\r\\nKPX W o -60\\r\\nKPX W oacute -60\\r\\nKPX W ocircumflex -60\\r\\nKPX W odieresis -60\\r\\nKPX W ograve -60\\r\\nKPX W ohungarumlaut -60\\r\\nKPX W omacron -60\\r\\nKPX W oslash -60\\r\\nKPX W otilde -60\\r\\nKPX W period -80\\r\\nKPX W semicolon -10\\r\\nKPX W u -45\\r\\nKPX W uacute -45\\r\\nKPX W ucircumflex -45\\r\\nKPX W udieresis -45\\r\\nKPX W ugrave -45\\r\\nKPX W uhungarumlaut -45\\r\\nKPX W umacron -45\\r\\nKPX W uogonek -45\\r\\nKPX W uring -45\\r\\nKPX W y -20\\r\\nKPX W yacute -20\\r\\nKPX W ydieresis -20\\r\\nKPX Y A -110\\r\\nKPX Y Aacute -110\\r\\nKPX Y Abreve -110\\r\\nKPX Y Acircumflex -110\\r\\nKPX Y Adieresis -110\\r\\nKPX Y Agrave -110\\r\\nKPX Y Amacron -110\\r\\nKPX Y Aogonek -110\\r\\nKPX Y Aring -110\\r\\nKPX Y Atilde -110\\r\\nKPX Y O -70\\r\\nKPX Y Oacute -70\\r\\nKPX Y Ocircumflex -70\\r\\nKPX Y Odieresis -70\\r\\nKPX Y Ograve -70\\r\\nKPX Y Ohungarumlaut -70\\r\\nKPX Y Omacron -70\\r\\nKPX Y Oslash -70\\r\\nKPX Y Otilde -70\\r\\nKPX Y a -90\\r\\nKPX Y aacute -90\\r\\nKPX Y abreve -90\\r\\nKPX Y acircumflex -90\\r\\nKPX Y adieresis -90\\r\\nKPX Y agrave -90\\r\\nKPX Y amacron -90\\r\\nKPX Y aogonek -90\\r\\nKPX Y aring -90\\r\\nKPX Y atilde -90\\r\\nKPX Y colon -50\\r\\nKPX Y comma -100\\r\\nKPX Y e -80\\r\\nKPX Y eacute -80\\r\\nKPX Y ecaron -80\\r\\nKPX Y ecircumflex -80\\r\\nKPX Y edieresis -80\\r\\nKPX Y edotaccent -80\\r\\nKPX Y egrave -80\\r\\nKPX Y emacron -80\\r\\nKPX Y eogonek -80\\r\\nKPX Y o -100\\r\\nKPX Y oacute -100\\r\\nKPX Y ocircumflex -100\\r\\nKPX Y odieresis -100\\r\\nKPX Y ograve -100\\r\\nKPX Y ohungarumlaut -100\\r\\nKPX Y omacron -100\\r\\nKPX Y oslash -100\\r\\nKPX Y otilde -100\\r\\nKPX Y period -100\\r\\nKPX Y semicolon -50\\r\\nKPX Y u -100\\r\\nKPX Y uacute -100\\r\\nKPX Y ucircumflex -100\\r\\nKPX Y udieresis -100\\r\\nKPX Y ugrave -100\\r\\nKPX Y uhungarumlaut -100\\r\\nKPX Y umacron -100\\r\\nKPX Y uogonek -100\\r\\nKPX Y uring -100\\r\\nKPX Yacute A -110\\r\\nKPX Yacute Aacute -110\\r\\nKPX Yacute Abreve -110\\r\\nKPX Yacute Acircumflex -110\\r\\nKPX Yacute Adieresis -110\\r\\nKPX Yacute Agrave -110\\r\\nKPX Yacute Amacron -110\\r\\nKPX Yacute Aogonek -110\\r\\nKPX Yacute Aring -110\\r\\nKPX Yacute Atilde -110\\r\\nKPX Yacute O -70\\r\\nKPX Yacute Oacute -70\\r\\nKPX Yacute Ocircumflex -70\\r\\nKPX Yacute Odieresis -70\\r\\nKPX Yacute Ograve -70\\r\\nKPX Yacute Ohungarumlaut -70\\r\\nKPX Yacute Omacron -70\\r\\nKPX Yacute Oslash -70\\r\\nKPX Yacute Otilde -70\\r\\nKPX Yacute a -90\\r\\nKPX Yacute aacute -90\\r\\nKPX Yacute abreve -90\\r\\nKPX Yacute acircumflex -90\\r\\nKPX Yacute adieresis -90\\r\\nKPX Yacute agrave -90\\r\\nKPX Yacute amacron -90\\r\\nKPX Yacute aogonek -90\\r\\nKPX Yacute aring -90\\r\\nKPX Yacute atilde -90\\r\\nKPX Yacute colon -50\\r\\nKPX Yacute comma -100\\r\\nKPX Yacute e -80\\r\\nKPX Yacute eacute -80\\r\\nKPX Yacute ecaron -80\\r\\nKPX Yacute ecircumflex -80\\r\\nKPX Yacute edieresis -80\\r\\nKPX Yacute edotaccent -80\\r\\nKPX Yacute egrave -80\\r\\nKPX Yacute emacron -80\\r\\nKPX Yacute eogonek -80\\r\\nKPX Yacute o -100\\r\\nKPX Yacute oacute -100\\r\\nKPX Yacute ocircumflex -100\\r\\nKPX Yacute odieresis -100\\r\\nKPX Yacute ograve -100\\r\\nKPX Yacute ohungarumlaut -100\\r\\nKPX Yacute omacron -100\\r\\nKPX Yacute oslash -100\\r\\nKPX Yacute otilde -100\\r\\nKPX Yacute period -100\\r\\nKPX Yacute semicolon -50\\r\\nKPX Yacute u -100\\r\\nKPX Yacute uacute -100\\r\\nKPX Yacute ucircumflex -100\\r\\nKPX Yacute udieresis -100\\r\\nKPX Yacute ugrave -100\\r\\nKPX Yacute uhungarumlaut -100\\r\\nKPX Yacute umacron -100\\r\\nKPX Yacute uogonek -100\\r\\nKPX Yacute uring -100\\r\\nKPX Ydieresis A -110\\r\\nKPX Ydieresis Aacute -110\\r\\nKPX Ydieresis Abreve -110\\r\\nKPX Ydieresis Acircumflex -110\\r\\nKPX Ydieresis Adieresis -110\\r\\nKPX Ydieresis Agrave -110\\r\\nKPX Ydieresis Amacron -110\\r\\nKPX Ydieresis Aogonek -110\\r\\nKPX Ydieresis Aring -110\\r\\nKPX Ydieresis Atilde -110\\r\\nKPX Ydieresis O -70\\r\\nKPX Ydieresis Oacute -70\\r\\nKPX Ydieresis Ocircumflex -70\\r\\nKPX Ydieresis Odieresis -70\\r\\nKPX Ydieresis Ograve -70\\r\\nKPX Ydieresis Ohungarumlaut -70\\r\\nKPX Ydieresis Omacron -70\\r\\nKPX Ydieresis Oslash -70\\r\\nKPX Ydieresis Otilde -70\\r\\nKPX Ydieresis a -90\\r\\nKPX Ydieresis aacute -90\\r\\nKPX Ydieresis abreve -90\\r\\nKPX Ydieresis acircumflex -90\\r\\nKPX Ydieresis adieresis -90\\r\\nKPX Ydieresis agrave -90\\r\\nKPX Ydieresis amacron -90\\r\\nKPX Ydieresis aogonek -90\\r\\nKPX Ydieresis aring -90\\r\\nKPX Ydieresis atilde -90\\r\\nKPX Ydieresis colon -50\\r\\nKPX Ydieresis comma -100\\r\\nKPX Ydieresis e -80\\r\\nKPX Ydieresis eacute -80\\r\\nKPX Ydieresis ecaron -80\\r\\nKPX Ydieresis ecircumflex -80\\r\\nKPX Ydieresis edieresis -80\\r\\nKPX Ydieresis edotaccent -80\\r\\nKPX Ydieresis egrave -80\\r\\nKPX Ydieresis emacron -80\\r\\nKPX Ydieresis eogonek -80\\r\\nKPX Ydieresis o -100\\r\\nKPX Ydieresis oacute -100\\r\\nKPX Ydieresis ocircumflex -100\\r\\nKPX Ydieresis odieresis -100\\r\\nKPX Ydieresis ograve -100\\r\\nKPX Ydieresis ohungarumlaut -100\\r\\nKPX Ydieresis omacron -100\\r\\nKPX Ydieresis oslash -100\\r\\nKPX Ydieresis otilde -100\\r\\nKPX Ydieresis period -100\\r\\nKPX Ydieresis semicolon -50\\r\\nKPX Ydieresis u -100\\r\\nKPX Ydieresis uacute -100\\r\\nKPX Ydieresis ucircumflex -100\\r\\nKPX Ydieresis udieresis -100\\r\\nKPX Ydieresis ugrave -100\\r\\nKPX Ydieresis uhungarumlaut -100\\r\\nKPX Ydieresis umacron -100\\r\\nKPX Ydieresis uogonek -100\\r\\nKPX Ydieresis uring -100\\r\\nKPX a g -10\\r\\nKPX a gbreve -10\\r\\nKPX a gcommaaccent -10\\r\\nKPX a v -15\\r\\nKPX a w -15\\r\\nKPX a y -20\\r\\nKPX a yacute -20\\r\\nKPX a ydieresis -20\\r\\nKPX aacute g -10\\r\\nKPX aacute gbreve -10\\r\\nKPX aacute gcommaaccent -10\\r\\nKPX aacute v -15\\r\\nKPX aacute w -15\\r\\nKPX aacute y -20\\r\\nKPX aacute yacute -20\\r\\nKPX aacute ydieresis -20\\r\\nKPX abreve g -10\\r\\nKPX abreve gbreve -10\\r\\nKPX abreve gcommaaccent -10\\r\\nKPX abreve v -15\\r\\nKPX abreve w -15\\r\\nKPX abreve y -20\\r\\nKPX abreve yacute -20\\r\\nKPX abreve ydieresis -20\\r\\nKPX acircumflex g -10\\r\\nKPX acircumflex gbreve -10\\r\\nKPX acircumflex gcommaaccent -10\\r\\nKPX acircumflex v -15\\r\\nKPX acircumflex w -15\\r\\nKPX acircumflex y -20\\r\\nKPX acircumflex yacute -20\\r\\nKPX acircumflex ydieresis -20\\r\\nKPX adieresis g -10\\r\\nKPX adieresis gbreve -10\\r\\nKPX adieresis gcommaaccent -10\\r\\nKPX adieresis v -15\\r\\nKPX adieresis w -15\\r\\nKPX adieresis y -20\\r\\nKPX adieresis yacute -20\\r\\nKPX adieresis ydieresis -20\\r\\nKPX agrave g -10\\r\\nKPX agrave gbreve -10\\r\\nKPX agrave gcommaaccent -10\\r\\nKPX agrave v -15\\r\\nKPX agrave w -15\\r\\nKPX agrave y -20\\r\\nKPX agrave yacute -20\\r\\nKPX agrave ydieresis -20\\r\\nKPX amacron g -10\\r\\nKPX amacron gbreve -10\\r\\nKPX amacron gcommaaccent -10\\r\\nKPX amacron v -15\\r\\nKPX amacron w -15\\r\\nKPX amacron y -20\\r\\nKPX amacron yacute -20\\r\\nKPX amacron ydieresis -20\\r\\nKPX aogonek g -10\\r\\nKPX aogonek gbreve -10\\r\\nKPX aogonek gcommaaccent -10\\r\\nKPX aogonek v -15\\r\\nKPX aogonek w -15\\r\\nKPX aogonek y -20\\r\\nKPX aogonek yacute -20\\r\\nKPX aogonek ydieresis -20\\r\\nKPX aring g -10\\r\\nKPX aring gbreve -10\\r\\nKPX aring gcommaaccent -10\\r\\nKPX aring v -15\\r\\nKPX aring w -15\\r\\nKPX aring y -20\\r\\nKPX aring yacute -20\\r\\nKPX aring ydieresis -20\\r\\nKPX atilde g -10\\r\\nKPX atilde gbreve -10\\r\\nKPX atilde gcommaaccent -10\\r\\nKPX atilde v -15\\r\\nKPX atilde w -15\\r\\nKPX atilde y -20\\r\\nKPX atilde yacute -20\\r\\nKPX atilde ydieresis -20\\r\\nKPX b l -10\\r\\nKPX b lacute -10\\r\\nKPX b lcommaaccent -10\\r\\nKPX b lslash -10\\r\\nKPX b u -20\\r\\nKPX b uacute -20\\r\\nKPX b ucircumflex -20\\r\\nKPX b udieresis -20\\r\\nKPX b ugrave -20\\r\\nKPX b uhungarumlaut -20\\r\\nKPX b umacron -20\\r\\nKPX b uogonek -20\\r\\nKPX b uring -20\\r\\nKPX b v -20\\r\\nKPX b y -20\\r\\nKPX b yacute -20\\r\\nKPX b ydieresis -20\\r\\nKPX c h -10\\r\\nKPX c k -20\\r\\nKPX c kcommaaccent -20\\r\\nKPX c l -20\\r\\nKPX c lacute -20\\r\\nKPX c lcommaaccent -20\\r\\nKPX c lslash -20\\r\\nKPX c y -10\\r\\nKPX c yacute -10\\r\\nKPX c ydieresis -10\\r\\nKPX cacute h -10\\r\\nKPX cacute k -20\\r\\nKPX cacute kcommaaccent -20\\r\\nKPX cacute l -20\\r\\nKPX cacute lacute -20\\r\\nKPX cacute lcommaaccent -20\\r\\nKPX cacute lslash -20\\r\\nKPX cacute y -10\\r\\nKPX cacute yacute -10\\r\\nKPX cacute ydieresis -10\\r\\nKPX ccaron h -10\\r\\nKPX ccaron k -20\\r\\nKPX ccaron kcommaaccent -20\\r\\nKPX ccaron l -20\\r\\nKPX ccaron lacute -20\\r\\nKPX ccaron lcommaaccent -20\\r\\nKPX ccaron lslash -20\\r\\nKPX ccaron y -10\\r\\nKPX ccaron yacute -10\\r\\nKPX ccaron ydieresis -10\\r\\nKPX ccedilla h -10\\r\\nKPX ccedilla k -20\\r\\nKPX ccedilla kcommaaccent -20\\r\\nKPX ccedilla l -20\\r\\nKPX ccedilla lacute -20\\r\\nKPX ccedilla lcommaaccent -20\\r\\nKPX ccedilla lslash -20\\r\\nKPX ccedilla y -10\\r\\nKPX ccedilla yacute -10\\r\\nKPX ccedilla ydieresis -10\\r\\nKPX colon space -40\\r\\nKPX comma quotedblright -120\\r\\nKPX comma quoteright -120\\r\\nKPX comma space -40\\r\\nKPX d d -10\\r\\nKPX d dcroat -10\\r\\nKPX d v -15\\r\\nKPX d w -15\\r\\nKPX d y -15\\r\\nKPX d yacute -15\\r\\nKPX d ydieresis -15\\r\\nKPX dcroat d -10\\r\\nKPX dcroat dcroat -10\\r\\nKPX dcroat v -15\\r\\nKPX dcroat w -15\\r\\nKPX dcroat y -15\\r\\nKPX dcroat yacute -15\\r\\nKPX dcroat ydieresis -15\\r\\nKPX e comma 10\\r\\nKPX e period 20\\r\\nKPX e v -15\\r\\nKPX e w -15\\r\\nKPX e x -15\\r\\nKPX e y -15\\r\\nKPX e yacute -15\\r\\nKPX e ydieresis -15\\r\\nKPX eacute comma 10\\r\\nKPX eacute period 20\\r\\nKPX eacute v -15\\r\\nKPX eacute w -15\\r\\nKPX eacute x -15\\r\\nKPX eacute y -15\\r\\nKPX eacute yacute -15\\r\\nKPX eacute ydieresis -15\\r\\nKPX ecaron comma 10\\r\\nKPX ecaron period 20\\r\\nKPX ecaron v -15\\r\\nKPX ecaron w -15\\r\\nKPX ecaron x -15\\r\\nKPX ecaron y -15\\r\\nKPX ecaron yacute -15\\r\\nKPX ecaron ydieresis -15\\r\\nKPX ecircumflex comma 10\\r\\nKPX ecircumflex period 20\\r\\nKPX ecircumflex v -15\\r\\nKPX ecircumflex w -15\\r\\nKPX ecircumflex x -15\\r\\nKPX ecircumflex y -15\\r\\nKPX ecircumflex yacute -15\\r\\nKPX ecircumflex ydieresis -15\\r\\nKPX edieresis comma 10\\r\\nKPX edieresis period 20\\r\\nKPX edieresis v -15\\r\\nKPX edieresis w -15\\r\\nKPX edieresis x -15\\r\\nKPX edieresis y -15\\r\\nKPX edieresis yacute -15\\r\\nKPX edieresis ydieresis -15\\r\\nKPX edotaccent comma 10\\r\\nKPX edotaccent period 20\\r\\nKPX edotaccent v -15\\r\\nKPX edotaccent w -15\\r\\nKPX edotaccent x -15\\r\\nKPX edotaccent y -15\\r\\nKPX edotaccent yacute -15\\r\\nKPX edotaccent ydieresis -15\\r\\nKPX egrave comma 10\\r\\nKPX egrave period 20\\r\\nKPX egrave v -15\\r\\nKPX egrave w -15\\r\\nKPX egrave x -15\\r\\nKPX egrave y -15\\r\\nKPX egrave yacute -15\\r\\nKPX egrave ydieresis -15\\r\\nKPX emacron comma 10\\r\\nKPX emacron period 20\\r\\nKPX emacron v -15\\r\\nKPX emacron w -15\\r\\nKPX emacron x -15\\r\\nKPX emacron y -15\\r\\nKPX emacron yacute -15\\r\\nKPX emacron ydieresis -15\\r\\nKPX eogonek comma 10\\r\\nKPX eogonek period 20\\r\\nKPX eogonek v -15\\r\\nKPX eogonek w -15\\r\\nKPX eogonek x -15\\r\\nKPX eogonek y -15\\r\\nKPX eogonek yacute -15\\r\\nKPX eogonek ydieresis -15\\r\\nKPX f comma -10\\r\\nKPX f e -10\\r\\nKPX f eacute -10\\r\\nKPX f ecaron -10\\r\\nKPX f ecircumflex -10\\r\\nKPX f edieresis -10\\r\\nKPX f edotaccent -10\\r\\nKPX f egrave -10\\r\\nKPX f emacron -10\\r\\nKPX f eogonek -10\\r\\nKPX f o -20\\r\\nKPX f oacute -20\\r\\nKPX f ocircumflex -20\\r\\nKPX f odieresis -20\\r\\nKPX f ograve -20\\r\\nKPX f ohungarumlaut -20\\r\\nKPX f omacron -20\\r\\nKPX f oslash -20\\r\\nKPX f otilde -20\\r\\nKPX f period -10\\r\\nKPX f quotedblright 30\\r\\nKPX f quoteright 30\\r\\nKPX g e 10\\r\\nKPX g eacute 10\\r\\nKPX g ecaron 10\\r\\nKPX g ecircumflex 10\\r\\nKPX g edieresis 10\\r\\nKPX g edotaccent 10\\r\\nKPX g egrave 10\\r\\nKPX g emacron 10\\r\\nKPX g eogonek 10\\r\\nKPX g g -10\\r\\nKPX g gbreve -10\\r\\nKPX g gcommaaccent -10\\r\\nKPX gbreve e 10\\r\\nKPX gbreve eacute 10\\r\\nKPX gbreve ecaron 10\\r\\nKPX gbreve ecircumflex 10\\r\\nKPX gbreve edieresis 10\\r\\nKPX gbreve edotaccent 10\\r\\nKPX gbreve egrave 10\\r\\nKPX gbreve emacron 10\\r\\nKPX gbreve eogonek 10\\r\\nKPX gbreve g -10\\r\\nKPX gbreve gbreve -10\\r\\nKPX gbreve gcommaaccent -10\\r\\nKPX gcommaaccent e 10\\r\\nKPX gcommaaccent eacute 10\\r\\nKPX gcommaaccent ecaron 10\\r\\nKPX gcommaaccent ecircumflex 10\\r\\nKPX gcommaaccent edieresis 10\\r\\nKPX gcommaaccent edotaccent 10\\r\\nKPX gcommaaccent egrave 10\\r\\nKPX gcommaaccent emacron 10\\r\\nKPX gcommaaccent eogonek 10\\r\\nKPX gcommaaccent g -10\\r\\nKPX gcommaaccent gbreve -10\\r\\nKPX gcommaaccent gcommaaccent -10\\r\\nKPX h y -20\\r\\nKPX h yacute -20\\r\\nKPX h ydieresis -20\\r\\nKPX k o -15\\r\\nKPX k oacute -15\\r\\nKPX k ocircumflex -15\\r\\nKPX k odieresis -15\\r\\nKPX k ograve -15\\r\\nKPX k ohungarumlaut -15\\r\\nKPX k omacron -15\\r\\nKPX k oslash -15\\r\\nKPX k otilde -15\\r\\nKPX kcommaaccent o -15\\r\\nKPX kcommaaccent oacute -15\\r\\nKPX kcommaaccent ocircumflex -15\\r\\nKPX kcommaaccent odieresis -15\\r\\nKPX kcommaaccent ograve -15\\r\\nKPX kcommaaccent ohungarumlaut -15\\r\\nKPX kcommaaccent omacron -15\\r\\nKPX kcommaaccent oslash -15\\r\\nKPX kcommaaccent otilde -15\\r\\nKPX l w -15\\r\\nKPX l y -15\\r\\nKPX l yacute -15\\r\\nKPX l ydieresis -15\\r\\nKPX lacute w -15\\r\\nKPX lacute y -15\\r\\nKPX lacute yacute -15\\r\\nKPX lacute ydieresis -15\\r\\nKPX lcommaaccent w -15\\r\\nKPX lcommaaccent y -15\\r\\nKPX lcommaaccent yacute -15\\r\\nKPX lcommaaccent ydieresis -15\\r\\nKPX lslash w -15\\r\\nKPX lslash y -15\\r\\nKPX lslash yacute -15\\r\\nKPX lslash ydieresis -15\\r\\nKPX m u -20\\r\\nKPX m uacute -20\\r\\nKPX m ucircumflex -20\\r\\nKPX m udieresis -20\\r\\nKPX m ugrave -20\\r\\nKPX m uhungarumlaut -20\\r\\nKPX m umacron -20\\r\\nKPX m uogonek -20\\r\\nKPX m uring -20\\r\\nKPX m y -30\\r\\nKPX m yacute -30\\r\\nKPX m ydieresis -30\\r\\nKPX n u -10\\r\\nKPX n uacute -10\\r\\nKPX n ucircumflex -10\\r\\nKPX n udieresis -10\\r\\nKPX n ugrave -10\\r\\nKPX n uhungarumlaut -10\\r\\nKPX n umacron -10\\r\\nKPX n uogonek -10\\r\\nKPX n uring -10\\r\\nKPX n v -40\\r\\nKPX n y -20\\r\\nKPX n yacute -20\\r\\nKPX n ydieresis -20\\r\\nKPX nacute u -10\\r\\nKPX nacute uacute -10\\r\\nKPX nacute ucircumflex -10\\r\\nKPX nacute udieresis -10\\r\\nKPX nacute ugrave -10\\r\\nKPX nacute uhungarumlaut -10\\r\\nKPX nacute umacron -10\\r\\nKPX nacute uogonek -10\\r\\nKPX nacute uring -10\\r\\nKPX nacute v -40\\r\\nKPX nacute y -20\\r\\nKPX nacute yacute -20\\r\\nKPX nacute ydieresis -20\\r\\nKPX ncaron u -10\\r\\nKPX ncaron uacute -10\\r\\nKPX ncaron ucircumflex -10\\r\\nKPX ncaron udieresis -10\\r\\nKPX ncaron ugrave -10\\r\\nKPX ncaron uhungarumlaut -10\\r\\nKPX ncaron umacron -10\\r\\nKPX ncaron uogonek -10\\r\\nKPX ncaron uring -10\\r\\nKPX ncaron v -40\\r\\nKPX ncaron y -20\\r\\nKPX ncaron yacute -20\\r\\nKPX ncaron ydieresis -20\\r\\nKPX ncommaaccent u -10\\r\\nKPX ncommaaccent uacute -10\\r\\nKPX ncommaaccent ucircumflex -10\\r\\nKPX ncommaaccent udieresis -10\\r\\nKPX ncommaaccent ugrave -10\\r\\nKPX ncommaaccent uhungarumlaut -10\\r\\nKPX ncommaaccent umacron -10\\r\\nKPX ncommaaccent uogonek -10\\r\\nKPX ncommaaccent uring -10\\r\\nKPX ncommaaccent v -40\\r\\nKPX ncommaaccent y -20\\r\\nKPX ncommaaccent yacute -20\\r\\nKPX ncommaaccent ydieresis -20\\r\\nKPX ntilde u -10\\r\\nKPX ntilde uacute -10\\r\\nKPX ntilde ucircumflex -10\\r\\nKPX ntilde udieresis -10\\r\\nKPX ntilde ugrave -10\\r\\nKPX ntilde uhungarumlaut -10\\r\\nKPX ntilde umacron -10\\r\\nKPX ntilde uogonek -10\\r\\nKPX ntilde uring -10\\r\\nKPX ntilde v -40\\r\\nKPX ntilde y -20\\r\\nKPX ntilde yacute -20\\r\\nKPX ntilde ydieresis -20\\r\\nKPX o v -20\\r\\nKPX o w -15\\r\\nKPX o x -30\\r\\nKPX o y -20\\r\\nKPX o yacute -20\\r\\nKPX o ydieresis -20\\r\\nKPX oacute v -20\\r\\nKPX oacute w -15\\r\\nKPX oacute x -30\\r\\nKPX oacute y -20\\r\\nKPX oacute yacute -20\\r\\nKPX oacute ydieresis -20\\r\\nKPX ocircumflex v -20\\r\\nKPX ocircumflex w -15\\r\\nKPX ocircumflex x -30\\r\\nKPX ocircumflex y -20\\r\\nKPX ocircumflex yacute -20\\r\\nKPX ocircumflex ydieresis -20\\r\\nKPX odieresis v -20\\r\\nKPX odieresis w -15\\r\\nKPX odieresis x -30\\r\\nKPX odieresis y -20\\r\\nKPX odieresis yacute -20\\r\\nKPX odieresis ydieresis -20\\r\\nKPX ograve v -20\\r\\nKPX ograve w -15\\r\\nKPX ograve x -30\\r\\nKPX ograve y -20\\r\\nKPX ograve yacute -20\\r\\nKPX ograve ydieresis -20\\r\\nKPX ohungarumlaut v -20\\r\\nKPX ohungarumlaut w -15\\r\\nKPX ohungarumlaut x -30\\r\\nKPX ohungarumlaut y -20\\r\\nKPX ohungarumlaut yacute -20\\r\\nKPX ohungarumlaut ydieresis -20\\r\\nKPX omacron v -20\\r\\nKPX omacron w -15\\r\\nKPX omacron x -30\\r\\nKPX omacron y -20\\r\\nKPX omacron yacute -20\\r\\nKPX omacron ydieresis -20\\r\\nKPX oslash v -20\\r\\nKPX oslash w -15\\r\\nKPX oslash x -30\\r\\nKPX oslash y -20\\r\\nKPX oslash yacute -20\\r\\nKPX oslash ydieresis -20\\r\\nKPX otilde v -20\\r\\nKPX otilde w -15\\r\\nKPX otilde x -30\\r\\nKPX otilde y -20\\r\\nKPX otilde yacute -20\\r\\nKPX otilde ydieresis -20\\r\\nKPX p y -15\\r\\nKPX p yacute -15\\r\\nKPX p ydieresis -15\\r\\nKPX period quotedblright -120\\r\\nKPX period quoteright -120\\r\\nKPX period space -40\\r\\nKPX quotedblright space -80\\r\\nKPX quoteleft quoteleft -46\\r\\nKPX quoteright d -80\\r\\nKPX quoteright dcroat -80\\r\\nKPX quoteright l -20\\r\\nKPX quoteright lacute -20\\r\\nKPX quoteright lcommaaccent -20\\r\\nKPX quoteright lslash -20\\r\\nKPX quoteright quoteright -46\\r\\nKPX quoteright r -40\\r\\nKPX quoteright racute -40\\r\\nKPX quoteright rcaron -40\\r\\nKPX quoteright rcommaaccent -40\\r\\nKPX quoteright s -60\\r\\nKPX quoteright sacute -60\\r\\nKPX quoteright scaron -60\\r\\nKPX quoteright scedilla -60\\r\\nKPX quoteright scommaaccent -60\\r\\nKPX quoteright space -80\\r\\nKPX quoteright v -20\\r\\nKPX r c -20\\r\\nKPX r cacute -20\\r\\nKPX r ccaron -20\\r\\nKPX r ccedilla -20\\r\\nKPX r comma -60\\r\\nKPX r d -20\\r\\nKPX r dcroat -20\\r\\nKPX r g -15\\r\\nKPX r gbreve -15\\r\\nKPX r gcommaaccent -15\\r\\nKPX r hyphen -20\\r\\nKPX r o -20\\r\\nKPX r oacute -20\\r\\nKPX r ocircumflex -20\\r\\nKPX r odieresis -20\\r\\nKPX r ograve -20\\r\\nKPX r ohungarumlaut -20\\r\\nKPX r omacron -20\\r\\nKPX r oslash -20\\r\\nKPX r otilde -20\\r\\nKPX r period -60\\r\\nKPX r q -20\\r\\nKPX r s -15\\r\\nKPX r sacute -15\\r\\nKPX r scaron -15\\r\\nKPX r scedilla -15\\r\\nKPX r scommaaccent -15\\r\\nKPX r t 20\\r\\nKPX r tcommaaccent 20\\r\\nKPX r v 10\\r\\nKPX r y 10\\r\\nKPX r yacute 10\\r\\nKPX r ydieresis 10\\r\\nKPX racute c -20\\r\\nKPX racute cacute -20\\r\\nKPX racute ccaron -20\\r\\nKPX racute ccedilla -20\\r\\nKPX racute comma -60\\r\\nKPX racute d -20\\r\\nKPX racute dcroat -20\\r\\nKPX racute g -15\\r\\nKPX racute gbreve -15\\r\\nKPX racute gcommaaccent -15\\r\\nKPX racute hyphen -20\\r\\nKPX racute o -20\\r\\nKPX racute oacute -20\\r\\nKPX racute ocircumflex -20\\r\\nKPX racute odieresis -20\\r\\nKPX racute ograve -20\\r\\nKPX racute ohungarumlaut -20\\r\\nKPX racute omacron -20\\r\\nKPX racute oslash -20\\r\\nKPX racute otilde -20\\r\\nKPX racute period -60\\r\\nKPX racute q -20\\r\\nKPX racute s -15\\r\\nKPX racute sacute -15\\r\\nKPX racute scaron -15\\r\\nKPX racute scedilla -15\\r\\nKPX racute scommaaccent -15\\r\\nKPX racute t 20\\r\\nKPX racute tcommaaccent 20\\r\\nKPX racute v 10\\r\\nKPX racute y 10\\r\\nKPX racute yacute 10\\r\\nKPX racute ydieresis 10\\r\\nKPX rcaron c -20\\r\\nKPX rcaron cacute -20\\r\\nKPX rcaron ccaron -20\\r\\nKPX rcaron ccedilla -20\\r\\nKPX rcaron comma -60\\r\\nKPX rcaron d -20\\r\\nKPX rcaron dcroat -20\\r\\nKPX rcaron g -15\\r\\nKPX rcaron gbreve -15\\r\\nKPX rcaron gcommaaccent -15\\r\\nKPX rcaron hyphen -20\\r\\nKPX rcaron o -20\\r\\nKPX rcaron oacute -20\\r\\nKPX rcaron ocircumflex -20\\r\\nKPX rcaron odieresis -20\\r\\nKPX rcaron ograve -20\\r\\nKPX rcaron ohungarumlaut -20\\r\\nKPX rcaron omacron -20\\r\\nKPX rcaron oslash -20\\r\\nKPX rcaron otilde -20\\r\\nKPX rcaron period -60\\r\\nKPX rcaron q -20\\r\\nKPX rcaron s -15\\r\\nKPX rcaron sacute -15\\r\\nKPX rcaron scaron -15\\r\\nKPX rcaron scedilla -15\\r\\nKPX rcaron scommaaccent -15\\r\\nKPX rcaron t 20\\r\\nKPX rcaron tcommaaccent 20\\r\\nKPX rcaron v 10\\r\\nKPX rcaron y 10\\r\\nKPX rcaron yacute 10\\r\\nKPX rcaron ydieresis 10\\r\\nKPX rcommaaccent c -20\\r\\nKPX rcommaaccent cacute -20\\r\\nKPX rcommaaccent ccaron -20\\r\\nKPX rcommaaccent ccedilla -20\\r\\nKPX rcommaaccent comma -60\\r\\nKPX rcommaaccent d -20\\r\\nKPX rcommaaccent dcroat -20\\r\\nKPX rcommaaccent g -15\\r\\nKPX rcommaaccent gbreve -15\\r\\nKPX rcommaaccent gcommaaccent -15\\r\\nKPX rcommaaccent hyphen -20\\r\\nKPX rcommaaccent o -20\\r\\nKPX rcommaaccent oacute -20\\r\\nKPX rcommaaccent ocircumflex -20\\r\\nKPX rcommaaccent odieresis -20\\r\\nKPX rcommaaccent ograve -20\\r\\nKPX rcommaaccent ohungarumlaut -20\\r\\nKPX rcommaaccent omacron -20\\r\\nKPX rcommaaccent oslash -20\\r\\nKPX rcommaaccent otilde -20\\r\\nKPX rcommaaccent period -60\\r\\nKPX rcommaaccent q -20\\r\\nKPX rcommaaccent s -15\\r\\nKPX rcommaaccent sacute -15\\r\\nKPX rcommaaccent scaron -15\\r\\nKPX rcommaaccent scedilla -15\\r\\nKPX rcommaaccent scommaaccent -15\\r\\nKPX rcommaaccent t 20\\r\\nKPX rcommaaccent tcommaaccent 20\\r\\nKPX rcommaaccent v 10\\r\\nKPX rcommaaccent y 10\\r\\nKPX rcommaaccent yacute 10\\r\\nKPX rcommaaccent ydieresis 10\\r\\nKPX s w -15\\r\\nKPX sacute w -15\\r\\nKPX scaron w -15\\r\\nKPX scedilla w -15\\r\\nKPX scommaaccent w -15\\r\\nKPX semicolon space -40\\r\\nKPX space T -100\\r\\nKPX space Tcaron -100\\r\\nKPX space Tcommaaccent -100\\r\\nKPX space V -80\\r\\nKPX space W -80\\r\\nKPX space Y -120\\r\\nKPX space Yacute -120\\r\\nKPX space Ydieresis -120\\r\\nKPX space quotedblleft -80\\r\\nKPX space quoteleft -60\\r\\nKPX v a -20\\r\\nKPX v aacute -20\\r\\nKPX v abreve -20\\r\\nKPX v acircumflex -20\\r\\nKPX v adieresis -20\\r\\nKPX v agrave -20\\r\\nKPX v amacron -20\\r\\nKPX v aogonek -20\\r\\nKPX v aring -20\\r\\nKPX v atilde -20\\r\\nKPX v comma -80\\r\\nKPX v o -30\\r\\nKPX v oacute -30\\r\\nKPX v ocircumflex -30\\r\\nKPX v odieresis -30\\r\\nKPX v ograve -30\\r\\nKPX v ohungarumlaut -30\\r\\nKPX v omacron -30\\r\\nKPX v oslash -30\\r\\nKPX v otilde -30\\r\\nKPX v period -80\\r\\nKPX w comma -40\\r\\nKPX w o -20\\r\\nKPX w oacute -20\\r\\nKPX w ocircumflex -20\\r\\nKPX w odieresis -20\\r\\nKPX w ograve -20\\r\\nKPX w ohungarumlaut -20\\r\\nKPX w omacron -20\\r\\nKPX w oslash -20\\r\\nKPX w otilde -20\\r\\nKPX w period -40\\r\\nKPX x e -10\\r\\nKPX x eacute -10\\r\\nKPX x ecaron -10\\r\\nKPX x ecircumflex -10\\r\\nKPX x edieresis -10\\r\\nKPX x edotaccent -10\\r\\nKPX x egrave -10\\r\\nKPX x emacron -10\\r\\nKPX x eogonek -10\\r\\nKPX y a -30\\r\\nKPX y aacute -30\\r\\nKPX y abreve -30\\r\\nKPX y acircumflex -30\\r\\nKPX y adieresis -30\\r\\nKPX y agrave -30\\r\\nKPX y amacron -30\\r\\nKPX y aogonek -30\\r\\nKPX y aring -30\\r\\nKPX y atilde -30\\r\\nKPX y comma -80\\r\\nKPX y e -10\\r\\nKPX y eacute -10\\r\\nKPX y ecaron -10\\r\\nKPX y ecircumflex -10\\r\\nKPX y edieresis -10\\r\\nKPX y edotaccent -10\\r\\nKPX y egrave -10\\r\\nKPX y emacron -10\\r\\nKPX y eogonek -10\\r\\nKPX y o -25\\r\\nKPX y oacute -25\\r\\nKPX y ocircumflex -25\\r\\nKPX y odieresis -25\\r\\nKPX y ograve -25\\r\\nKPX y ohungarumlaut -25\\r\\nKPX y omacron -25\\r\\nKPX y oslash -25\\r\\nKPX y otilde -25\\r\\nKPX y period -80\\r\\nKPX yacute a -30\\r\\nKPX yacute aacute -30\\r\\nKPX yacute abreve -30\\r\\nKPX yacute acircumflex -30\\r\\nKPX yacute adieresis -30\\r\\nKPX yacute agrave -30\\r\\nKPX yacute amacron -30\\r\\nKPX yacute aogonek -30\\r\\nKPX yacute aring -30\\r\\nKPX yacute atilde -30\\r\\nKPX yacute comma -80\\r\\nKPX yacute e -10\\r\\nKPX yacute eacute -10\\r\\nKPX yacute ecaron -10\\r\\nKPX yacute ecircumflex -10\\r\\nKPX yacute edieresis -10\\r\\nKPX yacute edotaccent -10\\r\\nKPX yacute egrave -10\\r\\nKPX yacute emacron -10\\r\\nKPX yacute eogonek -10\\r\\nKPX yacute o -25\\r\\nKPX yacute oacute -25\\r\\nKPX yacute ocircumflex -25\\r\\nKPX yacute odieresis -25\\r\\nKPX yacute ograve -25\\r\\nKPX yacute ohungarumlaut -25\\r\\nKPX yacute omacron -25\\r\\nKPX yacute oslash -25\\r\\nKPX yacute otilde -25\\r\\nKPX yacute period -80\\r\\nKPX ydieresis a -30\\r\\nKPX ydieresis aacute -30\\r\\nKPX ydieresis abreve -30\\r\\nKPX ydieresis acircumflex -30\\r\\nKPX ydieresis adieresis -30\\r\\nKPX ydieresis agrave -30\\r\\nKPX ydieresis amacron -30\\r\\nKPX ydieresis aogonek -30\\r\\nKPX ydieresis aring -30\\r\\nKPX ydieresis atilde -30\\r\\nKPX ydieresis comma -80\\r\\nKPX ydieresis e -10\\r\\nKPX ydieresis eacute -10\\r\\nKPX ydieresis ecaron -10\\r\\nKPX ydieresis ecircumflex -10\\r\\nKPX ydieresis edieresis -10\\r\\nKPX ydieresis edotaccent -10\\r\\nKPX ydieresis egrave -10\\r\\nKPX ydieresis emacron -10\\r\\nKPX ydieresis eogonek -10\\r\\nKPX ydieresis o -25\\r\\nKPX ydieresis oacute -25\\r\\nKPX ydieresis ocircumflex -25\\r\\nKPX ydieresis odieresis -25\\r\\nKPX ydieresis ograve -25\\r\\nKPX ydieresis ohungarumlaut -25\\r\\nKPX ydieresis omacron -25\\r\\nKPX ydieresis oslash -25\\r\\nKPX ydieresis otilde -25\\r\\nKPX ydieresis period -80\\r\\nKPX z e 10\\r\\nKPX z eacute 10\\r\\nKPX z ecaron 10\\r\\nKPX z ecircumflex 10\\r\\nKPX z edieresis 10\\r\\nKPX z edotaccent 10\\r\\nKPX z egrave 10\\r\\nKPX z emacron 10\\r\\nKPX z eogonek 10\\r\\nKPX zacute e 10\\r\\nKPX zacute eacute 10\\r\\nKPX zacute ecaron 10\\r\\nKPX zacute ecircumflex 10\\r\\nKPX zacute edieresis 10\\r\\nKPX zacute edotaccent 10\\r\\nKPX zacute egrave 10\\r\\nKPX zacute emacron 10\\r\\nKPX zacute eogonek 10\\r\\nKPX zcaron e 10\\r\\nKPX zcaron eacute 10\\r\\nKPX zcaron ecaron 10\\r\\nKPX zcaron ecircumflex 10\\r\\nKPX zcaron edieresis 10\\r\\nKPX zcaron edotaccent 10\\r\\nKPX zcaron egrave 10\\r\\nKPX zcaron emacron 10\\r\\nKPX zcaron eogonek 10\\r\\nKPX zdotaccent e 10\\r\\nKPX zdotaccent eacute 10\\r\\nKPX zdotaccent ecaron 10\\r\\nKPX zdotaccent ecircumflex 10\\r\\nKPX zdotaccent edieresis 10\\r\\nKPX zdotaccent edotaccent 10\\r\\nKPX zdotaccent egrave 10\\r\\nKPX zdotaccent emacron 10\\r\\nKPX zdotaccent eogonek 10\\r\\nEndKernPairs\\r\\nEndKernData\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Helvetica-Bold.afm?`)},"./node_modules/pdfkit/js/data/Helvetica-BoldOblique.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nComment Creation Date: Thu May  1 12:45:12 1997\\r\\nComment UniqueID 43053\\r\\nComment VMusage 14482 68586\\r\\nFontName Helvetica-BoldOblique\\r\\nFullName Helvetica Bold Oblique\\r\\nFamilyName Helvetica\\r\\nWeight Bold\\r\\nItalicAngle -12\\r\\nIsFixedPitch false\\r\\nCharacterSet ExtendedRoman\\r\\nFontBBox -174 -228 1114 962 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 002.000\\r\\nNotice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.\\r\\nEncodingScheme AdobeStandardEncoding\\r\\nCapHeight 718\\r\\nXHeight 532\\r\\nAscender 718\\r\\nDescender -207\\r\\nStdHW 118\\r\\nStdVW 140\\r\\nStartCharMetrics 315\\r\\nC 32 ; WX 278 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 333 ; N exclam ; B 94 0 397 718 ;\\r\\nC 34 ; WX 474 ; N quotedbl ; B 193 447 529 718 ;\\r\\nC 35 ; WX 556 ; N numbersign ; B 60 0 644 698 ;\\r\\nC 36 ; WX 556 ; N dollar ; B 67 -115 622 775 ;\\r\\nC 37 ; WX 889 ; N percent ; B 136 -19 901 710 ;\\r\\nC 38 ; WX 722 ; N ampersand ; B 89 -19 732 718 ;\\r\\nC 39 ; WX 278 ; N quoteright ; B 167 445 362 718 ;\\r\\nC 40 ; WX 333 ; N parenleft ; B 76 -208 470 734 ;\\r\\nC 41 ; WX 333 ; N parenright ; B -25 -208 369 734 ;\\r\\nC 42 ; WX 389 ; N asterisk ; B 146 387 481 718 ;\\r\\nC 43 ; WX 584 ; N plus ; B 82 0 610 506 ;\\r\\nC 44 ; WX 278 ; N comma ; B 28 -168 245 146 ;\\r\\nC 45 ; WX 333 ; N hyphen ; B 73 215 379 345 ;\\r\\nC 46 ; WX 278 ; N period ; B 64 0 245 146 ;\\r\\nC 47 ; WX 278 ; N slash ; B -37 -19 468 737 ;\\r\\nC 48 ; WX 556 ; N zero ; B 86 -19 617 710 ;\\r\\nC 49 ; WX 556 ; N one ; B 173 0 529 710 ;\\r\\nC 50 ; WX 556 ; N two ; B 26 0 619 710 ;\\r\\nC 51 ; WX 556 ; N three ; B 65 -19 608 710 ;\\r\\nC 52 ; WX 556 ; N four ; B 60 0 598 710 ;\\r\\nC 53 ; WX 556 ; N five ; B 64 -19 636 698 ;\\r\\nC 54 ; WX 556 ; N six ; B 85 -19 619 710 ;\\r\\nC 55 ; WX 556 ; N seven ; B 125 0 676 698 ;\\r\\nC 56 ; WX 556 ; N eight ; B 69 -19 616 710 ;\\r\\nC 57 ; WX 556 ; N nine ; B 78 -19 615 710 ;\\r\\nC 58 ; WX 333 ; N colon ; B 92 0 351 512 ;\\r\\nC 59 ; WX 333 ; N semicolon ; B 56 -168 351 512 ;\\r\\nC 60 ; WX 584 ; N less ; B 82 -8 655 514 ;\\r\\nC 61 ; WX 584 ; N equal ; B 58 87 633 419 ;\\r\\nC 62 ; WX 584 ; N greater ; B 36 -8 609 514 ;\\r\\nC 63 ; WX 611 ; N question ; B 165 0 671 727 ;\\r\\nC 64 ; WX 975 ; N at ; B 186 -19 954 737 ;\\r\\nC 65 ; WX 722 ; N A ; B 20 0 702 718 ;\\r\\nC 66 ; WX 722 ; N B ; B 76 0 764 718 ;\\r\\nC 67 ; WX 722 ; N C ; B 107 -19 789 737 ;\\r\\nC 68 ; WX 722 ; N D ; B 76 0 777 718 ;\\r\\nC 69 ; WX 667 ; N E ; B 76 0 757 718 ;\\r\\nC 70 ; WX 611 ; N F ; B 76 0 740 718 ;\\r\\nC 71 ; WX 778 ; N G ; B 108 -19 817 737 ;\\r\\nC 72 ; WX 722 ; N H ; B 71 0 804 718 ;\\r\\nC 73 ; WX 278 ; N I ; B 64 0 367 718 ;\\r\\nC 74 ; WX 556 ; N J ; B 60 -18 637 718 ;\\r\\nC 75 ; WX 722 ; N K ; B 87 0 858 718 ;\\r\\nC 76 ; WX 611 ; N L ; B 76 0 611 718 ;\\r\\nC 77 ; WX 833 ; N M ; B 69 0 918 718 ;\\r\\nC 78 ; WX 722 ; N N ; B 69 0 807 718 ;\\r\\nC 79 ; WX 778 ; N O ; B 107 -19 823 737 ;\\r\\nC 80 ; WX 667 ; N P ; B 76 0 738 718 ;\\r\\nC 81 ; WX 778 ; N Q ; B 107 -52 823 737 ;\\r\\nC 82 ; WX 722 ; N R ; B 76 0 778 718 ;\\r\\nC 83 ; WX 667 ; N S ; B 81 -19 718 737 ;\\r\\nC 84 ; WX 611 ; N T ; B 140 0 751 718 ;\\r\\nC 85 ; WX 722 ; N U ; B 116 -19 804 718 ;\\r\\nC 86 ; WX 667 ; N V ; B 172 0 801 718 ;\\r\\nC 87 ; WX 944 ; N W ; B 169 0 1082 718 ;\\r\\nC 88 ; WX 667 ; N X ; B 14 0 791 718 ;\\r\\nC 89 ; WX 667 ; N Y ; B 168 0 806 718 ;\\r\\nC 90 ; WX 611 ; N Z ; B 25 0 737 718 ;\\r\\nC 91 ; WX 333 ; N bracketleft ; B 21 -196 462 722 ;\\r\\nC 92 ; WX 278 ; N backslash ; B 124 -19 307 737 ;\\r\\nC 93 ; WX 333 ; N bracketright ; B -18 -196 423 722 ;\\r\\nC 94 ; WX 584 ; N asciicircum ; B 131 323 591 698 ;\\r\\nC 95 ; WX 556 ; N underscore ; B -27 -125 540 -75 ;\\r\\nC 96 ; WX 278 ; N quoteleft ; B 165 454 361 727 ;\\r\\nC 97 ; WX 556 ; N a ; B 55 -14 583 546 ;\\r\\nC 98 ; WX 611 ; N b ; B 61 -14 645 718 ;\\r\\nC 99 ; WX 556 ; N c ; B 79 -14 599 546 ;\\r\\nC 100 ; WX 611 ; N d ; B 82 -14 704 718 ;\\r\\nC 101 ; WX 556 ; N e ; B 70 -14 593 546 ;\\r\\nC 102 ; WX 333 ; N f ; B 87 0 469 727 ; L i fi ; L l fl ;\\r\\nC 103 ; WX 611 ; N g ; B 38 -217 666 546 ;\\r\\nC 104 ; WX 611 ; N h ; B 65 0 629 718 ;\\r\\nC 105 ; WX 278 ; N i ; B 69 0 363 725 ;\\r\\nC 106 ; WX 278 ; N j ; B -42 -214 363 725 ;\\r\\nC 107 ; WX 556 ; N k ; B 69 0 670 718 ;\\r\\nC 108 ; WX 278 ; N l ; B 69 0 362 718 ;\\r\\nC 109 ; WX 889 ; N m ; B 64 0 909 546 ;\\r\\nC 110 ; WX 611 ; N n ; B 65 0 629 546 ;\\r\\nC 111 ; WX 611 ; N o ; B 82 -14 643 546 ;\\r\\nC 112 ; WX 611 ; N p ; B 18 -207 645 546 ;\\r\\nC 113 ; WX 611 ; N q ; B 80 -207 665 546 ;\\r\\nC 114 ; WX 389 ; N r ; B 64 0 489 546 ;\\r\\nC 115 ; WX 556 ; N s ; B 63 -14 584 546 ;\\r\\nC 116 ; WX 333 ; N t ; B 100 -6 422 676 ;\\r\\nC 117 ; WX 611 ; N u ; B 98 -14 658 532 ;\\r\\nC 118 ; WX 556 ; N v ; B 126 0 656 532 ;\\r\\nC 119 ; WX 778 ; N w ; B 123 0 882 532 ;\\r\\nC 120 ; WX 556 ; N x ; B 15 0 648 532 ;\\r\\nC 121 ; WX 556 ; N y ; B 42 -214 652 532 ;\\r\\nC 122 ; WX 500 ; N z ; B 20 0 583 532 ;\\r\\nC 123 ; WX 389 ; N braceleft ; B 94 -196 518 722 ;\\r\\nC 124 ; WX 280 ; N bar ; B 36 -225 361 775 ;\\r\\nC 125 ; WX 389 ; N braceright ; B -18 -196 407 722 ;\\r\\nC 126 ; WX 584 ; N asciitilde ; B 115 163 577 343 ;\\r\\nC 161 ; WX 333 ; N exclamdown ; B 50 -186 353 532 ;\\r\\nC 162 ; WX 556 ; N cent ; B 79 -118 599 628 ;\\r\\nC 163 ; WX 556 ; N sterling ; B 50 -16 635 718 ;\\r\\nC 164 ; WX 167 ; N fraction ; B -174 -19 487 710 ;\\r\\nC 165 ; WX 556 ; N yen ; B 60 0 713 698 ;\\r\\nC 166 ; WX 556 ; N florin ; B -50 -210 669 737 ;\\r\\nC 167 ; WX 556 ; N section ; B 61 -184 598 727 ;\\r\\nC 168 ; WX 556 ; N currency ; B 27 76 680 636 ;\\r\\nC 169 ; WX 238 ; N quotesingle ; B 165 447 321 718 ;\\r\\nC 170 ; WX 500 ; N quotedblleft ; B 160 454 588 727 ;\\r\\nC 171 ; WX 556 ; N guillemotleft ; B 135 76 571 484 ;\\r\\nC 172 ; WX 333 ; N guilsinglleft ; B 130 76 353 484 ;\\r\\nC 173 ; WX 333 ; N guilsinglright ; B 99 76 322 484 ;\\r\\nC 174 ; WX 611 ; N fi ; B 87 0 696 727 ;\\r\\nC 175 ; WX 611 ; N fl ; B 87 0 695 727 ;\\r\\nC 177 ; WX 556 ; N endash ; B 48 227 627 333 ;\\r\\nC 178 ; WX 556 ; N dagger ; B 118 -171 626 718 ;\\r\\nC 179 ; WX 556 ; N daggerdbl ; B 46 -171 628 718 ;\\r\\nC 180 ; WX 278 ; N periodcentered ; B 110 172 276 334 ;\\r\\nC 182 ; WX 556 ; N paragraph ; B 98 -191 688 700 ;\\r\\nC 183 ; WX 350 ; N bullet ; B 83 194 420 524 ;\\r\\nC 184 ; WX 278 ; N quotesinglbase ; B 41 -146 236 127 ;\\r\\nC 185 ; WX 500 ; N quotedblbase ; B 36 -146 463 127 ;\\r\\nC 186 ; WX 500 ; N quotedblright ; B 162 445 589 718 ;\\r\\nC 187 ; WX 556 ; N guillemotright ; B 104 76 540 484 ;\\r\\nC 188 ; WX 1000 ; N ellipsis ; B 92 0 939 146 ;\\r\\nC 189 ; WX 1000 ; N perthousand ; B 76 -19 1038 710 ;\\r\\nC 191 ; WX 611 ; N questiondown ; B 53 -195 559 532 ;\\r\\nC 193 ; WX 333 ; N grave ; B 136 604 353 750 ;\\r\\nC 194 ; WX 333 ; N acute ; B 236 604 515 750 ;\\r\\nC 195 ; WX 333 ; N circumflex ; B 118 604 471 750 ;\\r\\nC 196 ; WX 333 ; N tilde ; B 113 610 507 737 ;\\r\\nC 197 ; WX 333 ; N macron ; B 122 604 483 678 ;\\r\\nC 198 ; WX 333 ; N breve ; B 156 604 494 750 ;\\r\\nC 199 ; WX 333 ; N dotaccent ; B 235 614 385 729 ;\\r\\nC 200 ; WX 333 ; N dieresis ; B 137 614 482 729 ;\\r\\nC 202 ; WX 333 ; N ring ; B 200 568 420 776 ;\\r\\nC 203 ; WX 333 ; N cedilla ; B -37 -228 220 0 ;\\r\\nC 205 ; WX 333 ; N hungarumlaut ; B 137 604 645 750 ;\\r\\nC 206 ; WX 333 ; N ogonek ; B 41 -228 264 0 ;\\r\\nC 207 ; WX 333 ; N caron ; B 149 604 502 750 ;\\r\\nC 208 ; WX 1000 ; N emdash ; B 48 227 1071 333 ;\\r\\nC 225 ; WX 1000 ; N AE ; B 5 0 1100 718 ;\\r\\nC 227 ; WX 370 ; N ordfeminine ; B 125 401 465 737 ;\\r\\nC 232 ; WX 611 ; N Lslash ; B 34 0 611 718 ;\\r\\nC 233 ; WX 778 ; N Oslash ; B 35 -27 894 745 ;\\r\\nC 234 ; WX 1000 ; N OE ; B 99 -19 1114 737 ;\\r\\nC 235 ; WX 365 ; N ordmasculine ; B 123 401 485 737 ;\\r\\nC 241 ; WX 889 ; N ae ; B 56 -14 923 546 ;\\r\\nC 245 ; WX 278 ; N dotlessi ; B 69 0 322 532 ;\\r\\nC 248 ; WX 278 ; N lslash ; B 40 0 407 718 ;\\r\\nC 249 ; WX 611 ; N oslash ; B 22 -29 701 560 ;\\r\\nC 250 ; WX 944 ; N oe ; B 82 -14 977 546 ;\\r\\nC 251 ; WX 611 ; N germandbls ; B 69 -14 657 731 ;\\r\\nC -1 ; WX 278 ; N Idieresis ; B 64 0 494 915 ;\\r\\nC -1 ; WX 556 ; N eacute ; B 70 -14 627 750 ;\\r\\nC -1 ; WX 556 ; N abreve ; B 55 -14 606 750 ;\\r\\nC -1 ; WX 611 ; N uhungarumlaut ; B 98 -14 784 750 ;\\r\\nC -1 ; WX 556 ; N ecaron ; B 70 -14 614 750 ;\\r\\nC -1 ; WX 667 ; N Ydieresis ; B 168 0 806 915 ;\\r\\nC -1 ; WX 584 ; N divide ; B 82 -42 610 548 ;\\r\\nC -1 ; WX 667 ; N Yacute ; B 168 0 806 936 ;\\r\\nC -1 ; WX 722 ; N Acircumflex ; B 20 0 706 936 ;\\r\\nC -1 ; WX 556 ; N aacute ; B 55 -14 627 750 ;\\r\\nC -1 ; WX 722 ; N Ucircumflex ; B 116 -19 804 936 ;\\r\\nC -1 ; WX 556 ; N yacute ; B 42 -214 652 750 ;\\r\\nC -1 ; WX 556 ; N scommaaccent ; B 63 -228 584 546 ;\\r\\nC -1 ; WX 556 ; N ecircumflex ; B 70 -14 593 750 ;\\r\\nC -1 ; WX 722 ; N Uring ; B 116 -19 804 962 ;\\r\\nC -1 ; WX 722 ; N Udieresis ; B 116 -19 804 915 ;\\r\\nC -1 ; WX 556 ; N aogonek ; B 55 -224 583 546 ;\\r\\nC -1 ; WX 722 ; N Uacute ; B 116 -19 804 936 ;\\r\\nC -1 ; WX 611 ; N uogonek ; B 98 -228 658 532 ;\\r\\nC -1 ; WX 667 ; N Edieresis ; B 76 0 757 915 ;\\r\\nC -1 ; WX 722 ; N Dcroat ; B 62 0 777 718 ;\\r\\nC -1 ; WX 250 ; N commaaccent ; B 16 -228 188 -50 ;\\r\\nC -1 ; WX 737 ; N copyright ; B 56 -19 835 737 ;\\r\\nC -1 ; WX 667 ; N Emacron ; B 76 0 757 864 ;\\r\\nC -1 ; WX 556 ; N ccaron ; B 79 -14 614 750 ;\\r\\nC -1 ; WX 556 ; N aring ; B 55 -14 583 776 ;\\r\\nC -1 ; WX 722 ; N Ncommaaccent ; B 69 -228 807 718 ;\\r\\nC -1 ; WX 278 ; N lacute ; B 69 0 528 936 ;\\r\\nC -1 ; WX 556 ; N agrave ; B 55 -14 583 750 ;\\r\\nC -1 ; WX 611 ; N Tcommaaccent ; B 140 -228 751 718 ;\\r\\nC -1 ; WX 722 ; N Cacute ; B 107 -19 789 936 ;\\r\\nC -1 ; WX 556 ; N atilde ; B 55 -14 619 737 ;\\r\\nC -1 ; WX 667 ; N Edotaccent ; B 76 0 757 915 ;\\r\\nC -1 ; WX 556 ; N scaron ; B 63 -14 614 750 ;\\r\\nC -1 ; WX 556 ; N scedilla ; B 63 -228 584 546 ;\\r\\nC -1 ; WX 278 ; N iacute ; B 69 0 488 750 ;\\r\\nC -1 ; WX 494 ; N lozenge ; B 90 0 564 745 ;\\r\\nC -1 ; WX 722 ; N Rcaron ; B 76 0 778 936 ;\\r\\nC -1 ; WX 778 ; N Gcommaaccent ; B 108 -228 817 737 ;\\r\\nC -1 ; WX 611 ; N ucircumflex ; B 98 -14 658 750 ;\\r\\nC -1 ; WX 556 ; N acircumflex ; B 55 -14 583 750 ;\\r\\nC -1 ; WX 722 ; N Amacron ; B 20 0 718 864 ;\\r\\nC -1 ; WX 389 ; N rcaron ; B 64 0 530 750 ;\\r\\nC -1 ; WX 556 ; N ccedilla ; B 79 -228 599 546 ;\\r\\nC -1 ; WX 611 ; N Zdotaccent ; B 25 0 737 915 ;\\r\\nC -1 ; WX 667 ; N Thorn ; B 76 0 716 718 ;\\r\\nC -1 ; WX 778 ; N Omacron ; B 107 -19 823 864 ;\\r\\nC -1 ; WX 722 ; N Racute ; B 76 0 778 936 ;\\r\\nC -1 ; WX 667 ; N Sacute ; B 81 -19 722 936 ;\\r\\nC -1 ; WX 743 ; N dcaron ; B 82 -14 903 718 ;\\r\\nC -1 ; WX 722 ; N Umacron ; B 116 -19 804 864 ;\\r\\nC -1 ; WX 611 ; N uring ; B 98 -14 658 776 ;\\r\\nC -1 ; WX 333 ; N threesuperior ; B 91 271 441 710 ;\\r\\nC -1 ; WX 778 ; N Ograve ; B 107 -19 823 936 ;\\r\\nC -1 ; WX 722 ; N Agrave ; B 20 0 702 936 ;\\r\\nC -1 ; WX 722 ; N Abreve ; B 20 0 729 936 ;\\r\\nC -1 ; WX 584 ; N multiply ; B 57 1 635 505 ;\\r\\nC -1 ; WX 611 ; N uacute ; B 98 -14 658 750 ;\\r\\nC -1 ; WX 611 ; N Tcaron ; B 140 0 751 936 ;\\r\\nC -1 ; WX 494 ; N partialdiff ; B 43 -21 585 750 ;\\r\\nC -1 ; WX 556 ; N ydieresis ; B 42 -214 652 729 ;\\r\\nC -1 ; WX 722 ; N Nacute ; B 69 0 807 936 ;\\r\\nC -1 ; WX 278 ; N icircumflex ; B 69 0 444 750 ;\\r\\nC -1 ; WX 667 ; N Ecircumflex ; B 76 0 757 936 ;\\r\\nC -1 ; WX 556 ; N adieresis ; B 55 -14 594 729 ;\\r\\nC -1 ; WX 556 ; N edieresis ; B 70 -14 594 729 ;\\r\\nC -1 ; WX 556 ; N cacute ; B 79 -14 627 750 ;\\r\\nC -1 ; WX 611 ; N nacute ; B 65 0 654 750 ;\\r\\nC -1 ; WX 611 ; N umacron ; B 98 -14 658 678 ;\\r\\nC -1 ; WX 722 ; N Ncaron ; B 69 0 807 936 ;\\r\\nC -1 ; WX 278 ; N Iacute ; B 64 0 528 936 ;\\r\\nC -1 ; WX 584 ; N plusminus ; B 40 0 625 506 ;\\r\\nC -1 ; WX 280 ; N brokenbar ; B 52 -150 345 700 ;\\r\\nC -1 ; WX 737 ; N registered ; B 55 -19 834 737 ;\\r\\nC -1 ; WX 778 ; N Gbreve ; B 108 -19 817 936 ;\\r\\nC -1 ; WX 278 ; N Idotaccent ; B 64 0 397 915 ;\\r\\nC -1 ; WX 600 ; N summation ; B 14 -10 670 706 ;\\r\\nC -1 ; WX 667 ; N Egrave ; B 76 0 757 936 ;\\r\\nC -1 ; WX 389 ; N racute ; B 64 0 543 750 ;\\r\\nC -1 ; WX 611 ; N omacron ; B 82 -14 643 678 ;\\r\\nC -1 ; WX 611 ; N Zacute ; B 25 0 737 936 ;\\r\\nC -1 ; WX 611 ; N Zcaron ; B 25 0 737 936 ;\\r\\nC -1 ; WX 549 ; N greaterequal ; B 26 0 629 704 ;\\r\\nC -1 ; WX 722 ; N Eth ; B 62 0 777 718 ;\\r\\nC -1 ; WX 722 ; N Ccedilla ; B 107 -228 789 737 ;\\r\\nC -1 ; WX 278 ; N lcommaaccent ; B 30 -228 362 718 ;\\r\\nC -1 ; WX 389 ; N tcaron ; B 100 -6 608 878 ;\\r\\nC -1 ; WX 556 ; N eogonek ; B 70 -228 593 546 ;\\r\\nC -1 ; WX 722 ; N Uogonek ; B 116 -228 804 718 ;\\r\\nC -1 ; WX 722 ; N Aacute ; B 20 0 750 936 ;\\r\\nC -1 ; WX 722 ; N Adieresis ; B 20 0 716 915 ;\\r\\nC -1 ; WX 556 ; N egrave ; B 70 -14 593 750 ;\\r\\nC -1 ; WX 500 ; N zacute ; B 20 0 599 750 ;\\r\\nC -1 ; WX 278 ; N iogonek ; B -14 -224 363 725 ;\\r\\nC -1 ; WX 778 ; N Oacute ; B 107 -19 823 936 ;\\r\\nC -1 ; WX 611 ; N oacute ; B 82 -14 654 750 ;\\r\\nC -1 ; WX 556 ; N amacron ; B 55 -14 595 678 ;\\r\\nC -1 ; WX 556 ; N sacute ; B 63 -14 627 750 ;\\r\\nC -1 ; WX 278 ; N idieresis ; B 69 0 455 729 ;\\r\\nC -1 ; WX 778 ; N Ocircumflex ; B 107 -19 823 936 ;\\r\\nC -1 ; WX 722 ; N Ugrave ; B 116 -19 804 936 ;\\r\\nC -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;\\r\\nC -1 ; WX 611 ; N thorn ; B 18 -208 645 718 ;\\r\\nC -1 ; WX 333 ; N twosuperior ; B 69 283 449 710 ;\\r\\nC -1 ; WX 778 ; N Odieresis ; B 107 -19 823 915 ;\\r\\nC -1 ; WX 611 ; N mu ; B 22 -207 658 532 ;\\r\\nC -1 ; WX 278 ; N igrave ; B 69 0 326 750 ;\\r\\nC -1 ; WX 611 ; N ohungarumlaut ; B 82 -14 784 750 ;\\r\\nC -1 ; WX 667 ; N Eogonek ; B 76 -224 757 718 ;\\r\\nC -1 ; WX 611 ; N dcroat ; B 82 -14 789 718 ;\\r\\nC -1 ; WX 834 ; N threequarters ; B 99 -19 839 710 ;\\r\\nC -1 ; WX 667 ; N Scedilla ; B 81 -228 718 737 ;\\r\\nC -1 ; WX 400 ; N lcaron ; B 69 0 561 718 ;\\r\\nC -1 ; WX 722 ; N Kcommaaccent ; B 87 -228 858 718 ;\\r\\nC -1 ; WX 611 ; N Lacute ; B 76 0 611 936 ;\\r\\nC -1 ; WX 1000 ; N trademark ; B 179 306 1109 718 ;\\r\\nC -1 ; WX 556 ; N edotaccent ; B 70 -14 593 729 ;\\r\\nC -1 ; WX 278 ; N Igrave ; B 64 0 367 936 ;\\r\\nC -1 ; WX 278 ; N Imacron ; B 64 0 496 864 ;\\r\\nC -1 ; WX 611 ; N Lcaron ; B 76 0 643 718 ;\\r\\nC -1 ; WX 834 ; N onehalf ; B 132 -19 858 710 ;\\r\\nC -1 ; WX 549 ; N lessequal ; B 29 0 676 704 ;\\r\\nC -1 ; WX 611 ; N ocircumflex ; B 82 -14 643 750 ;\\r\\nC -1 ; WX 611 ; N ntilde ; B 65 0 646 737 ;\\r\\nC -1 ; WX 722 ; N Uhungarumlaut ; B 116 -19 880 936 ;\\r\\nC -1 ; WX 667 ; N Eacute ; B 76 0 757 936 ;\\r\\nC -1 ; WX 556 ; N emacron ; B 70 -14 595 678 ;\\r\\nC -1 ; WX 611 ; N gbreve ; B 38 -217 666 750 ;\\r\\nC -1 ; WX 834 ; N onequarter ; B 132 -19 806 710 ;\\r\\nC -1 ; WX 667 ; N Scaron ; B 81 -19 718 936 ;\\r\\nC -1 ; WX 667 ; N Scommaaccent ; B 81 -228 718 737 ;\\r\\nC -1 ; WX 778 ; N Ohungarumlaut ; B 107 -19 908 936 ;\\r\\nC -1 ; WX 400 ; N degree ; B 175 426 467 712 ;\\r\\nC -1 ; WX 611 ; N ograve ; B 82 -14 643 750 ;\\r\\nC -1 ; WX 722 ; N Ccaron ; B 107 -19 789 936 ;\\r\\nC -1 ; WX 611 ; N ugrave ; B 98 -14 658 750 ;\\r\\nC -1 ; WX 549 ; N radical ; B 112 -46 689 850 ;\\r\\nC -1 ; WX 722 ; N Dcaron ; B 76 0 777 936 ;\\r\\nC -1 ; WX 389 ; N rcommaaccent ; B 26 -228 489 546 ;\\r\\nC -1 ; WX 722 ; N Ntilde ; B 69 0 807 923 ;\\r\\nC -1 ; WX 611 ; N otilde ; B 82 -14 646 737 ;\\r\\nC -1 ; WX 722 ; N Rcommaaccent ; B 76 -228 778 718 ;\\r\\nC -1 ; WX 611 ; N Lcommaaccent ; B 76 -228 611 718 ;\\r\\nC -1 ; WX 722 ; N Atilde ; B 20 0 741 923 ;\\r\\nC -1 ; WX 722 ; N Aogonek ; B 20 -224 702 718 ;\\r\\nC -1 ; WX 722 ; N Aring ; B 20 0 702 962 ;\\r\\nC -1 ; WX 778 ; N Otilde ; B 107 -19 823 923 ;\\r\\nC -1 ; WX 500 ; N zdotaccent ; B 20 0 583 729 ;\\r\\nC -1 ; WX 667 ; N Ecaron ; B 76 0 757 936 ;\\r\\nC -1 ; WX 278 ; N Iogonek ; B -41 -228 367 718 ;\\r\\nC -1 ; WX 556 ; N kcommaaccent ; B 69 -228 670 718 ;\\r\\nC -1 ; WX 584 ; N minus ; B 82 197 610 309 ;\\r\\nC -1 ; WX 278 ; N Icircumflex ; B 64 0 484 936 ;\\r\\nC -1 ; WX 611 ; N ncaron ; B 65 0 641 750 ;\\r\\nC -1 ; WX 333 ; N tcommaaccent ; B 58 -228 422 676 ;\\r\\nC -1 ; WX 584 ; N logicalnot ; B 105 108 633 419 ;\\r\\nC -1 ; WX 611 ; N odieresis ; B 82 -14 643 729 ;\\r\\nC -1 ; WX 611 ; N udieresis ; B 98 -14 658 729 ;\\r\\nC -1 ; WX 549 ; N notequal ; B 32 -49 630 570 ;\\r\\nC -1 ; WX 611 ; N gcommaaccent ; B 38 -217 666 850 ;\\r\\nC -1 ; WX 611 ; N eth ; B 82 -14 670 737 ;\\r\\nC -1 ; WX 500 ; N zcaron ; B 20 0 586 750 ;\\r\\nC -1 ; WX 611 ; N ncommaaccent ; B 65 -228 629 546 ;\\r\\nC -1 ; WX 333 ; N onesuperior ; B 148 283 388 710 ;\\r\\nC -1 ; WX 278 ; N imacron ; B 69 0 429 678 ;\\r\\nC -1 ; WX 556 ; N Euro ; B 0 0 0 0 ;\\r\\nEndCharMetrics\\r\\nStartKernData\\r\\nStartKernPairs 2481\\r\\nKPX A C -40\\r\\nKPX A Cacute -40\\r\\nKPX A Ccaron -40\\r\\nKPX A Ccedilla -40\\r\\nKPX A G -50\\r\\nKPX A Gbreve -50\\r\\nKPX A Gcommaaccent -50\\r\\nKPX A O -40\\r\\nKPX A Oacute -40\\r\\nKPX A Ocircumflex -40\\r\\nKPX A Odieresis -40\\r\\nKPX A Ograve -40\\r\\nKPX A Ohungarumlaut -40\\r\\nKPX A Omacron -40\\r\\nKPX A Oslash -40\\r\\nKPX A Otilde -40\\r\\nKPX A Q -40\\r\\nKPX A T -90\\r\\nKPX A Tcaron -90\\r\\nKPX A Tcommaaccent -90\\r\\nKPX A U -50\\r\\nKPX A Uacute -50\\r\\nKPX A Ucircumflex -50\\r\\nKPX A Udieresis -50\\r\\nKPX A Ugrave -50\\r\\nKPX A Uhungarumlaut -50\\r\\nKPX A Umacron -50\\r\\nKPX A Uogonek -50\\r\\nKPX A Uring -50\\r\\nKPX A V -80\\r\\nKPX A W -60\\r\\nKPX A Y -110\\r\\nKPX A Yacute -110\\r\\nKPX A Ydieresis -110\\r\\nKPX A u -30\\r\\nKPX A uacute -30\\r\\nKPX A ucircumflex -30\\r\\nKPX A udieresis -30\\r\\nKPX A ugrave -30\\r\\nKPX A uhungarumlaut -30\\r\\nKPX A umacron -30\\r\\nKPX A uogonek -30\\r\\nKPX A uring -30\\r\\nKPX A v -40\\r\\nKPX A w -30\\r\\nKPX A y -30\\r\\nKPX A yacute -30\\r\\nKPX A ydieresis -30\\r\\nKPX Aacute C -40\\r\\nKPX Aacute Cacute -40\\r\\nKPX Aacute Ccaron -40\\r\\nKPX Aacute Ccedilla -40\\r\\nKPX Aacute G -50\\r\\nKPX Aacute Gbreve -50\\r\\nKPX Aacute Gcommaaccent -50\\r\\nKPX Aacute O -40\\r\\nKPX Aacute Oacute -40\\r\\nKPX Aacute Ocircumflex -40\\r\\nKPX Aacute Odieresis -40\\r\\nKPX Aacute Ograve -40\\r\\nKPX Aacute Ohungarumlaut -40\\r\\nKPX Aacute Omacron -40\\r\\nKPX Aacute Oslash -40\\r\\nKPX Aacute Otilde -40\\r\\nKPX Aacute Q -40\\r\\nKPX Aacute T -90\\r\\nKPX Aacute Tcaron -90\\r\\nKPX Aacute Tcommaaccent -90\\r\\nKPX Aacute U -50\\r\\nKPX Aacute Uacute -50\\r\\nKPX Aacute Ucircumflex -50\\r\\nKPX Aacute Udieresis -50\\r\\nKPX Aacute Ugrave -50\\r\\nKPX Aacute Uhungarumlaut -50\\r\\nKPX Aacute Umacron -50\\r\\nKPX Aacute Uogonek -50\\r\\nKPX Aacute Uring -50\\r\\nKPX Aacute V -80\\r\\nKPX Aacute W -60\\r\\nKPX Aacute Y -110\\r\\nKPX Aacute Yacute -110\\r\\nKPX Aacute Ydieresis -110\\r\\nKPX Aacute u -30\\r\\nKPX Aacute uacute -30\\r\\nKPX Aacute ucircumflex -30\\r\\nKPX Aacute udieresis -30\\r\\nKPX Aacute ugrave -30\\r\\nKPX Aacute uhungarumlaut -30\\r\\nKPX Aacute umacron -30\\r\\nKPX Aacute uogonek -30\\r\\nKPX Aacute uring -30\\r\\nKPX Aacute v -40\\r\\nKPX Aacute w -30\\r\\nKPX Aacute y -30\\r\\nKPX Aacute yacute -30\\r\\nKPX Aacute ydieresis -30\\r\\nKPX Abreve C -40\\r\\nKPX Abreve Cacute -40\\r\\nKPX Abreve Ccaron -40\\r\\nKPX Abreve Ccedilla -40\\r\\nKPX Abreve G -50\\r\\nKPX Abreve Gbreve -50\\r\\nKPX Abreve Gcommaaccent -50\\r\\nKPX Abreve O -40\\r\\nKPX Abreve Oacute -40\\r\\nKPX Abreve Ocircumflex -40\\r\\nKPX Abreve Odieresis -40\\r\\nKPX Abreve Ograve -40\\r\\nKPX Abreve Ohungarumlaut -40\\r\\nKPX Abreve Omacron -40\\r\\nKPX Abreve Oslash -40\\r\\nKPX Abreve Otilde -40\\r\\nKPX Abreve Q -40\\r\\nKPX Abreve T -90\\r\\nKPX Abreve Tcaron -90\\r\\nKPX Abreve Tcommaaccent -90\\r\\nKPX Abreve U -50\\r\\nKPX Abreve Uacute -50\\r\\nKPX Abreve Ucircumflex -50\\r\\nKPX Abreve Udieresis -50\\r\\nKPX Abreve Ugrave -50\\r\\nKPX Abreve Uhungarumlaut -50\\r\\nKPX Abreve Umacron -50\\r\\nKPX Abreve Uogonek -50\\r\\nKPX Abreve Uring -50\\r\\nKPX Abreve V -80\\r\\nKPX Abreve W -60\\r\\nKPX Abreve Y -110\\r\\nKPX Abreve Yacute -110\\r\\nKPX Abreve Ydieresis -110\\r\\nKPX Abreve u -30\\r\\nKPX Abreve uacute -30\\r\\nKPX Abreve ucircumflex -30\\r\\nKPX Abreve udieresis -30\\r\\nKPX Abreve ugrave -30\\r\\nKPX Abreve uhungarumlaut -30\\r\\nKPX Abreve umacron -30\\r\\nKPX Abreve uogonek -30\\r\\nKPX Abreve uring -30\\r\\nKPX Abreve v -40\\r\\nKPX Abreve w -30\\r\\nKPX Abreve y -30\\r\\nKPX Abreve yacute -30\\r\\nKPX Abreve ydieresis -30\\r\\nKPX Acircumflex C -40\\r\\nKPX Acircumflex Cacute -40\\r\\nKPX Acircumflex Ccaron -40\\r\\nKPX Acircumflex Ccedilla -40\\r\\nKPX Acircumflex G -50\\r\\nKPX Acircumflex Gbreve -50\\r\\nKPX Acircumflex Gcommaaccent -50\\r\\nKPX Acircumflex O -40\\r\\nKPX Acircumflex Oacute -40\\r\\nKPX Acircumflex Ocircumflex -40\\r\\nKPX Acircumflex Odieresis -40\\r\\nKPX Acircumflex Ograve -40\\r\\nKPX Acircumflex Ohungarumlaut -40\\r\\nKPX Acircumflex Omacron -40\\r\\nKPX Acircumflex Oslash -40\\r\\nKPX Acircumflex Otilde -40\\r\\nKPX Acircumflex Q -40\\r\\nKPX Acircumflex T -90\\r\\nKPX Acircumflex Tcaron -90\\r\\nKPX Acircumflex Tcommaaccent -90\\r\\nKPX Acircumflex U -50\\r\\nKPX Acircumflex Uacute -50\\r\\nKPX Acircumflex Ucircumflex -50\\r\\nKPX Acircumflex Udieresis -50\\r\\nKPX Acircumflex Ugrave -50\\r\\nKPX Acircumflex Uhungarumlaut -50\\r\\nKPX Acircumflex Umacron -50\\r\\nKPX Acircumflex Uogonek -50\\r\\nKPX Acircumflex Uring -50\\r\\nKPX Acircumflex V -80\\r\\nKPX Acircumflex W -60\\r\\nKPX Acircumflex Y -110\\r\\nKPX Acircumflex Yacute -110\\r\\nKPX Acircumflex Ydieresis -110\\r\\nKPX Acircumflex u -30\\r\\nKPX Acircumflex uacute -30\\r\\nKPX Acircumflex ucircumflex -30\\r\\nKPX Acircumflex udieresis -30\\r\\nKPX Acircumflex ugrave -30\\r\\nKPX Acircumflex uhungarumlaut -30\\r\\nKPX Acircumflex umacron -30\\r\\nKPX Acircumflex uogonek -30\\r\\nKPX Acircumflex uring -30\\r\\nKPX Acircumflex v -40\\r\\nKPX Acircumflex w -30\\r\\nKPX Acircumflex y -30\\r\\nKPX Acircumflex yacute -30\\r\\nKPX Acircumflex ydieresis -30\\r\\nKPX Adieresis C -40\\r\\nKPX Adieresis Cacute -40\\r\\nKPX Adieresis Ccaron -40\\r\\nKPX Adieresis Ccedilla -40\\r\\nKPX Adieresis G -50\\r\\nKPX Adieresis Gbreve -50\\r\\nKPX Adieresis Gcommaaccent -50\\r\\nKPX Adieresis O -40\\r\\nKPX Adieresis Oacute -40\\r\\nKPX Adieresis Ocircumflex -40\\r\\nKPX Adieresis Odieresis -40\\r\\nKPX Adieresis Ograve -40\\r\\nKPX Adieresis Ohungarumlaut -40\\r\\nKPX Adieresis Omacron -40\\r\\nKPX Adieresis Oslash -40\\r\\nKPX Adieresis Otilde -40\\r\\nKPX Adieresis Q -40\\r\\nKPX Adieresis T -90\\r\\nKPX Adieresis Tcaron -90\\r\\nKPX Adieresis Tcommaaccent -90\\r\\nKPX Adieresis U -50\\r\\nKPX Adieresis Uacute -50\\r\\nKPX Adieresis Ucircumflex -50\\r\\nKPX Adieresis Udieresis -50\\r\\nKPX Adieresis Ugrave -50\\r\\nKPX Adieresis Uhungarumlaut -50\\r\\nKPX Adieresis Umacron -50\\r\\nKPX Adieresis Uogonek -50\\r\\nKPX Adieresis Uring -50\\r\\nKPX Adieresis V -80\\r\\nKPX Adieresis W -60\\r\\nKPX Adieresis Y -110\\r\\nKPX Adieresis Yacute -110\\r\\nKPX Adieresis Ydieresis -110\\r\\nKPX Adieresis u -30\\r\\nKPX Adieresis uacute -30\\r\\nKPX Adieresis ucircumflex -30\\r\\nKPX Adieresis udieresis -30\\r\\nKPX Adieresis ugrave -30\\r\\nKPX Adieresis uhungarumlaut -30\\r\\nKPX Adieresis umacron -30\\r\\nKPX Adieresis uogonek -30\\r\\nKPX Adieresis uring -30\\r\\nKPX Adieresis v -40\\r\\nKPX Adieresis w -30\\r\\nKPX Adieresis y -30\\r\\nKPX Adieresis yacute -30\\r\\nKPX Adieresis ydieresis -30\\r\\nKPX Agrave C -40\\r\\nKPX Agrave Cacute -40\\r\\nKPX Agrave Ccaron -40\\r\\nKPX Agrave Ccedilla -40\\r\\nKPX Agrave G -50\\r\\nKPX Agrave Gbreve -50\\r\\nKPX Agrave Gcommaaccent -50\\r\\nKPX Agrave O -40\\r\\nKPX Agrave Oacute -40\\r\\nKPX Agrave Ocircumflex -40\\r\\nKPX Agrave Odieresis -40\\r\\nKPX Agrave Ograve -40\\r\\nKPX Agrave Ohungarumlaut -40\\r\\nKPX Agrave Omacron -40\\r\\nKPX Agrave Oslash -40\\r\\nKPX Agrave Otilde -40\\r\\nKPX Agrave Q -40\\r\\nKPX Agrave T -90\\r\\nKPX Agrave Tcaron -90\\r\\nKPX Agrave Tcommaaccent -90\\r\\nKPX Agrave U -50\\r\\nKPX Agrave Uacute -50\\r\\nKPX Agrave Ucircumflex -50\\r\\nKPX Agrave Udieresis -50\\r\\nKPX Agrave Ugrave -50\\r\\nKPX Agrave Uhungarumlaut -50\\r\\nKPX Agrave Umacron -50\\r\\nKPX Agrave Uogonek -50\\r\\nKPX Agrave Uring -50\\r\\nKPX Agrave V -80\\r\\nKPX Agrave W -60\\r\\nKPX Agrave Y -110\\r\\nKPX Agrave Yacute -110\\r\\nKPX Agrave Ydieresis -110\\r\\nKPX Agrave u -30\\r\\nKPX Agrave uacute -30\\r\\nKPX Agrave ucircumflex -30\\r\\nKPX Agrave udieresis -30\\r\\nKPX Agrave ugrave -30\\r\\nKPX Agrave uhungarumlaut -30\\r\\nKPX Agrave umacron -30\\r\\nKPX Agrave uogonek -30\\r\\nKPX Agrave uring -30\\r\\nKPX Agrave v -40\\r\\nKPX Agrave w -30\\r\\nKPX Agrave y -30\\r\\nKPX Agrave yacute -30\\r\\nKPX Agrave ydieresis -30\\r\\nKPX Amacron C -40\\r\\nKPX Amacron Cacute -40\\r\\nKPX Amacron Ccaron -40\\r\\nKPX Amacron Ccedilla -40\\r\\nKPX Amacron G -50\\r\\nKPX Amacron Gbreve -50\\r\\nKPX Amacron Gcommaaccent -50\\r\\nKPX Amacron O -40\\r\\nKPX Amacron Oacute -40\\r\\nKPX Amacron Ocircumflex -40\\r\\nKPX Amacron Odieresis -40\\r\\nKPX Amacron Ograve -40\\r\\nKPX Amacron Ohungarumlaut -40\\r\\nKPX Amacron Omacron -40\\r\\nKPX Amacron Oslash -40\\r\\nKPX Amacron Otilde -40\\r\\nKPX Amacron Q -40\\r\\nKPX Amacron T -90\\r\\nKPX Amacron Tcaron -90\\r\\nKPX Amacron Tcommaaccent -90\\r\\nKPX Amacron U -50\\r\\nKPX Amacron Uacute -50\\r\\nKPX Amacron Ucircumflex -50\\r\\nKPX Amacron Udieresis -50\\r\\nKPX Amacron Ugrave -50\\r\\nKPX Amacron Uhungarumlaut -50\\r\\nKPX Amacron Umacron -50\\r\\nKPX Amacron Uogonek -50\\r\\nKPX Amacron Uring -50\\r\\nKPX Amacron V -80\\r\\nKPX Amacron W -60\\r\\nKPX Amacron Y -110\\r\\nKPX Amacron Yacute -110\\r\\nKPX Amacron Ydieresis -110\\r\\nKPX Amacron u -30\\r\\nKPX Amacron uacute -30\\r\\nKPX Amacron ucircumflex -30\\r\\nKPX Amacron udieresis -30\\r\\nKPX Amacron ugrave -30\\r\\nKPX Amacron uhungarumlaut -30\\r\\nKPX Amacron umacron -30\\r\\nKPX Amacron uogonek -30\\r\\nKPX Amacron uring -30\\r\\nKPX Amacron v -40\\r\\nKPX Amacron w -30\\r\\nKPX Amacron y -30\\r\\nKPX Amacron yacute -30\\r\\nKPX Amacron ydieresis -30\\r\\nKPX Aogonek C -40\\r\\nKPX Aogonek Cacute -40\\r\\nKPX Aogonek Ccaron -40\\r\\nKPX Aogonek Ccedilla -40\\r\\nKPX Aogonek G -50\\r\\nKPX Aogonek Gbreve -50\\r\\nKPX Aogonek Gcommaaccent -50\\r\\nKPX Aogonek O -40\\r\\nKPX Aogonek Oacute -40\\r\\nKPX Aogonek Ocircumflex -40\\r\\nKPX Aogonek Odieresis -40\\r\\nKPX Aogonek Ograve -40\\r\\nKPX Aogonek Ohungarumlaut -40\\r\\nKPX Aogonek Omacron -40\\r\\nKPX Aogonek Oslash -40\\r\\nKPX Aogonek Otilde -40\\r\\nKPX Aogonek Q -40\\r\\nKPX Aogonek T -90\\r\\nKPX Aogonek Tcaron -90\\r\\nKPX Aogonek Tcommaaccent -90\\r\\nKPX Aogonek U -50\\r\\nKPX Aogonek Uacute -50\\r\\nKPX Aogonek Ucircumflex -50\\r\\nKPX Aogonek Udieresis -50\\r\\nKPX Aogonek Ugrave -50\\r\\nKPX Aogonek Uhungarumlaut -50\\r\\nKPX Aogonek Umacron -50\\r\\nKPX Aogonek Uogonek -50\\r\\nKPX Aogonek Uring -50\\r\\nKPX Aogonek V -80\\r\\nKPX Aogonek W -60\\r\\nKPX Aogonek Y -110\\r\\nKPX Aogonek Yacute -110\\r\\nKPX Aogonek Ydieresis -110\\r\\nKPX Aogonek u -30\\r\\nKPX Aogonek uacute -30\\r\\nKPX Aogonek ucircumflex -30\\r\\nKPX Aogonek udieresis -30\\r\\nKPX Aogonek ugrave -30\\r\\nKPX Aogonek uhungarumlaut -30\\r\\nKPX Aogonek umacron -30\\r\\nKPX Aogonek uogonek -30\\r\\nKPX Aogonek uring -30\\r\\nKPX Aogonek v -40\\r\\nKPX Aogonek w -30\\r\\nKPX Aogonek y -30\\r\\nKPX Aogonek yacute -30\\r\\nKPX Aogonek ydieresis -30\\r\\nKPX Aring C -40\\r\\nKPX Aring Cacute -40\\r\\nKPX Aring Ccaron -40\\r\\nKPX Aring Ccedilla -40\\r\\nKPX Aring G -50\\r\\nKPX Aring Gbreve -50\\r\\nKPX Aring Gcommaaccent -50\\r\\nKPX Aring O -40\\r\\nKPX Aring Oacute -40\\r\\nKPX Aring Ocircumflex -40\\r\\nKPX Aring Odieresis -40\\r\\nKPX Aring Ograve -40\\r\\nKPX Aring Ohungarumlaut -40\\r\\nKPX Aring Omacron -40\\r\\nKPX Aring Oslash -40\\r\\nKPX Aring Otilde -40\\r\\nKPX Aring Q -40\\r\\nKPX Aring T -90\\r\\nKPX Aring Tcaron -90\\r\\nKPX Aring Tcommaaccent -90\\r\\nKPX Aring U -50\\r\\nKPX Aring Uacute -50\\r\\nKPX Aring Ucircumflex -50\\r\\nKPX Aring Udieresis -50\\r\\nKPX Aring Ugrave -50\\r\\nKPX Aring Uhungarumlaut -50\\r\\nKPX Aring Umacron -50\\r\\nKPX Aring Uogonek -50\\r\\nKPX Aring Uring -50\\r\\nKPX Aring V -80\\r\\nKPX Aring W -60\\r\\nKPX Aring Y -110\\r\\nKPX Aring Yacute -110\\r\\nKPX Aring Ydieresis -110\\r\\nKPX Aring u -30\\r\\nKPX Aring uacute -30\\r\\nKPX Aring ucircumflex -30\\r\\nKPX Aring udieresis -30\\r\\nKPX Aring ugrave -30\\r\\nKPX Aring uhungarumlaut -30\\r\\nKPX Aring umacron -30\\r\\nKPX Aring uogonek -30\\r\\nKPX Aring uring -30\\r\\nKPX Aring v -40\\r\\nKPX Aring w -30\\r\\nKPX Aring y -30\\r\\nKPX Aring yacute -30\\r\\nKPX Aring ydieresis -30\\r\\nKPX Atilde C -40\\r\\nKPX Atilde Cacute -40\\r\\nKPX Atilde Ccaron -40\\r\\nKPX Atilde Ccedilla -40\\r\\nKPX Atilde G -50\\r\\nKPX Atilde Gbreve -50\\r\\nKPX Atilde Gcommaaccent -50\\r\\nKPX Atilde O -40\\r\\nKPX Atilde Oacute -40\\r\\nKPX Atilde Ocircumflex -40\\r\\nKPX Atilde Odieresis -40\\r\\nKPX Atilde Ograve -40\\r\\nKPX Atilde Ohungarumlaut -40\\r\\nKPX Atilde Omacron -40\\r\\nKPX Atilde Oslash -40\\r\\nKPX Atilde Otilde -40\\r\\nKPX Atilde Q -40\\r\\nKPX Atilde T -90\\r\\nKPX Atilde Tcaron -90\\r\\nKPX Atilde Tcommaaccent -90\\r\\nKPX Atilde U -50\\r\\nKPX Atilde Uacute -50\\r\\nKPX Atilde Ucircumflex -50\\r\\nKPX Atilde Udieresis -50\\r\\nKPX Atilde Ugrave -50\\r\\nKPX Atilde Uhungarumlaut -50\\r\\nKPX Atilde Umacron -50\\r\\nKPX Atilde Uogonek -50\\r\\nKPX Atilde Uring -50\\r\\nKPX Atilde V -80\\r\\nKPX Atilde W -60\\r\\nKPX Atilde Y -110\\r\\nKPX Atilde Yacute -110\\r\\nKPX Atilde Ydieresis -110\\r\\nKPX Atilde u -30\\r\\nKPX Atilde uacute -30\\r\\nKPX Atilde ucircumflex -30\\r\\nKPX Atilde udieresis -30\\r\\nKPX Atilde ugrave -30\\r\\nKPX Atilde uhungarumlaut -30\\r\\nKPX Atilde umacron -30\\r\\nKPX Atilde uogonek -30\\r\\nKPX Atilde uring -30\\r\\nKPX Atilde v -40\\r\\nKPX Atilde w -30\\r\\nKPX Atilde y -30\\r\\nKPX Atilde yacute -30\\r\\nKPX Atilde ydieresis -30\\r\\nKPX B A -30\\r\\nKPX B Aacute -30\\r\\nKPX B Abreve -30\\r\\nKPX B Acircumflex -30\\r\\nKPX B Adieresis -30\\r\\nKPX B Agrave -30\\r\\nKPX B Amacron -30\\r\\nKPX B Aogonek -30\\r\\nKPX B Aring -30\\r\\nKPX B Atilde -30\\r\\nKPX B U -10\\r\\nKPX B Uacute -10\\r\\nKPX B Ucircumflex -10\\r\\nKPX B Udieresis -10\\r\\nKPX B Ugrave -10\\r\\nKPX B Uhungarumlaut -10\\r\\nKPX B Umacron -10\\r\\nKPX B Uogonek -10\\r\\nKPX B Uring -10\\r\\nKPX D A -40\\r\\nKPX D Aacute -40\\r\\nKPX D Abreve -40\\r\\nKPX D Acircumflex -40\\r\\nKPX D Adieresis -40\\r\\nKPX D Agrave -40\\r\\nKPX D Amacron -40\\r\\nKPX D Aogonek -40\\r\\nKPX D Aring -40\\r\\nKPX D Atilde -40\\r\\nKPX D V -40\\r\\nKPX D W -40\\r\\nKPX D Y -70\\r\\nKPX D Yacute -70\\r\\nKPX D Ydieresis -70\\r\\nKPX D comma -30\\r\\nKPX D period -30\\r\\nKPX Dcaron A -40\\r\\nKPX Dcaron Aacute -40\\r\\nKPX Dcaron Abreve -40\\r\\nKPX Dcaron Acircumflex -40\\r\\nKPX Dcaron Adieresis -40\\r\\nKPX Dcaron Agrave -40\\r\\nKPX Dcaron Amacron -40\\r\\nKPX Dcaron Aogonek -40\\r\\nKPX Dcaron Aring -40\\r\\nKPX Dcaron Atilde -40\\r\\nKPX Dcaron V -40\\r\\nKPX Dcaron W -40\\r\\nKPX Dcaron Y -70\\r\\nKPX Dcaron Yacute -70\\r\\nKPX Dcaron Ydieresis -70\\r\\nKPX Dcaron comma -30\\r\\nKPX Dcaron period -30\\r\\nKPX Dcroat A -40\\r\\nKPX Dcroat Aacute -40\\r\\nKPX Dcroat Abreve -40\\r\\nKPX Dcroat Acircumflex -40\\r\\nKPX Dcroat Adieresis -40\\r\\nKPX Dcroat Agrave -40\\r\\nKPX Dcroat Amacron -40\\r\\nKPX Dcroat Aogonek -40\\r\\nKPX Dcroat Aring -40\\r\\nKPX Dcroat Atilde -40\\r\\nKPX Dcroat V -40\\r\\nKPX Dcroat W -40\\r\\nKPX Dcroat Y -70\\r\\nKPX Dcroat Yacute -70\\r\\nKPX Dcroat Ydieresis -70\\r\\nKPX Dcroat comma -30\\r\\nKPX Dcroat period -30\\r\\nKPX F A -80\\r\\nKPX F Aacute -80\\r\\nKPX F Abreve -80\\r\\nKPX F Acircumflex -80\\r\\nKPX F Adieresis -80\\r\\nKPX F Agrave -80\\r\\nKPX F Amacron -80\\r\\nKPX F Aogonek -80\\r\\nKPX F Aring -80\\r\\nKPX F Atilde -80\\r\\nKPX F a -20\\r\\nKPX F aacute -20\\r\\nKPX F abreve -20\\r\\nKPX F acircumflex -20\\r\\nKPX F adieresis -20\\r\\nKPX F agrave -20\\r\\nKPX F amacron -20\\r\\nKPX F aogonek -20\\r\\nKPX F aring -20\\r\\nKPX F atilde -20\\r\\nKPX F comma -100\\r\\nKPX F period -100\\r\\nKPX J A -20\\r\\nKPX J Aacute -20\\r\\nKPX J Abreve -20\\r\\nKPX J Acircumflex -20\\r\\nKPX J Adieresis -20\\r\\nKPX J Agrave -20\\r\\nKPX J Amacron -20\\r\\nKPX J Aogonek -20\\r\\nKPX J Aring -20\\r\\nKPX J Atilde -20\\r\\nKPX J comma -20\\r\\nKPX J period -20\\r\\nKPX J u -20\\r\\nKPX J uacute -20\\r\\nKPX J ucircumflex -20\\r\\nKPX J udieresis -20\\r\\nKPX J ugrave -20\\r\\nKPX J uhungarumlaut -20\\r\\nKPX J umacron -20\\r\\nKPX J uogonek -20\\r\\nKPX J uring -20\\r\\nKPX K O -30\\r\\nKPX K Oacute -30\\r\\nKPX K Ocircumflex -30\\r\\nKPX K Odieresis -30\\r\\nKPX K Ograve -30\\r\\nKPX K Ohungarumlaut -30\\r\\nKPX K Omacron -30\\r\\nKPX K Oslash -30\\r\\nKPX K Otilde -30\\r\\nKPX K e -15\\r\\nKPX K eacute -15\\r\\nKPX K ecaron -15\\r\\nKPX K ecircumflex -15\\r\\nKPX K edieresis -15\\r\\nKPX K edotaccent -15\\r\\nKPX K egrave -15\\r\\nKPX K emacron -15\\r\\nKPX K eogonek -15\\r\\nKPX K o -35\\r\\nKPX K oacute -35\\r\\nKPX K ocircumflex -35\\r\\nKPX K odieresis -35\\r\\nKPX K ograve -35\\r\\nKPX K ohungarumlaut -35\\r\\nKPX K omacron -35\\r\\nKPX K oslash -35\\r\\nKPX K otilde -35\\r\\nKPX K u -30\\r\\nKPX K uacute -30\\r\\nKPX K ucircumflex -30\\r\\nKPX K udieresis -30\\r\\nKPX K ugrave -30\\r\\nKPX K uhungarumlaut -30\\r\\nKPX K umacron -30\\r\\nKPX K uogonek -30\\r\\nKPX K uring -30\\r\\nKPX K y -40\\r\\nKPX K yacute -40\\r\\nKPX K ydieresis -40\\r\\nKPX Kcommaaccent O -30\\r\\nKPX Kcommaaccent Oacute -30\\r\\nKPX Kcommaaccent Ocircumflex -30\\r\\nKPX Kcommaaccent Odieresis -30\\r\\nKPX Kcommaaccent Ograve -30\\r\\nKPX Kcommaaccent Ohungarumlaut -30\\r\\nKPX Kcommaaccent Omacron -30\\r\\nKPX Kcommaaccent Oslash -30\\r\\nKPX Kcommaaccent Otilde -30\\r\\nKPX Kcommaaccent e -15\\r\\nKPX Kcommaaccent eacute -15\\r\\nKPX Kcommaaccent ecaron -15\\r\\nKPX Kcommaaccent ecircumflex -15\\r\\nKPX Kcommaaccent edieresis -15\\r\\nKPX Kcommaaccent edotaccent -15\\r\\nKPX Kcommaaccent egrave -15\\r\\nKPX Kcommaaccent emacron -15\\r\\nKPX Kcommaaccent eogonek -15\\r\\nKPX Kcommaaccent o -35\\r\\nKPX Kcommaaccent oacute -35\\r\\nKPX Kcommaaccent ocircumflex -35\\r\\nKPX Kcommaaccent odieresis -35\\r\\nKPX Kcommaaccent ograve -35\\r\\nKPX Kcommaaccent ohungarumlaut -35\\r\\nKPX Kcommaaccent omacron -35\\r\\nKPX Kcommaaccent oslash -35\\r\\nKPX Kcommaaccent otilde -35\\r\\nKPX Kcommaaccent u -30\\r\\nKPX Kcommaaccent uacute -30\\r\\nKPX Kcommaaccent ucircumflex -30\\r\\nKPX Kcommaaccent udieresis -30\\r\\nKPX Kcommaaccent ugrave -30\\r\\nKPX Kcommaaccent uhungarumlaut -30\\r\\nKPX Kcommaaccent umacron -30\\r\\nKPX Kcommaaccent uogonek -30\\r\\nKPX Kcommaaccent uring -30\\r\\nKPX Kcommaaccent y -40\\r\\nKPX Kcommaaccent yacute -40\\r\\nKPX Kcommaaccent ydieresis -40\\r\\nKPX L T -90\\r\\nKPX L Tcaron -90\\r\\nKPX L Tcommaaccent -90\\r\\nKPX L V -110\\r\\nKPX L W -80\\r\\nKPX L Y -120\\r\\nKPX L Yacute -120\\r\\nKPX L Ydieresis -120\\r\\nKPX L quotedblright -140\\r\\nKPX L quoteright -140\\r\\nKPX L y -30\\r\\nKPX L yacute -30\\r\\nKPX L ydieresis -30\\r\\nKPX Lacute T -90\\r\\nKPX Lacute Tcaron -90\\r\\nKPX Lacute Tcommaaccent -90\\r\\nKPX Lacute V -110\\r\\nKPX Lacute W -80\\r\\nKPX Lacute Y -120\\r\\nKPX Lacute Yacute -120\\r\\nKPX Lacute Ydieresis -120\\r\\nKPX Lacute quotedblright -140\\r\\nKPX Lacute quoteright -140\\r\\nKPX Lacute y -30\\r\\nKPX Lacute yacute -30\\r\\nKPX Lacute ydieresis -30\\r\\nKPX Lcommaaccent T -90\\r\\nKPX Lcommaaccent Tcaron -90\\r\\nKPX Lcommaaccent Tcommaaccent -90\\r\\nKPX Lcommaaccent V -110\\r\\nKPX Lcommaaccent W -80\\r\\nKPX Lcommaaccent Y -120\\r\\nKPX Lcommaaccent Yacute -120\\r\\nKPX Lcommaaccent Ydieresis -120\\r\\nKPX Lcommaaccent quotedblright -140\\r\\nKPX Lcommaaccent quoteright -140\\r\\nKPX Lcommaaccent y -30\\r\\nKPX Lcommaaccent yacute -30\\r\\nKPX Lcommaaccent ydieresis -30\\r\\nKPX Lslash T -90\\r\\nKPX Lslash Tcaron -90\\r\\nKPX Lslash Tcommaaccent -90\\r\\nKPX Lslash V -110\\r\\nKPX Lslash W -80\\r\\nKPX Lslash Y -120\\r\\nKPX Lslash Yacute -120\\r\\nKPX Lslash Ydieresis -120\\r\\nKPX Lslash quotedblright -140\\r\\nKPX Lslash quoteright -140\\r\\nKPX Lslash y -30\\r\\nKPX Lslash yacute -30\\r\\nKPX Lslash ydieresis -30\\r\\nKPX O A -50\\r\\nKPX O Aacute -50\\r\\nKPX O Abreve -50\\r\\nKPX O Acircumflex -50\\r\\nKPX O Adieresis -50\\r\\nKPX O Agrave -50\\r\\nKPX O Amacron -50\\r\\nKPX O Aogonek -50\\r\\nKPX O Aring -50\\r\\nKPX O Atilde -50\\r\\nKPX O T -40\\r\\nKPX O Tcaron -40\\r\\nKPX O Tcommaaccent -40\\r\\nKPX O V -50\\r\\nKPX O W -50\\r\\nKPX O X -50\\r\\nKPX O Y -70\\r\\nKPX O Yacute -70\\r\\nKPX O Ydieresis -70\\r\\nKPX O comma -40\\r\\nKPX O period -40\\r\\nKPX Oacute A -50\\r\\nKPX Oacute Aacute -50\\r\\nKPX Oacute Abreve -50\\r\\nKPX Oacute Acircumflex -50\\r\\nKPX Oacute Adieresis -50\\r\\nKPX Oacute Agrave -50\\r\\nKPX Oacute Amacron -50\\r\\nKPX Oacute Aogonek -50\\r\\nKPX Oacute Aring -50\\r\\nKPX Oacute Atilde -50\\r\\nKPX Oacute T -40\\r\\nKPX Oacute Tcaron -40\\r\\nKPX Oacute Tcommaaccent -40\\r\\nKPX Oacute V -50\\r\\nKPX Oacute W -50\\r\\nKPX Oacute X -50\\r\\nKPX Oacute Y -70\\r\\nKPX Oacute Yacute -70\\r\\nKPX Oacute Ydieresis -70\\r\\nKPX Oacute comma -40\\r\\nKPX Oacute period -40\\r\\nKPX Ocircumflex A -50\\r\\nKPX Ocircumflex Aacute -50\\r\\nKPX Ocircumflex Abreve -50\\r\\nKPX Ocircumflex Acircumflex -50\\r\\nKPX Ocircumflex Adieresis -50\\r\\nKPX Ocircumflex Agrave -50\\r\\nKPX Ocircumflex Amacron -50\\r\\nKPX Ocircumflex Aogonek -50\\r\\nKPX Ocircumflex Aring -50\\r\\nKPX Ocircumflex Atilde -50\\r\\nKPX Ocircumflex T -40\\r\\nKPX Ocircumflex Tcaron -40\\r\\nKPX Ocircumflex Tcommaaccent -40\\r\\nKPX Ocircumflex V -50\\r\\nKPX Ocircumflex W -50\\r\\nKPX Ocircumflex X -50\\r\\nKPX Ocircumflex Y -70\\r\\nKPX Ocircumflex Yacute -70\\r\\nKPX Ocircumflex Ydieresis -70\\r\\nKPX Ocircumflex comma -40\\r\\nKPX Ocircumflex period -40\\r\\nKPX Odieresis A -50\\r\\nKPX Odieresis Aacute -50\\r\\nKPX Odieresis Abreve -50\\r\\nKPX Odieresis Acircumflex -50\\r\\nKPX Odieresis Adieresis -50\\r\\nKPX Odieresis Agrave -50\\r\\nKPX Odieresis Amacron -50\\r\\nKPX Odieresis Aogonek -50\\r\\nKPX Odieresis Aring -50\\r\\nKPX Odieresis Atilde -50\\r\\nKPX Odieresis T -40\\r\\nKPX Odieresis Tcaron -40\\r\\nKPX Odieresis Tcommaaccent -40\\r\\nKPX Odieresis V -50\\r\\nKPX Odieresis W -50\\r\\nKPX Odieresis X -50\\r\\nKPX Odieresis Y -70\\r\\nKPX Odieresis Yacute -70\\r\\nKPX Odieresis Ydieresis -70\\r\\nKPX Odieresis comma -40\\r\\nKPX Odieresis period -40\\r\\nKPX Ograve A -50\\r\\nKPX Ograve Aacute -50\\r\\nKPX Ograve Abreve -50\\r\\nKPX Ograve Acircumflex -50\\r\\nKPX Ograve Adieresis -50\\r\\nKPX Ograve Agrave -50\\r\\nKPX Ograve Amacron -50\\r\\nKPX Ograve Aogonek -50\\r\\nKPX Ograve Aring -50\\r\\nKPX Ograve Atilde -50\\r\\nKPX Ograve T -40\\r\\nKPX Ograve Tcaron -40\\r\\nKPX Ograve Tcommaaccent -40\\r\\nKPX Ograve V -50\\r\\nKPX Ograve W -50\\r\\nKPX Ograve X -50\\r\\nKPX Ograve Y -70\\r\\nKPX Ograve Yacute -70\\r\\nKPX Ograve Ydieresis -70\\r\\nKPX Ograve comma -40\\r\\nKPX Ograve period -40\\r\\nKPX Ohungarumlaut A -50\\r\\nKPX Ohungarumlaut Aacute -50\\r\\nKPX Ohungarumlaut Abreve -50\\r\\nKPX Ohungarumlaut Acircumflex -50\\r\\nKPX Ohungarumlaut Adieresis -50\\r\\nKPX Ohungarumlaut Agrave -50\\r\\nKPX Ohungarumlaut Amacron -50\\r\\nKPX Ohungarumlaut Aogonek -50\\r\\nKPX Ohungarumlaut Aring -50\\r\\nKPX Ohungarumlaut Atilde -50\\r\\nKPX Ohungarumlaut T -40\\r\\nKPX Ohungarumlaut Tcaron -40\\r\\nKPX Ohungarumlaut Tcommaaccent -40\\r\\nKPX Ohungarumlaut V -50\\r\\nKPX Ohungarumlaut W -50\\r\\nKPX Ohungarumlaut X -50\\r\\nKPX Ohungarumlaut Y -70\\r\\nKPX Ohungarumlaut Yacute -70\\r\\nKPX Ohungarumlaut Ydieresis -70\\r\\nKPX Ohungarumlaut comma -40\\r\\nKPX Ohungarumlaut period -40\\r\\nKPX Omacron A -50\\r\\nKPX Omacron Aacute -50\\r\\nKPX Omacron Abreve -50\\r\\nKPX Omacron Acircumflex -50\\r\\nKPX Omacron Adieresis -50\\r\\nKPX Omacron Agrave -50\\r\\nKPX Omacron Amacron -50\\r\\nKPX Omacron Aogonek -50\\r\\nKPX Omacron Aring -50\\r\\nKPX Omacron Atilde -50\\r\\nKPX Omacron T -40\\r\\nKPX Omacron Tcaron -40\\r\\nKPX Omacron Tcommaaccent -40\\r\\nKPX Omacron V -50\\r\\nKPX Omacron W -50\\r\\nKPX Omacron X -50\\r\\nKPX Omacron Y -70\\r\\nKPX Omacron Yacute -70\\r\\nKPX Omacron Ydieresis -70\\r\\nKPX Omacron comma -40\\r\\nKPX Omacron period -40\\r\\nKPX Oslash A -50\\r\\nKPX Oslash Aacute -50\\r\\nKPX Oslash Abreve -50\\r\\nKPX Oslash Acircumflex -50\\r\\nKPX Oslash Adieresis -50\\r\\nKPX Oslash Agrave -50\\r\\nKPX Oslash Amacron -50\\r\\nKPX Oslash Aogonek -50\\r\\nKPX Oslash Aring -50\\r\\nKPX Oslash Atilde -50\\r\\nKPX Oslash T -40\\r\\nKPX Oslash Tcaron -40\\r\\nKPX Oslash Tcommaaccent -40\\r\\nKPX Oslash V -50\\r\\nKPX Oslash W -50\\r\\nKPX Oslash X -50\\r\\nKPX Oslash Y -70\\r\\nKPX Oslash Yacute -70\\r\\nKPX Oslash Ydieresis -70\\r\\nKPX Oslash comma -40\\r\\nKPX Oslash period -40\\r\\nKPX Otilde A -50\\r\\nKPX Otilde Aacute -50\\r\\nKPX Otilde Abreve -50\\r\\nKPX Otilde Acircumflex -50\\r\\nKPX Otilde Adieresis -50\\r\\nKPX Otilde Agrave -50\\r\\nKPX Otilde Amacron -50\\r\\nKPX Otilde Aogonek -50\\r\\nKPX Otilde Aring -50\\r\\nKPX Otilde Atilde -50\\r\\nKPX Otilde T -40\\r\\nKPX Otilde Tcaron -40\\r\\nKPX Otilde Tcommaaccent -40\\r\\nKPX Otilde V -50\\r\\nKPX Otilde W -50\\r\\nKPX Otilde X -50\\r\\nKPX Otilde Y -70\\r\\nKPX Otilde Yacute -70\\r\\nKPX Otilde Ydieresis -70\\r\\nKPX Otilde comma -40\\r\\nKPX Otilde period -40\\r\\nKPX P A -100\\r\\nKPX P Aacute -100\\r\\nKPX P Abreve -100\\r\\nKPX P Acircumflex -100\\r\\nKPX P Adieresis -100\\r\\nKPX P Agrave -100\\r\\nKPX P Amacron -100\\r\\nKPX P Aogonek -100\\r\\nKPX P Aring -100\\r\\nKPX P Atilde -100\\r\\nKPX P a -30\\r\\nKPX P aacute -30\\r\\nKPX P abreve -30\\r\\nKPX P acircumflex -30\\r\\nKPX P adieresis -30\\r\\nKPX P agrave -30\\r\\nKPX P amacron -30\\r\\nKPX P aogonek -30\\r\\nKPX P aring -30\\r\\nKPX P atilde -30\\r\\nKPX P comma -120\\r\\nKPX P e -30\\r\\nKPX P eacute -30\\r\\nKPX P ecaron -30\\r\\nKPX P ecircumflex -30\\r\\nKPX P edieresis -30\\r\\nKPX P edotaccent -30\\r\\nKPX P egrave -30\\r\\nKPX P emacron -30\\r\\nKPX P eogonek -30\\r\\nKPX P o -40\\r\\nKPX P oacute -40\\r\\nKPX P ocircumflex -40\\r\\nKPX P odieresis -40\\r\\nKPX P ograve -40\\r\\nKPX P ohungarumlaut -40\\r\\nKPX P omacron -40\\r\\nKPX P oslash -40\\r\\nKPX P otilde -40\\r\\nKPX P period -120\\r\\nKPX Q U -10\\r\\nKPX Q Uacute -10\\r\\nKPX Q Ucircumflex -10\\r\\nKPX Q Udieresis -10\\r\\nKPX Q Ugrave -10\\r\\nKPX Q Uhungarumlaut -10\\r\\nKPX Q Umacron -10\\r\\nKPX Q Uogonek -10\\r\\nKPX Q Uring -10\\r\\nKPX Q comma 20\\r\\nKPX Q period 20\\r\\nKPX R O -20\\r\\nKPX R Oacute -20\\r\\nKPX R Ocircumflex -20\\r\\nKPX R Odieresis -20\\r\\nKPX R Ograve -20\\r\\nKPX R Ohungarumlaut -20\\r\\nKPX R Omacron -20\\r\\nKPX R Oslash -20\\r\\nKPX R Otilde -20\\r\\nKPX R T -20\\r\\nKPX R Tcaron -20\\r\\nKPX R Tcommaaccent -20\\r\\nKPX R U -20\\r\\nKPX R Uacute -20\\r\\nKPX R Ucircumflex -20\\r\\nKPX R Udieresis -20\\r\\nKPX R Ugrave -20\\r\\nKPX R Uhungarumlaut -20\\r\\nKPX R Umacron -20\\r\\nKPX R Uogonek -20\\r\\nKPX R Uring -20\\r\\nKPX R V -50\\r\\nKPX R W -40\\r\\nKPX R Y -50\\r\\nKPX R Yacute -50\\r\\nKPX R Ydieresis -50\\r\\nKPX Racute O -20\\r\\nKPX Racute Oacute -20\\r\\nKPX Racute Ocircumflex -20\\r\\nKPX Racute Odieresis -20\\r\\nKPX Racute Ograve -20\\r\\nKPX Racute Ohungarumlaut -20\\r\\nKPX Racute Omacron -20\\r\\nKPX Racute Oslash -20\\r\\nKPX Racute Otilde -20\\r\\nKPX Racute T -20\\r\\nKPX Racute Tcaron -20\\r\\nKPX Racute Tcommaaccent -20\\r\\nKPX Racute U -20\\r\\nKPX Racute Uacute -20\\r\\nKPX Racute Ucircumflex -20\\r\\nKPX Racute Udieresis -20\\r\\nKPX Racute Ugrave -20\\r\\nKPX Racute Uhungarumlaut -20\\r\\nKPX Racute Umacron -20\\r\\nKPX Racute Uogonek -20\\r\\nKPX Racute Uring -20\\r\\nKPX Racute V -50\\r\\nKPX Racute W -40\\r\\nKPX Racute Y -50\\r\\nKPX Racute Yacute -50\\r\\nKPX Racute Ydieresis -50\\r\\nKPX Rcaron O -20\\r\\nKPX Rcaron Oacute -20\\r\\nKPX Rcaron Ocircumflex -20\\r\\nKPX Rcaron Odieresis -20\\r\\nKPX Rcaron Ograve -20\\r\\nKPX Rcaron Ohungarumlaut -20\\r\\nKPX Rcaron Omacron -20\\r\\nKPX Rcaron Oslash -20\\r\\nKPX Rcaron Otilde -20\\r\\nKPX Rcaron T -20\\r\\nKPX Rcaron Tcaron -20\\r\\nKPX Rcaron Tcommaaccent -20\\r\\nKPX Rcaron U -20\\r\\nKPX Rcaron Uacute -20\\r\\nKPX Rcaron Ucircumflex -20\\r\\nKPX Rcaron Udieresis -20\\r\\nKPX Rcaron Ugrave -20\\r\\nKPX Rcaron Uhungarumlaut -20\\r\\nKPX Rcaron Umacron -20\\r\\nKPX Rcaron Uogonek -20\\r\\nKPX Rcaron Uring -20\\r\\nKPX Rcaron V -50\\r\\nKPX Rcaron W -40\\r\\nKPX Rcaron Y -50\\r\\nKPX Rcaron Yacute -50\\r\\nKPX Rcaron Ydieresis -50\\r\\nKPX Rcommaaccent O -20\\r\\nKPX Rcommaaccent Oacute -20\\r\\nKPX Rcommaaccent Ocircumflex -20\\r\\nKPX Rcommaaccent Odieresis -20\\r\\nKPX Rcommaaccent Ograve -20\\r\\nKPX Rcommaaccent Ohungarumlaut -20\\r\\nKPX Rcommaaccent Omacron -20\\r\\nKPX Rcommaaccent Oslash -20\\r\\nKPX Rcommaaccent Otilde -20\\r\\nKPX Rcommaaccent T -20\\r\\nKPX Rcommaaccent Tcaron -20\\r\\nKPX Rcommaaccent Tcommaaccent -20\\r\\nKPX Rcommaaccent U -20\\r\\nKPX Rcommaaccent Uacute -20\\r\\nKPX Rcommaaccent Ucircumflex -20\\r\\nKPX Rcommaaccent Udieresis -20\\r\\nKPX Rcommaaccent Ugrave -20\\r\\nKPX Rcommaaccent Uhungarumlaut -20\\r\\nKPX Rcommaaccent Umacron -20\\r\\nKPX Rcommaaccent Uogonek -20\\r\\nKPX Rcommaaccent Uring -20\\r\\nKPX Rcommaaccent V -50\\r\\nKPX Rcommaaccent W -40\\r\\nKPX Rcommaaccent Y -50\\r\\nKPX Rcommaaccent Yacute -50\\r\\nKPX Rcommaaccent Ydieresis -50\\r\\nKPX T A -90\\r\\nKPX T Aacute -90\\r\\nKPX T Abreve -90\\r\\nKPX T Acircumflex -90\\r\\nKPX T Adieresis -90\\r\\nKPX T Agrave -90\\r\\nKPX T Amacron -90\\r\\nKPX T Aogonek -90\\r\\nKPX T Aring -90\\r\\nKPX T Atilde -90\\r\\nKPX T O -40\\r\\nKPX T Oacute -40\\r\\nKPX T Ocircumflex -40\\r\\nKPX T Odieresis -40\\r\\nKPX T Ograve -40\\r\\nKPX T Ohungarumlaut -40\\r\\nKPX T Omacron -40\\r\\nKPX T Oslash -40\\r\\nKPX T Otilde -40\\r\\nKPX T a -80\\r\\nKPX T aacute -80\\r\\nKPX T abreve -80\\r\\nKPX T acircumflex -80\\r\\nKPX T adieresis -80\\r\\nKPX T agrave -80\\r\\nKPX T amacron -80\\r\\nKPX T aogonek -80\\r\\nKPX T aring -80\\r\\nKPX T atilde -80\\r\\nKPX T colon -40\\r\\nKPX T comma -80\\r\\nKPX T e -60\\r\\nKPX T eacute -60\\r\\nKPX T ecaron -60\\r\\nKPX T ecircumflex -60\\r\\nKPX T edieresis -60\\r\\nKPX T edotaccent -60\\r\\nKPX T egrave -60\\r\\nKPX T emacron -60\\r\\nKPX T eogonek -60\\r\\nKPX T hyphen -120\\r\\nKPX T o -80\\r\\nKPX T oacute -80\\r\\nKPX T ocircumflex -80\\r\\nKPX T odieresis -80\\r\\nKPX T ograve -80\\r\\nKPX T ohungarumlaut -80\\r\\nKPX T omacron -80\\r\\nKPX T oslash -80\\r\\nKPX T otilde -80\\r\\nKPX T period -80\\r\\nKPX T r -80\\r\\nKPX T racute -80\\r\\nKPX T rcommaaccent -80\\r\\nKPX T semicolon -40\\r\\nKPX T u -90\\r\\nKPX T uacute -90\\r\\nKPX T ucircumflex -90\\r\\nKPX T udieresis -90\\r\\nKPX T ugrave -90\\r\\nKPX T uhungarumlaut -90\\r\\nKPX T umacron -90\\r\\nKPX T uogonek -90\\r\\nKPX T uring -90\\r\\nKPX T w -60\\r\\nKPX T y -60\\r\\nKPX T yacute -60\\r\\nKPX T ydieresis -60\\r\\nKPX Tcaron A -90\\r\\nKPX Tcaron Aacute -90\\r\\nKPX Tcaron Abreve -90\\r\\nKPX Tcaron Acircumflex -90\\r\\nKPX Tcaron Adieresis -90\\r\\nKPX Tcaron Agrave -90\\r\\nKPX Tcaron Amacron -90\\r\\nKPX Tcaron Aogonek -90\\r\\nKPX Tcaron Aring -90\\r\\nKPX Tcaron Atilde -90\\r\\nKPX Tcaron O -40\\r\\nKPX Tcaron Oacute -40\\r\\nKPX Tcaron Ocircumflex -40\\r\\nKPX Tcaron Odieresis -40\\r\\nKPX Tcaron Ograve -40\\r\\nKPX Tcaron Ohungarumlaut -40\\r\\nKPX Tcaron Omacron -40\\r\\nKPX Tcaron Oslash -40\\r\\nKPX Tcaron Otilde -40\\r\\nKPX Tcaron a -80\\r\\nKPX Tcaron aacute -80\\r\\nKPX Tcaron abreve -80\\r\\nKPX Tcaron acircumflex -80\\r\\nKPX Tcaron adieresis -80\\r\\nKPX Tcaron agrave -80\\r\\nKPX Tcaron amacron -80\\r\\nKPX Tcaron aogonek -80\\r\\nKPX Tcaron aring -80\\r\\nKPX Tcaron atilde -80\\r\\nKPX Tcaron colon -40\\r\\nKPX Tcaron comma -80\\r\\nKPX Tcaron e -60\\r\\nKPX Tcaron eacute -60\\r\\nKPX Tcaron ecaron -60\\r\\nKPX Tcaron ecircumflex -60\\r\\nKPX Tcaron edieresis -60\\r\\nKPX Tcaron edotaccent -60\\r\\nKPX Tcaron egrave -60\\r\\nKPX Tcaron emacron -60\\r\\nKPX Tcaron eogonek -60\\r\\nKPX Tcaron hyphen -120\\r\\nKPX Tcaron o -80\\r\\nKPX Tcaron oacute -80\\r\\nKPX Tcaron ocircumflex -80\\r\\nKPX Tcaron odieresis -80\\r\\nKPX Tcaron ograve -80\\r\\nKPX Tcaron ohungarumlaut -80\\r\\nKPX Tcaron omacron -80\\r\\nKPX Tcaron oslash -80\\r\\nKPX Tcaron otilde -80\\r\\nKPX Tcaron period -80\\r\\nKPX Tcaron r -80\\r\\nKPX Tcaron racute -80\\r\\nKPX Tcaron rcommaaccent -80\\r\\nKPX Tcaron semicolon -40\\r\\nKPX Tcaron u -90\\r\\nKPX Tcaron uacute -90\\r\\nKPX Tcaron ucircumflex -90\\r\\nKPX Tcaron udieresis -90\\r\\nKPX Tcaron ugrave -90\\r\\nKPX Tcaron uhungarumlaut -90\\r\\nKPX Tcaron umacron -90\\r\\nKPX Tcaron uogonek -90\\r\\nKPX Tcaron uring -90\\r\\nKPX Tcaron w -60\\r\\nKPX Tcaron y -60\\r\\nKPX Tcaron yacute -60\\r\\nKPX Tcaron ydieresis -60\\r\\nKPX Tcommaaccent A -90\\r\\nKPX Tcommaaccent Aacute -90\\r\\nKPX Tcommaaccent Abreve -90\\r\\nKPX Tcommaaccent Acircumflex -90\\r\\nKPX Tcommaaccent Adieresis -90\\r\\nKPX Tcommaaccent Agrave -90\\r\\nKPX Tcommaaccent Amacron -90\\r\\nKPX Tcommaaccent Aogonek -90\\r\\nKPX Tcommaaccent Aring -90\\r\\nKPX Tcommaaccent Atilde -90\\r\\nKPX Tcommaaccent O -40\\r\\nKPX Tcommaaccent Oacute -40\\r\\nKPX Tcommaaccent Ocircumflex -40\\r\\nKPX Tcommaaccent Odieresis -40\\r\\nKPX Tcommaaccent Ograve -40\\r\\nKPX Tcommaaccent Ohungarumlaut -40\\r\\nKPX Tcommaaccent Omacron -40\\r\\nKPX Tcommaaccent Oslash -40\\r\\nKPX Tcommaaccent Otilde -40\\r\\nKPX Tcommaaccent a -80\\r\\nKPX Tcommaaccent aacute -80\\r\\nKPX Tcommaaccent abreve -80\\r\\nKPX Tcommaaccent acircumflex -80\\r\\nKPX Tcommaaccent adieresis -80\\r\\nKPX Tcommaaccent agrave -80\\r\\nKPX Tcommaaccent amacron -80\\r\\nKPX Tcommaaccent aogonek -80\\r\\nKPX Tcommaaccent aring -80\\r\\nKPX Tcommaaccent atilde -80\\r\\nKPX Tcommaaccent colon -40\\r\\nKPX Tcommaaccent comma -80\\r\\nKPX Tcommaaccent e -60\\r\\nKPX Tcommaaccent eacute -60\\r\\nKPX Tcommaaccent ecaron -60\\r\\nKPX Tcommaaccent ecircumflex -60\\r\\nKPX Tcommaaccent edieresis -60\\r\\nKPX Tcommaaccent edotaccent -60\\r\\nKPX Tcommaaccent egrave -60\\r\\nKPX Tcommaaccent emacron -60\\r\\nKPX Tcommaaccent eogonek -60\\r\\nKPX Tcommaaccent hyphen -120\\r\\nKPX Tcommaaccent o -80\\r\\nKPX Tcommaaccent oacute -80\\r\\nKPX Tcommaaccent ocircumflex -80\\r\\nKPX Tcommaaccent odieresis -80\\r\\nKPX Tcommaaccent ograve -80\\r\\nKPX Tcommaaccent ohungarumlaut -80\\r\\nKPX Tcommaaccent omacron -80\\r\\nKPX Tcommaaccent oslash -80\\r\\nKPX Tcommaaccent otilde -80\\r\\nKPX Tcommaaccent period -80\\r\\nKPX Tcommaaccent r -80\\r\\nKPX Tcommaaccent racute -80\\r\\nKPX Tcommaaccent rcommaaccent -80\\r\\nKPX Tcommaaccent semicolon -40\\r\\nKPX Tcommaaccent u -90\\r\\nKPX Tcommaaccent uacute -90\\r\\nKPX Tcommaaccent ucircumflex -90\\r\\nKPX Tcommaaccent udieresis -90\\r\\nKPX Tcommaaccent ugrave -90\\r\\nKPX Tcommaaccent uhungarumlaut -90\\r\\nKPX Tcommaaccent umacron -90\\r\\nKPX Tcommaaccent uogonek -90\\r\\nKPX Tcommaaccent uring -90\\r\\nKPX Tcommaaccent w -60\\r\\nKPX Tcommaaccent y -60\\r\\nKPX Tcommaaccent yacute -60\\r\\nKPX Tcommaaccent ydieresis -60\\r\\nKPX U A -50\\r\\nKPX U Aacute -50\\r\\nKPX U Abreve -50\\r\\nKPX U Acircumflex -50\\r\\nKPX U Adieresis -50\\r\\nKPX U Agrave -50\\r\\nKPX U Amacron -50\\r\\nKPX U Aogonek -50\\r\\nKPX U Aring -50\\r\\nKPX U Atilde -50\\r\\nKPX U comma -30\\r\\nKPX U period -30\\r\\nKPX Uacute A -50\\r\\nKPX Uacute Aacute -50\\r\\nKPX Uacute Abreve -50\\r\\nKPX Uacute Acircumflex -50\\r\\nKPX Uacute Adieresis -50\\r\\nKPX Uacute Agrave -50\\r\\nKPX Uacute Amacron -50\\r\\nKPX Uacute Aogonek -50\\r\\nKPX Uacute Aring -50\\r\\nKPX Uacute Atilde -50\\r\\nKPX Uacute comma -30\\r\\nKPX Uacute period -30\\r\\nKPX Ucircumflex A -50\\r\\nKPX Ucircumflex Aacute -50\\r\\nKPX Ucircumflex Abreve -50\\r\\nKPX Ucircumflex Acircumflex -50\\r\\nKPX Ucircumflex Adieresis -50\\r\\nKPX Ucircumflex Agrave -50\\r\\nKPX Ucircumflex Amacron -50\\r\\nKPX Ucircumflex Aogonek -50\\r\\nKPX Ucircumflex Aring -50\\r\\nKPX Ucircumflex Atilde -50\\r\\nKPX Ucircumflex comma -30\\r\\nKPX Ucircumflex period -30\\r\\nKPX Udieresis A -50\\r\\nKPX Udieresis Aacute -50\\r\\nKPX Udieresis Abreve -50\\r\\nKPX Udieresis Acircumflex -50\\r\\nKPX Udieresis Adieresis -50\\r\\nKPX Udieresis Agrave -50\\r\\nKPX Udieresis Amacron -50\\r\\nKPX Udieresis Aogonek -50\\r\\nKPX Udieresis Aring -50\\r\\nKPX Udieresis Atilde -50\\r\\nKPX Udieresis comma -30\\r\\nKPX Udieresis period -30\\r\\nKPX Ugrave A -50\\r\\nKPX Ugrave Aacute -50\\r\\nKPX Ugrave Abreve -50\\r\\nKPX Ugrave Acircumflex -50\\r\\nKPX Ugrave Adieresis -50\\r\\nKPX Ugrave Agrave -50\\r\\nKPX Ugrave Amacron -50\\r\\nKPX Ugrave Aogonek -50\\r\\nKPX Ugrave Aring -50\\r\\nKPX Ugrave Atilde -50\\r\\nKPX Ugrave comma -30\\r\\nKPX Ugrave period -30\\r\\nKPX Uhungarumlaut A -50\\r\\nKPX Uhungarumlaut Aacute -50\\r\\nKPX Uhungarumlaut Abreve -50\\r\\nKPX Uhungarumlaut Acircumflex -50\\r\\nKPX Uhungarumlaut Adieresis -50\\r\\nKPX Uhungarumlaut Agrave -50\\r\\nKPX Uhungarumlaut Amacron -50\\r\\nKPX Uhungarumlaut Aogonek -50\\r\\nKPX Uhungarumlaut Aring -50\\r\\nKPX Uhungarumlaut Atilde -50\\r\\nKPX Uhungarumlaut comma -30\\r\\nKPX Uhungarumlaut period -30\\r\\nKPX Umacron A -50\\r\\nKPX Umacron Aacute -50\\r\\nKPX Umacron Abreve -50\\r\\nKPX Umacron Acircumflex -50\\r\\nKPX Umacron Adieresis -50\\r\\nKPX Umacron Agrave -50\\r\\nKPX Umacron Amacron -50\\r\\nKPX Umacron Aogonek -50\\r\\nKPX Umacron Aring -50\\r\\nKPX Umacron Atilde -50\\r\\nKPX Umacron comma -30\\r\\nKPX Umacron period -30\\r\\nKPX Uogonek A -50\\r\\nKPX Uogonek Aacute -50\\r\\nKPX Uogonek Abreve -50\\r\\nKPX Uogonek Acircumflex -50\\r\\nKPX Uogonek Adieresis -50\\r\\nKPX Uogonek Agrave -50\\r\\nKPX Uogonek Amacron -50\\r\\nKPX Uogonek Aogonek -50\\r\\nKPX Uogonek Aring -50\\r\\nKPX Uogonek Atilde -50\\r\\nKPX Uogonek comma -30\\r\\nKPX Uogonek period -30\\r\\nKPX Uring A -50\\r\\nKPX Uring Aacute -50\\r\\nKPX Uring Abreve -50\\r\\nKPX Uring Acircumflex -50\\r\\nKPX Uring Adieresis -50\\r\\nKPX Uring Agrave -50\\r\\nKPX Uring Amacron -50\\r\\nKPX Uring Aogonek -50\\r\\nKPX Uring Aring -50\\r\\nKPX Uring Atilde -50\\r\\nKPX Uring comma -30\\r\\nKPX Uring period -30\\r\\nKPX V A -80\\r\\nKPX V Aacute -80\\r\\nKPX V Abreve -80\\r\\nKPX V Acircumflex -80\\r\\nKPX V Adieresis -80\\r\\nKPX V Agrave -80\\r\\nKPX V Amacron -80\\r\\nKPX V Aogonek -80\\r\\nKPX V Aring -80\\r\\nKPX V Atilde -80\\r\\nKPX V G -50\\r\\nKPX V Gbreve -50\\r\\nKPX V Gcommaaccent -50\\r\\nKPX V O -50\\r\\nKPX V Oacute -50\\r\\nKPX V Ocircumflex -50\\r\\nKPX V Odieresis -50\\r\\nKPX V Ograve -50\\r\\nKPX V Ohungarumlaut -50\\r\\nKPX V Omacron -50\\r\\nKPX V Oslash -50\\r\\nKPX V Otilde -50\\r\\nKPX V a -60\\r\\nKPX V aacute -60\\r\\nKPX V abreve -60\\r\\nKPX V acircumflex -60\\r\\nKPX V adieresis -60\\r\\nKPX V agrave -60\\r\\nKPX V amacron -60\\r\\nKPX V aogonek -60\\r\\nKPX V aring -60\\r\\nKPX V atilde -60\\r\\nKPX V colon -40\\r\\nKPX V comma -120\\r\\nKPX V e -50\\r\\nKPX V eacute -50\\r\\nKPX V ecaron -50\\r\\nKPX V ecircumflex -50\\r\\nKPX V edieresis -50\\r\\nKPX V edotaccent -50\\r\\nKPX V egrave -50\\r\\nKPX V emacron -50\\r\\nKPX V eogonek -50\\r\\nKPX V hyphen -80\\r\\nKPX V o -90\\r\\nKPX V oacute -90\\r\\nKPX V ocircumflex -90\\r\\nKPX V odieresis -90\\r\\nKPX V ograve -90\\r\\nKPX V ohungarumlaut -90\\r\\nKPX V omacron -90\\r\\nKPX V oslash -90\\r\\nKPX V otilde -90\\r\\nKPX V period -120\\r\\nKPX V semicolon -40\\r\\nKPX V u -60\\r\\nKPX V uacute -60\\r\\nKPX V ucircumflex -60\\r\\nKPX V udieresis -60\\r\\nKPX V ugrave -60\\r\\nKPX V uhungarumlaut -60\\r\\nKPX V umacron -60\\r\\nKPX V uogonek -60\\r\\nKPX V uring -60\\r\\nKPX W A -60\\r\\nKPX W Aacute -60\\r\\nKPX W Abreve -60\\r\\nKPX W Acircumflex -60\\r\\nKPX W Adieresis -60\\r\\nKPX W Agrave -60\\r\\nKPX W Amacron -60\\r\\nKPX W Aogonek -60\\r\\nKPX W Aring -60\\r\\nKPX W Atilde -60\\r\\nKPX W O -20\\r\\nKPX W Oacute -20\\r\\nKPX W Ocircumflex -20\\r\\nKPX W Odieresis -20\\r\\nKPX W Ograve -20\\r\\nKPX W Ohungarumlaut -20\\r\\nKPX W Omacron -20\\r\\nKPX W Oslash -20\\r\\nKPX W Otilde -20\\r\\nKPX W a -40\\r\\nKPX W aacute -40\\r\\nKPX W abreve -40\\r\\nKPX W acircumflex -40\\r\\nKPX W adieresis -40\\r\\nKPX W agrave -40\\r\\nKPX W amacron -40\\r\\nKPX W aogonek -40\\r\\nKPX W aring -40\\r\\nKPX W atilde -40\\r\\nKPX W colon -10\\r\\nKPX W comma -80\\r\\nKPX W e -35\\r\\nKPX W eacute -35\\r\\nKPX W ecaron -35\\r\\nKPX W ecircumflex -35\\r\\nKPX W edieresis -35\\r\\nKPX W edotaccent -35\\r\\nKPX W egrave -35\\r\\nKPX W emacron -35\\r\\nKPX W eogonek -35\\r\\nKPX W hyphen -40\\r\\nKPX W o -60\\r\\nKPX W oacute -60\\r\\nKPX W ocircumflex -60\\r\\nKPX W odieresis -60\\r\\nKPX W ograve -60\\r\\nKPX W ohungarumlaut -60\\r\\nKPX W omacron -60\\r\\nKPX W oslash -60\\r\\nKPX W otilde -60\\r\\nKPX W period -80\\r\\nKPX W semicolon -10\\r\\nKPX W u -45\\r\\nKPX W uacute -45\\r\\nKPX W ucircumflex -45\\r\\nKPX W udieresis -45\\r\\nKPX W ugrave -45\\r\\nKPX W uhungarumlaut -45\\r\\nKPX W umacron -45\\r\\nKPX W uogonek -45\\r\\nKPX W uring -45\\r\\nKPX W y -20\\r\\nKPX W yacute -20\\r\\nKPX W ydieresis -20\\r\\nKPX Y A -110\\r\\nKPX Y Aacute -110\\r\\nKPX Y Abreve -110\\r\\nKPX Y Acircumflex -110\\r\\nKPX Y Adieresis -110\\r\\nKPX Y Agrave -110\\r\\nKPX Y Amacron -110\\r\\nKPX Y Aogonek -110\\r\\nKPX Y Aring -110\\r\\nKPX Y Atilde -110\\r\\nKPX Y O -70\\r\\nKPX Y Oacute -70\\r\\nKPX Y Ocircumflex -70\\r\\nKPX Y Odieresis -70\\r\\nKPX Y Ograve -70\\r\\nKPX Y Ohungarumlaut -70\\r\\nKPX Y Omacron -70\\r\\nKPX Y Oslash -70\\r\\nKPX Y Otilde -70\\r\\nKPX Y a -90\\r\\nKPX Y aacute -90\\r\\nKPX Y abreve -90\\r\\nKPX Y acircumflex -90\\r\\nKPX Y adieresis -90\\r\\nKPX Y agrave -90\\r\\nKPX Y amacron -90\\r\\nKPX Y aogonek -90\\r\\nKPX Y aring -90\\r\\nKPX Y atilde -90\\r\\nKPX Y colon -50\\r\\nKPX Y comma -100\\r\\nKPX Y e -80\\r\\nKPX Y eacute -80\\r\\nKPX Y ecaron -80\\r\\nKPX Y ecircumflex -80\\r\\nKPX Y edieresis -80\\r\\nKPX Y edotaccent -80\\r\\nKPX Y egrave -80\\r\\nKPX Y emacron -80\\r\\nKPX Y eogonek -80\\r\\nKPX Y o -100\\r\\nKPX Y oacute -100\\r\\nKPX Y ocircumflex -100\\r\\nKPX Y odieresis -100\\r\\nKPX Y ograve -100\\r\\nKPX Y ohungarumlaut -100\\r\\nKPX Y omacron -100\\r\\nKPX Y oslash -100\\r\\nKPX Y otilde -100\\r\\nKPX Y period -100\\r\\nKPX Y semicolon -50\\r\\nKPX Y u -100\\r\\nKPX Y uacute -100\\r\\nKPX Y ucircumflex -100\\r\\nKPX Y udieresis -100\\r\\nKPX Y ugrave -100\\r\\nKPX Y uhungarumlaut -100\\r\\nKPX Y umacron -100\\r\\nKPX Y uogonek -100\\r\\nKPX Y uring -100\\r\\nKPX Yacute A -110\\r\\nKPX Yacute Aacute -110\\r\\nKPX Yacute Abreve -110\\r\\nKPX Yacute Acircumflex -110\\r\\nKPX Yacute Adieresis -110\\r\\nKPX Yacute Agrave -110\\r\\nKPX Yacute Amacron -110\\r\\nKPX Yacute Aogonek -110\\r\\nKPX Yacute Aring -110\\r\\nKPX Yacute Atilde -110\\r\\nKPX Yacute O -70\\r\\nKPX Yacute Oacute -70\\r\\nKPX Yacute Ocircumflex -70\\r\\nKPX Yacute Odieresis -70\\r\\nKPX Yacute Ograve -70\\r\\nKPX Yacute Ohungarumlaut -70\\r\\nKPX Yacute Omacron -70\\r\\nKPX Yacute Oslash -70\\r\\nKPX Yacute Otilde -70\\r\\nKPX Yacute a -90\\r\\nKPX Yacute aacute -90\\r\\nKPX Yacute abreve -90\\r\\nKPX Yacute acircumflex -90\\r\\nKPX Yacute adieresis -90\\r\\nKPX Yacute agrave -90\\r\\nKPX Yacute amacron -90\\r\\nKPX Yacute aogonek -90\\r\\nKPX Yacute aring -90\\r\\nKPX Yacute atilde -90\\r\\nKPX Yacute colon -50\\r\\nKPX Yacute comma -100\\r\\nKPX Yacute e -80\\r\\nKPX Yacute eacute -80\\r\\nKPX Yacute ecaron -80\\r\\nKPX Yacute ecircumflex -80\\r\\nKPX Yacute edieresis -80\\r\\nKPX Yacute edotaccent -80\\r\\nKPX Yacute egrave -80\\r\\nKPX Yacute emacron -80\\r\\nKPX Yacute eogonek -80\\r\\nKPX Yacute o -100\\r\\nKPX Yacute oacute -100\\r\\nKPX Yacute ocircumflex -100\\r\\nKPX Yacute odieresis -100\\r\\nKPX Yacute ograve -100\\r\\nKPX Yacute ohungarumlaut -100\\r\\nKPX Yacute omacron -100\\r\\nKPX Yacute oslash -100\\r\\nKPX Yacute otilde -100\\r\\nKPX Yacute period -100\\r\\nKPX Yacute semicolon -50\\r\\nKPX Yacute u -100\\r\\nKPX Yacute uacute -100\\r\\nKPX Yacute ucircumflex -100\\r\\nKPX Yacute udieresis -100\\r\\nKPX Yacute ugrave -100\\r\\nKPX Yacute uhungarumlaut -100\\r\\nKPX Yacute umacron -100\\r\\nKPX Yacute uogonek -100\\r\\nKPX Yacute uring -100\\r\\nKPX Ydieresis A -110\\r\\nKPX Ydieresis Aacute -110\\r\\nKPX Ydieresis Abreve -110\\r\\nKPX Ydieresis Acircumflex -110\\r\\nKPX Ydieresis Adieresis -110\\r\\nKPX Ydieresis Agrave -110\\r\\nKPX Ydieresis Amacron -110\\r\\nKPX Ydieresis Aogonek -110\\r\\nKPX Ydieresis Aring -110\\r\\nKPX Ydieresis Atilde -110\\r\\nKPX Ydieresis O -70\\r\\nKPX Ydieresis Oacute -70\\r\\nKPX Ydieresis Ocircumflex -70\\r\\nKPX Ydieresis Odieresis -70\\r\\nKPX Ydieresis Ograve -70\\r\\nKPX Ydieresis Ohungarumlaut -70\\r\\nKPX Ydieresis Omacron -70\\r\\nKPX Ydieresis Oslash -70\\r\\nKPX Ydieresis Otilde -70\\r\\nKPX Ydieresis a -90\\r\\nKPX Ydieresis aacute -90\\r\\nKPX Ydieresis abreve -90\\r\\nKPX Ydieresis acircumflex -90\\r\\nKPX Ydieresis adieresis -90\\r\\nKPX Ydieresis agrave -90\\r\\nKPX Ydieresis amacron -90\\r\\nKPX Ydieresis aogonek -90\\r\\nKPX Ydieresis aring -90\\r\\nKPX Ydieresis atilde -90\\r\\nKPX Ydieresis colon -50\\r\\nKPX Ydieresis comma -100\\r\\nKPX Ydieresis e -80\\r\\nKPX Ydieresis eacute -80\\r\\nKPX Ydieresis ecaron -80\\r\\nKPX Ydieresis ecircumflex -80\\r\\nKPX Ydieresis edieresis -80\\r\\nKPX Ydieresis edotaccent -80\\r\\nKPX Ydieresis egrave -80\\r\\nKPX Ydieresis emacron -80\\r\\nKPX Ydieresis eogonek -80\\r\\nKPX Ydieresis o -100\\r\\nKPX Ydieresis oacute -100\\r\\nKPX Ydieresis ocircumflex -100\\r\\nKPX Ydieresis odieresis -100\\r\\nKPX Ydieresis ograve -100\\r\\nKPX Ydieresis ohungarumlaut -100\\r\\nKPX Ydieresis omacron -100\\r\\nKPX Ydieresis oslash -100\\r\\nKPX Ydieresis otilde -100\\r\\nKPX Ydieresis period -100\\r\\nKPX Ydieresis semicolon -50\\r\\nKPX Ydieresis u -100\\r\\nKPX Ydieresis uacute -100\\r\\nKPX Ydieresis ucircumflex -100\\r\\nKPX Ydieresis udieresis -100\\r\\nKPX Ydieresis ugrave -100\\r\\nKPX Ydieresis uhungarumlaut -100\\r\\nKPX Ydieresis umacron -100\\r\\nKPX Ydieresis uogonek -100\\r\\nKPX Ydieresis uring -100\\r\\nKPX a g -10\\r\\nKPX a gbreve -10\\r\\nKPX a gcommaaccent -10\\r\\nKPX a v -15\\r\\nKPX a w -15\\r\\nKPX a y -20\\r\\nKPX a yacute -20\\r\\nKPX a ydieresis -20\\r\\nKPX aacute g -10\\r\\nKPX aacute gbreve -10\\r\\nKPX aacute gcommaaccent -10\\r\\nKPX aacute v -15\\r\\nKPX aacute w -15\\r\\nKPX aacute y -20\\r\\nKPX aacute yacute -20\\r\\nKPX aacute ydieresis -20\\r\\nKPX abreve g -10\\r\\nKPX abreve gbreve -10\\r\\nKPX abreve gcommaaccent -10\\r\\nKPX abreve v -15\\r\\nKPX abreve w -15\\r\\nKPX abreve y -20\\r\\nKPX abreve yacute -20\\r\\nKPX abreve ydieresis -20\\r\\nKPX acircumflex g -10\\r\\nKPX acircumflex gbreve -10\\r\\nKPX acircumflex gcommaaccent -10\\r\\nKPX acircumflex v -15\\r\\nKPX acircumflex w -15\\r\\nKPX acircumflex y -20\\r\\nKPX acircumflex yacute -20\\r\\nKPX acircumflex ydieresis -20\\r\\nKPX adieresis g -10\\r\\nKPX adieresis gbreve -10\\r\\nKPX adieresis gcommaaccent -10\\r\\nKPX adieresis v -15\\r\\nKPX adieresis w -15\\r\\nKPX adieresis y -20\\r\\nKPX adieresis yacute -20\\r\\nKPX adieresis ydieresis -20\\r\\nKPX agrave g -10\\r\\nKPX agrave gbreve -10\\r\\nKPX agrave gcommaaccent -10\\r\\nKPX agrave v -15\\r\\nKPX agrave w -15\\r\\nKPX agrave y -20\\r\\nKPX agrave yacute -20\\r\\nKPX agrave ydieresis -20\\r\\nKPX amacron g -10\\r\\nKPX amacron gbreve -10\\r\\nKPX amacron gcommaaccent -10\\r\\nKPX amacron v -15\\r\\nKPX amacron w -15\\r\\nKPX amacron y -20\\r\\nKPX amacron yacute -20\\r\\nKPX amacron ydieresis -20\\r\\nKPX aogonek g -10\\r\\nKPX aogonek gbreve -10\\r\\nKPX aogonek gcommaaccent -10\\r\\nKPX aogonek v -15\\r\\nKPX aogonek w -15\\r\\nKPX aogonek y -20\\r\\nKPX aogonek yacute -20\\r\\nKPX aogonek ydieresis -20\\r\\nKPX aring g -10\\r\\nKPX aring gbreve -10\\r\\nKPX aring gcommaaccent -10\\r\\nKPX aring v -15\\r\\nKPX aring w -15\\r\\nKPX aring y -20\\r\\nKPX aring yacute -20\\r\\nKPX aring ydieresis -20\\r\\nKPX atilde g -10\\r\\nKPX atilde gbreve -10\\r\\nKPX atilde gcommaaccent -10\\r\\nKPX atilde v -15\\r\\nKPX atilde w -15\\r\\nKPX atilde y -20\\r\\nKPX atilde yacute -20\\r\\nKPX atilde ydieresis -20\\r\\nKPX b l -10\\r\\nKPX b lacute -10\\r\\nKPX b lcommaaccent -10\\r\\nKPX b lslash -10\\r\\nKPX b u -20\\r\\nKPX b uacute -20\\r\\nKPX b ucircumflex -20\\r\\nKPX b udieresis -20\\r\\nKPX b ugrave -20\\r\\nKPX b uhungarumlaut -20\\r\\nKPX b umacron -20\\r\\nKPX b uogonek -20\\r\\nKPX b uring -20\\r\\nKPX b v -20\\r\\nKPX b y -20\\r\\nKPX b yacute -20\\r\\nKPX b ydieresis -20\\r\\nKPX c h -10\\r\\nKPX c k -20\\r\\nKPX c kcommaaccent -20\\r\\nKPX c l -20\\r\\nKPX c lacute -20\\r\\nKPX c lcommaaccent -20\\r\\nKPX c lslash -20\\r\\nKPX c y -10\\r\\nKPX c yacute -10\\r\\nKPX c ydieresis -10\\r\\nKPX cacute h -10\\r\\nKPX cacute k -20\\r\\nKPX cacute kcommaaccent -20\\r\\nKPX cacute l -20\\r\\nKPX cacute lacute -20\\r\\nKPX cacute lcommaaccent -20\\r\\nKPX cacute lslash -20\\r\\nKPX cacute y -10\\r\\nKPX cacute yacute -10\\r\\nKPX cacute ydieresis -10\\r\\nKPX ccaron h -10\\r\\nKPX ccaron k -20\\r\\nKPX ccaron kcommaaccent -20\\r\\nKPX ccaron l -20\\r\\nKPX ccaron lacute -20\\r\\nKPX ccaron lcommaaccent -20\\r\\nKPX ccaron lslash -20\\r\\nKPX ccaron y -10\\r\\nKPX ccaron yacute -10\\r\\nKPX ccaron ydieresis -10\\r\\nKPX ccedilla h -10\\r\\nKPX ccedilla k -20\\r\\nKPX ccedilla kcommaaccent -20\\r\\nKPX ccedilla l -20\\r\\nKPX ccedilla lacute -20\\r\\nKPX ccedilla lcommaaccent -20\\r\\nKPX ccedilla lslash -20\\r\\nKPX ccedilla y -10\\r\\nKPX ccedilla yacute -10\\r\\nKPX ccedilla ydieresis -10\\r\\nKPX colon space -40\\r\\nKPX comma quotedblright -120\\r\\nKPX comma quoteright -120\\r\\nKPX comma space -40\\r\\nKPX d d -10\\r\\nKPX d dcroat -10\\r\\nKPX d v -15\\r\\nKPX d w -15\\r\\nKPX d y -15\\r\\nKPX d yacute -15\\r\\nKPX d ydieresis -15\\r\\nKPX dcroat d -10\\r\\nKPX dcroat dcroat -10\\r\\nKPX dcroat v -15\\r\\nKPX dcroat w -15\\r\\nKPX dcroat y -15\\r\\nKPX dcroat yacute -15\\r\\nKPX dcroat ydieresis -15\\r\\nKPX e comma 10\\r\\nKPX e period 20\\r\\nKPX e v -15\\r\\nKPX e w -15\\r\\nKPX e x -15\\r\\nKPX e y -15\\r\\nKPX e yacute -15\\r\\nKPX e ydieresis -15\\r\\nKPX eacute comma 10\\r\\nKPX eacute period 20\\r\\nKPX eacute v -15\\r\\nKPX eacute w -15\\r\\nKPX eacute x -15\\r\\nKPX eacute y -15\\r\\nKPX eacute yacute -15\\r\\nKPX eacute ydieresis -15\\r\\nKPX ecaron comma 10\\r\\nKPX ecaron period 20\\r\\nKPX ecaron v -15\\r\\nKPX ecaron w -15\\r\\nKPX ecaron x -15\\r\\nKPX ecaron y -15\\r\\nKPX ecaron yacute -15\\r\\nKPX ecaron ydieresis -15\\r\\nKPX ecircumflex comma 10\\r\\nKPX ecircumflex period 20\\r\\nKPX ecircumflex v -15\\r\\nKPX ecircumflex w -15\\r\\nKPX ecircumflex x -15\\r\\nKPX ecircumflex y -15\\r\\nKPX ecircumflex yacute -15\\r\\nKPX ecircumflex ydieresis -15\\r\\nKPX edieresis comma 10\\r\\nKPX edieresis period 20\\r\\nKPX edieresis v -15\\r\\nKPX edieresis w -15\\r\\nKPX edieresis x -15\\r\\nKPX edieresis y -15\\r\\nKPX edieresis yacute -15\\r\\nKPX edieresis ydieresis -15\\r\\nKPX edotaccent comma 10\\r\\nKPX edotaccent period 20\\r\\nKPX edotaccent v -15\\r\\nKPX edotaccent w -15\\r\\nKPX edotaccent x -15\\r\\nKPX edotaccent y -15\\r\\nKPX edotaccent yacute -15\\r\\nKPX edotaccent ydieresis -15\\r\\nKPX egrave comma 10\\r\\nKPX egrave period 20\\r\\nKPX egrave v -15\\r\\nKPX egrave w -15\\r\\nKPX egrave x -15\\r\\nKPX egrave y -15\\r\\nKPX egrave yacute -15\\r\\nKPX egrave ydieresis -15\\r\\nKPX emacron comma 10\\r\\nKPX emacron period 20\\r\\nKPX emacron v -15\\r\\nKPX emacron w -15\\r\\nKPX emacron x -15\\r\\nKPX emacron y -15\\r\\nKPX emacron yacute -15\\r\\nKPX emacron ydieresis -15\\r\\nKPX eogonek comma 10\\r\\nKPX eogonek period 20\\r\\nKPX eogonek v -15\\r\\nKPX eogonek w -15\\r\\nKPX eogonek x -15\\r\\nKPX eogonek y -15\\r\\nKPX eogonek yacute -15\\r\\nKPX eogonek ydieresis -15\\r\\nKPX f comma -10\\r\\nKPX f e -10\\r\\nKPX f eacute -10\\r\\nKPX f ecaron -10\\r\\nKPX f ecircumflex -10\\r\\nKPX f edieresis -10\\r\\nKPX f edotaccent -10\\r\\nKPX f egrave -10\\r\\nKPX f emacron -10\\r\\nKPX f eogonek -10\\r\\nKPX f o -20\\r\\nKPX f oacute -20\\r\\nKPX f ocircumflex -20\\r\\nKPX f odieresis -20\\r\\nKPX f ograve -20\\r\\nKPX f ohungarumlaut -20\\r\\nKPX f omacron -20\\r\\nKPX f oslash -20\\r\\nKPX f otilde -20\\r\\nKPX f period -10\\r\\nKPX f quotedblright 30\\r\\nKPX f quoteright 30\\r\\nKPX g e 10\\r\\nKPX g eacute 10\\r\\nKPX g ecaron 10\\r\\nKPX g ecircumflex 10\\r\\nKPX g edieresis 10\\r\\nKPX g edotaccent 10\\r\\nKPX g egrave 10\\r\\nKPX g emacron 10\\r\\nKPX g eogonek 10\\r\\nKPX g g -10\\r\\nKPX g gbreve -10\\r\\nKPX g gcommaaccent -10\\r\\nKPX gbreve e 10\\r\\nKPX gbreve eacute 10\\r\\nKPX gbreve ecaron 10\\r\\nKPX gbreve ecircumflex 10\\r\\nKPX gbreve edieresis 10\\r\\nKPX gbreve edotaccent 10\\r\\nKPX gbreve egrave 10\\r\\nKPX gbreve emacron 10\\r\\nKPX gbreve eogonek 10\\r\\nKPX gbreve g -10\\r\\nKPX gbreve gbreve -10\\r\\nKPX gbreve gcommaaccent -10\\r\\nKPX gcommaaccent e 10\\r\\nKPX gcommaaccent eacute 10\\r\\nKPX gcommaaccent ecaron 10\\r\\nKPX gcommaaccent ecircumflex 10\\r\\nKPX gcommaaccent edieresis 10\\r\\nKPX gcommaaccent edotaccent 10\\r\\nKPX gcommaaccent egrave 10\\r\\nKPX gcommaaccent emacron 10\\r\\nKPX gcommaaccent eogonek 10\\r\\nKPX gcommaaccent g -10\\r\\nKPX gcommaaccent gbreve -10\\r\\nKPX gcommaaccent gcommaaccent -10\\r\\nKPX h y -20\\r\\nKPX h yacute -20\\r\\nKPX h ydieresis -20\\r\\nKPX k o -15\\r\\nKPX k oacute -15\\r\\nKPX k ocircumflex -15\\r\\nKPX k odieresis -15\\r\\nKPX k ograve -15\\r\\nKPX k ohungarumlaut -15\\r\\nKPX k omacron -15\\r\\nKPX k oslash -15\\r\\nKPX k otilde -15\\r\\nKPX kcommaaccent o -15\\r\\nKPX kcommaaccent oacute -15\\r\\nKPX kcommaaccent ocircumflex -15\\r\\nKPX kcommaaccent odieresis -15\\r\\nKPX kcommaaccent ograve -15\\r\\nKPX kcommaaccent ohungarumlaut -15\\r\\nKPX kcommaaccent omacron -15\\r\\nKPX kcommaaccent oslash -15\\r\\nKPX kcommaaccent otilde -15\\r\\nKPX l w -15\\r\\nKPX l y -15\\r\\nKPX l yacute -15\\r\\nKPX l ydieresis -15\\r\\nKPX lacute w -15\\r\\nKPX lacute y -15\\r\\nKPX lacute yacute -15\\r\\nKPX lacute ydieresis -15\\r\\nKPX lcommaaccent w -15\\r\\nKPX lcommaaccent y -15\\r\\nKPX lcommaaccent yacute -15\\r\\nKPX lcommaaccent ydieresis -15\\r\\nKPX lslash w -15\\r\\nKPX lslash y -15\\r\\nKPX lslash yacute -15\\r\\nKPX lslash ydieresis -15\\r\\nKPX m u -20\\r\\nKPX m uacute -20\\r\\nKPX m ucircumflex -20\\r\\nKPX m udieresis -20\\r\\nKPX m ugrave -20\\r\\nKPX m uhungarumlaut -20\\r\\nKPX m umacron -20\\r\\nKPX m uogonek -20\\r\\nKPX m uring -20\\r\\nKPX m y -30\\r\\nKPX m yacute -30\\r\\nKPX m ydieresis -30\\r\\nKPX n u -10\\r\\nKPX n uacute -10\\r\\nKPX n ucircumflex -10\\r\\nKPX n udieresis -10\\r\\nKPX n ugrave -10\\r\\nKPX n uhungarumlaut -10\\r\\nKPX n umacron -10\\r\\nKPX n uogonek -10\\r\\nKPX n uring -10\\r\\nKPX n v -40\\r\\nKPX n y -20\\r\\nKPX n yacute -20\\r\\nKPX n ydieresis -20\\r\\nKPX nacute u -10\\r\\nKPX nacute uacute -10\\r\\nKPX nacute ucircumflex -10\\r\\nKPX nacute udieresis -10\\r\\nKPX nacute ugrave -10\\r\\nKPX nacute uhungarumlaut -10\\r\\nKPX nacute umacron -10\\r\\nKPX nacute uogonek -10\\r\\nKPX nacute uring -10\\r\\nKPX nacute v -40\\r\\nKPX nacute y -20\\r\\nKPX nacute yacute -20\\r\\nKPX nacute ydieresis -20\\r\\nKPX ncaron u -10\\r\\nKPX ncaron uacute -10\\r\\nKPX ncaron ucircumflex -10\\r\\nKPX ncaron udieresis -10\\r\\nKPX ncaron ugrave -10\\r\\nKPX ncaron uhungarumlaut -10\\r\\nKPX ncaron umacron -10\\r\\nKPX ncaron uogonek -10\\r\\nKPX ncaron uring -10\\r\\nKPX ncaron v -40\\r\\nKPX ncaron y -20\\r\\nKPX ncaron yacute -20\\r\\nKPX ncaron ydieresis -20\\r\\nKPX ncommaaccent u -10\\r\\nKPX ncommaaccent uacute -10\\r\\nKPX ncommaaccent ucircumflex -10\\r\\nKPX ncommaaccent udieresis -10\\r\\nKPX ncommaaccent ugrave -10\\r\\nKPX ncommaaccent uhungarumlaut -10\\r\\nKPX ncommaaccent umacron -10\\r\\nKPX ncommaaccent uogonek -10\\r\\nKPX ncommaaccent uring -10\\r\\nKPX ncommaaccent v -40\\r\\nKPX ncommaaccent y -20\\r\\nKPX ncommaaccent yacute -20\\r\\nKPX ncommaaccent ydieresis -20\\r\\nKPX ntilde u -10\\r\\nKPX ntilde uacute -10\\r\\nKPX ntilde ucircumflex -10\\r\\nKPX ntilde udieresis -10\\r\\nKPX ntilde ugrave -10\\r\\nKPX ntilde uhungarumlaut -10\\r\\nKPX ntilde umacron -10\\r\\nKPX ntilde uogonek -10\\r\\nKPX ntilde uring -10\\r\\nKPX ntilde v -40\\r\\nKPX ntilde y -20\\r\\nKPX ntilde yacute -20\\r\\nKPX ntilde ydieresis -20\\r\\nKPX o v -20\\r\\nKPX o w -15\\r\\nKPX o x -30\\r\\nKPX o y -20\\r\\nKPX o yacute -20\\r\\nKPX o ydieresis -20\\r\\nKPX oacute v -20\\r\\nKPX oacute w -15\\r\\nKPX oacute x -30\\r\\nKPX oacute y -20\\r\\nKPX oacute yacute -20\\r\\nKPX oacute ydieresis -20\\r\\nKPX ocircumflex v -20\\r\\nKPX ocircumflex w -15\\r\\nKPX ocircumflex x -30\\r\\nKPX ocircumflex y -20\\r\\nKPX ocircumflex yacute -20\\r\\nKPX ocircumflex ydieresis -20\\r\\nKPX odieresis v -20\\r\\nKPX odieresis w -15\\r\\nKPX odieresis x -30\\r\\nKPX odieresis y -20\\r\\nKPX odieresis yacute -20\\r\\nKPX odieresis ydieresis -20\\r\\nKPX ograve v -20\\r\\nKPX ograve w -15\\r\\nKPX ograve x -30\\r\\nKPX ograve y -20\\r\\nKPX ograve yacute -20\\r\\nKPX ograve ydieresis -20\\r\\nKPX ohungarumlaut v -20\\r\\nKPX ohungarumlaut w -15\\r\\nKPX ohungarumlaut x -30\\r\\nKPX ohungarumlaut y -20\\r\\nKPX ohungarumlaut yacute -20\\r\\nKPX ohungarumlaut ydieresis -20\\r\\nKPX omacron v -20\\r\\nKPX omacron w -15\\r\\nKPX omacron x -30\\r\\nKPX omacron y -20\\r\\nKPX omacron yacute -20\\r\\nKPX omacron ydieresis -20\\r\\nKPX oslash v -20\\r\\nKPX oslash w -15\\r\\nKPX oslash x -30\\r\\nKPX oslash y -20\\r\\nKPX oslash yacute -20\\r\\nKPX oslash ydieresis -20\\r\\nKPX otilde v -20\\r\\nKPX otilde w -15\\r\\nKPX otilde x -30\\r\\nKPX otilde y -20\\r\\nKPX otilde yacute -20\\r\\nKPX otilde ydieresis -20\\r\\nKPX p y -15\\r\\nKPX p yacute -15\\r\\nKPX p ydieresis -15\\r\\nKPX period quotedblright -120\\r\\nKPX period quoteright -120\\r\\nKPX period space -40\\r\\nKPX quotedblright space -80\\r\\nKPX quoteleft quoteleft -46\\r\\nKPX quoteright d -80\\r\\nKPX quoteright dcroat -80\\r\\nKPX quoteright l -20\\r\\nKPX quoteright lacute -20\\r\\nKPX quoteright lcommaaccent -20\\r\\nKPX quoteright lslash -20\\r\\nKPX quoteright quoteright -46\\r\\nKPX quoteright r -40\\r\\nKPX quoteright racute -40\\r\\nKPX quoteright rcaron -40\\r\\nKPX quoteright rcommaaccent -40\\r\\nKPX quoteright s -60\\r\\nKPX quoteright sacute -60\\r\\nKPX quoteright scaron -60\\r\\nKPX quoteright scedilla -60\\r\\nKPX quoteright scommaaccent -60\\r\\nKPX quoteright space -80\\r\\nKPX quoteright v -20\\r\\nKPX r c -20\\r\\nKPX r cacute -20\\r\\nKPX r ccaron -20\\r\\nKPX r ccedilla -20\\r\\nKPX r comma -60\\r\\nKPX r d -20\\r\\nKPX r dcroat -20\\r\\nKPX r g -15\\r\\nKPX r gbreve -15\\r\\nKPX r gcommaaccent -15\\r\\nKPX r hyphen -20\\r\\nKPX r o -20\\r\\nKPX r oacute -20\\r\\nKPX r ocircumflex -20\\r\\nKPX r odieresis -20\\r\\nKPX r ograve -20\\r\\nKPX r ohungarumlaut -20\\r\\nKPX r omacron -20\\r\\nKPX r oslash -20\\r\\nKPX r otilde -20\\r\\nKPX r period -60\\r\\nKPX r q -20\\r\\nKPX r s -15\\r\\nKPX r sacute -15\\r\\nKPX r scaron -15\\r\\nKPX r scedilla -15\\r\\nKPX r scommaaccent -15\\r\\nKPX r t 20\\r\\nKPX r tcommaaccent 20\\r\\nKPX r v 10\\r\\nKPX r y 10\\r\\nKPX r yacute 10\\r\\nKPX r ydieresis 10\\r\\nKPX racute c -20\\r\\nKPX racute cacute -20\\r\\nKPX racute ccaron -20\\r\\nKPX racute ccedilla -20\\r\\nKPX racute comma -60\\r\\nKPX racute d -20\\r\\nKPX racute dcroat -20\\r\\nKPX racute g -15\\r\\nKPX racute gbreve -15\\r\\nKPX racute gcommaaccent -15\\r\\nKPX racute hyphen -20\\r\\nKPX racute o -20\\r\\nKPX racute oacute -20\\r\\nKPX racute ocircumflex -20\\r\\nKPX racute odieresis -20\\r\\nKPX racute ograve -20\\r\\nKPX racute ohungarumlaut -20\\r\\nKPX racute omacron -20\\r\\nKPX racute oslash -20\\r\\nKPX racute otilde -20\\r\\nKPX racute period -60\\r\\nKPX racute q -20\\r\\nKPX racute s -15\\r\\nKPX racute sacute -15\\r\\nKPX racute scaron -15\\r\\nKPX racute scedilla -15\\r\\nKPX racute scommaaccent -15\\r\\nKPX racute t 20\\r\\nKPX racute tcommaaccent 20\\r\\nKPX racute v 10\\r\\nKPX racute y 10\\r\\nKPX racute yacute 10\\r\\nKPX racute ydieresis 10\\r\\nKPX rcaron c -20\\r\\nKPX rcaron cacute -20\\r\\nKPX rcaron ccaron -20\\r\\nKPX rcaron ccedilla -20\\r\\nKPX rcaron comma -60\\r\\nKPX rcaron d -20\\r\\nKPX rcaron dcroat -20\\r\\nKPX rcaron g -15\\r\\nKPX rcaron gbreve -15\\r\\nKPX rcaron gcommaaccent -15\\r\\nKPX rcaron hyphen -20\\r\\nKPX rcaron o -20\\r\\nKPX rcaron oacute -20\\r\\nKPX rcaron ocircumflex -20\\r\\nKPX rcaron odieresis -20\\r\\nKPX rcaron ograve -20\\r\\nKPX rcaron ohungarumlaut -20\\r\\nKPX rcaron omacron -20\\r\\nKPX rcaron oslash -20\\r\\nKPX rcaron otilde -20\\r\\nKPX rcaron period -60\\r\\nKPX rcaron q -20\\r\\nKPX rcaron s -15\\r\\nKPX rcaron sacute -15\\r\\nKPX rcaron scaron -15\\r\\nKPX rcaron scedilla -15\\r\\nKPX rcaron scommaaccent -15\\r\\nKPX rcaron t 20\\r\\nKPX rcaron tcommaaccent 20\\r\\nKPX rcaron v 10\\r\\nKPX rcaron y 10\\r\\nKPX rcaron yacute 10\\r\\nKPX rcaron ydieresis 10\\r\\nKPX rcommaaccent c -20\\r\\nKPX rcommaaccent cacute -20\\r\\nKPX rcommaaccent ccaron -20\\r\\nKPX rcommaaccent ccedilla -20\\r\\nKPX rcommaaccent comma -60\\r\\nKPX rcommaaccent d -20\\r\\nKPX rcommaaccent dcroat -20\\r\\nKPX rcommaaccent g -15\\r\\nKPX rcommaaccent gbreve -15\\r\\nKPX rcommaaccent gcommaaccent -15\\r\\nKPX rcommaaccent hyphen -20\\r\\nKPX rcommaaccent o -20\\r\\nKPX rcommaaccent oacute -20\\r\\nKPX rcommaaccent ocircumflex -20\\r\\nKPX rcommaaccent odieresis -20\\r\\nKPX rcommaaccent ograve -20\\r\\nKPX rcommaaccent ohungarumlaut -20\\r\\nKPX rcommaaccent omacron -20\\r\\nKPX rcommaaccent oslash -20\\r\\nKPX rcommaaccent otilde -20\\r\\nKPX rcommaaccent period -60\\r\\nKPX rcommaaccent q -20\\r\\nKPX rcommaaccent s -15\\r\\nKPX rcommaaccent sacute -15\\r\\nKPX rcommaaccent scaron -15\\r\\nKPX rcommaaccent scedilla -15\\r\\nKPX rcommaaccent scommaaccent -15\\r\\nKPX rcommaaccent t 20\\r\\nKPX rcommaaccent tcommaaccent 20\\r\\nKPX rcommaaccent v 10\\r\\nKPX rcommaaccent y 10\\r\\nKPX rcommaaccent yacute 10\\r\\nKPX rcommaaccent ydieresis 10\\r\\nKPX s w -15\\r\\nKPX sacute w -15\\r\\nKPX scaron w -15\\r\\nKPX scedilla w -15\\r\\nKPX scommaaccent w -15\\r\\nKPX semicolon space -40\\r\\nKPX space T -100\\r\\nKPX space Tcaron -100\\r\\nKPX space Tcommaaccent -100\\r\\nKPX space V -80\\r\\nKPX space W -80\\r\\nKPX space Y -120\\r\\nKPX space Yacute -120\\r\\nKPX space Ydieresis -120\\r\\nKPX space quotedblleft -80\\r\\nKPX space quoteleft -60\\r\\nKPX v a -20\\r\\nKPX v aacute -20\\r\\nKPX v abreve -20\\r\\nKPX v acircumflex -20\\r\\nKPX v adieresis -20\\r\\nKPX v agrave -20\\r\\nKPX v amacron -20\\r\\nKPX v aogonek -20\\r\\nKPX v aring -20\\r\\nKPX v atilde -20\\r\\nKPX v comma -80\\r\\nKPX v o -30\\r\\nKPX v oacute -30\\r\\nKPX v ocircumflex -30\\r\\nKPX v odieresis -30\\r\\nKPX v ograve -30\\r\\nKPX v ohungarumlaut -30\\r\\nKPX v omacron -30\\r\\nKPX v oslash -30\\r\\nKPX v otilde -30\\r\\nKPX v period -80\\r\\nKPX w comma -40\\r\\nKPX w o -20\\r\\nKPX w oacute -20\\r\\nKPX w ocircumflex -20\\r\\nKPX w odieresis -20\\r\\nKPX w ograve -20\\r\\nKPX w ohungarumlaut -20\\r\\nKPX w omacron -20\\r\\nKPX w oslash -20\\r\\nKPX w otilde -20\\r\\nKPX w period -40\\r\\nKPX x e -10\\r\\nKPX x eacute -10\\r\\nKPX x ecaron -10\\r\\nKPX x ecircumflex -10\\r\\nKPX x edieresis -10\\r\\nKPX x edotaccent -10\\r\\nKPX x egrave -10\\r\\nKPX x emacron -10\\r\\nKPX x eogonek -10\\r\\nKPX y a -30\\r\\nKPX y aacute -30\\r\\nKPX y abreve -30\\r\\nKPX y acircumflex -30\\r\\nKPX y adieresis -30\\r\\nKPX y agrave -30\\r\\nKPX y amacron -30\\r\\nKPX y aogonek -30\\r\\nKPX y aring -30\\r\\nKPX y atilde -30\\r\\nKPX y comma -80\\r\\nKPX y e -10\\r\\nKPX y eacute -10\\r\\nKPX y ecaron -10\\r\\nKPX y ecircumflex -10\\r\\nKPX y edieresis -10\\r\\nKPX y edotaccent -10\\r\\nKPX y egrave -10\\r\\nKPX y emacron -10\\r\\nKPX y eogonek -10\\r\\nKPX y o -25\\r\\nKPX y oacute -25\\r\\nKPX y ocircumflex -25\\r\\nKPX y odieresis -25\\r\\nKPX y ograve -25\\r\\nKPX y ohungarumlaut -25\\r\\nKPX y omacron -25\\r\\nKPX y oslash -25\\r\\nKPX y otilde -25\\r\\nKPX y period -80\\r\\nKPX yacute a -30\\r\\nKPX yacute aacute -30\\r\\nKPX yacute abreve -30\\r\\nKPX yacute acircumflex -30\\r\\nKPX yacute adieresis -30\\r\\nKPX yacute agrave -30\\r\\nKPX yacute amacron -30\\r\\nKPX yacute aogonek -30\\r\\nKPX yacute aring -30\\r\\nKPX yacute atilde -30\\r\\nKPX yacute comma -80\\r\\nKPX yacute e -10\\r\\nKPX yacute eacute -10\\r\\nKPX yacute ecaron -10\\r\\nKPX yacute ecircumflex -10\\r\\nKPX yacute edieresis -10\\r\\nKPX yacute edotaccent -10\\r\\nKPX yacute egrave -10\\r\\nKPX yacute emacron -10\\r\\nKPX yacute eogonek -10\\r\\nKPX yacute o -25\\r\\nKPX yacute oacute -25\\r\\nKPX yacute ocircumflex -25\\r\\nKPX yacute odieresis -25\\r\\nKPX yacute ograve -25\\r\\nKPX yacute ohungarumlaut -25\\r\\nKPX yacute omacron -25\\r\\nKPX yacute oslash -25\\r\\nKPX yacute otilde -25\\r\\nKPX yacute period -80\\r\\nKPX ydieresis a -30\\r\\nKPX ydieresis aacute -30\\r\\nKPX ydieresis abreve -30\\r\\nKPX ydieresis acircumflex -30\\r\\nKPX ydieresis adieresis -30\\r\\nKPX ydieresis agrave -30\\r\\nKPX ydieresis amacron -30\\r\\nKPX ydieresis aogonek -30\\r\\nKPX ydieresis aring -30\\r\\nKPX ydieresis atilde -30\\r\\nKPX ydieresis comma -80\\r\\nKPX ydieresis e -10\\r\\nKPX ydieresis eacute -10\\r\\nKPX ydieresis ecaron -10\\r\\nKPX ydieresis ecircumflex -10\\r\\nKPX ydieresis edieresis -10\\r\\nKPX ydieresis edotaccent -10\\r\\nKPX ydieresis egrave -10\\r\\nKPX ydieresis emacron -10\\r\\nKPX ydieresis eogonek -10\\r\\nKPX ydieresis o -25\\r\\nKPX ydieresis oacute -25\\r\\nKPX ydieresis ocircumflex -25\\r\\nKPX ydieresis odieresis -25\\r\\nKPX ydieresis ograve -25\\r\\nKPX ydieresis ohungarumlaut -25\\r\\nKPX ydieresis omacron -25\\r\\nKPX ydieresis oslash -25\\r\\nKPX ydieresis otilde -25\\r\\nKPX ydieresis period -80\\r\\nKPX z e 10\\r\\nKPX z eacute 10\\r\\nKPX z ecaron 10\\r\\nKPX z ecircumflex 10\\r\\nKPX z edieresis 10\\r\\nKPX z edotaccent 10\\r\\nKPX z egrave 10\\r\\nKPX z emacron 10\\r\\nKPX z eogonek 10\\r\\nKPX zacute e 10\\r\\nKPX zacute eacute 10\\r\\nKPX zacute ecaron 10\\r\\nKPX zacute ecircumflex 10\\r\\nKPX zacute edieresis 10\\r\\nKPX zacute edotaccent 10\\r\\nKPX zacute egrave 10\\r\\nKPX zacute emacron 10\\r\\nKPX zacute eogonek 10\\r\\nKPX zcaron e 10\\r\\nKPX zcaron eacute 10\\r\\nKPX zcaron ecaron 10\\r\\nKPX zcaron ecircumflex 10\\r\\nKPX zcaron edieresis 10\\r\\nKPX zcaron edotaccent 10\\r\\nKPX zcaron egrave 10\\r\\nKPX zcaron emacron 10\\r\\nKPX zcaron eogonek 10\\r\\nKPX zdotaccent e 10\\r\\nKPX zdotaccent eacute 10\\r\\nKPX zdotaccent ecaron 10\\r\\nKPX zdotaccent ecircumflex 10\\r\\nKPX zdotaccent edieresis 10\\r\\nKPX zdotaccent edotaccent 10\\r\\nKPX zdotaccent egrave 10\\r\\nKPX zdotaccent emacron 10\\r\\nKPX zdotaccent eogonek 10\\r\\nEndKernPairs\\r\\nEndKernData\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Helvetica-BoldOblique.afm?`)},"./node_modules/pdfkit/js/data/Helvetica-Oblique.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nComment Creation Date: Thu May  1 12:44:31 1997\\r\\nComment UniqueID 43055\\r\\nComment VMusage 14960 69346\\r\\nFontName Helvetica-Oblique\\r\\nFullName Helvetica Oblique\\r\\nFamilyName Helvetica\\r\\nWeight Medium\\r\\nItalicAngle -12\\r\\nIsFixedPitch false\\r\\nCharacterSet ExtendedRoman\\r\\nFontBBox -170 -225 1116 931 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 002.000\\r\\nNotice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.\\r\\nEncodingScheme AdobeStandardEncoding\\r\\nCapHeight 718\\r\\nXHeight 523\\r\\nAscender 718\\r\\nDescender -207\\r\\nStdHW 76\\r\\nStdVW 88\\r\\nStartCharMetrics 315\\r\\nC 32 ; WX 278 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 278 ; N exclam ; B 90 0 340 718 ;\\r\\nC 34 ; WX 355 ; N quotedbl ; B 168 463 438 718 ;\\r\\nC 35 ; WX 556 ; N numbersign ; B 73 0 631 688 ;\\r\\nC 36 ; WX 556 ; N dollar ; B 69 -115 617 775 ;\\r\\nC 37 ; WX 889 ; N percent ; B 147 -19 889 703 ;\\r\\nC 38 ; WX 667 ; N ampersand ; B 77 -15 647 718 ;\\r\\nC 39 ; WX 222 ; N quoteright ; B 151 463 310 718 ;\\r\\nC 40 ; WX 333 ; N parenleft ; B 108 -207 454 733 ;\\r\\nC 41 ; WX 333 ; N parenright ; B -9 -207 337 733 ;\\r\\nC 42 ; WX 389 ; N asterisk ; B 165 431 475 718 ;\\r\\nC 43 ; WX 584 ; N plus ; B 85 0 606 505 ;\\r\\nC 44 ; WX 278 ; N comma ; B 56 -147 214 106 ;\\r\\nC 45 ; WX 333 ; N hyphen ; B 93 232 357 322 ;\\r\\nC 46 ; WX 278 ; N period ; B 87 0 214 106 ;\\r\\nC 47 ; WX 278 ; N slash ; B -21 -19 452 737 ;\\r\\nC 48 ; WX 556 ; N zero ; B 93 -19 608 703 ;\\r\\nC 49 ; WX 556 ; N one ; B 207 0 508 703 ;\\r\\nC 50 ; WX 556 ; N two ; B 26 0 617 703 ;\\r\\nC 51 ; WX 556 ; N three ; B 75 -19 610 703 ;\\r\\nC 52 ; WX 556 ; N four ; B 61 0 576 703 ;\\r\\nC 53 ; WX 556 ; N five ; B 68 -19 621 688 ;\\r\\nC 54 ; WX 556 ; N six ; B 91 -19 615 703 ;\\r\\nC 55 ; WX 556 ; N seven ; B 137 0 669 688 ;\\r\\nC 56 ; WX 556 ; N eight ; B 74 -19 607 703 ;\\r\\nC 57 ; WX 556 ; N nine ; B 82 -19 609 703 ;\\r\\nC 58 ; WX 278 ; N colon ; B 87 0 301 516 ;\\r\\nC 59 ; WX 278 ; N semicolon ; B 56 -147 301 516 ;\\r\\nC 60 ; WX 584 ; N less ; B 94 11 641 495 ;\\r\\nC 61 ; WX 584 ; N equal ; B 63 115 628 390 ;\\r\\nC 62 ; WX 584 ; N greater ; B 50 11 597 495 ;\\r\\nC 63 ; WX 556 ; N question ; B 161 0 610 727 ;\\r\\nC 64 ; WX 1015 ; N at ; B 215 -19 965 737 ;\\r\\nC 65 ; WX 667 ; N A ; B 14 0 654 718 ;\\r\\nC 66 ; WX 667 ; N B ; B 74 0 712 718 ;\\r\\nC 67 ; WX 722 ; N C ; B 108 -19 782 737 ;\\r\\nC 68 ; WX 722 ; N D ; B 81 0 764 718 ;\\r\\nC 69 ; WX 667 ; N E ; B 86 0 762 718 ;\\r\\nC 70 ; WX 611 ; N F ; B 86 0 736 718 ;\\r\\nC 71 ; WX 778 ; N G ; B 111 -19 799 737 ;\\r\\nC 72 ; WX 722 ; N H ; B 77 0 799 718 ;\\r\\nC 73 ; WX 278 ; N I ; B 91 0 341 718 ;\\r\\nC 74 ; WX 500 ; N J ; B 47 -19 581 718 ;\\r\\nC 75 ; WX 667 ; N K ; B 76 0 808 718 ;\\r\\nC 76 ; WX 556 ; N L ; B 76 0 555 718 ;\\r\\nC 77 ; WX 833 ; N M ; B 73 0 914 718 ;\\r\\nC 78 ; WX 722 ; N N ; B 76 0 799 718 ;\\r\\nC 79 ; WX 778 ; N O ; B 105 -19 826 737 ;\\r\\nC 80 ; WX 667 ; N P ; B 86 0 737 718 ;\\r\\nC 81 ; WX 778 ; N Q ; B 105 -56 826 737 ;\\r\\nC 82 ; WX 722 ; N R ; B 88 0 773 718 ;\\r\\nC 83 ; WX 667 ; N S ; B 90 -19 713 737 ;\\r\\nC 84 ; WX 611 ; N T ; B 148 0 750 718 ;\\r\\nC 85 ; WX 722 ; N U ; B 123 -19 797 718 ;\\r\\nC 86 ; WX 667 ; N V ; B 173 0 800 718 ;\\r\\nC 87 ; WX 944 ; N W ; B 169 0 1081 718 ;\\r\\nC 88 ; WX 667 ; N X ; B 19 0 790 718 ;\\r\\nC 89 ; WX 667 ; N Y ; B 167 0 806 718 ;\\r\\nC 90 ; WX 611 ; N Z ; B 23 0 741 718 ;\\r\\nC 91 ; WX 278 ; N bracketleft ; B 21 -196 403 722 ;\\r\\nC 92 ; WX 278 ; N backslash ; B 140 -19 291 737 ;\\r\\nC 93 ; WX 278 ; N bracketright ; B -14 -196 368 722 ;\\r\\nC 94 ; WX 469 ; N asciicircum ; B 42 264 539 688 ;\\r\\nC 95 ; WX 556 ; N underscore ; B -27 -125 540 -75 ;\\r\\nC 96 ; WX 222 ; N quoteleft ; B 165 470 323 725 ;\\r\\nC 97 ; WX 556 ; N a ; B 61 -15 559 538 ;\\r\\nC 98 ; WX 556 ; N b ; B 58 -15 584 718 ;\\r\\nC 99 ; WX 500 ; N c ; B 74 -15 553 538 ;\\r\\nC 100 ; WX 556 ; N d ; B 84 -15 652 718 ;\\r\\nC 101 ; WX 556 ; N e ; B 84 -15 578 538 ;\\r\\nC 102 ; WX 278 ; N f ; B 86 0 416 728 ; L i fi ; L l fl ;\\r\\nC 103 ; WX 556 ; N g ; B 42 -220 610 538 ;\\r\\nC 104 ; WX 556 ; N h ; B 65 0 573 718 ;\\r\\nC 105 ; WX 222 ; N i ; B 67 0 308 718 ;\\r\\nC 106 ; WX 222 ; N j ; B -60 -210 308 718 ;\\r\\nC 107 ; WX 500 ; N k ; B 67 0 600 718 ;\\r\\nC 108 ; WX 222 ; N l ; B 67 0 308 718 ;\\r\\nC 109 ; WX 833 ; N m ; B 65 0 852 538 ;\\r\\nC 110 ; WX 556 ; N n ; B 65 0 573 538 ;\\r\\nC 111 ; WX 556 ; N o ; B 83 -14 585 538 ;\\r\\nC 112 ; WX 556 ; N p ; B 14 -207 584 538 ;\\r\\nC 113 ; WX 556 ; N q ; B 84 -207 605 538 ;\\r\\nC 114 ; WX 333 ; N r ; B 77 0 446 538 ;\\r\\nC 115 ; WX 500 ; N s ; B 63 -15 529 538 ;\\r\\nC 116 ; WX 278 ; N t ; B 102 -7 368 669 ;\\r\\nC 117 ; WX 556 ; N u ; B 94 -15 600 523 ;\\r\\nC 118 ; WX 500 ; N v ; B 119 0 603 523 ;\\r\\nC 119 ; WX 722 ; N w ; B 125 0 820 523 ;\\r\\nC 120 ; WX 500 ; N x ; B 11 0 594 523 ;\\r\\nC 121 ; WX 500 ; N y ; B 15 -214 600 523 ;\\r\\nC 122 ; WX 500 ; N z ; B 31 0 571 523 ;\\r\\nC 123 ; WX 334 ; N braceleft ; B 92 -196 445 722 ;\\r\\nC 124 ; WX 260 ; N bar ; B 46 -225 332 775 ;\\r\\nC 125 ; WX 334 ; N braceright ; B 0 -196 354 722 ;\\r\\nC 126 ; WX 584 ; N asciitilde ; B 111 180 580 326 ;\\r\\nC 161 ; WX 333 ; N exclamdown ; B 77 -195 326 523 ;\\r\\nC 162 ; WX 556 ; N cent ; B 95 -115 584 623 ;\\r\\nC 163 ; WX 556 ; N sterling ; B 49 -16 634 718 ;\\r\\nC 164 ; WX 167 ; N fraction ; B -170 -19 482 703 ;\\r\\nC 165 ; WX 556 ; N yen ; B 81 0 699 688 ;\\r\\nC 166 ; WX 556 ; N florin ; B -52 -207 654 737 ;\\r\\nC 167 ; WX 556 ; N section ; B 76 -191 584 737 ;\\r\\nC 168 ; WX 556 ; N currency ; B 60 99 646 603 ;\\r\\nC 169 ; WX 191 ; N quotesingle ; B 157 463 285 718 ;\\r\\nC 170 ; WX 333 ; N quotedblleft ; B 138 470 461 725 ;\\r\\nC 171 ; WX 556 ; N guillemotleft ; B 146 108 554 446 ;\\r\\nC 172 ; WX 333 ; N guilsinglleft ; B 137 108 340 446 ;\\r\\nC 173 ; WX 333 ; N guilsinglright ; B 111 108 314 446 ;\\r\\nC 174 ; WX 500 ; N fi ; B 86 0 587 728 ;\\r\\nC 175 ; WX 500 ; N fl ; B 86 0 585 728 ;\\r\\nC 177 ; WX 556 ; N endash ; B 51 240 623 313 ;\\r\\nC 178 ; WX 556 ; N dagger ; B 135 -159 622 718 ;\\r\\nC 179 ; WX 556 ; N daggerdbl ; B 52 -159 623 718 ;\\r\\nC 180 ; WX 278 ; N periodcentered ; B 129 190 257 315 ;\\r\\nC 182 ; WX 537 ; N paragraph ; B 126 -173 650 718 ;\\r\\nC 183 ; WX 350 ; N bullet ; B 91 202 413 517 ;\\r\\nC 184 ; WX 222 ; N quotesinglbase ; B 21 -149 180 106 ;\\r\\nC 185 ; WX 333 ; N quotedblbase ; B -6 -149 318 106 ;\\r\\nC 186 ; WX 333 ; N quotedblright ; B 124 463 448 718 ;\\r\\nC 187 ; WX 556 ; N guillemotright ; B 120 108 528 446 ;\\r\\nC 188 ; WX 1000 ; N ellipsis ; B 115 0 908 106 ;\\r\\nC 189 ; WX 1000 ; N perthousand ; B 88 -19 1029 703 ;\\r\\nC 191 ; WX 611 ; N questiondown ; B 85 -201 534 525 ;\\r\\nC 193 ; WX 333 ; N grave ; B 170 593 337 734 ;\\r\\nC 194 ; WX 333 ; N acute ; B 248 593 475 734 ;\\r\\nC 195 ; WX 333 ; N circumflex ; B 147 593 438 734 ;\\r\\nC 196 ; WX 333 ; N tilde ; B 125 606 490 722 ;\\r\\nC 197 ; WX 333 ; N macron ; B 143 627 468 684 ;\\r\\nC 198 ; WX 333 ; N breve ; B 167 595 476 731 ;\\r\\nC 199 ; WX 333 ; N dotaccent ; B 249 604 362 706 ;\\r\\nC 200 ; WX 333 ; N dieresis ; B 168 604 443 706 ;\\r\\nC 202 ; WX 333 ; N ring ; B 214 572 402 756 ;\\r\\nC 203 ; WX 333 ; N cedilla ; B 2 -225 232 0 ;\\r\\nC 205 ; WX 333 ; N hungarumlaut ; B 157 593 565 734 ;\\r\\nC 206 ; WX 333 ; N ogonek ; B 43 -225 249 0 ;\\r\\nC 207 ; WX 333 ; N caron ; B 177 593 468 734 ;\\r\\nC 208 ; WX 1000 ; N emdash ; B 51 240 1067 313 ;\\r\\nC 225 ; WX 1000 ; N AE ; B 8 0 1097 718 ;\\r\\nC 227 ; WX 370 ; N ordfeminine ; B 127 405 449 737 ;\\r\\nC 232 ; WX 556 ; N Lslash ; B 41 0 555 718 ;\\r\\nC 233 ; WX 778 ; N Oslash ; B 43 -19 890 737 ;\\r\\nC 234 ; WX 1000 ; N OE ; B 98 -19 1116 737 ;\\r\\nC 235 ; WX 365 ; N ordmasculine ; B 141 405 468 737 ;\\r\\nC 241 ; WX 889 ; N ae ; B 61 -15 909 538 ;\\r\\nC 245 ; WX 278 ; N dotlessi ; B 95 0 294 523 ;\\r\\nC 248 ; WX 222 ; N lslash ; B 41 0 347 718 ;\\r\\nC 249 ; WX 611 ; N oslash ; B 29 -22 647 545 ;\\r\\nC 250 ; WX 944 ; N oe ; B 83 -15 964 538 ;\\r\\nC 251 ; WX 611 ; N germandbls ; B 67 -15 658 728 ;\\r\\nC -1 ; WX 278 ; N Idieresis ; B 91 0 458 901 ;\\r\\nC -1 ; WX 556 ; N eacute ; B 84 -15 587 734 ;\\r\\nC -1 ; WX 556 ; N abreve ; B 61 -15 578 731 ;\\r\\nC -1 ; WX 556 ; N uhungarumlaut ; B 94 -15 677 734 ;\\r\\nC -1 ; WX 556 ; N ecaron ; B 84 -15 580 734 ;\\r\\nC -1 ; WX 667 ; N Ydieresis ; B 167 0 806 901 ;\\r\\nC -1 ; WX 584 ; N divide ; B 85 -19 606 524 ;\\r\\nC -1 ; WX 667 ; N Yacute ; B 167 0 806 929 ;\\r\\nC -1 ; WX 667 ; N Acircumflex ; B 14 0 654 929 ;\\r\\nC -1 ; WX 556 ; N aacute ; B 61 -15 587 734 ;\\r\\nC -1 ; WX 722 ; N Ucircumflex ; B 123 -19 797 929 ;\\r\\nC -1 ; WX 500 ; N yacute ; B 15 -214 600 734 ;\\r\\nC -1 ; WX 500 ; N scommaaccent ; B 63 -225 529 538 ;\\r\\nC -1 ; WX 556 ; N ecircumflex ; B 84 -15 578 734 ;\\r\\nC -1 ; WX 722 ; N Uring ; B 123 -19 797 931 ;\\r\\nC -1 ; WX 722 ; N Udieresis ; B 123 -19 797 901 ;\\r\\nC -1 ; WX 556 ; N aogonek ; B 61 -220 559 538 ;\\r\\nC -1 ; WX 722 ; N Uacute ; B 123 -19 797 929 ;\\r\\nC -1 ; WX 556 ; N uogonek ; B 94 -225 600 523 ;\\r\\nC -1 ; WX 667 ; N Edieresis ; B 86 0 762 901 ;\\r\\nC -1 ; WX 722 ; N Dcroat ; B 69 0 764 718 ;\\r\\nC -1 ; WX 250 ; N commaaccent ; B 39 -225 172 -40 ;\\r\\nC -1 ; WX 737 ; N copyright ; B 54 -19 837 737 ;\\r\\nC -1 ; WX 667 ; N Emacron ; B 86 0 762 879 ;\\r\\nC -1 ; WX 500 ; N ccaron ; B 74 -15 553 734 ;\\r\\nC -1 ; WX 556 ; N aring ; B 61 -15 559 756 ;\\r\\nC -1 ; WX 722 ; N Ncommaaccent ; B 76 -225 799 718 ;\\r\\nC -1 ; WX 222 ; N lacute ; B 67 0 461 929 ;\\r\\nC -1 ; WX 556 ; N agrave ; B 61 -15 559 734 ;\\r\\nC -1 ; WX 611 ; N Tcommaaccent ; B 148 -225 750 718 ;\\r\\nC -1 ; WX 722 ; N Cacute ; B 108 -19 782 929 ;\\r\\nC -1 ; WX 556 ; N atilde ; B 61 -15 592 722 ;\\r\\nC -1 ; WX 667 ; N Edotaccent ; B 86 0 762 901 ;\\r\\nC -1 ; WX 500 ; N scaron ; B 63 -15 552 734 ;\\r\\nC -1 ; WX 500 ; N scedilla ; B 63 -225 529 538 ;\\r\\nC -1 ; WX 278 ; N iacute ; B 95 0 448 734 ;\\r\\nC -1 ; WX 471 ; N lozenge ; B 88 0 540 728 ;\\r\\nC -1 ; WX 722 ; N Rcaron ; B 88 0 773 929 ;\\r\\nC -1 ; WX 778 ; N Gcommaaccent ; B 111 -225 799 737 ;\\r\\nC -1 ; WX 556 ; N ucircumflex ; B 94 -15 600 734 ;\\r\\nC -1 ; WX 556 ; N acircumflex ; B 61 -15 559 734 ;\\r\\nC -1 ; WX 667 ; N Amacron ; B 14 0 677 879 ;\\r\\nC -1 ; WX 333 ; N rcaron ; B 77 0 508 734 ;\\r\\nC -1 ; WX 500 ; N ccedilla ; B 74 -225 553 538 ;\\r\\nC -1 ; WX 611 ; N Zdotaccent ; B 23 0 741 901 ;\\r\\nC -1 ; WX 667 ; N Thorn ; B 86 0 712 718 ;\\r\\nC -1 ; WX 778 ; N Omacron ; B 105 -19 826 879 ;\\r\\nC -1 ; WX 722 ; N Racute ; B 88 0 773 929 ;\\r\\nC -1 ; WX 667 ; N Sacute ; B 90 -19 713 929 ;\\r\\nC -1 ; WX 643 ; N dcaron ; B 84 -15 808 718 ;\\r\\nC -1 ; WX 722 ; N Umacron ; B 123 -19 797 879 ;\\r\\nC -1 ; WX 556 ; N uring ; B 94 -15 600 756 ;\\r\\nC -1 ; WX 333 ; N threesuperior ; B 90 270 436 703 ;\\r\\nC -1 ; WX 778 ; N Ograve ; B 105 -19 826 929 ;\\r\\nC -1 ; WX 667 ; N Agrave ; B 14 0 654 929 ;\\r\\nC -1 ; WX 667 ; N Abreve ; B 14 0 685 926 ;\\r\\nC -1 ; WX 584 ; N multiply ; B 50 0 642 506 ;\\r\\nC -1 ; WX 556 ; N uacute ; B 94 -15 600 734 ;\\r\\nC -1 ; WX 611 ; N Tcaron ; B 148 0 750 929 ;\\r\\nC -1 ; WX 476 ; N partialdiff ; B 41 -38 550 714 ;\\r\\nC -1 ; WX 500 ; N ydieresis ; B 15 -214 600 706 ;\\r\\nC -1 ; WX 722 ; N Nacute ; B 76 0 799 929 ;\\r\\nC -1 ; WX 278 ; N icircumflex ; B 95 0 411 734 ;\\r\\nC -1 ; WX 667 ; N Ecircumflex ; B 86 0 762 929 ;\\r\\nC -1 ; WX 556 ; N adieresis ; B 61 -15 559 706 ;\\r\\nC -1 ; WX 556 ; N edieresis ; B 84 -15 578 706 ;\\r\\nC -1 ; WX 500 ; N cacute ; B 74 -15 559 734 ;\\r\\nC -1 ; WX 556 ; N nacute ; B 65 0 587 734 ;\\r\\nC -1 ; WX 556 ; N umacron ; B 94 -15 600 684 ;\\r\\nC -1 ; WX 722 ; N Ncaron ; B 76 0 799 929 ;\\r\\nC -1 ; WX 278 ; N Iacute ; B 91 0 489 929 ;\\r\\nC -1 ; WX 584 ; N plusminus ; B 39 0 618 506 ;\\r\\nC -1 ; WX 260 ; N brokenbar ; B 62 -150 316 700 ;\\r\\nC -1 ; WX 737 ; N registered ; B 54 -19 837 737 ;\\r\\nC -1 ; WX 778 ; N Gbreve ; B 111 -19 799 926 ;\\r\\nC -1 ; WX 278 ; N Idotaccent ; B 91 0 377 901 ;\\r\\nC -1 ; WX 600 ; N summation ; B 15 -10 671 706 ;\\r\\nC -1 ; WX 667 ; N Egrave ; B 86 0 762 929 ;\\r\\nC -1 ; WX 333 ; N racute ; B 77 0 475 734 ;\\r\\nC -1 ; WX 556 ; N omacron ; B 83 -14 585 684 ;\\r\\nC -1 ; WX 611 ; N Zacute ; B 23 0 741 929 ;\\r\\nC -1 ; WX 611 ; N Zcaron ; B 23 0 741 929 ;\\r\\nC -1 ; WX 549 ; N greaterequal ; B 26 0 620 674 ;\\r\\nC -1 ; WX 722 ; N Eth ; B 69 0 764 718 ;\\r\\nC -1 ; WX 722 ; N Ccedilla ; B 108 -225 782 737 ;\\r\\nC -1 ; WX 222 ; N lcommaaccent ; B 25 -225 308 718 ;\\r\\nC -1 ; WX 317 ; N tcaron ; B 102 -7 501 808 ;\\r\\nC -1 ; WX 556 ; N eogonek ; B 84 -225 578 538 ;\\r\\nC -1 ; WX 722 ; N Uogonek ; B 123 -225 797 718 ;\\r\\nC -1 ; WX 667 ; N Aacute ; B 14 0 683 929 ;\\r\\nC -1 ; WX 667 ; N Adieresis ; B 14 0 654 901 ;\\r\\nC -1 ; WX 556 ; N egrave ; B 84 -15 578 734 ;\\r\\nC -1 ; WX 500 ; N zacute ; B 31 0 571 734 ;\\r\\nC -1 ; WX 222 ; N iogonek ; B -61 -225 308 718 ;\\r\\nC -1 ; WX 778 ; N Oacute ; B 105 -19 826 929 ;\\r\\nC -1 ; WX 556 ; N oacute ; B 83 -14 587 734 ;\\r\\nC -1 ; WX 556 ; N amacron ; B 61 -15 580 684 ;\\r\\nC -1 ; WX 500 ; N sacute ; B 63 -15 559 734 ;\\r\\nC -1 ; WX 278 ; N idieresis ; B 95 0 416 706 ;\\r\\nC -1 ; WX 778 ; N Ocircumflex ; B 105 -19 826 929 ;\\r\\nC -1 ; WX 722 ; N Ugrave ; B 123 -19 797 929 ;\\r\\nC -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;\\r\\nC -1 ; WX 556 ; N thorn ; B 14 -207 584 718 ;\\r\\nC -1 ; WX 333 ; N twosuperior ; B 64 281 449 703 ;\\r\\nC -1 ; WX 778 ; N Odieresis ; B 105 -19 826 901 ;\\r\\nC -1 ; WX 556 ; N mu ; B 24 -207 600 523 ;\\r\\nC -1 ; WX 278 ; N igrave ; B 95 0 310 734 ;\\r\\nC -1 ; WX 556 ; N ohungarumlaut ; B 83 -14 677 734 ;\\r\\nC -1 ; WX 667 ; N Eogonek ; B 86 -220 762 718 ;\\r\\nC -1 ; WX 556 ; N dcroat ; B 84 -15 689 718 ;\\r\\nC -1 ; WX 834 ; N threequarters ; B 130 -19 861 703 ;\\r\\nC -1 ; WX 667 ; N Scedilla ; B 90 -225 713 737 ;\\r\\nC -1 ; WX 299 ; N lcaron ; B 67 0 464 718 ;\\r\\nC -1 ; WX 667 ; N Kcommaaccent ; B 76 -225 808 718 ;\\r\\nC -1 ; WX 556 ; N Lacute ; B 76 0 555 929 ;\\r\\nC -1 ; WX 1000 ; N trademark ; B 186 306 1056 718 ;\\r\\nC -1 ; WX 556 ; N edotaccent ; B 84 -15 578 706 ;\\r\\nC -1 ; WX 278 ; N Igrave ; B 91 0 351 929 ;\\r\\nC -1 ; WX 278 ; N Imacron ; B 91 0 483 879 ;\\r\\nC -1 ; WX 556 ; N Lcaron ; B 76 0 570 718 ;\\r\\nC -1 ; WX 834 ; N onehalf ; B 114 -19 839 703 ;\\r\\nC -1 ; WX 549 ; N lessequal ; B 26 0 666 674 ;\\r\\nC -1 ; WX 556 ; N ocircumflex ; B 83 -14 585 734 ;\\r\\nC -1 ; WX 556 ; N ntilde ; B 65 0 592 722 ;\\r\\nC -1 ; WX 722 ; N Uhungarumlaut ; B 123 -19 801 929 ;\\r\\nC -1 ; WX 667 ; N Eacute ; B 86 0 762 929 ;\\r\\nC -1 ; WX 556 ; N emacron ; B 84 -15 580 684 ;\\r\\nC -1 ; WX 556 ; N gbreve ; B 42 -220 610 731 ;\\r\\nC -1 ; WX 834 ; N onequarter ; B 150 -19 802 703 ;\\r\\nC -1 ; WX 667 ; N Scaron ; B 90 -19 713 929 ;\\r\\nC -1 ; WX 667 ; N Scommaaccent ; B 90 -225 713 737 ;\\r\\nC -1 ; WX 778 ; N Ohungarumlaut ; B 105 -19 829 929 ;\\r\\nC -1 ; WX 400 ; N degree ; B 169 411 468 703 ;\\r\\nC -1 ; WX 556 ; N ograve ; B 83 -14 585 734 ;\\r\\nC -1 ; WX 722 ; N Ccaron ; B 108 -19 782 929 ;\\r\\nC -1 ; WX 556 ; N ugrave ; B 94 -15 600 734 ;\\r\\nC -1 ; WX 453 ; N radical ; B 79 -80 617 762 ;\\r\\nC -1 ; WX 722 ; N Dcaron ; B 81 0 764 929 ;\\r\\nC -1 ; WX 333 ; N rcommaaccent ; B 30 -225 446 538 ;\\r\\nC -1 ; WX 722 ; N Ntilde ; B 76 0 799 917 ;\\r\\nC -1 ; WX 556 ; N otilde ; B 83 -14 602 722 ;\\r\\nC -1 ; WX 722 ; N Rcommaaccent ; B 88 -225 773 718 ;\\r\\nC -1 ; WX 556 ; N Lcommaaccent ; B 76 -225 555 718 ;\\r\\nC -1 ; WX 667 ; N Atilde ; B 14 0 699 917 ;\\r\\nC -1 ; WX 667 ; N Aogonek ; B 14 -225 654 718 ;\\r\\nC -1 ; WX 667 ; N Aring ; B 14 0 654 931 ;\\r\\nC -1 ; WX 778 ; N Otilde ; B 105 -19 826 917 ;\\r\\nC -1 ; WX 500 ; N zdotaccent ; B 31 0 571 706 ;\\r\\nC -1 ; WX 667 ; N Ecaron ; B 86 0 762 929 ;\\r\\nC -1 ; WX 278 ; N Iogonek ; B -33 -225 341 718 ;\\r\\nC -1 ; WX 500 ; N kcommaaccent ; B 67 -225 600 718 ;\\r\\nC -1 ; WX 584 ; N minus ; B 85 216 606 289 ;\\r\\nC -1 ; WX 278 ; N Icircumflex ; B 91 0 452 929 ;\\r\\nC -1 ; WX 556 ; N ncaron ; B 65 0 580 734 ;\\r\\nC -1 ; WX 278 ; N tcommaaccent ; B 63 -225 368 669 ;\\r\\nC -1 ; WX 584 ; N logicalnot ; B 106 108 628 390 ;\\r\\nC -1 ; WX 556 ; N odieresis ; B 83 -14 585 706 ;\\r\\nC -1 ; WX 556 ; N udieresis ; B 94 -15 600 706 ;\\r\\nC -1 ; WX 549 ; N notequal ; B 34 -35 623 551 ;\\r\\nC -1 ; WX 556 ; N gcommaaccent ; B 42 -220 610 822 ;\\r\\nC -1 ; WX 556 ; N eth ; B 81 -15 617 737 ;\\r\\nC -1 ; WX 500 ; N zcaron ; B 31 0 571 734 ;\\r\\nC -1 ; WX 556 ; N ncommaaccent ; B 65 -225 573 538 ;\\r\\nC -1 ; WX 333 ; N onesuperior ; B 166 281 371 703 ;\\r\\nC -1 ; WX 278 ; N imacron ; B 95 0 417 684 ;\\r\\nC -1 ; WX 556 ; N Euro ; B 0 0 0 0 ;\\r\\nEndCharMetrics\\r\\nStartKernData\\r\\nStartKernPairs 2705\\r\\nKPX A C -30\\r\\nKPX A Cacute -30\\r\\nKPX A Ccaron -30\\r\\nKPX A Ccedilla -30\\r\\nKPX A G -30\\r\\nKPX A Gbreve -30\\r\\nKPX A Gcommaaccent -30\\r\\nKPX A O -30\\r\\nKPX A Oacute -30\\r\\nKPX A Ocircumflex -30\\r\\nKPX A Odieresis -30\\r\\nKPX A Ograve -30\\r\\nKPX A Ohungarumlaut -30\\r\\nKPX A Omacron -30\\r\\nKPX A Oslash -30\\r\\nKPX A Otilde -30\\r\\nKPX A Q -30\\r\\nKPX A T -120\\r\\nKPX A Tcaron -120\\r\\nKPX A Tcommaaccent -120\\r\\nKPX A U -50\\r\\nKPX A Uacute -50\\r\\nKPX A Ucircumflex -50\\r\\nKPX A Udieresis -50\\r\\nKPX A Ugrave -50\\r\\nKPX A Uhungarumlaut -50\\r\\nKPX A Umacron -50\\r\\nKPX A Uogonek -50\\r\\nKPX A Uring -50\\r\\nKPX A V -70\\r\\nKPX A W -50\\r\\nKPX A Y -100\\r\\nKPX A Yacute -100\\r\\nKPX A Ydieresis -100\\r\\nKPX A u -30\\r\\nKPX A uacute -30\\r\\nKPX A ucircumflex -30\\r\\nKPX A udieresis -30\\r\\nKPX A ugrave -30\\r\\nKPX A uhungarumlaut -30\\r\\nKPX A umacron -30\\r\\nKPX A uogonek -30\\r\\nKPX A uring -30\\r\\nKPX A v -40\\r\\nKPX A w -40\\r\\nKPX A y -40\\r\\nKPX A yacute -40\\r\\nKPX A ydieresis -40\\r\\nKPX Aacute C -30\\r\\nKPX Aacute Cacute -30\\r\\nKPX Aacute Ccaron -30\\r\\nKPX Aacute Ccedilla -30\\r\\nKPX Aacute G -30\\r\\nKPX Aacute Gbreve -30\\r\\nKPX Aacute Gcommaaccent -30\\r\\nKPX Aacute O -30\\r\\nKPX Aacute Oacute -30\\r\\nKPX Aacute Ocircumflex -30\\r\\nKPX Aacute Odieresis -30\\r\\nKPX Aacute Ograve -30\\r\\nKPX Aacute Ohungarumlaut -30\\r\\nKPX Aacute Omacron -30\\r\\nKPX Aacute Oslash -30\\r\\nKPX Aacute Otilde -30\\r\\nKPX Aacute Q -30\\r\\nKPX Aacute T -120\\r\\nKPX Aacute Tcaron -120\\r\\nKPX Aacute Tcommaaccent -120\\r\\nKPX Aacute U -50\\r\\nKPX Aacute Uacute -50\\r\\nKPX Aacute Ucircumflex -50\\r\\nKPX Aacute Udieresis -50\\r\\nKPX Aacute Ugrave -50\\r\\nKPX Aacute Uhungarumlaut -50\\r\\nKPX Aacute Umacron -50\\r\\nKPX Aacute Uogonek -50\\r\\nKPX Aacute Uring -50\\r\\nKPX Aacute V -70\\r\\nKPX Aacute W -50\\r\\nKPX Aacute Y -100\\r\\nKPX Aacute Yacute -100\\r\\nKPX Aacute Ydieresis -100\\r\\nKPX Aacute u -30\\r\\nKPX Aacute uacute -30\\r\\nKPX Aacute ucircumflex -30\\r\\nKPX Aacute udieresis -30\\r\\nKPX Aacute ugrave -30\\r\\nKPX Aacute uhungarumlaut -30\\r\\nKPX Aacute umacron -30\\r\\nKPX Aacute uogonek -30\\r\\nKPX Aacute uring -30\\r\\nKPX Aacute v -40\\r\\nKPX Aacute w -40\\r\\nKPX Aacute y -40\\r\\nKPX Aacute yacute -40\\r\\nKPX Aacute ydieresis -40\\r\\nKPX Abreve C -30\\r\\nKPX Abreve Cacute -30\\r\\nKPX Abreve Ccaron -30\\r\\nKPX Abreve Ccedilla -30\\r\\nKPX Abreve G -30\\r\\nKPX Abreve Gbreve -30\\r\\nKPX Abreve Gcommaaccent -30\\r\\nKPX Abreve O -30\\r\\nKPX Abreve Oacute -30\\r\\nKPX Abreve Ocircumflex -30\\r\\nKPX Abreve Odieresis -30\\r\\nKPX Abreve Ograve -30\\r\\nKPX Abreve Ohungarumlaut -30\\r\\nKPX Abreve Omacron -30\\r\\nKPX Abreve Oslash -30\\r\\nKPX Abreve Otilde -30\\r\\nKPX Abreve Q -30\\r\\nKPX Abreve T -120\\r\\nKPX Abreve Tcaron -120\\r\\nKPX Abreve Tcommaaccent -120\\r\\nKPX Abreve U -50\\r\\nKPX Abreve Uacute -50\\r\\nKPX Abreve Ucircumflex -50\\r\\nKPX Abreve Udieresis -50\\r\\nKPX Abreve Ugrave -50\\r\\nKPX Abreve Uhungarumlaut -50\\r\\nKPX Abreve Umacron -50\\r\\nKPX Abreve Uogonek -50\\r\\nKPX Abreve Uring -50\\r\\nKPX Abreve V -70\\r\\nKPX Abreve W -50\\r\\nKPX Abreve Y -100\\r\\nKPX Abreve Yacute -100\\r\\nKPX Abreve Ydieresis -100\\r\\nKPX Abreve u -30\\r\\nKPX Abreve uacute -30\\r\\nKPX Abreve ucircumflex -30\\r\\nKPX Abreve udieresis -30\\r\\nKPX Abreve ugrave -30\\r\\nKPX Abreve uhungarumlaut -30\\r\\nKPX Abreve umacron -30\\r\\nKPX Abreve uogonek -30\\r\\nKPX Abreve uring -30\\r\\nKPX Abreve v -40\\r\\nKPX Abreve w -40\\r\\nKPX Abreve y -40\\r\\nKPX Abreve yacute -40\\r\\nKPX Abreve ydieresis -40\\r\\nKPX Acircumflex C -30\\r\\nKPX Acircumflex Cacute -30\\r\\nKPX Acircumflex Ccaron -30\\r\\nKPX Acircumflex Ccedilla -30\\r\\nKPX Acircumflex G -30\\r\\nKPX Acircumflex Gbreve -30\\r\\nKPX Acircumflex Gcommaaccent -30\\r\\nKPX Acircumflex O -30\\r\\nKPX Acircumflex Oacute -30\\r\\nKPX Acircumflex Ocircumflex -30\\r\\nKPX Acircumflex Odieresis -30\\r\\nKPX Acircumflex Ograve -30\\r\\nKPX Acircumflex Ohungarumlaut -30\\r\\nKPX Acircumflex Omacron -30\\r\\nKPX Acircumflex Oslash -30\\r\\nKPX Acircumflex Otilde -30\\r\\nKPX Acircumflex Q -30\\r\\nKPX Acircumflex T -120\\r\\nKPX Acircumflex Tcaron -120\\r\\nKPX Acircumflex Tcommaaccent -120\\r\\nKPX Acircumflex U -50\\r\\nKPX Acircumflex Uacute -50\\r\\nKPX Acircumflex Ucircumflex -50\\r\\nKPX Acircumflex Udieresis -50\\r\\nKPX Acircumflex Ugrave -50\\r\\nKPX Acircumflex Uhungarumlaut -50\\r\\nKPX Acircumflex Umacron -50\\r\\nKPX Acircumflex Uogonek -50\\r\\nKPX Acircumflex Uring -50\\r\\nKPX Acircumflex V -70\\r\\nKPX Acircumflex W -50\\r\\nKPX Acircumflex Y -100\\r\\nKPX Acircumflex Yacute -100\\r\\nKPX Acircumflex Ydieresis -100\\r\\nKPX Acircumflex u -30\\r\\nKPX Acircumflex uacute -30\\r\\nKPX Acircumflex ucircumflex -30\\r\\nKPX Acircumflex udieresis -30\\r\\nKPX Acircumflex ugrave -30\\r\\nKPX Acircumflex uhungarumlaut -30\\r\\nKPX Acircumflex umacron -30\\r\\nKPX Acircumflex uogonek -30\\r\\nKPX Acircumflex uring -30\\r\\nKPX Acircumflex v -40\\r\\nKPX Acircumflex w -40\\r\\nKPX Acircumflex y -40\\r\\nKPX Acircumflex yacute -40\\r\\nKPX Acircumflex ydieresis -40\\r\\nKPX Adieresis C -30\\r\\nKPX Adieresis Cacute -30\\r\\nKPX Adieresis Ccaron -30\\r\\nKPX Adieresis Ccedilla -30\\r\\nKPX Adieresis G -30\\r\\nKPX Adieresis Gbreve -30\\r\\nKPX Adieresis Gcommaaccent -30\\r\\nKPX Adieresis O -30\\r\\nKPX Adieresis Oacute -30\\r\\nKPX Adieresis Ocircumflex -30\\r\\nKPX Adieresis Odieresis -30\\r\\nKPX Adieresis Ograve -30\\r\\nKPX Adieresis Ohungarumlaut -30\\r\\nKPX Adieresis Omacron -30\\r\\nKPX Adieresis Oslash -30\\r\\nKPX Adieresis Otilde -30\\r\\nKPX Adieresis Q -30\\r\\nKPX Adieresis T -120\\r\\nKPX Adieresis Tcaron -120\\r\\nKPX Adieresis Tcommaaccent -120\\r\\nKPX Adieresis U -50\\r\\nKPX Adieresis Uacute -50\\r\\nKPX Adieresis Ucircumflex -50\\r\\nKPX Adieresis Udieresis -50\\r\\nKPX Adieresis Ugrave -50\\r\\nKPX Adieresis Uhungarumlaut -50\\r\\nKPX Adieresis Umacron -50\\r\\nKPX Adieresis Uogonek -50\\r\\nKPX Adieresis Uring -50\\r\\nKPX Adieresis V -70\\r\\nKPX Adieresis W -50\\r\\nKPX Adieresis Y -100\\r\\nKPX Adieresis Yacute -100\\r\\nKPX Adieresis Ydieresis -100\\r\\nKPX Adieresis u -30\\r\\nKPX Adieresis uacute -30\\r\\nKPX Adieresis ucircumflex -30\\r\\nKPX Adieresis udieresis -30\\r\\nKPX Adieresis ugrave -30\\r\\nKPX Adieresis uhungarumlaut -30\\r\\nKPX Adieresis umacron -30\\r\\nKPX Adieresis uogonek -30\\r\\nKPX Adieresis uring -30\\r\\nKPX Adieresis v -40\\r\\nKPX Adieresis w -40\\r\\nKPX Adieresis y -40\\r\\nKPX Adieresis yacute -40\\r\\nKPX Adieresis ydieresis -40\\r\\nKPX Agrave C -30\\r\\nKPX Agrave Cacute -30\\r\\nKPX Agrave Ccaron -30\\r\\nKPX Agrave Ccedilla -30\\r\\nKPX Agrave G -30\\r\\nKPX Agrave Gbreve -30\\r\\nKPX Agrave Gcommaaccent -30\\r\\nKPX Agrave O -30\\r\\nKPX Agrave Oacute -30\\r\\nKPX Agrave Ocircumflex -30\\r\\nKPX Agrave Odieresis -30\\r\\nKPX Agrave Ograve -30\\r\\nKPX Agrave Ohungarumlaut -30\\r\\nKPX Agrave Omacron -30\\r\\nKPX Agrave Oslash -30\\r\\nKPX Agrave Otilde -30\\r\\nKPX Agrave Q -30\\r\\nKPX Agrave T -120\\r\\nKPX Agrave Tcaron -120\\r\\nKPX Agrave Tcommaaccent -120\\r\\nKPX Agrave U -50\\r\\nKPX Agrave Uacute -50\\r\\nKPX Agrave Ucircumflex -50\\r\\nKPX Agrave Udieresis -50\\r\\nKPX Agrave Ugrave -50\\r\\nKPX Agrave Uhungarumlaut -50\\r\\nKPX Agrave Umacron -50\\r\\nKPX Agrave Uogonek -50\\r\\nKPX Agrave Uring -50\\r\\nKPX Agrave V -70\\r\\nKPX Agrave W -50\\r\\nKPX Agrave Y -100\\r\\nKPX Agrave Yacute -100\\r\\nKPX Agrave Ydieresis -100\\r\\nKPX Agrave u -30\\r\\nKPX Agrave uacute -30\\r\\nKPX Agrave ucircumflex -30\\r\\nKPX Agrave udieresis -30\\r\\nKPX Agrave ugrave -30\\r\\nKPX Agrave uhungarumlaut -30\\r\\nKPX Agrave umacron -30\\r\\nKPX Agrave uogonek -30\\r\\nKPX Agrave uring -30\\r\\nKPX Agrave v -40\\r\\nKPX Agrave w -40\\r\\nKPX Agrave y -40\\r\\nKPX Agrave yacute -40\\r\\nKPX Agrave ydieresis -40\\r\\nKPX Amacron C -30\\r\\nKPX Amacron Cacute -30\\r\\nKPX Amacron Ccaron -30\\r\\nKPX Amacron Ccedilla -30\\r\\nKPX Amacron G -30\\r\\nKPX Amacron Gbreve -30\\r\\nKPX Amacron Gcommaaccent -30\\r\\nKPX Amacron O -30\\r\\nKPX Amacron Oacute -30\\r\\nKPX Amacron Ocircumflex -30\\r\\nKPX Amacron Odieresis -30\\r\\nKPX Amacron Ograve -30\\r\\nKPX Amacron Ohungarumlaut -30\\r\\nKPX Amacron Omacron -30\\r\\nKPX Amacron Oslash -30\\r\\nKPX Amacron Otilde -30\\r\\nKPX Amacron Q -30\\r\\nKPX Amacron T -120\\r\\nKPX Amacron Tcaron -120\\r\\nKPX Amacron Tcommaaccent -120\\r\\nKPX Amacron U -50\\r\\nKPX Amacron Uacute -50\\r\\nKPX Amacron Ucircumflex -50\\r\\nKPX Amacron Udieresis -50\\r\\nKPX Amacron Ugrave -50\\r\\nKPX Amacron Uhungarumlaut -50\\r\\nKPX Amacron Umacron -50\\r\\nKPX Amacron Uogonek -50\\r\\nKPX Amacron Uring -50\\r\\nKPX Amacron V -70\\r\\nKPX Amacron W -50\\r\\nKPX Amacron Y -100\\r\\nKPX Amacron Yacute -100\\r\\nKPX Amacron Ydieresis -100\\r\\nKPX Amacron u -30\\r\\nKPX Amacron uacute -30\\r\\nKPX Amacron ucircumflex -30\\r\\nKPX Amacron udieresis -30\\r\\nKPX Amacron ugrave -30\\r\\nKPX Amacron uhungarumlaut -30\\r\\nKPX Amacron umacron -30\\r\\nKPX Amacron uogonek -30\\r\\nKPX Amacron uring -30\\r\\nKPX Amacron v -40\\r\\nKPX Amacron w -40\\r\\nKPX Amacron y -40\\r\\nKPX Amacron yacute -40\\r\\nKPX Amacron ydieresis -40\\r\\nKPX Aogonek C -30\\r\\nKPX Aogonek Cacute -30\\r\\nKPX Aogonek Ccaron -30\\r\\nKPX Aogonek Ccedilla -30\\r\\nKPX Aogonek G -30\\r\\nKPX Aogonek Gbreve -30\\r\\nKPX Aogonek Gcommaaccent -30\\r\\nKPX Aogonek O -30\\r\\nKPX Aogonek Oacute -30\\r\\nKPX Aogonek Ocircumflex -30\\r\\nKPX Aogonek Odieresis -30\\r\\nKPX Aogonek Ograve -30\\r\\nKPX Aogonek Ohungarumlaut -30\\r\\nKPX Aogonek Omacron -30\\r\\nKPX Aogonek Oslash -30\\r\\nKPX Aogonek Otilde -30\\r\\nKPX Aogonek Q -30\\r\\nKPX Aogonek T -120\\r\\nKPX Aogonek Tcaron -120\\r\\nKPX Aogonek Tcommaaccent -120\\r\\nKPX Aogonek U -50\\r\\nKPX Aogonek Uacute -50\\r\\nKPX Aogonek Ucircumflex -50\\r\\nKPX Aogonek Udieresis -50\\r\\nKPX Aogonek Ugrave -50\\r\\nKPX Aogonek Uhungarumlaut -50\\r\\nKPX Aogonek Umacron -50\\r\\nKPX Aogonek Uogonek -50\\r\\nKPX Aogonek Uring -50\\r\\nKPX Aogonek V -70\\r\\nKPX Aogonek W -50\\r\\nKPX Aogonek Y -100\\r\\nKPX Aogonek Yacute -100\\r\\nKPX Aogonek Ydieresis -100\\r\\nKPX Aogonek u -30\\r\\nKPX Aogonek uacute -30\\r\\nKPX Aogonek ucircumflex -30\\r\\nKPX Aogonek udieresis -30\\r\\nKPX Aogonek ugrave -30\\r\\nKPX Aogonek uhungarumlaut -30\\r\\nKPX Aogonek umacron -30\\r\\nKPX Aogonek uogonek -30\\r\\nKPX Aogonek uring -30\\r\\nKPX Aogonek v -40\\r\\nKPX Aogonek w -40\\r\\nKPX Aogonek y -40\\r\\nKPX Aogonek yacute -40\\r\\nKPX Aogonek ydieresis -40\\r\\nKPX Aring C -30\\r\\nKPX Aring Cacute -30\\r\\nKPX Aring Ccaron -30\\r\\nKPX Aring Ccedilla -30\\r\\nKPX Aring G -30\\r\\nKPX Aring Gbreve -30\\r\\nKPX Aring Gcommaaccent -30\\r\\nKPX Aring O -30\\r\\nKPX Aring Oacute -30\\r\\nKPX Aring Ocircumflex -30\\r\\nKPX Aring Odieresis -30\\r\\nKPX Aring Ograve -30\\r\\nKPX Aring Ohungarumlaut -30\\r\\nKPX Aring Omacron -30\\r\\nKPX Aring Oslash -30\\r\\nKPX Aring Otilde -30\\r\\nKPX Aring Q -30\\r\\nKPX Aring T -120\\r\\nKPX Aring Tcaron -120\\r\\nKPX Aring Tcommaaccent -120\\r\\nKPX Aring U -50\\r\\nKPX Aring Uacute -50\\r\\nKPX Aring Ucircumflex -50\\r\\nKPX Aring Udieresis -50\\r\\nKPX Aring Ugrave -50\\r\\nKPX Aring Uhungarumlaut -50\\r\\nKPX Aring Umacron -50\\r\\nKPX Aring Uogonek -50\\r\\nKPX Aring Uring -50\\r\\nKPX Aring V -70\\r\\nKPX Aring W -50\\r\\nKPX Aring Y -100\\r\\nKPX Aring Yacute -100\\r\\nKPX Aring Ydieresis -100\\r\\nKPX Aring u -30\\r\\nKPX Aring uacute -30\\r\\nKPX Aring ucircumflex -30\\r\\nKPX Aring udieresis -30\\r\\nKPX Aring ugrave -30\\r\\nKPX Aring uhungarumlaut -30\\r\\nKPX Aring umacron -30\\r\\nKPX Aring uogonek -30\\r\\nKPX Aring uring -30\\r\\nKPX Aring v -40\\r\\nKPX Aring w -40\\r\\nKPX Aring y -40\\r\\nKPX Aring yacute -40\\r\\nKPX Aring ydieresis -40\\r\\nKPX Atilde C -30\\r\\nKPX Atilde Cacute -30\\r\\nKPX Atilde Ccaron -30\\r\\nKPX Atilde Ccedilla -30\\r\\nKPX Atilde G -30\\r\\nKPX Atilde Gbreve -30\\r\\nKPX Atilde Gcommaaccent -30\\r\\nKPX Atilde O -30\\r\\nKPX Atilde Oacute -30\\r\\nKPX Atilde Ocircumflex -30\\r\\nKPX Atilde Odieresis -30\\r\\nKPX Atilde Ograve -30\\r\\nKPX Atilde Ohungarumlaut -30\\r\\nKPX Atilde Omacron -30\\r\\nKPX Atilde Oslash -30\\r\\nKPX Atilde Otilde -30\\r\\nKPX Atilde Q -30\\r\\nKPX Atilde T -120\\r\\nKPX Atilde Tcaron -120\\r\\nKPX Atilde Tcommaaccent -120\\r\\nKPX Atilde U -50\\r\\nKPX Atilde Uacute -50\\r\\nKPX Atilde Ucircumflex -50\\r\\nKPX Atilde Udieresis -50\\r\\nKPX Atilde Ugrave -50\\r\\nKPX Atilde Uhungarumlaut -50\\r\\nKPX Atilde Umacron -50\\r\\nKPX Atilde Uogonek -50\\r\\nKPX Atilde Uring -50\\r\\nKPX Atilde V -70\\r\\nKPX Atilde W -50\\r\\nKPX Atilde Y -100\\r\\nKPX Atilde Yacute -100\\r\\nKPX Atilde Ydieresis -100\\r\\nKPX Atilde u -30\\r\\nKPX Atilde uacute -30\\r\\nKPX Atilde ucircumflex -30\\r\\nKPX Atilde udieresis -30\\r\\nKPX Atilde ugrave -30\\r\\nKPX Atilde uhungarumlaut -30\\r\\nKPX Atilde umacron -30\\r\\nKPX Atilde uogonek -30\\r\\nKPX Atilde uring -30\\r\\nKPX Atilde v -40\\r\\nKPX Atilde w -40\\r\\nKPX Atilde y -40\\r\\nKPX Atilde yacute -40\\r\\nKPX Atilde ydieresis -40\\r\\nKPX B U -10\\r\\nKPX B Uacute -10\\r\\nKPX B Ucircumflex -10\\r\\nKPX B Udieresis -10\\r\\nKPX B Ugrave -10\\r\\nKPX B Uhungarumlaut -10\\r\\nKPX B Umacron -10\\r\\nKPX B Uogonek -10\\r\\nKPX B Uring -10\\r\\nKPX B comma -20\\r\\nKPX B period -20\\r\\nKPX C comma -30\\r\\nKPX C period -30\\r\\nKPX Cacute comma -30\\r\\nKPX Cacute period -30\\r\\nKPX Ccaron comma -30\\r\\nKPX Ccaron period -30\\r\\nKPX Ccedilla comma -30\\r\\nKPX Ccedilla period -30\\r\\nKPX D A -40\\r\\nKPX D Aacute -40\\r\\nKPX D Abreve -40\\r\\nKPX D Acircumflex -40\\r\\nKPX D Adieresis -40\\r\\nKPX D Agrave -40\\r\\nKPX D Amacron -40\\r\\nKPX D Aogonek -40\\r\\nKPX D Aring -40\\r\\nKPX D Atilde -40\\r\\nKPX D V -70\\r\\nKPX D W -40\\r\\nKPX D Y -90\\r\\nKPX D Yacute -90\\r\\nKPX D Ydieresis -90\\r\\nKPX D comma -70\\r\\nKPX D period -70\\r\\nKPX Dcaron A -40\\r\\nKPX Dcaron Aacute -40\\r\\nKPX Dcaron Abreve -40\\r\\nKPX Dcaron Acircumflex -40\\r\\nKPX Dcaron Adieresis -40\\r\\nKPX Dcaron Agrave -40\\r\\nKPX Dcaron Amacron -40\\r\\nKPX Dcaron Aogonek -40\\r\\nKPX Dcaron Aring -40\\r\\nKPX Dcaron Atilde -40\\r\\nKPX Dcaron V -70\\r\\nKPX Dcaron W -40\\r\\nKPX Dcaron Y -90\\r\\nKPX Dcaron Yacute -90\\r\\nKPX Dcaron Ydieresis -90\\r\\nKPX Dcaron comma -70\\r\\nKPX Dcaron period -70\\r\\nKPX Dcroat A -40\\r\\nKPX Dcroat Aacute -40\\r\\nKPX Dcroat Abreve -40\\r\\nKPX Dcroat Acircumflex -40\\r\\nKPX Dcroat Adieresis -40\\r\\nKPX Dcroat Agrave -40\\r\\nKPX Dcroat Amacron -40\\r\\nKPX Dcroat Aogonek -40\\r\\nKPX Dcroat Aring -40\\r\\nKPX Dcroat Atilde -40\\r\\nKPX Dcroat V -70\\r\\nKPX Dcroat W -40\\r\\nKPX Dcroat Y -90\\r\\nKPX Dcroat Yacute -90\\r\\nKPX Dcroat Ydieresis -90\\r\\nKPX Dcroat comma -70\\r\\nKPX Dcroat period -70\\r\\nKPX F A -80\\r\\nKPX F Aacute -80\\r\\nKPX F Abreve -80\\r\\nKPX F Acircumflex -80\\r\\nKPX F Adieresis -80\\r\\nKPX F Agrave -80\\r\\nKPX F Amacron -80\\r\\nKPX F Aogonek -80\\r\\nKPX F Aring -80\\r\\nKPX F Atilde -80\\r\\nKPX F a -50\\r\\nKPX F aacute -50\\r\\nKPX F abreve -50\\r\\nKPX F acircumflex -50\\r\\nKPX F adieresis -50\\r\\nKPX F agrave -50\\r\\nKPX F amacron -50\\r\\nKPX F aogonek -50\\r\\nKPX F aring -50\\r\\nKPX F atilde -50\\r\\nKPX F comma -150\\r\\nKPX F e -30\\r\\nKPX F eacute -30\\r\\nKPX F ecaron -30\\r\\nKPX F ecircumflex -30\\r\\nKPX F edieresis -30\\r\\nKPX F edotaccent -30\\r\\nKPX F egrave -30\\r\\nKPX F emacron -30\\r\\nKPX F eogonek -30\\r\\nKPX F o -30\\r\\nKPX F oacute -30\\r\\nKPX F ocircumflex -30\\r\\nKPX F odieresis -30\\r\\nKPX F ograve -30\\r\\nKPX F ohungarumlaut -30\\r\\nKPX F omacron -30\\r\\nKPX F oslash -30\\r\\nKPX F otilde -30\\r\\nKPX F period -150\\r\\nKPX F r -45\\r\\nKPX F racute -45\\r\\nKPX F rcaron -45\\r\\nKPX F rcommaaccent -45\\r\\nKPX J A -20\\r\\nKPX J Aacute -20\\r\\nKPX J Abreve -20\\r\\nKPX J Acircumflex -20\\r\\nKPX J Adieresis -20\\r\\nKPX J Agrave -20\\r\\nKPX J Amacron -20\\r\\nKPX J Aogonek -20\\r\\nKPX J Aring -20\\r\\nKPX J Atilde -20\\r\\nKPX J a -20\\r\\nKPX J aacute -20\\r\\nKPX J abreve -20\\r\\nKPX J acircumflex -20\\r\\nKPX J adieresis -20\\r\\nKPX J agrave -20\\r\\nKPX J amacron -20\\r\\nKPX J aogonek -20\\r\\nKPX J aring -20\\r\\nKPX J atilde -20\\r\\nKPX J comma -30\\r\\nKPX J period -30\\r\\nKPX J u -20\\r\\nKPX J uacute -20\\r\\nKPX J ucircumflex -20\\r\\nKPX J udieresis -20\\r\\nKPX J ugrave -20\\r\\nKPX J uhungarumlaut -20\\r\\nKPX J umacron -20\\r\\nKPX J uogonek -20\\r\\nKPX J uring -20\\r\\nKPX K O -50\\r\\nKPX K Oacute -50\\r\\nKPX K Ocircumflex -50\\r\\nKPX K Odieresis -50\\r\\nKPX K Ograve -50\\r\\nKPX K Ohungarumlaut -50\\r\\nKPX K Omacron -50\\r\\nKPX K Oslash -50\\r\\nKPX K Otilde -50\\r\\nKPX K e -40\\r\\nKPX K eacute -40\\r\\nKPX K ecaron -40\\r\\nKPX K ecircumflex -40\\r\\nKPX K edieresis -40\\r\\nKPX K edotaccent -40\\r\\nKPX K egrave -40\\r\\nKPX K emacron -40\\r\\nKPX K eogonek -40\\r\\nKPX K o -40\\r\\nKPX K oacute -40\\r\\nKPX K ocircumflex -40\\r\\nKPX K odieresis -40\\r\\nKPX K ograve -40\\r\\nKPX K ohungarumlaut -40\\r\\nKPX K omacron -40\\r\\nKPX K oslash -40\\r\\nKPX K otilde -40\\r\\nKPX K u -30\\r\\nKPX K uacute -30\\r\\nKPX K ucircumflex -30\\r\\nKPX K udieresis -30\\r\\nKPX K ugrave -30\\r\\nKPX K uhungarumlaut -30\\r\\nKPX K umacron -30\\r\\nKPX K uogonek -30\\r\\nKPX K uring -30\\r\\nKPX K y -50\\r\\nKPX K yacute -50\\r\\nKPX K ydieresis -50\\r\\nKPX Kcommaaccent O -50\\r\\nKPX Kcommaaccent Oacute -50\\r\\nKPX Kcommaaccent Ocircumflex -50\\r\\nKPX Kcommaaccent Odieresis -50\\r\\nKPX Kcommaaccent Ograve -50\\r\\nKPX Kcommaaccent Ohungarumlaut -50\\r\\nKPX Kcommaaccent Omacron -50\\r\\nKPX Kcommaaccent Oslash -50\\r\\nKPX Kcommaaccent Otilde -50\\r\\nKPX Kcommaaccent e -40\\r\\nKPX Kcommaaccent eacute -40\\r\\nKPX Kcommaaccent ecaron -40\\r\\nKPX Kcommaaccent ecircumflex -40\\r\\nKPX Kcommaaccent edieresis -40\\r\\nKPX Kcommaaccent edotaccent -40\\r\\nKPX Kcommaaccent egrave -40\\r\\nKPX Kcommaaccent emacron -40\\r\\nKPX Kcommaaccent eogonek -40\\r\\nKPX Kcommaaccent o -40\\r\\nKPX Kcommaaccent oacute -40\\r\\nKPX Kcommaaccent ocircumflex -40\\r\\nKPX Kcommaaccent odieresis -40\\r\\nKPX Kcommaaccent ograve -40\\r\\nKPX Kcommaaccent ohungarumlaut -40\\r\\nKPX Kcommaaccent omacron -40\\r\\nKPX Kcommaaccent oslash -40\\r\\nKPX Kcommaaccent otilde -40\\r\\nKPX Kcommaaccent u -30\\r\\nKPX Kcommaaccent uacute -30\\r\\nKPX Kcommaaccent ucircumflex -30\\r\\nKPX Kcommaaccent udieresis -30\\r\\nKPX Kcommaaccent ugrave -30\\r\\nKPX Kcommaaccent uhungarumlaut -30\\r\\nKPX Kcommaaccent umacron -30\\r\\nKPX Kcommaaccent uogonek -30\\r\\nKPX Kcommaaccent uring -30\\r\\nKPX Kcommaaccent y -50\\r\\nKPX Kcommaaccent yacute -50\\r\\nKPX Kcommaaccent ydieresis -50\\r\\nKPX L T -110\\r\\nKPX L Tcaron -110\\r\\nKPX L Tcommaaccent -110\\r\\nKPX L V -110\\r\\nKPX L W -70\\r\\nKPX L Y -140\\r\\nKPX L Yacute -140\\r\\nKPX L Ydieresis -140\\r\\nKPX L quotedblright -140\\r\\nKPX L quoteright -160\\r\\nKPX L y -30\\r\\nKPX L yacute -30\\r\\nKPX L ydieresis -30\\r\\nKPX Lacute T -110\\r\\nKPX Lacute Tcaron -110\\r\\nKPX Lacute Tcommaaccent -110\\r\\nKPX Lacute V -110\\r\\nKPX Lacute W -70\\r\\nKPX Lacute Y -140\\r\\nKPX Lacute Yacute -140\\r\\nKPX Lacute Ydieresis -140\\r\\nKPX Lacute quotedblright -140\\r\\nKPX Lacute quoteright -160\\r\\nKPX Lacute y -30\\r\\nKPX Lacute yacute -30\\r\\nKPX Lacute ydieresis -30\\r\\nKPX Lcaron T -110\\r\\nKPX Lcaron Tcaron -110\\r\\nKPX Lcaron Tcommaaccent -110\\r\\nKPX Lcaron V -110\\r\\nKPX Lcaron W -70\\r\\nKPX Lcaron Y -140\\r\\nKPX Lcaron Yacute -140\\r\\nKPX Lcaron Ydieresis -140\\r\\nKPX Lcaron quotedblright -140\\r\\nKPX Lcaron quoteright -160\\r\\nKPX Lcaron y -30\\r\\nKPX Lcaron yacute -30\\r\\nKPX Lcaron ydieresis -30\\r\\nKPX Lcommaaccent T -110\\r\\nKPX Lcommaaccent Tcaron -110\\r\\nKPX Lcommaaccent Tcommaaccent -110\\r\\nKPX Lcommaaccent V -110\\r\\nKPX Lcommaaccent W -70\\r\\nKPX Lcommaaccent Y -140\\r\\nKPX Lcommaaccent Yacute -140\\r\\nKPX Lcommaaccent Ydieresis -140\\r\\nKPX Lcommaaccent quotedblright -140\\r\\nKPX Lcommaaccent quoteright -160\\r\\nKPX Lcommaaccent y -30\\r\\nKPX Lcommaaccent yacute -30\\r\\nKPX Lcommaaccent ydieresis -30\\r\\nKPX Lslash T -110\\r\\nKPX Lslash Tcaron -110\\r\\nKPX Lslash Tcommaaccent -110\\r\\nKPX Lslash V -110\\r\\nKPX Lslash W -70\\r\\nKPX Lslash Y -140\\r\\nKPX Lslash Yacute -140\\r\\nKPX Lslash Ydieresis -140\\r\\nKPX Lslash quotedblright -140\\r\\nKPX Lslash quoteright -160\\r\\nKPX Lslash y -30\\r\\nKPX Lslash yacute -30\\r\\nKPX Lslash ydieresis -30\\r\\nKPX O A -20\\r\\nKPX O Aacute -20\\r\\nKPX O Abreve -20\\r\\nKPX O Acircumflex -20\\r\\nKPX O Adieresis -20\\r\\nKPX O Agrave -20\\r\\nKPX O Amacron -20\\r\\nKPX O Aogonek -20\\r\\nKPX O Aring -20\\r\\nKPX O Atilde -20\\r\\nKPX O T -40\\r\\nKPX O Tcaron -40\\r\\nKPX O Tcommaaccent -40\\r\\nKPX O V -50\\r\\nKPX O W -30\\r\\nKPX O X -60\\r\\nKPX O Y -70\\r\\nKPX O Yacute -70\\r\\nKPX O Ydieresis -70\\r\\nKPX O comma -40\\r\\nKPX O period -40\\r\\nKPX Oacute A -20\\r\\nKPX Oacute Aacute -20\\r\\nKPX Oacute Abreve -20\\r\\nKPX Oacute Acircumflex -20\\r\\nKPX Oacute Adieresis -20\\r\\nKPX Oacute Agrave -20\\r\\nKPX Oacute Amacron -20\\r\\nKPX Oacute Aogonek -20\\r\\nKPX Oacute Aring -20\\r\\nKPX Oacute Atilde -20\\r\\nKPX Oacute T -40\\r\\nKPX Oacute Tcaron -40\\r\\nKPX Oacute Tcommaaccent -40\\r\\nKPX Oacute V -50\\r\\nKPX Oacute W -30\\r\\nKPX Oacute X -60\\r\\nKPX Oacute Y -70\\r\\nKPX Oacute Yacute -70\\r\\nKPX Oacute Ydieresis -70\\r\\nKPX Oacute comma -40\\r\\nKPX Oacute period -40\\r\\nKPX Ocircumflex A -20\\r\\nKPX Ocircumflex Aacute -20\\r\\nKPX Ocircumflex Abreve -20\\r\\nKPX Ocircumflex Acircumflex -20\\r\\nKPX Ocircumflex Adieresis -20\\r\\nKPX Ocircumflex Agrave -20\\r\\nKPX Ocircumflex Amacron -20\\r\\nKPX Ocircumflex Aogonek -20\\r\\nKPX Ocircumflex Aring -20\\r\\nKPX Ocircumflex Atilde -20\\r\\nKPX Ocircumflex T -40\\r\\nKPX Ocircumflex Tcaron -40\\r\\nKPX Ocircumflex Tcommaaccent -40\\r\\nKPX Ocircumflex V -50\\r\\nKPX Ocircumflex W -30\\r\\nKPX Ocircumflex X -60\\r\\nKPX Ocircumflex Y -70\\r\\nKPX Ocircumflex Yacute -70\\r\\nKPX Ocircumflex Ydieresis -70\\r\\nKPX Ocircumflex comma -40\\r\\nKPX Ocircumflex period -40\\r\\nKPX Odieresis A -20\\r\\nKPX Odieresis Aacute -20\\r\\nKPX Odieresis Abreve -20\\r\\nKPX Odieresis Acircumflex -20\\r\\nKPX Odieresis Adieresis -20\\r\\nKPX Odieresis Agrave -20\\r\\nKPX Odieresis Amacron -20\\r\\nKPX Odieresis Aogonek -20\\r\\nKPX Odieresis Aring -20\\r\\nKPX Odieresis Atilde -20\\r\\nKPX Odieresis T -40\\r\\nKPX Odieresis Tcaron -40\\r\\nKPX Odieresis Tcommaaccent -40\\r\\nKPX Odieresis V -50\\r\\nKPX Odieresis W -30\\r\\nKPX Odieresis X -60\\r\\nKPX Odieresis Y -70\\r\\nKPX Odieresis Yacute -70\\r\\nKPX Odieresis Ydieresis -70\\r\\nKPX Odieresis comma -40\\r\\nKPX Odieresis period -40\\r\\nKPX Ograve A -20\\r\\nKPX Ograve Aacute -20\\r\\nKPX Ograve Abreve -20\\r\\nKPX Ograve Acircumflex -20\\r\\nKPX Ograve Adieresis -20\\r\\nKPX Ograve Agrave -20\\r\\nKPX Ograve Amacron -20\\r\\nKPX Ograve Aogonek -20\\r\\nKPX Ograve Aring -20\\r\\nKPX Ograve Atilde -20\\r\\nKPX Ograve T -40\\r\\nKPX Ograve Tcaron -40\\r\\nKPX Ograve Tcommaaccent -40\\r\\nKPX Ograve V -50\\r\\nKPX Ograve W -30\\r\\nKPX Ograve X -60\\r\\nKPX Ograve Y -70\\r\\nKPX Ograve Yacute -70\\r\\nKPX Ograve Ydieresis -70\\r\\nKPX Ograve comma -40\\r\\nKPX Ograve period -40\\r\\nKPX Ohungarumlaut A -20\\r\\nKPX Ohungarumlaut Aacute -20\\r\\nKPX Ohungarumlaut Abreve -20\\r\\nKPX Ohungarumlaut Acircumflex -20\\r\\nKPX Ohungarumlaut Adieresis -20\\r\\nKPX Ohungarumlaut Agrave -20\\r\\nKPX Ohungarumlaut Amacron -20\\r\\nKPX Ohungarumlaut Aogonek -20\\r\\nKPX Ohungarumlaut Aring -20\\r\\nKPX Ohungarumlaut Atilde -20\\r\\nKPX Ohungarumlaut T -40\\r\\nKPX Ohungarumlaut Tcaron -40\\r\\nKPX Ohungarumlaut Tcommaaccent -40\\r\\nKPX Ohungarumlaut V -50\\r\\nKPX Ohungarumlaut W -30\\r\\nKPX Ohungarumlaut X -60\\r\\nKPX Ohungarumlaut Y -70\\r\\nKPX Ohungarumlaut Yacute -70\\r\\nKPX Ohungarumlaut Ydieresis -70\\r\\nKPX Ohungarumlaut comma -40\\r\\nKPX Ohungarumlaut period -40\\r\\nKPX Omacron A -20\\r\\nKPX Omacron Aacute -20\\r\\nKPX Omacron Abreve -20\\r\\nKPX Omacron Acircumflex -20\\r\\nKPX Omacron Adieresis -20\\r\\nKPX Omacron Agrave -20\\r\\nKPX Omacron Amacron -20\\r\\nKPX Omacron Aogonek -20\\r\\nKPX Omacron Aring -20\\r\\nKPX Omacron Atilde -20\\r\\nKPX Omacron T -40\\r\\nKPX Omacron Tcaron -40\\r\\nKPX Omacron Tcommaaccent -40\\r\\nKPX Omacron V -50\\r\\nKPX Omacron W -30\\r\\nKPX Omacron X -60\\r\\nKPX Omacron Y -70\\r\\nKPX Omacron Yacute -70\\r\\nKPX Omacron Ydieresis -70\\r\\nKPX Omacron comma -40\\r\\nKPX Omacron period -40\\r\\nKPX Oslash A -20\\r\\nKPX Oslash Aacute -20\\r\\nKPX Oslash Abreve -20\\r\\nKPX Oslash Acircumflex -20\\r\\nKPX Oslash Adieresis -20\\r\\nKPX Oslash Agrave -20\\r\\nKPX Oslash Amacron -20\\r\\nKPX Oslash Aogonek -20\\r\\nKPX Oslash Aring -20\\r\\nKPX Oslash Atilde -20\\r\\nKPX Oslash T -40\\r\\nKPX Oslash Tcaron -40\\r\\nKPX Oslash Tcommaaccent -40\\r\\nKPX Oslash V -50\\r\\nKPX Oslash W -30\\r\\nKPX Oslash X -60\\r\\nKPX Oslash Y -70\\r\\nKPX Oslash Yacute -70\\r\\nKPX Oslash Ydieresis -70\\r\\nKPX Oslash comma -40\\r\\nKPX Oslash period -40\\r\\nKPX Otilde A -20\\r\\nKPX Otilde Aacute -20\\r\\nKPX Otilde Abreve -20\\r\\nKPX Otilde Acircumflex -20\\r\\nKPX Otilde Adieresis -20\\r\\nKPX Otilde Agrave -20\\r\\nKPX Otilde Amacron -20\\r\\nKPX Otilde Aogonek -20\\r\\nKPX Otilde Aring -20\\r\\nKPX Otilde Atilde -20\\r\\nKPX Otilde T -40\\r\\nKPX Otilde Tcaron -40\\r\\nKPX Otilde Tcommaaccent -40\\r\\nKPX Otilde V -50\\r\\nKPX Otilde W -30\\r\\nKPX Otilde X -60\\r\\nKPX Otilde Y -70\\r\\nKPX Otilde Yacute -70\\r\\nKPX Otilde Ydieresis -70\\r\\nKPX Otilde comma -40\\r\\nKPX Otilde period -40\\r\\nKPX P A -120\\r\\nKPX P Aacute -120\\r\\nKPX P Abreve -120\\r\\nKPX P Acircumflex -120\\r\\nKPX P Adieresis -120\\r\\nKPX P Agrave -120\\r\\nKPX P Amacron -120\\r\\nKPX P Aogonek -120\\r\\nKPX P Aring -120\\r\\nKPX P Atilde -120\\r\\nKPX P a -40\\r\\nKPX P aacute -40\\r\\nKPX P abreve -40\\r\\nKPX P acircumflex -40\\r\\nKPX P adieresis -40\\r\\nKPX P agrave -40\\r\\nKPX P amacron -40\\r\\nKPX P aogonek -40\\r\\nKPX P aring -40\\r\\nKPX P atilde -40\\r\\nKPX P comma -180\\r\\nKPX P e -50\\r\\nKPX P eacute -50\\r\\nKPX P ecaron -50\\r\\nKPX P ecircumflex -50\\r\\nKPX P edieresis -50\\r\\nKPX P edotaccent -50\\r\\nKPX P egrave -50\\r\\nKPX P emacron -50\\r\\nKPX P eogonek -50\\r\\nKPX P o -50\\r\\nKPX P oacute -50\\r\\nKPX P ocircumflex -50\\r\\nKPX P odieresis -50\\r\\nKPX P ograve -50\\r\\nKPX P ohungarumlaut -50\\r\\nKPX P omacron -50\\r\\nKPX P oslash -50\\r\\nKPX P otilde -50\\r\\nKPX P period -180\\r\\nKPX Q U -10\\r\\nKPX Q Uacute -10\\r\\nKPX Q Ucircumflex -10\\r\\nKPX Q Udieresis -10\\r\\nKPX Q Ugrave -10\\r\\nKPX Q Uhungarumlaut -10\\r\\nKPX Q Umacron -10\\r\\nKPX Q Uogonek -10\\r\\nKPX Q Uring -10\\r\\nKPX R O -20\\r\\nKPX R Oacute -20\\r\\nKPX R Ocircumflex -20\\r\\nKPX R Odieresis -20\\r\\nKPX R Ograve -20\\r\\nKPX R Ohungarumlaut -20\\r\\nKPX R Omacron -20\\r\\nKPX R Oslash -20\\r\\nKPX R Otilde -20\\r\\nKPX R T -30\\r\\nKPX R Tcaron -30\\r\\nKPX R Tcommaaccent -30\\r\\nKPX R U -40\\r\\nKPX R Uacute -40\\r\\nKPX R Ucircumflex -40\\r\\nKPX R Udieresis -40\\r\\nKPX R Ugrave -40\\r\\nKPX R Uhungarumlaut -40\\r\\nKPX R Umacron -40\\r\\nKPX R Uogonek -40\\r\\nKPX R Uring -40\\r\\nKPX R V -50\\r\\nKPX R W -30\\r\\nKPX R Y -50\\r\\nKPX R Yacute -50\\r\\nKPX R Ydieresis -50\\r\\nKPX Racute O -20\\r\\nKPX Racute Oacute -20\\r\\nKPX Racute Ocircumflex -20\\r\\nKPX Racute Odieresis -20\\r\\nKPX Racute Ograve -20\\r\\nKPX Racute Ohungarumlaut -20\\r\\nKPX Racute Omacron -20\\r\\nKPX Racute Oslash -20\\r\\nKPX Racute Otilde -20\\r\\nKPX Racute T -30\\r\\nKPX Racute Tcaron -30\\r\\nKPX Racute Tcommaaccent -30\\r\\nKPX Racute U -40\\r\\nKPX Racute Uacute -40\\r\\nKPX Racute Ucircumflex -40\\r\\nKPX Racute Udieresis -40\\r\\nKPX Racute Ugrave -40\\r\\nKPX Racute Uhungarumlaut -40\\r\\nKPX Racute Umacron -40\\r\\nKPX Racute Uogonek -40\\r\\nKPX Racute Uring -40\\r\\nKPX Racute V -50\\r\\nKPX Racute W -30\\r\\nKPX Racute Y -50\\r\\nKPX Racute Yacute -50\\r\\nKPX Racute Ydieresis -50\\r\\nKPX Rcaron O -20\\r\\nKPX Rcaron Oacute -20\\r\\nKPX Rcaron Ocircumflex -20\\r\\nKPX Rcaron Odieresis -20\\r\\nKPX Rcaron Ograve -20\\r\\nKPX Rcaron Ohungarumlaut -20\\r\\nKPX Rcaron Omacron -20\\r\\nKPX Rcaron Oslash -20\\r\\nKPX Rcaron Otilde -20\\r\\nKPX Rcaron T -30\\r\\nKPX Rcaron Tcaron -30\\r\\nKPX Rcaron Tcommaaccent -30\\r\\nKPX Rcaron U -40\\r\\nKPX Rcaron Uacute -40\\r\\nKPX Rcaron Ucircumflex -40\\r\\nKPX Rcaron Udieresis -40\\r\\nKPX Rcaron Ugrave -40\\r\\nKPX Rcaron Uhungarumlaut -40\\r\\nKPX Rcaron Umacron -40\\r\\nKPX Rcaron Uogonek -40\\r\\nKPX Rcaron Uring -40\\r\\nKPX Rcaron V -50\\r\\nKPX Rcaron W -30\\r\\nKPX Rcaron Y -50\\r\\nKPX Rcaron Yacute -50\\r\\nKPX Rcaron Ydieresis -50\\r\\nKPX Rcommaaccent O -20\\r\\nKPX Rcommaaccent Oacute -20\\r\\nKPX Rcommaaccent Ocircumflex -20\\r\\nKPX Rcommaaccent Odieresis -20\\r\\nKPX Rcommaaccent Ograve -20\\r\\nKPX Rcommaaccent Ohungarumlaut -20\\r\\nKPX Rcommaaccent Omacron -20\\r\\nKPX Rcommaaccent Oslash -20\\r\\nKPX Rcommaaccent Otilde -20\\r\\nKPX Rcommaaccent T -30\\r\\nKPX Rcommaaccent Tcaron -30\\r\\nKPX Rcommaaccent Tcommaaccent -30\\r\\nKPX Rcommaaccent U -40\\r\\nKPX Rcommaaccent Uacute -40\\r\\nKPX Rcommaaccent Ucircumflex -40\\r\\nKPX Rcommaaccent Udieresis -40\\r\\nKPX Rcommaaccent Ugrave -40\\r\\nKPX Rcommaaccent Uhungarumlaut -40\\r\\nKPX Rcommaaccent Umacron -40\\r\\nKPX Rcommaaccent Uogonek -40\\r\\nKPX Rcommaaccent Uring -40\\r\\nKPX Rcommaaccent V -50\\r\\nKPX Rcommaaccent W -30\\r\\nKPX Rcommaaccent Y -50\\r\\nKPX Rcommaaccent Yacute -50\\r\\nKPX Rcommaaccent Ydieresis -50\\r\\nKPX S comma -20\\r\\nKPX S period -20\\r\\nKPX Sacute comma -20\\r\\nKPX Sacute period -20\\r\\nKPX Scaron comma -20\\r\\nKPX Scaron period -20\\r\\nKPX Scedilla comma -20\\r\\nKPX Scedilla period -20\\r\\nKPX Scommaaccent comma -20\\r\\nKPX Scommaaccent period -20\\r\\nKPX T A -120\\r\\nKPX T Aacute -120\\r\\nKPX T Abreve -120\\r\\nKPX T Acircumflex -120\\r\\nKPX T Adieresis -120\\r\\nKPX T Agrave -120\\r\\nKPX T Amacron -120\\r\\nKPX T Aogonek -120\\r\\nKPX T Aring -120\\r\\nKPX T Atilde -120\\r\\nKPX T O -40\\r\\nKPX T Oacute -40\\r\\nKPX T Ocircumflex -40\\r\\nKPX T Odieresis -40\\r\\nKPX T Ograve -40\\r\\nKPX T Ohungarumlaut -40\\r\\nKPX T Omacron -40\\r\\nKPX T Oslash -40\\r\\nKPX T Otilde -40\\r\\nKPX T a -120\\r\\nKPX T aacute -120\\r\\nKPX T abreve -60\\r\\nKPX T acircumflex -120\\r\\nKPX T adieresis -120\\r\\nKPX T agrave -120\\r\\nKPX T amacron -60\\r\\nKPX T aogonek -120\\r\\nKPX T aring -120\\r\\nKPX T atilde -60\\r\\nKPX T colon -20\\r\\nKPX T comma -120\\r\\nKPX T e -120\\r\\nKPX T eacute -120\\r\\nKPX T ecaron -120\\r\\nKPX T ecircumflex -120\\r\\nKPX T edieresis -120\\r\\nKPX T edotaccent -120\\r\\nKPX T egrave -60\\r\\nKPX T emacron -60\\r\\nKPX T eogonek -120\\r\\nKPX T hyphen -140\\r\\nKPX T o -120\\r\\nKPX T oacute -120\\r\\nKPX T ocircumflex -120\\r\\nKPX T odieresis -120\\r\\nKPX T ograve -120\\r\\nKPX T ohungarumlaut -120\\r\\nKPX T omacron -60\\r\\nKPX T oslash -120\\r\\nKPX T otilde -60\\r\\nKPX T period -120\\r\\nKPX T r -120\\r\\nKPX T racute -120\\r\\nKPX T rcaron -120\\r\\nKPX T rcommaaccent -120\\r\\nKPX T semicolon -20\\r\\nKPX T u -120\\r\\nKPX T uacute -120\\r\\nKPX T ucircumflex -120\\r\\nKPX T udieresis -120\\r\\nKPX T ugrave -120\\r\\nKPX T uhungarumlaut -120\\r\\nKPX T umacron -60\\r\\nKPX T uogonek -120\\r\\nKPX T uring -120\\r\\nKPX T w -120\\r\\nKPX T y -120\\r\\nKPX T yacute -120\\r\\nKPX T ydieresis -60\\r\\nKPX Tcaron A -120\\r\\nKPX Tcaron Aacute -120\\r\\nKPX Tcaron Abreve -120\\r\\nKPX Tcaron Acircumflex -120\\r\\nKPX Tcaron Adieresis -120\\r\\nKPX Tcaron Agrave -120\\r\\nKPX Tcaron Amacron -120\\r\\nKPX Tcaron Aogonek -120\\r\\nKPX Tcaron Aring -120\\r\\nKPX Tcaron Atilde -120\\r\\nKPX Tcaron O -40\\r\\nKPX Tcaron Oacute -40\\r\\nKPX Tcaron Ocircumflex -40\\r\\nKPX Tcaron Odieresis -40\\r\\nKPX Tcaron Ograve -40\\r\\nKPX Tcaron Ohungarumlaut -40\\r\\nKPX Tcaron Omacron -40\\r\\nKPX Tcaron Oslash -40\\r\\nKPX Tcaron Otilde -40\\r\\nKPX Tcaron a -120\\r\\nKPX Tcaron aacute -120\\r\\nKPX Tcaron abreve -60\\r\\nKPX Tcaron acircumflex -120\\r\\nKPX Tcaron adieresis -120\\r\\nKPX Tcaron agrave -120\\r\\nKPX Tcaron amacron -60\\r\\nKPX Tcaron aogonek -120\\r\\nKPX Tcaron aring -120\\r\\nKPX Tcaron atilde -60\\r\\nKPX Tcaron colon -20\\r\\nKPX Tcaron comma -120\\r\\nKPX Tcaron e -120\\r\\nKPX Tcaron eacute -120\\r\\nKPX Tcaron ecaron -120\\r\\nKPX Tcaron ecircumflex -120\\r\\nKPX Tcaron edieresis -120\\r\\nKPX Tcaron edotaccent -120\\r\\nKPX Tcaron egrave -60\\r\\nKPX Tcaron emacron -60\\r\\nKPX Tcaron eogonek -120\\r\\nKPX Tcaron hyphen -140\\r\\nKPX Tcaron o -120\\r\\nKPX Tcaron oacute -120\\r\\nKPX Tcaron ocircumflex -120\\r\\nKPX Tcaron odieresis -120\\r\\nKPX Tcaron ograve -120\\r\\nKPX Tcaron ohungarumlaut -120\\r\\nKPX Tcaron omacron -60\\r\\nKPX Tcaron oslash -120\\r\\nKPX Tcaron otilde -60\\r\\nKPX Tcaron period -120\\r\\nKPX Tcaron r -120\\r\\nKPX Tcaron racute -120\\r\\nKPX Tcaron rcaron -120\\r\\nKPX Tcaron rcommaaccent -120\\r\\nKPX Tcaron semicolon -20\\r\\nKPX Tcaron u -120\\r\\nKPX Tcaron uacute -120\\r\\nKPX Tcaron ucircumflex -120\\r\\nKPX Tcaron udieresis -120\\r\\nKPX Tcaron ugrave -120\\r\\nKPX Tcaron uhungarumlaut -120\\r\\nKPX Tcaron umacron -60\\r\\nKPX Tcaron uogonek -120\\r\\nKPX Tcaron uring -120\\r\\nKPX Tcaron w -120\\r\\nKPX Tcaron y -120\\r\\nKPX Tcaron yacute -120\\r\\nKPX Tcaron ydieresis -60\\r\\nKPX Tcommaaccent A -120\\r\\nKPX Tcommaaccent Aacute -120\\r\\nKPX Tcommaaccent Abreve -120\\r\\nKPX Tcommaaccent Acircumflex -120\\r\\nKPX Tcommaaccent Adieresis -120\\r\\nKPX Tcommaaccent Agrave -120\\r\\nKPX Tcommaaccent Amacron -120\\r\\nKPX Tcommaaccent Aogonek -120\\r\\nKPX Tcommaaccent Aring -120\\r\\nKPX Tcommaaccent Atilde -120\\r\\nKPX Tcommaaccent O -40\\r\\nKPX Tcommaaccent Oacute -40\\r\\nKPX Tcommaaccent Ocircumflex -40\\r\\nKPX Tcommaaccent Odieresis -40\\r\\nKPX Tcommaaccent Ograve -40\\r\\nKPX Tcommaaccent Ohungarumlaut -40\\r\\nKPX Tcommaaccent Omacron -40\\r\\nKPX Tcommaaccent Oslash -40\\r\\nKPX Tcommaaccent Otilde -40\\r\\nKPX Tcommaaccent a -120\\r\\nKPX Tcommaaccent aacute -120\\r\\nKPX Tcommaaccent abreve -60\\r\\nKPX Tcommaaccent acircumflex -120\\r\\nKPX Tcommaaccent adieresis -120\\r\\nKPX Tcommaaccent agrave -120\\r\\nKPX Tcommaaccent amacron -60\\r\\nKPX Tcommaaccent aogonek -120\\r\\nKPX Tcommaaccent aring -120\\r\\nKPX Tcommaaccent atilde -60\\r\\nKPX Tcommaaccent colon -20\\r\\nKPX Tcommaaccent comma -120\\r\\nKPX Tcommaaccent e -120\\r\\nKPX Tcommaaccent eacute -120\\r\\nKPX Tcommaaccent ecaron -120\\r\\nKPX Tcommaaccent ecircumflex -120\\r\\nKPX Tcommaaccent edieresis -120\\r\\nKPX Tcommaaccent edotaccent -120\\r\\nKPX Tcommaaccent egrave -60\\r\\nKPX Tcommaaccent emacron -60\\r\\nKPX Tcommaaccent eogonek -120\\r\\nKPX Tcommaaccent hyphen -140\\r\\nKPX Tcommaaccent o -120\\r\\nKPX Tcommaaccent oacute -120\\r\\nKPX Tcommaaccent ocircumflex -120\\r\\nKPX Tcommaaccent odieresis -120\\r\\nKPX Tcommaaccent ograve -120\\r\\nKPX Tcommaaccent ohungarumlaut -120\\r\\nKPX Tcommaaccent omacron -60\\r\\nKPX Tcommaaccent oslash -120\\r\\nKPX Tcommaaccent otilde -60\\r\\nKPX Tcommaaccent period -120\\r\\nKPX Tcommaaccent r -120\\r\\nKPX Tcommaaccent racute -120\\r\\nKPX Tcommaaccent rcaron -120\\r\\nKPX Tcommaaccent rcommaaccent -120\\r\\nKPX Tcommaaccent semicolon -20\\r\\nKPX Tcommaaccent u -120\\r\\nKPX Tcommaaccent uacute -120\\r\\nKPX Tcommaaccent ucircumflex -120\\r\\nKPX Tcommaaccent udieresis -120\\r\\nKPX Tcommaaccent ugrave -120\\r\\nKPX Tcommaaccent uhungarumlaut -120\\r\\nKPX Tcommaaccent umacron -60\\r\\nKPX Tcommaaccent uogonek -120\\r\\nKPX Tcommaaccent uring -120\\r\\nKPX Tcommaaccent w -120\\r\\nKPX Tcommaaccent y -120\\r\\nKPX Tcommaaccent yacute -120\\r\\nKPX Tcommaaccent ydieresis -60\\r\\nKPX U A -40\\r\\nKPX U Aacute -40\\r\\nKPX U Abreve -40\\r\\nKPX U Acircumflex -40\\r\\nKPX U Adieresis -40\\r\\nKPX U Agrave -40\\r\\nKPX U Amacron -40\\r\\nKPX U Aogonek -40\\r\\nKPX U Aring -40\\r\\nKPX U Atilde -40\\r\\nKPX U comma -40\\r\\nKPX U period -40\\r\\nKPX Uacute A -40\\r\\nKPX Uacute Aacute -40\\r\\nKPX Uacute Abreve -40\\r\\nKPX Uacute Acircumflex -40\\r\\nKPX Uacute Adieresis -40\\r\\nKPX Uacute Agrave -40\\r\\nKPX Uacute Amacron -40\\r\\nKPX Uacute Aogonek -40\\r\\nKPX Uacute Aring -40\\r\\nKPX Uacute Atilde -40\\r\\nKPX Uacute comma -40\\r\\nKPX Uacute period -40\\r\\nKPX Ucircumflex A -40\\r\\nKPX Ucircumflex Aacute -40\\r\\nKPX Ucircumflex Abreve -40\\r\\nKPX Ucircumflex Acircumflex -40\\r\\nKPX Ucircumflex Adieresis -40\\r\\nKPX Ucircumflex Agrave -40\\r\\nKPX Ucircumflex Amacron -40\\r\\nKPX Ucircumflex Aogonek -40\\r\\nKPX Ucircumflex Aring -40\\r\\nKPX Ucircumflex Atilde -40\\r\\nKPX Ucircumflex comma -40\\r\\nKPX Ucircumflex period -40\\r\\nKPX Udieresis A -40\\r\\nKPX Udieresis Aacute -40\\r\\nKPX Udieresis Abreve -40\\r\\nKPX Udieresis Acircumflex -40\\r\\nKPX Udieresis Adieresis -40\\r\\nKPX Udieresis Agrave -40\\r\\nKPX Udieresis Amacron -40\\r\\nKPX Udieresis Aogonek -40\\r\\nKPX Udieresis Aring -40\\r\\nKPX Udieresis Atilde -40\\r\\nKPX Udieresis comma -40\\r\\nKPX Udieresis period -40\\r\\nKPX Ugrave A -40\\r\\nKPX Ugrave Aacute -40\\r\\nKPX Ugrave Abreve -40\\r\\nKPX Ugrave Acircumflex -40\\r\\nKPX Ugrave Adieresis -40\\r\\nKPX Ugrave Agrave -40\\r\\nKPX Ugrave Amacron -40\\r\\nKPX Ugrave Aogonek -40\\r\\nKPX Ugrave Aring -40\\r\\nKPX Ugrave Atilde -40\\r\\nKPX Ugrave comma -40\\r\\nKPX Ugrave period -40\\r\\nKPX Uhungarumlaut A -40\\r\\nKPX Uhungarumlaut Aacute -40\\r\\nKPX Uhungarumlaut Abreve -40\\r\\nKPX Uhungarumlaut Acircumflex -40\\r\\nKPX Uhungarumlaut Adieresis -40\\r\\nKPX Uhungarumlaut Agrave -40\\r\\nKPX Uhungarumlaut Amacron -40\\r\\nKPX Uhungarumlaut Aogonek -40\\r\\nKPX Uhungarumlaut Aring -40\\r\\nKPX Uhungarumlaut Atilde -40\\r\\nKPX Uhungarumlaut comma -40\\r\\nKPX Uhungarumlaut period -40\\r\\nKPX Umacron A -40\\r\\nKPX Umacron Aacute -40\\r\\nKPX Umacron Abreve -40\\r\\nKPX Umacron Acircumflex -40\\r\\nKPX Umacron Adieresis -40\\r\\nKPX Umacron Agrave -40\\r\\nKPX Umacron Amacron -40\\r\\nKPX Umacron Aogonek -40\\r\\nKPX Umacron Aring -40\\r\\nKPX Umacron Atilde -40\\r\\nKPX Umacron comma -40\\r\\nKPX Umacron period -40\\r\\nKPX Uogonek A -40\\r\\nKPX Uogonek Aacute -40\\r\\nKPX Uogonek Abreve -40\\r\\nKPX Uogonek Acircumflex -40\\r\\nKPX Uogonek Adieresis -40\\r\\nKPX Uogonek Agrave -40\\r\\nKPX Uogonek Amacron -40\\r\\nKPX Uogonek Aogonek -40\\r\\nKPX Uogonek Aring -40\\r\\nKPX Uogonek Atilde -40\\r\\nKPX Uogonek comma -40\\r\\nKPX Uogonek period -40\\r\\nKPX Uring A -40\\r\\nKPX Uring Aacute -40\\r\\nKPX Uring Abreve -40\\r\\nKPX Uring Acircumflex -40\\r\\nKPX Uring Adieresis -40\\r\\nKPX Uring Agrave -40\\r\\nKPX Uring Amacron -40\\r\\nKPX Uring Aogonek -40\\r\\nKPX Uring Aring -40\\r\\nKPX Uring Atilde -40\\r\\nKPX Uring comma -40\\r\\nKPX Uring period -40\\r\\nKPX V A -80\\r\\nKPX V Aacute -80\\r\\nKPX V Abreve -80\\r\\nKPX V Acircumflex -80\\r\\nKPX V Adieresis -80\\r\\nKPX V Agrave -80\\r\\nKPX V Amacron -80\\r\\nKPX V Aogonek -80\\r\\nKPX V Aring -80\\r\\nKPX V Atilde -80\\r\\nKPX V G -40\\r\\nKPX V Gbreve -40\\r\\nKPX V Gcommaaccent -40\\r\\nKPX V O -40\\r\\nKPX V Oacute -40\\r\\nKPX V Ocircumflex -40\\r\\nKPX V Odieresis -40\\r\\nKPX V Ograve -40\\r\\nKPX V Ohungarumlaut -40\\r\\nKPX V Omacron -40\\r\\nKPX V Oslash -40\\r\\nKPX V Otilde -40\\r\\nKPX V a -70\\r\\nKPX V aacute -70\\r\\nKPX V abreve -70\\r\\nKPX V acircumflex -70\\r\\nKPX V adieresis -70\\r\\nKPX V agrave -70\\r\\nKPX V amacron -70\\r\\nKPX V aogonek -70\\r\\nKPX V aring -70\\r\\nKPX V atilde -70\\r\\nKPX V colon -40\\r\\nKPX V comma -125\\r\\nKPX V e -80\\r\\nKPX V eacute -80\\r\\nKPX V ecaron -80\\r\\nKPX V ecircumflex -80\\r\\nKPX V edieresis -80\\r\\nKPX V edotaccent -80\\r\\nKPX V egrave -80\\r\\nKPX V emacron -80\\r\\nKPX V eogonek -80\\r\\nKPX V hyphen -80\\r\\nKPX V o -80\\r\\nKPX V oacute -80\\r\\nKPX V ocircumflex -80\\r\\nKPX V odieresis -80\\r\\nKPX V ograve -80\\r\\nKPX V ohungarumlaut -80\\r\\nKPX V omacron -80\\r\\nKPX V oslash -80\\r\\nKPX V otilde -80\\r\\nKPX V period -125\\r\\nKPX V semicolon -40\\r\\nKPX V u -70\\r\\nKPX V uacute -70\\r\\nKPX V ucircumflex -70\\r\\nKPX V udieresis -70\\r\\nKPX V ugrave -70\\r\\nKPX V uhungarumlaut -70\\r\\nKPX V umacron -70\\r\\nKPX V uogonek -70\\r\\nKPX V uring -70\\r\\nKPX W A -50\\r\\nKPX W Aacute -50\\r\\nKPX W Abreve -50\\r\\nKPX W Acircumflex -50\\r\\nKPX W Adieresis -50\\r\\nKPX W Agrave -50\\r\\nKPX W Amacron -50\\r\\nKPX W Aogonek -50\\r\\nKPX W Aring -50\\r\\nKPX W Atilde -50\\r\\nKPX W O -20\\r\\nKPX W Oacute -20\\r\\nKPX W Ocircumflex -20\\r\\nKPX W Odieresis -20\\r\\nKPX W Ograve -20\\r\\nKPX W Ohungarumlaut -20\\r\\nKPX W Omacron -20\\r\\nKPX W Oslash -20\\r\\nKPX W Otilde -20\\r\\nKPX W a -40\\r\\nKPX W aacute -40\\r\\nKPX W abreve -40\\r\\nKPX W acircumflex -40\\r\\nKPX W adieresis -40\\r\\nKPX W agrave -40\\r\\nKPX W amacron -40\\r\\nKPX W aogonek -40\\r\\nKPX W aring -40\\r\\nKPX W atilde -40\\r\\nKPX W comma -80\\r\\nKPX W e -30\\r\\nKPX W eacute -30\\r\\nKPX W ecaron -30\\r\\nKPX W ecircumflex -30\\r\\nKPX W edieresis -30\\r\\nKPX W edotaccent -30\\r\\nKPX W egrave -30\\r\\nKPX W emacron -30\\r\\nKPX W eogonek -30\\r\\nKPX W hyphen -40\\r\\nKPX W o -30\\r\\nKPX W oacute -30\\r\\nKPX W ocircumflex -30\\r\\nKPX W odieresis -30\\r\\nKPX W ograve -30\\r\\nKPX W ohungarumlaut -30\\r\\nKPX W omacron -30\\r\\nKPX W oslash -30\\r\\nKPX W otilde -30\\r\\nKPX W period -80\\r\\nKPX W u -30\\r\\nKPX W uacute -30\\r\\nKPX W ucircumflex -30\\r\\nKPX W udieresis -30\\r\\nKPX W ugrave -30\\r\\nKPX W uhungarumlaut -30\\r\\nKPX W umacron -30\\r\\nKPX W uogonek -30\\r\\nKPX W uring -30\\r\\nKPX W y -20\\r\\nKPX W yacute -20\\r\\nKPX W ydieresis -20\\r\\nKPX Y A -110\\r\\nKPX Y Aacute -110\\r\\nKPX Y Abreve -110\\r\\nKPX Y Acircumflex -110\\r\\nKPX Y Adieresis -110\\r\\nKPX Y Agrave -110\\r\\nKPX Y Amacron -110\\r\\nKPX Y Aogonek -110\\r\\nKPX Y Aring -110\\r\\nKPX Y Atilde -110\\r\\nKPX Y O -85\\r\\nKPX Y Oacute -85\\r\\nKPX Y Ocircumflex -85\\r\\nKPX Y Odieresis -85\\r\\nKPX Y Ograve -85\\r\\nKPX Y Ohungarumlaut -85\\r\\nKPX Y Omacron -85\\r\\nKPX Y Oslash -85\\r\\nKPX Y Otilde -85\\r\\nKPX Y a -140\\r\\nKPX Y aacute -140\\r\\nKPX Y abreve -70\\r\\nKPX Y acircumflex -140\\r\\nKPX Y adieresis -140\\r\\nKPX Y agrave -140\\r\\nKPX Y amacron -70\\r\\nKPX Y aogonek -140\\r\\nKPX Y aring -140\\r\\nKPX Y atilde -140\\r\\nKPX Y colon -60\\r\\nKPX Y comma -140\\r\\nKPX Y e -140\\r\\nKPX Y eacute -140\\r\\nKPX Y ecaron -140\\r\\nKPX Y ecircumflex -140\\r\\nKPX Y edieresis -140\\r\\nKPX Y edotaccent -140\\r\\nKPX Y egrave -140\\r\\nKPX Y emacron -70\\r\\nKPX Y eogonek -140\\r\\nKPX Y hyphen -140\\r\\nKPX Y i -20\\r\\nKPX Y iacute -20\\r\\nKPX Y iogonek -20\\r\\nKPX Y o -140\\r\\nKPX Y oacute -140\\r\\nKPX Y ocircumflex -140\\r\\nKPX Y odieresis -140\\r\\nKPX Y ograve -140\\r\\nKPX Y ohungarumlaut -140\\r\\nKPX Y omacron -140\\r\\nKPX Y oslash -140\\r\\nKPX Y otilde -140\\r\\nKPX Y period -140\\r\\nKPX Y semicolon -60\\r\\nKPX Y u -110\\r\\nKPX Y uacute -110\\r\\nKPX Y ucircumflex -110\\r\\nKPX Y udieresis -110\\r\\nKPX Y ugrave -110\\r\\nKPX Y uhungarumlaut -110\\r\\nKPX Y umacron -110\\r\\nKPX Y uogonek -110\\r\\nKPX Y uring -110\\r\\nKPX Yacute A -110\\r\\nKPX Yacute Aacute -110\\r\\nKPX Yacute Abreve -110\\r\\nKPX Yacute Acircumflex -110\\r\\nKPX Yacute Adieresis -110\\r\\nKPX Yacute Agrave -110\\r\\nKPX Yacute Amacron -110\\r\\nKPX Yacute Aogonek -110\\r\\nKPX Yacute Aring -110\\r\\nKPX Yacute Atilde -110\\r\\nKPX Yacute O -85\\r\\nKPX Yacute Oacute -85\\r\\nKPX Yacute Ocircumflex -85\\r\\nKPX Yacute Odieresis -85\\r\\nKPX Yacute Ograve -85\\r\\nKPX Yacute Ohungarumlaut -85\\r\\nKPX Yacute Omacron -85\\r\\nKPX Yacute Oslash -85\\r\\nKPX Yacute Otilde -85\\r\\nKPX Yacute a -140\\r\\nKPX Yacute aacute -140\\r\\nKPX Yacute abreve -70\\r\\nKPX Yacute acircumflex -140\\r\\nKPX Yacute adieresis -140\\r\\nKPX Yacute agrave -140\\r\\nKPX Yacute amacron -70\\r\\nKPX Yacute aogonek -140\\r\\nKPX Yacute aring -140\\r\\nKPX Yacute atilde -70\\r\\nKPX Yacute colon -60\\r\\nKPX Yacute comma -140\\r\\nKPX Yacute e -140\\r\\nKPX Yacute eacute -140\\r\\nKPX Yacute ecaron -140\\r\\nKPX Yacute ecircumflex -140\\r\\nKPX Yacute edieresis -140\\r\\nKPX Yacute edotaccent -140\\r\\nKPX Yacute egrave -140\\r\\nKPX Yacute emacron -70\\r\\nKPX Yacute eogonek -140\\r\\nKPX Yacute hyphen -140\\r\\nKPX Yacute i -20\\r\\nKPX Yacute iacute -20\\r\\nKPX Yacute iogonek -20\\r\\nKPX Yacute o -140\\r\\nKPX Yacute oacute -140\\r\\nKPX Yacute ocircumflex -140\\r\\nKPX Yacute odieresis -140\\r\\nKPX Yacute ograve -140\\r\\nKPX Yacute ohungarumlaut -140\\r\\nKPX Yacute omacron -70\\r\\nKPX Yacute oslash -140\\r\\nKPX Yacute otilde -140\\r\\nKPX Yacute period -140\\r\\nKPX Yacute semicolon -60\\r\\nKPX Yacute u -110\\r\\nKPX Yacute uacute -110\\r\\nKPX Yacute ucircumflex -110\\r\\nKPX Yacute udieresis -110\\r\\nKPX Yacute ugrave -110\\r\\nKPX Yacute uhungarumlaut -110\\r\\nKPX Yacute umacron -110\\r\\nKPX Yacute uogonek -110\\r\\nKPX Yacute uring -110\\r\\nKPX Ydieresis A -110\\r\\nKPX Ydieresis Aacute -110\\r\\nKPX Ydieresis Abreve -110\\r\\nKPX Ydieresis Acircumflex -110\\r\\nKPX Ydieresis Adieresis -110\\r\\nKPX Ydieresis Agrave -110\\r\\nKPX Ydieresis Amacron -110\\r\\nKPX Ydieresis Aogonek -110\\r\\nKPX Ydieresis Aring -110\\r\\nKPX Ydieresis Atilde -110\\r\\nKPX Ydieresis O -85\\r\\nKPX Ydieresis Oacute -85\\r\\nKPX Ydieresis Ocircumflex -85\\r\\nKPX Ydieresis Odieresis -85\\r\\nKPX Ydieresis Ograve -85\\r\\nKPX Ydieresis Ohungarumlaut -85\\r\\nKPX Ydieresis Omacron -85\\r\\nKPX Ydieresis Oslash -85\\r\\nKPX Ydieresis Otilde -85\\r\\nKPX Ydieresis a -140\\r\\nKPX Ydieresis aacute -140\\r\\nKPX Ydieresis abreve -70\\r\\nKPX Ydieresis acircumflex -140\\r\\nKPX Ydieresis adieresis -140\\r\\nKPX Ydieresis agrave -140\\r\\nKPX Ydieresis amacron -70\\r\\nKPX Ydieresis aogonek -140\\r\\nKPX Ydieresis aring -140\\r\\nKPX Ydieresis atilde -70\\r\\nKPX Ydieresis colon -60\\r\\nKPX Ydieresis comma -140\\r\\nKPX Ydieresis e -140\\r\\nKPX Ydieresis eacute -140\\r\\nKPX Ydieresis ecaron -140\\r\\nKPX Ydieresis ecircumflex -140\\r\\nKPX Ydieresis edieresis -140\\r\\nKPX Ydieresis edotaccent -140\\r\\nKPX Ydieresis egrave -140\\r\\nKPX Ydieresis emacron -70\\r\\nKPX Ydieresis eogonek -140\\r\\nKPX Ydieresis hyphen -140\\r\\nKPX Ydieresis i -20\\r\\nKPX Ydieresis iacute -20\\r\\nKPX Ydieresis iogonek -20\\r\\nKPX Ydieresis o -140\\r\\nKPX Ydieresis oacute -140\\r\\nKPX Ydieresis ocircumflex -140\\r\\nKPX Ydieresis odieresis -140\\r\\nKPX Ydieresis ograve -140\\r\\nKPX Ydieresis ohungarumlaut -140\\r\\nKPX Ydieresis omacron -140\\r\\nKPX Ydieresis oslash -140\\r\\nKPX Ydieresis otilde -140\\r\\nKPX Ydieresis period -140\\r\\nKPX Ydieresis semicolon -60\\r\\nKPX Ydieresis u -110\\r\\nKPX Ydieresis uacute -110\\r\\nKPX Ydieresis ucircumflex -110\\r\\nKPX Ydieresis udieresis -110\\r\\nKPX Ydieresis ugrave -110\\r\\nKPX Ydieresis uhungarumlaut -110\\r\\nKPX Ydieresis umacron -110\\r\\nKPX Ydieresis uogonek -110\\r\\nKPX Ydieresis uring -110\\r\\nKPX a v -20\\r\\nKPX a w -20\\r\\nKPX a y -30\\r\\nKPX a yacute -30\\r\\nKPX a ydieresis -30\\r\\nKPX aacute v -20\\r\\nKPX aacute w -20\\r\\nKPX aacute y -30\\r\\nKPX aacute yacute -30\\r\\nKPX aacute ydieresis -30\\r\\nKPX abreve v -20\\r\\nKPX abreve w -20\\r\\nKPX abreve y -30\\r\\nKPX abreve yacute -30\\r\\nKPX abreve ydieresis -30\\r\\nKPX acircumflex v -20\\r\\nKPX acircumflex w -20\\r\\nKPX acircumflex y -30\\r\\nKPX acircumflex yacute -30\\r\\nKPX acircumflex ydieresis -30\\r\\nKPX adieresis v -20\\r\\nKPX adieresis w -20\\r\\nKPX adieresis y -30\\r\\nKPX adieresis yacute -30\\r\\nKPX adieresis ydieresis -30\\r\\nKPX agrave v -20\\r\\nKPX agrave w -20\\r\\nKPX agrave y -30\\r\\nKPX agrave yacute -30\\r\\nKPX agrave ydieresis -30\\r\\nKPX amacron v -20\\r\\nKPX amacron w -20\\r\\nKPX amacron y -30\\r\\nKPX amacron yacute -30\\r\\nKPX amacron ydieresis -30\\r\\nKPX aogonek v -20\\r\\nKPX aogonek w -20\\r\\nKPX aogonek y -30\\r\\nKPX aogonek yacute -30\\r\\nKPX aogonek ydieresis -30\\r\\nKPX aring v -20\\r\\nKPX aring w -20\\r\\nKPX aring y -30\\r\\nKPX aring yacute -30\\r\\nKPX aring ydieresis -30\\r\\nKPX atilde v -20\\r\\nKPX atilde w -20\\r\\nKPX atilde y -30\\r\\nKPX atilde yacute -30\\r\\nKPX atilde ydieresis -30\\r\\nKPX b b -10\\r\\nKPX b comma -40\\r\\nKPX b l -20\\r\\nKPX b lacute -20\\r\\nKPX b lcommaaccent -20\\r\\nKPX b lslash -20\\r\\nKPX b period -40\\r\\nKPX b u -20\\r\\nKPX b uacute -20\\r\\nKPX b ucircumflex -20\\r\\nKPX b udieresis -20\\r\\nKPX b ugrave -20\\r\\nKPX b uhungarumlaut -20\\r\\nKPX b umacron -20\\r\\nKPX b uogonek -20\\r\\nKPX b uring -20\\r\\nKPX b v -20\\r\\nKPX b y -20\\r\\nKPX b yacute -20\\r\\nKPX b ydieresis -20\\r\\nKPX c comma -15\\r\\nKPX c k -20\\r\\nKPX c kcommaaccent -20\\r\\nKPX cacute comma -15\\r\\nKPX cacute k -20\\r\\nKPX cacute kcommaaccent -20\\r\\nKPX ccaron comma -15\\r\\nKPX ccaron k -20\\r\\nKPX ccaron kcommaaccent -20\\r\\nKPX ccedilla comma -15\\r\\nKPX ccedilla k -20\\r\\nKPX ccedilla kcommaaccent -20\\r\\nKPX colon space -50\\r\\nKPX comma quotedblright -100\\r\\nKPX comma quoteright -100\\r\\nKPX e comma -15\\r\\nKPX e period -15\\r\\nKPX e v -30\\r\\nKPX e w -20\\r\\nKPX e x -30\\r\\nKPX e y -20\\r\\nKPX e yacute -20\\r\\nKPX e ydieresis -20\\r\\nKPX eacute comma -15\\r\\nKPX eacute period -15\\r\\nKPX eacute v -30\\r\\nKPX eacute w -20\\r\\nKPX eacute x -30\\r\\nKPX eacute y -20\\r\\nKPX eacute yacute -20\\r\\nKPX eacute ydieresis -20\\r\\nKPX ecaron comma -15\\r\\nKPX ecaron period -15\\r\\nKPX ecaron v -30\\r\\nKPX ecaron w -20\\r\\nKPX ecaron x -30\\r\\nKPX ecaron y -20\\r\\nKPX ecaron yacute -20\\r\\nKPX ecaron ydieresis -20\\r\\nKPX ecircumflex comma -15\\r\\nKPX ecircumflex period -15\\r\\nKPX ecircumflex v -30\\r\\nKPX ecircumflex w -20\\r\\nKPX ecircumflex x -30\\r\\nKPX ecircumflex y -20\\r\\nKPX ecircumflex yacute -20\\r\\nKPX ecircumflex ydieresis -20\\r\\nKPX edieresis comma -15\\r\\nKPX edieresis period -15\\r\\nKPX edieresis v -30\\r\\nKPX edieresis w -20\\r\\nKPX edieresis x -30\\r\\nKPX edieresis y -20\\r\\nKPX edieresis yacute -20\\r\\nKPX edieresis ydieresis -20\\r\\nKPX edotaccent comma -15\\r\\nKPX edotaccent period -15\\r\\nKPX edotaccent v -30\\r\\nKPX edotaccent w -20\\r\\nKPX edotaccent x -30\\r\\nKPX edotaccent y -20\\r\\nKPX edotaccent yacute -20\\r\\nKPX edotaccent ydieresis -20\\r\\nKPX egrave comma -15\\r\\nKPX egrave period -15\\r\\nKPX egrave v -30\\r\\nKPX egrave w -20\\r\\nKPX egrave x -30\\r\\nKPX egrave y -20\\r\\nKPX egrave yacute -20\\r\\nKPX egrave ydieresis -20\\r\\nKPX emacron comma -15\\r\\nKPX emacron period -15\\r\\nKPX emacron v -30\\r\\nKPX emacron w -20\\r\\nKPX emacron x -30\\r\\nKPX emacron y -20\\r\\nKPX emacron yacute -20\\r\\nKPX emacron ydieresis -20\\r\\nKPX eogonek comma -15\\r\\nKPX eogonek period -15\\r\\nKPX eogonek v -30\\r\\nKPX eogonek w -20\\r\\nKPX eogonek x -30\\r\\nKPX eogonek y -20\\r\\nKPX eogonek yacute -20\\r\\nKPX eogonek ydieresis -20\\r\\nKPX f a -30\\r\\nKPX f aacute -30\\r\\nKPX f abreve -30\\r\\nKPX f acircumflex -30\\r\\nKPX f adieresis -30\\r\\nKPX f agrave -30\\r\\nKPX f amacron -30\\r\\nKPX f aogonek -30\\r\\nKPX f aring -30\\r\\nKPX f atilde -30\\r\\nKPX f comma -30\\r\\nKPX f dotlessi -28\\r\\nKPX f e -30\\r\\nKPX f eacute -30\\r\\nKPX f ecaron -30\\r\\nKPX f ecircumflex -30\\r\\nKPX f edieresis -30\\r\\nKPX f edotaccent -30\\r\\nKPX f egrave -30\\r\\nKPX f emacron -30\\r\\nKPX f eogonek -30\\r\\nKPX f o -30\\r\\nKPX f oacute -30\\r\\nKPX f ocircumflex -30\\r\\nKPX f odieresis -30\\r\\nKPX f ograve -30\\r\\nKPX f ohungarumlaut -30\\r\\nKPX f omacron -30\\r\\nKPX f oslash -30\\r\\nKPX f otilde -30\\r\\nKPX f period -30\\r\\nKPX f quotedblright 60\\r\\nKPX f quoteright 50\\r\\nKPX g r -10\\r\\nKPX g racute -10\\r\\nKPX g rcaron -10\\r\\nKPX g rcommaaccent -10\\r\\nKPX gbreve r -10\\r\\nKPX gbreve racute -10\\r\\nKPX gbreve rcaron -10\\r\\nKPX gbreve rcommaaccent -10\\r\\nKPX gcommaaccent r -10\\r\\nKPX gcommaaccent racute -10\\r\\nKPX gcommaaccent rcaron -10\\r\\nKPX gcommaaccent rcommaaccent -10\\r\\nKPX h y -30\\r\\nKPX h yacute -30\\r\\nKPX h ydieresis -30\\r\\nKPX k e -20\\r\\nKPX k eacute -20\\r\\nKPX k ecaron -20\\r\\nKPX k ecircumflex -20\\r\\nKPX k edieresis -20\\r\\nKPX k edotaccent -20\\r\\nKPX k egrave -20\\r\\nKPX k emacron -20\\r\\nKPX k eogonek -20\\r\\nKPX k o -20\\r\\nKPX k oacute -20\\r\\nKPX k ocircumflex -20\\r\\nKPX k odieresis -20\\r\\nKPX k ograve -20\\r\\nKPX k ohungarumlaut -20\\r\\nKPX k omacron -20\\r\\nKPX k oslash -20\\r\\nKPX k otilde -20\\r\\nKPX kcommaaccent e -20\\r\\nKPX kcommaaccent eacute -20\\r\\nKPX kcommaaccent ecaron -20\\r\\nKPX kcommaaccent ecircumflex -20\\r\\nKPX kcommaaccent edieresis -20\\r\\nKPX kcommaaccent edotaccent -20\\r\\nKPX kcommaaccent egrave -20\\r\\nKPX kcommaaccent emacron -20\\r\\nKPX kcommaaccent eogonek -20\\r\\nKPX kcommaaccent o -20\\r\\nKPX kcommaaccent oacute -20\\r\\nKPX kcommaaccent ocircumflex -20\\r\\nKPX kcommaaccent odieresis -20\\r\\nKPX kcommaaccent ograve -20\\r\\nKPX kcommaaccent ohungarumlaut -20\\r\\nKPX kcommaaccent omacron -20\\r\\nKPX kcommaaccent oslash -20\\r\\nKPX kcommaaccent otilde -20\\r\\nKPX m u -10\\r\\nKPX m uacute -10\\r\\nKPX m ucircumflex -10\\r\\nKPX m udieresis -10\\r\\nKPX m ugrave -10\\r\\nKPX m uhungarumlaut -10\\r\\nKPX m umacron -10\\r\\nKPX m uogonek -10\\r\\nKPX m uring -10\\r\\nKPX m y -15\\r\\nKPX m yacute -15\\r\\nKPX m ydieresis -15\\r\\nKPX n u -10\\r\\nKPX n uacute -10\\r\\nKPX n ucircumflex -10\\r\\nKPX n udieresis -10\\r\\nKPX n ugrave -10\\r\\nKPX n uhungarumlaut -10\\r\\nKPX n umacron -10\\r\\nKPX n uogonek -10\\r\\nKPX n uring -10\\r\\nKPX n v -20\\r\\nKPX n y -15\\r\\nKPX n yacute -15\\r\\nKPX n ydieresis -15\\r\\nKPX nacute u -10\\r\\nKPX nacute uacute -10\\r\\nKPX nacute ucircumflex -10\\r\\nKPX nacute udieresis -10\\r\\nKPX nacute ugrave -10\\r\\nKPX nacute uhungarumlaut -10\\r\\nKPX nacute umacron -10\\r\\nKPX nacute uogonek -10\\r\\nKPX nacute uring -10\\r\\nKPX nacute v -20\\r\\nKPX nacute y -15\\r\\nKPX nacute yacute -15\\r\\nKPX nacute ydieresis -15\\r\\nKPX ncaron u -10\\r\\nKPX ncaron uacute -10\\r\\nKPX ncaron ucircumflex -10\\r\\nKPX ncaron udieresis -10\\r\\nKPX ncaron ugrave -10\\r\\nKPX ncaron uhungarumlaut -10\\r\\nKPX ncaron umacron -10\\r\\nKPX ncaron uogonek -10\\r\\nKPX ncaron uring -10\\r\\nKPX ncaron v -20\\r\\nKPX ncaron y -15\\r\\nKPX ncaron yacute -15\\r\\nKPX ncaron ydieresis -15\\r\\nKPX ncommaaccent u -10\\r\\nKPX ncommaaccent uacute -10\\r\\nKPX ncommaaccent ucircumflex -10\\r\\nKPX ncommaaccent udieresis -10\\r\\nKPX ncommaaccent ugrave -10\\r\\nKPX ncommaaccent uhungarumlaut -10\\r\\nKPX ncommaaccent umacron -10\\r\\nKPX ncommaaccent uogonek -10\\r\\nKPX ncommaaccent uring -10\\r\\nKPX ncommaaccent v -20\\r\\nKPX ncommaaccent y -15\\r\\nKPX ncommaaccent yacute -15\\r\\nKPX ncommaaccent ydieresis -15\\r\\nKPX ntilde u -10\\r\\nKPX ntilde uacute -10\\r\\nKPX ntilde ucircumflex -10\\r\\nKPX ntilde udieresis -10\\r\\nKPX ntilde ugrave -10\\r\\nKPX ntilde uhungarumlaut -10\\r\\nKPX ntilde umacron -10\\r\\nKPX ntilde uogonek -10\\r\\nKPX ntilde uring -10\\r\\nKPX ntilde v -20\\r\\nKPX ntilde y -15\\r\\nKPX ntilde yacute -15\\r\\nKPX ntilde ydieresis -15\\r\\nKPX o comma -40\\r\\nKPX o period -40\\r\\nKPX o v -15\\r\\nKPX o w -15\\r\\nKPX o x -30\\r\\nKPX o y -30\\r\\nKPX o yacute -30\\r\\nKPX o ydieresis -30\\r\\nKPX oacute comma -40\\r\\nKPX oacute period -40\\r\\nKPX oacute v -15\\r\\nKPX oacute w -15\\r\\nKPX oacute x -30\\r\\nKPX oacute y -30\\r\\nKPX oacute yacute -30\\r\\nKPX oacute ydieresis -30\\r\\nKPX ocircumflex comma -40\\r\\nKPX ocircumflex period -40\\r\\nKPX ocircumflex v -15\\r\\nKPX ocircumflex w -15\\r\\nKPX ocircumflex x -30\\r\\nKPX ocircumflex y -30\\r\\nKPX ocircumflex yacute -30\\r\\nKPX ocircumflex ydieresis -30\\r\\nKPX odieresis comma -40\\r\\nKPX odieresis period -40\\r\\nKPX odieresis v -15\\r\\nKPX odieresis w -15\\r\\nKPX odieresis x -30\\r\\nKPX odieresis y -30\\r\\nKPX odieresis yacute -30\\r\\nKPX odieresis ydieresis -30\\r\\nKPX ograve comma -40\\r\\nKPX ograve period -40\\r\\nKPX ograve v -15\\r\\nKPX ograve w -15\\r\\nKPX ograve x -30\\r\\nKPX ograve y -30\\r\\nKPX ograve yacute -30\\r\\nKPX ograve ydieresis -30\\r\\nKPX ohungarumlaut comma -40\\r\\nKPX ohungarumlaut period -40\\r\\nKPX ohungarumlaut v -15\\r\\nKPX ohungarumlaut w -15\\r\\nKPX ohungarumlaut x -30\\r\\nKPX ohungarumlaut y -30\\r\\nKPX ohungarumlaut yacute -30\\r\\nKPX ohungarumlaut ydieresis -30\\r\\nKPX omacron comma -40\\r\\nKPX omacron period -40\\r\\nKPX omacron v -15\\r\\nKPX omacron w -15\\r\\nKPX omacron x -30\\r\\nKPX omacron y -30\\r\\nKPX omacron yacute -30\\r\\nKPX omacron ydieresis -30\\r\\nKPX oslash a -55\\r\\nKPX oslash aacute -55\\r\\nKPX oslash abreve -55\\r\\nKPX oslash acircumflex -55\\r\\nKPX oslash adieresis -55\\r\\nKPX oslash agrave -55\\r\\nKPX oslash amacron -55\\r\\nKPX oslash aogonek -55\\r\\nKPX oslash aring -55\\r\\nKPX oslash atilde -55\\r\\nKPX oslash b -55\\r\\nKPX oslash c -55\\r\\nKPX oslash cacute -55\\r\\nKPX oslash ccaron -55\\r\\nKPX oslash ccedilla -55\\r\\nKPX oslash comma -95\\r\\nKPX oslash d -55\\r\\nKPX oslash dcroat -55\\r\\nKPX oslash e -55\\r\\nKPX oslash eacute -55\\r\\nKPX oslash ecaron -55\\r\\nKPX oslash ecircumflex -55\\r\\nKPX oslash edieresis -55\\r\\nKPX oslash edotaccent -55\\r\\nKPX oslash egrave -55\\r\\nKPX oslash emacron -55\\r\\nKPX oslash eogonek -55\\r\\nKPX oslash f -55\\r\\nKPX oslash g -55\\r\\nKPX oslash gbreve -55\\r\\nKPX oslash gcommaaccent -55\\r\\nKPX oslash h -55\\r\\nKPX oslash i -55\\r\\nKPX oslash iacute -55\\r\\nKPX oslash icircumflex -55\\r\\nKPX oslash idieresis -55\\r\\nKPX oslash igrave -55\\r\\nKPX oslash imacron -55\\r\\nKPX oslash iogonek -55\\r\\nKPX oslash j -55\\r\\nKPX oslash k -55\\r\\nKPX oslash kcommaaccent -55\\r\\nKPX oslash l -55\\r\\nKPX oslash lacute -55\\r\\nKPX oslash lcommaaccent -55\\r\\nKPX oslash lslash -55\\r\\nKPX oslash m -55\\r\\nKPX oslash n -55\\r\\nKPX oslash nacute -55\\r\\nKPX oslash ncaron -55\\r\\nKPX oslash ncommaaccent -55\\r\\nKPX oslash ntilde -55\\r\\nKPX oslash o -55\\r\\nKPX oslash oacute -55\\r\\nKPX oslash ocircumflex -55\\r\\nKPX oslash odieresis -55\\r\\nKPX oslash ograve -55\\r\\nKPX oslash ohungarumlaut -55\\r\\nKPX oslash omacron -55\\r\\nKPX oslash oslash -55\\r\\nKPX oslash otilde -55\\r\\nKPX oslash p -55\\r\\nKPX oslash period -95\\r\\nKPX oslash q -55\\r\\nKPX oslash r -55\\r\\nKPX oslash racute -55\\r\\nKPX oslash rcaron -55\\r\\nKPX oslash rcommaaccent -55\\r\\nKPX oslash s -55\\r\\nKPX oslash sacute -55\\r\\nKPX oslash scaron -55\\r\\nKPX oslash scedilla -55\\r\\nKPX oslash scommaaccent -55\\r\\nKPX oslash t -55\\r\\nKPX oslash tcommaaccent -55\\r\\nKPX oslash u -55\\r\\nKPX oslash uacute -55\\r\\nKPX oslash ucircumflex -55\\r\\nKPX oslash udieresis -55\\r\\nKPX oslash ugrave -55\\r\\nKPX oslash uhungarumlaut -55\\r\\nKPX oslash umacron -55\\r\\nKPX oslash uogonek -55\\r\\nKPX oslash uring -55\\r\\nKPX oslash v -70\\r\\nKPX oslash w -70\\r\\nKPX oslash x -85\\r\\nKPX oslash y -70\\r\\nKPX oslash yacute -70\\r\\nKPX oslash ydieresis -70\\r\\nKPX oslash z -55\\r\\nKPX oslash zacute -55\\r\\nKPX oslash zcaron -55\\r\\nKPX oslash zdotaccent -55\\r\\nKPX otilde comma -40\\r\\nKPX otilde period -40\\r\\nKPX otilde v -15\\r\\nKPX otilde w -15\\r\\nKPX otilde x -30\\r\\nKPX otilde y -30\\r\\nKPX otilde yacute -30\\r\\nKPX otilde ydieresis -30\\r\\nKPX p comma -35\\r\\nKPX p period -35\\r\\nKPX p y -30\\r\\nKPX p yacute -30\\r\\nKPX p ydieresis -30\\r\\nKPX period quotedblright -100\\r\\nKPX period quoteright -100\\r\\nKPX period space -60\\r\\nKPX quotedblright space -40\\r\\nKPX quoteleft quoteleft -57\\r\\nKPX quoteright d -50\\r\\nKPX quoteright dcroat -50\\r\\nKPX quoteright quoteright -57\\r\\nKPX quoteright r -50\\r\\nKPX quoteright racute -50\\r\\nKPX quoteright rcaron -50\\r\\nKPX quoteright rcommaaccent -50\\r\\nKPX quoteright s -50\\r\\nKPX quoteright sacute -50\\r\\nKPX quoteright scaron -50\\r\\nKPX quoteright scedilla -50\\r\\nKPX quoteright scommaaccent -50\\r\\nKPX quoteright space -70\\r\\nKPX r a -10\\r\\nKPX r aacute -10\\r\\nKPX r abreve -10\\r\\nKPX r acircumflex -10\\r\\nKPX r adieresis -10\\r\\nKPX r agrave -10\\r\\nKPX r amacron -10\\r\\nKPX r aogonek -10\\r\\nKPX r aring -10\\r\\nKPX r atilde -10\\r\\nKPX r colon 30\\r\\nKPX r comma -50\\r\\nKPX r i 15\\r\\nKPX r iacute 15\\r\\nKPX r icircumflex 15\\r\\nKPX r idieresis 15\\r\\nKPX r igrave 15\\r\\nKPX r imacron 15\\r\\nKPX r iogonek 15\\r\\nKPX r k 15\\r\\nKPX r kcommaaccent 15\\r\\nKPX r l 15\\r\\nKPX r lacute 15\\r\\nKPX r lcommaaccent 15\\r\\nKPX r lslash 15\\r\\nKPX r m 25\\r\\nKPX r n 25\\r\\nKPX r nacute 25\\r\\nKPX r ncaron 25\\r\\nKPX r ncommaaccent 25\\r\\nKPX r ntilde 25\\r\\nKPX r p 30\\r\\nKPX r period -50\\r\\nKPX r semicolon 30\\r\\nKPX r t 40\\r\\nKPX r tcommaaccent 40\\r\\nKPX r u 15\\r\\nKPX r uacute 15\\r\\nKPX r ucircumflex 15\\r\\nKPX r udieresis 15\\r\\nKPX r ugrave 15\\r\\nKPX r uhungarumlaut 15\\r\\nKPX r umacron 15\\r\\nKPX r uogonek 15\\r\\nKPX r uring 15\\r\\nKPX r v 30\\r\\nKPX r y 30\\r\\nKPX r yacute 30\\r\\nKPX r ydieresis 30\\r\\nKPX racute a -10\\r\\nKPX racute aacute -10\\r\\nKPX racute abreve -10\\r\\nKPX racute acircumflex -10\\r\\nKPX racute adieresis -10\\r\\nKPX racute agrave -10\\r\\nKPX racute amacron -10\\r\\nKPX racute aogonek -10\\r\\nKPX racute aring -10\\r\\nKPX racute atilde -10\\r\\nKPX racute colon 30\\r\\nKPX racute comma -50\\r\\nKPX racute i 15\\r\\nKPX racute iacute 15\\r\\nKPX racute icircumflex 15\\r\\nKPX racute idieresis 15\\r\\nKPX racute igrave 15\\r\\nKPX racute imacron 15\\r\\nKPX racute iogonek 15\\r\\nKPX racute k 15\\r\\nKPX racute kcommaaccent 15\\r\\nKPX racute l 15\\r\\nKPX racute lacute 15\\r\\nKPX racute lcommaaccent 15\\r\\nKPX racute lslash 15\\r\\nKPX racute m 25\\r\\nKPX racute n 25\\r\\nKPX racute nacute 25\\r\\nKPX racute ncaron 25\\r\\nKPX racute ncommaaccent 25\\r\\nKPX racute ntilde 25\\r\\nKPX racute p 30\\r\\nKPX racute period -50\\r\\nKPX racute semicolon 30\\r\\nKPX racute t 40\\r\\nKPX racute tcommaaccent 40\\r\\nKPX racute u 15\\r\\nKPX racute uacute 15\\r\\nKPX racute ucircumflex 15\\r\\nKPX racute udieresis 15\\r\\nKPX racute ugrave 15\\r\\nKPX racute uhungarumlaut 15\\r\\nKPX racute umacron 15\\r\\nKPX racute uogonek 15\\r\\nKPX racute uring 15\\r\\nKPX racute v 30\\r\\nKPX racute y 30\\r\\nKPX racute yacute 30\\r\\nKPX racute ydieresis 30\\r\\nKPX rcaron a -10\\r\\nKPX rcaron aacute -10\\r\\nKPX rcaron abreve -10\\r\\nKPX rcaron acircumflex -10\\r\\nKPX rcaron adieresis -10\\r\\nKPX rcaron agrave -10\\r\\nKPX rcaron amacron -10\\r\\nKPX rcaron aogonek -10\\r\\nKPX rcaron aring -10\\r\\nKPX rcaron atilde -10\\r\\nKPX rcaron colon 30\\r\\nKPX rcaron comma -50\\r\\nKPX rcaron i 15\\r\\nKPX rcaron iacute 15\\r\\nKPX rcaron icircumflex 15\\r\\nKPX rcaron idieresis 15\\r\\nKPX rcaron igrave 15\\r\\nKPX rcaron imacron 15\\r\\nKPX rcaron iogonek 15\\r\\nKPX rcaron k 15\\r\\nKPX rcaron kcommaaccent 15\\r\\nKPX rcaron l 15\\r\\nKPX rcaron lacute 15\\r\\nKPX rcaron lcommaaccent 15\\r\\nKPX rcaron lslash 15\\r\\nKPX rcaron m 25\\r\\nKPX rcaron n 25\\r\\nKPX rcaron nacute 25\\r\\nKPX rcaron ncaron 25\\r\\nKPX rcaron ncommaaccent 25\\r\\nKPX rcaron ntilde 25\\r\\nKPX rcaron p 30\\r\\nKPX rcaron period -50\\r\\nKPX rcaron semicolon 30\\r\\nKPX rcaron t 40\\r\\nKPX rcaron tcommaaccent 40\\r\\nKPX rcaron u 15\\r\\nKPX rcaron uacute 15\\r\\nKPX rcaron ucircumflex 15\\r\\nKPX rcaron udieresis 15\\r\\nKPX rcaron ugrave 15\\r\\nKPX rcaron uhungarumlaut 15\\r\\nKPX rcaron umacron 15\\r\\nKPX rcaron uogonek 15\\r\\nKPX rcaron uring 15\\r\\nKPX rcaron v 30\\r\\nKPX rcaron y 30\\r\\nKPX rcaron yacute 30\\r\\nKPX rcaron ydieresis 30\\r\\nKPX rcommaaccent a -10\\r\\nKPX rcommaaccent aacute -10\\r\\nKPX rcommaaccent abreve -10\\r\\nKPX rcommaaccent acircumflex -10\\r\\nKPX rcommaaccent adieresis -10\\r\\nKPX rcommaaccent agrave -10\\r\\nKPX rcommaaccent amacron -10\\r\\nKPX rcommaaccent aogonek -10\\r\\nKPX rcommaaccent aring -10\\r\\nKPX rcommaaccent atilde -10\\r\\nKPX rcommaaccent colon 30\\r\\nKPX rcommaaccent comma -50\\r\\nKPX rcommaaccent i 15\\r\\nKPX rcommaaccent iacute 15\\r\\nKPX rcommaaccent icircumflex 15\\r\\nKPX rcommaaccent idieresis 15\\r\\nKPX rcommaaccent igrave 15\\r\\nKPX rcommaaccent imacron 15\\r\\nKPX rcommaaccent iogonek 15\\r\\nKPX rcommaaccent k 15\\r\\nKPX rcommaaccent kcommaaccent 15\\r\\nKPX rcommaaccent l 15\\r\\nKPX rcommaaccent lacute 15\\r\\nKPX rcommaaccent lcommaaccent 15\\r\\nKPX rcommaaccent lslash 15\\r\\nKPX rcommaaccent m 25\\r\\nKPX rcommaaccent n 25\\r\\nKPX rcommaaccent nacute 25\\r\\nKPX rcommaaccent ncaron 25\\r\\nKPX rcommaaccent ncommaaccent 25\\r\\nKPX rcommaaccent ntilde 25\\r\\nKPX rcommaaccent p 30\\r\\nKPX rcommaaccent period -50\\r\\nKPX rcommaaccent semicolon 30\\r\\nKPX rcommaaccent t 40\\r\\nKPX rcommaaccent tcommaaccent 40\\r\\nKPX rcommaaccent u 15\\r\\nKPX rcommaaccent uacute 15\\r\\nKPX rcommaaccent ucircumflex 15\\r\\nKPX rcommaaccent udieresis 15\\r\\nKPX rcommaaccent ugrave 15\\r\\nKPX rcommaaccent uhungarumlaut 15\\r\\nKPX rcommaaccent umacron 15\\r\\nKPX rcommaaccent uogonek 15\\r\\nKPX rcommaaccent uring 15\\r\\nKPX rcommaaccent v 30\\r\\nKPX rcommaaccent y 30\\r\\nKPX rcommaaccent yacute 30\\r\\nKPX rcommaaccent ydieresis 30\\r\\nKPX s comma -15\\r\\nKPX s period -15\\r\\nKPX s w -30\\r\\nKPX sacute comma -15\\r\\nKPX sacute period -15\\r\\nKPX sacute w -30\\r\\nKPX scaron comma -15\\r\\nKPX scaron period -15\\r\\nKPX scaron w -30\\r\\nKPX scedilla comma -15\\r\\nKPX scedilla period -15\\r\\nKPX scedilla w -30\\r\\nKPX scommaaccent comma -15\\r\\nKPX scommaaccent period -15\\r\\nKPX scommaaccent w -30\\r\\nKPX semicolon space -50\\r\\nKPX space T -50\\r\\nKPX space Tcaron -50\\r\\nKPX space Tcommaaccent -50\\r\\nKPX space V -50\\r\\nKPX space W -40\\r\\nKPX space Y -90\\r\\nKPX space Yacute -90\\r\\nKPX space Ydieresis -90\\r\\nKPX space quotedblleft -30\\r\\nKPX space quoteleft -60\\r\\nKPX v a -25\\r\\nKPX v aacute -25\\r\\nKPX v abreve -25\\r\\nKPX v acircumflex -25\\r\\nKPX v adieresis -25\\r\\nKPX v agrave -25\\r\\nKPX v amacron -25\\r\\nKPX v aogonek -25\\r\\nKPX v aring -25\\r\\nKPX v atilde -25\\r\\nKPX v comma -80\\r\\nKPX v e -25\\r\\nKPX v eacute -25\\r\\nKPX v ecaron -25\\r\\nKPX v ecircumflex -25\\r\\nKPX v edieresis -25\\r\\nKPX v edotaccent -25\\r\\nKPX v egrave -25\\r\\nKPX v emacron -25\\r\\nKPX v eogonek -25\\r\\nKPX v o -25\\r\\nKPX v oacute -25\\r\\nKPX v ocircumflex -25\\r\\nKPX v odieresis -25\\r\\nKPX v ograve -25\\r\\nKPX v ohungarumlaut -25\\r\\nKPX v omacron -25\\r\\nKPX v oslash -25\\r\\nKPX v otilde -25\\r\\nKPX v period -80\\r\\nKPX w a -15\\r\\nKPX w aacute -15\\r\\nKPX w abreve -15\\r\\nKPX w acircumflex -15\\r\\nKPX w adieresis -15\\r\\nKPX w agrave -15\\r\\nKPX w amacron -15\\r\\nKPX w aogonek -15\\r\\nKPX w aring -15\\r\\nKPX w atilde -15\\r\\nKPX w comma -60\\r\\nKPX w e -10\\r\\nKPX w eacute -10\\r\\nKPX w ecaron -10\\r\\nKPX w ecircumflex -10\\r\\nKPX w edieresis -10\\r\\nKPX w edotaccent -10\\r\\nKPX w egrave -10\\r\\nKPX w emacron -10\\r\\nKPX w eogonek -10\\r\\nKPX w o -10\\r\\nKPX w oacute -10\\r\\nKPX w ocircumflex -10\\r\\nKPX w odieresis -10\\r\\nKPX w ograve -10\\r\\nKPX w ohungarumlaut -10\\r\\nKPX w omacron -10\\r\\nKPX w oslash -10\\r\\nKPX w otilde -10\\r\\nKPX w period -60\\r\\nKPX x e -30\\r\\nKPX x eacute -30\\r\\nKPX x ecaron -30\\r\\nKPX x ecircumflex -30\\r\\nKPX x edieresis -30\\r\\nKPX x edotaccent -30\\r\\nKPX x egrave -30\\r\\nKPX x emacron -30\\r\\nKPX x eogonek -30\\r\\nKPX y a -20\\r\\nKPX y aacute -20\\r\\nKPX y abreve -20\\r\\nKPX y acircumflex -20\\r\\nKPX y adieresis -20\\r\\nKPX y agrave -20\\r\\nKPX y amacron -20\\r\\nKPX y aogonek -20\\r\\nKPX y aring -20\\r\\nKPX y atilde -20\\r\\nKPX y comma -100\\r\\nKPX y e -20\\r\\nKPX y eacute -20\\r\\nKPX y ecaron -20\\r\\nKPX y ecircumflex -20\\r\\nKPX y edieresis -20\\r\\nKPX y edotaccent -20\\r\\nKPX y egrave -20\\r\\nKPX y emacron -20\\r\\nKPX y eogonek -20\\r\\nKPX y o -20\\r\\nKPX y oacute -20\\r\\nKPX y ocircumflex -20\\r\\nKPX y odieresis -20\\r\\nKPX y ograve -20\\r\\nKPX y ohungarumlaut -20\\r\\nKPX y omacron -20\\r\\nKPX y oslash -20\\r\\nKPX y otilde -20\\r\\nKPX y period -100\\r\\nKPX yacute a -20\\r\\nKPX yacute aacute -20\\r\\nKPX yacute abreve -20\\r\\nKPX yacute acircumflex -20\\r\\nKPX yacute adieresis -20\\r\\nKPX yacute agrave -20\\r\\nKPX yacute amacron -20\\r\\nKPX yacute aogonek -20\\r\\nKPX yacute aring -20\\r\\nKPX yacute atilde -20\\r\\nKPX yacute comma -100\\r\\nKPX yacute e -20\\r\\nKPX yacute eacute -20\\r\\nKPX yacute ecaron -20\\r\\nKPX yacute ecircumflex -20\\r\\nKPX yacute edieresis -20\\r\\nKPX yacute edotaccent -20\\r\\nKPX yacute egrave -20\\r\\nKPX yacute emacron -20\\r\\nKPX yacute eogonek -20\\r\\nKPX yacute o -20\\r\\nKPX yacute oacute -20\\r\\nKPX yacute ocircumflex -20\\r\\nKPX yacute odieresis -20\\r\\nKPX yacute ograve -20\\r\\nKPX yacute ohungarumlaut -20\\r\\nKPX yacute omacron -20\\r\\nKPX yacute oslash -20\\r\\nKPX yacute otilde -20\\r\\nKPX yacute period -100\\r\\nKPX ydieresis a -20\\r\\nKPX ydieresis aacute -20\\r\\nKPX ydieresis abreve -20\\r\\nKPX ydieresis acircumflex -20\\r\\nKPX ydieresis adieresis -20\\r\\nKPX ydieresis agrave -20\\r\\nKPX ydieresis amacron -20\\r\\nKPX ydieresis aogonek -20\\r\\nKPX ydieresis aring -20\\r\\nKPX ydieresis atilde -20\\r\\nKPX ydieresis comma -100\\r\\nKPX ydieresis e -20\\r\\nKPX ydieresis eacute -20\\r\\nKPX ydieresis ecaron -20\\r\\nKPX ydieresis ecircumflex -20\\r\\nKPX ydieresis edieresis -20\\r\\nKPX ydieresis edotaccent -20\\r\\nKPX ydieresis egrave -20\\r\\nKPX ydieresis emacron -20\\r\\nKPX ydieresis eogonek -20\\r\\nKPX ydieresis o -20\\r\\nKPX ydieresis oacute -20\\r\\nKPX ydieresis ocircumflex -20\\r\\nKPX ydieresis odieresis -20\\r\\nKPX ydieresis ograve -20\\r\\nKPX ydieresis ohungarumlaut -20\\r\\nKPX ydieresis omacron -20\\r\\nKPX ydieresis oslash -20\\r\\nKPX ydieresis otilde -20\\r\\nKPX ydieresis period -100\\r\\nKPX z e -15\\r\\nKPX z eacute -15\\r\\nKPX z ecaron -15\\r\\nKPX z ecircumflex -15\\r\\nKPX z edieresis -15\\r\\nKPX z edotaccent -15\\r\\nKPX z egrave -15\\r\\nKPX z emacron -15\\r\\nKPX z eogonek -15\\r\\nKPX z o -15\\r\\nKPX z oacute -15\\r\\nKPX z ocircumflex -15\\r\\nKPX z odieresis -15\\r\\nKPX z ograve -15\\r\\nKPX z ohungarumlaut -15\\r\\nKPX z omacron -15\\r\\nKPX z oslash -15\\r\\nKPX z otilde -15\\r\\nKPX zacute e -15\\r\\nKPX zacute eacute -15\\r\\nKPX zacute ecaron -15\\r\\nKPX zacute ecircumflex -15\\r\\nKPX zacute edieresis -15\\r\\nKPX zacute edotaccent -15\\r\\nKPX zacute egrave -15\\r\\nKPX zacute emacron -15\\r\\nKPX zacute eogonek -15\\r\\nKPX zacute o -15\\r\\nKPX zacute oacute -15\\r\\nKPX zacute ocircumflex -15\\r\\nKPX zacute odieresis -15\\r\\nKPX zacute ograve -15\\r\\nKPX zacute ohungarumlaut -15\\r\\nKPX zacute omacron -15\\r\\nKPX zacute oslash -15\\r\\nKPX zacute otilde -15\\r\\nKPX zcaron e -15\\r\\nKPX zcaron eacute -15\\r\\nKPX zcaron ecaron -15\\r\\nKPX zcaron ecircumflex -15\\r\\nKPX zcaron edieresis -15\\r\\nKPX zcaron edotaccent -15\\r\\nKPX zcaron egrave -15\\r\\nKPX zcaron emacron -15\\r\\nKPX zcaron eogonek -15\\r\\nKPX zcaron o -15\\r\\nKPX zcaron oacute -15\\r\\nKPX zcaron ocircumflex -15\\r\\nKPX zcaron odieresis -15\\r\\nKPX zcaron ograve -15\\r\\nKPX zcaron ohungarumlaut -15\\r\\nKPX zcaron omacron -15\\r\\nKPX zcaron oslash -15\\r\\nKPX zcaron otilde -15\\r\\nKPX zdotaccent e -15\\r\\nKPX zdotaccent eacute -15\\r\\nKPX zdotaccent ecaron -15\\r\\nKPX zdotaccent ecircumflex -15\\r\\nKPX zdotaccent edieresis -15\\r\\nKPX zdotaccent edotaccent -15\\r\\nKPX zdotaccent egrave -15\\r\\nKPX zdotaccent emacron -15\\r\\nKPX zdotaccent eogonek -15\\r\\nKPX zdotaccent o -15\\r\\nKPX zdotaccent oacute -15\\r\\nKPX zdotaccent ocircumflex -15\\r\\nKPX zdotaccent odieresis -15\\r\\nKPX zdotaccent ograve -15\\r\\nKPX zdotaccent ohungarumlaut -15\\r\\nKPX zdotaccent omacron -15\\r\\nKPX zdotaccent oslash -15\\r\\nKPX zdotaccent otilde -15\\r\\nEndKernPairs\\r\\nEndKernData\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Helvetica-Oblique.afm?`)},"./node_modules/pdfkit/js/data/Helvetica.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nComment Creation Date: Thu May  1 12:38:23 1997\\r\\nComment UniqueID 43054\\r\\nComment VMusage 37069 48094\\r\\nFontName Helvetica\\r\\nFullName Helvetica\\r\\nFamilyName Helvetica\\r\\nWeight Medium\\r\\nItalicAngle 0\\r\\nIsFixedPitch false\\r\\nCharacterSet ExtendedRoman\\r\\nFontBBox -166 -225 1000 931 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 002.000\\r\\nNotice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.\\r\\nEncodingScheme AdobeStandardEncoding\\r\\nCapHeight 718\\r\\nXHeight 523\\r\\nAscender 718\\r\\nDescender -207\\r\\nStdHW 76\\r\\nStdVW 88\\r\\nStartCharMetrics 315\\r\\nC 32 ; WX 278 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 278 ; N exclam ; B 90 0 187 718 ;\\r\\nC 34 ; WX 355 ; N quotedbl ; B 70 463 285 718 ;\\r\\nC 35 ; WX 556 ; N numbersign ; B 28 0 529 688 ;\\r\\nC 36 ; WX 556 ; N dollar ; B 32 -115 520 775 ;\\r\\nC 37 ; WX 889 ; N percent ; B 39 -19 850 703 ;\\r\\nC 38 ; WX 667 ; N ampersand ; B 44 -15 645 718 ;\\r\\nC 39 ; WX 222 ; N quoteright ; B 53 463 157 718 ;\\r\\nC 40 ; WX 333 ; N parenleft ; B 68 -207 299 733 ;\\r\\nC 41 ; WX 333 ; N parenright ; B 34 -207 265 733 ;\\r\\nC 42 ; WX 389 ; N asterisk ; B 39 431 349 718 ;\\r\\nC 43 ; WX 584 ; N plus ; B 39 0 545 505 ;\\r\\nC 44 ; WX 278 ; N comma ; B 87 -147 191 106 ;\\r\\nC 45 ; WX 333 ; N hyphen ; B 44 232 289 322 ;\\r\\nC 46 ; WX 278 ; N period ; B 87 0 191 106 ;\\r\\nC 47 ; WX 278 ; N slash ; B -17 -19 295 737 ;\\r\\nC 48 ; WX 556 ; N zero ; B 37 -19 519 703 ;\\r\\nC 49 ; WX 556 ; N one ; B 101 0 359 703 ;\\r\\nC 50 ; WX 556 ; N two ; B 26 0 507 703 ;\\r\\nC 51 ; WX 556 ; N three ; B 34 -19 522 703 ;\\r\\nC 52 ; WX 556 ; N four ; B 25 0 523 703 ;\\r\\nC 53 ; WX 556 ; N five ; B 32 -19 514 688 ;\\r\\nC 54 ; WX 556 ; N six ; B 38 -19 518 703 ;\\r\\nC 55 ; WX 556 ; N seven ; B 37 0 523 688 ;\\r\\nC 56 ; WX 556 ; N eight ; B 38 -19 517 703 ;\\r\\nC 57 ; WX 556 ; N nine ; B 42 -19 514 703 ;\\r\\nC 58 ; WX 278 ; N colon ; B 87 0 191 516 ;\\r\\nC 59 ; WX 278 ; N semicolon ; B 87 -147 191 516 ;\\r\\nC 60 ; WX 584 ; N less ; B 48 11 536 495 ;\\r\\nC 61 ; WX 584 ; N equal ; B 39 115 545 390 ;\\r\\nC 62 ; WX 584 ; N greater ; B 48 11 536 495 ;\\r\\nC 63 ; WX 556 ; N question ; B 56 0 492 727 ;\\r\\nC 64 ; WX 1015 ; N at ; B 147 -19 868 737 ;\\r\\nC 65 ; WX 667 ; N A ; B 14 0 654 718 ;\\r\\nC 66 ; WX 667 ; N B ; B 74 0 627 718 ;\\r\\nC 67 ; WX 722 ; N C ; B 44 -19 681 737 ;\\r\\nC 68 ; WX 722 ; N D ; B 81 0 674 718 ;\\r\\nC 69 ; WX 667 ; N E ; B 86 0 616 718 ;\\r\\nC 70 ; WX 611 ; N F ; B 86 0 583 718 ;\\r\\nC 71 ; WX 778 ; N G ; B 48 -19 704 737 ;\\r\\nC 72 ; WX 722 ; N H ; B 77 0 646 718 ;\\r\\nC 73 ; WX 278 ; N I ; B 91 0 188 718 ;\\r\\nC 74 ; WX 500 ; N J ; B 17 -19 428 718 ;\\r\\nC 75 ; WX 667 ; N K ; B 76 0 663 718 ;\\r\\nC 76 ; WX 556 ; N L ; B 76 0 537 718 ;\\r\\nC 77 ; WX 833 ; N M ; B 73 0 761 718 ;\\r\\nC 78 ; WX 722 ; N N ; B 76 0 646 718 ;\\r\\nC 79 ; WX 778 ; N O ; B 39 -19 739 737 ;\\r\\nC 80 ; WX 667 ; N P ; B 86 0 622 718 ;\\r\\nC 81 ; WX 778 ; N Q ; B 39 -56 739 737 ;\\r\\nC 82 ; WX 722 ; N R ; B 88 0 684 718 ;\\r\\nC 83 ; WX 667 ; N S ; B 49 -19 620 737 ;\\r\\nC 84 ; WX 611 ; N T ; B 14 0 597 718 ;\\r\\nC 85 ; WX 722 ; N U ; B 79 -19 644 718 ;\\r\\nC 86 ; WX 667 ; N V ; B 20 0 647 718 ;\\r\\nC 87 ; WX 944 ; N W ; B 16 0 928 718 ;\\r\\nC 88 ; WX 667 ; N X ; B 19 0 648 718 ;\\r\\nC 89 ; WX 667 ; N Y ; B 14 0 653 718 ;\\r\\nC 90 ; WX 611 ; N Z ; B 23 0 588 718 ;\\r\\nC 91 ; WX 278 ; N bracketleft ; B 63 -196 250 722 ;\\r\\nC 92 ; WX 278 ; N backslash ; B -17 -19 295 737 ;\\r\\nC 93 ; WX 278 ; N bracketright ; B 28 -196 215 722 ;\\r\\nC 94 ; WX 469 ; N asciicircum ; B -14 264 483 688 ;\\r\\nC 95 ; WX 556 ; N underscore ; B 0 -125 556 -75 ;\\r\\nC 96 ; WX 222 ; N quoteleft ; B 65 470 169 725 ;\\r\\nC 97 ; WX 556 ; N a ; B 36 -15 530 538 ;\\r\\nC 98 ; WX 556 ; N b ; B 58 -15 517 718 ;\\r\\nC 99 ; WX 500 ; N c ; B 30 -15 477 538 ;\\r\\nC 100 ; WX 556 ; N d ; B 35 -15 499 718 ;\\r\\nC 101 ; WX 556 ; N e ; B 40 -15 516 538 ;\\r\\nC 102 ; WX 278 ; N f ; B 14 0 262 728 ; L i fi ; L l fl ;\\r\\nC 103 ; WX 556 ; N g ; B 40 -220 499 538 ;\\r\\nC 104 ; WX 556 ; N h ; B 65 0 491 718 ;\\r\\nC 105 ; WX 222 ; N i ; B 67 0 155 718 ;\\r\\nC 106 ; WX 222 ; N j ; B -16 -210 155 718 ;\\r\\nC 107 ; WX 500 ; N k ; B 67 0 501 718 ;\\r\\nC 108 ; WX 222 ; N l ; B 67 0 155 718 ;\\r\\nC 109 ; WX 833 ; N m ; B 65 0 769 538 ;\\r\\nC 110 ; WX 556 ; N n ; B 65 0 491 538 ;\\r\\nC 111 ; WX 556 ; N o ; B 35 -14 521 538 ;\\r\\nC 112 ; WX 556 ; N p ; B 58 -207 517 538 ;\\r\\nC 113 ; WX 556 ; N q ; B 35 -207 494 538 ;\\r\\nC 114 ; WX 333 ; N r ; B 77 0 332 538 ;\\r\\nC 115 ; WX 500 ; N s ; B 32 -15 464 538 ;\\r\\nC 116 ; WX 278 ; N t ; B 14 -7 257 669 ;\\r\\nC 117 ; WX 556 ; N u ; B 68 -15 489 523 ;\\r\\nC 118 ; WX 500 ; N v ; B 8 0 492 523 ;\\r\\nC 119 ; WX 722 ; N w ; B 14 0 709 523 ;\\r\\nC 120 ; WX 500 ; N x ; B 11 0 490 523 ;\\r\\nC 121 ; WX 500 ; N y ; B 11 -214 489 523 ;\\r\\nC 122 ; WX 500 ; N z ; B 31 0 469 523 ;\\r\\nC 123 ; WX 334 ; N braceleft ; B 42 -196 292 722 ;\\r\\nC 124 ; WX 260 ; N bar ; B 94 -225 167 775 ;\\r\\nC 125 ; WX 334 ; N braceright ; B 42 -196 292 722 ;\\r\\nC 126 ; WX 584 ; N asciitilde ; B 61 180 523 326 ;\\r\\nC 161 ; WX 333 ; N exclamdown ; B 118 -195 215 523 ;\\r\\nC 162 ; WX 556 ; N cent ; B 51 -115 513 623 ;\\r\\nC 163 ; WX 556 ; N sterling ; B 33 -16 539 718 ;\\r\\nC 164 ; WX 167 ; N fraction ; B -166 -19 333 703 ;\\r\\nC 165 ; WX 556 ; N yen ; B 3 0 553 688 ;\\r\\nC 166 ; WX 556 ; N florin ; B -11 -207 501 737 ;\\r\\nC 167 ; WX 556 ; N section ; B 43 -191 512 737 ;\\r\\nC 168 ; WX 556 ; N currency ; B 28 99 528 603 ;\\r\\nC 169 ; WX 191 ; N quotesingle ; B 59 463 132 718 ;\\r\\nC 170 ; WX 333 ; N quotedblleft ; B 38 470 307 725 ;\\r\\nC 171 ; WX 556 ; N guillemotleft ; B 97 108 459 446 ;\\r\\nC 172 ; WX 333 ; N guilsinglleft ; B 88 108 245 446 ;\\r\\nC 173 ; WX 333 ; N guilsinglright ; B 88 108 245 446 ;\\r\\nC 174 ; WX 500 ; N fi ; B 14 0 434 728 ;\\r\\nC 175 ; WX 500 ; N fl ; B 14 0 432 728 ;\\r\\nC 177 ; WX 556 ; N endash ; B 0 240 556 313 ;\\r\\nC 178 ; WX 556 ; N dagger ; B 43 -159 514 718 ;\\r\\nC 179 ; WX 556 ; N daggerdbl ; B 43 -159 514 718 ;\\r\\nC 180 ; WX 278 ; N periodcentered ; B 77 190 202 315 ;\\r\\nC 182 ; WX 537 ; N paragraph ; B 18 -173 497 718 ;\\r\\nC 183 ; WX 350 ; N bullet ; B 18 202 333 517 ;\\r\\nC 184 ; WX 222 ; N quotesinglbase ; B 53 -149 157 106 ;\\r\\nC 185 ; WX 333 ; N quotedblbase ; B 26 -149 295 106 ;\\r\\nC 186 ; WX 333 ; N quotedblright ; B 26 463 295 718 ;\\r\\nC 187 ; WX 556 ; N guillemotright ; B 97 108 459 446 ;\\r\\nC 188 ; WX 1000 ; N ellipsis ; B 115 0 885 106 ;\\r\\nC 189 ; WX 1000 ; N perthousand ; B 7 -19 994 703 ;\\r\\nC 191 ; WX 611 ; N questiondown ; B 91 -201 527 525 ;\\r\\nC 193 ; WX 333 ; N grave ; B 14 593 211 734 ;\\r\\nC 194 ; WX 333 ; N acute ; B 122 593 319 734 ;\\r\\nC 195 ; WX 333 ; N circumflex ; B 21 593 312 734 ;\\r\\nC 196 ; WX 333 ; N tilde ; B -4 606 337 722 ;\\r\\nC 197 ; WX 333 ; N macron ; B 10 627 323 684 ;\\r\\nC 198 ; WX 333 ; N breve ; B 13 595 321 731 ;\\r\\nC 199 ; WX 333 ; N dotaccent ; B 121 604 212 706 ;\\r\\nC 200 ; WX 333 ; N dieresis ; B 40 604 293 706 ;\\r\\nC 202 ; WX 333 ; N ring ; B 75 572 259 756 ;\\r\\nC 203 ; WX 333 ; N cedilla ; B 45 -225 259 0 ;\\r\\nC 205 ; WX 333 ; N hungarumlaut ; B 31 593 409 734 ;\\r\\nC 206 ; WX 333 ; N ogonek ; B 73 -225 287 0 ;\\r\\nC 207 ; WX 333 ; N caron ; B 21 593 312 734 ;\\r\\nC 208 ; WX 1000 ; N emdash ; B 0 240 1000 313 ;\\r\\nC 225 ; WX 1000 ; N AE ; B 8 0 951 718 ;\\r\\nC 227 ; WX 370 ; N ordfeminine ; B 24 405 346 737 ;\\r\\nC 232 ; WX 556 ; N Lslash ; B -20 0 537 718 ;\\r\\nC 233 ; WX 778 ; N Oslash ; B 39 -19 740 737 ;\\r\\nC 234 ; WX 1000 ; N OE ; B 36 -19 965 737 ;\\r\\nC 235 ; WX 365 ; N ordmasculine ; B 25 405 341 737 ;\\r\\nC 241 ; WX 889 ; N ae ; B 36 -15 847 538 ;\\r\\nC 245 ; WX 278 ; N dotlessi ; B 95 0 183 523 ;\\r\\nC 248 ; WX 222 ; N lslash ; B -20 0 242 718 ;\\r\\nC 249 ; WX 611 ; N oslash ; B 28 -22 537 545 ;\\r\\nC 250 ; WX 944 ; N oe ; B 35 -15 902 538 ;\\r\\nC 251 ; WX 611 ; N germandbls ; B 67 -15 571 728 ;\\r\\nC -1 ; WX 278 ; N Idieresis ; B 13 0 266 901 ;\\r\\nC -1 ; WX 556 ; N eacute ; B 40 -15 516 734 ;\\r\\nC -1 ; WX 556 ; N abreve ; B 36 -15 530 731 ;\\r\\nC -1 ; WX 556 ; N uhungarumlaut ; B 68 -15 521 734 ;\\r\\nC -1 ; WX 556 ; N ecaron ; B 40 -15 516 734 ;\\r\\nC -1 ; WX 667 ; N Ydieresis ; B 14 0 653 901 ;\\r\\nC -1 ; WX 584 ; N divide ; B 39 -19 545 524 ;\\r\\nC -1 ; WX 667 ; N Yacute ; B 14 0 653 929 ;\\r\\nC -1 ; WX 667 ; N Acircumflex ; B 14 0 654 929 ;\\r\\nC -1 ; WX 556 ; N aacute ; B 36 -15 530 734 ;\\r\\nC -1 ; WX 722 ; N Ucircumflex ; B 79 -19 644 929 ;\\r\\nC -1 ; WX 500 ; N yacute ; B 11 -214 489 734 ;\\r\\nC -1 ; WX 500 ; N scommaaccent ; B 32 -225 464 538 ;\\r\\nC -1 ; WX 556 ; N ecircumflex ; B 40 -15 516 734 ;\\r\\nC -1 ; WX 722 ; N Uring ; B 79 -19 644 931 ;\\r\\nC -1 ; WX 722 ; N Udieresis ; B 79 -19 644 901 ;\\r\\nC -1 ; WX 556 ; N aogonek ; B 36 -220 547 538 ;\\r\\nC -1 ; WX 722 ; N Uacute ; B 79 -19 644 929 ;\\r\\nC -1 ; WX 556 ; N uogonek ; B 68 -225 519 523 ;\\r\\nC -1 ; WX 667 ; N Edieresis ; B 86 0 616 901 ;\\r\\nC -1 ; WX 722 ; N Dcroat ; B 0 0 674 718 ;\\r\\nC -1 ; WX 250 ; N commaaccent ; B 87 -225 181 -40 ;\\r\\nC -1 ; WX 737 ; N copyright ; B -14 -19 752 737 ;\\r\\nC -1 ; WX 667 ; N Emacron ; B 86 0 616 879 ;\\r\\nC -1 ; WX 500 ; N ccaron ; B 30 -15 477 734 ;\\r\\nC -1 ; WX 556 ; N aring ; B 36 -15 530 756 ;\\r\\nC -1 ; WX 722 ; N Ncommaaccent ; B 76 -225 646 718 ;\\r\\nC -1 ; WX 222 ; N lacute ; B 67 0 264 929 ;\\r\\nC -1 ; WX 556 ; N agrave ; B 36 -15 530 734 ;\\r\\nC -1 ; WX 611 ; N Tcommaaccent ; B 14 -225 597 718 ;\\r\\nC -1 ; WX 722 ; N Cacute ; B 44 -19 681 929 ;\\r\\nC -1 ; WX 556 ; N atilde ; B 36 -15 530 722 ;\\r\\nC -1 ; WX 667 ; N Edotaccent ; B 86 0 616 901 ;\\r\\nC -1 ; WX 500 ; N scaron ; B 32 -15 464 734 ;\\r\\nC -1 ; WX 500 ; N scedilla ; B 32 -225 464 538 ;\\r\\nC -1 ; WX 278 ; N iacute ; B 95 0 292 734 ;\\r\\nC -1 ; WX 471 ; N lozenge ; B 10 0 462 728 ;\\r\\nC -1 ; WX 722 ; N Rcaron ; B 88 0 684 929 ;\\r\\nC -1 ; WX 778 ; N Gcommaaccent ; B 48 -225 704 737 ;\\r\\nC -1 ; WX 556 ; N ucircumflex ; B 68 -15 489 734 ;\\r\\nC -1 ; WX 556 ; N acircumflex ; B 36 -15 530 734 ;\\r\\nC -1 ; WX 667 ; N Amacron ; B 14 0 654 879 ;\\r\\nC -1 ; WX 333 ; N rcaron ; B 61 0 352 734 ;\\r\\nC -1 ; WX 500 ; N ccedilla ; B 30 -225 477 538 ;\\r\\nC -1 ; WX 611 ; N Zdotaccent ; B 23 0 588 901 ;\\r\\nC -1 ; WX 667 ; N Thorn ; B 86 0 622 718 ;\\r\\nC -1 ; WX 778 ; N Omacron ; B 39 -19 739 879 ;\\r\\nC -1 ; WX 722 ; N Racute ; B 88 0 684 929 ;\\r\\nC -1 ; WX 667 ; N Sacute ; B 49 -19 620 929 ;\\r\\nC -1 ; WX 643 ; N dcaron ; B 35 -15 655 718 ;\\r\\nC -1 ; WX 722 ; N Umacron ; B 79 -19 644 879 ;\\r\\nC -1 ; WX 556 ; N uring ; B 68 -15 489 756 ;\\r\\nC -1 ; WX 333 ; N threesuperior ; B 5 270 325 703 ;\\r\\nC -1 ; WX 778 ; N Ograve ; B 39 -19 739 929 ;\\r\\nC -1 ; WX 667 ; N Agrave ; B 14 0 654 929 ;\\r\\nC -1 ; WX 667 ; N Abreve ; B 14 0 654 926 ;\\r\\nC -1 ; WX 584 ; N multiply ; B 39 0 545 506 ;\\r\\nC -1 ; WX 556 ; N uacute ; B 68 -15 489 734 ;\\r\\nC -1 ; WX 611 ; N Tcaron ; B 14 0 597 929 ;\\r\\nC -1 ; WX 476 ; N partialdiff ; B 13 -38 463 714 ;\\r\\nC -1 ; WX 500 ; N ydieresis ; B 11 -214 489 706 ;\\r\\nC -1 ; WX 722 ; N Nacute ; B 76 0 646 929 ;\\r\\nC -1 ; WX 278 ; N icircumflex ; B -6 0 285 734 ;\\r\\nC -1 ; WX 667 ; N Ecircumflex ; B 86 0 616 929 ;\\r\\nC -1 ; WX 556 ; N adieresis ; B 36 -15 530 706 ;\\r\\nC -1 ; WX 556 ; N edieresis ; B 40 -15 516 706 ;\\r\\nC -1 ; WX 500 ; N cacute ; B 30 -15 477 734 ;\\r\\nC -1 ; WX 556 ; N nacute ; B 65 0 491 734 ;\\r\\nC -1 ; WX 556 ; N umacron ; B 68 -15 489 684 ;\\r\\nC -1 ; WX 722 ; N Ncaron ; B 76 0 646 929 ;\\r\\nC -1 ; WX 278 ; N Iacute ; B 91 0 292 929 ;\\r\\nC -1 ; WX 584 ; N plusminus ; B 39 0 545 506 ;\\r\\nC -1 ; WX 260 ; N brokenbar ; B 94 -150 167 700 ;\\r\\nC -1 ; WX 737 ; N registered ; B -14 -19 752 737 ;\\r\\nC -1 ; WX 778 ; N Gbreve ; B 48 -19 704 926 ;\\r\\nC -1 ; WX 278 ; N Idotaccent ; B 91 0 188 901 ;\\r\\nC -1 ; WX 600 ; N summation ; B 15 -10 586 706 ;\\r\\nC -1 ; WX 667 ; N Egrave ; B 86 0 616 929 ;\\r\\nC -1 ; WX 333 ; N racute ; B 77 0 332 734 ;\\r\\nC -1 ; WX 556 ; N omacron ; B 35 -14 521 684 ;\\r\\nC -1 ; WX 611 ; N Zacute ; B 23 0 588 929 ;\\r\\nC -1 ; WX 611 ; N Zcaron ; B 23 0 588 929 ;\\r\\nC -1 ; WX 549 ; N greaterequal ; B 26 0 523 674 ;\\r\\nC -1 ; WX 722 ; N Eth ; B 0 0 674 718 ;\\r\\nC -1 ; WX 722 ; N Ccedilla ; B 44 -225 681 737 ;\\r\\nC -1 ; WX 222 ; N lcommaaccent ; B 67 -225 167 718 ;\\r\\nC -1 ; WX 317 ; N tcaron ; B 14 -7 329 808 ;\\r\\nC -1 ; WX 556 ; N eogonek ; B 40 -225 516 538 ;\\r\\nC -1 ; WX 722 ; N Uogonek ; B 79 -225 644 718 ;\\r\\nC -1 ; WX 667 ; N Aacute ; B 14 0 654 929 ;\\r\\nC -1 ; WX 667 ; N Adieresis ; B 14 0 654 901 ;\\r\\nC -1 ; WX 556 ; N egrave ; B 40 -15 516 734 ;\\r\\nC -1 ; WX 500 ; N zacute ; B 31 0 469 734 ;\\r\\nC -1 ; WX 222 ; N iogonek ; B -31 -225 183 718 ;\\r\\nC -1 ; WX 778 ; N Oacute ; B 39 -19 739 929 ;\\r\\nC -1 ; WX 556 ; N oacute ; B 35 -14 521 734 ;\\r\\nC -1 ; WX 556 ; N amacron ; B 36 -15 530 684 ;\\r\\nC -1 ; WX 500 ; N sacute ; B 32 -15 464 734 ;\\r\\nC -1 ; WX 278 ; N idieresis ; B 13 0 266 706 ;\\r\\nC -1 ; WX 778 ; N Ocircumflex ; B 39 -19 739 929 ;\\r\\nC -1 ; WX 722 ; N Ugrave ; B 79 -19 644 929 ;\\r\\nC -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;\\r\\nC -1 ; WX 556 ; N thorn ; B 58 -207 517 718 ;\\r\\nC -1 ; WX 333 ; N twosuperior ; B 4 281 323 703 ;\\r\\nC -1 ; WX 778 ; N Odieresis ; B 39 -19 739 901 ;\\r\\nC -1 ; WX 556 ; N mu ; B 68 -207 489 523 ;\\r\\nC -1 ; WX 278 ; N igrave ; B -13 0 184 734 ;\\r\\nC -1 ; WX 556 ; N ohungarumlaut ; B 35 -14 521 734 ;\\r\\nC -1 ; WX 667 ; N Eogonek ; B 86 -220 633 718 ;\\r\\nC -1 ; WX 556 ; N dcroat ; B 35 -15 550 718 ;\\r\\nC -1 ; WX 834 ; N threequarters ; B 45 -19 810 703 ;\\r\\nC -1 ; WX 667 ; N Scedilla ; B 49 -225 620 737 ;\\r\\nC -1 ; WX 299 ; N lcaron ; B 67 0 311 718 ;\\r\\nC -1 ; WX 667 ; N Kcommaaccent ; B 76 -225 663 718 ;\\r\\nC -1 ; WX 556 ; N Lacute ; B 76 0 537 929 ;\\r\\nC -1 ; WX 1000 ; N trademark ; B 46 306 903 718 ;\\r\\nC -1 ; WX 556 ; N edotaccent ; B 40 -15 516 706 ;\\r\\nC -1 ; WX 278 ; N Igrave ; B -13 0 188 929 ;\\r\\nC -1 ; WX 278 ; N Imacron ; B -17 0 296 879 ;\\r\\nC -1 ; WX 556 ; N Lcaron ; B 76 0 537 718 ;\\r\\nC -1 ; WX 834 ; N onehalf ; B 43 -19 773 703 ;\\r\\nC -1 ; WX 549 ; N lessequal ; B 26 0 523 674 ;\\r\\nC -1 ; WX 556 ; N ocircumflex ; B 35 -14 521 734 ;\\r\\nC -1 ; WX 556 ; N ntilde ; B 65 0 491 722 ;\\r\\nC -1 ; WX 722 ; N Uhungarumlaut ; B 79 -19 644 929 ;\\r\\nC -1 ; WX 667 ; N Eacute ; B 86 0 616 929 ;\\r\\nC -1 ; WX 556 ; N emacron ; B 40 -15 516 684 ;\\r\\nC -1 ; WX 556 ; N gbreve ; B 40 -220 499 731 ;\\r\\nC -1 ; WX 834 ; N onequarter ; B 73 -19 756 703 ;\\r\\nC -1 ; WX 667 ; N Scaron ; B 49 -19 620 929 ;\\r\\nC -1 ; WX 667 ; N Scommaaccent ; B 49 -225 620 737 ;\\r\\nC -1 ; WX 778 ; N Ohungarumlaut ; B 39 -19 739 929 ;\\r\\nC -1 ; WX 400 ; N degree ; B 54 411 346 703 ;\\r\\nC -1 ; WX 556 ; N ograve ; B 35 -14 521 734 ;\\r\\nC -1 ; WX 722 ; N Ccaron ; B 44 -19 681 929 ;\\r\\nC -1 ; WX 556 ; N ugrave ; B 68 -15 489 734 ;\\r\\nC -1 ; WX 453 ; N radical ; B -4 -80 458 762 ;\\r\\nC -1 ; WX 722 ; N Dcaron ; B 81 0 674 929 ;\\r\\nC -1 ; WX 333 ; N rcommaaccent ; B 77 -225 332 538 ;\\r\\nC -1 ; WX 722 ; N Ntilde ; B 76 0 646 917 ;\\r\\nC -1 ; WX 556 ; N otilde ; B 35 -14 521 722 ;\\r\\nC -1 ; WX 722 ; N Rcommaaccent ; B 88 -225 684 718 ;\\r\\nC -1 ; WX 556 ; N Lcommaaccent ; B 76 -225 537 718 ;\\r\\nC -1 ; WX 667 ; N Atilde ; B 14 0 654 917 ;\\r\\nC -1 ; WX 667 ; N Aogonek ; B 14 -225 654 718 ;\\r\\nC -1 ; WX 667 ; N Aring ; B 14 0 654 931 ;\\r\\nC -1 ; WX 778 ; N Otilde ; B 39 -19 739 917 ;\\r\\nC -1 ; WX 500 ; N zdotaccent ; B 31 0 469 706 ;\\r\\nC -1 ; WX 667 ; N Ecaron ; B 86 0 616 929 ;\\r\\nC -1 ; WX 278 ; N Iogonek ; B -3 -225 211 718 ;\\r\\nC -1 ; WX 500 ; N kcommaaccent ; B 67 -225 501 718 ;\\r\\nC -1 ; WX 584 ; N minus ; B 39 216 545 289 ;\\r\\nC -1 ; WX 278 ; N Icircumflex ; B -6 0 285 929 ;\\r\\nC -1 ; WX 556 ; N ncaron ; B 65 0 491 734 ;\\r\\nC -1 ; WX 278 ; N tcommaaccent ; B 14 -225 257 669 ;\\r\\nC -1 ; WX 584 ; N logicalnot ; B 39 108 545 390 ;\\r\\nC -1 ; WX 556 ; N odieresis ; B 35 -14 521 706 ;\\r\\nC -1 ; WX 556 ; N udieresis ; B 68 -15 489 706 ;\\r\\nC -1 ; WX 549 ; N notequal ; B 12 -35 537 551 ;\\r\\nC -1 ; WX 556 ; N gcommaaccent ; B 40 -220 499 822 ;\\r\\nC -1 ; WX 556 ; N eth ; B 35 -15 522 737 ;\\r\\nC -1 ; WX 500 ; N zcaron ; B 31 0 469 734 ;\\r\\nC -1 ; WX 556 ; N ncommaaccent ; B 65 -225 491 538 ;\\r\\nC -1 ; WX 333 ; N onesuperior ; B 43 281 222 703 ;\\r\\nC -1 ; WX 278 ; N imacron ; B 5 0 272 684 ;\\r\\nC -1 ; WX 556 ; N Euro ; B 0 0 0 0 ;\\r\\nEndCharMetrics\\r\\nStartKernData\\r\\nStartKernPairs 2705\\r\\nKPX A C -30\\r\\nKPX A Cacute -30\\r\\nKPX A Ccaron -30\\r\\nKPX A Ccedilla -30\\r\\nKPX A G -30\\r\\nKPX A Gbreve -30\\r\\nKPX A Gcommaaccent -30\\r\\nKPX A O -30\\r\\nKPX A Oacute -30\\r\\nKPX A Ocircumflex -30\\r\\nKPX A Odieresis -30\\r\\nKPX A Ograve -30\\r\\nKPX A Ohungarumlaut -30\\r\\nKPX A Omacron -30\\r\\nKPX A Oslash -30\\r\\nKPX A Otilde -30\\r\\nKPX A Q -30\\r\\nKPX A T -120\\r\\nKPX A Tcaron -120\\r\\nKPX A Tcommaaccent -120\\r\\nKPX A U -50\\r\\nKPX A Uacute -50\\r\\nKPX A Ucircumflex -50\\r\\nKPX A Udieresis -50\\r\\nKPX A Ugrave -50\\r\\nKPX A Uhungarumlaut -50\\r\\nKPX A Umacron -50\\r\\nKPX A Uogonek -50\\r\\nKPX A Uring -50\\r\\nKPX A V -70\\r\\nKPX A W -50\\r\\nKPX A Y -100\\r\\nKPX A Yacute -100\\r\\nKPX A Ydieresis -100\\r\\nKPX A u -30\\r\\nKPX A uacute -30\\r\\nKPX A ucircumflex -30\\r\\nKPX A udieresis -30\\r\\nKPX A ugrave -30\\r\\nKPX A uhungarumlaut -30\\r\\nKPX A umacron -30\\r\\nKPX A uogonek -30\\r\\nKPX A uring -30\\r\\nKPX A v -40\\r\\nKPX A w -40\\r\\nKPX A y -40\\r\\nKPX A yacute -40\\r\\nKPX A ydieresis -40\\r\\nKPX Aacute C -30\\r\\nKPX Aacute Cacute -30\\r\\nKPX Aacute Ccaron -30\\r\\nKPX Aacute Ccedilla -30\\r\\nKPX Aacute G -30\\r\\nKPX Aacute Gbreve -30\\r\\nKPX Aacute Gcommaaccent -30\\r\\nKPX Aacute O -30\\r\\nKPX Aacute Oacute -30\\r\\nKPX Aacute Ocircumflex -30\\r\\nKPX Aacute Odieresis -30\\r\\nKPX Aacute Ograve -30\\r\\nKPX Aacute Ohungarumlaut -30\\r\\nKPX Aacute Omacron -30\\r\\nKPX Aacute Oslash -30\\r\\nKPX Aacute Otilde -30\\r\\nKPX Aacute Q -30\\r\\nKPX Aacute T -120\\r\\nKPX Aacute Tcaron -120\\r\\nKPX Aacute Tcommaaccent -120\\r\\nKPX Aacute U -50\\r\\nKPX Aacute Uacute -50\\r\\nKPX Aacute Ucircumflex -50\\r\\nKPX Aacute Udieresis -50\\r\\nKPX Aacute Ugrave -50\\r\\nKPX Aacute Uhungarumlaut -50\\r\\nKPX Aacute Umacron -50\\r\\nKPX Aacute Uogonek -50\\r\\nKPX Aacute Uring -50\\r\\nKPX Aacute V -70\\r\\nKPX Aacute W -50\\r\\nKPX Aacute Y -100\\r\\nKPX Aacute Yacute -100\\r\\nKPX Aacute Ydieresis -100\\r\\nKPX Aacute u -30\\r\\nKPX Aacute uacute -30\\r\\nKPX Aacute ucircumflex -30\\r\\nKPX Aacute udieresis -30\\r\\nKPX Aacute ugrave -30\\r\\nKPX Aacute uhungarumlaut -30\\r\\nKPX Aacute umacron -30\\r\\nKPX Aacute uogonek -30\\r\\nKPX Aacute uring -30\\r\\nKPX Aacute v -40\\r\\nKPX Aacute w -40\\r\\nKPX Aacute y -40\\r\\nKPX Aacute yacute -40\\r\\nKPX Aacute ydieresis -40\\r\\nKPX Abreve C -30\\r\\nKPX Abreve Cacute -30\\r\\nKPX Abreve Ccaron -30\\r\\nKPX Abreve Ccedilla -30\\r\\nKPX Abreve G -30\\r\\nKPX Abreve Gbreve -30\\r\\nKPX Abreve Gcommaaccent -30\\r\\nKPX Abreve O -30\\r\\nKPX Abreve Oacute -30\\r\\nKPX Abreve Ocircumflex -30\\r\\nKPX Abreve Odieresis -30\\r\\nKPX Abreve Ograve -30\\r\\nKPX Abreve Ohungarumlaut -30\\r\\nKPX Abreve Omacron -30\\r\\nKPX Abreve Oslash -30\\r\\nKPX Abreve Otilde -30\\r\\nKPX Abreve Q -30\\r\\nKPX Abreve T -120\\r\\nKPX Abreve Tcaron -120\\r\\nKPX Abreve Tcommaaccent -120\\r\\nKPX Abreve U -50\\r\\nKPX Abreve Uacute -50\\r\\nKPX Abreve Ucircumflex -50\\r\\nKPX Abreve Udieresis -50\\r\\nKPX Abreve Ugrave -50\\r\\nKPX Abreve Uhungarumlaut -50\\r\\nKPX Abreve Umacron -50\\r\\nKPX Abreve Uogonek -50\\r\\nKPX Abreve Uring -50\\r\\nKPX Abreve V -70\\r\\nKPX Abreve W -50\\r\\nKPX Abreve Y -100\\r\\nKPX Abreve Yacute -100\\r\\nKPX Abreve Ydieresis -100\\r\\nKPX Abreve u -30\\r\\nKPX Abreve uacute -30\\r\\nKPX Abreve ucircumflex -30\\r\\nKPX Abreve udieresis -30\\r\\nKPX Abreve ugrave -30\\r\\nKPX Abreve uhungarumlaut -30\\r\\nKPX Abreve umacron -30\\r\\nKPX Abreve uogonek -30\\r\\nKPX Abreve uring -30\\r\\nKPX Abreve v -40\\r\\nKPX Abreve w -40\\r\\nKPX Abreve y -40\\r\\nKPX Abreve yacute -40\\r\\nKPX Abreve ydieresis -40\\r\\nKPX Acircumflex C -30\\r\\nKPX Acircumflex Cacute -30\\r\\nKPX Acircumflex Ccaron -30\\r\\nKPX Acircumflex Ccedilla -30\\r\\nKPX Acircumflex G -30\\r\\nKPX Acircumflex Gbreve -30\\r\\nKPX Acircumflex Gcommaaccent -30\\r\\nKPX Acircumflex O -30\\r\\nKPX Acircumflex Oacute -30\\r\\nKPX Acircumflex Ocircumflex -30\\r\\nKPX Acircumflex Odieresis -30\\r\\nKPX Acircumflex Ograve -30\\r\\nKPX Acircumflex Ohungarumlaut -30\\r\\nKPX Acircumflex Omacron -30\\r\\nKPX Acircumflex Oslash -30\\r\\nKPX Acircumflex Otilde -30\\r\\nKPX Acircumflex Q -30\\r\\nKPX Acircumflex T -120\\r\\nKPX Acircumflex Tcaron -120\\r\\nKPX Acircumflex Tcommaaccent -120\\r\\nKPX Acircumflex U -50\\r\\nKPX Acircumflex Uacute -50\\r\\nKPX Acircumflex Ucircumflex -50\\r\\nKPX Acircumflex Udieresis -50\\r\\nKPX Acircumflex Ugrave -50\\r\\nKPX Acircumflex Uhungarumlaut -50\\r\\nKPX Acircumflex Umacron -50\\r\\nKPX Acircumflex Uogonek -50\\r\\nKPX Acircumflex Uring -50\\r\\nKPX Acircumflex V -70\\r\\nKPX Acircumflex W -50\\r\\nKPX Acircumflex Y -100\\r\\nKPX Acircumflex Yacute -100\\r\\nKPX Acircumflex Ydieresis -100\\r\\nKPX Acircumflex u -30\\r\\nKPX Acircumflex uacute -30\\r\\nKPX Acircumflex ucircumflex -30\\r\\nKPX Acircumflex udieresis -30\\r\\nKPX Acircumflex ugrave -30\\r\\nKPX Acircumflex uhungarumlaut -30\\r\\nKPX Acircumflex umacron -30\\r\\nKPX Acircumflex uogonek -30\\r\\nKPX Acircumflex uring -30\\r\\nKPX Acircumflex v -40\\r\\nKPX Acircumflex w -40\\r\\nKPX Acircumflex y -40\\r\\nKPX Acircumflex yacute -40\\r\\nKPX Acircumflex ydieresis -40\\r\\nKPX Adieresis C -30\\r\\nKPX Adieresis Cacute -30\\r\\nKPX Adieresis Ccaron -30\\r\\nKPX Adieresis Ccedilla -30\\r\\nKPX Adieresis G -30\\r\\nKPX Adieresis Gbreve -30\\r\\nKPX Adieresis Gcommaaccent -30\\r\\nKPX Adieresis O -30\\r\\nKPX Adieresis Oacute -30\\r\\nKPX Adieresis Ocircumflex -30\\r\\nKPX Adieresis Odieresis -30\\r\\nKPX Adieresis Ograve -30\\r\\nKPX Adieresis Ohungarumlaut -30\\r\\nKPX Adieresis Omacron -30\\r\\nKPX Adieresis Oslash -30\\r\\nKPX Adieresis Otilde -30\\r\\nKPX Adieresis Q -30\\r\\nKPX Adieresis T -120\\r\\nKPX Adieresis Tcaron -120\\r\\nKPX Adieresis Tcommaaccent -120\\r\\nKPX Adieresis U -50\\r\\nKPX Adieresis Uacute -50\\r\\nKPX Adieresis Ucircumflex -50\\r\\nKPX Adieresis Udieresis -50\\r\\nKPX Adieresis Ugrave -50\\r\\nKPX Adieresis Uhungarumlaut -50\\r\\nKPX Adieresis Umacron -50\\r\\nKPX Adieresis Uogonek -50\\r\\nKPX Adieresis Uring -50\\r\\nKPX Adieresis V -70\\r\\nKPX Adieresis W -50\\r\\nKPX Adieresis Y -100\\r\\nKPX Adieresis Yacute -100\\r\\nKPX Adieresis Ydieresis -100\\r\\nKPX Adieresis u -30\\r\\nKPX Adieresis uacute -30\\r\\nKPX Adieresis ucircumflex -30\\r\\nKPX Adieresis udieresis -30\\r\\nKPX Adieresis ugrave -30\\r\\nKPX Adieresis uhungarumlaut -30\\r\\nKPX Adieresis umacron -30\\r\\nKPX Adieresis uogonek -30\\r\\nKPX Adieresis uring -30\\r\\nKPX Adieresis v -40\\r\\nKPX Adieresis w -40\\r\\nKPX Adieresis y -40\\r\\nKPX Adieresis yacute -40\\r\\nKPX Adieresis ydieresis -40\\r\\nKPX Agrave C -30\\r\\nKPX Agrave Cacute -30\\r\\nKPX Agrave Ccaron -30\\r\\nKPX Agrave Ccedilla -30\\r\\nKPX Agrave G -30\\r\\nKPX Agrave Gbreve -30\\r\\nKPX Agrave Gcommaaccent -30\\r\\nKPX Agrave O -30\\r\\nKPX Agrave Oacute -30\\r\\nKPX Agrave Ocircumflex -30\\r\\nKPX Agrave Odieresis -30\\r\\nKPX Agrave Ograve -30\\r\\nKPX Agrave Ohungarumlaut -30\\r\\nKPX Agrave Omacron -30\\r\\nKPX Agrave Oslash -30\\r\\nKPX Agrave Otilde -30\\r\\nKPX Agrave Q -30\\r\\nKPX Agrave T -120\\r\\nKPX Agrave Tcaron -120\\r\\nKPX Agrave Tcommaaccent -120\\r\\nKPX Agrave U -50\\r\\nKPX Agrave Uacute -50\\r\\nKPX Agrave Ucircumflex -50\\r\\nKPX Agrave Udieresis -50\\r\\nKPX Agrave Ugrave -50\\r\\nKPX Agrave Uhungarumlaut -50\\r\\nKPX Agrave Umacron -50\\r\\nKPX Agrave Uogonek -50\\r\\nKPX Agrave Uring -50\\r\\nKPX Agrave V -70\\r\\nKPX Agrave W -50\\r\\nKPX Agrave Y -100\\r\\nKPX Agrave Yacute -100\\r\\nKPX Agrave Ydieresis -100\\r\\nKPX Agrave u -30\\r\\nKPX Agrave uacute -30\\r\\nKPX Agrave ucircumflex -30\\r\\nKPX Agrave udieresis -30\\r\\nKPX Agrave ugrave -30\\r\\nKPX Agrave uhungarumlaut -30\\r\\nKPX Agrave umacron -30\\r\\nKPX Agrave uogonek -30\\r\\nKPX Agrave uring -30\\r\\nKPX Agrave v -40\\r\\nKPX Agrave w -40\\r\\nKPX Agrave y -40\\r\\nKPX Agrave yacute -40\\r\\nKPX Agrave ydieresis -40\\r\\nKPX Amacron C -30\\r\\nKPX Amacron Cacute -30\\r\\nKPX Amacron Ccaron -30\\r\\nKPX Amacron Ccedilla -30\\r\\nKPX Amacron G -30\\r\\nKPX Amacron Gbreve -30\\r\\nKPX Amacron Gcommaaccent -30\\r\\nKPX Amacron O -30\\r\\nKPX Amacron Oacute -30\\r\\nKPX Amacron Ocircumflex -30\\r\\nKPX Amacron Odieresis -30\\r\\nKPX Amacron Ograve -30\\r\\nKPX Amacron Ohungarumlaut -30\\r\\nKPX Amacron Omacron -30\\r\\nKPX Amacron Oslash -30\\r\\nKPX Amacron Otilde -30\\r\\nKPX Amacron Q -30\\r\\nKPX Amacron T -120\\r\\nKPX Amacron Tcaron -120\\r\\nKPX Amacron Tcommaaccent -120\\r\\nKPX Amacron U -50\\r\\nKPX Amacron Uacute -50\\r\\nKPX Amacron Ucircumflex -50\\r\\nKPX Amacron Udieresis -50\\r\\nKPX Amacron Ugrave -50\\r\\nKPX Amacron Uhungarumlaut -50\\r\\nKPX Amacron Umacron -50\\r\\nKPX Amacron Uogonek -50\\r\\nKPX Amacron Uring -50\\r\\nKPX Amacron V -70\\r\\nKPX Amacron W -50\\r\\nKPX Amacron Y -100\\r\\nKPX Amacron Yacute -100\\r\\nKPX Amacron Ydieresis -100\\r\\nKPX Amacron u -30\\r\\nKPX Amacron uacute -30\\r\\nKPX Amacron ucircumflex -30\\r\\nKPX Amacron udieresis -30\\r\\nKPX Amacron ugrave -30\\r\\nKPX Amacron uhungarumlaut -30\\r\\nKPX Amacron umacron -30\\r\\nKPX Amacron uogonek -30\\r\\nKPX Amacron uring -30\\r\\nKPX Amacron v -40\\r\\nKPX Amacron w -40\\r\\nKPX Amacron y -40\\r\\nKPX Amacron yacute -40\\r\\nKPX Amacron ydieresis -40\\r\\nKPX Aogonek C -30\\r\\nKPX Aogonek Cacute -30\\r\\nKPX Aogonek Ccaron -30\\r\\nKPX Aogonek Ccedilla -30\\r\\nKPX Aogonek G -30\\r\\nKPX Aogonek Gbreve -30\\r\\nKPX Aogonek Gcommaaccent -30\\r\\nKPX Aogonek O -30\\r\\nKPX Aogonek Oacute -30\\r\\nKPX Aogonek Ocircumflex -30\\r\\nKPX Aogonek Odieresis -30\\r\\nKPX Aogonek Ograve -30\\r\\nKPX Aogonek Ohungarumlaut -30\\r\\nKPX Aogonek Omacron -30\\r\\nKPX Aogonek Oslash -30\\r\\nKPX Aogonek Otilde -30\\r\\nKPX Aogonek Q -30\\r\\nKPX Aogonek T -120\\r\\nKPX Aogonek Tcaron -120\\r\\nKPX Aogonek Tcommaaccent -120\\r\\nKPX Aogonek U -50\\r\\nKPX Aogonek Uacute -50\\r\\nKPX Aogonek Ucircumflex -50\\r\\nKPX Aogonek Udieresis -50\\r\\nKPX Aogonek Ugrave -50\\r\\nKPX Aogonek Uhungarumlaut -50\\r\\nKPX Aogonek Umacron -50\\r\\nKPX Aogonek Uogonek -50\\r\\nKPX Aogonek Uring -50\\r\\nKPX Aogonek V -70\\r\\nKPX Aogonek W -50\\r\\nKPX Aogonek Y -100\\r\\nKPX Aogonek Yacute -100\\r\\nKPX Aogonek Ydieresis -100\\r\\nKPX Aogonek u -30\\r\\nKPX Aogonek uacute -30\\r\\nKPX Aogonek ucircumflex -30\\r\\nKPX Aogonek udieresis -30\\r\\nKPX Aogonek ugrave -30\\r\\nKPX Aogonek uhungarumlaut -30\\r\\nKPX Aogonek umacron -30\\r\\nKPX Aogonek uogonek -30\\r\\nKPX Aogonek uring -30\\r\\nKPX Aogonek v -40\\r\\nKPX Aogonek w -40\\r\\nKPX Aogonek y -40\\r\\nKPX Aogonek yacute -40\\r\\nKPX Aogonek ydieresis -40\\r\\nKPX Aring C -30\\r\\nKPX Aring Cacute -30\\r\\nKPX Aring Ccaron -30\\r\\nKPX Aring Ccedilla -30\\r\\nKPX Aring G -30\\r\\nKPX Aring Gbreve -30\\r\\nKPX Aring Gcommaaccent -30\\r\\nKPX Aring O -30\\r\\nKPX Aring Oacute -30\\r\\nKPX Aring Ocircumflex -30\\r\\nKPX Aring Odieresis -30\\r\\nKPX Aring Ograve -30\\r\\nKPX Aring Ohungarumlaut -30\\r\\nKPX Aring Omacron -30\\r\\nKPX Aring Oslash -30\\r\\nKPX Aring Otilde -30\\r\\nKPX Aring Q -30\\r\\nKPX Aring T -120\\r\\nKPX Aring Tcaron -120\\r\\nKPX Aring Tcommaaccent -120\\r\\nKPX Aring U -50\\r\\nKPX Aring Uacute -50\\r\\nKPX Aring Ucircumflex -50\\r\\nKPX Aring Udieresis -50\\r\\nKPX Aring Ugrave -50\\r\\nKPX Aring Uhungarumlaut -50\\r\\nKPX Aring Umacron -50\\r\\nKPX Aring Uogonek -50\\r\\nKPX Aring Uring -50\\r\\nKPX Aring V -70\\r\\nKPX Aring W -50\\r\\nKPX Aring Y -100\\r\\nKPX Aring Yacute -100\\r\\nKPX Aring Ydieresis -100\\r\\nKPX Aring u -30\\r\\nKPX Aring uacute -30\\r\\nKPX Aring ucircumflex -30\\r\\nKPX Aring udieresis -30\\r\\nKPX Aring ugrave -30\\r\\nKPX Aring uhungarumlaut -30\\r\\nKPX Aring umacron -30\\r\\nKPX Aring uogonek -30\\r\\nKPX Aring uring -30\\r\\nKPX Aring v -40\\r\\nKPX Aring w -40\\r\\nKPX Aring y -40\\r\\nKPX Aring yacute -40\\r\\nKPX Aring ydieresis -40\\r\\nKPX Atilde C -30\\r\\nKPX Atilde Cacute -30\\r\\nKPX Atilde Ccaron -30\\r\\nKPX Atilde Ccedilla -30\\r\\nKPX Atilde G -30\\r\\nKPX Atilde Gbreve -30\\r\\nKPX Atilde Gcommaaccent -30\\r\\nKPX Atilde O -30\\r\\nKPX Atilde Oacute -30\\r\\nKPX Atilde Ocircumflex -30\\r\\nKPX Atilde Odieresis -30\\r\\nKPX Atilde Ograve -30\\r\\nKPX Atilde Ohungarumlaut -30\\r\\nKPX Atilde Omacron -30\\r\\nKPX Atilde Oslash -30\\r\\nKPX Atilde Otilde -30\\r\\nKPX Atilde Q -30\\r\\nKPX Atilde T -120\\r\\nKPX Atilde Tcaron -120\\r\\nKPX Atilde Tcommaaccent -120\\r\\nKPX Atilde U -50\\r\\nKPX Atilde Uacute -50\\r\\nKPX Atilde Ucircumflex -50\\r\\nKPX Atilde Udieresis -50\\r\\nKPX Atilde Ugrave -50\\r\\nKPX Atilde Uhungarumlaut -50\\r\\nKPX Atilde Umacron -50\\r\\nKPX Atilde Uogonek -50\\r\\nKPX Atilde Uring -50\\r\\nKPX Atilde V -70\\r\\nKPX Atilde W -50\\r\\nKPX Atilde Y -100\\r\\nKPX Atilde Yacute -100\\r\\nKPX Atilde Ydieresis -100\\r\\nKPX Atilde u -30\\r\\nKPX Atilde uacute -30\\r\\nKPX Atilde ucircumflex -30\\r\\nKPX Atilde udieresis -30\\r\\nKPX Atilde ugrave -30\\r\\nKPX Atilde uhungarumlaut -30\\r\\nKPX Atilde umacron -30\\r\\nKPX Atilde uogonek -30\\r\\nKPX Atilde uring -30\\r\\nKPX Atilde v -40\\r\\nKPX Atilde w -40\\r\\nKPX Atilde y -40\\r\\nKPX Atilde yacute -40\\r\\nKPX Atilde ydieresis -40\\r\\nKPX B U -10\\r\\nKPX B Uacute -10\\r\\nKPX B Ucircumflex -10\\r\\nKPX B Udieresis -10\\r\\nKPX B Ugrave -10\\r\\nKPX B Uhungarumlaut -10\\r\\nKPX B Umacron -10\\r\\nKPX B Uogonek -10\\r\\nKPX B Uring -10\\r\\nKPX B comma -20\\r\\nKPX B period -20\\r\\nKPX C comma -30\\r\\nKPX C period -30\\r\\nKPX Cacute comma -30\\r\\nKPX Cacute period -30\\r\\nKPX Ccaron comma -30\\r\\nKPX Ccaron period -30\\r\\nKPX Ccedilla comma -30\\r\\nKPX Ccedilla period -30\\r\\nKPX D A -40\\r\\nKPX D Aacute -40\\r\\nKPX D Abreve -40\\r\\nKPX D Acircumflex -40\\r\\nKPX D Adieresis -40\\r\\nKPX D Agrave -40\\r\\nKPX D Amacron -40\\r\\nKPX D Aogonek -40\\r\\nKPX D Aring -40\\r\\nKPX D Atilde -40\\r\\nKPX D V -70\\r\\nKPX D W -40\\r\\nKPX D Y -90\\r\\nKPX D Yacute -90\\r\\nKPX D Ydieresis -90\\r\\nKPX D comma -70\\r\\nKPX D period -70\\r\\nKPX Dcaron A -40\\r\\nKPX Dcaron Aacute -40\\r\\nKPX Dcaron Abreve -40\\r\\nKPX Dcaron Acircumflex -40\\r\\nKPX Dcaron Adieresis -40\\r\\nKPX Dcaron Agrave -40\\r\\nKPX Dcaron Amacron -40\\r\\nKPX Dcaron Aogonek -40\\r\\nKPX Dcaron Aring -40\\r\\nKPX Dcaron Atilde -40\\r\\nKPX Dcaron V -70\\r\\nKPX Dcaron W -40\\r\\nKPX Dcaron Y -90\\r\\nKPX Dcaron Yacute -90\\r\\nKPX Dcaron Ydieresis -90\\r\\nKPX Dcaron comma -70\\r\\nKPX Dcaron period -70\\r\\nKPX Dcroat A -40\\r\\nKPX Dcroat Aacute -40\\r\\nKPX Dcroat Abreve -40\\r\\nKPX Dcroat Acircumflex -40\\r\\nKPX Dcroat Adieresis -40\\r\\nKPX Dcroat Agrave -40\\r\\nKPX Dcroat Amacron -40\\r\\nKPX Dcroat Aogonek -40\\r\\nKPX Dcroat Aring -40\\r\\nKPX Dcroat Atilde -40\\r\\nKPX Dcroat V -70\\r\\nKPX Dcroat W -40\\r\\nKPX Dcroat Y -90\\r\\nKPX Dcroat Yacute -90\\r\\nKPX Dcroat Ydieresis -90\\r\\nKPX Dcroat comma -70\\r\\nKPX Dcroat period -70\\r\\nKPX F A -80\\r\\nKPX F Aacute -80\\r\\nKPX F Abreve -80\\r\\nKPX F Acircumflex -80\\r\\nKPX F Adieresis -80\\r\\nKPX F Agrave -80\\r\\nKPX F Amacron -80\\r\\nKPX F Aogonek -80\\r\\nKPX F Aring -80\\r\\nKPX F Atilde -80\\r\\nKPX F a -50\\r\\nKPX F aacute -50\\r\\nKPX F abreve -50\\r\\nKPX F acircumflex -50\\r\\nKPX F adieresis -50\\r\\nKPX F agrave -50\\r\\nKPX F amacron -50\\r\\nKPX F aogonek -50\\r\\nKPX F aring -50\\r\\nKPX F atilde -50\\r\\nKPX F comma -150\\r\\nKPX F e -30\\r\\nKPX F eacute -30\\r\\nKPX F ecaron -30\\r\\nKPX F ecircumflex -30\\r\\nKPX F edieresis -30\\r\\nKPX F edotaccent -30\\r\\nKPX F egrave -30\\r\\nKPX F emacron -30\\r\\nKPX F eogonek -30\\r\\nKPX F o -30\\r\\nKPX F oacute -30\\r\\nKPX F ocircumflex -30\\r\\nKPX F odieresis -30\\r\\nKPX F ograve -30\\r\\nKPX F ohungarumlaut -30\\r\\nKPX F omacron -30\\r\\nKPX F oslash -30\\r\\nKPX F otilde -30\\r\\nKPX F period -150\\r\\nKPX F r -45\\r\\nKPX F racute -45\\r\\nKPX F rcaron -45\\r\\nKPX F rcommaaccent -45\\r\\nKPX J A -20\\r\\nKPX J Aacute -20\\r\\nKPX J Abreve -20\\r\\nKPX J Acircumflex -20\\r\\nKPX J Adieresis -20\\r\\nKPX J Agrave -20\\r\\nKPX J Amacron -20\\r\\nKPX J Aogonek -20\\r\\nKPX J Aring -20\\r\\nKPX J Atilde -20\\r\\nKPX J a -20\\r\\nKPX J aacute -20\\r\\nKPX J abreve -20\\r\\nKPX J acircumflex -20\\r\\nKPX J adieresis -20\\r\\nKPX J agrave -20\\r\\nKPX J amacron -20\\r\\nKPX J aogonek -20\\r\\nKPX J aring -20\\r\\nKPX J atilde -20\\r\\nKPX J comma -30\\r\\nKPX J period -30\\r\\nKPX J u -20\\r\\nKPX J uacute -20\\r\\nKPX J ucircumflex -20\\r\\nKPX J udieresis -20\\r\\nKPX J ugrave -20\\r\\nKPX J uhungarumlaut -20\\r\\nKPX J umacron -20\\r\\nKPX J uogonek -20\\r\\nKPX J uring -20\\r\\nKPX K O -50\\r\\nKPX K Oacute -50\\r\\nKPX K Ocircumflex -50\\r\\nKPX K Odieresis -50\\r\\nKPX K Ograve -50\\r\\nKPX K Ohungarumlaut -50\\r\\nKPX K Omacron -50\\r\\nKPX K Oslash -50\\r\\nKPX K Otilde -50\\r\\nKPX K e -40\\r\\nKPX K eacute -40\\r\\nKPX K ecaron -40\\r\\nKPX K ecircumflex -40\\r\\nKPX K edieresis -40\\r\\nKPX K edotaccent -40\\r\\nKPX K egrave -40\\r\\nKPX K emacron -40\\r\\nKPX K eogonek -40\\r\\nKPX K o -40\\r\\nKPX K oacute -40\\r\\nKPX K ocircumflex -40\\r\\nKPX K odieresis -40\\r\\nKPX K ograve -40\\r\\nKPX K ohungarumlaut -40\\r\\nKPX K omacron -40\\r\\nKPX K oslash -40\\r\\nKPX K otilde -40\\r\\nKPX K u -30\\r\\nKPX K uacute -30\\r\\nKPX K ucircumflex -30\\r\\nKPX K udieresis -30\\r\\nKPX K ugrave -30\\r\\nKPX K uhungarumlaut -30\\r\\nKPX K umacron -30\\r\\nKPX K uogonek -30\\r\\nKPX K uring -30\\r\\nKPX K y -50\\r\\nKPX K yacute -50\\r\\nKPX K ydieresis -50\\r\\nKPX Kcommaaccent O -50\\r\\nKPX Kcommaaccent Oacute -50\\r\\nKPX Kcommaaccent Ocircumflex -50\\r\\nKPX Kcommaaccent Odieresis -50\\r\\nKPX Kcommaaccent Ograve -50\\r\\nKPX Kcommaaccent Ohungarumlaut -50\\r\\nKPX Kcommaaccent Omacron -50\\r\\nKPX Kcommaaccent Oslash -50\\r\\nKPX Kcommaaccent Otilde -50\\r\\nKPX Kcommaaccent e -40\\r\\nKPX Kcommaaccent eacute -40\\r\\nKPX Kcommaaccent ecaron -40\\r\\nKPX Kcommaaccent ecircumflex -40\\r\\nKPX Kcommaaccent edieresis -40\\r\\nKPX Kcommaaccent edotaccent -40\\r\\nKPX Kcommaaccent egrave -40\\r\\nKPX Kcommaaccent emacron -40\\r\\nKPX Kcommaaccent eogonek -40\\r\\nKPX Kcommaaccent o -40\\r\\nKPX Kcommaaccent oacute -40\\r\\nKPX Kcommaaccent ocircumflex -40\\r\\nKPX Kcommaaccent odieresis -40\\r\\nKPX Kcommaaccent ograve -40\\r\\nKPX Kcommaaccent ohungarumlaut -40\\r\\nKPX Kcommaaccent omacron -40\\r\\nKPX Kcommaaccent oslash -40\\r\\nKPX Kcommaaccent otilde -40\\r\\nKPX Kcommaaccent u -30\\r\\nKPX Kcommaaccent uacute -30\\r\\nKPX Kcommaaccent ucircumflex -30\\r\\nKPX Kcommaaccent udieresis -30\\r\\nKPX Kcommaaccent ugrave -30\\r\\nKPX Kcommaaccent uhungarumlaut -30\\r\\nKPX Kcommaaccent umacron -30\\r\\nKPX Kcommaaccent uogonek -30\\r\\nKPX Kcommaaccent uring -30\\r\\nKPX Kcommaaccent y -50\\r\\nKPX Kcommaaccent yacute -50\\r\\nKPX Kcommaaccent ydieresis -50\\r\\nKPX L T -110\\r\\nKPX L Tcaron -110\\r\\nKPX L Tcommaaccent -110\\r\\nKPX L V -110\\r\\nKPX L W -70\\r\\nKPX L Y -140\\r\\nKPX L Yacute -140\\r\\nKPX L Ydieresis -140\\r\\nKPX L quotedblright -140\\r\\nKPX L quoteright -160\\r\\nKPX L y -30\\r\\nKPX L yacute -30\\r\\nKPX L ydieresis -30\\r\\nKPX Lacute T -110\\r\\nKPX Lacute Tcaron -110\\r\\nKPX Lacute Tcommaaccent -110\\r\\nKPX Lacute V -110\\r\\nKPX Lacute W -70\\r\\nKPX Lacute Y -140\\r\\nKPX Lacute Yacute -140\\r\\nKPX Lacute Ydieresis -140\\r\\nKPX Lacute quotedblright -140\\r\\nKPX Lacute quoteright -160\\r\\nKPX Lacute y -30\\r\\nKPX Lacute yacute -30\\r\\nKPX Lacute ydieresis -30\\r\\nKPX Lcaron T -110\\r\\nKPX Lcaron Tcaron -110\\r\\nKPX Lcaron Tcommaaccent -110\\r\\nKPX Lcaron V -110\\r\\nKPX Lcaron W -70\\r\\nKPX Lcaron Y -140\\r\\nKPX Lcaron Yacute -140\\r\\nKPX Lcaron Ydieresis -140\\r\\nKPX Lcaron quotedblright -140\\r\\nKPX Lcaron quoteright -160\\r\\nKPX Lcaron y -30\\r\\nKPX Lcaron yacute -30\\r\\nKPX Lcaron ydieresis -30\\r\\nKPX Lcommaaccent T -110\\r\\nKPX Lcommaaccent Tcaron -110\\r\\nKPX Lcommaaccent Tcommaaccent -110\\r\\nKPX Lcommaaccent V -110\\r\\nKPX Lcommaaccent W -70\\r\\nKPX Lcommaaccent Y -140\\r\\nKPX Lcommaaccent Yacute -140\\r\\nKPX Lcommaaccent Ydieresis -140\\r\\nKPX Lcommaaccent quotedblright -140\\r\\nKPX Lcommaaccent quoteright -160\\r\\nKPX Lcommaaccent y -30\\r\\nKPX Lcommaaccent yacute -30\\r\\nKPX Lcommaaccent ydieresis -30\\r\\nKPX Lslash T -110\\r\\nKPX Lslash Tcaron -110\\r\\nKPX Lslash Tcommaaccent -110\\r\\nKPX Lslash V -110\\r\\nKPX Lslash W -70\\r\\nKPX Lslash Y -140\\r\\nKPX Lslash Yacute -140\\r\\nKPX Lslash Ydieresis -140\\r\\nKPX Lslash quotedblright -140\\r\\nKPX Lslash quoteright -160\\r\\nKPX Lslash y -30\\r\\nKPX Lslash yacute -30\\r\\nKPX Lslash ydieresis -30\\r\\nKPX O A -20\\r\\nKPX O Aacute -20\\r\\nKPX O Abreve -20\\r\\nKPX O Acircumflex -20\\r\\nKPX O Adieresis -20\\r\\nKPX O Agrave -20\\r\\nKPX O Amacron -20\\r\\nKPX O Aogonek -20\\r\\nKPX O Aring -20\\r\\nKPX O Atilde -20\\r\\nKPX O T -40\\r\\nKPX O Tcaron -40\\r\\nKPX O Tcommaaccent -40\\r\\nKPX O V -50\\r\\nKPX O W -30\\r\\nKPX O X -60\\r\\nKPX O Y -70\\r\\nKPX O Yacute -70\\r\\nKPX O Ydieresis -70\\r\\nKPX O comma -40\\r\\nKPX O period -40\\r\\nKPX Oacute A -20\\r\\nKPX Oacute Aacute -20\\r\\nKPX Oacute Abreve -20\\r\\nKPX Oacute Acircumflex -20\\r\\nKPX Oacute Adieresis -20\\r\\nKPX Oacute Agrave -20\\r\\nKPX Oacute Amacron -20\\r\\nKPX Oacute Aogonek -20\\r\\nKPX Oacute Aring -20\\r\\nKPX Oacute Atilde -20\\r\\nKPX Oacute T -40\\r\\nKPX Oacute Tcaron -40\\r\\nKPX Oacute Tcommaaccent -40\\r\\nKPX Oacute V -50\\r\\nKPX Oacute W -30\\r\\nKPX Oacute X -60\\r\\nKPX Oacute Y -70\\r\\nKPX Oacute Yacute -70\\r\\nKPX Oacute Ydieresis -70\\r\\nKPX Oacute comma -40\\r\\nKPX Oacute period -40\\r\\nKPX Ocircumflex A -20\\r\\nKPX Ocircumflex Aacute -20\\r\\nKPX Ocircumflex Abreve -20\\r\\nKPX Ocircumflex Acircumflex -20\\r\\nKPX Ocircumflex Adieresis -20\\r\\nKPX Ocircumflex Agrave -20\\r\\nKPX Ocircumflex Amacron -20\\r\\nKPX Ocircumflex Aogonek -20\\r\\nKPX Ocircumflex Aring -20\\r\\nKPX Ocircumflex Atilde -20\\r\\nKPX Ocircumflex T -40\\r\\nKPX Ocircumflex Tcaron -40\\r\\nKPX Ocircumflex Tcommaaccent -40\\r\\nKPX Ocircumflex V -50\\r\\nKPX Ocircumflex W -30\\r\\nKPX Ocircumflex X -60\\r\\nKPX Ocircumflex Y -70\\r\\nKPX Ocircumflex Yacute -70\\r\\nKPX Ocircumflex Ydieresis -70\\r\\nKPX Ocircumflex comma -40\\r\\nKPX Ocircumflex period -40\\r\\nKPX Odieresis A -20\\r\\nKPX Odieresis Aacute -20\\r\\nKPX Odieresis Abreve -20\\r\\nKPX Odieresis Acircumflex -20\\r\\nKPX Odieresis Adieresis -20\\r\\nKPX Odieresis Agrave -20\\r\\nKPX Odieresis Amacron -20\\r\\nKPX Odieresis Aogonek -20\\r\\nKPX Odieresis Aring -20\\r\\nKPX Odieresis Atilde -20\\r\\nKPX Odieresis T -40\\r\\nKPX Odieresis Tcaron -40\\r\\nKPX Odieresis Tcommaaccent -40\\r\\nKPX Odieresis V -50\\r\\nKPX Odieresis W -30\\r\\nKPX Odieresis X -60\\r\\nKPX Odieresis Y -70\\r\\nKPX Odieresis Yacute -70\\r\\nKPX Odieresis Ydieresis -70\\r\\nKPX Odieresis comma -40\\r\\nKPX Odieresis period -40\\r\\nKPX Ograve A -20\\r\\nKPX Ograve Aacute -20\\r\\nKPX Ograve Abreve -20\\r\\nKPX Ograve Acircumflex -20\\r\\nKPX Ograve Adieresis -20\\r\\nKPX Ograve Agrave -20\\r\\nKPX Ograve Amacron -20\\r\\nKPX Ograve Aogonek -20\\r\\nKPX Ograve Aring -20\\r\\nKPX Ograve Atilde -20\\r\\nKPX Ograve T -40\\r\\nKPX Ograve Tcaron -40\\r\\nKPX Ograve Tcommaaccent -40\\r\\nKPX Ograve V -50\\r\\nKPX Ograve W -30\\r\\nKPX Ograve X -60\\r\\nKPX Ograve Y -70\\r\\nKPX Ograve Yacute -70\\r\\nKPX Ograve Ydieresis -70\\r\\nKPX Ograve comma -40\\r\\nKPX Ograve period -40\\r\\nKPX Ohungarumlaut A -20\\r\\nKPX Ohungarumlaut Aacute -20\\r\\nKPX Ohungarumlaut Abreve -20\\r\\nKPX Ohungarumlaut Acircumflex -20\\r\\nKPX Ohungarumlaut Adieresis -20\\r\\nKPX Ohungarumlaut Agrave -20\\r\\nKPX Ohungarumlaut Amacron -20\\r\\nKPX Ohungarumlaut Aogonek -20\\r\\nKPX Ohungarumlaut Aring -20\\r\\nKPX Ohungarumlaut Atilde -20\\r\\nKPX Ohungarumlaut T -40\\r\\nKPX Ohungarumlaut Tcaron -40\\r\\nKPX Ohungarumlaut Tcommaaccent -40\\r\\nKPX Ohungarumlaut V -50\\r\\nKPX Ohungarumlaut W -30\\r\\nKPX Ohungarumlaut X -60\\r\\nKPX Ohungarumlaut Y -70\\r\\nKPX Ohungarumlaut Yacute -70\\r\\nKPX Ohungarumlaut Ydieresis -70\\r\\nKPX Ohungarumlaut comma -40\\r\\nKPX Ohungarumlaut period -40\\r\\nKPX Omacron A -20\\r\\nKPX Omacron Aacute -20\\r\\nKPX Omacron Abreve -20\\r\\nKPX Omacron Acircumflex -20\\r\\nKPX Omacron Adieresis -20\\r\\nKPX Omacron Agrave -20\\r\\nKPX Omacron Amacron -20\\r\\nKPX Omacron Aogonek -20\\r\\nKPX Omacron Aring -20\\r\\nKPX Omacron Atilde -20\\r\\nKPX Omacron T -40\\r\\nKPX Omacron Tcaron -40\\r\\nKPX Omacron Tcommaaccent -40\\r\\nKPX Omacron V -50\\r\\nKPX Omacron W -30\\r\\nKPX Omacron X -60\\r\\nKPX Omacron Y -70\\r\\nKPX Omacron Yacute -70\\r\\nKPX Omacron Ydieresis -70\\r\\nKPX Omacron comma -40\\r\\nKPX Omacron period -40\\r\\nKPX Oslash A -20\\r\\nKPX Oslash Aacute -20\\r\\nKPX Oslash Abreve -20\\r\\nKPX Oslash Acircumflex -20\\r\\nKPX Oslash Adieresis -20\\r\\nKPX Oslash Agrave -20\\r\\nKPX Oslash Amacron -20\\r\\nKPX Oslash Aogonek -20\\r\\nKPX Oslash Aring -20\\r\\nKPX Oslash Atilde -20\\r\\nKPX Oslash T -40\\r\\nKPX Oslash Tcaron -40\\r\\nKPX Oslash Tcommaaccent -40\\r\\nKPX Oslash V -50\\r\\nKPX Oslash W -30\\r\\nKPX Oslash X -60\\r\\nKPX Oslash Y -70\\r\\nKPX Oslash Yacute -70\\r\\nKPX Oslash Ydieresis -70\\r\\nKPX Oslash comma -40\\r\\nKPX Oslash period -40\\r\\nKPX Otilde A -20\\r\\nKPX Otilde Aacute -20\\r\\nKPX Otilde Abreve -20\\r\\nKPX Otilde Acircumflex -20\\r\\nKPX Otilde Adieresis -20\\r\\nKPX Otilde Agrave -20\\r\\nKPX Otilde Amacron -20\\r\\nKPX Otilde Aogonek -20\\r\\nKPX Otilde Aring -20\\r\\nKPX Otilde Atilde -20\\r\\nKPX Otilde T -40\\r\\nKPX Otilde Tcaron -40\\r\\nKPX Otilde Tcommaaccent -40\\r\\nKPX Otilde V -50\\r\\nKPX Otilde W -30\\r\\nKPX Otilde X -60\\r\\nKPX Otilde Y -70\\r\\nKPX Otilde Yacute -70\\r\\nKPX Otilde Ydieresis -70\\r\\nKPX Otilde comma -40\\r\\nKPX Otilde period -40\\r\\nKPX P A -120\\r\\nKPX P Aacute -120\\r\\nKPX P Abreve -120\\r\\nKPX P Acircumflex -120\\r\\nKPX P Adieresis -120\\r\\nKPX P Agrave -120\\r\\nKPX P Amacron -120\\r\\nKPX P Aogonek -120\\r\\nKPX P Aring -120\\r\\nKPX P Atilde -120\\r\\nKPX P a -40\\r\\nKPX P aacute -40\\r\\nKPX P abreve -40\\r\\nKPX P acircumflex -40\\r\\nKPX P adieresis -40\\r\\nKPX P agrave -40\\r\\nKPX P amacron -40\\r\\nKPX P aogonek -40\\r\\nKPX P aring -40\\r\\nKPX P atilde -40\\r\\nKPX P comma -180\\r\\nKPX P e -50\\r\\nKPX P eacute -50\\r\\nKPX P ecaron -50\\r\\nKPX P ecircumflex -50\\r\\nKPX P edieresis -50\\r\\nKPX P edotaccent -50\\r\\nKPX P egrave -50\\r\\nKPX P emacron -50\\r\\nKPX P eogonek -50\\r\\nKPX P o -50\\r\\nKPX P oacute -50\\r\\nKPX P ocircumflex -50\\r\\nKPX P odieresis -50\\r\\nKPX P ograve -50\\r\\nKPX P ohungarumlaut -50\\r\\nKPX P omacron -50\\r\\nKPX P oslash -50\\r\\nKPX P otilde -50\\r\\nKPX P period -180\\r\\nKPX Q U -10\\r\\nKPX Q Uacute -10\\r\\nKPX Q Ucircumflex -10\\r\\nKPX Q Udieresis -10\\r\\nKPX Q Ugrave -10\\r\\nKPX Q Uhungarumlaut -10\\r\\nKPX Q Umacron -10\\r\\nKPX Q Uogonek -10\\r\\nKPX Q Uring -10\\r\\nKPX R O -20\\r\\nKPX R Oacute -20\\r\\nKPX R Ocircumflex -20\\r\\nKPX R Odieresis -20\\r\\nKPX R Ograve -20\\r\\nKPX R Ohungarumlaut -20\\r\\nKPX R Omacron -20\\r\\nKPX R Oslash -20\\r\\nKPX R Otilde -20\\r\\nKPX R T -30\\r\\nKPX R Tcaron -30\\r\\nKPX R Tcommaaccent -30\\r\\nKPX R U -40\\r\\nKPX R Uacute -40\\r\\nKPX R Ucircumflex -40\\r\\nKPX R Udieresis -40\\r\\nKPX R Ugrave -40\\r\\nKPX R Uhungarumlaut -40\\r\\nKPX R Umacron -40\\r\\nKPX R Uogonek -40\\r\\nKPX R Uring -40\\r\\nKPX R V -50\\r\\nKPX R W -30\\r\\nKPX R Y -50\\r\\nKPX R Yacute -50\\r\\nKPX R Ydieresis -50\\r\\nKPX Racute O -20\\r\\nKPX Racute Oacute -20\\r\\nKPX Racute Ocircumflex -20\\r\\nKPX Racute Odieresis -20\\r\\nKPX Racute Ograve -20\\r\\nKPX Racute Ohungarumlaut -20\\r\\nKPX Racute Omacron -20\\r\\nKPX Racute Oslash -20\\r\\nKPX Racute Otilde -20\\r\\nKPX Racute T -30\\r\\nKPX Racute Tcaron -30\\r\\nKPX Racute Tcommaaccent -30\\r\\nKPX Racute U -40\\r\\nKPX Racute Uacute -40\\r\\nKPX Racute Ucircumflex -40\\r\\nKPX Racute Udieresis -40\\r\\nKPX Racute Ugrave -40\\r\\nKPX Racute Uhungarumlaut -40\\r\\nKPX Racute Umacron -40\\r\\nKPX Racute Uogonek -40\\r\\nKPX Racute Uring -40\\r\\nKPX Racute V -50\\r\\nKPX Racute W -30\\r\\nKPX Racute Y -50\\r\\nKPX Racute Yacute -50\\r\\nKPX Racute Ydieresis -50\\r\\nKPX Rcaron O -20\\r\\nKPX Rcaron Oacute -20\\r\\nKPX Rcaron Ocircumflex -20\\r\\nKPX Rcaron Odieresis -20\\r\\nKPX Rcaron Ograve -20\\r\\nKPX Rcaron Ohungarumlaut -20\\r\\nKPX Rcaron Omacron -20\\r\\nKPX Rcaron Oslash -20\\r\\nKPX Rcaron Otilde -20\\r\\nKPX Rcaron T -30\\r\\nKPX Rcaron Tcaron -30\\r\\nKPX Rcaron Tcommaaccent -30\\r\\nKPX Rcaron U -40\\r\\nKPX Rcaron Uacute -40\\r\\nKPX Rcaron Ucircumflex -40\\r\\nKPX Rcaron Udieresis -40\\r\\nKPX Rcaron Ugrave -40\\r\\nKPX Rcaron Uhungarumlaut -40\\r\\nKPX Rcaron Umacron -40\\r\\nKPX Rcaron Uogonek -40\\r\\nKPX Rcaron Uring -40\\r\\nKPX Rcaron V -50\\r\\nKPX Rcaron W -30\\r\\nKPX Rcaron Y -50\\r\\nKPX Rcaron Yacute -50\\r\\nKPX Rcaron Ydieresis -50\\r\\nKPX Rcommaaccent O -20\\r\\nKPX Rcommaaccent Oacute -20\\r\\nKPX Rcommaaccent Ocircumflex -20\\r\\nKPX Rcommaaccent Odieresis -20\\r\\nKPX Rcommaaccent Ograve -20\\r\\nKPX Rcommaaccent Ohungarumlaut -20\\r\\nKPX Rcommaaccent Omacron -20\\r\\nKPX Rcommaaccent Oslash -20\\r\\nKPX Rcommaaccent Otilde -20\\r\\nKPX Rcommaaccent T -30\\r\\nKPX Rcommaaccent Tcaron -30\\r\\nKPX Rcommaaccent Tcommaaccent -30\\r\\nKPX Rcommaaccent U -40\\r\\nKPX Rcommaaccent Uacute -40\\r\\nKPX Rcommaaccent Ucircumflex -40\\r\\nKPX Rcommaaccent Udieresis -40\\r\\nKPX Rcommaaccent Ugrave -40\\r\\nKPX Rcommaaccent Uhungarumlaut -40\\r\\nKPX Rcommaaccent Umacron -40\\r\\nKPX Rcommaaccent Uogonek -40\\r\\nKPX Rcommaaccent Uring -40\\r\\nKPX Rcommaaccent V -50\\r\\nKPX Rcommaaccent W -30\\r\\nKPX Rcommaaccent Y -50\\r\\nKPX Rcommaaccent Yacute -50\\r\\nKPX Rcommaaccent Ydieresis -50\\r\\nKPX S comma -20\\r\\nKPX S period -20\\r\\nKPX Sacute comma -20\\r\\nKPX Sacute period -20\\r\\nKPX Scaron comma -20\\r\\nKPX Scaron period -20\\r\\nKPX Scedilla comma -20\\r\\nKPX Scedilla period -20\\r\\nKPX Scommaaccent comma -20\\r\\nKPX Scommaaccent period -20\\r\\nKPX T A -120\\r\\nKPX T Aacute -120\\r\\nKPX T Abreve -120\\r\\nKPX T Acircumflex -120\\r\\nKPX T Adieresis -120\\r\\nKPX T Agrave -120\\r\\nKPX T Amacron -120\\r\\nKPX T Aogonek -120\\r\\nKPX T Aring -120\\r\\nKPX T Atilde -120\\r\\nKPX T O -40\\r\\nKPX T Oacute -40\\r\\nKPX T Ocircumflex -40\\r\\nKPX T Odieresis -40\\r\\nKPX T Ograve -40\\r\\nKPX T Ohungarumlaut -40\\r\\nKPX T Omacron -40\\r\\nKPX T Oslash -40\\r\\nKPX T Otilde -40\\r\\nKPX T a -120\\r\\nKPX T aacute -120\\r\\nKPX T abreve -60\\r\\nKPX T acircumflex -120\\r\\nKPX T adieresis -120\\r\\nKPX T agrave -120\\r\\nKPX T amacron -60\\r\\nKPX T aogonek -120\\r\\nKPX T aring -120\\r\\nKPX T atilde -60\\r\\nKPX T colon -20\\r\\nKPX T comma -120\\r\\nKPX T e -120\\r\\nKPX T eacute -120\\r\\nKPX T ecaron -120\\r\\nKPX T ecircumflex -120\\r\\nKPX T edieresis -120\\r\\nKPX T edotaccent -120\\r\\nKPX T egrave -60\\r\\nKPX T emacron -60\\r\\nKPX T eogonek -120\\r\\nKPX T hyphen -140\\r\\nKPX T o -120\\r\\nKPX T oacute -120\\r\\nKPX T ocircumflex -120\\r\\nKPX T odieresis -120\\r\\nKPX T ograve -120\\r\\nKPX T ohungarumlaut -120\\r\\nKPX T omacron -60\\r\\nKPX T oslash -120\\r\\nKPX T otilde -60\\r\\nKPX T period -120\\r\\nKPX T r -120\\r\\nKPX T racute -120\\r\\nKPX T rcaron -120\\r\\nKPX T rcommaaccent -120\\r\\nKPX T semicolon -20\\r\\nKPX T u -120\\r\\nKPX T uacute -120\\r\\nKPX T ucircumflex -120\\r\\nKPX T udieresis -120\\r\\nKPX T ugrave -120\\r\\nKPX T uhungarumlaut -120\\r\\nKPX T umacron -60\\r\\nKPX T uogonek -120\\r\\nKPX T uring -120\\r\\nKPX T w -120\\r\\nKPX T y -120\\r\\nKPX T yacute -120\\r\\nKPX T ydieresis -60\\r\\nKPX Tcaron A -120\\r\\nKPX Tcaron Aacute -120\\r\\nKPX Tcaron Abreve -120\\r\\nKPX Tcaron Acircumflex -120\\r\\nKPX Tcaron Adieresis -120\\r\\nKPX Tcaron Agrave -120\\r\\nKPX Tcaron Amacron -120\\r\\nKPX Tcaron Aogonek -120\\r\\nKPX Tcaron Aring -120\\r\\nKPX Tcaron Atilde -120\\r\\nKPX Tcaron O -40\\r\\nKPX Tcaron Oacute -40\\r\\nKPX Tcaron Ocircumflex -40\\r\\nKPX Tcaron Odieresis -40\\r\\nKPX Tcaron Ograve -40\\r\\nKPX Tcaron Ohungarumlaut -40\\r\\nKPX Tcaron Omacron -40\\r\\nKPX Tcaron Oslash -40\\r\\nKPX Tcaron Otilde -40\\r\\nKPX Tcaron a -120\\r\\nKPX Tcaron aacute -120\\r\\nKPX Tcaron abreve -60\\r\\nKPX Tcaron acircumflex -120\\r\\nKPX Tcaron adieresis -120\\r\\nKPX Tcaron agrave -120\\r\\nKPX Tcaron amacron -60\\r\\nKPX Tcaron aogonek -120\\r\\nKPX Tcaron aring -120\\r\\nKPX Tcaron atilde -60\\r\\nKPX Tcaron colon -20\\r\\nKPX Tcaron comma -120\\r\\nKPX Tcaron e -120\\r\\nKPX Tcaron eacute -120\\r\\nKPX Tcaron ecaron -120\\r\\nKPX Tcaron ecircumflex -120\\r\\nKPX Tcaron edieresis -120\\r\\nKPX Tcaron edotaccent -120\\r\\nKPX Tcaron egrave -60\\r\\nKPX Tcaron emacron -60\\r\\nKPX Tcaron eogonek -120\\r\\nKPX Tcaron hyphen -140\\r\\nKPX Tcaron o -120\\r\\nKPX Tcaron oacute -120\\r\\nKPX Tcaron ocircumflex -120\\r\\nKPX Tcaron odieresis -120\\r\\nKPX Tcaron ograve -120\\r\\nKPX Tcaron ohungarumlaut -120\\r\\nKPX Tcaron omacron -60\\r\\nKPX Tcaron oslash -120\\r\\nKPX Tcaron otilde -60\\r\\nKPX Tcaron period -120\\r\\nKPX Tcaron r -120\\r\\nKPX Tcaron racute -120\\r\\nKPX Tcaron rcaron -120\\r\\nKPX Tcaron rcommaaccent -120\\r\\nKPX Tcaron semicolon -20\\r\\nKPX Tcaron u -120\\r\\nKPX Tcaron uacute -120\\r\\nKPX Tcaron ucircumflex -120\\r\\nKPX Tcaron udieresis -120\\r\\nKPX Tcaron ugrave -120\\r\\nKPX Tcaron uhungarumlaut -120\\r\\nKPX Tcaron umacron -60\\r\\nKPX Tcaron uogonek -120\\r\\nKPX Tcaron uring -120\\r\\nKPX Tcaron w -120\\r\\nKPX Tcaron y -120\\r\\nKPX Tcaron yacute -120\\r\\nKPX Tcaron ydieresis -60\\r\\nKPX Tcommaaccent A -120\\r\\nKPX Tcommaaccent Aacute -120\\r\\nKPX Tcommaaccent Abreve -120\\r\\nKPX Tcommaaccent Acircumflex -120\\r\\nKPX Tcommaaccent Adieresis -120\\r\\nKPX Tcommaaccent Agrave -120\\r\\nKPX Tcommaaccent Amacron -120\\r\\nKPX Tcommaaccent Aogonek -120\\r\\nKPX Tcommaaccent Aring -120\\r\\nKPX Tcommaaccent Atilde -120\\r\\nKPX Tcommaaccent O -40\\r\\nKPX Tcommaaccent Oacute -40\\r\\nKPX Tcommaaccent Ocircumflex -40\\r\\nKPX Tcommaaccent Odieresis -40\\r\\nKPX Tcommaaccent Ograve -40\\r\\nKPX Tcommaaccent Ohungarumlaut -40\\r\\nKPX Tcommaaccent Omacron -40\\r\\nKPX Tcommaaccent Oslash -40\\r\\nKPX Tcommaaccent Otilde -40\\r\\nKPX Tcommaaccent a -120\\r\\nKPX Tcommaaccent aacute -120\\r\\nKPX Tcommaaccent abreve -60\\r\\nKPX Tcommaaccent acircumflex -120\\r\\nKPX Tcommaaccent adieresis -120\\r\\nKPX Tcommaaccent agrave -120\\r\\nKPX Tcommaaccent amacron -60\\r\\nKPX Tcommaaccent aogonek -120\\r\\nKPX Tcommaaccent aring -120\\r\\nKPX Tcommaaccent atilde -60\\r\\nKPX Tcommaaccent colon -20\\r\\nKPX Tcommaaccent comma -120\\r\\nKPX Tcommaaccent e -120\\r\\nKPX Tcommaaccent eacute -120\\r\\nKPX Tcommaaccent ecaron -120\\r\\nKPX Tcommaaccent ecircumflex -120\\r\\nKPX Tcommaaccent edieresis -120\\r\\nKPX Tcommaaccent edotaccent -120\\r\\nKPX Tcommaaccent egrave -60\\r\\nKPX Tcommaaccent emacron -60\\r\\nKPX Tcommaaccent eogonek -120\\r\\nKPX Tcommaaccent hyphen -140\\r\\nKPX Tcommaaccent o -120\\r\\nKPX Tcommaaccent oacute -120\\r\\nKPX Tcommaaccent ocircumflex -120\\r\\nKPX Tcommaaccent odieresis -120\\r\\nKPX Tcommaaccent ograve -120\\r\\nKPX Tcommaaccent ohungarumlaut -120\\r\\nKPX Tcommaaccent omacron -60\\r\\nKPX Tcommaaccent oslash -120\\r\\nKPX Tcommaaccent otilde -60\\r\\nKPX Tcommaaccent period -120\\r\\nKPX Tcommaaccent r -120\\r\\nKPX Tcommaaccent racute -120\\r\\nKPX Tcommaaccent rcaron -120\\r\\nKPX Tcommaaccent rcommaaccent -120\\r\\nKPX Tcommaaccent semicolon -20\\r\\nKPX Tcommaaccent u -120\\r\\nKPX Tcommaaccent uacute -120\\r\\nKPX Tcommaaccent ucircumflex -120\\r\\nKPX Tcommaaccent udieresis -120\\r\\nKPX Tcommaaccent ugrave -120\\r\\nKPX Tcommaaccent uhungarumlaut -120\\r\\nKPX Tcommaaccent umacron -60\\r\\nKPX Tcommaaccent uogonek -120\\r\\nKPX Tcommaaccent uring -120\\r\\nKPX Tcommaaccent w -120\\r\\nKPX Tcommaaccent y -120\\r\\nKPX Tcommaaccent yacute -120\\r\\nKPX Tcommaaccent ydieresis -60\\r\\nKPX U A -40\\r\\nKPX U Aacute -40\\r\\nKPX U Abreve -40\\r\\nKPX U Acircumflex -40\\r\\nKPX U Adieresis -40\\r\\nKPX U Agrave -40\\r\\nKPX U Amacron -40\\r\\nKPX U Aogonek -40\\r\\nKPX U Aring -40\\r\\nKPX U Atilde -40\\r\\nKPX U comma -40\\r\\nKPX U period -40\\r\\nKPX Uacute A -40\\r\\nKPX Uacute Aacute -40\\r\\nKPX Uacute Abreve -40\\r\\nKPX Uacute Acircumflex -40\\r\\nKPX Uacute Adieresis -40\\r\\nKPX Uacute Agrave -40\\r\\nKPX Uacute Amacron -40\\r\\nKPX Uacute Aogonek -40\\r\\nKPX Uacute Aring -40\\r\\nKPX Uacute Atilde -40\\r\\nKPX Uacute comma -40\\r\\nKPX Uacute period -40\\r\\nKPX Ucircumflex A -40\\r\\nKPX Ucircumflex Aacute -40\\r\\nKPX Ucircumflex Abreve -40\\r\\nKPX Ucircumflex Acircumflex -40\\r\\nKPX Ucircumflex Adieresis -40\\r\\nKPX Ucircumflex Agrave -40\\r\\nKPX Ucircumflex Amacron -40\\r\\nKPX Ucircumflex Aogonek -40\\r\\nKPX Ucircumflex Aring -40\\r\\nKPX Ucircumflex Atilde -40\\r\\nKPX Ucircumflex comma -40\\r\\nKPX Ucircumflex period -40\\r\\nKPX Udieresis A -40\\r\\nKPX Udieresis Aacute -40\\r\\nKPX Udieresis Abreve -40\\r\\nKPX Udieresis Acircumflex -40\\r\\nKPX Udieresis Adieresis -40\\r\\nKPX Udieresis Agrave -40\\r\\nKPX Udieresis Amacron -40\\r\\nKPX Udieresis Aogonek -40\\r\\nKPX Udieresis Aring -40\\r\\nKPX Udieresis Atilde -40\\r\\nKPX Udieresis comma -40\\r\\nKPX Udieresis period -40\\r\\nKPX Ugrave A -40\\r\\nKPX Ugrave Aacute -40\\r\\nKPX Ugrave Abreve -40\\r\\nKPX Ugrave Acircumflex -40\\r\\nKPX Ugrave Adieresis -40\\r\\nKPX Ugrave Agrave -40\\r\\nKPX Ugrave Amacron -40\\r\\nKPX Ugrave Aogonek -40\\r\\nKPX Ugrave Aring -40\\r\\nKPX Ugrave Atilde -40\\r\\nKPX Ugrave comma -40\\r\\nKPX Ugrave period -40\\r\\nKPX Uhungarumlaut A -40\\r\\nKPX Uhungarumlaut Aacute -40\\r\\nKPX Uhungarumlaut Abreve -40\\r\\nKPX Uhungarumlaut Acircumflex -40\\r\\nKPX Uhungarumlaut Adieresis -40\\r\\nKPX Uhungarumlaut Agrave -40\\r\\nKPX Uhungarumlaut Amacron -40\\r\\nKPX Uhungarumlaut Aogonek -40\\r\\nKPX Uhungarumlaut Aring -40\\r\\nKPX Uhungarumlaut Atilde -40\\r\\nKPX Uhungarumlaut comma -40\\r\\nKPX Uhungarumlaut period -40\\r\\nKPX Umacron A -40\\r\\nKPX Umacron Aacute -40\\r\\nKPX Umacron Abreve -40\\r\\nKPX Umacron Acircumflex -40\\r\\nKPX Umacron Adieresis -40\\r\\nKPX Umacron Agrave -40\\r\\nKPX Umacron Amacron -40\\r\\nKPX Umacron Aogonek -40\\r\\nKPX Umacron Aring -40\\r\\nKPX Umacron Atilde -40\\r\\nKPX Umacron comma -40\\r\\nKPX Umacron period -40\\r\\nKPX Uogonek A -40\\r\\nKPX Uogonek Aacute -40\\r\\nKPX Uogonek Abreve -40\\r\\nKPX Uogonek Acircumflex -40\\r\\nKPX Uogonek Adieresis -40\\r\\nKPX Uogonek Agrave -40\\r\\nKPX Uogonek Amacron -40\\r\\nKPX Uogonek Aogonek -40\\r\\nKPX Uogonek Aring -40\\r\\nKPX Uogonek Atilde -40\\r\\nKPX Uogonek comma -40\\r\\nKPX Uogonek period -40\\r\\nKPX Uring A -40\\r\\nKPX Uring Aacute -40\\r\\nKPX Uring Abreve -40\\r\\nKPX Uring Acircumflex -40\\r\\nKPX Uring Adieresis -40\\r\\nKPX Uring Agrave -40\\r\\nKPX Uring Amacron -40\\r\\nKPX Uring Aogonek -40\\r\\nKPX Uring Aring -40\\r\\nKPX Uring Atilde -40\\r\\nKPX Uring comma -40\\r\\nKPX Uring period -40\\r\\nKPX V A -80\\r\\nKPX V Aacute -80\\r\\nKPX V Abreve -80\\r\\nKPX V Acircumflex -80\\r\\nKPX V Adieresis -80\\r\\nKPX V Agrave -80\\r\\nKPX V Amacron -80\\r\\nKPX V Aogonek -80\\r\\nKPX V Aring -80\\r\\nKPX V Atilde -80\\r\\nKPX V G -40\\r\\nKPX V Gbreve -40\\r\\nKPX V Gcommaaccent -40\\r\\nKPX V O -40\\r\\nKPX V Oacute -40\\r\\nKPX V Ocircumflex -40\\r\\nKPX V Odieresis -40\\r\\nKPX V Ograve -40\\r\\nKPX V Ohungarumlaut -40\\r\\nKPX V Omacron -40\\r\\nKPX V Oslash -40\\r\\nKPX V Otilde -40\\r\\nKPX V a -70\\r\\nKPX V aacute -70\\r\\nKPX V abreve -70\\r\\nKPX V acircumflex -70\\r\\nKPX V adieresis -70\\r\\nKPX V agrave -70\\r\\nKPX V amacron -70\\r\\nKPX V aogonek -70\\r\\nKPX V aring -70\\r\\nKPX V atilde -70\\r\\nKPX V colon -40\\r\\nKPX V comma -125\\r\\nKPX V e -80\\r\\nKPX V eacute -80\\r\\nKPX V ecaron -80\\r\\nKPX V ecircumflex -80\\r\\nKPX V edieresis -80\\r\\nKPX V edotaccent -80\\r\\nKPX V egrave -80\\r\\nKPX V emacron -80\\r\\nKPX V eogonek -80\\r\\nKPX V hyphen -80\\r\\nKPX V o -80\\r\\nKPX V oacute -80\\r\\nKPX V ocircumflex -80\\r\\nKPX V odieresis -80\\r\\nKPX V ograve -80\\r\\nKPX V ohungarumlaut -80\\r\\nKPX V omacron -80\\r\\nKPX V oslash -80\\r\\nKPX V otilde -80\\r\\nKPX V period -125\\r\\nKPX V semicolon -40\\r\\nKPX V u -70\\r\\nKPX V uacute -70\\r\\nKPX V ucircumflex -70\\r\\nKPX V udieresis -70\\r\\nKPX V ugrave -70\\r\\nKPX V uhungarumlaut -70\\r\\nKPX V umacron -70\\r\\nKPX V uogonek -70\\r\\nKPX V uring -70\\r\\nKPX W A -50\\r\\nKPX W Aacute -50\\r\\nKPX W Abreve -50\\r\\nKPX W Acircumflex -50\\r\\nKPX W Adieresis -50\\r\\nKPX W Agrave -50\\r\\nKPX W Amacron -50\\r\\nKPX W Aogonek -50\\r\\nKPX W Aring -50\\r\\nKPX W Atilde -50\\r\\nKPX W O -20\\r\\nKPX W Oacute -20\\r\\nKPX W Ocircumflex -20\\r\\nKPX W Odieresis -20\\r\\nKPX W Ograve -20\\r\\nKPX W Ohungarumlaut -20\\r\\nKPX W Omacron -20\\r\\nKPX W Oslash -20\\r\\nKPX W Otilde -20\\r\\nKPX W a -40\\r\\nKPX W aacute -40\\r\\nKPX W abreve -40\\r\\nKPX W acircumflex -40\\r\\nKPX W adieresis -40\\r\\nKPX W agrave -40\\r\\nKPX W amacron -40\\r\\nKPX W aogonek -40\\r\\nKPX W aring -40\\r\\nKPX W atilde -40\\r\\nKPX W comma -80\\r\\nKPX W e -30\\r\\nKPX W eacute -30\\r\\nKPX W ecaron -30\\r\\nKPX W ecircumflex -30\\r\\nKPX W edieresis -30\\r\\nKPX W edotaccent -30\\r\\nKPX W egrave -30\\r\\nKPX W emacron -30\\r\\nKPX W eogonek -30\\r\\nKPX W hyphen -40\\r\\nKPX W o -30\\r\\nKPX W oacute -30\\r\\nKPX W ocircumflex -30\\r\\nKPX W odieresis -30\\r\\nKPX W ograve -30\\r\\nKPX W ohungarumlaut -30\\r\\nKPX W omacron -30\\r\\nKPX W oslash -30\\r\\nKPX W otilde -30\\r\\nKPX W period -80\\r\\nKPX W u -30\\r\\nKPX W uacute -30\\r\\nKPX W ucircumflex -30\\r\\nKPX W udieresis -30\\r\\nKPX W ugrave -30\\r\\nKPX W uhungarumlaut -30\\r\\nKPX W umacron -30\\r\\nKPX W uogonek -30\\r\\nKPX W uring -30\\r\\nKPX W y -20\\r\\nKPX W yacute -20\\r\\nKPX W ydieresis -20\\r\\nKPX Y A -110\\r\\nKPX Y Aacute -110\\r\\nKPX Y Abreve -110\\r\\nKPX Y Acircumflex -110\\r\\nKPX Y Adieresis -110\\r\\nKPX Y Agrave -110\\r\\nKPX Y Amacron -110\\r\\nKPX Y Aogonek -110\\r\\nKPX Y Aring -110\\r\\nKPX Y Atilde -110\\r\\nKPX Y O -85\\r\\nKPX Y Oacute -85\\r\\nKPX Y Ocircumflex -85\\r\\nKPX Y Odieresis -85\\r\\nKPX Y Ograve -85\\r\\nKPX Y Ohungarumlaut -85\\r\\nKPX Y Omacron -85\\r\\nKPX Y Oslash -85\\r\\nKPX Y Otilde -85\\r\\nKPX Y a -140\\r\\nKPX Y aacute -140\\r\\nKPX Y abreve -70\\r\\nKPX Y acircumflex -140\\r\\nKPX Y adieresis -140\\r\\nKPX Y agrave -140\\r\\nKPX Y amacron -70\\r\\nKPX Y aogonek -140\\r\\nKPX Y aring -140\\r\\nKPX Y atilde -140\\r\\nKPX Y colon -60\\r\\nKPX Y comma -140\\r\\nKPX Y e -140\\r\\nKPX Y eacute -140\\r\\nKPX Y ecaron -140\\r\\nKPX Y ecircumflex -140\\r\\nKPX Y edieresis -140\\r\\nKPX Y edotaccent -140\\r\\nKPX Y egrave -140\\r\\nKPX Y emacron -70\\r\\nKPX Y eogonek -140\\r\\nKPX Y hyphen -140\\r\\nKPX Y i -20\\r\\nKPX Y iacute -20\\r\\nKPX Y iogonek -20\\r\\nKPX Y o -140\\r\\nKPX Y oacute -140\\r\\nKPX Y ocircumflex -140\\r\\nKPX Y odieresis -140\\r\\nKPX Y ograve -140\\r\\nKPX Y ohungarumlaut -140\\r\\nKPX Y omacron -140\\r\\nKPX Y oslash -140\\r\\nKPX Y otilde -140\\r\\nKPX Y period -140\\r\\nKPX Y semicolon -60\\r\\nKPX Y u -110\\r\\nKPX Y uacute -110\\r\\nKPX Y ucircumflex -110\\r\\nKPX Y udieresis -110\\r\\nKPX Y ugrave -110\\r\\nKPX Y uhungarumlaut -110\\r\\nKPX Y umacron -110\\r\\nKPX Y uogonek -110\\r\\nKPX Y uring -110\\r\\nKPX Yacute A -110\\r\\nKPX Yacute Aacute -110\\r\\nKPX Yacute Abreve -110\\r\\nKPX Yacute Acircumflex -110\\r\\nKPX Yacute Adieresis -110\\r\\nKPX Yacute Agrave -110\\r\\nKPX Yacute Amacron -110\\r\\nKPX Yacute Aogonek -110\\r\\nKPX Yacute Aring -110\\r\\nKPX Yacute Atilde -110\\r\\nKPX Yacute O -85\\r\\nKPX Yacute Oacute -85\\r\\nKPX Yacute Ocircumflex -85\\r\\nKPX Yacute Odieresis -85\\r\\nKPX Yacute Ograve -85\\r\\nKPX Yacute Ohungarumlaut -85\\r\\nKPX Yacute Omacron -85\\r\\nKPX Yacute Oslash -85\\r\\nKPX Yacute Otilde -85\\r\\nKPX Yacute a -140\\r\\nKPX Yacute aacute -140\\r\\nKPX Yacute abreve -70\\r\\nKPX Yacute acircumflex -140\\r\\nKPX Yacute adieresis -140\\r\\nKPX Yacute agrave -140\\r\\nKPX Yacute amacron -70\\r\\nKPX Yacute aogonek -140\\r\\nKPX Yacute aring -140\\r\\nKPX Yacute atilde -70\\r\\nKPX Yacute colon -60\\r\\nKPX Yacute comma -140\\r\\nKPX Yacute e -140\\r\\nKPX Yacute eacute -140\\r\\nKPX Yacute ecaron -140\\r\\nKPX Yacute ecircumflex -140\\r\\nKPX Yacute edieresis -140\\r\\nKPX Yacute edotaccent -140\\r\\nKPX Yacute egrave -140\\r\\nKPX Yacute emacron -70\\r\\nKPX Yacute eogonek -140\\r\\nKPX Yacute hyphen -140\\r\\nKPX Yacute i -20\\r\\nKPX Yacute iacute -20\\r\\nKPX Yacute iogonek -20\\r\\nKPX Yacute o -140\\r\\nKPX Yacute oacute -140\\r\\nKPX Yacute ocircumflex -140\\r\\nKPX Yacute odieresis -140\\r\\nKPX Yacute ograve -140\\r\\nKPX Yacute ohungarumlaut -140\\r\\nKPX Yacute omacron -70\\r\\nKPX Yacute oslash -140\\r\\nKPX Yacute otilde -140\\r\\nKPX Yacute period -140\\r\\nKPX Yacute semicolon -60\\r\\nKPX Yacute u -110\\r\\nKPX Yacute uacute -110\\r\\nKPX Yacute ucircumflex -110\\r\\nKPX Yacute udieresis -110\\r\\nKPX Yacute ugrave -110\\r\\nKPX Yacute uhungarumlaut -110\\r\\nKPX Yacute umacron -110\\r\\nKPX Yacute uogonek -110\\r\\nKPX Yacute uring -110\\r\\nKPX Ydieresis A -110\\r\\nKPX Ydieresis Aacute -110\\r\\nKPX Ydieresis Abreve -110\\r\\nKPX Ydieresis Acircumflex -110\\r\\nKPX Ydieresis Adieresis -110\\r\\nKPX Ydieresis Agrave -110\\r\\nKPX Ydieresis Amacron -110\\r\\nKPX Ydieresis Aogonek -110\\r\\nKPX Ydieresis Aring -110\\r\\nKPX Ydieresis Atilde -110\\r\\nKPX Ydieresis O -85\\r\\nKPX Ydieresis Oacute -85\\r\\nKPX Ydieresis Ocircumflex -85\\r\\nKPX Ydieresis Odieresis -85\\r\\nKPX Ydieresis Ograve -85\\r\\nKPX Ydieresis Ohungarumlaut -85\\r\\nKPX Ydieresis Omacron -85\\r\\nKPX Ydieresis Oslash -85\\r\\nKPX Ydieresis Otilde -85\\r\\nKPX Ydieresis a -140\\r\\nKPX Ydieresis aacute -140\\r\\nKPX Ydieresis abreve -70\\r\\nKPX Ydieresis acircumflex -140\\r\\nKPX Ydieresis adieresis -140\\r\\nKPX Ydieresis agrave -140\\r\\nKPX Ydieresis amacron -70\\r\\nKPX Ydieresis aogonek -140\\r\\nKPX Ydieresis aring -140\\r\\nKPX Ydieresis atilde -70\\r\\nKPX Ydieresis colon -60\\r\\nKPX Ydieresis comma -140\\r\\nKPX Ydieresis e -140\\r\\nKPX Ydieresis eacute -140\\r\\nKPX Ydieresis ecaron -140\\r\\nKPX Ydieresis ecircumflex -140\\r\\nKPX Ydieresis edieresis -140\\r\\nKPX Ydieresis edotaccent -140\\r\\nKPX Ydieresis egrave -140\\r\\nKPX Ydieresis emacron -70\\r\\nKPX Ydieresis eogonek -140\\r\\nKPX Ydieresis hyphen -140\\r\\nKPX Ydieresis i -20\\r\\nKPX Ydieresis iacute -20\\r\\nKPX Ydieresis iogonek -20\\r\\nKPX Ydieresis o -140\\r\\nKPX Ydieresis oacute -140\\r\\nKPX Ydieresis ocircumflex -140\\r\\nKPX Ydieresis odieresis -140\\r\\nKPX Ydieresis ograve -140\\r\\nKPX Ydieresis ohungarumlaut -140\\r\\nKPX Ydieresis omacron -140\\r\\nKPX Ydieresis oslash -140\\r\\nKPX Ydieresis otilde -140\\r\\nKPX Ydieresis period -140\\r\\nKPX Ydieresis semicolon -60\\r\\nKPX Ydieresis u -110\\r\\nKPX Ydieresis uacute -110\\r\\nKPX Ydieresis ucircumflex -110\\r\\nKPX Ydieresis udieresis -110\\r\\nKPX Ydieresis ugrave -110\\r\\nKPX Ydieresis uhungarumlaut -110\\r\\nKPX Ydieresis umacron -110\\r\\nKPX Ydieresis uogonek -110\\r\\nKPX Ydieresis uring -110\\r\\nKPX a v -20\\r\\nKPX a w -20\\r\\nKPX a y -30\\r\\nKPX a yacute -30\\r\\nKPX a ydieresis -30\\r\\nKPX aacute v -20\\r\\nKPX aacute w -20\\r\\nKPX aacute y -30\\r\\nKPX aacute yacute -30\\r\\nKPX aacute ydieresis -30\\r\\nKPX abreve v -20\\r\\nKPX abreve w -20\\r\\nKPX abreve y -30\\r\\nKPX abreve yacute -30\\r\\nKPX abreve ydieresis -30\\r\\nKPX acircumflex v -20\\r\\nKPX acircumflex w -20\\r\\nKPX acircumflex y -30\\r\\nKPX acircumflex yacute -30\\r\\nKPX acircumflex ydieresis -30\\r\\nKPX adieresis v -20\\r\\nKPX adieresis w -20\\r\\nKPX adieresis y -30\\r\\nKPX adieresis yacute -30\\r\\nKPX adieresis ydieresis -30\\r\\nKPX agrave v -20\\r\\nKPX agrave w -20\\r\\nKPX agrave y -30\\r\\nKPX agrave yacute -30\\r\\nKPX agrave ydieresis -30\\r\\nKPX amacron v -20\\r\\nKPX amacron w -20\\r\\nKPX amacron y -30\\r\\nKPX amacron yacute -30\\r\\nKPX amacron ydieresis -30\\r\\nKPX aogonek v -20\\r\\nKPX aogonek w -20\\r\\nKPX aogonek y -30\\r\\nKPX aogonek yacute -30\\r\\nKPX aogonek ydieresis -30\\r\\nKPX aring v -20\\r\\nKPX aring w -20\\r\\nKPX aring y -30\\r\\nKPX aring yacute -30\\r\\nKPX aring ydieresis -30\\r\\nKPX atilde v -20\\r\\nKPX atilde w -20\\r\\nKPX atilde y -30\\r\\nKPX atilde yacute -30\\r\\nKPX atilde ydieresis -30\\r\\nKPX b b -10\\r\\nKPX b comma -40\\r\\nKPX b l -20\\r\\nKPX b lacute -20\\r\\nKPX b lcommaaccent -20\\r\\nKPX b lslash -20\\r\\nKPX b period -40\\r\\nKPX b u -20\\r\\nKPX b uacute -20\\r\\nKPX b ucircumflex -20\\r\\nKPX b udieresis -20\\r\\nKPX b ugrave -20\\r\\nKPX b uhungarumlaut -20\\r\\nKPX b umacron -20\\r\\nKPX b uogonek -20\\r\\nKPX b uring -20\\r\\nKPX b v -20\\r\\nKPX b y -20\\r\\nKPX b yacute -20\\r\\nKPX b ydieresis -20\\r\\nKPX c comma -15\\r\\nKPX c k -20\\r\\nKPX c kcommaaccent -20\\r\\nKPX cacute comma -15\\r\\nKPX cacute k -20\\r\\nKPX cacute kcommaaccent -20\\r\\nKPX ccaron comma -15\\r\\nKPX ccaron k -20\\r\\nKPX ccaron kcommaaccent -20\\r\\nKPX ccedilla comma -15\\r\\nKPX ccedilla k -20\\r\\nKPX ccedilla kcommaaccent -20\\r\\nKPX colon space -50\\r\\nKPX comma quotedblright -100\\r\\nKPX comma quoteright -100\\r\\nKPX e comma -15\\r\\nKPX e period -15\\r\\nKPX e v -30\\r\\nKPX e w -20\\r\\nKPX e x -30\\r\\nKPX e y -20\\r\\nKPX e yacute -20\\r\\nKPX e ydieresis -20\\r\\nKPX eacute comma -15\\r\\nKPX eacute period -15\\r\\nKPX eacute v -30\\r\\nKPX eacute w -20\\r\\nKPX eacute x -30\\r\\nKPX eacute y -20\\r\\nKPX eacute yacute -20\\r\\nKPX eacute ydieresis -20\\r\\nKPX ecaron comma -15\\r\\nKPX ecaron period -15\\r\\nKPX ecaron v -30\\r\\nKPX ecaron w -20\\r\\nKPX ecaron x -30\\r\\nKPX ecaron y -20\\r\\nKPX ecaron yacute -20\\r\\nKPX ecaron ydieresis -20\\r\\nKPX ecircumflex comma -15\\r\\nKPX ecircumflex period -15\\r\\nKPX ecircumflex v -30\\r\\nKPX ecircumflex w -20\\r\\nKPX ecircumflex x -30\\r\\nKPX ecircumflex y -20\\r\\nKPX ecircumflex yacute -20\\r\\nKPX ecircumflex ydieresis -20\\r\\nKPX edieresis comma -15\\r\\nKPX edieresis period -15\\r\\nKPX edieresis v -30\\r\\nKPX edieresis w -20\\r\\nKPX edieresis x -30\\r\\nKPX edieresis y -20\\r\\nKPX edieresis yacute -20\\r\\nKPX edieresis ydieresis -20\\r\\nKPX edotaccent comma -15\\r\\nKPX edotaccent period -15\\r\\nKPX edotaccent v -30\\r\\nKPX edotaccent w -20\\r\\nKPX edotaccent x -30\\r\\nKPX edotaccent y -20\\r\\nKPX edotaccent yacute -20\\r\\nKPX edotaccent ydieresis -20\\r\\nKPX egrave comma -15\\r\\nKPX egrave period -15\\r\\nKPX egrave v -30\\r\\nKPX egrave w -20\\r\\nKPX egrave x -30\\r\\nKPX egrave y -20\\r\\nKPX egrave yacute -20\\r\\nKPX egrave ydieresis -20\\r\\nKPX emacron comma -15\\r\\nKPX emacron period -15\\r\\nKPX emacron v -30\\r\\nKPX emacron w -20\\r\\nKPX emacron x -30\\r\\nKPX emacron y -20\\r\\nKPX emacron yacute -20\\r\\nKPX emacron ydieresis -20\\r\\nKPX eogonek comma -15\\r\\nKPX eogonek period -15\\r\\nKPX eogonek v -30\\r\\nKPX eogonek w -20\\r\\nKPX eogonek x -30\\r\\nKPX eogonek y -20\\r\\nKPX eogonek yacute -20\\r\\nKPX eogonek ydieresis -20\\r\\nKPX f a -30\\r\\nKPX f aacute -30\\r\\nKPX f abreve -30\\r\\nKPX f acircumflex -30\\r\\nKPX f adieresis -30\\r\\nKPX f agrave -30\\r\\nKPX f amacron -30\\r\\nKPX f aogonek -30\\r\\nKPX f aring -30\\r\\nKPX f atilde -30\\r\\nKPX f comma -30\\r\\nKPX f dotlessi -28\\r\\nKPX f e -30\\r\\nKPX f eacute -30\\r\\nKPX f ecaron -30\\r\\nKPX f ecircumflex -30\\r\\nKPX f edieresis -30\\r\\nKPX f edotaccent -30\\r\\nKPX f egrave -30\\r\\nKPX f emacron -30\\r\\nKPX f eogonek -30\\r\\nKPX f o -30\\r\\nKPX f oacute -30\\r\\nKPX f ocircumflex -30\\r\\nKPX f odieresis -30\\r\\nKPX f ograve -30\\r\\nKPX f ohungarumlaut -30\\r\\nKPX f omacron -30\\r\\nKPX f oslash -30\\r\\nKPX f otilde -30\\r\\nKPX f period -30\\r\\nKPX f quotedblright 60\\r\\nKPX f quoteright 50\\r\\nKPX g r -10\\r\\nKPX g racute -10\\r\\nKPX g rcaron -10\\r\\nKPX g rcommaaccent -10\\r\\nKPX gbreve r -10\\r\\nKPX gbreve racute -10\\r\\nKPX gbreve rcaron -10\\r\\nKPX gbreve rcommaaccent -10\\r\\nKPX gcommaaccent r -10\\r\\nKPX gcommaaccent racute -10\\r\\nKPX gcommaaccent rcaron -10\\r\\nKPX gcommaaccent rcommaaccent -10\\r\\nKPX h y -30\\r\\nKPX h yacute -30\\r\\nKPX h ydieresis -30\\r\\nKPX k e -20\\r\\nKPX k eacute -20\\r\\nKPX k ecaron -20\\r\\nKPX k ecircumflex -20\\r\\nKPX k edieresis -20\\r\\nKPX k edotaccent -20\\r\\nKPX k egrave -20\\r\\nKPX k emacron -20\\r\\nKPX k eogonek -20\\r\\nKPX k o -20\\r\\nKPX k oacute -20\\r\\nKPX k ocircumflex -20\\r\\nKPX k odieresis -20\\r\\nKPX k ograve -20\\r\\nKPX k ohungarumlaut -20\\r\\nKPX k omacron -20\\r\\nKPX k oslash -20\\r\\nKPX k otilde -20\\r\\nKPX kcommaaccent e -20\\r\\nKPX kcommaaccent eacute -20\\r\\nKPX kcommaaccent ecaron -20\\r\\nKPX kcommaaccent ecircumflex -20\\r\\nKPX kcommaaccent edieresis -20\\r\\nKPX kcommaaccent edotaccent -20\\r\\nKPX kcommaaccent egrave -20\\r\\nKPX kcommaaccent emacron -20\\r\\nKPX kcommaaccent eogonek -20\\r\\nKPX kcommaaccent o -20\\r\\nKPX kcommaaccent oacute -20\\r\\nKPX kcommaaccent ocircumflex -20\\r\\nKPX kcommaaccent odieresis -20\\r\\nKPX kcommaaccent ograve -20\\r\\nKPX kcommaaccent ohungarumlaut -20\\r\\nKPX kcommaaccent omacron -20\\r\\nKPX kcommaaccent oslash -20\\r\\nKPX kcommaaccent otilde -20\\r\\nKPX m u -10\\r\\nKPX m uacute -10\\r\\nKPX m ucircumflex -10\\r\\nKPX m udieresis -10\\r\\nKPX m ugrave -10\\r\\nKPX m uhungarumlaut -10\\r\\nKPX m umacron -10\\r\\nKPX m uogonek -10\\r\\nKPX m uring -10\\r\\nKPX m y -15\\r\\nKPX m yacute -15\\r\\nKPX m ydieresis -15\\r\\nKPX n u -10\\r\\nKPX n uacute -10\\r\\nKPX n ucircumflex -10\\r\\nKPX n udieresis -10\\r\\nKPX n ugrave -10\\r\\nKPX n uhungarumlaut -10\\r\\nKPX n umacron -10\\r\\nKPX n uogonek -10\\r\\nKPX n uring -10\\r\\nKPX n v -20\\r\\nKPX n y -15\\r\\nKPX n yacute -15\\r\\nKPX n ydieresis -15\\r\\nKPX nacute u -10\\r\\nKPX nacute uacute -10\\r\\nKPX nacute ucircumflex -10\\r\\nKPX nacute udieresis -10\\r\\nKPX nacute ugrave -10\\r\\nKPX nacute uhungarumlaut -10\\r\\nKPX nacute umacron -10\\r\\nKPX nacute uogonek -10\\r\\nKPX nacute uring -10\\r\\nKPX nacute v -20\\r\\nKPX nacute y -15\\r\\nKPX nacute yacute -15\\r\\nKPX nacute ydieresis -15\\r\\nKPX ncaron u -10\\r\\nKPX ncaron uacute -10\\r\\nKPX ncaron ucircumflex -10\\r\\nKPX ncaron udieresis -10\\r\\nKPX ncaron ugrave -10\\r\\nKPX ncaron uhungarumlaut -10\\r\\nKPX ncaron umacron -10\\r\\nKPX ncaron uogonek -10\\r\\nKPX ncaron uring -10\\r\\nKPX ncaron v -20\\r\\nKPX ncaron y -15\\r\\nKPX ncaron yacute -15\\r\\nKPX ncaron ydieresis -15\\r\\nKPX ncommaaccent u -10\\r\\nKPX ncommaaccent uacute -10\\r\\nKPX ncommaaccent ucircumflex -10\\r\\nKPX ncommaaccent udieresis -10\\r\\nKPX ncommaaccent ugrave -10\\r\\nKPX ncommaaccent uhungarumlaut -10\\r\\nKPX ncommaaccent umacron -10\\r\\nKPX ncommaaccent uogonek -10\\r\\nKPX ncommaaccent uring -10\\r\\nKPX ncommaaccent v -20\\r\\nKPX ncommaaccent y -15\\r\\nKPX ncommaaccent yacute -15\\r\\nKPX ncommaaccent ydieresis -15\\r\\nKPX ntilde u -10\\r\\nKPX ntilde uacute -10\\r\\nKPX ntilde ucircumflex -10\\r\\nKPX ntilde udieresis -10\\r\\nKPX ntilde ugrave -10\\r\\nKPX ntilde uhungarumlaut -10\\r\\nKPX ntilde umacron -10\\r\\nKPX ntilde uogonek -10\\r\\nKPX ntilde uring -10\\r\\nKPX ntilde v -20\\r\\nKPX ntilde y -15\\r\\nKPX ntilde yacute -15\\r\\nKPX ntilde ydieresis -15\\r\\nKPX o comma -40\\r\\nKPX o period -40\\r\\nKPX o v -15\\r\\nKPX o w -15\\r\\nKPX o x -30\\r\\nKPX o y -30\\r\\nKPX o yacute -30\\r\\nKPX o ydieresis -30\\r\\nKPX oacute comma -40\\r\\nKPX oacute period -40\\r\\nKPX oacute v -15\\r\\nKPX oacute w -15\\r\\nKPX oacute x -30\\r\\nKPX oacute y -30\\r\\nKPX oacute yacute -30\\r\\nKPX oacute ydieresis -30\\r\\nKPX ocircumflex comma -40\\r\\nKPX ocircumflex period -40\\r\\nKPX ocircumflex v -15\\r\\nKPX ocircumflex w -15\\r\\nKPX ocircumflex x -30\\r\\nKPX ocircumflex y -30\\r\\nKPX ocircumflex yacute -30\\r\\nKPX ocircumflex ydieresis -30\\r\\nKPX odieresis comma -40\\r\\nKPX odieresis period -40\\r\\nKPX odieresis v -15\\r\\nKPX odieresis w -15\\r\\nKPX odieresis x -30\\r\\nKPX odieresis y -30\\r\\nKPX odieresis yacute -30\\r\\nKPX odieresis ydieresis -30\\r\\nKPX ograve comma -40\\r\\nKPX ograve period -40\\r\\nKPX ograve v -15\\r\\nKPX ograve w -15\\r\\nKPX ograve x -30\\r\\nKPX ograve y -30\\r\\nKPX ograve yacute -30\\r\\nKPX ograve ydieresis -30\\r\\nKPX ohungarumlaut comma -40\\r\\nKPX ohungarumlaut period -40\\r\\nKPX ohungarumlaut v -15\\r\\nKPX ohungarumlaut w -15\\r\\nKPX ohungarumlaut x -30\\r\\nKPX ohungarumlaut y -30\\r\\nKPX ohungarumlaut yacute -30\\r\\nKPX ohungarumlaut ydieresis -30\\r\\nKPX omacron comma -40\\r\\nKPX omacron period -40\\r\\nKPX omacron v -15\\r\\nKPX omacron w -15\\r\\nKPX omacron x -30\\r\\nKPX omacron y -30\\r\\nKPX omacron yacute -30\\r\\nKPX omacron ydieresis -30\\r\\nKPX oslash a -55\\r\\nKPX oslash aacute -55\\r\\nKPX oslash abreve -55\\r\\nKPX oslash acircumflex -55\\r\\nKPX oslash adieresis -55\\r\\nKPX oslash agrave -55\\r\\nKPX oslash amacron -55\\r\\nKPX oslash aogonek -55\\r\\nKPX oslash aring -55\\r\\nKPX oslash atilde -55\\r\\nKPX oslash b -55\\r\\nKPX oslash c -55\\r\\nKPX oslash cacute -55\\r\\nKPX oslash ccaron -55\\r\\nKPX oslash ccedilla -55\\r\\nKPX oslash comma -95\\r\\nKPX oslash d -55\\r\\nKPX oslash dcroat -55\\r\\nKPX oslash e -55\\r\\nKPX oslash eacute -55\\r\\nKPX oslash ecaron -55\\r\\nKPX oslash ecircumflex -55\\r\\nKPX oslash edieresis -55\\r\\nKPX oslash edotaccent -55\\r\\nKPX oslash egrave -55\\r\\nKPX oslash emacron -55\\r\\nKPX oslash eogonek -55\\r\\nKPX oslash f -55\\r\\nKPX oslash g -55\\r\\nKPX oslash gbreve -55\\r\\nKPX oslash gcommaaccent -55\\r\\nKPX oslash h -55\\r\\nKPX oslash i -55\\r\\nKPX oslash iacute -55\\r\\nKPX oslash icircumflex -55\\r\\nKPX oslash idieresis -55\\r\\nKPX oslash igrave -55\\r\\nKPX oslash imacron -55\\r\\nKPX oslash iogonek -55\\r\\nKPX oslash j -55\\r\\nKPX oslash k -55\\r\\nKPX oslash kcommaaccent -55\\r\\nKPX oslash l -55\\r\\nKPX oslash lacute -55\\r\\nKPX oslash lcommaaccent -55\\r\\nKPX oslash lslash -55\\r\\nKPX oslash m -55\\r\\nKPX oslash n -55\\r\\nKPX oslash nacute -55\\r\\nKPX oslash ncaron -55\\r\\nKPX oslash ncommaaccent -55\\r\\nKPX oslash ntilde -55\\r\\nKPX oslash o -55\\r\\nKPX oslash oacute -55\\r\\nKPX oslash ocircumflex -55\\r\\nKPX oslash odieresis -55\\r\\nKPX oslash ograve -55\\r\\nKPX oslash ohungarumlaut -55\\r\\nKPX oslash omacron -55\\r\\nKPX oslash oslash -55\\r\\nKPX oslash otilde -55\\r\\nKPX oslash p -55\\r\\nKPX oslash period -95\\r\\nKPX oslash q -55\\r\\nKPX oslash r -55\\r\\nKPX oslash racute -55\\r\\nKPX oslash rcaron -55\\r\\nKPX oslash rcommaaccent -55\\r\\nKPX oslash s -55\\r\\nKPX oslash sacute -55\\r\\nKPX oslash scaron -55\\r\\nKPX oslash scedilla -55\\r\\nKPX oslash scommaaccent -55\\r\\nKPX oslash t -55\\r\\nKPX oslash tcommaaccent -55\\r\\nKPX oslash u -55\\r\\nKPX oslash uacute -55\\r\\nKPX oslash ucircumflex -55\\r\\nKPX oslash udieresis -55\\r\\nKPX oslash ugrave -55\\r\\nKPX oslash uhungarumlaut -55\\r\\nKPX oslash umacron -55\\r\\nKPX oslash uogonek -55\\r\\nKPX oslash uring -55\\r\\nKPX oslash v -70\\r\\nKPX oslash w -70\\r\\nKPX oslash x -85\\r\\nKPX oslash y -70\\r\\nKPX oslash yacute -70\\r\\nKPX oslash ydieresis -70\\r\\nKPX oslash z -55\\r\\nKPX oslash zacute -55\\r\\nKPX oslash zcaron -55\\r\\nKPX oslash zdotaccent -55\\r\\nKPX otilde comma -40\\r\\nKPX otilde period -40\\r\\nKPX otilde v -15\\r\\nKPX otilde w -15\\r\\nKPX otilde x -30\\r\\nKPX otilde y -30\\r\\nKPX otilde yacute -30\\r\\nKPX otilde ydieresis -30\\r\\nKPX p comma -35\\r\\nKPX p period -35\\r\\nKPX p y -30\\r\\nKPX p yacute -30\\r\\nKPX p ydieresis -30\\r\\nKPX period quotedblright -100\\r\\nKPX period quoteright -100\\r\\nKPX period space -60\\r\\nKPX quotedblright space -40\\r\\nKPX quoteleft quoteleft -57\\r\\nKPX quoteright d -50\\r\\nKPX quoteright dcroat -50\\r\\nKPX quoteright quoteright -57\\r\\nKPX quoteright r -50\\r\\nKPX quoteright racute -50\\r\\nKPX quoteright rcaron -50\\r\\nKPX quoteright rcommaaccent -50\\r\\nKPX quoteright s -50\\r\\nKPX quoteright sacute -50\\r\\nKPX quoteright scaron -50\\r\\nKPX quoteright scedilla -50\\r\\nKPX quoteright scommaaccent -50\\r\\nKPX quoteright space -70\\r\\nKPX r a -10\\r\\nKPX r aacute -10\\r\\nKPX r abreve -10\\r\\nKPX r acircumflex -10\\r\\nKPX r adieresis -10\\r\\nKPX r agrave -10\\r\\nKPX r amacron -10\\r\\nKPX r aogonek -10\\r\\nKPX r aring -10\\r\\nKPX r atilde -10\\r\\nKPX r colon 30\\r\\nKPX r comma -50\\r\\nKPX r i 15\\r\\nKPX r iacute 15\\r\\nKPX r icircumflex 15\\r\\nKPX r idieresis 15\\r\\nKPX r igrave 15\\r\\nKPX r imacron 15\\r\\nKPX r iogonek 15\\r\\nKPX r k 15\\r\\nKPX r kcommaaccent 15\\r\\nKPX r l 15\\r\\nKPX r lacute 15\\r\\nKPX r lcommaaccent 15\\r\\nKPX r lslash 15\\r\\nKPX r m 25\\r\\nKPX r n 25\\r\\nKPX r nacute 25\\r\\nKPX r ncaron 25\\r\\nKPX r ncommaaccent 25\\r\\nKPX r ntilde 25\\r\\nKPX r p 30\\r\\nKPX r period -50\\r\\nKPX r semicolon 30\\r\\nKPX r t 40\\r\\nKPX r tcommaaccent 40\\r\\nKPX r u 15\\r\\nKPX r uacute 15\\r\\nKPX r ucircumflex 15\\r\\nKPX r udieresis 15\\r\\nKPX r ugrave 15\\r\\nKPX r uhungarumlaut 15\\r\\nKPX r umacron 15\\r\\nKPX r uogonek 15\\r\\nKPX r uring 15\\r\\nKPX r v 30\\r\\nKPX r y 30\\r\\nKPX r yacute 30\\r\\nKPX r ydieresis 30\\r\\nKPX racute a -10\\r\\nKPX racute aacute -10\\r\\nKPX racute abreve -10\\r\\nKPX racute acircumflex -10\\r\\nKPX racute adieresis -10\\r\\nKPX racute agrave -10\\r\\nKPX racute amacron -10\\r\\nKPX racute aogonek -10\\r\\nKPX racute aring -10\\r\\nKPX racute atilde -10\\r\\nKPX racute colon 30\\r\\nKPX racute comma -50\\r\\nKPX racute i 15\\r\\nKPX racute iacute 15\\r\\nKPX racute icircumflex 15\\r\\nKPX racute idieresis 15\\r\\nKPX racute igrave 15\\r\\nKPX racute imacron 15\\r\\nKPX racute iogonek 15\\r\\nKPX racute k 15\\r\\nKPX racute kcommaaccent 15\\r\\nKPX racute l 15\\r\\nKPX racute lacute 15\\r\\nKPX racute lcommaaccent 15\\r\\nKPX racute lslash 15\\r\\nKPX racute m 25\\r\\nKPX racute n 25\\r\\nKPX racute nacute 25\\r\\nKPX racute ncaron 25\\r\\nKPX racute ncommaaccent 25\\r\\nKPX racute ntilde 25\\r\\nKPX racute p 30\\r\\nKPX racute period -50\\r\\nKPX racute semicolon 30\\r\\nKPX racute t 40\\r\\nKPX racute tcommaaccent 40\\r\\nKPX racute u 15\\r\\nKPX racute uacute 15\\r\\nKPX racute ucircumflex 15\\r\\nKPX racute udieresis 15\\r\\nKPX racute ugrave 15\\r\\nKPX racute uhungarumlaut 15\\r\\nKPX racute umacron 15\\r\\nKPX racute uogonek 15\\r\\nKPX racute uring 15\\r\\nKPX racute v 30\\r\\nKPX racute y 30\\r\\nKPX racute yacute 30\\r\\nKPX racute ydieresis 30\\r\\nKPX rcaron a -10\\r\\nKPX rcaron aacute -10\\r\\nKPX rcaron abreve -10\\r\\nKPX rcaron acircumflex -10\\r\\nKPX rcaron adieresis -10\\r\\nKPX rcaron agrave -10\\r\\nKPX rcaron amacron -10\\r\\nKPX rcaron aogonek -10\\r\\nKPX rcaron aring -10\\r\\nKPX rcaron atilde -10\\r\\nKPX rcaron colon 30\\r\\nKPX rcaron comma -50\\r\\nKPX rcaron i 15\\r\\nKPX rcaron iacute 15\\r\\nKPX rcaron icircumflex 15\\r\\nKPX rcaron idieresis 15\\r\\nKPX rcaron igrave 15\\r\\nKPX rcaron imacron 15\\r\\nKPX rcaron iogonek 15\\r\\nKPX rcaron k 15\\r\\nKPX rcaron kcommaaccent 15\\r\\nKPX rcaron l 15\\r\\nKPX rcaron lacute 15\\r\\nKPX rcaron lcommaaccent 15\\r\\nKPX rcaron lslash 15\\r\\nKPX rcaron m 25\\r\\nKPX rcaron n 25\\r\\nKPX rcaron nacute 25\\r\\nKPX rcaron ncaron 25\\r\\nKPX rcaron ncommaaccent 25\\r\\nKPX rcaron ntilde 25\\r\\nKPX rcaron p 30\\r\\nKPX rcaron period -50\\r\\nKPX rcaron semicolon 30\\r\\nKPX rcaron t 40\\r\\nKPX rcaron tcommaaccent 40\\r\\nKPX rcaron u 15\\r\\nKPX rcaron uacute 15\\r\\nKPX rcaron ucircumflex 15\\r\\nKPX rcaron udieresis 15\\r\\nKPX rcaron ugrave 15\\r\\nKPX rcaron uhungarumlaut 15\\r\\nKPX rcaron umacron 15\\r\\nKPX rcaron uogonek 15\\r\\nKPX rcaron uring 15\\r\\nKPX rcaron v 30\\r\\nKPX rcaron y 30\\r\\nKPX rcaron yacute 30\\r\\nKPX rcaron ydieresis 30\\r\\nKPX rcommaaccent a -10\\r\\nKPX rcommaaccent aacute -10\\r\\nKPX rcommaaccent abreve -10\\r\\nKPX rcommaaccent acircumflex -10\\r\\nKPX rcommaaccent adieresis -10\\r\\nKPX rcommaaccent agrave -10\\r\\nKPX rcommaaccent amacron -10\\r\\nKPX rcommaaccent aogonek -10\\r\\nKPX rcommaaccent aring -10\\r\\nKPX rcommaaccent atilde -10\\r\\nKPX rcommaaccent colon 30\\r\\nKPX rcommaaccent comma -50\\r\\nKPX rcommaaccent i 15\\r\\nKPX rcommaaccent iacute 15\\r\\nKPX rcommaaccent icircumflex 15\\r\\nKPX rcommaaccent idieresis 15\\r\\nKPX rcommaaccent igrave 15\\r\\nKPX rcommaaccent imacron 15\\r\\nKPX rcommaaccent iogonek 15\\r\\nKPX rcommaaccent k 15\\r\\nKPX rcommaaccent kcommaaccent 15\\r\\nKPX rcommaaccent l 15\\r\\nKPX rcommaaccent lacute 15\\r\\nKPX rcommaaccent lcommaaccent 15\\r\\nKPX rcommaaccent lslash 15\\r\\nKPX rcommaaccent m 25\\r\\nKPX rcommaaccent n 25\\r\\nKPX rcommaaccent nacute 25\\r\\nKPX rcommaaccent ncaron 25\\r\\nKPX rcommaaccent ncommaaccent 25\\r\\nKPX rcommaaccent ntilde 25\\r\\nKPX rcommaaccent p 30\\r\\nKPX rcommaaccent period -50\\r\\nKPX rcommaaccent semicolon 30\\r\\nKPX rcommaaccent t 40\\r\\nKPX rcommaaccent tcommaaccent 40\\r\\nKPX rcommaaccent u 15\\r\\nKPX rcommaaccent uacute 15\\r\\nKPX rcommaaccent ucircumflex 15\\r\\nKPX rcommaaccent udieresis 15\\r\\nKPX rcommaaccent ugrave 15\\r\\nKPX rcommaaccent uhungarumlaut 15\\r\\nKPX rcommaaccent umacron 15\\r\\nKPX rcommaaccent uogonek 15\\r\\nKPX rcommaaccent uring 15\\r\\nKPX rcommaaccent v 30\\r\\nKPX rcommaaccent y 30\\r\\nKPX rcommaaccent yacute 30\\r\\nKPX rcommaaccent ydieresis 30\\r\\nKPX s comma -15\\r\\nKPX s period -15\\r\\nKPX s w -30\\r\\nKPX sacute comma -15\\r\\nKPX sacute period -15\\r\\nKPX sacute w -30\\r\\nKPX scaron comma -15\\r\\nKPX scaron period -15\\r\\nKPX scaron w -30\\r\\nKPX scedilla comma -15\\r\\nKPX scedilla period -15\\r\\nKPX scedilla w -30\\r\\nKPX scommaaccent comma -15\\r\\nKPX scommaaccent period -15\\r\\nKPX scommaaccent w -30\\r\\nKPX semicolon space -50\\r\\nKPX space T -50\\r\\nKPX space Tcaron -50\\r\\nKPX space Tcommaaccent -50\\r\\nKPX space V -50\\r\\nKPX space W -40\\r\\nKPX space Y -90\\r\\nKPX space Yacute -90\\r\\nKPX space Ydieresis -90\\r\\nKPX space quotedblleft -30\\r\\nKPX space quoteleft -60\\r\\nKPX v a -25\\r\\nKPX v aacute -25\\r\\nKPX v abreve -25\\r\\nKPX v acircumflex -25\\r\\nKPX v adieresis -25\\r\\nKPX v agrave -25\\r\\nKPX v amacron -25\\r\\nKPX v aogonek -25\\r\\nKPX v aring -25\\r\\nKPX v atilde -25\\r\\nKPX v comma -80\\r\\nKPX v e -25\\r\\nKPX v eacute -25\\r\\nKPX v ecaron -25\\r\\nKPX v ecircumflex -25\\r\\nKPX v edieresis -25\\r\\nKPX v edotaccent -25\\r\\nKPX v egrave -25\\r\\nKPX v emacron -25\\r\\nKPX v eogonek -25\\r\\nKPX v o -25\\r\\nKPX v oacute -25\\r\\nKPX v ocircumflex -25\\r\\nKPX v odieresis -25\\r\\nKPX v ograve -25\\r\\nKPX v ohungarumlaut -25\\r\\nKPX v omacron -25\\r\\nKPX v oslash -25\\r\\nKPX v otilde -25\\r\\nKPX v period -80\\r\\nKPX w a -15\\r\\nKPX w aacute -15\\r\\nKPX w abreve -15\\r\\nKPX w acircumflex -15\\r\\nKPX w adieresis -15\\r\\nKPX w agrave -15\\r\\nKPX w amacron -15\\r\\nKPX w aogonek -15\\r\\nKPX w aring -15\\r\\nKPX w atilde -15\\r\\nKPX w comma -60\\r\\nKPX w e -10\\r\\nKPX w eacute -10\\r\\nKPX w ecaron -10\\r\\nKPX w ecircumflex -10\\r\\nKPX w edieresis -10\\r\\nKPX w edotaccent -10\\r\\nKPX w egrave -10\\r\\nKPX w emacron -10\\r\\nKPX w eogonek -10\\r\\nKPX w o -10\\r\\nKPX w oacute -10\\r\\nKPX w ocircumflex -10\\r\\nKPX w odieresis -10\\r\\nKPX w ograve -10\\r\\nKPX w ohungarumlaut -10\\r\\nKPX w omacron -10\\r\\nKPX w oslash -10\\r\\nKPX w otilde -10\\r\\nKPX w period -60\\r\\nKPX x e -30\\r\\nKPX x eacute -30\\r\\nKPX x ecaron -30\\r\\nKPX x ecircumflex -30\\r\\nKPX x edieresis -30\\r\\nKPX x edotaccent -30\\r\\nKPX x egrave -30\\r\\nKPX x emacron -30\\r\\nKPX x eogonek -30\\r\\nKPX y a -20\\r\\nKPX y aacute -20\\r\\nKPX y abreve -20\\r\\nKPX y acircumflex -20\\r\\nKPX y adieresis -20\\r\\nKPX y agrave -20\\r\\nKPX y amacron -20\\r\\nKPX y aogonek -20\\r\\nKPX y aring -20\\r\\nKPX y atilde -20\\r\\nKPX y comma -100\\r\\nKPX y e -20\\r\\nKPX y eacute -20\\r\\nKPX y ecaron -20\\r\\nKPX y ecircumflex -20\\r\\nKPX y edieresis -20\\r\\nKPX y edotaccent -20\\r\\nKPX y egrave -20\\r\\nKPX y emacron -20\\r\\nKPX y eogonek -20\\r\\nKPX y o -20\\r\\nKPX y oacute -20\\r\\nKPX y ocircumflex -20\\r\\nKPX y odieresis -20\\r\\nKPX y ograve -20\\r\\nKPX y ohungarumlaut -20\\r\\nKPX y omacron -20\\r\\nKPX y oslash -20\\r\\nKPX y otilde -20\\r\\nKPX y period -100\\r\\nKPX yacute a -20\\r\\nKPX yacute aacute -20\\r\\nKPX yacute abreve -20\\r\\nKPX yacute acircumflex -20\\r\\nKPX yacute adieresis -20\\r\\nKPX yacute agrave -20\\r\\nKPX yacute amacron -20\\r\\nKPX yacute aogonek -20\\r\\nKPX yacute aring -20\\r\\nKPX yacute atilde -20\\r\\nKPX yacute comma -100\\r\\nKPX yacute e -20\\r\\nKPX yacute eacute -20\\r\\nKPX yacute ecaron -20\\r\\nKPX yacute ecircumflex -20\\r\\nKPX yacute edieresis -20\\r\\nKPX yacute edotaccent -20\\r\\nKPX yacute egrave -20\\r\\nKPX yacute emacron -20\\r\\nKPX yacute eogonek -20\\r\\nKPX yacute o -20\\r\\nKPX yacute oacute -20\\r\\nKPX yacute ocircumflex -20\\r\\nKPX yacute odieresis -20\\r\\nKPX yacute ograve -20\\r\\nKPX yacute ohungarumlaut -20\\r\\nKPX yacute omacron -20\\r\\nKPX yacute oslash -20\\r\\nKPX yacute otilde -20\\r\\nKPX yacute period -100\\r\\nKPX ydieresis a -20\\r\\nKPX ydieresis aacute -20\\r\\nKPX ydieresis abreve -20\\r\\nKPX ydieresis acircumflex -20\\r\\nKPX ydieresis adieresis -20\\r\\nKPX ydieresis agrave -20\\r\\nKPX ydieresis amacron -20\\r\\nKPX ydieresis aogonek -20\\r\\nKPX ydieresis aring -20\\r\\nKPX ydieresis atilde -20\\r\\nKPX ydieresis comma -100\\r\\nKPX ydieresis e -20\\r\\nKPX ydieresis eacute -20\\r\\nKPX ydieresis ecaron -20\\r\\nKPX ydieresis ecircumflex -20\\r\\nKPX ydieresis edieresis -20\\r\\nKPX ydieresis edotaccent -20\\r\\nKPX ydieresis egrave -20\\r\\nKPX ydieresis emacron -20\\r\\nKPX ydieresis eogonek -20\\r\\nKPX ydieresis o -20\\r\\nKPX ydieresis oacute -20\\r\\nKPX ydieresis ocircumflex -20\\r\\nKPX ydieresis odieresis -20\\r\\nKPX ydieresis ograve -20\\r\\nKPX ydieresis ohungarumlaut -20\\r\\nKPX ydieresis omacron -20\\r\\nKPX ydieresis oslash -20\\r\\nKPX ydieresis otilde -20\\r\\nKPX ydieresis period -100\\r\\nKPX z e -15\\r\\nKPX z eacute -15\\r\\nKPX z ecaron -15\\r\\nKPX z ecircumflex -15\\r\\nKPX z edieresis -15\\r\\nKPX z edotaccent -15\\r\\nKPX z egrave -15\\r\\nKPX z emacron -15\\r\\nKPX z eogonek -15\\r\\nKPX z o -15\\r\\nKPX z oacute -15\\r\\nKPX z ocircumflex -15\\r\\nKPX z odieresis -15\\r\\nKPX z ograve -15\\r\\nKPX z ohungarumlaut -15\\r\\nKPX z omacron -15\\r\\nKPX z oslash -15\\r\\nKPX z otilde -15\\r\\nKPX zacute e -15\\r\\nKPX zacute eacute -15\\r\\nKPX zacute ecaron -15\\r\\nKPX zacute ecircumflex -15\\r\\nKPX zacute edieresis -15\\r\\nKPX zacute edotaccent -15\\r\\nKPX zacute egrave -15\\r\\nKPX zacute emacron -15\\r\\nKPX zacute eogonek -15\\r\\nKPX zacute o -15\\r\\nKPX zacute oacute -15\\r\\nKPX zacute ocircumflex -15\\r\\nKPX zacute odieresis -15\\r\\nKPX zacute ograve -15\\r\\nKPX zacute ohungarumlaut -15\\r\\nKPX zacute omacron -15\\r\\nKPX zacute oslash -15\\r\\nKPX zacute otilde -15\\r\\nKPX zcaron e -15\\r\\nKPX zcaron eacute -15\\r\\nKPX zcaron ecaron -15\\r\\nKPX zcaron ecircumflex -15\\r\\nKPX zcaron edieresis -15\\r\\nKPX zcaron edotaccent -15\\r\\nKPX zcaron egrave -15\\r\\nKPX zcaron emacron -15\\r\\nKPX zcaron eogonek -15\\r\\nKPX zcaron o -15\\r\\nKPX zcaron oacute -15\\r\\nKPX zcaron ocircumflex -15\\r\\nKPX zcaron odieresis -15\\r\\nKPX zcaron ograve -15\\r\\nKPX zcaron ohungarumlaut -15\\r\\nKPX zcaron omacron -15\\r\\nKPX zcaron oslash -15\\r\\nKPX zcaron otilde -15\\r\\nKPX zdotaccent e -15\\r\\nKPX zdotaccent eacute -15\\r\\nKPX zdotaccent ecaron -15\\r\\nKPX zdotaccent ecircumflex -15\\r\\nKPX zdotaccent edieresis -15\\r\\nKPX zdotaccent edotaccent -15\\r\\nKPX zdotaccent egrave -15\\r\\nKPX zdotaccent emacron -15\\r\\nKPX zdotaccent eogonek -15\\r\\nKPX zdotaccent o -15\\r\\nKPX zdotaccent oacute -15\\r\\nKPX zdotaccent ocircumflex -15\\r\\nKPX zdotaccent odieresis -15\\r\\nKPX zdotaccent ograve -15\\r\\nKPX zdotaccent ohungarumlaut -15\\r\\nKPX zdotaccent omacron -15\\r\\nKPX zdotaccent oslash -15\\r\\nKPX zdotaccent otilde -15\\r\\nEndKernPairs\\r\\nEndKernData\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Helvetica.afm?`)},"./node_modules/pdfkit/js/data/Symbol.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.\\r\\nComment Creation Date: Thu May  1 15:12:25 1997\\r\\nComment UniqueID 43064\\r\\nComment VMusage 30820 39997\\r\\nFontName Symbol\\r\\nFullName Symbol\\r\\nFamilyName Symbol\\r\\nWeight Medium\\r\\nItalicAngle 0\\r\\nIsFixedPitch false\\r\\nCharacterSet Special\\r\\nFontBBox -180 -293 1090 1010 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 001.008\\r\\nNotice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.\\r\\nEncodingScheme FontSpecific\\r\\nStdHW 92\\r\\nStdVW 85\\r\\nStartCharMetrics 190\\r\\nC 32 ; WX 250 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 333 ; N exclam ; B 128 -17 240 672 ;\\r\\nC 34 ; WX 713 ; N universal ; B 31 0 681 705 ;\\r\\nC 35 ; WX 500 ; N numbersign ; B 20 -16 481 673 ;\\r\\nC 36 ; WX 549 ; N existential ; B 25 0 478 707 ;\\r\\nC 37 ; WX 833 ; N percent ; B 63 -36 771 655 ;\\r\\nC 38 ; WX 778 ; N ampersand ; B 41 -18 750 661 ;\\r\\nC 39 ; WX 439 ; N suchthat ; B 48 -17 414 500 ;\\r\\nC 40 ; WX 333 ; N parenleft ; B 53 -191 300 673 ;\\r\\nC 41 ; WX 333 ; N parenright ; B 30 -191 277 673 ;\\r\\nC 42 ; WX 500 ; N asteriskmath ; B 65 134 427 551 ;\\r\\nC 43 ; WX 549 ; N plus ; B 10 0 539 533 ;\\r\\nC 44 ; WX 250 ; N comma ; B 56 -152 194 104 ;\\r\\nC 45 ; WX 549 ; N minus ; B 11 233 535 288 ;\\r\\nC 46 ; WX 250 ; N period ; B 69 -17 181 95 ;\\r\\nC 47 ; WX 278 ; N slash ; B 0 -18 254 646 ;\\r\\nC 48 ; WX 500 ; N zero ; B 24 -14 476 685 ;\\r\\nC 49 ; WX 500 ; N one ; B 117 0 390 673 ;\\r\\nC 50 ; WX 500 ; N two ; B 25 0 475 685 ;\\r\\nC 51 ; WX 500 ; N three ; B 43 -14 435 685 ;\\r\\nC 52 ; WX 500 ; N four ; B 15 0 469 685 ;\\r\\nC 53 ; WX 500 ; N five ; B 32 -14 445 690 ;\\r\\nC 54 ; WX 500 ; N six ; B 34 -14 468 685 ;\\r\\nC 55 ; WX 500 ; N seven ; B 24 -16 448 673 ;\\r\\nC 56 ; WX 500 ; N eight ; B 56 -14 445 685 ;\\r\\nC 57 ; WX 500 ; N nine ; B 30 -18 459 685 ;\\r\\nC 58 ; WX 278 ; N colon ; B 81 -17 193 460 ;\\r\\nC 59 ; WX 278 ; N semicolon ; B 83 -152 221 460 ;\\r\\nC 60 ; WX 549 ; N less ; B 26 0 523 522 ;\\r\\nC 61 ; WX 549 ; N equal ; B 11 141 537 390 ;\\r\\nC 62 ; WX 549 ; N greater ; B 26 0 523 522 ;\\r\\nC 63 ; WX 444 ; N question ; B 70 -17 412 686 ;\\r\\nC 64 ; WX 549 ; N congruent ; B 11 0 537 475 ;\\r\\nC 65 ; WX 722 ; N Alpha ; B 4 0 684 673 ;\\r\\nC 66 ; WX 667 ; N Beta ; B 29 0 592 673 ;\\r\\nC 67 ; WX 722 ; N Chi ; B -9 0 704 673 ;\\r\\nC 68 ; WX 612 ; N Delta ; B 6 0 608 688 ;\\r\\nC 69 ; WX 611 ; N Epsilon ; B 32 0 617 673 ;\\r\\nC 70 ; WX 763 ; N Phi ; B 26 0 741 673 ;\\r\\nC 71 ; WX 603 ; N Gamma ; B 24 0 609 673 ;\\r\\nC 72 ; WX 722 ; N Eta ; B 39 0 729 673 ;\\r\\nC 73 ; WX 333 ; N Iota ; B 32 0 316 673 ;\\r\\nC 74 ; WX 631 ; N theta1 ; B 18 -18 623 689 ;\\r\\nC 75 ; WX 722 ; N Kappa ; B 35 0 722 673 ;\\r\\nC 76 ; WX 686 ; N Lambda ; B 6 0 680 688 ;\\r\\nC 77 ; WX 889 ; N Mu ; B 28 0 887 673 ;\\r\\nC 78 ; WX 722 ; N Nu ; B 29 -8 720 673 ;\\r\\nC 79 ; WX 722 ; N Omicron ; B 41 -17 715 685 ;\\r\\nC 80 ; WX 768 ; N Pi ; B 25 0 745 673 ;\\r\\nC 81 ; WX 741 ; N Theta ; B 41 -17 715 685 ;\\r\\nC 82 ; WX 556 ; N Rho ; B 28 0 563 673 ;\\r\\nC 83 ; WX 592 ; N Sigma ; B 5 0 589 673 ;\\r\\nC 84 ; WX 611 ; N Tau ; B 33 0 607 673 ;\\r\\nC 85 ; WX 690 ; N Upsilon ; B -8 0 694 673 ;\\r\\nC 86 ; WX 439 ; N sigma1 ; B 40 -233 436 500 ;\\r\\nC 87 ; WX 768 ; N Omega ; B 34 0 736 688 ;\\r\\nC 88 ; WX 645 ; N Xi ; B 40 0 599 673 ;\\r\\nC 89 ; WX 795 ; N Psi ; B 15 0 781 684 ;\\r\\nC 90 ; WX 611 ; N Zeta ; B 44 0 636 673 ;\\r\\nC 91 ; WX 333 ; N bracketleft ; B 86 -155 299 674 ;\\r\\nC 92 ; WX 863 ; N therefore ; B 163 0 701 487 ;\\r\\nC 93 ; WX 333 ; N bracketright ; B 33 -155 246 674 ;\\r\\nC 94 ; WX 658 ; N perpendicular ; B 15 0 652 674 ;\\r\\nC 95 ; WX 500 ; N underscore ; B -2 -125 502 -75 ;\\r\\nC 96 ; WX 500 ; N radicalex ; B 480 881 1090 917 ;\\r\\nC 97 ; WX 631 ; N alpha ; B 41 -18 622 500 ;\\r\\nC 98 ; WX 549 ; N beta ; B 61 -223 515 741 ;\\r\\nC 99 ; WX 549 ; N chi ; B 12 -231 522 499 ;\\r\\nC 100 ; WX 494 ; N delta ; B 40 -19 481 740 ;\\r\\nC 101 ; WX 439 ; N epsilon ; B 22 -19 427 502 ;\\r\\nC 102 ; WX 521 ; N phi ; B 28 -224 492 673 ;\\r\\nC 103 ; WX 411 ; N gamma ; B 5 -225 484 499 ;\\r\\nC 104 ; WX 603 ; N eta ; B 0 -202 527 514 ;\\r\\nC 105 ; WX 329 ; N iota ; B 0 -17 301 503 ;\\r\\nC 106 ; WX 603 ; N phi1 ; B 36 -224 587 499 ;\\r\\nC 107 ; WX 549 ; N kappa ; B 33 0 558 501 ;\\r\\nC 108 ; WX 549 ; N lambda ; B 24 -17 548 739 ;\\r\\nC 109 ; WX 576 ; N mu ; B 33 -223 567 500 ;\\r\\nC 110 ; WX 521 ; N nu ; B -9 -16 475 507 ;\\r\\nC 111 ; WX 549 ; N omicron ; B 35 -19 501 499 ;\\r\\nC 112 ; WX 549 ; N pi ; B 10 -19 530 487 ;\\r\\nC 113 ; WX 521 ; N theta ; B 43 -17 485 690 ;\\r\\nC 114 ; WX 549 ; N rho ; B 50 -230 490 499 ;\\r\\nC 115 ; WX 603 ; N sigma ; B 30 -21 588 500 ;\\r\\nC 116 ; WX 439 ; N tau ; B 10 -19 418 500 ;\\r\\nC 117 ; WX 576 ; N upsilon ; B 7 -18 535 507 ;\\r\\nC 118 ; WX 713 ; N omega1 ; B 12 -18 671 583 ;\\r\\nC 119 ; WX 686 ; N omega ; B 42 -17 684 500 ;\\r\\nC 120 ; WX 493 ; N xi ; B 27 -224 469 766 ;\\r\\nC 121 ; WX 686 ; N psi ; B 12 -228 701 500 ;\\r\\nC 122 ; WX 494 ; N zeta ; B 60 -225 467 756 ;\\r\\nC 123 ; WX 480 ; N braceleft ; B 58 -183 397 673 ;\\r\\nC 124 ; WX 200 ; N bar ; B 65 -293 135 707 ;\\r\\nC 125 ; WX 480 ; N braceright ; B 79 -183 418 673 ;\\r\\nC 126 ; WX 549 ; N similar ; B 17 203 529 307 ;\\r\\nC 160 ; WX 750 ; N Euro ; B 20 -12 714 685 ;\\r\\nC 161 ; WX 620 ; N Upsilon1 ; B -2 0 610 685 ;\\r\\nC 162 ; WX 247 ; N minute ; B 27 459 228 735 ;\\r\\nC 163 ; WX 549 ; N lessequal ; B 29 0 526 639 ;\\r\\nC 164 ; WX 167 ; N fraction ; B -180 -12 340 677 ;\\r\\nC 165 ; WX 713 ; N infinity ; B 26 124 688 404 ;\\r\\nC 166 ; WX 500 ; N florin ; B 2 -193 494 686 ;\\r\\nC 167 ; WX 753 ; N club ; B 86 -26 660 533 ;\\r\\nC 168 ; WX 753 ; N diamond ; B 142 -36 600 550 ;\\r\\nC 169 ; WX 753 ; N heart ; B 117 -33 631 532 ;\\r\\nC 170 ; WX 753 ; N spade ; B 113 -36 629 548 ;\\r\\nC 171 ; WX 1042 ; N arrowboth ; B 24 -15 1024 511 ;\\r\\nC 172 ; WX 987 ; N arrowleft ; B 32 -15 942 511 ;\\r\\nC 173 ; WX 603 ; N arrowup ; B 45 0 571 910 ;\\r\\nC 174 ; WX 987 ; N arrowright ; B 49 -15 959 511 ;\\r\\nC 175 ; WX 603 ; N arrowdown ; B 45 -22 571 888 ;\\r\\nC 176 ; WX 400 ; N degree ; B 50 385 350 685 ;\\r\\nC 177 ; WX 549 ; N plusminus ; B 10 0 539 645 ;\\r\\nC 178 ; WX 411 ; N second ; B 20 459 413 737 ;\\r\\nC 179 ; WX 549 ; N greaterequal ; B 29 0 526 639 ;\\r\\nC 180 ; WX 549 ; N multiply ; B 17 8 533 524 ;\\r\\nC 181 ; WX 713 ; N proportional ; B 27 123 639 404 ;\\r\\nC 182 ; WX 494 ; N partialdiff ; B 26 -20 462 746 ;\\r\\nC 183 ; WX 460 ; N bullet ; B 50 113 410 473 ;\\r\\nC 184 ; WX 549 ; N divide ; B 10 71 536 456 ;\\r\\nC 185 ; WX 549 ; N notequal ; B 15 -25 540 549 ;\\r\\nC 186 ; WX 549 ; N equivalence ; B 14 82 538 443 ;\\r\\nC 187 ; WX 549 ; N approxequal ; B 14 135 527 394 ;\\r\\nC 188 ; WX 1000 ; N ellipsis ; B 111 -17 889 95 ;\\r\\nC 189 ; WX 603 ; N arrowvertex ; B 280 -120 336 1010 ;\\r\\nC 190 ; WX 1000 ; N arrowhorizex ; B -60 220 1050 276 ;\\r\\nC 191 ; WX 658 ; N carriagereturn ; B 15 -16 602 629 ;\\r\\nC 192 ; WX 823 ; N aleph ; B 175 -18 661 658 ;\\r\\nC 193 ; WX 686 ; N Ifraktur ; B 10 -53 578 740 ;\\r\\nC 194 ; WX 795 ; N Rfraktur ; B 26 -15 759 734 ;\\r\\nC 195 ; WX 987 ; N weierstrass ; B 159 -211 870 573 ;\\r\\nC 196 ; WX 768 ; N circlemultiply ; B 43 -17 733 673 ;\\r\\nC 197 ; WX 768 ; N circleplus ; B 43 -15 733 675 ;\\r\\nC 198 ; WX 823 ; N emptyset ; B 39 -24 781 719 ;\\r\\nC 199 ; WX 768 ; N intersection ; B 40 0 732 509 ;\\r\\nC 200 ; WX 768 ; N union ; B 40 -17 732 492 ;\\r\\nC 201 ; WX 713 ; N propersuperset ; B 20 0 673 470 ;\\r\\nC 202 ; WX 713 ; N reflexsuperset ; B 20 -125 673 470 ;\\r\\nC 203 ; WX 713 ; N notsubset ; B 36 -70 690 540 ;\\r\\nC 204 ; WX 713 ; N propersubset ; B 37 0 690 470 ;\\r\\nC 205 ; WX 713 ; N reflexsubset ; B 37 -125 690 470 ;\\r\\nC 206 ; WX 713 ; N element ; B 45 0 505 468 ;\\r\\nC 207 ; WX 713 ; N notelement ; B 45 -58 505 555 ;\\r\\nC 208 ; WX 768 ; N angle ; B 26 0 738 673 ;\\r\\nC 209 ; WX 713 ; N gradient ; B 36 -19 681 718 ;\\r\\nC 210 ; WX 790 ; N registerserif ; B 50 -17 740 673 ;\\r\\nC 211 ; WX 790 ; N copyrightserif ; B 51 -15 741 675 ;\\r\\nC 212 ; WX 890 ; N trademarkserif ; B 18 293 855 673 ;\\r\\nC 213 ; WX 823 ; N product ; B 25 -101 803 751 ;\\r\\nC 214 ; WX 549 ; N radical ; B 10 -38 515 917 ;\\r\\nC 215 ; WX 250 ; N dotmath ; B 69 210 169 310 ;\\r\\nC 216 ; WX 713 ; N logicalnot ; B 15 0 680 288 ;\\r\\nC 217 ; WX 603 ; N logicaland ; B 23 0 583 454 ;\\r\\nC 218 ; WX 603 ; N logicalor ; B 30 0 578 477 ;\\r\\nC 219 ; WX 1042 ; N arrowdblboth ; B 27 -20 1023 510 ;\\r\\nC 220 ; WX 987 ; N arrowdblleft ; B 30 -15 939 513 ;\\r\\nC 221 ; WX 603 ; N arrowdblup ; B 39 2 567 911 ;\\r\\nC 222 ; WX 987 ; N arrowdblright ; B 45 -20 954 508 ;\\r\\nC 223 ; WX 603 ; N arrowdbldown ; B 44 -19 572 890 ;\\r\\nC 224 ; WX 494 ; N lozenge ; B 18 0 466 745 ;\\r\\nC 225 ; WX 329 ; N angleleft ; B 25 -198 306 746 ;\\r\\nC 226 ; WX 790 ; N registersans ; B 50 -20 740 670 ;\\r\\nC 227 ; WX 790 ; N copyrightsans ; B 49 -15 739 675 ;\\r\\nC 228 ; WX 786 ; N trademarksans ; B 5 293 725 673 ;\\r\\nC 229 ; WX 713 ; N summation ; B 14 -108 695 752 ;\\r\\nC 230 ; WX 384 ; N parenlefttp ; B 24 -293 436 926 ;\\r\\nC 231 ; WX 384 ; N parenleftex ; B 24 -85 108 925 ;\\r\\nC 232 ; WX 384 ; N parenleftbt ; B 24 -293 436 926 ;\\r\\nC 233 ; WX 384 ; N bracketlefttp ; B 0 -80 349 926 ;\\r\\nC 234 ; WX 384 ; N bracketleftex ; B 0 -79 77 925 ;\\r\\nC 235 ; WX 384 ; N bracketleftbt ; B 0 -80 349 926 ;\\r\\nC 236 ; WX 494 ; N bracelefttp ; B 209 -85 445 925 ;\\r\\nC 237 ; WX 494 ; N braceleftmid ; B 20 -85 284 935 ;\\r\\nC 238 ; WX 494 ; N braceleftbt ; B 209 -75 445 935 ;\\r\\nC 239 ; WX 494 ; N braceex ; B 209 -85 284 935 ;\\r\\nC 241 ; WX 329 ; N angleright ; B 21 -198 302 746 ;\\r\\nC 242 ; WX 274 ; N integral ; B 2 -107 291 916 ;\\r\\nC 243 ; WX 686 ; N integraltp ; B 308 -88 675 920 ;\\r\\nC 244 ; WX 686 ; N integralex ; B 308 -88 378 975 ;\\r\\nC 245 ; WX 686 ; N integralbt ; B 11 -87 378 921 ;\\r\\nC 246 ; WX 384 ; N parenrighttp ; B 54 -293 466 926 ;\\r\\nC 247 ; WX 384 ; N parenrightex ; B 382 -85 466 925 ;\\r\\nC 248 ; WX 384 ; N parenrightbt ; B 54 -293 466 926 ;\\r\\nC 249 ; WX 384 ; N bracketrighttp ; B 22 -80 371 926 ;\\r\\nC 250 ; WX 384 ; N bracketrightex ; B 294 -79 371 925 ;\\r\\nC 251 ; WX 384 ; N bracketrightbt ; B 22 -80 371 926 ;\\r\\nC 252 ; WX 494 ; N bracerighttp ; B 48 -85 284 925 ;\\r\\nC 253 ; WX 494 ; N bracerightmid ; B 209 -85 473 935 ;\\r\\nC 254 ; WX 494 ; N bracerightbt ; B 48 -75 284 935 ;\\r\\nC -1 ; WX 790 ; N apple ; B 56 -3 733 808 ;\\r\\nEndCharMetrics\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Symbol.afm?`)},"./node_modules/pdfkit/js/data/Times-Bold.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nComment Creation Date: Thu May  1 12:52:56 1997\\r\\nComment UniqueID 43065\\r\\nComment VMusage 41636 52661\\r\\nFontName Times-Bold\\r\\nFullName Times Bold\\r\\nFamilyName Times\\r\\nWeight Bold\\r\\nItalicAngle 0\\r\\nIsFixedPitch false\\r\\nCharacterSet ExtendedRoman\\r\\nFontBBox -168 -218 1000 935 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 002.000\\r\\nNotice Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.\\r\\nEncodingScheme AdobeStandardEncoding\\r\\nCapHeight 676\\r\\nXHeight 461\\r\\nAscender 683\\r\\nDescender -217\\r\\nStdHW 44\\r\\nStdVW 139\\r\\nStartCharMetrics 315\\r\\nC 32 ; WX 250 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 333 ; N exclam ; B 81 -13 251 691 ;\\r\\nC 34 ; WX 555 ; N quotedbl ; B 83 404 472 691 ;\\r\\nC 35 ; WX 500 ; N numbersign ; B 4 0 496 700 ;\\r\\nC 36 ; WX 500 ; N dollar ; B 29 -99 472 750 ;\\r\\nC 37 ; WX 1000 ; N percent ; B 124 -14 877 692 ;\\r\\nC 38 ; WX 833 ; N ampersand ; B 62 -16 787 691 ;\\r\\nC 39 ; WX 333 ; N quoteright ; B 79 356 263 691 ;\\r\\nC 40 ; WX 333 ; N parenleft ; B 46 -168 306 694 ;\\r\\nC 41 ; WX 333 ; N parenright ; B 27 -168 287 694 ;\\r\\nC 42 ; WX 500 ; N asterisk ; B 56 255 447 691 ;\\r\\nC 43 ; WX 570 ; N plus ; B 33 0 537 506 ;\\r\\nC 44 ; WX 250 ; N comma ; B 39 -180 223 155 ;\\r\\nC 45 ; WX 333 ; N hyphen ; B 44 171 287 287 ;\\r\\nC 46 ; WX 250 ; N period ; B 41 -13 210 156 ;\\r\\nC 47 ; WX 278 ; N slash ; B -24 -19 302 691 ;\\r\\nC 48 ; WX 500 ; N zero ; B 24 -13 476 688 ;\\r\\nC 49 ; WX 500 ; N one ; B 65 0 442 688 ;\\r\\nC 50 ; WX 500 ; N two ; B 17 0 478 688 ;\\r\\nC 51 ; WX 500 ; N three ; B 16 -14 468 688 ;\\r\\nC 52 ; WX 500 ; N four ; B 19 0 475 688 ;\\r\\nC 53 ; WX 500 ; N five ; B 22 -8 470 676 ;\\r\\nC 54 ; WX 500 ; N six ; B 28 -13 475 688 ;\\r\\nC 55 ; WX 500 ; N seven ; B 17 0 477 676 ;\\r\\nC 56 ; WX 500 ; N eight ; B 28 -13 472 688 ;\\r\\nC 57 ; WX 500 ; N nine ; B 26 -13 473 688 ;\\r\\nC 58 ; WX 333 ; N colon ; B 82 -13 251 472 ;\\r\\nC 59 ; WX 333 ; N semicolon ; B 82 -180 266 472 ;\\r\\nC 60 ; WX 570 ; N less ; B 31 -8 539 514 ;\\r\\nC 61 ; WX 570 ; N equal ; B 33 107 537 399 ;\\r\\nC 62 ; WX 570 ; N greater ; B 31 -8 539 514 ;\\r\\nC 63 ; WX 500 ; N question ; B 57 -13 445 689 ;\\r\\nC 64 ; WX 930 ; N at ; B 108 -19 822 691 ;\\r\\nC 65 ; WX 722 ; N A ; B 9 0 689 690 ;\\r\\nC 66 ; WX 667 ; N B ; B 16 0 619 676 ;\\r\\nC 67 ; WX 722 ; N C ; B 49 -19 687 691 ;\\r\\nC 68 ; WX 722 ; N D ; B 14 0 690 676 ;\\r\\nC 69 ; WX 667 ; N E ; B 16 0 641 676 ;\\r\\nC 70 ; WX 611 ; N F ; B 16 0 583 676 ;\\r\\nC 71 ; WX 778 ; N G ; B 37 -19 755 691 ;\\r\\nC 72 ; WX 778 ; N H ; B 21 0 759 676 ;\\r\\nC 73 ; WX 389 ; N I ; B 20 0 370 676 ;\\r\\nC 74 ; WX 500 ; N J ; B 3 -96 479 676 ;\\r\\nC 75 ; WX 778 ; N K ; B 30 0 769 676 ;\\r\\nC 76 ; WX 667 ; N L ; B 19 0 638 676 ;\\r\\nC 77 ; WX 944 ; N M ; B 14 0 921 676 ;\\r\\nC 78 ; WX 722 ; N N ; B 16 -18 701 676 ;\\r\\nC 79 ; WX 778 ; N O ; B 35 -19 743 691 ;\\r\\nC 80 ; WX 611 ; N P ; B 16 0 600 676 ;\\r\\nC 81 ; WX 778 ; N Q ; B 35 -176 743 691 ;\\r\\nC 82 ; WX 722 ; N R ; B 26 0 715 676 ;\\r\\nC 83 ; WX 556 ; N S ; B 35 -19 513 692 ;\\r\\nC 84 ; WX 667 ; N T ; B 31 0 636 676 ;\\r\\nC 85 ; WX 722 ; N U ; B 16 -19 701 676 ;\\r\\nC 86 ; WX 722 ; N V ; B 16 -18 701 676 ;\\r\\nC 87 ; WX 1000 ; N W ; B 19 -15 981 676 ;\\r\\nC 88 ; WX 722 ; N X ; B 16 0 699 676 ;\\r\\nC 89 ; WX 722 ; N Y ; B 15 0 699 676 ;\\r\\nC 90 ; WX 667 ; N Z ; B 28 0 634 676 ;\\r\\nC 91 ; WX 333 ; N bracketleft ; B 67 -149 301 678 ;\\r\\nC 92 ; WX 278 ; N backslash ; B -25 -19 303 691 ;\\r\\nC 93 ; WX 333 ; N bracketright ; B 32 -149 266 678 ;\\r\\nC 94 ; WX 581 ; N asciicircum ; B 73 311 509 676 ;\\r\\nC 95 ; WX 500 ; N underscore ; B 0 -125 500 -75 ;\\r\\nC 96 ; WX 333 ; N quoteleft ; B 70 356 254 691 ;\\r\\nC 97 ; WX 500 ; N a ; B 25 -14 488 473 ;\\r\\nC 98 ; WX 556 ; N b ; B 17 -14 521 676 ;\\r\\nC 99 ; WX 444 ; N c ; B 25 -14 430 473 ;\\r\\nC 100 ; WX 556 ; N d ; B 25 -14 534 676 ;\\r\\nC 101 ; WX 444 ; N e ; B 25 -14 426 473 ;\\r\\nC 102 ; WX 333 ; N f ; B 14 0 389 691 ; L i fi ; L l fl ;\\r\\nC 103 ; WX 500 ; N g ; B 28 -206 483 473 ;\\r\\nC 104 ; WX 556 ; N h ; B 16 0 534 676 ;\\r\\nC 105 ; WX 278 ; N i ; B 16 0 255 691 ;\\r\\nC 106 ; WX 333 ; N j ; B -57 -203 263 691 ;\\r\\nC 107 ; WX 556 ; N k ; B 22 0 543 676 ;\\r\\nC 108 ; WX 278 ; N l ; B 16 0 255 676 ;\\r\\nC 109 ; WX 833 ; N m ; B 16 0 814 473 ;\\r\\nC 110 ; WX 556 ; N n ; B 21 0 539 473 ;\\r\\nC 111 ; WX 500 ; N o ; B 25 -14 476 473 ;\\r\\nC 112 ; WX 556 ; N p ; B 19 -205 524 473 ;\\r\\nC 113 ; WX 556 ; N q ; B 34 -205 536 473 ;\\r\\nC 114 ; WX 444 ; N r ; B 29 0 434 473 ;\\r\\nC 115 ; WX 389 ; N s ; B 25 -14 361 473 ;\\r\\nC 116 ; WX 333 ; N t ; B 20 -12 332 630 ;\\r\\nC 117 ; WX 556 ; N u ; B 16 -14 537 461 ;\\r\\nC 118 ; WX 500 ; N v ; B 21 -14 485 461 ;\\r\\nC 119 ; WX 722 ; N w ; B 23 -14 707 461 ;\\r\\nC 120 ; WX 500 ; N x ; B 12 0 484 461 ;\\r\\nC 121 ; WX 500 ; N y ; B 16 -205 480 461 ;\\r\\nC 122 ; WX 444 ; N z ; B 21 0 420 461 ;\\r\\nC 123 ; WX 394 ; N braceleft ; B 22 -175 340 698 ;\\r\\nC 124 ; WX 220 ; N bar ; B 66 -218 154 782 ;\\r\\nC 125 ; WX 394 ; N braceright ; B 54 -175 372 698 ;\\r\\nC 126 ; WX 520 ; N asciitilde ; B 29 173 491 333 ;\\r\\nC 161 ; WX 333 ; N exclamdown ; B 82 -203 252 501 ;\\r\\nC 162 ; WX 500 ; N cent ; B 53 -140 458 588 ;\\r\\nC 163 ; WX 500 ; N sterling ; B 21 -14 477 684 ;\\r\\nC 164 ; WX 167 ; N fraction ; B -168 -12 329 688 ;\\r\\nC 165 ; WX 500 ; N yen ; B -64 0 547 676 ;\\r\\nC 166 ; WX 500 ; N florin ; B 0 -155 498 706 ;\\r\\nC 167 ; WX 500 ; N section ; B 57 -132 443 691 ;\\r\\nC 168 ; WX 500 ; N currency ; B -26 61 526 613 ;\\r\\nC 169 ; WX 278 ; N quotesingle ; B 75 404 204 691 ;\\r\\nC 170 ; WX 500 ; N quotedblleft ; B 32 356 486 691 ;\\r\\nC 171 ; WX 500 ; N guillemotleft ; B 23 36 473 415 ;\\r\\nC 172 ; WX 333 ; N guilsinglleft ; B 51 36 305 415 ;\\r\\nC 173 ; WX 333 ; N guilsinglright ; B 28 36 282 415 ;\\r\\nC 174 ; WX 556 ; N fi ; B 14 0 536 691 ;\\r\\nC 175 ; WX 556 ; N fl ; B 14 0 536 691 ;\\r\\nC 177 ; WX 500 ; N endash ; B 0 181 500 271 ;\\r\\nC 178 ; WX 500 ; N dagger ; B 47 -134 453 691 ;\\r\\nC 179 ; WX 500 ; N daggerdbl ; B 45 -132 456 691 ;\\r\\nC 180 ; WX 250 ; N periodcentered ; B 41 248 210 417 ;\\r\\nC 182 ; WX 540 ; N paragraph ; B 0 -186 519 676 ;\\r\\nC 183 ; WX 350 ; N bullet ; B 35 198 315 478 ;\\r\\nC 184 ; WX 333 ; N quotesinglbase ; B 79 -180 263 155 ;\\r\\nC 185 ; WX 500 ; N quotedblbase ; B 14 -180 468 155 ;\\r\\nC 186 ; WX 500 ; N quotedblright ; B 14 356 468 691 ;\\r\\nC 187 ; WX 500 ; N guillemotright ; B 27 36 477 415 ;\\r\\nC 188 ; WX 1000 ; N ellipsis ; B 82 -13 917 156 ;\\r\\nC 189 ; WX 1000 ; N perthousand ; B 7 -29 995 706 ;\\r\\nC 191 ; WX 500 ; N questiondown ; B 55 -201 443 501 ;\\r\\nC 193 ; WX 333 ; N grave ; B 8 528 246 713 ;\\r\\nC 194 ; WX 333 ; N acute ; B 86 528 324 713 ;\\r\\nC 195 ; WX 333 ; N circumflex ; B -2 528 335 704 ;\\r\\nC 196 ; WX 333 ; N tilde ; B -16 547 349 674 ;\\r\\nC 197 ; WX 333 ; N macron ; B 1 565 331 637 ;\\r\\nC 198 ; WX 333 ; N breve ; B 15 528 318 691 ;\\r\\nC 199 ; WX 333 ; N dotaccent ; B 103 536 258 691 ;\\r\\nC 200 ; WX 333 ; N dieresis ; B -2 537 335 667 ;\\r\\nC 202 ; WX 333 ; N ring ; B 60 527 273 740 ;\\r\\nC 203 ; WX 333 ; N cedilla ; B 68 -218 294 0 ;\\r\\nC 205 ; WX 333 ; N hungarumlaut ; B -13 528 425 713 ;\\r\\nC 206 ; WX 333 ; N ogonek ; B 90 -193 319 24 ;\\r\\nC 207 ; WX 333 ; N caron ; B -2 528 335 704 ;\\r\\nC 208 ; WX 1000 ; N emdash ; B 0 181 1000 271 ;\\r\\nC 225 ; WX 1000 ; N AE ; B 4 0 951 676 ;\\r\\nC 227 ; WX 300 ; N ordfeminine ; B -1 397 301 688 ;\\r\\nC 232 ; WX 667 ; N Lslash ; B 19 0 638 676 ;\\r\\nC 233 ; WX 778 ; N Oslash ; B 35 -74 743 737 ;\\r\\nC 234 ; WX 1000 ; N OE ; B 22 -5 981 684 ;\\r\\nC 235 ; WX 330 ; N ordmasculine ; B 18 397 312 688 ;\\r\\nC 241 ; WX 722 ; N ae ; B 33 -14 693 473 ;\\r\\nC 245 ; WX 278 ; N dotlessi ; B 16 0 255 461 ;\\r\\nC 248 ; WX 278 ; N lslash ; B -22 0 303 676 ;\\r\\nC 249 ; WX 500 ; N oslash ; B 25 -92 476 549 ;\\r\\nC 250 ; WX 722 ; N oe ; B 22 -14 696 473 ;\\r\\nC 251 ; WX 556 ; N germandbls ; B 19 -12 517 691 ;\\r\\nC -1 ; WX 389 ; N Idieresis ; B 20 0 370 877 ;\\r\\nC -1 ; WX 444 ; N eacute ; B 25 -14 426 713 ;\\r\\nC -1 ; WX 500 ; N abreve ; B 25 -14 488 691 ;\\r\\nC -1 ; WX 556 ; N uhungarumlaut ; B 16 -14 557 713 ;\\r\\nC -1 ; WX 444 ; N ecaron ; B 25 -14 426 704 ;\\r\\nC -1 ; WX 722 ; N Ydieresis ; B 15 0 699 877 ;\\r\\nC -1 ; WX 570 ; N divide ; B 33 -31 537 537 ;\\r\\nC -1 ; WX 722 ; N Yacute ; B 15 0 699 923 ;\\r\\nC -1 ; WX 722 ; N Acircumflex ; B 9 0 689 914 ;\\r\\nC -1 ; WX 500 ; N aacute ; B 25 -14 488 713 ;\\r\\nC -1 ; WX 722 ; N Ucircumflex ; B 16 -19 701 914 ;\\r\\nC -1 ; WX 500 ; N yacute ; B 16 -205 480 713 ;\\r\\nC -1 ; WX 389 ; N scommaaccent ; B 25 -218 361 473 ;\\r\\nC -1 ; WX 444 ; N ecircumflex ; B 25 -14 426 704 ;\\r\\nC -1 ; WX 722 ; N Uring ; B 16 -19 701 935 ;\\r\\nC -1 ; WX 722 ; N Udieresis ; B 16 -19 701 877 ;\\r\\nC -1 ; WX 500 ; N aogonek ; B 25 -193 504 473 ;\\r\\nC -1 ; WX 722 ; N Uacute ; B 16 -19 701 923 ;\\r\\nC -1 ; WX 556 ; N uogonek ; B 16 -193 539 461 ;\\r\\nC -1 ; WX 667 ; N Edieresis ; B 16 0 641 877 ;\\r\\nC -1 ; WX 722 ; N Dcroat ; B 6 0 690 676 ;\\r\\nC -1 ; WX 250 ; N commaaccent ; B 47 -218 203 -50 ;\\r\\nC -1 ; WX 747 ; N copyright ; B 26 -19 721 691 ;\\r\\nC -1 ; WX 667 ; N Emacron ; B 16 0 641 847 ;\\r\\nC -1 ; WX 444 ; N ccaron ; B 25 -14 430 704 ;\\r\\nC -1 ; WX 500 ; N aring ; B 25 -14 488 740 ;\\r\\nC -1 ; WX 722 ; N Ncommaaccent ; B 16 -188 701 676 ;\\r\\nC -1 ; WX 278 ; N lacute ; B 16 0 297 923 ;\\r\\nC -1 ; WX 500 ; N agrave ; B 25 -14 488 713 ;\\r\\nC -1 ; WX 667 ; N Tcommaaccent ; B 31 -218 636 676 ;\\r\\nC -1 ; WX 722 ; N Cacute ; B 49 -19 687 923 ;\\r\\nC -1 ; WX 500 ; N atilde ; B 25 -14 488 674 ;\\r\\nC -1 ; WX 667 ; N Edotaccent ; B 16 0 641 901 ;\\r\\nC -1 ; WX 389 ; N scaron ; B 25 -14 363 704 ;\\r\\nC -1 ; WX 389 ; N scedilla ; B 25 -218 361 473 ;\\r\\nC -1 ; WX 278 ; N iacute ; B 16 0 289 713 ;\\r\\nC -1 ; WX 494 ; N lozenge ; B 10 0 484 745 ;\\r\\nC -1 ; WX 722 ; N Rcaron ; B 26 0 715 914 ;\\r\\nC -1 ; WX 778 ; N Gcommaaccent ; B 37 -218 755 691 ;\\r\\nC -1 ; WX 556 ; N ucircumflex ; B 16 -14 537 704 ;\\r\\nC -1 ; WX 500 ; N acircumflex ; B 25 -14 488 704 ;\\r\\nC -1 ; WX 722 ; N Amacron ; B 9 0 689 847 ;\\r\\nC -1 ; WX 444 ; N rcaron ; B 29 0 434 704 ;\\r\\nC -1 ; WX 444 ; N ccedilla ; B 25 -218 430 473 ;\\r\\nC -1 ; WX 667 ; N Zdotaccent ; B 28 0 634 901 ;\\r\\nC -1 ; WX 611 ; N Thorn ; B 16 0 600 676 ;\\r\\nC -1 ; WX 778 ; N Omacron ; B 35 -19 743 847 ;\\r\\nC -1 ; WX 722 ; N Racute ; B 26 0 715 923 ;\\r\\nC -1 ; WX 556 ; N Sacute ; B 35 -19 513 923 ;\\r\\nC -1 ; WX 672 ; N dcaron ; B 25 -14 681 682 ;\\r\\nC -1 ; WX 722 ; N Umacron ; B 16 -19 701 847 ;\\r\\nC -1 ; WX 556 ; N uring ; B 16 -14 537 740 ;\\r\\nC -1 ; WX 300 ; N threesuperior ; B 3 268 297 688 ;\\r\\nC -1 ; WX 778 ; N Ograve ; B 35 -19 743 923 ;\\r\\nC -1 ; WX 722 ; N Agrave ; B 9 0 689 923 ;\\r\\nC -1 ; WX 722 ; N Abreve ; B 9 0 689 901 ;\\r\\nC -1 ; WX 570 ; N multiply ; B 48 16 522 490 ;\\r\\nC -1 ; WX 556 ; N uacute ; B 16 -14 537 713 ;\\r\\nC -1 ; WX 667 ; N Tcaron ; B 31 0 636 914 ;\\r\\nC -1 ; WX 494 ; N partialdiff ; B 11 -21 494 750 ;\\r\\nC -1 ; WX 500 ; N ydieresis ; B 16 -205 480 667 ;\\r\\nC -1 ; WX 722 ; N Nacute ; B 16 -18 701 923 ;\\r\\nC -1 ; WX 278 ; N icircumflex ; B -37 0 300 704 ;\\r\\nC -1 ; WX 667 ; N Ecircumflex ; B 16 0 641 914 ;\\r\\nC -1 ; WX 500 ; N adieresis ; B 25 -14 488 667 ;\\r\\nC -1 ; WX 444 ; N edieresis ; B 25 -14 426 667 ;\\r\\nC -1 ; WX 444 ; N cacute ; B 25 -14 430 713 ;\\r\\nC -1 ; WX 556 ; N nacute ; B 21 0 539 713 ;\\r\\nC -1 ; WX 556 ; N umacron ; B 16 -14 537 637 ;\\r\\nC -1 ; WX 722 ; N Ncaron ; B 16 -18 701 914 ;\\r\\nC -1 ; WX 389 ; N Iacute ; B 20 0 370 923 ;\\r\\nC -1 ; WX 570 ; N plusminus ; B 33 0 537 506 ;\\r\\nC -1 ; WX 220 ; N brokenbar ; B 66 -143 154 707 ;\\r\\nC -1 ; WX 747 ; N registered ; B 26 -19 721 691 ;\\r\\nC -1 ; WX 778 ; N Gbreve ; B 37 -19 755 901 ;\\r\\nC -1 ; WX 389 ; N Idotaccent ; B 20 0 370 901 ;\\r\\nC -1 ; WX 600 ; N summation ; B 14 -10 585 706 ;\\r\\nC -1 ; WX 667 ; N Egrave ; B 16 0 641 923 ;\\r\\nC -1 ; WX 444 ; N racute ; B 29 0 434 713 ;\\r\\nC -1 ; WX 500 ; N omacron ; B 25 -14 476 637 ;\\r\\nC -1 ; WX 667 ; N Zacute ; B 28 0 634 923 ;\\r\\nC -1 ; WX 667 ; N Zcaron ; B 28 0 634 914 ;\\r\\nC -1 ; WX 549 ; N greaterequal ; B 26 0 523 704 ;\\r\\nC -1 ; WX 722 ; N Eth ; B 6 0 690 676 ;\\r\\nC -1 ; WX 722 ; N Ccedilla ; B 49 -218 687 691 ;\\r\\nC -1 ; WX 278 ; N lcommaaccent ; B 16 -218 255 676 ;\\r\\nC -1 ; WX 416 ; N tcaron ; B 20 -12 425 815 ;\\r\\nC -1 ; WX 444 ; N eogonek ; B 25 -193 426 473 ;\\r\\nC -1 ; WX 722 ; N Uogonek ; B 16 -193 701 676 ;\\r\\nC -1 ; WX 722 ; N Aacute ; B 9 0 689 923 ;\\r\\nC -1 ; WX 722 ; N Adieresis ; B 9 0 689 877 ;\\r\\nC -1 ; WX 444 ; N egrave ; B 25 -14 426 713 ;\\r\\nC -1 ; WX 444 ; N zacute ; B 21 0 420 713 ;\\r\\nC -1 ; WX 278 ; N iogonek ; B 16 -193 274 691 ;\\r\\nC -1 ; WX 778 ; N Oacute ; B 35 -19 743 923 ;\\r\\nC -1 ; WX 500 ; N oacute ; B 25 -14 476 713 ;\\r\\nC -1 ; WX 500 ; N amacron ; B 25 -14 488 637 ;\\r\\nC -1 ; WX 389 ; N sacute ; B 25 -14 361 713 ;\\r\\nC -1 ; WX 278 ; N idieresis ; B -37 0 300 667 ;\\r\\nC -1 ; WX 778 ; N Ocircumflex ; B 35 -19 743 914 ;\\r\\nC -1 ; WX 722 ; N Ugrave ; B 16 -19 701 923 ;\\r\\nC -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;\\r\\nC -1 ; WX 556 ; N thorn ; B 19 -205 524 676 ;\\r\\nC -1 ; WX 300 ; N twosuperior ; B 0 275 300 688 ;\\r\\nC -1 ; WX 778 ; N Odieresis ; B 35 -19 743 877 ;\\r\\nC -1 ; WX 556 ; N mu ; B 33 -206 536 461 ;\\r\\nC -1 ; WX 278 ; N igrave ; B -27 0 255 713 ;\\r\\nC -1 ; WX 500 ; N ohungarumlaut ; B 25 -14 529 713 ;\\r\\nC -1 ; WX 667 ; N Eogonek ; B 16 -193 644 676 ;\\r\\nC -1 ; WX 556 ; N dcroat ; B 25 -14 534 676 ;\\r\\nC -1 ; WX 750 ; N threequarters ; B 23 -12 733 688 ;\\r\\nC -1 ; WX 556 ; N Scedilla ; B 35 -218 513 692 ;\\r\\nC -1 ; WX 394 ; N lcaron ; B 16 0 412 682 ;\\r\\nC -1 ; WX 778 ; N Kcommaaccent ; B 30 -218 769 676 ;\\r\\nC -1 ; WX 667 ; N Lacute ; B 19 0 638 923 ;\\r\\nC -1 ; WX 1000 ; N trademark ; B 24 271 977 676 ;\\r\\nC -1 ; WX 444 ; N edotaccent ; B 25 -14 426 691 ;\\r\\nC -1 ; WX 389 ; N Igrave ; B 20 0 370 923 ;\\r\\nC -1 ; WX 389 ; N Imacron ; B 20 0 370 847 ;\\r\\nC -1 ; WX 667 ; N Lcaron ; B 19 0 652 682 ;\\r\\nC -1 ; WX 750 ; N onehalf ; B -7 -12 775 688 ;\\r\\nC -1 ; WX 549 ; N lessequal ; B 29 0 526 704 ;\\r\\nC -1 ; WX 500 ; N ocircumflex ; B 25 -14 476 704 ;\\r\\nC -1 ; WX 556 ; N ntilde ; B 21 0 539 674 ;\\r\\nC -1 ; WX 722 ; N Uhungarumlaut ; B 16 -19 701 923 ;\\r\\nC -1 ; WX 667 ; N Eacute ; B 16 0 641 923 ;\\r\\nC -1 ; WX 444 ; N emacron ; B 25 -14 426 637 ;\\r\\nC -1 ; WX 500 ; N gbreve ; B 28 -206 483 691 ;\\r\\nC -1 ; WX 750 ; N onequarter ; B 28 -12 743 688 ;\\r\\nC -1 ; WX 556 ; N Scaron ; B 35 -19 513 914 ;\\r\\nC -1 ; WX 556 ; N Scommaaccent ; B 35 -218 513 692 ;\\r\\nC -1 ; WX 778 ; N Ohungarumlaut ; B 35 -19 743 923 ;\\r\\nC -1 ; WX 400 ; N degree ; B 57 402 343 688 ;\\r\\nC -1 ; WX 500 ; N ograve ; B 25 -14 476 713 ;\\r\\nC -1 ; WX 722 ; N Ccaron ; B 49 -19 687 914 ;\\r\\nC -1 ; WX 556 ; N ugrave ; B 16 -14 537 713 ;\\r\\nC -1 ; WX 549 ; N radical ; B 10 -46 512 850 ;\\r\\nC -1 ; WX 722 ; N Dcaron ; B 14 0 690 914 ;\\r\\nC -1 ; WX 444 ; N rcommaaccent ; B 29 -218 434 473 ;\\r\\nC -1 ; WX 722 ; N Ntilde ; B 16 -18 701 884 ;\\r\\nC -1 ; WX 500 ; N otilde ; B 25 -14 476 674 ;\\r\\nC -1 ; WX 722 ; N Rcommaaccent ; B 26 -218 715 676 ;\\r\\nC -1 ; WX 667 ; N Lcommaaccent ; B 19 -218 638 676 ;\\r\\nC -1 ; WX 722 ; N Atilde ; B 9 0 689 884 ;\\r\\nC -1 ; WX 722 ; N Aogonek ; B 9 -193 699 690 ;\\r\\nC -1 ; WX 722 ; N Aring ; B 9 0 689 935 ;\\r\\nC -1 ; WX 778 ; N Otilde ; B 35 -19 743 884 ;\\r\\nC -1 ; WX 444 ; N zdotaccent ; B 21 0 420 691 ;\\r\\nC -1 ; WX 667 ; N Ecaron ; B 16 0 641 914 ;\\r\\nC -1 ; WX 389 ; N Iogonek ; B 20 -193 370 676 ;\\r\\nC -1 ; WX 556 ; N kcommaaccent ; B 22 -218 543 676 ;\\r\\nC -1 ; WX 570 ; N minus ; B 33 209 537 297 ;\\r\\nC -1 ; WX 389 ; N Icircumflex ; B 20 0 370 914 ;\\r\\nC -1 ; WX 556 ; N ncaron ; B 21 0 539 704 ;\\r\\nC -1 ; WX 333 ; N tcommaaccent ; B 20 -218 332 630 ;\\r\\nC -1 ; WX 570 ; N logicalnot ; B 33 108 537 399 ;\\r\\nC -1 ; WX 500 ; N odieresis ; B 25 -14 476 667 ;\\r\\nC -1 ; WX 556 ; N udieresis ; B 16 -14 537 667 ;\\r\\nC -1 ; WX 549 ; N notequal ; B 15 -49 540 570 ;\\r\\nC -1 ; WX 500 ; N gcommaaccent ; B 28 -206 483 829 ;\\r\\nC -1 ; WX 500 ; N eth ; B 25 -14 476 691 ;\\r\\nC -1 ; WX 444 ; N zcaron ; B 21 0 420 704 ;\\r\\nC -1 ; WX 556 ; N ncommaaccent ; B 21 -218 539 473 ;\\r\\nC -1 ; WX 300 ; N onesuperior ; B 28 275 273 688 ;\\r\\nC -1 ; WX 278 ; N imacron ; B -8 0 272 637 ;\\r\\nC -1 ; WX 500 ; N Euro ; B 0 0 0 0 ;\\r\\nEndCharMetrics\\r\\nStartKernData\\r\\nStartKernPairs 2242\\r\\nKPX A C -55\\r\\nKPX A Cacute -55\\r\\nKPX A Ccaron -55\\r\\nKPX A Ccedilla -55\\r\\nKPX A G -55\\r\\nKPX A Gbreve -55\\r\\nKPX A Gcommaaccent -55\\r\\nKPX A O -45\\r\\nKPX A Oacute -45\\r\\nKPX A Ocircumflex -45\\r\\nKPX A Odieresis -45\\r\\nKPX A Ograve -45\\r\\nKPX A Ohungarumlaut -45\\r\\nKPX A Omacron -45\\r\\nKPX A Oslash -45\\r\\nKPX A Otilde -45\\r\\nKPX A Q -45\\r\\nKPX A T -95\\r\\nKPX A Tcaron -95\\r\\nKPX A Tcommaaccent -95\\r\\nKPX A U -50\\r\\nKPX A Uacute -50\\r\\nKPX A Ucircumflex -50\\r\\nKPX A Udieresis -50\\r\\nKPX A Ugrave -50\\r\\nKPX A Uhungarumlaut -50\\r\\nKPX A Umacron -50\\r\\nKPX A Uogonek -50\\r\\nKPX A Uring -50\\r\\nKPX A V -145\\r\\nKPX A W -130\\r\\nKPX A Y -100\\r\\nKPX A Yacute -100\\r\\nKPX A Ydieresis -100\\r\\nKPX A p -25\\r\\nKPX A quoteright -74\\r\\nKPX A u -50\\r\\nKPX A uacute -50\\r\\nKPX A ucircumflex -50\\r\\nKPX A udieresis -50\\r\\nKPX A ugrave -50\\r\\nKPX A uhungarumlaut -50\\r\\nKPX A umacron -50\\r\\nKPX A uogonek -50\\r\\nKPX A uring -50\\r\\nKPX A v -100\\r\\nKPX A w -90\\r\\nKPX A y -74\\r\\nKPX A yacute -74\\r\\nKPX A ydieresis -74\\r\\nKPX Aacute C -55\\r\\nKPX Aacute Cacute -55\\r\\nKPX Aacute Ccaron -55\\r\\nKPX Aacute Ccedilla -55\\r\\nKPX Aacute G -55\\r\\nKPX Aacute Gbreve -55\\r\\nKPX Aacute Gcommaaccent -55\\r\\nKPX Aacute O -45\\r\\nKPX Aacute Oacute -45\\r\\nKPX Aacute Ocircumflex -45\\r\\nKPX Aacute Odieresis -45\\r\\nKPX Aacute Ograve -45\\r\\nKPX Aacute Ohungarumlaut -45\\r\\nKPX Aacute Omacron -45\\r\\nKPX Aacute Oslash -45\\r\\nKPX Aacute Otilde -45\\r\\nKPX Aacute Q -45\\r\\nKPX Aacute T -95\\r\\nKPX Aacute Tcaron -95\\r\\nKPX Aacute Tcommaaccent -95\\r\\nKPX Aacute U -50\\r\\nKPX Aacute Uacute -50\\r\\nKPX Aacute Ucircumflex -50\\r\\nKPX Aacute Udieresis -50\\r\\nKPX Aacute Ugrave -50\\r\\nKPX Aacute Uhungarumlaut -50\\r\\nKPX Aacute Umacron -50\\r\\nKPX Aacute Uogonek -50\\r\\nKPX Aacute Uring -50\\r\\nKPX Aacute V -145\\r\\nKPX Aacute W -130\\r\\nKPX Aacute Y -100\\r\\nKPX Aacute Yacute -100\\r\\nKPX Aacute Ydieresis -100\\r\\nKPX Aacute p -25\\r\\nKPX Aacute quoteright -74\\r\\nKPX Aacute u -50\\r\\nKPX Aacute uacute -50\\r\\nKPX Aacute ucircumflex -50\\r\\nKPX Aacute udieresis -50\\r\\nKPX Aacute ugrave -50\\r\\nKPX Aacute uhungarumlaut -50\\r\\nKPX Aacute umacron -50\\r\\nKPX Aacute uogonek -50\\r\\nKPX Aacute uring -50\\r\\nKPX Aacute v -100\\r\\nKPX Aacute w -90\\r\\nKPX Aacute y -74\\r\\nKPX Aacute yacute -74\\r\\nKPX Aacute ydieresis -74\\r\\nKPX Abreve C -55\\r\\nKPX Abreve Cacute -55\\r\\nKPX Abreve Ccaron -55\\r\\nKPX Abreve Ccedilla -55\\r\\nKPX Abreve G -55\\r\\nKPX Abreve Gbreve -55\\r\\nKPX Abreve Gcommaaccent -55\\r\\nKPX Abreve O -45\\r\\nKPX Abreve Oacute -45\\r\\nKPX Abreve Ocircumflex -45\\r\\nKPX Abreve Odieresis -45\\r\\nKPX Abreve Ograve -45\\r\\nKPX Abreve Ohungarumlaut -45\\r\\nKPX Abreve Omacron -45\\r\\nKPX Abreve Oslash -45\\r\\nKPX Abreve Otilde -45\\r\\nKPX Abreve Q -45\\r\\nKPX Abreve T -95\\r\\nKPX Abreve Tcaron -95\\r\\nKPX Abreve Tcommaaccent -95\\r\\nKPX Abreve U -50\\r\\nKPX Abreve Uacute -50\\r\\nKPX Abreve Ucircumflex -50\\r\\nKPX Abreve Udieresis -50\\r\\nKPX Abreve Ugrave -50\\r\\nKPX Abreve Uhungarumlaut -50\\r\\nKPX Abreve Umacron -50\\r\\nKPX Abreve Uogonek -50\\r\\nKPX Abreve Uring -50\\r\\nKPX Abreve V -145\\r\\nKPX Abreve W -130\\r\\nKPX Abreve Y -100\\r\\nKPX Abreve Yacute -100\\r\\nKPX Abreve Ydieresis -100\\r\\nKPX Abreve p -25\\r\\nKPX Abreve quoteright -74\\r\\nKPX Abreve u -50\\r\\nKPX Abreve uacute -50\\r\\nKPX Abreve ucircumflex -50\\r\\nKPX Abreve udieresis -50\\r\\nKPX Abreve ugrave -50\\r\\nKPX Abreve uhungarumlaut -50\\r\\nKPX Abreve umacron -50\\r\\nKPX Abreve uogonek -50\\r\\nKPX Abreve uring -50\\r\\nKPX Abreve v -100\\r\\nKPX Abreve w -90\\r\\nKPX Abreve y -74\\r\\nKPX Abreve yacute -74\\r\\nKPX Abreve ydieresis -74\\r\\nKPX Acircumflex C -55\\r\\nKPX Acircumflex Cacute -55\\r\\nKPX Acircumflex Ccaron -55\\r\\nKPX Acircumflex Ccedilla -55\\r\\nKPX Acircumflex G -55\\r\\nKPX Acircumflex Gbreve -55\\r\\nKPX Acircumflex Gcommaaccent -55\\r\\nKPX Acircumflex O -45\\r\\nKPX Acircumflex Oacute -45\\r\\nKPX Acircumflex Ocircumflex -45\\r\\nKPX Acircumflex Odieresis -45\\r\\nKPX Acircumflex Ograve -45\\r\\nKPX Acircumflex Ohungarumlaut -45\\r\\nKPX Acircumflex Omacron -45\\r\\nKPX Acircumflex Oslash -45\\r\\nKPX Acircumflex Otilde -45\\r\\nKPX Acircumflex Q -45\\r\\nKPX Acircumflex T -95\\r\\nKPX Acircumflex Tcaron -95\\r\\nKPX Acircumflex Tcommaaccent -95\\r\\nKPX Acircumflex U -50\\r\\nKPX Acircumflex Uacute -50\\r\\nKPX Acircumflex Ucircumflex -50\\r\\nKPX Acircumflex Udieresis -50\\r\\nKPX Acircumflex Ugrave -50\\r\\nKPX Acircumflex Uhungarumlaut -50\\r\\nKPX Acircumflex Umacron -50\\r\\nKPX Acircumflex Uogonek -50\\r\\nKPX Acircumflex Uring -50\\r\\nKPX Acircumflex V -145\\r\\nKPX Acircumflex W -130\\r\\nKPX Acircumflex Y -100\\r\\nKPX Acircumflex Yacute -100\\r\\nKPX Acircumflex Ydieresis -100\\r\\nKPX Acircumflex p -25\\r\\nKPX Acircumflex quoteright -74\\r\\nKPX Acircumflex u -50\\r\\nKPX Acircumflex uacute -50\\r\\nKPX Acircumflex ucircumflex -50\\r\\nKPX Acircumflex udieresis -50\\r\\nKPX Acircumflex ugrave -50\\r\\nKPX Acircumflex uhungarumlaut -50\\r\\nKPX Acircumflex umacron -50\\r\\nKPX Acircumflex uogonek -50\\r\\nKPX Acircumflex uring -50\\r\\nKPX Acircumflex v -100\\r\\nKPX Acircumflex w -90\\r\\nKPX Acircumflex y -74\\r\\nKPX Acircumflex yacute -74\\r\\nKPX Acircumflex ydieresis -74\\r\\nKPX Adieresis C -55\\r\\nKPX Adieresis Cacute -55\\r\\nKPX Adieresis Ccaron -55\\r\\nKPX Adieresis Ccedilla -55\\r\\nKPX Adieresis G -55\\r\\nKPX Adieresis Gbreve -55\\r\\nKPX Adieresis Gcommaaccent -55\\r\\nKPX Adieresis O -45\\r\\nKPX Adieresis Oacute -45\\r\\nKPX Adieresis Ocircumflex -45\\r\\nKPX Adieresis Odieresis -45\\r\\nKPX Adieresis Ograve -45\\r\\nKPX Adieresis Ohungarumlaut -45\\r\\nKPX Adieresis Omacron -45\\r\\nKPX Adieresis Oslash -45\\r\\nKPX Adieresis Otilde -45\\r\\nKPX Adieresis Q -45\\r\\nKPX Adieresis T -95\\r\\nKPX Adieresis Tcaron -95\\r\\nKPX Adieresis Tcommaaccent -95\\r\\nKPX Adieresis U -50\\r\\nKPX Adieresis Uacute -50\\r\\nKPX Adieresis Ucircumflex -50\\r\\nKPX Adieresis Udieresis -50\\r\\nKPX Adieresis Ugrave -50\\r\\nKPX Adieresis Uhungarumlaut -50\\r\\nKPX Adieresis Umacron -50\\r\\nKPX Adieresis Uogonek -50\\r\\nKPX Adieresis Uring -50\\r\\nKPX Adieresis V -145\\r\\nKPX Adieresis W -130\\r\\nKPX Adieresis Y -100\\r\\nKPX Adieresis Yacute -100\\r\\nKPX Adieresis Ydieresis -100\\r\\nKPX Adieresis p -25\\r\\nKPX Adieresis quoteright -74\\r\\nKPX Adieresis u -50\\r\\nKPX Adieresis uacute -50\\r\\nKPX Adieresis ucircumflex -50\\r\\nKPX Adieresis udieresis -50\\r\\nKPX Adieresis ugrave -50\\r\\nKPX Adieresis uhungarumlaut -50\\r\\nKPX Adieresis umacron -50\\r\\nKPX Adieresis uogonek -50\\r\\nKPX Adieresis uring -50\\r\\nKPX Adieresis v -100\\r\\nKPX Adieresis w -90\\r\\nKPX Adieresis y -74\\r\\nKPX Adieresis yacute -74\\r\\nKPX Adieresis ydieresis -74\\r\\nKPX Agrave C -55\\r\\nKPX Agrave Cacute -55\\r\\nKPX Agrave Ccaron -55\\r\\nKPX Agrave Ccedilla -55\\r\\nKPX Agrave G -55\\r\\nKPX Agrave Gbreve -55\\r\\nKPX Agrave Gcommaaccent -55\\r\\nKPX Agrave O -45\\r\\nKPX Agrave Oacute -45\\r\\nKPX Agrave Ocircumflex -45\\r\\nKPX Agrave Odieresis -45\\r\\nKPX Agrave Ograve -45\\r\\nKPX Agrave Ohungarumlaut -45\\r\\nKPX Agrave Omacron -45\\r\\nKPX Agrave Oslash -45\\r\\nKPX Agrave Otilde -45\\r\\nKPX Agrave Q -45\\r\\nKPX Agrave T -95\\r\\nKPX Agrave Tcaron -95\\r\\nKPX Agrave Tcommaaccent -95\\r\\nKPX Agrave U -50\\r\\nKPX Agrave Uacute -50\\r\\nKPX Agrave Ucircumflex -50\\r\\nKPX Agrave Udieresis -50\\r\\nKPX Agrave Ugrave -50\\r\\nKPX Agrave Uhungarumlaut -50\\r\\nKPX Agrave Umacron -50\\r\\nKPX Agrave Uogonek -50\\r\\nKPX Agrave Uring -50\\r\\nKPX Agrave V -145\\r\\nKPX Agrave W -130\\r\\nKPX Agrave Y -100\\r\\nKPX Agrave Yacute -100\\r\\nKPX Agrave Ydieresis -100\\r\\nKPX Agrave p -25\\r\\nKPX Agrave quoteright -74\\r\\nKPX Agrave u -50\\r\\nKPX Agrave uacute -50\\r\\nKPX Agrave ucircumflex -50\\r\\nKPX Agrave udieresis -50\\r\\nKPX Agrave ugrave -50\\r\\nKPX Agrave uhungarumlaut -50\\r\\nKPX Agrave umacron -50\\r\\nKPX Agrave uogonek -50\\r\\nKPX Agrave uring -50\\r\\nKPX Agrave v -100\\r\\nKPX Agrave w -90\\r\\nKPX Agrave y -74\\r\\nKPX Agrave yacute -74\\r\\nKPX Agrave ydieresis -74\\r\\nKPX Amacron C -55\\r\\nKPX Amacron Cacute -55\\r\\nKPX Amacron Ccaron -55\\r\\nKPX Amacron Ccedilla -55\\r\\nKPX Amacron G -55\\r\\nKPX Amacron Gbreve -55\\r\\nKPX Amacron Gcommaaccent -55\\r\\nKPX Amacron O -45\\r\\nKPX Amacron Oacute -45\\r\\nKPX Amacron Ocircumflex -45\\r\\nKPX Amacron Odieresis -45\\r\\nKPX Amacron Ograve -45\\r\\nKPX Amacron Ohungarumlaut -45\\r\\nKPX Amacron Omacron -45\\r\\nKPX Amacron Oslash -45\\r\\nKPX Amacron Otilde -45\\r\\nKPX Amacron Q -45\\r\\nKPX Amacron T -95\\r\\nKPX Amacron Tcaron -95\\r\\nKPX Amacron Tcommaaccent -95\\r\\nKPX Amacron U -50\\r\\nKPX Amacron Uacute -50\\r\\nKPX Amacron Ucircumflex -50\\r\\nKPX Amacron Udieresis -50\\r\\nKPX Amacron Ugrave -50\\r\\nKPX Amacron Uhungarumlaut -50\\r\\nKPX Amacron Umacron -50\\r\\nKPX Amacron Uogonek -50\\r\\nKPX Amacron Uring -50\\r\\nKPX Amacron V -145\\r\\nKPX Amacron W -130\\r\\nKPX Amacron Y -100\\r\\nKPX Amacron Yacute -100\\r\\nKPX Amacron Ydieresis -100\\r\\nKPX Amacron p -25\\r\\nKPX Amacron quoteright -74\\r\\nKPX Amacron u -50\\r\\nKPX Amacron uacute -50\\r\\nKPX Amacron ucircumflex -50\\r\\nKPX Amacron udieresis -50\\r\\nKPX Amacron ugrave -50\\r\\nKPX Amacron uhungarumlaut -50\\r\\nKPX Amacron umacron -50\\r\\nKPX Amacron uogonek -50\\r\\nKPX Amacron uring -50\\r\\nKPX Amacron v -100\\r\\nKPX Amacron w -90\\r\\nKPX Amacron y -74\\r\\nKPX Amacron yacute -74\\r\\nKPX Amacron ydieresis -74\\r\\nKPX Aogonek C -55\\r\\nKPX Aogonek Cacute -55\\r\\nKPX Aogonek Ccaron -55\\r\\nKPX Aogonek Ccedilla -55\\r\\nKPX Aogonek G -55\\r\\nKPX Aogonek Gbreve -55\\r\\nKPX Aogonek Gcommaaccent -55\\r\\nKPX Aogonek O -45\\r\\nKPX Aogonek Oacute -45\\r\\nKPX Aogonek Ocircumflex -45\\r\\nKPX Aogonek Odieresis -45\\r\\nKPX Aogonek Ograve -45\\r\\nKPX Aogonek Ohungarumlaut -45\\r\\nKPX Aogonek Omacron -45\\r\\nKPX Aogonek Oslash -45\\r\\nKPX Aogonek Otilde -45\\r\\nKPX Aogonek Q -45\\r\\nKPX Aogonek T -95\\r\\nKPX Aogonek Tcaron -95\\r\\nKPX Aogonek Tcommaaccent -95\\r\\nKPX Aogonek U -50\\r\\nKPX Aogonek Uacute -50\\r\\nKPX Aogonek Ucircumflex -50\\r\\nKPX Aogonek Udieresis -50\\r\\nKPX Aogonek Ugrave -50\\r\\nKPX Aogonek Uhungarumlaut -50\\r\\nKPX Aogonek Umacron -50\\r\\nKPX Aogonek Uogonek -50\\r\\nKPX Aogonek Uring -50\\r\\nKPX Aogonek V -145\\r\\nKPX Aogonek W -130\\r\\nKPX Aogonek Y -100\\r\\nKPX Aogonek Yacute -100\\r\\nKPX Aogonek Ydieresis -100\\r\\nKPX Aogonek p -25\\r\\nKPX Aogonek quoteright -74\\r\\nKPX Aogonek u -50\\r\\nKPX Aogonek uacute -50\\r\\nKPX Aogonek ucircumflex -50\\r\\nKPX Aogonek udieresis -50\\r\\nKPX Aogonek ugrave -50\\r\\nKPX Aogonek uhungarumlaut -50\\r\\nKPX Aogonek umacron -50\\r\\nKPX Aogonek uogonek -50\\r\\nKPX Aogonek uring -50\\r\\nKPX Aogonek v -100\\r\\nKPX Aogonek w -90\\r\\nKPX Aogonek y -34\\r\\nKPX Aogonek yacute -34\\r\\nKPX Aogonek ydieresis -34\\r\\nKPX Aring C -55\\r\\nKPX Aring Cacute -55\\r\\nKPX Aring Ccaron -55\\r\\nKPX Aring Ccedilla -55\\r\\nKPX Aring G -55\\r\\nKPX Aring Gbreve -55\\r\\nKPX Aring Gcommaaccent -55\\r\\nKPX Aring O -45\\r\\nKPX Aring Oacute -45\\r\\nKPX Aring Ocircumflex -45\\r\\nKPX Aring Odieresis -45\\r\\nKPX Aring Ograve -45\\r\\nKPX Aring Ohungarumlaut -45\\r\\nKPX Aring Omacron -45\\r\\nKPX Aring Oslash -45\\r\\nKPX Aring Otilde -45\\r\\nKPX Aring Q -45\\r\\nKPX Aring T -95\\r\\nKPX Aring Tcaron -95\\r\\nKPX Aring Tcommaaccent -95\\r\\nKPX Aring U -50\\r\\nKPX Aring Uacute -50\\r\\nKPX Aring Ucircumflex -50\\r\\nKPX Aring Udieresis -50\\r\\nKPX Aring Ugrave -50\\r\\nKPX Aring Uhungarumlaut -50\\r\\nKPX Aring Umacron -50\\r\\nKPX Aring Uogonek -50\\r\\nKPX Aring Uring -50\\r\\nKPX Aring V -145\\r\\nKPX Aring W -130\\r\\nKPX Aring Y -100\\r\\nKPX Aring Yacute -100\\r\\nKPX Aring Ydieresis -100\\r\\nKPX Aring p -25\\r\\nKPX Aring quoteright -74\\r\\nKPX Aring u -50\\r\\nKPX Aring uacute -50\\r\\nKPX Aring ucircumflex -50\\r\\nKPX Aring udieresis -50\\r\\nKPX Aring ugrave -50\\r\\nKPX Aring uhungarumlaut -50\\r\\nKPX Aring umacron -50\\r\\nKPX Aring uogonek -50\\r\\nKPX Aring uring -50\\r\\nKPX Aring v -100\\r\\nKPX Aring w -90\\r\\nKPX Aring y -74\\r\\nKPX Aring yacute -74\\r\\nKPX Aring ydieresis -74\\r\\nKPX Atilde C -55\\r\\nKPX Atilde Cacute -55\\r\\nKPX Atilde Ccaron -55\\r\\nKPX Atilde Ccedilla -55\\r\\nKPX Atilde G -55\\r\\nKPX Atilde Gbreve -55\\r\\nKPX Atilde Gcommaaccent -55\\r\\nKPX Atilde O -45\\r\\nKPX Atilde Oacute -45\\r\\nKPX Atilde Ocircumflex -45\\r\\nKPX Atilde Odieresis -45\\r\\nKPX Atilde Ograve -45\\r\\nKPX Atilde Ohungarumlaut -45\\r\\nKPX Atilde Omacron -45\\r\\nKPX Atilde Oslash -45\\r\\nKPX Atilde Otilde -45\\r\\nKPX Atilde Q -45\\r\\nKPX Atilde T -95\\r\\nKPX Atilde Tcaron -95\\r\\nKPX Atilde Tcommaaccent -95\\r\\nKPX Atilde U -50\\r\\nKPX Atilde Uacute -50\\r\\nKPX Atilde Ucircumflex -50\\r\\nKPX Atilde Udieresis -50\\r\\nKPX Atilde Ugrave -50\\r\\nKPX Atilde Uhungarumlaut -50\\r\\nKPX Atilde Umacron -50\\r\\nKPX Atilde Uogonek -50\\r\\nKPX Atilde Uring -50\\r\\nKPX Atilde V -145\\r\\nKPX Atilde W -130\\r\\nKPX Atilde Y -100\\r\\nKPX Atilde Yacute -100\\r\\nKPX Atilde Ydieresis -100\\r\\nKPX Atilde p -25\\r\\nKPX Atilde quoteright -74\\r\\nKPX Atilde u -50\\r\\nKPX Atilde uacute -50\\r\\nKPX Atilde ucircumflex -50\\r\\nKPX Atilde udieresis -50\\r\\nKPX Atilde ugrave -50\\r\\nKPX Atilde uhungarumlaut -50\\r\\nKPX Atilde umacron -50\\r\\nKPX Atilde uogonek -50\\r\\nKPX Atilde uring -50\\r\\nKPX Atilde v -100\\r\\nKPX Atilde w -90\\r\\nKPX Atilde y -74\\r\\nKPX Atilde yacute -74\\r\\nKPX Atilde ydieresis -74\\r\\nKPX B A -30\\r\\nKPX B Aacute -30\\r\\nKPX B Abreve -30\\r\\nKPX B Acircumflex -30\\r\\nKPX B Adieresis -30\\r\\nKPX B Agrave -30\\r\\nKPX B Amacron -30\\r\\nKPX B Aogonek -30\\r\\nKPX B Aring -30\\r\\nKPX B Atilde -30\\r\\nKPX B U -10\\r\\nKPX B Uacute -10\\r\\nKPX B Ucircumflex -10\\r\\nKPX B Udieresis -10\\r\\nKPX B Ugrave -10\\r\\nKPX B Uhungarumlaut -10\\r\\nKPX B Umacron -10\\r\\nKPX B Uogonek -10\\r\\nKPX B Uring -10\\r\\nKPX D A -35\\r\\nKPX D Aacute -35\\r\\nKPX D Abreve -35\\r\\nKPX D Acircumflex -35\\r\\nKPX D Adieresis -35\\r\\nKPX D Agrave -35\\r\\nKPX D Amacron -35\\r\\nKPX D Aogonek -35\\r\\nKPX D Aring -35\\r\\nKPX D Atilde -35\\r\\nKPX D V -40\\r\\nKPX D W -40\\r\\nKPX D Y -40\\r\\nKPX D Yacute -40\\r\\nKPX D Ydieresis -40\\r\\nKPX D period -20\\r\\nKPX Dcaron A -35\\r\\nKPX Dcaron Aacute -35\\r\\nKPX Dcaron Abreve -35\\r\\nKPX Dcaron Acircumflex -35\\r\\nKPX Dcaron Adieresis -35\\r\\nKPX Dcaron Agrave -35\\r\\nKPX Dcaron Amacron -35\\r\\nKPX Dcaron Aogonek -35\\r\\nKPX Dcaron Aring -35\\r\\nKPX Dcaron Atilde -35\\r\\nKPX Dcaron V -40\\r\\nKPX Dcaron W -40\\r\\nKPX Dcaron Y -40\\r\\nKPX Dcaron Yacute -40\\r\\nKPX Dcaron Ydieresis -40\\r\\nKPX Dcaron period -20\\r\\nKPX Dcroat A -35\\r\\nKPX Dcroat Aacute -35\\r\\nKPX Dcroat Abreve -35\\r\\nKPX Dcroat Acircumflex -35\\r\\nKPX Dcroat Adieresis -35\\r\\nKPX Dcroat Agrave -35\\r\\nKPX Dcroat Amacron -35\\r\\nKPX Dcroat Aogonek -35\\r\\nKPX Dcroat Aring -35\\r\\nKPX Dcroat Atilde -35\\r\\nKPX Dcroat V -40\\r\\nKPX Dcroat W -40\\r\\nKPX Dcroat Y -40\\r\\nKPX Dcroat Yacute -40\\r\\nKPX Dcroat Ydieresis -40\\r\\nKPX Dcroat period -20\\r\\nKPX F A -90\\r\\nKPX F Aacute -90\\r\\nKPX F Abreve -90\\r\\nKPX F Acircumflex -90\\r\\nKPX F Adieresis -90\\r\\nKPX F Agrave -90\\r\\nKPX F Amacron -90\\r\\nKPX F Aogonek -90\\r\\nKPX F Aring -90\\r\\nKPX F Atilde -90\\r\\nKPX F a -25\\r\\nKPX F aacute -25\\r\\nKPX F abreve -25\\r\\nKPX F acircumflex -25\\r\\nKPX F adieresis -25\\r\\nKPX F agrave -25\\r\\nKPX F amacron -25\\r\\nKPX F aogonek -25\\r\\nKPX F aring -25\\r\\nKPX F atilde -25\\r\\nKPX F comma -92\\r\\nKPX F e -25\\r\\nKPX F eacute -25\\r\\nKPX F ecaron -25\\r\\nKPX F ecircumflex -25\\r\\nKPX F edieresis -25\\r\\nKPX F edotaccent -25\\r\\nKPX F egrave -25\\r\\nKPX F emacron -25\\r\\nKPX F eogonek -25\\r\\nKPX F o -25\\r\\nKPX F oacute -25\\r\\nKPX F ocircumflex -25\\r\\nKPX F odieresis -25\\r\\nKPX F ograve -25\\r\\nKPX F ohungarumlaut -25\\r\\nKPX F omacron -25\\r\\nKPX F oslash -25\\r\\nKPX F otilde -25\\r\\nKPX F period -110\\r\\nKPX J A -30\\r\\nKPX J Aacute -30\\r\\nKPX J Abreve -30\\r\\nKPX J Acircumflex -30\\r\\nKPX J Adieresis -30\\r\\nKPX J Agrave -30\\r\\nKPX J Amacron -30\\r\\nKPX J Aogonek -30\\r\\nKPX J Aring -30\\r\\nKPX J Atilde -30\\r\\nKPX J a -15\\r\\nKPX J aacute -15\\r\\nKPX J abreve -15\\r\\nKPX J acircumflex -15\\r\\nKPX J adieresis -15\\r\\nKPX J agrave -15\\r\\nKPX J amacron -15\\r\\nKPX J aogonek -15\\r\\nKPX J aring -15\\r\\nKPX J atilde -15\\r\\nKPX J e -15\\r\\nKPX J eacute -15\\r\\nKPX J ecaron -15\\r\\nKPX J ecircumflex -15\\r\\nKPX J edieresis -15\\r\\nKPX J edotaccent -15\\r\\nKPX J egrave -15\\r\\nKPX J emacron -15\\r\\nKPX J eogonek -15\\r\\nKPX J o -15\\r\\nKPX J oacute -15\\r\\nKPX J ocircumflex -15\\r\\nKPX J odieresis -15\\r\\nKPX J ograve -15\\r\\nKPX J ohungarumlaut -15\\r\\nKPX J omacron -15\\r\\nKPX J oslash -15\\r\\nKPX J otilde -15\\r\\nKPX J period -20\\r\\nKPX J u -15\\r\\nKPX J uacute -15\\r\\nKPX J ucircumflex -15\\r\\nKPX J udieresis -15\\r\\nKPX J ugrave -15\\r\\nKPX J uhungarumlaut -15\\r\\nKPX J umacron -15\\r\\nKPX J uogonek -15\\r\\nKPX J uring -15\\r\\nKPX K O -30\\r\\nKPX K Oacute -30\\r\\nKPX K Ocircumflex -30\\r\\nKPX K Odieresis -30\\r\\nKPX K Ograve -30\\r\\nKPX K Ohungarumlaut -30\\r\\nKPX K Omacron -30\\r\\nKPX K Oslash -30\\r\\nKPX K Otilde -30\\r\\nKPX K e -25\\r\\nKPX K eacute -25\\r\\nKPX K ecaron -25\\r\\nKPX K ecircumflex -25\\r\\nKPX K edieresis -25\\r\\nKPX K edotaccent -25\\r\\nKPX K egrave -25\\r\\nKPX K emacron -25\\r\\nKPX K eogonek -25\\r\\nKPX K o -25\\r\\nKPX K oacute -25\\r\\nKPX K ocircumflex -25\\r\\nKPX K odieresis -25\\r\\nKPX K ograve -25\\r\\nKPX K ohungarumlaut -25\\r\\nKPX K omacron -25\\r\\nKPX K oslash -25\\r\\nKPX K otilde -25\\r\\nKPX K u -15\\r\\nKPX K uacute -15\\r\\nKPX K ucircumflex -15\\r\\nKPX K udieresis -15\\r\\nKPX K ugrave -15\\r\\nKPX K uhungarumlaut -15\\r\\nKPX K umacron -15\\r\\nKPX K uogonek -15\\r\\nKPX K uring -15\\r\\nKPX K y -45\\r\\nKPX K yacute -45\\r\\nKPX K ydieresis -45\\r\\nKPX Kcommaaccent O -30\\r\\nKPX Kcommaaccent Oacute -30\\r\\nKPX Kcommaaccent Ocircumflex -30\\r\\nKPX Kcommaaccent Odieresis -30\\r\\nKPX Kcommaaccent Ograve -30\\r\\nKPX Kcommaaccent Ohungarumlaut -30\\r\\nKPX Kcommaaccent Omacron -30\\r\\nKPX Kcommaaccent Oslash -30\\r\\nKPX Kcommaaccent Otilde -30\\r\\nKPX Kcommaaccent e -25\\r\\nKPX Kcommaaccent eacute -25\\r\\nKPX Kcommaaccent ecaron -25\\r\\nKPX Kcommaaccent ecircumflex -25\\r\\nKPX Kcommaaccent edieresis -25\\r\\nKPX Kcommaaccent edotaccent -25\\r\\nKPX Kcommaaccent egrave -25\\r\\nKPX Kcommaaccent emacron -25\\r\\nKPX Kcommaaccent eogonek -25\\r\\nKPX Kcommaaccent o -25\\r\\nKPX Kcommaaccent oacute -25\\r\\nKPX Kcommaaccent ocircumflex -25\\r\\nKPX Kcommaaccent odieresis -25\\r\\nKPX Kcommaaccent ograve -25\\r\\nKPX Kcommaaccent ohungarumlaut -25\\r\\nKPX Kcommaaccent omacron -25\\r\\nKPX Kcommaaccent oslash -25\\r\\nKPX Kcommaaccent otilde -25\\r\\nKPX Kcommaaccent u -15\\r\\nKPX Kcommaaccent uacute -15\\r\\nKPX Kcommaaccent ucircumflex -15\\r\\nKPX Kcommaaccent udieresis -15\\r\\nKPX Kcommaaccent ugrave -15\\r\\nKPX Kcommaaccent uhungarumlaut -15\\r\\nKPX Kcommaaccent umacron -15\\r\\nKPX Kcommaaccent uogonek -15\\r\\nKPX Kcommaaccent uring -15\\r\\nKPX Kcommaaccent y -45\\r\\nKPX Kcommaaccent yacute -45\\r\\nKPX Kcommaaccent ydieresis -45\\r\\nKPX L T -92\\r\\nKPX L Tcaron -92\\r\\nKPX L Tcommaaccent -92\\r\\nKPX L V -92\\r\\nKPX L W -92\\r\\nKPX L Y -92\\r\\nKPX L Yacute -92\\r\\nKPX L Ydieresis -92\\r\\nKPX L quotedblright -20\\r\\nKPX L quoteright -110\\r\\nKPX L y -55\\r\\nKPX L yacute -55\\r\\nKPX L ydieresis -55\\r\\nKPX Lacute T -92\\r\\nKPX Lacute Tcaron -92\\r\\nKPX Lacute Tcommaaccent -92\\r\\nKPX Lacute V -92\\r\\nKPX Lacute W -92\\r\\nKPX Lacute Y -92\\r\\nKPX Lacute Yacute -92\\r\\nKPX Lacute Ydieresis -92\\r\\nKPX Lacute quotedblright -20\\r\\nKPX Lacute quoteright -110\\r\\nKPX Lacute y -55\\r\\nKPX Lacute yacute -55\\r\\nKPX Lacute ydieresis -55\\r\\nKPX Lcommaaccent T -92\\r\\nKPX Lcommaaccent Tcaron -92\\r\\nKPX Lcommaaccent Tcommaaccent -92\\r\\nKPX Lcommaaccent V -92\\r\\nKPX Lcommaaccent W -92\\r\\nKPX Lcommaaccent Y -92\\r\\nKPX Lcommaaccent Yacute -92\\r\\nKPX Lcommaaccent Ydieresis -92\\r\\nKPX Lcommaaccent quotedblright -20\\r\\nKPX Lcommaaccent quoteright -110\\r\\nKPX Lcommaaccent y -55\\r\\nKPX Lcommaaccent yacute -55\\r\\nKPX Lcommaaccent ydieresis -55\\r\\nKPX Lslash T -92\\r\\nKPX Lslash Tcaron -92\\r\\nKPX Lslash Tcommaaccent -92\\r\\nKPX Lslash V -92\\r\\nKPX Lslash W -92\\r\\nKPX Lslash Y -92\\r\\nKPX Lslash Yacute -92\\r\\nKPX Lslash Ydieresis -92\\r\\nKPX Lslash quotedblright -20\\r\\nKPX Lslash quoteright -110\\r\\nKPX Lslash y -55\\r\\nKPX Lslash yacute -55\\r\\nKPX Lslash ydieresis -55\\r\\nKPX N A -20\\r\\nKPX N Aacute -20\\r\\nKPX N Abreve -20\\r\\nKPX N Acircumflex -20\\r\\nKPX N Adieresis -20\\r\\nKPX N Agrave -20\\r\\nKPX N Amacron -20\\r\\nKPX N Aogonek -20\\r\\nKPX N Aring -20\\r\\nKPX N Atilde -20\\r\\nKPX Nacute A -20\\r\\nKPX Nacute Aacute -20\\r\\nKPX Nacute Abreve -20\\r\\nKPX Nacute Acircumflex -20\\r\\nKPX Nacute Adieresis -20\\r\\nKPX Nacute Agrave -20\\r\\nKPX Nacute Amacron -20\\r\\nKPX Nacute Aogonek -20\\r\\nKPX Nacute Aring -20\\r\\nKPX Nacute Atilde -20\\r\\nKPX Ncaron A -20\\r\\nKPX Ncaron Aacute -20\\r\\nKPX Ncaron Abreve -20\\r\\nKPX Ncaron Acircumflex -20\\r\\nKPX Ncaron Adieresis -20\\r\\nKPX Ncaron Agrave -20\\r\\nKPX Ncaron Amacron -20\\r\\nKPX Ncaron Aogonek -20\\r\\nKPX Ncaron Aring -20\\r\\nKPX Ncaron Atilde -20\\r\\nKPX Ncommaaccent A -20\\r\\nKPX Ncommaaccent Aacute -20\\r\\nKPX Ncommaaccent Abreve -20\\r\\nKPX Ncommaaccent Acircumflex -20\\r\\nKPX Ncommaaccent Adieresis -20\\r\\nKPX Ncommaaccent Agrave -20\\r\\nKPX Ncommaaccent Amacron -20\\r\\nKPX Ncommaaccent Aogonek -20\\r\\nKPX Ncommaaccent Aring -20\\r\\nKPX Ncommaaccent Atilde -20\\r\\nKPX Ntilde A -20\\r\\nKPX Ntilde Aacute -20\\r\\nKPX Ntilde Abreve -20\\r\\nKPX Ntilde Acircumflex -20\\r\\nKPX Ntilde Adieresis -20\\r\\nKPX Ntilde Agrave -20\\r\\nKPX Ntilde Amacron -20\\r\\nKPX Ntilde Aogonek -20\\r\\nKPX Ntilde Aring -20\\r\\nKPX Ntilde Atilde -20\\r\\nKPX O A -40\\r\\nKPX O Aacute -40\\r\\nKPX O Abreve -40\\r\\nKPX O Acircumflex -40\\r\\nKPX O Adieresis -40\\r\\nKPX O Agrave -40\\r\\nKPX O Amacron -40\\r\\nKPX O Aogonek -40\\r\\nKPX O Aring -40\\r\\nKPX O Atilde -40\\r\\nKPX O T -40\\r\\nKPX O Tcaron -40\\r\\nKPX O Tcommaaccent -40\\r\\nKPX O V -50\\r\\nKPX O W -50\\r\\nKPX O X -40\\r\\nKPX O Y -50\\r\\nKPX O Yacute -50\\r\\nKPX O Ydieresis -50\\r\\nKPX Oacute A -40\\r\\nKPX Oacute Aacute -40\\r\\nKPX Oacute Abreve -40\\r\\nKPX Oacute Acircumflex -40\\r\\nKPX Oacute Adieresis -40\\r\\nKPX Oacute Agrave -40\\r\\nKPX Oacute Amacron -40\\r\\nKPX Oacute Aogonek -40\\r\\nKPX Oacute Aring -40\\r\\nKPX Oacute Atilde -40\\r\\nKPX Oacute T -40\\r\\nKPX Oacute Tcaron -40\\r\\nKPX Oacute Tcommaaccent -40\\r\\nKPX Oacute V -50\\r\\nKPX Oacute W -50\\r\\nKPX Oacute X -40\\r\\nKPX Oacute Y -50\\r\\nKPX Oacute Yacute -50\\r\\nKPX Oacute Ydieresis -50\\r\\nKPX Ocircumflex A -40\\r\\nKPX Ocircumflex Aacute -40\\r\\nKPX Ocircumflex Abreve -40\\r\\nKPX Ocircumflex Acircumflex -40\\r\\nKPX Ocircumflex Adieresis -40\\r\\nKPX Ocircumflex Agrave -40\\r\\nKPX Ocircumflex Amacron -40\\r\\nKPX Ocircumflex Aogonek -40\\r\\nKPX Ocircumflex Aring -40\\r\\nKPX Ocircumflex Atilde -40\\r\\nKPX Ocircumflex T -40\\r\\nKPX Ocircumflex Tcaron -40\\r\\nKPX Ocircumflex Tcommaaccent -40\\r\\nKPX Ocircumflex V -50\\r\\nKPX Ocircumflex W -50\\r\\nKPX Ocircumflex X -40\\r\\nKPX Ocircumflex Y -50\\r\\nKPX Ocircumflex Yacute -50\\r\\nKPX Ocircumflex Ydieresis -50\\r\\nKPX Odieresis A -40\\r\\nKPX Odieresis Aacute -40\\r\\nKPX Odieresis Abreve -40\\r\\nKPX Odieresis Acircumflex -40\\r\\nKPX Odieresis Adieresis -40\\r\\nKPX Odieresis Agrave -40\\r\\nKPX Odieresis Amacron -40\\r\\nKPX Odieresis Aogonek -40\\r\\nKPX Odieresis Aring -40\\r\\nKPX Odieresis Atilde -40\\r\\nKPX Odieresis T -40\\r\\nKPX Odieresis Tcaron -40\\r\\nKPX Odieresis Tcommaaccent -40\\r\\nKPX Odieresis V -50\\r\\nKPX Odieresis W -50\\r\\nKPX Odieresis X -40\\r\\nKPX Odieresis Y -50\\r\\nKPX Odieresis Yacute -50\\r\\nKPX Odieresis Ydieresis -50\\r\\nKPX Ograve A -40\\r\\nKPX Ograve Aacute -40\\r\\nKPX Ograve Abreve -40\\r\\nKPX Ograve Acircumflex -40\\r\\nKPX Ograve Adieresis -40\\r\\nKPX Ograve Agrave -40\\r\\nKPX Ograve Amacron -40\\r\\nKPX Ograve Aogonek -40\\r\\nKPX Ograve Aring -40\\r\\nKPX Ograve Atilde -40\\r\\nKPX Ograve T -40\\r\\nKPX Ograve Tcaron -40\\r\\nKPX Ograve Tcommaaccent -40\\r\\nKPX Ograve V -50\\r\\nKPX Ograve W -50\\r\\nKPX Ograve X -40\\r\\nKPX Ograve Y -50\\r\\nKPX Ograve Yacute -50\\r\\nKPX Ograve Ydieresis -50\\r\\nKPX Ohungarumlaut A -40\\r\\nKPX Ohungarumlaut Aacute -40\\r\\nKPX Ohungarumlaut Abreve -40\\r\\nKPX Ohungarumlaut Acircumflex -40\\r\\nKPX Ohungarumlaut Adieresis -40\\r\\nKPX Ohungarumlaut Agrave -40\\r\\nKPX Ohungarumlaut Amacron -40\\r\\nKPX Ohungarumlaut Aogonek -40\\r\\nKPX Ohungarumlaut Aring -40\\r\\nKPX Ohungarumlaut Atilde -40\\r\\nKPX Ohungarumlaut T -40\\r\\nKPX Ohungarumlaut Tcaron -40\\r\\nKPX Ohungarumlaut Tcommaaccent -40\\r\\nKPX Ohungarumlaut V -50\\r\\nKPX Ohungarumlaut W -50\\r\\nKPX Ohungarumlaut X -40\\r\\nKPX Ohungarumlaut Y -50\\r\\nKPX Ohungarumlaut Yacute -50\\r\\nKPX Ohungarumlaut Ydieresis -50\\r\\nKPX Omacron A -40\\r\\nKPX Omacron Aacute -40\\r\\nKPX Omacron Abreve -40\\r\\nKPX Omacron Acircumflex -40\\r\\nKPX Omacron Adieresis -40\\r\\nKPX Omacron Agrave -40\\r\\nKPX Omacron Amacron -40\\r\\nKPX Omacron Aogonek -40\\r\\nKPX Omacron Aring -40\\r\\nKPX Omacron Atilde -40\\r\\nKPX Omacron T -40\\r\\nKPX Omacron Tcaron -40\\r\\nKPX Omacron Tcommaaccent -40\\r\\nKPX Omacron V -50\\r\\nKPX Omacron W -50\\r\\nKPX Omacron X -40\\r\\nKPX Omacron Y -50\\r\\nKPX Omacron Yacute -50\\r\\nKPX Omacron Ydieresis -50\\r\\nKPX Oslash A -40\\r\\nKPX Oslash Aacute -40\\r\\nKPX Oslash Abreve -40\\r\\nKPX Oslash Acircumflex -40\\r\\nKPX Oslash Adieresis -40\\r\\nKPX Oslash Agrave -40\\r\\nKPX Oslash Amacron -40\\r\\nKPX Oslash Aogonek -40\\r\\nKPX Oslash Aring -40\\r\\nKPX Oslash Atilde -40\\r\\nKPX Oslash T -40\\r\\nKPX Oslash Tcaron -40\\r\\nKPX Oslash Tcommaaccent -40\\r\\nKPX Oslash V -50\\r\\nKPX Oslash W -50\\r\\nKPX Oslash X -40\\r\\nKPX Oslash Y -50\\r\\nKPX Oslash Yacute -50\\r\\nKPX Oslash Ydieresis -50\\r\\nKPX Otilde A -40\\r\\nKPX Otilde Aacute -40\\r\\nKPX Otilde Abreve -40\\r\\nKPX Otilde Acircumflex -40\\r\\nKPX Otilde Adieresis -40\\r\\nKPX Otilde Agrave -40\\r\\nKPX Otilde Amacron -40\\r\\nKPX Otilde Aogonek -40\\r\\nKPX Otilde Aring -40\\r\\nKPX Otilde Atilde -40\\r\\nKPX Otilde T -40\\r\\nKPX Otilde Tcaron -40\\r\\nKPX Otilde Tcommaaccent -40\\r\\nKPX Otilde V -50\\r\\nKPX Otilde W -50\\r\\nKPX Otilde X -40\\r\\nKPX Otilde Y -50\\r\\nKPX Otilde Yacute -50\\r\\nKPX Otilde Ydieresis -50\\r\\nKPX P A -74\\r\\nKPX P Aacute -74\\r\\nKPX P Abreve -74\\r\\nKPX P Acircumflex -74\\r\\nKPX P Adieresis -74\\r\\nKPX P Agrave -74\\r\\nKPX P Amacron -74\\r\\nKPX P Aogonek -74\\r\\nKPX P Aring -74\\r\\nKPX P Atilde -74\\r\\nKPX P a -10\\r\\nKPX P aacute -10\\r\\nKPX P abreve -10\\r\\nKPX P acircumflex -10\\r\\nKPX P adieresis -10\\r\\nKPX P agrave -10\\r\\nKPX P amacron -10\\r\\nKPX P aogonek -10\\r\\nKPX P aring -10\\r\\nKPX P atilde -10\\r\\nKPX P comma -92\\r\\nKPX P e -20\\r\\nKPX P eacute -20\\r\\nKPX P ecaron -20\\r\\nKPX P ecircumflex -20\\r\\nKPX P edieresis -20\\r\\nKPX P edotaccent -20\\r\\nKPX P egrave -20\\r\\nKPX P emacron -20\\r\\nKPX P eogonek -20\\r\\nKPX P o -20\\r\\nKPX P oacute -20\\r\\nKPX P ocircumflex -20\\r\\nKPX P odieresis -20\\r\\nKPX P ograve -20\\r\\nKPX P ohungarumlaut -20\\r\\nKPX P omacron -20\\r\\nKPX P oslash -20\\r\\nKPX P otilde -20\\r\\nKPX P period -110\\r\\nKPX Q U -10\\r\\nKPX Q Uacute -10\\r\\nKPX Q Ucircumflex -10\\r\\nKPX Q Udieresis -10\\r\\nKPX Q Ugrave -10\\r\\nKPX Q Uhungarumlaut -10\\r\\nKPX Q Umacron -10\\r\\nKPX Q Uogonek -10\\r\\nKPX Q Uring -10\\r\\nKPX Q period -20\\r\\nKPX R O -30\\r\\nKPX R Oacute -30\\r\\nKPX R Ocircumflex -30\\r\\nKPX R Odieresis -30\\r\\nKPX R Ograve -30\\r\\nKPX R Ohungarumlaut -30\\r\\nKPX R Omacron -30\\r\\nKPX R Oslash -30\\r\\nKPX R Otilde -30\\r\\nKPX R T -40\\r\\nKPX R Tcaron -40\\r\\nKPX R Tcommaaccent -40\\r\\nKPX R U -30\\r\\nKPX R Uacute -30\\r\\nKPX R Ucircumflex -30\\r\\nKPX R Udieresis -30\\r\\nKPX R Ugrave -30\\r\\nKPX R Uhungarumlaut -30\\r\\nKPX R Umacron -30\\r\\nKPX R Uogonek -30\\r\\nKPX R Uring -30\\r\\nKPX R V -55\\r\\nKPX R W -35\\r\\nKPX R Y -35\\r\\nKPX R Yacute -35\\r\\nKPX R Ydieresis -35\\r\\nKPX Racute O -30\\r\\nKPX Racute Oacute -30\\r\\nKPX Racute Ocircumflex -30\\r\\nKPX Racute Odieresis -30\\r\\nKPX Racute Ograve -30\\r\\nKPX Racute Ohungarumlaut -30\\r\\nKPX Racute Omacron -30\\r\\nKPX Racute Oslash -30\\r\\nKPX Racute Otilde -30\\r\\nKPX Racute T -40\\r\\nKPX Racute Tcaron -40\\r\\nKPX Racute Tcommaaccent -40\\r\\nKPX Racute U -30\\r\\nKPX Racute Uacute -30\\r\\nKPX Racute Ucircumflex -30\\r\\nKPX Racute Udieresis -30\\r\\nKPX Racute Ugrave -30\\r\\nKPX Racute Uhungarumlaut -30\\r\\nKPX Racute Umacron -30\\r\\nKPX Racute Uogonek -30\\r\\nKPX Racute Uring -30\\r\\nKPX Racute V -55\\r\\nKPX Racute W -35\\r\\nKPX Racute Y -35\\r\\nKPX Racute Yacute -35\\r\\nKPX Racute Ydieresis -35\\r\\nKPX Rcaron O -30\\r\\nKPX Rcaron Oacute -30\\r\\nKPX Rcaron Ocircumflex -30\\r\\nKPX Rcaron Odieresis -30\\r\\nKPX Rcaron Ograve -30\\r\\nKPX Rcaron Ohungarumlaut -30\\r\\nKPX Rcaron Omacron -30\\r\\nKPX Rcaron Oslash -30\\r\\nKPX Rcaron Otilde -30\\r\\nKPX Rcaron T -40\\r\\nKPX Rcaron Tcaron -40\\r\\nKPX Rcaron Tcommaaccent -40\\r\\nKPX Rcaron U -30\\r\\nKPX Rcaron Uacute -30\\r\\nKPX Rcaron Ucircumflex -30\\r\\nKPX Rcaron Udieresis -30\\r\\nKPX Rcaron Ugrave -30\\r\\nKPX Rcaron Uhungarumlaut -30\\r\\nKPX Rcaron Umacron -30\\r\\nKPX Rcaron Uogonek -30\\r\\nKPX Rcaron Uring -30\\r\\nKPX Rcaron V -55\\r\\nKPX Rcaron W -35\\r\\nKPX Rcaron Y -35\\r\\nKPX Rcaron Yacute -35\\r\\nKPX Rcaron Ydieresis -35\\r\\nKPX Rcommaaccent O -30\\r\\nKPX Rcommaaccent Oacute -30\\r\\nKPX Rcommaaccent Ocircumflex -30\\r\\nKPX Rcommaaccent Odieresis -30\\r\\nKPX Rcommaaccent Ograve -30\\r\\nKPX Rcommaaccent Ohungarumlaut -30\\r\\nKPX Rcommaaccent Omacron -30\\r\\nKPX Rcommaaccent Oslash -30\\r\\nKPX Rcommaaccent Otilde -30\\r\\nKPX Rcommaaccent T -40\\r\\nKPX Rcommaaccent Tcaron -40\\r\\nKPX Rcommaaccent Tcommaaccent -40\\r\\nKPX Rcommaaccent U -30\\r\\nKPX Rcommaaccent Uacute -30\\r\\nKPX Rcommaaccent Ucircumflex -30\\r\\nKPX Rcommaaccent Udieresis -30\\r\\nKPX Rcommaaccent Ugrave -30\\r\\nKPX Rcommaaccent Uhungarumlaut -30\\r\\nKPX Rcommaaccent Umacron -30\\r\\nKPX Rcommaaccent Uogonek -30\\r\\nKPX Rcommaaccent Uring -30\\r\\nKPX Rcommaaccent V -55\\r\\nKPX Rcommaaccent W -35\\r\\nKPX Rcommaaccent Y -35\\r\\nKPX Rcommaaccent Yacute -35\\r\\nKPX Rcommaaccent Ydieresis -35\\r\\nKPX T A -90\\r\\nKPX T Aacute -90\\r\\nKPX T Abreve -90\\r\\nKPX T Acircumflex -90\\r\\nKPX T Adieresis -90\\r\\nKPX T Agrave -90\\r\\nKPX T Amacron -90\\r\\nKPX T Aogonek -90\\r\\nKPX T Aring -90\\r\\nKPX T Atilde -90\\r\\nKPX T O -18\\r\\nKPX T Oacute -18\\r\\nKPX T Ocircumflex -18\\r\\nKPX T Odieresis -18\\r\\nKPX T Ograve -18\\r\\nKPX T Ohungarumlaut -18\\r\\nKPX T Omacron -18\\r\\nKPX T Oslash -18\\r\\nKPX T Otilde -18\\r\\nKPX T a -92\\r\\nKPX T aacute -92\\r\\nKPX T abreve -52\\r\\nKPX T acircumflex -52\\r\\nKPX T adieresis -52\\r\\nKPX T agrave -52\\r\\nKPX T amacron -52\\r\\nKPX T aogonek -92\\r\\nKPX T aring -92\\r\\nKPX T atilde -52\\r\\nKPX T colon -74\\r\\nKPX T comma -74\\r\\nKPX T e -92\\r\\nKPX T eacute -92\\r\\nKPX T ecaron -92\\r\\nKPX T ecircumflex -92\\r\\nKPX T edieresis -52\\r\\nKPX T edotaccent -92\\r\\nKPX T egrave -52\\r\\nKPX T emacron -52\\r\\nKPX T eogonek -92\\r\\nKPX T hyphen -92\\r\\nKPX T i -18\\r\\nKPX T iacute -18\\r\\nKPX T iogonek -18\\r\\nKPX T o -92\\r\\nKPX T oacute -92\\r\\nKPX T ocircumflex -92\\r\\nKPX T odieresis -92\\r\\nKPX T ograve -92\\r\\nKPX T ohungarumlaut -92\\r\\nKPX T omacron -92\\r\\nKPX T oslash -92\\r\\nKPX T otilde -92\\r\\nKPX T period -90\\r\\nKPX T r -74\\r\\nKPX T racute -74\\r\\nKPX T rcaron -74\\r\\nKPX T rcommaaccent -74\\r\\nKPX T semicolon -74\\r\\nKPX T u -92\\r\\nKPX T uacute -92\\r\\nKPX T ucircumflex -92\\r\\nKPX T udieresis -92\\r\\nKPX T ugrave -92\\r\\nKPX T uhungarumlaut -92\\r\\nKPX T umacron -92\\r\\nKPX T uogonek -92\\r\\nKPX T uring -92\\r\\nKPX T w -74\\r\\nKPX T y -34\\r\\nKPX T yacute -34\\r\\nKPX T ydieresis -34\\r\\nKPX Tcaron A -90\\r\\nKPX Tcaron Aacute -90\\r\\nKPX Tcaron Abreve -90\\r\\nKPX Tcaron Acircumflex -90\\r\\nKPX Tcaron Adieresis -90\\r\\nKPX Tcaron Agrave -90\\r\\nKPX Tcaron Amacron -90\\r\\nKPX Tcaron Aogonek -90\\r\\nKPX Tcaron Aring -90\\r\\nKPX Tcaron Atilde -90\\r\\nKPX Tcaron O -18\\r\\nKPX Tcaron Oacute -18\\r\\nKPX Tcaron Ocircumflex -18\\r\\nKPX Tcaron Odieresis -18\\r\\nKPX Tcaron Ograve -18\\r\\nKPX Tcaron Ohungarumlaut -18\\r\\nKPX Tcaron Omacron -18\\r\\nKPX Tcaron Oslash -18\\r\\nKPX Tcaron Otilde -18\\r\\nKPX Tcaron a -92\\r\\nKPX Tcaron aacute -92\\r\\nKPX Tcaron abreve -52\\r\\nKPX Tcaron acircumflex -52\\r\\nKPX Tcaron adieresis -52\\r\\nKPX Tcaron agrave -52\\r\\nKPX Tcaron amacron -52\\r\\nKPX Tcaron aogonek -92\\r\\nKPX Tcaron aring -92\\r\\nKPX Tcaron atilde -52\\r\\nKPX Tcaron colon -74\\r\\nKPX Tcaron comma -74\\r\\nKPX Tcaron e -92\\r\\nKPX Tcaron eacute -92\\r\\nKPX Tcaron ecaron -92\\r\\nKPX Tcaron ecircumflex -92\\r\\nKPX Tcaron edieresis -52\\r\\nKPX Tcaron edotaccent -92\\r\\nKPX Tcaron egrave -52\\r\\nKPX Tcaron emacron -52\\r\\nKPX Tcaron eogonek -92\\r\\nKPX Tcaron hyphen -92\\r\\nKPX Tcaron i -18\\r\\nKPX Tcaron iacute -18\\r\\nKPX Tcaron iogonek -18\\r\\nKPX Tcaron o -92\\r\\nKPX Tcaron oacute -92\\r\\nKPX Tcaron ocircumflex -92\\r\\nKPX Tcaron odieresis -92\\r\\nKPX Tcaron ograve -92\\r\\nKPX Tcaron ohungarumlaut -92\\r\\nKPX Tcaron omacron -92\\r\\nKPX Tcaron oslash -92\\r\\nKPX Tcaron otilde -92\\r\\nKPX Tcaron period -90\\r\\nKPX Tcaron r -74\\r\\nKPX Tcaron racute -74\\r\\nKPX Tcaron rcaron -74\\r\\nKPX Tcaron rcommaaccent -74\\r\\nKPX Tcaron semicolon -74\\r\\nKPX Tcaron u -92\\r\\nKPX Tcaron uacute -92\\r\\nKPX Tcaron ucircumflex -92\\r\\nKPX Tcaron udieresis -92\\r\\nKPX Tcaron ugrave -92\\r\\nKPX Tcaron uhungarumlaut -92\\r\\nKPX Tcaron umacron -92\\r\\nKPX Tcaron uogonek -92\\r\\nKPX Tcaron uring -92\\r\\nKPX Tcaron w -74\\r\\nKPX Tcaron y -34\\r\\nKPX Tcaron yacute -34\\r\\nKPX Tcaron ydieresis -34\\r\\nKPX Tcommaaccent A -90\\r\\nKPX Tcommaaccent Aacute -90\\r\\nKPX Tcommaaccent Abreve -90\\r\\nKPX Tcommaaccent Acircumflex -90\\r\\nKPX Tcommaaccent Adieresis -90\\r\\nKPX Tcommaaccent Agrave -90\\r\\nKPX Tcommaaccent Amacron -90\\r\\nKPX Tcommaaccent Aogonek -90\\r\\nKPX Tcommaaccent Aring -90\\r\\nKPX Tcommaaccent Atilde -90\\r\\nKPX Tcommaaccent O -18\\r\\nKPX Tcommaaccent Oacute -18\\r\\nKPX Tcommaaccent Ocircumflex -18\\r\\nKPX Tcommaaccent Odieresis -18\\r\\nKPX Tcommaaccent Ograve -18\\r\\nKPX Tcommaaccent Ohungarumlaut -18\\r\\nKPX Tcommaaccent Omacron -18\\r\\nKPX Tcommaaccent Oslash -18\\r\\nKPX Tcommaaccent Otilde -18\\r\\nKPX Tcommaaccent a -92\\r\\nKPX Tcommaaccent aacute -92\\r\\nKPX Tcommaaccent abreve -52\\r\\nKPX Tcommaaccent acircumflex -52\\r\\nKPX Tcommaaccent adieresis -52\\r\\nKPX Tcommaaccent agrave -52\\r\\nKPX Tcommaaccent amacron -52\\r\\nKPX Tcommaaccent aogonek -92\\r\\nKPX Tcommaaccent aring -92\\r\\nKPX Tcommaaccent atilde -52\\r\\nKPX Tcommaaccent colon -74\\r\\nKPX Tcommaaccent comma -74\\r\\nKPX Tcommaaccent e -92\\r\\nKPX Tcommaaccent eacute -92\\r\\nKPX Tcommaaccent ecaron -92\\r\\nKPX Tcommaaccent ecircumflex -92\\r\\nKPX Tcommaaccent edieresis -52\\r\\nKPX Tcommaaccent edotaccent -92\\r\\nKPX Tcommaaccent egrave -52\\r\\nKPX Tcommaaccent emacron -52\\r\\nKPX Tcommaaccent eogonek -92\\r\\nKPX Tcommaaccent hyphen -92\\r\\nKPX Tcommaaccent i -18\\r\\nKPX Tcommaaccent iacute -18\\r\\nKPX Tcommaaccent iogonek -18\\r\\nKPX Tcommaaccent o -92\\r\\nKPX Tcommaaccent oacute -92\\r\\nKPX Tcommaaccent ocircumflex -92\\r\\nKPX Tcommaaccent odieresis -92\\r\\nKPX Tcommaaccent ograve -92\\r\\nKPX Tcommaaccent ohungarumlaut -92\\r\\nKPX Tcommaaccent omacron -92\\r\\nKPX Tcommaaccent oslash -92\\r\\nKPX Tcommaaccent otilde -92\\r\\nKPX Tcommaaccent period -90\\r\\nKPX Tcommaaccent r -74\\r\\nKPX Tcommaaccent racute -74\\r\\nKPX Tcommaaccent rcaron -74\\r\\nKPX Tcommaaccent rcommaaccent -74\\r\\nKPX Tcommaaccent semicolon -74\\r\\nKPX Tcommaaccent u -92\\r\\nKPX Tcommaaccent uacute -92\\r\\nKPX Tcommaaccent ucircumflex -92\\r\\nKPX Tcommaaccent udieresis -92\\r\\nKPX Tcommaaccent ugrave -92\\r\\nKPX Tcommaaccent uhungarumlaut -92\\r\\nKPX Tcommaaccent umacron -92\\r\\nKPX Tcommaaccent uogonek -92\\r\\nKPX Tcommaaccent uring -92\\r\\nKPX Tcommaaccent w -74\\r\\nKPX Tcommaaccent y -34\\r\\nKPX Tcommaaccent yacute -34\\r\\nKPX Tcommaaccent ydieresis -34\\r\\nKPX U A -60\\r\\nKPX U Aacute -60\\r\\nKPX U Abreve -60\\r\\nKPX U Acircumflex -60\\r\\nKPX U Adieresis -60\\r\\nKPX U Agrave -60\\r\\nKPX U Amacron -60\\r\\nKPX U Aogonek -60\\r\\nKPX U Aring -60\\r\\nKPX U Atilde -60\\r\\nKPX U comma -50\\r\\nKPX U period -50\\r\\nKPX Uacute A -60\\r\\nKPX Uacute Aacute -60\\r\\nKPX Uacute Abreve -60\\r\\nKPX Uacute Acircumflex -60\\r\\nKPX Uacute Adieresis -60\\r\\nKPX Uacute Agrave -60\\r\\nKPX Uacute Amacron -60\\r\\nKPX Uacute Aogonek -60\\r\\nKPX Uacute Aring -60\\r\\nKPX Uacute Atilde -60\\r\\nKPX Uacute comma -50\\r\\nKPX Uacute period -50\\r\\nKPX Ucircumflex A -60\\r\\nKPX Ucircumflex Aacute -60\\r\\nKPX Ucircumflex Abreve -60\\r\\nKPX Ucircumflex Acircumflex -60\\r\\nKPX Ucircumflex Adieresis -60\\r\\nKPX Ucircumflex Agrave -60\\r\\nKPX Ucircumflex Amacron -60\\r\\nKPX Ucircumflex Aogonek -60\\r\\nKPX Ucircumflex Aring -60\\r\\nKPX Ucircumflex Atilde -60\\r\\nKPX Ucircumflex comma -50\\r\\nKPX Ucircumflex period -50\\r\\nKPX Udieresis A -60\\r\\nKPX Udieresis Aacute -60\\r\\nKPX Udieresis Abreve -60\\r\\nKPX Udieresis Acircumflex -60\\r\\nKPX Udieresis Adieresis -60\\r\\nKPX Udieresis Agrave -60\\r\\nKPX Udieresis Amacron -60\\r\\nKPX Udieresis Aogonek -60\\r\\nKPX Udieresis Aring -60\\r\\nKPX Udieresis Atilde -60\\r\\nKPX Udieresis comma -50\\r\\nKPX Udieresis period -50\\r\\nKPX Ugrave A -60\\r\\nKPX Ugrave Aacute -60\\r\\nKPX Ugrave Abreve -60\\r\\nKPX Ugrave Acircumflex -60\\r\\nKPX Ugrave Adieresis -60\\r\\nKPX Ugrave Agrave -60\\r\\nKPX Ugrave Amacron -60\\r\\nKPX Ugrave Aogonek -60\\r\\nKPX Ugrave Aring -60\\r\\nKPX Ugrave Atilde -60\\r\\nKPX Ugrave comma -50\\r\\nKPX Ugrave period -50\\r\\nKPX Uhungarumlaut A -60\\r\\nKPX Uhungarumlaut Aacute -60\\r\\nKPX Uhungarumlaut Abreve -60\\r\\nKPX Uhungarumlaut Acircumflex -60\\r\\nKPX Uhungarumlaut Adieresis -60\\r\\nKPX Uhungarumlaut Agrave -60\\r\\nKPX Uhungarumlaut Amacron -60\\r\\nKPX Uhungarumlaut Aogonek -60\\r\\nKPX Uhungarumlaut Aring -60\\r\\nKPX Uhungarumlaut Atilde -60\\r\\nKPX Uhungarumlaut comma -50\\r\\nKPX Uhungarumlaut period -50\\r\\nKPX Umacron A -60\\r\\nKPX Umacron Aacute -60\\r\\nKPX Umacron Abreve -60\\r\\nKPX Umacron Acircumflex -60\\r\\nKPX Umacron Adieresis -60\\r\\nKPX Umacron Agrave -60\\r\\nKPX Umacron Amacron -60\\r\\nKPX Umacron Aogonek -60\\r\\nKPX Umacron Aring -60\\r\\nKPX Umacron Atilde -60\\r\\nKPX Umacron comma -50\\r\\nKPX Umacron period -50\\r\\nKPX Uogonek A -60\\r\\nKPX Uogonek Aacute -60\\r\\nKPX Uogonek Abreve -60\\r\\nKPX Uogonek Acircumflex -60\\r\\nKPX Uogonek Adieresis -60\\r\\nKPX Uogonek Agrave -60\\r\\nKPX Uogonek Amacron -60\\r\\nKPX Uogonek Aogonek -60\\r\\nKPX Uogonek Aring -60\\r\\nKPX Uogonek Atilde -60\\r\\nKPX Uogonek comma -50\\r\\nKPX Uogonek period -50\\r\\nKPX Uring A -60\\r\\nKPX Uring Aacute -60\\r\\nKPX Uring Abreve -60\\r\\nKPX Uring Acircumflex -60\\r\\nKPX Uring Adieresis -60\\r\\nKPX Uring Agrave -60\\r\\nKPX Uring Amacron -60\\r\\nKPX Uring Aogonek -60\\r\\nKPX Uring Aring -60\\r\\nKPX Uring Atilde -60\\r\\nKPX Uring comma -50\\r\\nKPX Uring period -50\\r\\nKPX V A -135\\r\\nKPX V Aacute -135\\r\\nKPX V Abreve -135\\r\\nKPX V Acircumflex -135\\r\\nKPX V Adieresis -135\\r\\nKPX V Agrave -135\\r\\nKPX V Amacron -135\\r\\nKPX V Aogonek -135\\r\\nKPX V Aring -135\\r\\nKPX V Atilde -135\\r\\nKPX V G -30\\r\\nKPX V Gbreve -30\\r\\nKPX V Gcommaaccent -30\\r\\nKPX V O -45\\r\\nKPX V Oacute -45\\r\\nKPX V Ocircumflex -45\\r\\nKPX V Odieresis -45\\r\\nKPX V Ograve -45\\r\\nKPX V Ohungarumlaut -45\\r\\nKPX V Omacron -45\\r\\nKPX V Oslash -45\\r\\nKPX V Otilde -45\\r\\nKPX V a -92\\r\\nKPX V aacute -92\\r\\nKPX V abreve -92\\r\\nKPX V acircumflex -92\\r\\nKPX V adieresis -92\\r\\nKPX V agrave -92\\r\\nKPX V amacron -92\\r\\nKPX V aogonek -92\\r\\nKPX V aring -92\\r\\nKPX V atilde -92\\r\\nKPX V colon -92\\r\\nKPX V comma -129\\r\\nKPX V e -100\\r\\nKPX V eacute -100\\r\\nKPX V ecaron -100\\r\\nKPX V ecircumflex -100\\r\\nKPX V edieresis -100\\r\\nKPX V edotaccent -100\\r\\nKPX V egrave -100\\r\\nKPX V emacron -100\\r\\nKPX V eogonek -100\\r\\nKPX V hyphen -74\\r\\nKPX V i -37\\r\\nKPX V iacute -37\\r\\nKPX V icircumflex -37\\r\\nKPX V idieresis -37\\r\\nKPX V igrave -37\\r\\nKPX V imacron -37\\r\\nKPX V iogonek -37\\r\\nKPX V o -100\\r\\nKPX V oacute -100\\r\\nKPX V ocircumflex -100\\r\\nKPX V odieresis -100\\r\\nKPX V ograve -100\\r\\nKPX V ohungarumlaut -100\\r\\nKPX V omacron -100\\r\\nKPX V oslash -100\\r\\nKPX V otilde -100\\r\\nKPX V period -145\\r\\nKPX V semicolon -92\\r\\nKPX V u -92\\r\\nKPX V uacute -92\\r\\nKPX V ucircumflex -92\\r\\nKPX V udieresis -92\\r\\nKPX V ugrave -92\\r\\nKPX V uhungarumlaut -92\\r\\nKPX V umacron -92\\r\\nKPX V uogonek -92\\r\\nKPX V uring -92\\r\\nKPX W A -120\\r\\nKPX W Aacute -120\\r\\nKPX W Abreve -120\\r\\nKPX W Acircumflex -120\\r\\nKPX W Adieresis -120\\r\\nKPX W Agrave -120\\r\\nKPX W Amacron -120\\r\\nKPX W Aogonek -120\\r\\nKPX W Aring -120\\r\\nKPX W Atilde -120\\r\\nKPX W O -10\\r\\nKPX W Oacute -10\\r\\nKPX W Ocircumflex -10\\r\\nKPX W Odieresis -10\\r\\nKPX W Ograve -10\\r\\nKPX W Ohungarumlaut -10\\r\\nKPX W Omacron -10\\r\\nKPX W Oslash -10\\r\\nKPX W Otilde -10\\r\\nKPX W a -65\\r\\nKPX W aacute -65\\r\\nKPX W abreve -65\\r\\nKPX W acircumflex -65\\r\\nKPX W adieresis -65\\r\\nKPX W agrave -65\\r\\nKPX W amacron -65\\r\\nKPX W aogonek -65\\r\\nKPX W aring -65\\r\\nKPX W atilde -65\\r\\nKPX W colon -55\\r\\nKPX W comma -92\\r\\nKPX W e -65\\r\\nKPX W eacute -65\\r\\nKPX W ecaron -65\\r\\nKPX W ecircumflex -65\\r\\nKPX W edieresis -65\\r\\nKPX W edotaccent -65\\r\\nKPX W egrave -65\\r\\nKPX W emacron -65\\r\\nKPX W eogonek -65\\r\\nKPX W hyphen -37\\r\\nKPX W i -18\\r\\nKPX W iacute -18\\r\\nKPX W iogonek -18\\r\\nKPX W o -75\\r\\nKPX W oacute -75\\r\\nKPX W ocircumflex -75\\r\\nKPX W odieresis -75\\r\\nKPX W ograve -75\\r\\nKPX W ohungarumlaut -75\\r\\nKPX W omacron -75\\r\\nKPX W oslash -75\\r\\nKPX W otilde -75\\r\\nKPX W period -92\\r\\nKPX W semicolon -55\\r\\nKPX W u -50\\r\\nKPX W uacute -50\\r\\nKPX W ucircumflex -50\\r\\nKPX W udieresis -50\\r\\nKPX W ugrave -50\\r\\nKPX W uhungarumlaut -50\\r\\nKPX W umacron -50\\r\\nKPX W uogonek -50\\r\\nKPX W uring -50\\r\\nKPX W y -60\\r\\nKPX W yacute -60\\r\\nKPX W ydieresis -60\\r\\nKPX Y A -110\\r\\nKPX Y Aacute -110\\r\\nKPX Y Abreve -110\\r\\nKPX Y Acircumflex -110\\r\\nKPX Y Adieresis -110\\r\\nKPX Y Agrave -110\\r\\nKPX Y Amacron -110\\r\\nKPX Y Aogonek -110\\r\\nKPX Y Aring -110\\r\\nKPX Y Atilde -110\\r\\nKPX Y O -35\\r\\nKPX Y Oacute -35\\r\\nKPX Y Ocircumflex -35\\r\\nKPX Y Odieresis -35\\r\\nKPX Y Ograve -35\\r\\nKPX Y Ohungarumlaut -35\\r\\nKPX Y Omacron -35\\r\\nKPX Y Oslash -35\\r\\nKPX Y Otilde -35\\r\\nKPX Y a -85\\r\\nKPX Y aacute -85\\r\\nKPX Y abreve -85\\r\\nKPX Y acircumflex -85\\r\\nKPX Y adieresis -85\\r\\nKPX Y agrave -85\\r\\nKPX Y amacron -85\\r\\nKPX Y aogonek -85\\r\\nKPX Y aring -85\\r\\nKPX Y atilde -85\\r\\nKPX Y colon -92\\r\\nKPX Y comma -92\\r\\nKPX Y e -111\\r\\nKPX Y eacute -111\\r\\nKPX Y ecaron -111\\r\\nKPX Y ecircumflex -111\\r\\nKPX Y edieresis -71\\r\\nKPX Y edotaccent -111\\r\\nKPX Y egrave -71\\r\\nKPX Y emacron -71\\r\\nKPX Y eogonek -111\\r\\nKPX Y hyphen -92\\r\\nKPX Y i -37\\r\\nKPX Y iacute -37\\r\\nKPX Y iogonek -37\\r\\nKPX Y o -111\\r\\nKPX Y oacute -111\\r\\nKPX Y ocircumflex -111\\r\\nKPX Y odieresis -111\\r\\nKPX Y ograve -111\\r\\nKPX Y ohungarumlaut -111\\r\\nKPX Y omacron -111\\r\\nKPX Y oslash -111\\r\\nKPX Y otilde -111\\r\\nKPX Y period -92\\r\\nKPX Y semicolon -92\\r\\nKPX Y u -92\\r\\nKPX Y uacute -92\\r\\nKPX Y ucircumflex -92\\r\\nKPX Y udieresis -92\\r\\nKPX Y ugrave -92\\r\\nKPX Y uhungarumlaut -92\\r\\nKPX Y umacron -92\\r\\nKPX Y uogonek -92\\r\\nKPX Y uring -92\\r\\nKPX Yacute A -110\\r\\nKPX Yacute Aacute -110\\r\\nKPX Yacute Abreve -110\\r\\nKPX Yacute Acircumflex -110\\r\\nKPX Yacute Adieresis -110\\r\\nKPX Yacute Agrave -110\\r\\nKPX Yacute Amacron -110\\r\\nKPX Yacute Aogonek -110\\r\\nKPX Yacute Aring -110\\r\\nKPX Yacute Atilde -110\\r\\nKPX Yacute O -35\\r\\nKPX Yacute Oacute -35\\r\\nKPX Yacute Ocircumflex -35\\r\\nKPX Yacute Odieresis -35\\r\\nKPX Yacute Ograve -35\\r\\nKPX Yacute Ohungarumlaut -35\\r\\nKPX Yacute Omacron -35\\r\\nKPX Yacute Oslash -35\\r\\nKPX Yacute Otilde -35\\r\\nKPX Yacute a -85\\r\\nKPX Yacute aacute -85\\r\\nKPX Yacute abreve -85\\r\\nKPX Yacute acircumflex -85\\r\\nKPX Yacute adieresis -85\\r\\nKPX Yacute agrave -85\\r\\nKPX Yacute amacron -85\\r\\nKPX Yacute aogonek -85\\r\\nKPX Yacute aring -85\\r\\nKPX Yacute atilde -85\\r\\nKPX Yacute colon -92\\r\\nKPX Yacute comma -92\\r\\nKPX Yacute e -111\\r\\nKPX Yacute eacute -111\\r\\nKPX Yacute ecaron -111\\r\\nKPX Yacute ecircumflex -111\\r\\nKPX Yacute edieresis -71\\r\\nKPX Yacute edotaccent -111\\r\\nKPX Yacute egrave -71\\r\\nKPX Yacute emacron -71\\r\\nKPX Yacute eogonek -111\\r\\nKPX Yacute hyphen -92\\r\\nKPX Yacute i -37\\r\\nKPX Yacute iacute -37\\r\\nKPX Yacute iogonek -37\\r\\nKPX Yacute o -111\\r\\nKPX Yacute oacute -111\\r\\nKPX Yacute ocircumflex -111\\r\\nKPX Yacute odieresis -111\\r\\nKPX Yacute ograve -111\\r\\nKPX Yacute ohungarumlaut -111\\r\\nKPX Yacute omacron -111\\r\\nKPX Yacute oslash -111\\r\\nKPX Yacute otilde -111\\r\\nKPX Yacute period -92\\r\\nKPX Yacute semicolon -92\\r\\nKPX Yacute u -92\\r\\nKPX Yacute uacute -92\\r\\nKPX Yacute ucircumflex -92\\r\\nKPX Yacute udieresis -92\\r\\nKPX Yacute ugrave -92\\r\\nKPX Yacute uhungarumlaut -92\\r\\nKPX Yacute umacron -92\\r\\nKPX Yacute uogonek -92\\r\\nKPX Yacute uring -92\\r\\nKPX Ydieresis A -110\\r\\nKPX Ydieresis Aacute -110\\r\\nKPX Ydieresis Abreve -110\\r\\nKPX Ydieresis Acircumflex -110\\r\\nKPX Ydieresis Adieresis -110\\r\\nKPX Ydieresis Agrave -110\\r\\nKPX Ydieresis Amacron -110\\r\\nKPX Ydieresis Aogonek -110\\r\\nKPX Ydieresis Aring -110\\r\\nKPX Ydieresis Atilde -110\\r\\nKPX Ydieresis O -35\\r\\nKPX Ydieresis Oacute -35\\r\\nKPX Ydieresis Ocircumflex -35\\r\\nKPX Ydieresis Odieresis -35\\r\\nKPX Ydieresis Ograve -35\\r\\nKPX Ydieresis Ohungarumlaut -35\\r\\nKPX Ydieresis Omacron -35\\r\\nKPX Ydieresis Oslash -35\\r\\nKPX Ydieresis Otilde -35\\r\\nKPX Ydieresis a -85\\r\\nKPX Ydieresis aacute -85\\r\\nKPX Ydieresis abreve -85\\r\\nKPX Ydieresis acircumflex -85\\r\\nKPX Ydieresis adieresis -85\\r\\nKPX Ydieresis agrave -85\\r\\nKPX Ydieresis amacron -85\\r\\nKPX Ydieresis aogonek -85\\r\\nKPX Ydieresis aring -85\\r\\nKPX Ydieresis atilde -85\\r\\nKPX Ydieresis colon -92\\r\\nKPX Ydieresis comma -92\\r\\nKPX Ydieresis e -111\\r\\nKPX Ydieresis eacute -111\\r\\nKPX Ydieresis ecaron -111\\r\\nKPX Ydieresis ecircumflex -111\\r\\nKPX Ydieresis edieresis -71\\r\\nKPX Ydieresis edotaccent -111\\r\\nKPX Ydieresis egrave -71\\r\\nKPX Ydieresis emacron -71\\r\\nKPX Ydieresis eogonek -111\\r\\nKPX Ydieresis hyphen -92\\r\\nKPX Ydieresis i -37\\r\\nKPX Ydieresis iacute -37\\r\\nKPX Ydieresis iogonek -37\\r\\nKPX Ydieresis o -111\\r\\nKPX Ydieresis oacute -111\\r\\nKPX Ydieresis ocircumflex -111\\r\\nKPX Ydieresis odieresis -111\\r\\nKPX Ydieresis ograve -111\\r\\nKPX Ydieresis ohungarumlaut -111\\r\\nKPX Ydieresis omacron -111\\r\\nKPX Ydieresis oslash -111\\r\\nKPX Ydieresis otilde -111\\r\\nKPX Ydieresis period -92\\r\\nKPX Ydieresis semicolon -92\\r\\nKPX Ydieresis u -92\\r\\nKPX Ydieresis uacute -92\\r\\nKPX Ydieresis ucircumflex -92\\r\\nKPX Ydieresis udieresis -92\\r\\nKPX Ydieresis ugrave -92\\r\\nKPX Ydieresis uhungarumlaut -92\\r\\nKPX Ydieresis umacron -92\\r\\nKPX Ydieresis uogonek -92\\r\\nKPX Ydieresis uring -92\\r\\nKPX a v -25\\r\\nKPX aacute v -25\\r\\nKPX abreve v -25\\r\\nKPX acircumflex v -25\\r\\nKPX adieresis v -25\\r\\nKPX agrave v -25\\r\\nKPX amacron v -25\\r\\nKPX aogonek v -25\\r\\nKPX aring v -25\\r\\nKPX atilde v -25\\r\\nKPX b b -10\\r\\nKPX b period -40\\r\\nKPX b u -20\\r\\nKPX b uacute -20\\r\\nKPX b ucircumflex -20\\r\\nKPX b udieresis -20\\r\\nKPX b ugrave -20\\r\\nKPX b uhungarumlaut -20\\r\\nKPX b umacron -20\\r\\nKPX b uogonek -20\\r\\nKPX b uring -20\\r\\nKPX b v -15\\r\\nKPX comma quotedblright -45\\r\\nKPX comma quoteright -55\\r\\nKPX d w -15\\r\\nKPX dcroat w -15\\r\\nKPX e v -15\\r\\nKPX eacute v -15\\r\\nKPX ecaron v -15\\r\\nKPX ecircumflex v -15\\r\\nKPX edieresis v -15\\r\\nKPX edotaccent v -15\\r\\nKPX egrave v -15\\r\\nKPX emacron v -15\\r\\nKPX eogonek v -15\\r\\nKPX f comma -15\\r\\nKPX f dotlessi -35\\r\\nKPX f i -25\\r\\nKPX f o -25\\r\\nKPX f oacute -25\\r\\nKPX f ocircumflex -25\\r\\nKPX f odieresis -25\\r\\nKPX f ograve -25\\r\\nKPX f ohungarumlaut -25\\r\\nKPX f omacron -25\\r\\nKPX f oslash -25\\r\\nKPX f otilde -25\\r\\nKPX f period -15\\r\\nKPX f quotedblright 50\\r\\nKPX f quoteright 55\\r\\nKPX g period -15\\r\\nKPX gbreve period -15\\r\\nKPX gcommaaccent period -15\\r\\nKPX h y -15\\r\\nKPX h yacute -15\\r\\nKPX h ydieresis -15\\r\\nKPX i v -10\\r\\nKPX iacute v -10\\r\\nKPX icircumflex v -10\\r\\nKPX idieresis v -10\\r\\nKPX igrave v -10\\r\\nKPX imacron v -10\\r\\nKPX iogonek v -10\\r\\nKPX k e -10\\r\\nKPX k eacute -10\\r\\nKPX k ecaron -10\\r\\nKPX k ecircumflex -10\\r\\nKPX k edieresis -10\\r\\nKPX k edotaccent -10\\r\\nKPX k egrave -10\\r\\nKPX k emacron -10\\r\\nKPX k eogonek -10\\r\\nKPX k o -15\\r\\nKPX k oacute -15\\r\\nKPX k ocircumflex -15\\r\\nKPX k odieresis -15\\r\\nKPX k ograve -15\\r\\nKPX k ohungarumlaut -15\\r\\nKPX k omacron -15\\r\\nKPX k oslash -15\\r\\nKPX k otilde -15\\r\\nKPX k y -15\\r\\nKPX k yacute -15\\r\\nKPX k ydieresis -15\\r\\nKPX kcommaaccent e -10\\r\\nKPX kcommaaccent eacute -10\\r\\nKPX kcommaaccent ecaron -10\\r\\nKPX kcommaaccent ecircumflex -10\\r\\nKPX kcommaaccent edieresis -10\\r\\nKPX kcommaaccent edotaccent -10\\r\\nKPX kcommaaccent egrave -10\\r\\nKPX kcommaaccent emacron -10\\r\\nKPX kcommaaccent eogonek -10\\r\\nKPX kcommaaccent o -15\\r\\nKPX kcommaaccent oacute -15\\r\\nKPX kcommaaccent ocircumflex -15\\r\\nKPX kcommaaccent odieresis -15\\r\\nKPX kcommaaccent ograve -15\\r\\nKPX kcommaaccent ohungarumlaut -15\\r\\nKPX kcommaaccent omacron -15\\r\\nKPX kcommaaccent oslash -15\\r\\nKPX kcommaaccent otilde -15\\r\\nKPX kcommaaccent y -15\\r\\nKPX kcommaaccent yacute -15\\r\\nKPX kcommaaccent ydieresis -15\\r\\nKPX n v -40\\r\\nKPX nacute v -40\\r\\nKPX ncaron v -40\\r\\nKPX ncommaaccent v -40\\r\\nKPX ntilde v -40\\r\\nKPX o v -10\\r\\nKPX o w -10\\r\\nKPX oacute v -10\\r\\nKPX oacute w -10\\r\\nKPX ocircumflex v -10\\r\\nKPX ocircumflex w -10\\r\\nKPX odieresis v -10\\r\\nKPX odieresis w -10\\r\\nKPX ograve v -10\\r\\nKPX ograve w -10\\r\\nKPX ohungarumlaut v -10\\r\\nKPX ohungarumlaut w -10\\r\\nKPX omacron v -10\\r\\nKPX omacron w -10\\r\\nKPX oslash v -10\\r\\nKPX oslash w -10\\r\\nKPX otilde v -10\\r\\nKPX otilde w -10\\r\\nKPX period quotedblright -55\\r\\nKPX period quoteright -55\\r\\nKPX quotedblleft A -10\\r\\nKPX quotedblleft Aacute -10\\r\\nKPX quotedblleft Abreve -10\\r\\nKPX quotedblleft Acircumflex -10\\r\\nKPX quotedblleft Adieresis -10\\r\\nKPX quotedblleft Agrave -10\\r\\nKPX quotedblleft Amacron -10\\r\\nKPX quotedblleft Aogonek -10\\r\\nKPX quotedblleft Aring -10\\r\\nKPX quotedblleft Atilde -10\\r\\nKPX quoteleft A -10\\r\\nKPX quoteleft Aacute -10\\r\\nKPX quoteleft Abreve -10\\r\\nKPX quoteleft Acircumflex -10\\r\\nKPX quoteleft Adieresis -10\\r\\nKPX quoteleft Agrave -10\\r\\nKPX quoteleft Amacron -10\\r\\nKPX quoteleft Aogonek -10\\r\\nKPX quoteleft Aring -10\\r\\nKPX quoteleft Atilde -10\\r\\nKPX quoteleft quoteleft -63\\r\\nKPX quoteright d -20\\r\\nKPX quoteright dcroat -20\\r\\nKPX quoteright quoteright -63\\r\\nKPX quoteright r -20\\r\\nKPX quoteright racute -20\\r\\nKPX quoteright rcaron -20\\r\\nKPX quoteright rcommaaccent -20\\r\\nKPX quoteright s -37\\r\\nKPX quoteright sacute -37\\r\\nKPX quoteright scaron -37\\r\\nKPX quoteright scedilla -37\\r\\nKPX quoteright scommaaccent -37\\r\\nKPX quoteright space -74\\r\\nKPX quoteright v -20\\r\\nKPX r c -18\\r\\nKPX r cacute -18\\r\\nKPX r ccaron -18\\r\\nKPX r ccedilla -18\\r\\nKPX r comma -92\\r\\nKPX r e -18\\r\\nKPX r eacute -18\\r\\nKPX r ecaron -18\\r\\nKPX r ecircumflex -18\\r\\nKPX r edieresis -18\\r\\nKPX r edotaccent -18\\r\\nKPX r egrave -18\\r\\nKPX r emacron -18\\r\\nKPX r eogonek -18\\r\\nKPX r g -10\\r\\nKPX r gbreve -10\\r\\nKPX r gcommaaccent -10\\r\\nKPX r hyphen -37\\r\\nKPX r n -15\\r\\nKPX r nacute -15\\r\\nKPX r ncaron -15\\r\\nKPX r ncommaaccent -15\\r\\nKPX r ntilde -15\\r\\nKPX r o -18\\r\\nKPX r oacute -18\\r\\nKPX r ocircumflex -18\\r\\nKPX r odieresis -18\\r\\nKPX r ograve -18\\r\\nKPX r ohungarumlaut -18\\r\\nKPX r omacron -18\\r\\nKPX r oslash -18\\r\\nKPX r otilde -18\\r\\nKPX r p -10\\r\\nKPX r period -100\\r\\nKPX r q -18\\r\\nKPX r v -10\\r\\nKPX racute c -18\\r\\nKPX racute cacute -18\\r\\nKPX racute ccaron -18\\r\\nKPX racute ccedilla -18\\r\\nKPX racute comma -92\\r\\nKPX racute e -18\\r\\nKPX racute eacute -18\\r\\nKPX racute ecaron -18\\r\\nKPX racute ecircumflex -18\\r\\nKPX racute edieresis -18\\r\\nKPX racute edotaccent -18\\r\\nKPX racute egrave -18\\r\\nKPX racute emacron -18\\r\\nKPX racute eogonek -18\\r\\nKPX racute g -10\\r\\nKPX racute gbreve -10\\r\\nKPX racute gcommaaccent -10\\r\\nKPX racute hyphen -37\\r\\nKPX racute n -15\\r\\nKPX racute nacute -15\\r\\nKPX racute ncaron -15\\r\\nKPX racute ncommaaccent -15\\r\\nKPX racute ntilde -15\\r\\nKPX racute o -18\\r\\nKPX racute oacute -18\\r\\nKPX racute ocircumflex -18\\r\\nKPX racute odieresis -18\\r\\nKPX racute ograve -18\\r\\nKPX racute ohungarumlaut -18\\r\\nKPX racute omacron -18\\r\\nKPX racute oslash -18\\r\\nKPX racute otilde -18\\r\\nKPX racute p -10\\r\\nKPX racute period -100\\r\\nKPX racute q -18\\r\\nKPX racute v -10\\r\\nKPX rcaron c -18\\r\\nKPX rcaron cacute -18\\r\\nKPX rcaron ccaron -18\\r\\nKPX rcaron ccedilla -18\\r\\nKPX rcaron comma -92\\r\\nKPX rcaron e -18\\r\\nKPX rcaron eacute -18\\r\\nKPX rcaron ecaron -18\\r\\nKPX rcaron ecircumflex -18\\r\\nKPX rcaron edieresis -18\\r\\nKPX rcaron edotaccent -18\\r\\nKPX rcaron egrave -18\\r\\nKPX rcaron emacron -18\\r\\nKPX rcaron eogonek -18\\r\\nKPX rcaron g -10\\r\\nKPX rcaron gbreve -10\\r\\nKPX rcaron gcommaaccent -10\\r\\nKPX rcaron hyphen -37\\r\\nKPX rcaron n -15\\r\\nKPX rcaron nacute -15\\r\\nKPX rcaron ncaron -15\\r\\nKPX rcaron ncommaaccent -15\\r\\nKPX rcaron ntilde -15\\r\\nKPX rcaron o -18\\r\\nKPX rcaron oacute -18\\r\\nKPX rcaron ocircumflex -18\\r\\nKPX rcaron odieresis -18\\r\\nKPX rcaron ograve -18\\r\\nKPX rcaron ohungarumlaut -18\\r\\nKPX rcaron omacron -18\\r\\nKPX rcaron oslash -18\\r\\nKPX rcaron otilde -18\\r\\nKPX rcaron p -10\\r\\nKPX rcaron period -100\\r\\nKPX rcaron q -18\\r\\nKPX rcaron v -10\\r\\nKPX rcommaaccent c -18\\r\\nKPX rcommaaccent cacute -18\\r\\nKPX rcommaaccent ccaron -18\\r\\nKPX rcommaaccent ccedilla -18\\r\\nKPX rcommaaccent comma -92\\r\\nKPX rcommaaccent e -18\\r\\nKPX rcommaaccent eacute -18\\r\\nKPX rcommaaccent ecaron -18\\r\\nKPX rcommaaccent ecircumflex -18\\r\\nKPX rcommaaccent edieresis -18\\r\\nKPX rcommaaccent edotaccent -18\\r\\nKPX rcommaaccent egrave -18\\r\\nKPX rcommaaccent emacron -18\\r\\nKPX rcommaaccent eogonek -18\\r\\nKPX rcommaaccent g -10\\r\\nKPX rcommaaccent gbreve -10\\r\\nKPX rcommaaccent gcommaaccent -10\\r\\nKPX rcommaaccent hyphen -37\\r\\nKPX rcommaaccent n -15\\r\\nKPX rcommaaccent nacute -15\\r\\nKPX rcommaaccent ncaron -15\\r\\nKPX rcommaaccent ncommaaccent -15\\r\\nKPX rcommaaccent ntilde -15\\r\\nKPX rcommaaccent o -18\\r\\nKPX rcommaaccent oacute -18\\r\\nKPX rcommaaccent ocircumflex -18\\r\\nKPX rcommaaccent odieresis -18\\r\\nKPX rcommaaccent ograve -18\\r\\nKPX rcommaaccent ohungarumlaut -18\\r\\nKPX rcommaaccent omacron -18\\r\\nKPX rcommaaccent oslash -18\\r\\nKPX rcommaaccent otilde -18\\r\\nKPX rcommaaccent p -10\\r\\nKPX rcommaaccent period -100\\r\\nKPX rcommaaccent q -18\\r\\nKPX rcommaaccent v -10\\r\\nKPX space A -55\\r\\nKPX space Aacute -55\\r\\nKPX space Abreve -55\\r\\nKPX space Acircumflex -55\\r\\nKPX space Adieresis -55\\r\\nKPX space Agrave -55\\r\\nKPX space Amacron -55\\r\\nKPX space Aogonek -55\\r\\nKPX space Aring -55\\r\\nKPX space Atilde -55\\r\\nKPX space T -30\\r\\nKPX space Tcaron -30\\r\\nKPX space Tcommaaccent -30\\r\\nKPX space V -45\\r\\nKPX space W -30\\r\\nKPX space Y -55\\r\\nKPX space Yacute -55\\r\\nKPX space Ydieresis -55\\r\\nKPX v a -10\\r\\nKPX v aacute -10\\r\\nKPX v abreve -10\\r\\nKPX v acircumflex -10\\r\\nKPX v adieresis -10\\r\\nKPX v agrave -10\\r\\nKPX v amacron -10\\r\\nKPX v aogonek -10\\r\\nKPX v aring -10\\r\\nKPX v atilde -10\\r\\nKPX v comma -55\\r\\nKPX v e -10\\r\\nKPX v eacute -10\\r\\nKPX v ecaron -10\\r\\nKPX v ecircumflex -10\\r\\nKPX v edieresis -10\\r\\nKPX v edotaccent -10\\r\\nKPX v egrave -10\\r\\nKPX v emacron -10\\r\\nKPX v eogonek -10\\r\\nKPX v o -10\\r\\nKPX v oacute -10\\r\\nKPX v ocircumflex -10\\r\\nKPX v odieresis -10\\r\\nKPX v ograve -10\\r\\nKPX v ohungarumlaut -10\\r\\nKPX v omacron -10\\r\\nKPX v oslash -10\\r\\nKPX v otilde -10\\r\\nKPX v period -70\\r\\nKPX w comma -55\\r\\nKPX w o -10\\r\\nKPX w oacute -10\\r\\nKPX w ocircumflex -10\\r\\nKPX w odieresis -10\\r\\nKPX w ograve -10\\r\\nKPX w ohungarumlaut -10\\r\\nKPX w omacron -10\\r\\nKPX w oslash -10\\r\\nKPX w otilde -10\\r\\nKPX w period -70\\r\\nKPX y comma -55\\r\\nKPX y e -10\\r\\nKPX y eacute -10\\r\\nKPX y ecaron -10\\r\\nKPX y ecircumflex -10\\r\\nKPX y edieresis -10\\r\\nKPX y edotaccent -10\\r\\nKPX y egrave -10\\r\\nKPX y emacron -10\\r\\nKPX y eogonek -10\\r\\nKPX y o -25\\r\\nKPX y oacute -25\\r\\nKPX y ocircumflex -25\\r\\nKPX y odieresis -25\\r\\nKPX y ograve -25\\r\\nKPX y ohungarumlaut -25\\r\\nKPX y omacron -25\\r\\nKPX y oslash -25\\r\\nKPX y otilde -25\\r\\nKPX y period -70\\r\\nKPX yacute comma -55\\r\\nKPX yacute e -10\\r\\nKPX yacute eacute -10\\r\\nKPX yacute ecaron -10\\r\\nKPX yacute ecircumflex -10\\r\\nKPX yacute edieresis -10\\r\\nKPX yacute edotaccent -10\\r\\nKPX yacute egrave -10\\r\\nKPX yacute emacron -10\\r\\nKPX yacute eogonek -10\\r\\nKPX yacute o -25\\r\\nKPX yacute oacute -25\\r\\nKPX yacute ocircumflex -25\\r\\nKPX yacute odieresis -25\\r\\nKPX yacute ograve -25\\r\\nKPX yacute ohungarumlaut -25\\r\\nKPX yacute omacron -25\\r\\nKPX yacute oslash -25\\r\\nKPX yacute otilde -25\\r\\nKPX yacute period -70\\r\\nKPX ydieresis comma -55\\r\\nKPX ydieresis e -10\\r\\nKPX ydieresis eacute -10\\r\\nKPX ydieresis ecaron -10\\r\\nKPX ydieresis ecircumflex -10\\r\\nKPX ydieresis edieresis -10\\r\\nKPX ydieresis edotaccent -10\\r\\nKPX ydieresis egrave -10\\r\\nKPX ydieresis emacron -10\\r\\nKPX ydieresis eogonek -10\\r\\nKPX ydieresis o -25\\r\\nKPX ydieresis oacute -25\\r\\nKPX ydieresis ocircumflex -25\\r\\nKPX ydieresis odieresis -25\\r\\nKPX ydieresis ograve -25\\r\\nKPX ydieresis ohungarumlaut -25\\r\\nKPX ydieresis omacron -25\\r\\nKPX ydieresis oslash -25\\r\\nKPX ydieresis otilde -25\\r\\nKPX ydieresis period -70\\r\\nEndKernPairs\\r\\nEndKernData\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Times-Bold.afm?`)},"./node_modules/pdfkit/js/data/Times-BoldItalic.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nComment Creation Date: Thu May  1 13:04:06 1997\\r\\nComment UniqueID 43066\\r\\nComment VMusage 45874 56899\\r\\nFontName Times-BoldItalic\\r\\nFullName Times Bold Italic\\r\\nFamilyName Times\\r\\nWeight Bold\\r\\nItalicAngle -15\\r\\nIsFixedPitch false\\r\\nCharacterSet ExtendedRoman\\r\\nFontBBox -200 -218 996 921 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 002.000\\r\\nNotice Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.\\r\\nEncodingScheme AdobeStandardEncoding\\r\\nCapHeight 669\\r\\nXHeight 462\\r\\nAscender 683\\r\\nDescender -217\\r\\nStdHW 42\\r\\nStdVW 121\\r\\nStartCharMetrics 315\\r\\nC 32 ; WX 250 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 389 ; N exclam ; B 67 -13 370 684 ;\\r\\nC 34 ; WX 555 ; N quotedbl ; B 136 398 536 685 ;\\r\\nC 35 ; WX 500 ; N numbersign ; B -33 0 533 700 ;\\r\\nC 36 ; WX 500 ; N dollar ; B -20 -100 497 733 ;\\r\\nC 37 ; WX 833 ; N percent ; B 39 -10 793 692 ;\\r\\nC 38 ; WX 778 ; N ampersand ; B 5 -19 699 682 ;\\r\\nC 39 ; WX 333 ; N quoteright ; B 98 369 302 685 ;\\r\\nC 40 ; WX 333 ; N parenleft ; B 28 -179 344 685 ;\\r\\nC 41 ; WX 333 ; N parenright ; B -44 -179 271 685 ;\\r\\nC 42 ; WX 500 ; N asterisk ; B 65 249 456 685 ;\\r\\nC 43 ; WX 570 ; N plus ; B 33 0 537 506 ;\\r\\nC 44 ; WX 250 ; N comma ; B -60 -182 144 134 ;\\r\\nC 45 ; WX 333 ; N hyphen ; B 2 166 271 282 ;\\r\\nC 46 ; WX 250 ; N period ; B -9 -13 139 135 ;\\r\\nC 47 ; WX 278 ; N slash ; B -64 -18 342 685 ;\\r\\nC 48 ; WX 500 ; N zero ; B 17 -14 477 683 ;\\r\\nC 49 ; WX 500 ; N one ; B 5 0 419 683 ;\\r\\nC 50 ; WX 500 ; N two ; B -27 0 446 683 ;\\r\\nC 51 ; WX 500 ; N three ; B -15 -13 450 683 ;\\r\\nC 52 ; WX 500 ; N four ; B -15 0 503 683 ;\\r\\nC 53 ; WX 500 ; N five ; B -11 -13 487 669 ;\\r\\nC 54 ; WX 500 ; N six ; B 23 -15 509 679 ;\\r\\nC 55 ; WX 500 ; N seven ; B 52 0 525 669 ;\\r\\nC 56 ; WX 500 ; N eight ; B 3 -13 476 683 ;\\r\\nC 57 ; WX 500 ; N nine ; B -12 -10 475 683 ;\\r\\nC 58 ; WX 333 ; N colon ; B 23 -13 264 459 ;\\r\\nC 59 ; WX 333 ; N semicolon ; B -25 -183 264 459 ;\\r\\nC 60 ; WX 570 ; N less ; B 31 -8 539 514 ;\\r\\nC 61 ; WX 570 ; N equal ; B 33 107 537 399 ;\\r\\nC 62 ; WX 570 ; N greater ; B 31 -8 539 514 ;\\r\\nC 63 ; WX 500 ; N question ; B 79 -13 470 684 ;\\r\\nC 64 ; WX 832 ; N at ; B 63 -18 770 685 ;\\r\\nC 65 ; WX 667 ; N A ; B -67 0 593 683 ;\\r\\nC 66 ; WX 667 ; N B ; B -24 0 624 669 ;\\r\\nC 67 ; WX 667 ; N C ; B 32 -18 677 685 ;\\r\\nC 68 ; WX 722 ; N D ; B -46 0 685 669 ;\\r\\nC 69 ; WX 667 ; N E ; B -27 0 653 669 ;\\r\\nC 70 ; WX 667 ; N F ; B -13 0 660 669 ;\\r\\nC 71 ; WX 722 ; N G ; B 21 -18 706 685 ;\\r\\nC 72 ; WX 778 ; N H ; B -24 0 799 669 ;\\r\\nC 73 ; WX 389 ; N I ; B -32 0 406 669 ;\\r\\nC 74 ; WX 500 ; N J ; B -46 -99 524 669 ;\\r\\nC 75 ; WX 667 ; N K ; B -21 0 702 669 ;\\r\\nC 76 ; WX 611 ; N L ; B -22 0 590 669 ;\\r\\nC 77 ; WX 889 ; N M ; B -29 -12 917 669 ;\\r\\nC 78 ; WX 722 ; N N ; B -27 -15 748 669 ;\\r\\nC 79 ; WX 722 ; N O ; B 27 -18 691 685 ;\\r\\nC 80 ; WX 611 ; N P ; B -27 0 613 669 ;\\r\\nC 81 ; WX 722 ; N Q ; B 27 -208 691 685 ;\\r\\nC 82 ; WX 667 ; N R ; B -29 0 623 669 ;\\r\\nC 83 ; WX 556 ; N S ; B 2 -18 526 685 ;\\r\\nC 84 ; WX 611 ; N T ; B 50 0 650 669 ;\\r\\nC 85 ; WX 722 ; N U ; B 67 -18 744 669 ;\\r\\nC 86 ; WX 667 ; N V ; B 65 -18 715 669 ;\\r\\nC 87 ; WX 889 ; N W ; B 65 -18 940 669 ;\\r\\nC 88 ; WX 667 ; N X ; B -24 0 694 669 ;\\r\\nC 89 ; WX 611 ; N Y ; B 73 0 659 669 ;\\r\\nC 90 ; WX 611 ; N Z ; B -11 0 590 669 ;\\r\\nC 91 ; WX 333 ; N bracketleft ; B -37 -159 362 674 ;\\r\\nC 92 ; WX 278 ; N backslash ; B -1 -18 279 685 ;\\r\\nC 93 ; WX 333 ; N bracketright ; B -56 -157 343 674 ;\\r\\nC 94 ; WX 570 ; N asciicircum ; B 67 304 503 669 ;\\r\\nC 95 ; WX 500 ; N underscore ; B 0 -125 500 -75 ;\\r\\nC 96 ; WX 333 ; N quoteleft ; B 128 369 332 685 ;\\r\\nC 97 ; WX 500 ; N a ; B -21 -14 455 462 ;\\r\\nC 98 ; WX 500 ; N b ; B -14 -13 444 699 ;\\r\\nC 99 ; WX 444 ; N c ; B -5 -13 392 462 ;\\r\\nC 100 ; WX 500 ; N d ; B -21 -13 517 699 ;\\r\\nC 101 ; WX 444 ; N e ; B 5 -13 398 462 ;\\r\\nC 102 ; WX 333 ; N f ; B -169 -205 446 698 ; L i fi ; L l fl ;\\r\\nC 103 ; WX 500 ; N g ; B -52 -203 478 462 ;\\r\\nC 104 ; WX 556 ; N h ; B -13 -9 498 699 ;\\r\\nC 105 ; WX 278 ; N i ; B 2 -9 263 684 ;\\r\\nC 106 ; WX 278 ; N j ; B -189 -207 279 684 ;\\r\\nC 107 ; WX 500 ; N k ; B -23 -8 483 699 ;\\r\\nC 108 ; WX 278 ; N l ; B 2 -9 290 699 ;\\r\\nC 109 ; WX 778 ; N m ; B -14 -9 722 462 ;\\r\\nC 110 ; WX 556 ; N n ; B -6 -9 493 462 ;\\r\\nC 111 ; WX 500 ; N o ; B -3 -13 441 462 ;\\r\\nC 112 ; WX 500 ; N p ; B -120 -205 446 462 ;\\r\\nC 113 ; WX 500 ; N q ; B 1 -205 471 462 ;\\r\\nC 114 ; WX 389 ; N r ; B -21 0 389 462 ;\\r\\nC 115 ; WX 389 ; N s ; B -19 -13 333 462 ;\\r\\nC 116 ; WX 278 ; N t ; B -11 -9 281 594 ;\\r\\nC 117 ; WX 556 ; N u ; B 15 -9 492 462 ;\\r\\nC 118 ; WX 444 ; N v ; B 16 -13 401 462 ;\\r\\nC 119 ; WX 667 ; N w ; B 16 -13 614 462 ;\\r\\nC 120 ; WX 500 ; N x ; B -46 -13 469 462 ;\\r\\nC 121 ; WX 444 ; N y ; B -94 -205 392 462 ;\\r\\nC 122 ; WX 389 ; N z ; B -43 -78 368 449 ;\\r\\nC 123 ; WX 348 ; N braceleft ; B 5 -187 436 686 ;\\r\\nC 124 ; WX 220 ; N bar ; B 66 -218 154 782 ;\\r\\nC 125 ; WX 348 ; N braceright ; B -129 -187 302 686 ;\\r\\nC 126 ; WX 570 ; N asciitilde ; B 54 173 516 333 ;\\r\\nC 161 ; WX 389 ; N exclamdown ; B 19 -205 322 492 ;\\r\\nC 162 ; WX 500 ; N cent ; B 42 -143 439 576 ;\\r\\nC 163 ; WX 500 ; N sterling ; B -32 -12 510 683 ;\\r\\nC 164 ; WX 167 ; N fraction ; B -169 -14 324 683 ;\\r\\nC 165 ; WX 500 ; N yen ; B 33 0 628 669 ;\\r\\nC 166 ; WX 500 ; N florin ; B -87 -156 537 707 ;\\r\\nC 167 ; WX 500 ; N section ; B 36 -143 459 685 ;\\r\\nC 168 ; WX 500 ; N currency ; B -26 34 526 586 ;\\r\\nC 169 ; WX 278 ; N quotesingle ; B 128 398 268 685 ;\\r\\nC 170 ; WX 500 ; N quotedblleft ; B 53 369 513 685 ;\\r\\nC 171 ; WX 500 ; N guillemotleft ; B 12 32 468 415 ;\\r\\nC 172 ; WX 333 ; N guilsinglleft ; B 32 32 303 415 ;\\r\\nC 173 ; WX 333 ; N guilsinglright ; B 10 32 281 415 ;\\r\\nC 174 ; WX 556 ; N fi ; B -188 -205 514 703 ;\\r\\nC 175 ; WX 556 ; N fl ; B -186 -205 553 704 ;\\r\\nC 177 ; WX 500 ; N endash ; B -40 178 477 269 ;\\r\\nC 178 ; WX 500 ; N dagger ; B 91 -145 494 685 ;\\r\\nC 179 ; WX 500 ; N daggerdbl ; B 10 -139 493 685 ;\\r\\nC 180 ; WX 250 ; N periodcentered ; B 51 257 199 405 ;\\r\\nC 182 ; WX 500 ; N paragraph ; B -57 -193 562 669 ;\\r\\nC 183 ; WX 350 ; N bullet ; B 0 175 350 525 ;\\r\\nC 184 ; WX 333 ; N quotesinglbase ; B -5 -182 199 134 ;\\r\\nC 185 ; WX 500 ; N quotedblbase ; B -57 -182 403 134 ;\\r\\nC 186 ; WX 500 ; N quotedblright ; B 53 369 513 685 ;\\r\\nC 187 ; WX 500 ; N guillemotright ; B 12 32 468 415 ;\\r\\nC 188 ; WX 1000 ; N ellipsis ; B 40 -13 852 135 ;\\r\\nC 189 ; WX 1000 ; N perthousand ; B 7 -29 996 706 ;\\r\\nC 191 ; WX 500 ; N questiondown ; B 30 -205 421 492 ;\\r\\nC 193 ; WX 333 ; N grave ; B 85 516 297 697 ;\\r\\nC 194 ; WX 333 ; N acute ; B 139 516 379 697 ;\\r\\nC 195 ; WX 333 ; N circumflex ; B 40 516 367 690 ;\\r\\nC 196 ; WX 333 ; N tilde ; B 48 536 407 655 ;\\r\\nC 197 ; WX 333 ; N macron ; B 51 553 393 623 ;\\r\\nC 198 ; WX 333 ; N breve ; B 71 516 387 678 ;\\r\\nC 199 ; WX 333 ; N dotaccent ; B 163 550 298 684 ;\\r\\nC 200 ; WX 333 ; N dieresis ; B 55 550 402 684 ;\\r\\nC 202 ; WX 333 ; N ring ; B 127 516 340 729 ;\\r\\nC 203 ; WX 333 ; N cedilla ; B -80 -218 156 5 ;\\r\\nC 205 ; WX 333 ; N hungarumlaut ; B 69 516 498 697 ;\\r\\nC 206 ; WX 333 ; N ogonek ; B 15 -183 244 34 ;\\r\\nC 207 ; WX 333 ; N caron ; B 79 516 411 690 ;\\r\\nC 208 ; WX 1000 ; N emdash ; B -40 178 977 269 ;\\r\\nC 225 ; WX 944 ; N AE ; B -64 0 918 669 ;\\r\\nC 227 ; WX 266 ; N ordfeminine ; B 16 399 330 685 ;\\r\\nC 232 ; WX 611 ; N Lslash ; B -22 0 590 669 ;\\r\\nC 233 ; WX 722 ; N Oslash ; B 27 -125 691 764 ;\\r\\nC 234 ; WX 944 ; N OE ; B 23 -8 946 677 ;\\r\\nC 235 ; WX 300 ; N ordmasculine ; B 56 400 347 685 ;\\r\\nC 241 ; WX 722 ; N ae ; B -5 -13 673 462 ;\\r\\nC 245 ; WX 278 ; N dotlessi ; B 2 -9 238 462 ;\\r\\nC 248 ; WX 278 ; N lslash ; B -7 -9 307 699 ;\\r\\nC 249 ; WX 500 ; N oslash ; B -3 -119 441 560 ;\\r\\nC 250 ; WX 722 ; N oe ; B 6 -13 674 462 ;\\r\\nC 251 ; WX 500 ; N germandbls ; B -200 -200 473 705 ;\\r\\nC -1 ; WX 389 ; N Idieresis ; B -32 0 450 862 ;\\r\\nC -1 ; WX 444 ; N eacute ; B 5 -13 435 697 ;\\r\\nC -1 ; WX 500 ; N abreve ; B -21 -14 471 678 ;\\r\\nC -1 ; WX 556 ; N uhungarumlaut ; B 15 -9 610 697 ;\\r\\nC -1 ; WX 444 ; N ecaron ; B 5 -13 467 690 ;\\r\\nC -1 ; WX 611 ; N Ydieresis ; B 73 0 659 862 ;\\r\\nC -1 ; WX 570 ; N divide ; B 33 -29 537 535 ;\\r\\nC -1 ; WX 611 ; N Yacute ; B 73 0 659 904 ;\\r\\nC -1 ; WX 667 ; N Acircumflex ; B -67 0 593 897 ;\\r\\nC -1 ; WX 500 ; N aacute ; B -21 -14 463 697 ;\\r\\nC -1 ; WX 722 ; N Ucircumflex ; B 67 -18 744 897 ;\\r\\nC -1 ; WX 444 ; N yacute ; B -94 -205 435 697 ;\\r\\nC -1 ; WX 389 ; N scommaaccent ; B -19 -218 333 462 ;\\r\\nC -1 ; WX 444 ; N ecircumflex ; B 5 -13 423 690 ;\\r\\nC -1 ; WX 722 ; N Uring ; B 67 -18 744 921 ;\\r\\nC -1 ; WX 722 ; N Udieresis ; B 67 -18 744 862 ;\\r\\nC -1 ; WX 500 ; N aogonek ; B -21 -183 455 462 ;\\r\\nC -1 ; WX 722 ; N Uacute ; B 67 -18 744 904 ;\\r\\nC -1 ; WX 556 ; N uogonek ; B 15 -183 492 462 ;\\r\\nC -1 ; WX 667 ; N Edieresis ; B -27 0 653 862 ;\\r\\nC -1 ; WX 722 ; N Dcroat ; B -31 0 700 669 ;\\r\\nC -1 ; WX 250 ; N commaaccent ; B -36 -218 131 -50 ;\\r\\nC -1 ; WX 747 ; N copyright ; B 30 -18 718 685 ;\\r\\nC -1 ; WX 667 ; N Emacron ; B -27 0 653 830 ;\\r\\nC -1 ; WX 444 ; N ccaron ; B -5 -13 467 690 ;\\r\\nC -1 ; WX 500 ; N aring ; B -21 -14 455 729 ;\\r\\nC -1 ; WX 722 ; N Ncommaaccent ; B -27 -218 748 669 ;\\r\\nC -1 ; WX 278 ; N lacute ; B 2 -9 392 904 ;\\r\\nC -1 ; WX 500 ; N agrave ; B -21 -14 455 697 ;\\r\\nC -1 ; WX 611 ; N Tcommaaccent ; B 50 -218 650 669 ;\\r\\nC -1 ; WX 667 ; N Cacute ; B 32 -18 677 904 ;\\r\\nC -1 ; WX 500 ; N atilde ; B -21 -14 491 655 ;\\r\\nC -1 ; WX 667 ; N Edotaccent ; B -27 0 653 862 ;\\r\\nC -1 ; WX 389 ; N scaron ; B -19 -13 424 690 ;\\r\\nC -1 ; WX 389 ; N scedilla ; B -19 -218 333 462 ;\\r\\nC -1 ; WX 278 ; N iacute ; B 2 -9 352 697 ;\\r\\nC -1 ; WX 494 ; N lozenge ; B 10 0 484 745 ;\\r\\nC -1 ; WX 667 ; N Rcaron ; B -29 0 623 897 ;\\r\\nC -1 ; WX 722 ; N Gcommaaccent ; B 21 -218 706 685 ;\\r\\nC -1 ; WX 556 ; N ucircumflex ; B 15 -9 492 690 ;\\r\\nC -1 ; WX 500 ; N acircumflex ; B -21 -14 455 690 ;\\r\\nC -1 ; WX 667 ; N Amacron ; B -67 0 593 830 ;\\r\\nC -1 ; WX 389 ; N rcaron ; B -21 0 424 690 ;\\r\\nC -1 ; WX 444 ; N ccedilla ; B -5 -218 392 462 ;\\r\\nC -1 ; WX 611 ; N Zdotaccent ; B -11 0 590 862 ;\\r\\nC -1 ; WX 611 ; N Thorn ; B -27 0 573 669 ;\\r\\nC -1 ; WX 722 ; N Omacron ; B 27 -18 691 830 ;\\r\\nC -1 ; WX 667 ; N Racute ; B -29 0 623 904 ;\\r\\nC -1 ; WX 556 ; N Sacute ; B 2 -18 531 904 ;\\r\\nC -1 ; WX 608 ; N dcaron ; B -21 -13 675 708 ;\\r\\nC -1 ; WX 722 ; N Umacron ; B 67 -18 744 830 ;\\r\\nC -1 ; WX 556 ; N uring ; B 15 -9 492 729 ;\\r\\nC -1 ; WX 300 ; N threesuperior ; B 17 265 321 683 ;\\r\\nC -1 ; WX 722 ; N Ograve ; B 27 -18 691 904 ;\\r\\nC -1 ; WX 667 ; N Agrave ; B -67 0 593 904 ;\\r\\nC -1 ; WX 667 ; N Abreve ; B -67 0 593 885 ;\\r\\nC -1 ; WX 570 ; N multiply ; B 48 16 522 490 ;\\r\\nC -1 ; WX 556 ; N uacute ; B 15 -9 492 697 ;\\r\\nC -1 ; WX 611 ; N Tcaron ; B 50 0 650 897 ;\\r\\nC -1 ; WX 494 ; N partialdiff ; B 11 -21 494 750 ;\\r\\nC -1 ; WX 444 ; N ydieresis ; B -94 -205 443 655 ;\\r\\nC -1 ; WX 722 ; N Nacute ; B -27 -15 748 904 ;\\r\\nC -1 ; WX 278 ; N icircumflex ; B -3 -9 324 690 ;\\r\\nC -1 ; WX 667 ; N Ecircumflex ; B -27 0 653 897 ;\\r\\nC -1 ; WX 500 ; N adieresis ; B -21 -14 476 655 ;\\r\\nC -1 ; WX 444 ; N edieresis ; B 5 -13 448 655 ;\\r\\nC -1 ; WX 444 ; N cacute ; B -5 -13 435 697 ;\\r\\nC -1 ; WX 556 ; N nacute ; B -6 -9 493 697 ;\\r\\nC -1 ; WX 556 ; N umacron ; B 15 -9 492 623 ;\\r\\nC -1 ; WX 722 ; N Ncaron ; B -27 -15 748 897 ;\\r\\nC -1 ; WX 389 ; N Iacute ; B -32 0 432 904 ;\\r\\nC -1 ; WX 570 ; N plusminus ; B 33 0 537 506 ;\\r\\nC -1 ; WX 220 ; N brokenbar ; B 66 -143 154 707 ;\\r\\nC -1 ; WX 747 ; N registered ; B 30 -18 718 685 ;\\r\\nC -1 ; WX 722 ; N Gbreve ; B 21 -18 706 885 ;\\r\\nC -1 ; WX 389 ; N Idotaccent ; B -32 0 406 862 ;\\r\\nC -1 ; WX 600 ; N summation ; B 14 -10 585 706 ;\\r\\nC -1 ; WX 667 ; N Egrave ; B -27 0 653 904 ;\\r\\nC -1 ; WX 389 ; N racute ; B -21 0 407 697 ;\\r\\nC -1 ; WX 500 ; N omacron ; B -3 -13 462 623 ;\\r\\nC -1 ; WX 611 ; N Zacute ; B -11 0 590 904 ;\\r\\nC -1 ; WX 611 ; N Zcaron ; B -11 0 590 897 ;\\r\\nC -1 ; WX 549 ; N greaterequal ; B 26 0 523 704 ;\\r\\nC -1 ; WX 722 ; N Eth ; B -31 0 700 669 ;\\r\\nC -1 ; WX 667 ; N Ccedilla ; B 32 -218 677 685 ;\\r\\nC -1 ; WX 278 ; N lcommaaccent ; B -42 -218 290 699 ;\\r\\nC -1 ; WX 366 ; N tcaron ; B -11 -9 434 754 ;\\r\\nC -1 ; WX 444 ; N eogonek ; B 5 -183 398 462 ;\\r\\nC -1 ; WX 722 ; N Uogonek ; B 67 -183 744 669 ;\\r\\nC -1 ; WX 667 ; N Aacute ; B -67 0 593 904 ;\\r\\nC -1 ; WX 667 ; N Adieresis ; B -67 0 593 862 ;\\r\\nC -1 ; WX 444 ; N egrave ; B 5 -13 398 697 ;\\r\\nC -1 ; WX 389 ; N zacute ; B -43 -78 407 697 ;\\r\\nC -1 ; WX 278 ; N iogonek ; B -20 -183 263 684 ;\\r\\nC -1 ; WX 722 ; N Oacute ; B 27 -18 691 904 ;\\r\\nC -1 ; WX 500 ; N oacute ; B -3 -13 463 697 ;\\r\\nC -1 ; WX 500 ; N amacron ; B -21 -14 467 623 ;\\r\\nC -1 ; WX 389 ; N sacute ; B -19 -13 407 697 ;\\r\\nC -1 ; WX 278 ; N idieresis ; B 2 -9 364 655 ;\\r\\nC -1 ; WX 722 ; N Ocircumflex ; B 27 -18 691 897 ;\\r\\nC -1 ; WX 722 ; N Ugrave ; B 67 -18 744 904 ;\\r\\nC -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;\\r\\nC -1 ; WX 500 ; N thorn ; B -120 -205 446 699 ;\\r\\nC -1 ; WX 300 ; N twosuperior ; B 2 274 313 683 ;\\r\\nC -1 ; WX 722 ; N Odieresis ; B 27 -18 691 862 ;\\r\\nC -1 ; WX 576 ; N mu ; B -60 -207 516 449 ;\\r\\nC -1 ; WX 278 ; N igrave ; B 2 -9 259 697 ;\\r\\nC -1 ; WX 500 ; N ohungarumlaut ; B -3 -13 582 697 ;\\r\\nC -1 ; WX 667 ; N Eogonek ; B -27 -183 653 669 ;\\r\\nC -1 ; WX 500 ; N dcroat ; B -21 -13 552 699 ;\\r\\nC -1 ; WX 750 ; N threequarters ; B 7 -14 726 683 ;\\r\\nC -1 ; WX 556 ; N Scedilla ; B 2 -218 526 685 ;\\r\\nC -1 ; WX 382 ; N lcaron ; B 2 -9 448 708 ;\\r\\nC -1 ; WX 667 ; N Kcommaaccent ; B -21 -218 702 669 ;\\r\\nC -1 ; WX 611 ; N Lacute ; B -22 0 590 904 ;\\r\\nC -1 ; WX 1000 ; N trademark ; B 32 263 968 669 ;\\r\\nC -1 ; WX 444 ; N edotaccent ; B 5 -13 398 655 ;\\r\\nC -1 ; WX 389 ; N Igrave ; B -32 0 406 904 ;\\r\\nC -1 ; WX 389 ; N Imacron ; B -32 0 461 830 ;\\r\\nC -1 ; WX 611 ; N Lcaron ; B -22 0 671 718 ;\\r\\nC -1 ; WX 750 ; N onehalf ; B -9 -14 723 683 ;\\r\\nC -1 ; WX 549 ; N lessequal ; B 29 0 526 704 ;\\r\\nC -1 ; WX 500 ; N ocircumflex ; B -3 -13 451 690 ;\\r\\nC -1 ; WX 556 ; N ntilde ; B -6 -9 504 655 ;\\r\\nC -1 ; WX 722 ; N Uhungarumlaut ; B 67 -18 744 904 ;\\r\\nC -1 ; WX 667 ; N Eacute ; B -27 0 653 904 ;\\r\\nC -1 ; WX 444 ; N emacron ; B 5 -13 439 623 ;\\r\\nC -1 ; WX 500 ; N gbreve ; B -52 -203 478 678 ;\\r\\nC -1 ; WX 750 ; N onequarter ; B 7 -14 721 683 ;\\r\\nC -1 ; WX 556 ; N Scaron ; B 2 -18 553 897 ;\\r\\nC -1 ; WX 556 ; N Scommaaccent ; B 2 -218 526 685 ;\\r\\nC -1 ; WX 722 ; N Ohungarumlaut ; B 27 -18 723 904 ;\\r\\nC -1 ; WX 400 ; N degree ; B 83 397 369 683 ;\\r\\nC -1 ; WX 500 ; N ograve ; B -3 -13 441 697 ;\\r\\nC -1 ; WX 667 ; N Ccaron ; B 32 -18 677 897 ;\\r\\nC -1 ; WX 556 ; N ugrave ; B 15 -9 492 697 ;\\r\\nC -1 ; WX 549 ; N radical ; B 10 -46 512 850 ;\\r\\nC -1 ; WX 722 ; N Dcaron ; B -46 0 685 897 ;\\r\\nC -1 ; WX 389 ; N rcommaaccent ; B -67 -218 389 462 ;\\r\\nC -1 ; WX 722 ; N Ntilde ; B -27 -15 748 862 ;\\r\\nC -1 ; WX 500 ; N otilde ; B -3 -13 491 655 ;\\r\\nC -1 ; WX 667 ; N Rcommaaccent ; B -29 -218 623 669 ;\\r\\nC -1 ; WX 611 ; N Lcommaaccent ; B -22 -218 590 669 ;\\r\\nC -1 ; WX 667 ; N Atilde ; B -67 0 593 862 ;\\r\\nC -1 ; WX 667 ; N Aogonek ; B -67 -183 604 683 ;\\r\\nC -1 ; WX 667 ; N Aring ; B -67 0 593 921 ;\\r\\nC -1 ; WX 722 ; N Otilde ; B 27 -18 691 862 ;\\r\\nC -1 ; WX 389 ; N zdotaccent ; B -43 -78 368 655 ;\\r\\nC -1 ; WX 667 ; N Ecaron ; B -27 0 653 897 ;\\r\\nC -1 ; WX 389 ; N Iogonek ; B -32 -183 406 669 ;\\r\\nC -1 ; WX 500 ; N kcommaaccent ; B -23 -218 483 699 ;\\r\\nC -1 ; WX 606 ; N minus ; B 51 209 555 297 ;\\r\\nC -1 ; WX 389 ; N Icircumflex ; B -32 0 450 897 ;\\r\\nC -1 ; WX 556 ; N ncaron ; B -6 -9 523 690 ;\\r\\nC -1 ; WX 278 ; N tcommaaccent ; B -62 -218 281 594 ;\\r\\nC -1 ; WX 606 ; N logicalnot ; B 51 108 555 399 ;\\r\\nC -1 ; WX 500 ; N odieresis ; B -3 -13 471 655 ;\\r\\nC -1 ; WX 556 ; N udieresis ; B 15 -9 499 655 ;\\r\\nC -1 ; WX 549 ; N notequal ; B 15 -49 540 570 ;\\r\\nC -1 ; WX 500 ; N gcommaaccent ; B -52 -203 478 767 ;\\r\\nC -1 ; WX 500 ; N eth ; B -3 -13 454 699 ;\\r\\nC -1 ; WX 389 ; N zcaron ; B -43 -78 424 690 ;\\r\\nC -1 ; WX 556 ; N ncommaaccent ; B -6 -218 493 462 ;\\r\\nC -1 ; WX 300 ; N onesuperior ; B 30 274 301 683 ;\\r\\nC -1 ; WX 278 ; N imacron ; B 2 -9 294 623 ;\\r\\nC -1 ; WX 500 ; N Euro ; B 0 0 0 0 ;\\r\\nEndCharMetrics\\r\\nStartKernData\\r\\nStartKernPairs 2038\\r\\nKPX A C -65\\r\\nKPX A Cacute -65\\r\\nKPX A Ccaron -65\\r\\nKPX A Ccedilla -65\\r\\nKPX A G -60\\r\\nKPX A Gbreve -60\\r\\nKPX A Gcommaaccent -60\\r\\nKPX A O -50\\r\\nKPX A Oacute -50\\r\\nKPX A Ocircumflex -50\\r\\nKPX A Odieresis -50\\r\\nKPX A Ograve -50\\r\\nKPX A Ohungarumlaut -50\\r\\nKPX A Omacron -50\\r\\nKPX A Oslash -50\\r\\nKPX A Otilde -50\\r\\nKPX A Q -55\\r\\nKPX A T -55\\r\\nKPX A Tcaron -55\\r\\nKPX A Tcommaaccent -55\\r\\nKPX A U -50\\r\\nKPX A Uacute -50\\r\\nKPX A Ucircumflex -50\\r\\nKPX A Udieresis -50\\r\\nKPX A Ugrave -50\\r\\nKPX A Uhungarumlaut -50\\r\\nKPX A Umacron -50\\r\\nKPX A Uogonek -50\\r\\nKPX A Uring -50\\r\\nKPX A V -95\\r\\nKPX A W -100\\r\\nKPX A Y -70\\r\\nKPX A Yacute -70\\r\\nKPX A Ydieresis -70\\r\\nKPX A quoteright -74\\r\\nKPX A u -30\\r\\nKPX A uacute -30\\r\\nKPX A ucircumflex -30\\r\\nKPX A udieresis -30\\r\\nKPX A ugrave -30\\r\\nKPX A uhungarumlaut -30\\r\\nKPX A umacron -30\\r\\nKPX A uogonek -30\\r\\nKPX A uring -30\\r\\nKPX A v -74\\r\\nKPX A w -74\\r\\nKPX A y -74\\r\\nKPX A yacute -74\\r\\nKPX A ydieresis -74\\r\\nKPX Aacute C -65\\r\\nKPX Aacute Cacute -65\\r\\nKPX Aacute Ccaron -65\\r\\nKPX Aacute Ccedilla -65\\r\\nKPX Aacute G -60\\r\\nKPX Aacute Gbreve -60\\r\\nKPX Aacute Gcommaaccent -60\\r\\nKPX Aacute O -50\\r\\nKPX Aacute Oacute -50\\r\\nKPX Aacute Ocircumflex -50\\r\\nKPX Aacute Odieresis -50\\r\\nKPX Aacute Ograve -50\\r\\nKPX Aacute Ohungarumlaut -50\\r\\nKPX Aacute Omacron -50\\r\\nKPX Aacute Oslash -50\\r\\nKPX Aacute Otilde -50\\r\\nKPX Aacute Q -55\\r\\nKPX Aacute T -55\\r\\nKPX Aacute Tcaron -55\\r\\nKPX Aacute Tcommaaccent -55\\r\\nKPX Aacute U -50\\r\\nKPX Aacute Uacute -50\\r\\nKPX Aacute Ucircumflex -50\\r\\nKPX Aacute Udieresis -50\\r\\nKPX Aacute Ugrave -50\\r\\nKPX Aacute Uhungarumlaut -50\\r\\nKPX Aacute Umacron -50\\r\\nKPX Aacute Uogonek -50\\r\\nKPX Aacute Uring -50\\r\\nKPX Aacute V -95\\r\\nKPX Aacute W -100\\r\\nKPX Aacute Y -70\\r\\nKPX Aacute Yacute -70\\r\\nKPX Aacute Ydieresis -70\\r\\nKPX Aacute quoteright -74\\r\\nKPX Aacute u -30\\r\\nKPX Aacute uacute -30\\r\\nKPX Aacute ucircumflex -30\\r\\nKPX Aacute udieresis -30\\r\\nKPX Aacute ugrave -30\\r\\nKPX Aacute uhungarumlaut -30\\r\\nKPX Aacute umacron -30\\r\\nKPX Aacute uogonek -30\\r\\nKPX Aacute uring -30\\r\\nKPX Aacute v -74\\r\\nKPX Aacute w -74\\r\\nKPX Aacute y -74\\r\\nKPX Aacute yacute -74\\r\\nKPX Aacute ydieresis -74\\r\\nKPX Abreve C -65\\r\\nKPX Abreve Cacute -65\\r\\nKPX Abreve Ccaron -65\\r\\nKPX Abreve Ccedilla -65\\r\\nKPX Abreve G -60\\r\\nKPX Abreve Gbreve -60\\r\\nKPX Abreve Gcommaaccent -60\\r\\nKPX Abreve O -50\\r\\nKPX Abreve Oacute -50\\r\\nKPX Abreve Ocircumflex -50\\r\\nKPX Abreve Odieresis -50\\r\\nKPX Abreve Ograve -50\\r\\nKPX Abreve Ohungarumlaut -50\\r\\nKPX Abreve Omacron -50\\r\\nKPX Abreve Oslash -50\\r\\nKPX Abreve Otilde -50\\r\\nKPX Abreve Q -55\\r\\nKPX Abreve T -55\\r\\nKPX Abreve Tcaron -55\\r\\nKPX Abreve Tcommaaccent -55\\r\\nKPX Abreve U -50\\r\\nKPX Abreve Uacute -50\\r\\nKPX Abreve Ucircumflex -50\\r\\nKPX Abreve Udieresis -50\\r\\nKPX Abreve Ugrave -50\\r\\nKPX Abreve Uhungarumlaut -50\\r\\nKPX Abreve Umacron -50\\r\\nKPX Abreve Uogonek -50\\r\\nKPX Abreve Uring -50\\r\\nKPX Abreve V -95\\r\\nKPX Abreve W -100\\r\\nKPX Abreve Y -70\\r\\nKPX Abreve Yacute -70\\r\\nKPX Abreve Ydieresis -70\\r\\nKPX Abreve quoteright -74\\r\\nKPX Abreve u -30\\r\\nKPX Abreve uacute -30\\r\\nKPX Abreve ucircumflex -30\\r\\nKPX Abreve udieresis -30\\r\\nKPX Abreve ugrave -30\\r\\nKPX Abreve uhungarumlaut -30\\r\\nKPX Abreve umacron -30\\r\\nKPX Abreve uogonek -30\\r\\nKPX Abreve uring -30\\r\\nKPX Abreve v -74\\r\\nKPX Abreve w -74\\r\\nKPX Abreve y -74\\r\\nKPX Abreve yacute -74\\r\\nKPX Abreve ydieresis -74\\r\\nKPX Acircumflex C -65\\r\\nKPX Acircumflex Cacute -65\\r\\nKPX Acircumflex Ccaron -65\\r\\nKPX Acircumflex Ccedilla -65\\r\\nKPX Acircumflex G -60\\r\\nKPX Acircumflex Gbreve -60\\r\\nKPX Acircumflex Gcommaaccent -60\\r\\nKPX Acircumflex O -50\\r\\nKPX Acircumflex Oacute -50\\r\\nKPX Acircumflex Ocircumflex -50\\r\\nKPX Acircumflex Odieresis -50\\r\\nKPX Acircumflex Ograve -50\\r\\nKPX Acircumflex Ohungarumlaut -50\\r\\nKPX Acircumflex Omacron -50\\r\\nKPX Acircumflex Oslash -50\\r\\nKPX Acircumflex Otilde -50\\r\\nKPX Acircumflex Q -55\\r\\nKPX Acircumflex T -55\\r\\nKPX Acircumflex Tcaron -55\\r\\nKPX Acircumflex Tcommaaccent -55\\r\\nKPX Acircumflex U -50\\r\\nKPX Acircumflex Uacute -50\\r\\nKPX Acircumflex Ucircumflex -50\\r\\nKPX Acircumflex Udieresis -50\\r\\nKPX Acircumflex Ugrave -50\\r\\nKPX Acircumflex Uhungarumlaut -50\\r\\nKPX Acircumflex Umacron -50\\r\\nKPX Acircumflex Uogonek -50\\r\\nKPX Acircumflex Uring -50\\r\\nKPX Acircumflex V -95\\r\\nKPX Acircumflex W -100\\r\\nKPX Acircumflex Y -70\\r\\nKPX Acircumflex Yacute -70\\r\\nKPX Acircumflex Ydieresis -70\\r\\nKPX Acircumflex quoteright -74\\r\\nKPX Acircumflex u -30\\r\\nKPX Acircumflex uacute -30\\r\\nKPX Acircumflex ucircumflex -30\\r\\nKPX Acircumflex udieresis -30\\r\\nKPX Acircumflex ugrave -30\\r\\nKPX Acircumflex uhungarumlaut -30\\r\\nKPX Acircumflex umacron -30\\r\\nKPX Acircumflex uogonek -30\\r\\nKPX Acircumflex uring -30\\r\\nKPX Acircumflex v -74\\r\\nKPX Acircumflex w -74\\r\\nKPX Acircumflex y -74\\r\\nKPX Acircumflex yacute -74\\r\\nKPX Acircumflex ydieresis -74\\r\\nKPX Adieresis C -65\\r\\nKPX Adieresis Cacute -65\\r\\nKPX Adieresis Ccaron -65\\r\\nKPX Adieresis Ccedilla -65\\r\\nKPX Adieresis G -60\\r\\nKPX Adieresis Gbreve -60\\r\\nKPX Adieresis Gcommaaccent -60\\r\\nKPX Adieresis O -50\\r\\nKPX Adieresis Oacute -50\\r\\nKPX Adieresis Ocircumflex -50\\r\\nKPX Adieresis Odieresis -50\\r\\nKPX Adieresis Ograve -50\\r\\nKPX Adieresis Ohungarumlaut -50\\r\\nKPX Adieresis Omacron -50\\r\\nKPX Adieresis Oslash -50\\r\\nKPX Adieresis Otilde -50\\r\\nKPX Adieresis Q -55\\r\\nKPX Adieresis T -55\\r\\nKPX Adieresis Tcaron -55\\r\\nKPX Adieresis Tcommaaccent -55\\r\\nKPX Adieresis U -50\\r\\nKPX Adieresis Uacute -50\\r\\nKPX Adieresis Ucircumflex -50\\r\\nKPX Adieresis Udieresis -50\\r\\nKPX Adieresis Ugrave -50\\r\\nKPX Adieresis Uhungarumlaut -50\\r\\nKPX Adieresis Umacron -50\\r\\nKPX Adieresis Uogonek -50\\r\\nKPX Adieresis Uring -50\\r\\nKPX Adieresis V -95\\r\\nKPX Adieresis W -100\\r\\nKPX Adieresis Y -70\\r\\nKPX Adieresis Yacute -70\\r\\nKPX Adieresis Ydieresis -70\\r\\nKPX Adieresis quoteright -74\\r\\nKPX Adieresis u -30\\r\\nKPX Adieresis uacute -30\\r\\nKPX Adieresis ucircumflex -30\\r\\nKPX Adieresis udieresis -30\\r\\nKPX Adieresis ugrave -30\\r\\nKPX Adieresis uhungarumlaut -30\\r\\nKPX Adieresis umacron -30\\r\\nKPX Adieresis uogonek -30\\r\\nKPX Adieresis uring -30\\r\\nKPX Adieresis v -74\\r\\nKPX Adieresis w -74\\r\\nKPX Adieresis y -74\\r\\nKPX Adieresis yacute -74\\r\\nKPX Adieresis ydieresis -74\\r\\nKPX Agrave C -65\\r\\nKPX Agrave Cacute -65\\r\\nKPX Agrave Ccaron -65\\r\\nKPX Agrave Ccedilla -65\\r\\nKPX Agrave G -60\\r\\nKPX Agrave Gbreve -60\\r\\nKPX Agrave Gcommaaccent -60\\r\\nKPX Agrave O -50\\r\\nKPX Agrave Oacute -50\\r\\nKPX Agrave Ocircumflex -50\\r\\nKPX Agrave Odieresis -50\\r\\nKPX Agrave Ograve -50\\r\\nKPX Agrave Ohungarumlaut -50\\r\\nKPX Agrave Omacron -50\\r\\nKPX Agrave Oslash -50\\r\\nKPX Agrave Otilde -50\\r\\nKPX Agrave Q -55\\r\\nKPX Agrave T -55\\r\\nKPX Agrave Tcaron -55\\r\\nKPX Agrave Tcommaaccent -55\\r\\nKPX Agrave U -50\\r\\nKPX Agrave Uacute -50\\r\\nKPX Agrave Ucircumflex -50\\r\\nKPX Agrave Udieresis -50\\r\\nKPX Agrave Ugrave -50\\r\\nKPX Agrave Uhungarumlaut -50\\r\\nKPX Agrave Umacron -50\\r\\nKPX Agrave Uogonek -50\\r\\nKPX Agrave Uring -50\\r\\nKPX Agrave V -95\\r\\nKPX Agrave W -100\\r\\nKPX Agrave Y -70\\r\\nKPX Agrave Yacute -70\\r\\nKPX Agrave Ydieresis -70\\r\\nKPX Agrave quoteright -74\\r\\nKPX Agrave u -30\\r\\nKPX Agrave uacute -30\\r\\nKPX Agrave ucircumflex -30\\r\\nKPX Agrave udieresis -30\\r\\nKPX Agrave ugrave -30\\r\\nKPX Agrave uhungarumlaut -30\\r\\nKPX Agrave umacron -30\\r\\nKPX Agrave uogonek -30\\r\\nKPX Agrave uring -30\\r\\nKPX Agrave v -74\\r\\nKPX Agrave w -74\\r\\nKPX Agrave y -74\\r\\nKPX Agrave yacute -74\\r\\nKPX Agrave ydieresis -74\\r\\nKPX Amacron C -65\\r\\nKPX Amacron Cacute -65\\r\\nKPX Amacron Ccaron -65\\r\\nKPX Amacron Ccedilla -65\\r\\nKPX Amacron G -60\\r\\nKPX Amacron Gbreve -60\\r\\nKPX Amacron Gcommaaccent -60\\r\\nKPX Amacron O -50\\r\\nKPX Amacron Oacute -50\\r\\nKPX Amacron Ocircumflex -50\\r\\nKPX Amacron Odieresis -50\\r\\nKPX Amacron Ograve -50\\r\\nKPX Amacron Ohungarumlaut -50\\r\\nKPX Amacron Omacron -50\\r\\nKPX Amacron Oslash -50\\r\\nKPX Amacron Otilde -50\\r\\nKPX Amacron Q -55\\r\\nKPX Amacron T -55\\r\\nKPX Amacron Tcaron -55\\r\\nKPX Amacron Tcommaaccent -55\\r\\nKPX Amacron U -50\\r\\nKPX Amacron Uacute -50\\r\\nKPX Amacron Ucircumflex -50\\r\\nKPX Amacron Udieresis -50\\r\\nKPX Amacron Ugrave -50\\r\\nKPX Amacron Uhungarumlaut -50\\r\\nKPX Amacron Umacron -50\\r\\nKPX Amacron Uogonek -50\\r\\nKPX Amacron Uring -50\\r\\nKPX Amacron V -95\\r\\nKPX Amacron W -100\\r\\nKPX Amacron Y -70\\r\\nKPX Amacron Yacute -70\\r\\nKPX Amacron Ydieresis -70\\r\\nKPX Amacron quoteright -74\\r\\nKPX Amacron u -30\\r\\nKPX Amacron uacute -30\\r\\nKPX Amacron ucircumflex -30\\r\\nKPX Amacron udieresis -30\\r\\nKPX Amacron ugrave -30\\r\\nKPX Amacron uhungarumlaut -30\\r\\nKPX Amacron umacron -30\\r\\nKPX Amacron uogonek -30\\r\\nKPX Amacron uring -30\\r\\nKPX Amacron v -74\\r\\nKPX Amacron w -74\\r\\nKPX Amacron y -74\\r\\nKPX Amacron yacute -74\\r\\nKPX Amacron ydieresis -74\\r\\nKPX Aogonek C -65\\r\\nKPX Aogonek Cacute -65\\r\\nKPX Aogonek Ccaron -65\\r\\nKPX Aogonek Ccedilla -65\\r\\nKPX Aogonek G -60\\r\\nKPX Aogonek Gbreve -60\\r\\nKPX Aogonek Gcommaaccent -60\\r\\nKPX Aogonek O -50\\r\\nKPX Aogonek Oacute -50\\r\\nKPX Aogonek Ocircumflex -50\\r\\nKPX Aogonek Odieresis -50\\r\\nKPX Aogonek Ograve -50\\r\\nKPX Aogonek Ohungarumlaut -50\\r\\nKPX Aogonek Omacron -50\\r\\nKPX Aogonek Oslash -50\\r\\nKPX Aogonek Otilde -50\\r\\nKPX Aogonek Q -55\\r\\nKPX Aogonek T -55\\r\\nKPX Aogonek Tcaron -55\\r\\nKPX Aogonek Tcommaaccent -55\\r\\nKPX Aogonek U -50\\r\\nKPX Aogonek Uacute -50\\r\\nKPX Aogonek Ucircumflex -50\\r\\nKPX Aogonek Udieresis -50\\r\\nKPX Aogonek Ugrave -50\\r\\nKPX Aogonek Uhungarumlaut -50\\r\\nKPX Aogonek Umacron -50\\r\\nKPX Aogonek Uogonek -50\\r\\nKPX Aogonek Uring -50\\r\\nKPX Aogonek V -95\\r\\nKPX Aogonek W -100\\r\\nKPX Aogonek Y -70\\r\\nKPX Aogonek Yacute -70\\r\\nKPX Aogonek Ydieresis -70\\r\\nKPX Aogonek quoteright -74\\r\\nKPX Aogonek u -30\\r\\nKPX Aogonek uacute -30\\r\\nKPX Aogonek ucircumflex -30\\r\\nKPX Aogonek udieresis -30\\r\\nKPX Aogonek ugrave -30\\r\\nKPX Aogonek uhungarumlaut -30\\r\\nKPX Aogonek umacron -30\\r\\nKPX Aogonek uogonek -30\\r\\nKPX Aogonek uring -30\\r\\nKPX Aogonek v -74\\r\\nKPX Aogonek w -74\\r\\nKPX Aogonek y -34\\r\\nKPX Aogonek yacute -34\\r\\nKPX Aogonek ydieresis -34\\r\\nKPX Aring C -65\\r\\nKPX Aring Cacute -65\\r\\nKPX Aring Ccaron -65\\r\\nKPX Aring Ccedilla -65\\r\\nKPX Aring G -60\\r\\nKPX Aring Gbreve -60\\r\\nKPX Aring Gcommaaccent -60\\r\\nKPX Aring O -50\\r\\nKPX Aring Oacute -50\\r\\nKPX Aring Ocircumflex -50\\r\\nKPX Aring Odieresis -50\\r\\nKPX Aring Ograve -50\\r\\nKPX Aring Ohungarumlaut -50\\r\\nKPX Aring Omacron -50\\r\\nKPX Aring Oslash -50\\r\\nKPX Aring Otilde -50\\r\\nKPX Aring Q -55\\r\\nKPX Aring T -55\\r\\nKPX Aring Tcaron -55\\r\\nKPX Aring Tcommaaccent -55\\r\\nKPX Aring U -50\\r\\nKPX Aring Uacute -50\\r\\nKPX Aring Ucircumflex -50\\r\\nKPX Aring Udieresis -50\\r\\nKPX Aring Ugrave -50\\r\\nKPX Aring Uhungarumlaut -50\\r\\nKPX Aring Umacron -50\\r\\nKPX Aring Uogonek -50\\r\\nKPX Aring Uring -50\\r\\nKPX Aring V -95\\r\\nKPX Aring W -100\\r\\nKPX Aring Y -70\\r\\nKPX Aring Yacute -70\\r\\nKPX Aring Ydieresis -70\\r\\nKPX Aring quoteright -74\\r\\nKPX Aring u -30\\r\\nKPX Aring uacute -30\\r\\nKPX Aring ucircumflex -30\\r\\nKPX Aring udieresis -30\\r\\nKPX Aring ugrave -30\\r\\nKPX Aring uhungarumlaut -30\\r\\nKPX Aring umacron -30\\r\\nKPX Aring uogonek -30\\r\\nKPX Aring uring -30\\r\\nKPX Aring v -74\\r\\nKPX Aring w -74\\r\\nKPX Aring y -74\\r\\nKPX Aring yacute -74\\r\\nKPX Aring ydieresis -74\\r\\nKPX Atilde C -65\\r\\nKPX Atilde Cacute -65\\r\\nKPX Atilde Ccaron -65\\r\\nKPX Atilde Ccedilla -65\\r\\nKPX Atilde G -60\\r\\nKPX Atilde Gbreve -60\\r\\nKPX Atilde Gcommaaccent -60\\r\\nKPX Atilde O -50\\r\\nKPX Atilde Oacute -50\\r\\nKPX Atilde Ocircumflex -50\\r\\nKPX Atilde Odieresis -50\\r\\nKPX Atilde Ograve -50\\r\\nKPX Atilde Ohungarumlaut -50\\r\\nKPX Atilde Omacron -50\\r\\nKPX Atilde Oslash -50\\r\\nKPX Atilde Otilde -50\\r\\nKPX Atilde Q -55\\r\\nKPX Atilde T -55\\r\\nKPX Atilde Tcaron -55\\r\\nKPX Atilde Tcommaaccent -55\\r\\nKPX Atilde U -50\\r\\nKPX Atilde Uacute -50\\r\\nKPX Atilde Ucircumflex -50\\r\\nKPX Atilde Udieresis -50\\r\\nKPX Atilde Ugrave -50\\r\\nKPX Atilde Uhungarumlaut -50\\r\\nKPX Atilde Umacron -50\\r\\nKPX Atilde Uogonek -50\\r\\nKPX Atilde Uring -50\\r\\nKPX Atilde V -95\\r\\nKPX Atilde W -100\\r\\nKPX Atilde Y -70\\r\\nKPX Atilde Yacute -70\\r\\nKPX Atilde Ydieresis -70\\r\\nKPX Atilde quoteright -74\\r\\nKPX Atilde u -30\\r\\nKPX Atilde uacute -30\\r\\nKPX Atilde ucircumflex -30\\r\\nKPX Atilde udieresis -30\\r\\nKPX Atilde ugrave -30\\r\\nKPX Atilde uhungarumlaut -30\\r\\nKPX Atilde umacron -30\\r\\nKPX Atilde uogonek -30\\r\\nKPX Atilde uring -30\\r\\nKPX Atilde v -74\\r\\nKPX Atilde w -74\\r\\nKPX Atilde y -74\\r\\nKPX Atilde yacute -74\\r\\nKPX Atilde ydieresis -74\\r\\nKPX B A -25\\r\\nKPX B Aacute -25\\r\\nKPX B Abreve -25\\r\\nKPX B Acircumflex -25\\r\\nKPX B Adieresis -25\\r\\nKPX B Agrave -25\\r\\nKPX B Amacron -25\\r\\nKPX B Aogonek -25\\r\\nKPX B Aring -25\\r\\nKPX B Atilde -25\\r\\nKPX B U -10\\r\\nKPX B Uacute -10\\r\\nKPX B Ucircumflex -10\\r\\nKPX B Udieresis -10\\r\\nKPX B Ugrave -10\\r\\nKPX B Uhungarumlaut -10\\r\\nKPX B Umacron -10\\r\\nKPX B Uogonek -10\\r\\nKPX B Uring -10\\r\\nKPX D A -25\\r\\nKPX D Aacute -25\\r\\nKPX D Abreve -25\\r\\nKPX D Acircumflex -25\\r\\nKPX D Adieresis -25\\r\\nKPX D Agrave -25\\r\\nKPX D Amacron -25\\r\\nKPX D Aogonek -25\\r\\nKPX D Aring -25\\r\\nKPX D Atilde -25\\r\\nKPX D V -50\\r\\nKPX D W -40\\r\\nKPX D Y -50\\r\\nKPX D Yacute -50\\r\\nKPX D Ydieresis -50\\r\\nKPX Dcaron A -25\\r\\nKPX Dcaron Aacute -25\\r\\nKPX Dcaron Abreve -25\\r\\nKPX Dcaron Acircumflex -25\\r\\nKPX Dcaron Adieresis -25\\r\\nKPX Dcaron Agrave -25\\r\\nKPX Dcaron Amacron -25\\r\\nKPX Dcaron Aogonek -25\\r\\nKPX Dcaron Aring -25\\r\\nKPX Dcaron Atilde -25\\r\\nKPX Dcaron V -50\\r\\nKPX Dcaron W -40\\r\\nKPX Dcaron Y -50\\r\\nKPX Dcaron Yacute -50\\r\\nKPX Dcaron Ydieresis -50\\r\\nKPX Dcroat A -25\\r\\nKPX Dcroat Aacute -25\\r\\nKPX Dcroat Abreve -25\\r\\nKPX Dcroat Acircumflex -25\\r\\nKPX Dcroat Adieresis -25\\r\\nKPX Dcroat Agrave -25\\r\\nKPX Dcroat Amacron -25\\r\\nKPX Dcroat Aogonek -25\\r\\nKPX Dcroat Aring -25\\r\\nKPX Dcroat Atilde -25\\r\\nKPX Dcroat V -50\\r\\nKPX Dcroat W -40\\r\\nKPX Dcroat Y -50\\r\\nKPX Dcroat Yacute -50\\r\\nKPX Dcroat Ydieresis -50\\r\\nKPX F A -100\\r\\nKPX F Aacute -100\\r\\nKPX F Abreve -100\\r\\nKPX F Acircumflex -100\\r\\nKPX F Adieresis -100\\r\\nKPX F Agrave -100\\r\\nKPX F Amacron -100\\r\\nKPX F Aogonek -100\\r\\nKPX F Aring -100\\r\\nKPX F Atilde -100\\r\\nKPX F a -95\\r\\nKPX F aacute -95\\r\\nKPX F abreve -95\\r\\nKPX F acircumflex -95\\r\\nKPX F adieresis -95\\r\\nKPX F agrave -95\\r\\nKPX F amacron -95\\r\\nKPX F aogonek -95\\r\\nKPX F aring -95\\r\\nKPX F atilde -95\\r\\nKPX F comma -129\\r\\nKPX F e -100\\r\\nKPX F eacute -100\\r\\nKPX F ecaron -100\\r\\nKPX F ecircumflex -100\\r\\nKPX F edieresis -100\\r\\nKPX F edotaccent -100\\r\\nKPX F egrave -100\\r\\nKPX F emacron -100\\r\\nKPX F eogonek -100\\r\\nKPX F i -40\\r\\nKPX F iacute -40\\r\\nKPX F icircumflex -40\\r\\nKPX F idieresis -40\\r\\nKPX F igrave -40\\r\\nKPX F imacron -40\\r\\nKPX F iogonek -40\\r\\nKPX F o -70\\r\\nKPX F oacute -70\\r\\nKPX F ocircumflex -70\\r\\nKPX F odieresis -70\\r\\nKPX F ograve -70\\r\\nKPX F ohungarumlaut -70\\r\\nKPX F omacron -70\\r\\nKPX F oslash -70\\r\\nKPX F otilde -70\\r\\nKPX F period -129\\r\\nKPX F r -50\\r\\nKPX F racute -50\\r\\nKPX F rcaron -50\\r\\nKPX F rcommaaccent -50\\r\\nKPX J A -25\\r\\nKPX J Aacute -25\\r\\nKPX J Abreve -25\\r\\nKPX J Acircumflex -25\\r\\nKPX J Adieresis -25\\r\\nKPX J Agrave -25\\r\\nKPX J Amacron -25\\r\\nKPX J Aogonek -25\\r\\nKPX J Aring -25\\r\\nKPX J Atilde -25\\r\\nKPX J a -40\\r\\nKPX J aacute -40\\r\\nKPX J abreve -40\\r\\nKPX J acircumflex -40\\r\\nKPX J adieresis -40\\r\\nKPX J agrave -40\\r\\nKPX J amacron -40\\r\\nKPX J aogonek -40\\r\\nKPX J aring -40\\r\\nKPX J atilde -40\\r\\nKPX J comma -10\\r\\nKPX J e -40\\r\\nKPX J eacute -40\\r\\nKPX J ecaron -40\\r\\nKPX J ecircumflex -40\\r\\nKPX J edieresis -40\\r\\nKPX J edotaccent -40\\r\\nKPX J egrave -40\\r\\nKPX J emacron -40\\r\\nKPX J eogonek -40\\r\\nKPX J o -40\\r\\nKPX J oacute -40\\r\\nKPX J ocircumflex -40\\r\\nKPX J odieresis -40\\r\\nKPX J ograve -40\\r\\nKPX J ohungarumlaut -40\\r\\nKPX J omacron -40\\r\\nKPX J oslash -40\\r\\nKPX J otilde -40\\r\\nKPX J period -10\\r\\nKPX J u -40\\r\\nKPX J uacute -40\\r\\nKPX J ucircumflex -40\\r\\nKPX J udieresis -40\\r\\nKPX J ugrave -40\\r\\nKPX J uhungarumlaut -40\\r\\nKPX J umacron -40\\r\\nKPX J uogonek -40\\r\\nKPX J uring -40\\r\\nKPX K O -30\\r\\nKPX K Oacute -30\\r\\nKPX K Ocircumflex -30\\r\\nKPX K Odieresis -30\\r\\nKPX K Ograve -30\\r\\nKPX K Ohungarumlaut -30\\r\\nKPX K Omacron -30\\r\\nKPX K Oslash -30\\r\\nKPX K Otilde -30\\r\\nKPX K e -25\\r\\nKPX K eacute -25\\r\\nKPX K ecaron -25\\r\\nKPX K ecircumflex -25\\r\\nKPX K edieresis -25\\r\\nKPX K edotaccent -25\\r\\nKPX K egrave -25\\r\\nKPX K emacron -25\\r\\nKPX K eogonek -25\\r\\nKPX K o -25\\r\\nKPX K oacute -25\\r\\nKPX K ocircumflex -25\\r\\nKPX K odieresis -25\\r\\nKPX K ograve -25\\r\\nKPX K ohungarumlaut -25\\r\\nKPX K omacron -25\\r\\nKPX K oslash -25\\r\\nKPX K otilde -25\\r\\nKPX K u -20\\r\\nKPX K uacute -20\\r\\nKPX K ucircumflex -20\\r\\nKPX K udieresis -20\\r\\nKPX K ugrave -20\\r\\nKPX K uhungarumlaut -20\\r\\nKPX K umacron -20\\r\\nKPX K uogonek -20\\r\\nKPX K uring -20\\r\\nKPX K y -20\\r\\nKPX K yacute -20\\r\\nKPX K ydieresis -20\\r\\nKPX Kcommaaccent O -30\\r\\nKPX Kcommaaccent Oacute -30\\r\\nKPX Kcommaaccent Ocircumflex -30\\r\\nKPX Kcommaaccent Odieresis -30\\r\\nKPX Kcommaaccent Ograve -30\\r\\nKPX Kcommaaccent Ohungarumlaut -30\\r\\nKPX Kcommaaccent Omacron -30\\r\\nKPX Kcommaaccent Oslash -30\\r\\nKPX Kcommaaccent Otilde -30\\r\\nKPX Kcommaaccent e -25\\r\\nKPX Kcommaaccent eacute -25\\r\\nKPX Kcommaaccent ecaron -25\\r\\nKPX Kcommaaccent ecircumflex -25\\r\\nKPX Kcommaaccent edieresis -25\\r\\nKPX Kcommaaccent edotaccent -25\\r\\nKPX Kcommaaccent egrave -25\\r\\nKPX Kcommaaccent emacron -25\\r\\nKPX Kcommaaccent eogonek -25\\r\\nKPX Kcommaaccent o -25\\r\\nKPX Kcommaaccent oacute -25\\r\\nKPX Kcommaaccent ocircumflex -25\\r\\nKPX Kcommaaccent odieresis -25\\r\\nKPX Kcommaaccent ograve -25\\r\\nKPX Kcommaaccent ohungarumlaut -25\\r\\nKPX Kcommaaccent omacron -25\\r\\nKPX Kcommaaccent oslash -25\\r\\nKPX Kcommaaccent otilde -25\\r\\nKPX Kcommaaccent u -20\\r\\nKPX Kcommaaccent uacute -20\\r\\nKPX Kcommaaccent ucircumflex -20\\r\\nKPX Kcommaaccent udieresis -20\\r\\nKPX Kcommaaccent ugrave -20\\r\\nKPX Kcommaaccent uhungarumlaut -20\\r\\nKPX Kcommaaccent umacron -20\\r\\nKPX Kcommaaccent uogonek -20\\r\\nKPX Kcommaaccent uring -20\\r\\nKPX Kcommaaccent y -20\\r\\nKPX Kcommaaccent yacute -20\\r\\nKPX Kcommaaccent ydieresis -20\\r\\nKPX L T -18\\r\\nKPX L Tcaron -18\\r\\nKPX L Tcommaaccent -18\\r\\nKPX L V -37\\r\\nKPX L W -37\\r\\nKPX L Y -37\\r\\nKPX L Yacute -37\\r\\nKPX L Ydieresis -37\\r\\nKPX L quoteright -55\\r\\nKPX L y -37\\r\\nKPX L yacute -37\\r\\nKPX L ydieresis -37\\r\\nKPX Lacute T -18\\r\\nKPX Lacute Tcaron -18\\r\\nKPX Lacute Tcommaaccent -18\\r\\nKPX Lacute V -37\\r\\nKPX Lacute W -37\\r\\nKPX Lacute Y -37\\r\\nKPX Lacute Yacute -37\\r\\nKPX Lacute Ydieresis -37\\r\\nKPX Lacute quoteright -55\\r\\nKPX Lacute y -37\\r\\nKPX Lacute yacute -37\\r\\nKPX Lacute ydieresis -37\\r\\nKPX Lcommaaccent T -18\\r\\nKPX Lcommaaccent Tcaron -18\\r\\nKPX Lcommaaccent Tcommaaccent -18\\r\\nKPX Lcommaaccent V -37\\r\\nKPX Lcommaaccent W -37\\r\\nKPX Lcommaaccent Y -37\\r\\nKPX Lcommaaccent Yacute -37\\r\\nKPX Lcommaaccent Ydieresis -37\\r\\nKPX Lcommaaccent quoteright -55\\r\\nKPX Lcommaaccent y -37\\r\\nKPX Lcommaaccent yacute -37\\r\\nKPX Lcommaaccent ydieresis -37\\r\\nKPX Lslash T -18\\r\\nKPX Lslash Tcaron -18\\r\\nKPX Lslash Tcommaaccent -18\\r\\nKPX Lslash V -37\\r\\nKPX Lslash W -37\\r\\nKPX Lslash Y -37\\r\\nKPX Lslash Yacute -37\\r\\nKPX Lslash Ydieresis -37\\r\\nKPX Lslash quoteright -55\\r\\nKPX Lslash y -37\\r\\nKPX Lslash yacute -37\\r\\nKPX Lslash ydieresis -37\\r\\nKPX N A -30\\r\\nKPX N Aacute -30\\r\\nKPX N Abreve -30\\r\\nKPX N Acircumflex -30\\r\\nKPX N Adieresis -30\\r\\nKPX N Agrave -30\\r\\nKPX N Amacron -30\\r\\nKPX N Aogonek -30\\r\\nKPX N Aring -30\\r\\nKPX N Atilde -30\\r\\nKPX Nacute A -30\\r\\nKPX Nacute Aacute -30\\r\\nKPX Nacute Abreve -30\\r\\nKPX Nacute Acircumflex -30\\r\\nKPX Nacute Adieresis -30\\r\\nKPX Nacute Agrave -30\\r\\nKPX Nacute Amacron -30\\r\\nKPX Nacute Aogonek -30\\r\\nKPX Nacute Aring -30\\r\\nKPX Nacute Atilde -30\\r\\nKPX Ncaron A -30\\r\\nKPX Ncaron Aacute -30\\r\\nKPX Ncaron Abreve -30\\r\\nKPX Ncaron Acircumflex -30\\r\\nKPX Ncaron Adieresis -30\\r\\nKPX Ncaron Agrave -30\\r\\nKPX Ncaron Amacron -30\\r\\nKPX Ncaron Aogonek -30\\r\\nKPX Ncaron Aring -30\\r\\nKPX Ncaron Atilde -30\\r\\nKPX Ncommaaccent A -30\\r\\nKPX Ncommaaccent Aacute -30\\r\\nKPX Ncommaaccent Abreve -30\\r\\nKPX Ncommaaccent Acircumflex -30\\r\\nKPX Ncommaaccent Adieresis -30\\r\\nKPX Ncommaaccent Agrave -30\\r\\nKPX Ncommaaccent Amacron -30\\r\\nKPX Ncommaaccent Aogonek -30\\r\\nKPX Ncommaaccent Aring -30\\r\\nKPX Ncommaaccent Atilde -30\\r\\nKPX Ntilde A -30\\r\\nKPX Ntilde Aacute -30\\r\\nKPX Ntilde Abreve -30\\r\\nKPX Ntilde Acircumflex -30\\r\\nKPX Ntilde Adieresis -30\\r\\nKPX Ntilde Agrave -30\\r\\nKPX Ntilde Amacron -30\\r\\nKPX Ntilde Aogonek -30\\r\\nKPX Ntilde Aring -30\\r\\nKPX Ntilde Atilde -30\\r\\nKPX O A -40\\r\\nKPX O Aacute -40\\r\\nKPX O Abreve -40\\r\\nKPX O Acircumflex -40\\r\\nKPX O Adieresis -40\\r\\nKPX O Agrave -40\\r\\nKPX O Amacron -40\\r\\nKPX O Aogonek -40\\r\\nKPX O Aring -40\\r\\nKPX O Atilde -40\\r\\nKPX O T -40\\r\\nKPX O Tcaron -40\\r\\nKPX O Tcommaaccent -40\\r\\nKPX O V -50\\r\\nKPX O W -50\\r\\nKPX O X -40\\r\\nKPX O Y -50\\r\\nKPX O Yacute -50\\r\\nKPX O Ydieresis -50\\r\\nKPX Oacute A -40\\r\\nKPX Oacute Aacute -40\\r\\nKPX Oacute Abreve -40\\r\\nKPX Oacute Acircumflex -40\\r\\nKPX Oacute Adieresis -40\\r\\nKPX Oacute Agrave -40\\r\\nKPX Oacute Amacron -40\\r\\nKPX Oacute Aogonek -40\\r\\nKPX Oacute Aring -40\\r\\nKPX Oacute Atilde -40\\r\\nKPX Oacute T -40\\r\\nKPX Oacute Tcaron -40\\r\\nKPX Oacute Tcommaaccent -40\\r\\nKPX Oacute V -50\\r\\nKPX Oacute W -50\\r\\nKPX Oacute X -40\\r\\nKPX Oacute Y -50\\r\\nKPX Oacute Yacute -50\\r\\nKPX Oacute Ydieresis -50\\r\\nKPX Ocircumflex A -40\\r\\nKPX Ocircumflex Aacute -40\\r\\nKPX Ocircumflex Abreve -40\\r\\nKPX Ocircumflex Acircumflex -40\\r\\nKPX Ocircumflex Adieresis -40\\r\\nKPX Ocircumflex Agrave -40\\r\\nKPX Ocircumflex Amacron -40\\r\\nKPX Ocircumflex Aogonek -40\\r\\nKPX Ocircumflex Aring -40\\r\\nKPX Ocircumflex Atilde -40\\r\\nKPX Ocircumflex T -40\\r\\nKPX Ocircumflex Tcaron -40\\r\\nKPX Ocircumflex Tcommaaccent -40\\r\\nKPX Ocircumflex V -50\\r\\nKPX Ocircumflex W -50\\r\\nKPX Ocircumflex X -40\\r\\nKPX Ocircumflex Y -50\\r\\nKPX Ocircumflex Yacute -50\\r\\nKPX Ocircumflex Ydieresis -50\\r\\nKPX Odieresis A -40\\r\\nKPX Odieresis Aacute -40\\r\\nKPX Odieresis Abreve -40\\r\\nKPX Odieresis Acircumflex -40\\r\\nKPX Odieresis Adieresis -40\\r\\nKPX Odieresis Agrave -40\\r\\nKPX Odieresis Amacron -40\\r\\nKPX Odieresis Aogonek -40\\r\\nKPX Odieresis Aring -40\\r\\nKPX Odieresis Atilde -40\\r\\nKPX Odieresis T -40\\r\\nKPX Odieresis Tcaron -40\\r\\nKPX Odieresis Tcommaaccent -40\\r\\nKPX Odieresis V -50\\r\\nKPX Odieresis W -50\\r\\nKPX Odieresis X -40\\r\\nKPX Odieresis Y -50\\r\\nKPX Odieresis Yacute -50\\r\\nKPX Odieresis Ydieresis -50\\r\\nKPX Ograve A -40\\r\\nKPX Ograve Aacute -40\\r\\nKPX Ograve Abreve -40\\r\\nKPX Ograve Acircumflex -40\\r\\nKPX Ograve Adieresis -40\\r\\nKPX Ograve Agrave -40\\r\\nKPX Ograve Amacron -40\\r\\nKPX Ograve Aogonek -40\\r\\nKPX Ograve Aring -40\\r\\nKPX Ograve Atilde -40\\r\\nKPX Ograve T -40\\r\\nKPX Ograve Tcaron -40\\r\\nKPX Ograve Tcommaaccent -40\\r\\nKPX Ograve V -50\\r\\nKPX Ograve W -50\\r\\nKPX Ograve X -40\\r\\nKPX Ograve Y -50\\r\\nKPX Ograve Yacute -50\\r\\nKPX Ograve Ydieresis -50\\r\\nKPX Ohungarumlaut A -40\\r\\nKPX Ohungarumlaut Aacute -40\\r\\nKPX Ohungarumlaut Abreve -40\\r\\nKPX Ohungarumlaut Acircumflex -40\\r\\nKPX Ohungarumlaut Adieresis -40\\r\\nKPX Ohungarumlaut Agrave -40\\r\\nKPX Ohungarumlaut Amacron -40\\r\\nKPX Ohungarumlaut Aogonek -40\\r\\nKPX Ohungarumlaut Aring -40\\r\\nKPX Ohungarumlaut Atilde -40\\r\\nKPX Ohungarumlaut T -40\\r\\nKPX Ohungarumlaut Tcaron -40\\r\\nKPX Ohungarumlaut Tcommaaccent -40\\r\\nKPX Ohungarumlaut V -50\\r\\nKPX Ohungarumlaut W -50\\r\\nKPX Ohungarumlaut X -40\\r\\nKPX Ohungarumlaut Y -50\\r\\nKPX Ohungarumlaut Yacute -50\\r\\nKPX Ohungarumlaut Ydieresis -50\\r\\nKPX Omacron A -40\\r\\nKPX Omacron Aacute -40\\r\\nKPX Omacron Abreve -40\\r\\nKPX Omacron Acircumflex -40\\r\\nKPX Omacron Adieresis -40\\r\\nKPX Omacron Agrave -40\\r\\nKPX Omacron Amacron -40\\r\\nKPX Omacron Aogonek -40\\r\\nKPX Omacron Aring -40\\r\\nKPX Omacron Atilde -40\\r\\nKPX Omacron T -40\\r\\nKPX Omacron Tcaron -40\\r\\nKPX Omacron Tcommaaccent -40\\r\\nKPX Omacron V -50\\r\\nKPX Omacron W -50\\r\\nKPX Omacron X -40\\r\\nKPX Omacron Y -50\\r\\nKPX Omacron Yacute -50\\r\\nKPX Omacron Ydieresis -50\\r\\nKPX Oslash A -40\\r\\nKPX Oslash Aacute -40\\r\\nKPX Oslash Abreve -40\\r\\nKPX Oslash Acircumflex -40\\r\\nKPX Oslash Adieresis -40\\r\\nKPX Oslash Agrave -40\\r\\nKPX Oslash Amacron -40\\r\\nKPX Oslash Aogonek -40\\r\\nKPX Oslash Aring -40\\r\\nKPX Oslash Atilde -40\\r\\nKPX Oslash T -40\\r\\nKPX Oslash Tcaron -40\\r\\nKPX Oslash Tcommaaccent -40\\r\\nKPX Oslash V -50\\r\\nKPX Oslash W -50\\r\\nKPX Oslash X -40\\r\\nKPX Oslash Y -50\\r\\nKPX Oslash Yacute -50\\r\\nKPX Oslash Ydieresis -50\\r\\nKPX Otilde A -40\\r\\nKPX Otilde Aacute -40\\r\\nKPX Otilde Abreve -40\\r\\nKPX Otilde Acircumflex -40\\r\\nKPX Otilde Adieresis -40\\r\\nKPX Otilde Agrave -40\\r\\nKPX Otilde Amacron -40\\r\\nKPX Otilde Aogonek -40\\r\\nKPX Otilde Aring -40\\r\\nKPX Otilde Atilde -40\\r\\nKPX Otilde T -40\\r\\nKPX Otilde Tcaron -40\\r\\nKPX Otilde Tcommaaccent -40\\r\\nKPX Otilde V -50\\r\\nKPX Otilde W -50\\r\\nKPX Otilde X -40\\r\\nKPX Otilde Y -50\\r\\nKPX Otilde Yacute -50\\r\\nKPX Otilde Ydieresis -50\\r\\nKPX P A -85\\r\\nKPX P Aacute -85\\r\\nKPX P Abreve -85\\r\\nKPX P Acircumflex -85\\r\\nKPX P Adieresis -85\\r\\nKPX P Agrave -85\\r\\nKPX P Amacron -85\\r\\nKPX P Aogonek -85\\r\\nKPX P Aring -85\\r\\nKPX P Atilde -85\\r\\nKPX P a -40\\r\\nKPX P aacute -40\\r\\nKPX P abreve -40\\r\\nKPX P acircumflex -40\\r\\nKPX P adieresis -40\\r\\nKPX P agrave -40\\r\\nKPX P amacron -40\\r\\nKPX P aogonek -40\\r\\nKPX P aring -40\\r\\nKPX P atilde -40\\r\\nKPX P comma -129\\r\\nKPX P e -50\\r\\nKPX P eacute -50\\r\\nKPX P ecaron -50\\r\\nKPX P ecircumflex -50\\r\\nKPX P edieresis -50\\r\\nKPX P edotaccent -50\\r\\nKPX P egrave -50\\r\\nKPX P emacron -50\\r\\nKPX P eogonek -50\\r\\nKPX P o -55\\r\\nKPX P oacute -55\\r\\nKPX P ocircumflex -55\\r\\nKPX P odieresis -55\\r\\nKPX P ograve -55\\r\\nKPX P ohungarumlaut -55\\r\\nKPX P omacron -55\\r\\nKPX P oslash -55\\r\\nKPX P otilde -55\\r\\nKPX P period -129\\r\\nKPX Q U -10\\r\\nKPX Q Uacute -10\\r\\nKPX Q Ucircumflex -10\\r\\nKPX Q Udieresis -10\\r\\nKPX Q Ugrave -10\\r\\nKPX Q Uhungarumlaut -10\\r\\nKPX Q Umacron -10\\r\\nKPX Q Uogonek -10\\r\\nKPX Q Uring -10\\r\\nKPX R O -40\\r\\nKPX R Oacute -40\\r\\nKPX R Ocircumflex -40\\r\\nKPX R Odieresis -40\\r\\nKPX R Ograve -40\\r\\nKPX R Ohungarumlaut -40\\r\\nKPX R Omacron -40\\r\\nKPX R Oslash -40\\r\\nKPX R Otilde -40\\r\\nKPX R T -30\\r\\nKPX R Tcaron -30\\r\\nKPX R Tcommaaccent -30\\r\\nKPX R U -40\\r\\nKPX R Uacute -40\\r\\nKPX R Ucircumflex -40\\r\\nKPX R Udieresis -40\\r\\nKPX R Ugrave -40\\r\\nKPX R Uhungarumlaut -40\\r\\nKPX R Umacron -40\\r\\nKPX R Uogonek -40\\r\\nKPX R Uring -40\\r\\nKPX R V -18\\r\\nKPX R W -18\\r\\nKPX R Y -18\\r\\nKPX R Yacute -18\\r\\nKPX R Ydieresis -18\\r\\nKPX Racute O -40\\r\\nKPX Racute Oacute -40\\r\\nKPX Racute Ocircumflex -40\\r\\nKPX Racute Odieresis -40\\r\\nKPX Racute Ograve -40\\r\\nKPX Racute Ohungarumlaut -40\\r\\nKPX Racute Omacron -40\\r\\nKPX Racute Oslash -40\\r\\nKPX Racute Otilde -40\\r\\nKPX Racute T -30\\r\\nKPX Racute Tcaron -30\\r\\nKPX Racute Tcommaaccent -30\\r\\nKPX Racute U -40\\r\\nKPX Racute Uacute -40\\r\\nKPX Racute Ucircumflex -40\\r\\nKPX Racute Udieresis -40\\r\\nKPX Racute Ugrave -40\\r\\nKPX Racute Uhungarumlaut -40\\r\\nKPX Racute Umacron -40\\r\\nKPX Racute Uogonek -40\\r\\nKPX Racute Uring -40\\r\\nKPX Racute V -18\\r\\nKPX Racute W -18\\r\\nKPX Racute Y -18\\r\\nKPX Racute Yacute -18\\r\\nKPX Racute Ydieresis -18\\r\\nKPX Rcaron O -40\\r\\nKPX Rcaron Oacute -40\\r\\nKPX Rcaron Ocircumflex -40\\r\\nKPX Rcaron Odieresis -40\\r\\nKPX Rcaron Ograve -40\\r\\nKPX Rcaron Ohungarumlaut -40\\r\\nKPX Rcaron Omacron -40\\r\\nKPX Rcaron Oslash -40\\r\\nKPX Rcaron Otilde -40\\r\\nKPX Rcaron T -30\\r\\nKPX Rcaron Tcaron -30\\r\\nKPX Rcaron Tcommaaccent -30\\r\\nKPX Rcaron U -40\\r\\nKPX Rcaron Uacute -40\\r\\nKPX Rcaron Ucircumflex -40\\r\\nKPX Rcaron Udieresis -40\\r\\nKPX Rcaron Ugrave -40\\r\\nKPX Rcaron Uhungarumlaut -40\\r\\nKPX Rcaron Umacron -40\\r\\nKPX Rcaron Uogonek -40\\r\\nKPX Rcaron Uring -40\\r\\nKPX Rcaron V -18\\r\\nKPX Rcaron W -18\\r\\nKPX Rcaron Y -18\\r\\nKPX Rcaron Yacute -18\\r\\nKPX Rcaron Ydieresis -18\\r\\nKPX Rcommaaccent O -40\\r\\nKPX Rcommaaccent Oacute -40\\r\\nKPX Rcommaaccent Ocircumflex -40\\r\\nKPX Rcommaaccent Odieresis -40\\r\\nKPX Rcommaaccent Ograve -40\\r\\nKPX Rcommaaccent Ohungarumlaut -40\\r\\nKPX Rcommaaccent Omacron -40\\r\\nKPX Rcommaaccent Oslash -40\\r\\nKPX Rcommaaccent Otilde -40\\r\\nKPX Rcommaaccent T -30\\r\\nKPX Rcommaaccent Tcaron -30\\r\\nKPX Rcommaaccent Tcommaaccent -30\\r\\nKPX Rcommaaccent U -40\\r\\nKPX Rcommaaccent Uacute -40\\r\\nKPX Rcommaaccent Ucircumflex -40\\r\\nKPX Rcommaaccent Udieresis -40\\r\\nKPX Rcommaaccent Ugrave -40\\r\\nKPX Rcommaaccent Uhungarumlaut -40\\r\\nKPX Rcommaaccent Umacron -40\\r\\nKPX Rcommaaccent Uogonek -40\\r\\nKPX Rcommaaccent Uring -40\\r\\nKPX Rcommaaccent V -18\\r\\nKPX Rcommaaccent W -18\\r\\nKPX Rcommaaccent Y -18\\r\\nKPX Rcommaaccent Yacute -18\\r\\nKPX Rcommaaccent Ydieresis -18\\r\\nKPX T A -55\\r\\nKPX T Aacute -55\\r\\nKPX T Abreve -55\\r\\nKPX T Acircumflex -55\\r\\nKPX T Adieresis -55\\r\\nKPX T Agrave -55\\r\\nKPX T Amacron -55\\r\\nKPX T Aogonek -55\\r\\nKPX T Aring -55\\r\\nKPX T Atilde -55\\r\\nKPX T O -18\\r\\nKPX T Oacute -18\\r\\nKPX T Ocircumflex -18\\r\\nKPX T Odieresis -18\\r\\nKPX T Ograve -18\\r\\nKPX T Ohungarumlaut -18\\r\\nKPX T Omacron -18\\r\\nKPX T Oslash -18\\r\\nKPX T Otilde -18\\r\\nKPX T a -92\\r\\nKPX T aacute -92\\r\\nKPX T abreve -92\\r\\nKPX T acircumflex -92\\r\\nKPX T adieresis -92\\r\\nKPX T agrave -92\\r\\nKPX T amacron -92\\r\\nKPX T aogonek -92\\r\\nKPX T aring -92\\r\\nKPX T atilde -92\\r\\nKPX T colon -74\\r\\nKPX T comma -92\\r\\nKPX T e -92\\r\\nKPX T eacute -92\\r\\nKPX T ecaron -92\\r\\nKPX T ecircumflex -92\\r\\nKPX T edieresis -52\\r\\nKPX T edotaccent -92\\r\\nKPX T egrave -52\\r\\nKPX T emacron -52\\r\\nKPX T eogonek -92\\r\\nKPX T hyphen -92\\r\\nKPX T i -37\\r\\nKPX T iacute -37\\r\\nKPX T iogonek -37\\r\\nKPX T o -95\\r\\nKPX T oacute -95\\r\\nKPX T ocircumflex -95\\r\\nKPX T odieresis -95\\r\\nKPX T ograve -95\\r\\nKPX T ohungarumlaut -95\\r\\nKPX T omacron -95\\r\\nKPX T oslash -95\\r\\nKPX T otilde -95\\r\\nKPX T period -92\\r\\nKPX T r -37\\r\\nKPX T racute -37\\r\\nKPX T rcaron -37\\r\\nKPX T rcommaaccent -37\\r\\nKPX T semicolon -74\\r\\nKPX T u -37\\r\\nKPX T uacute -37\\r\\nKPX T ucircumflex -37\\r\\nKPX T udieresis -37\\r\\nKPX T ugrave -37\\r\\nKPX T uhungarumlaut -37\\r\\nKPX T umacron -37\\r\\nKPX T uogonek -37\\r\\nKPX T uring -37\\r\\nKPX T w -37\\r\\nKPX T y -37\\r\\nKPX T yacute -37\\r\\nKPX T ydieresis -37\\r\\nKPX Tcaron A -55\\r\\nKPX Tcaron Aacute -55\\r\\nKPX Tcaron Abreve -55\\r\\nKPX Tcaron Acircumflex -55\\r\\nKPX Tcaron Adieresis -55\\r\\nKPX Tcaron Agrave -55\\r\\nKPX Tcaron Amacron -55\\r\\nKPX Tcaron Aogonek -55\\r\\nKPX Tcaron Aring -55\\r\\nKPX Tcaron Atilde -55\\r\\nKPX Tcaron O -18\\r\\nKPX Tcaron Oacute -18\\r\\nKPX Tcaron Ocircumflex -18\\r\\nKPX Tcaron Odieresis -18\\r\\nKPX Tcaron Ograve -18\\r\\nKPX Tcaron Ohungarumlaut -18\\r\\nKPX Tcaron Omacron -18\\r\\nKPX Tcaron Oslash -18\\r\\nKPX Tcaron Otilde -18\\r\\nKPX Tcaron a -92\\r\\nKPX Tcaron aacute -92\\r\\nKPX Tcaron abreve -92\\r\\nKPX Tcaron acircumflex -92\\r\\nKPX Tcaron adieresis -92\\r\\nKPX Tcaron agrave -92\\r\\nKPX Tcaron amacron -92\\r\\nKPX Tcaron aogonek -92\\r\\nKPX Tcaron aring -92\\r\\nKPX Tcaron atilde -92\\r\\nKPX Tcaron colon -74\\r\\nKPX Tcaron comma -92\\r\\nKPX Tcaron e -92\\r\\nKPX Tcaron eacute -92\\r\\nKPX Tcaron ecaron -92\\r\\nKPX Tcaron ecircumflex -92\\r\\nKPX Tcaron edieresis -52\\r\\nKPX Tcaron edotaccent -92\\r\\nKPX Tcaron egrave -52\\r\\nKPX Tcaron emacron -52\\r\\nKPX Tcaron eogonek -92\\r\\nKPX Tcaron hyphen -92\\r\\nKPX Tcaron i -37\\r\\nKPX Tcaron iacute -37\\r\\nKPX Tcaron iogonek -37\\r\\nKPX Tcaron o -95\\r\\nKPX Tcaron oacute -95\\r\\nKPX Tcaron ocircumflex -95\\r\\nKPX Tcaron odieresis -95\\r\\nKPX Tcaron ograve -95\\r\\nKPX Tcaron ohungarumlaut -95\\r\\nKPX Tcaron omacron -95\\r\\nKPX Tcaron oslash -95\\r\\nKPX Tcaron otilde -95\\r\\nKPX Tcaron period -92\\r\\nKPX Tcaron r -37\\r\\nKPX Tcaron racute -37\\r\\nKPX Tcaron rcaron -37\\r\\nKPX Tcaron rcommaaccent -37\\r\\nKPX Tcaron semicolon -74\\r\\nKPX Tcaron u -37\\r\\nKPX Tcaron uacute -37\\r\\nKPX Tcaron ucircumflex -37\\r\\nKPX Tcaron udieresis -37\\r\\nKPX Tcaron ugrave -37\\r\\nKPX Tcaron uhungarumlaut -37\\r\\nKPX Tcaron umacron -37\\r\\nKPX Tcaron uogonek -37\\r\\nKPX Tcaron uring -37\\r\\nKPX Tcaron w -37\\r\\nKPX Tcaron y -37\\r\\nKPX Tcaron yacute -37\\r\\nKPX Tcaron ydieresis -37\\r\\nKPX Tcommaaccent A -55\\r\\nKPX Tcommaaccent Aacute -55\\r\\nKPX Tcommaaccent Abreve -55\\r\\nKPX Tcommaaccent Acircumflex -55\\r\\nKPX Tcommaaccent Adieresis -55\\r\\nKPX Tcommaaccent Agrave -55\\r\\nKPX Tcommaaccent Amacron -55\\r\\nKPX Tcommaaccent Aogonek -55\\r\\nKPX Tcommaaccent Aring -55\\r\\nKPX Tcommaaccent Atilde -55\\r\\nKPX Tcommaaccent O -18\\r\\nKPX Tcommaaccent Oacute -18\\r\\nKPX Tcommaaccent Ocircumflex -18\\r\\nKPX Tcommaaccent Odieresis -18\\r\\nKPX Tcommaaccent Ograve -18\\r\\nKPX Tcommaaccent Ohungarumlaut -18\\r\\nKPX Tcommaaccent Omacron -18\\r\\nKPX Tcommaaccent Oslash -18\\r\\nKPX Tcommaaccent Otilde -18\\r\\nKPX Tcommaaccent a -92\\r\\nKPX Tcommaaccent aacute -92\\r\\nKPX Tcommaaccent abreve -92\\r\\nKPX Tcommaaccent acircumflex -92\\r\\nKPX Tcommaaccent adieresis -92\\r\\nKPX Tcommaaccent agrave -92\\r\\nKPX Tcommaaccent amacron -92\\r\\nKPX Tcommaaccent aogonek -92\\r\\nKPX Tcommaaccent aring -92\\r\\nKPX Tcommaaccent atilde -92\\r\\nKPX Tcommaaccent colon -74\\r\\nKPX Tcommaaccent comma -92\\r\\nKPX Tcommaaccent e -92\\r\\nKPX Tcommaaccent eacute -92\\r\\nKPX Tcommaaccent ecaron -92\\r\\nKPX Tcommaaccent ecircumflex -92\\r\\nKPX Tcommaaccent edieresis -52\\r\\nKPX Tcommaaccent edotaccent -92\\r\\nKPX Tcommaaccent egrave -52\\r\\nKPX Tcommaaccent emacron -52\\r\\nKPX Tcommaaccent eogonek -92\\r\\nKPX Tcommaaccent hyphen -92\\r\\nKPX Tcommaaccent i -37\\r\\nKPX Tcommaaccent iacute -37\\r\\nKPX Tcommaaccent iogonek -37\\r\\nKPX Tcommaaccent o -95\\r\\nKPX Tcommaaccent oacute -95\\r\\nKPX Tcommaaccent ocircumflex -95\\r\\nKPX Tcommaaccent odieresis -95\\r\\nKPX Tcommaaccent ograve -95\\r\\nKPX Tcommaaccent ohungarumlaut -95\\r\\nKPX Tcommaaccent omacron -95\\r\\nKPX Tcommaaccent oslash -95\\r\\nKPX Tcommaaccent otilde -95\\r\\nKPX Tcommaaccent period -92\\r\\nKPX Tcommaaccent r -37\\r\\nKPX Tcommaaccent racute -37\\r\\nKPX Tcommaaccent rcaron -37\\r\\nKPX Tcommaaccent rcommaaccent -37\\r\\nKPX Tcommaaccent semicolon -74\\r\\nKPX Tcommaaccent u -37\\r\\nKPX Tcommaaccent uacute -37\\r\\nKPX Tcommaaccent ucircumflex -37\\r\\nKPX Tcommaaccent udieresis -37\\r\\nKPX Tcommaaccent ugrave -37\\r\\nKPX Tcommaaccent uhungarumlaut -37\\r\\nKPX Tcommaaccent umacron -37\\r\\nKPX Tcommaaccent uogonek -37\\r\\nKPX Tcommaaccent uring -37\\r\\nKPX Tcommaaccent w -37\\r\\nKPX Tcommaaccent y -37\\r\\nKPX Tcommaaccent yacute -37\\r\\nKPX Tcommaaccent ydieresis -37\\r\\nKPX U A -45\\r\\nKPX U Aacute -45\\r\\nKPX U Abreve -45\\r\\nKPX U Acircumflex -45\\r\\nKPX U Adieresis -45\\r\\nKPX U Agrave -45\\r\\nKPX U Amacron -45\\r\\nKPX U Aogonek -45\\r\\nKPX U Aring -45\\r\\nKPX U Atilde -45\\r\\nKPX Uacute A -45\\r\\nKPX Uacute Aacute -45\\r\\nKPX Uacute Abreve -45\\r\\nKPX Uacute Acircumflex -45\\r\\nKPX Uacute Adieresis -45\\r\\nKPX Uacute Agrave -45\\r\\nKPX Uacute Amacron -45\\r\\nKPX Uacute Aogonek -45\\r\\nKPX Uacute Aring -45\\r\\nKPX Uacute Atilde -45\\r\\nKPX Ucircumflex A -45\\r\\nKPX Ucircumflex Aacute -45\\r\\nKPX Ucircumflex Abreve -45\\r\\nKPX Ucircumflex Acircumflex -45\\r\\nKPX Ucircumflex Adieresis -45\\r\\nKPX Ucircumflex Agrave -45\\r\\nKPX Ucircumflex Amacron -45\\r\\nKPX Ucircumflex Aogonek -45\\r\\nKPX Ucircumflex Aring -45\\r\\nKPX Ucircumflex Atilde -45\\r\\nKPX Udieresis A -45\\r\\nKPX Udieresis Aacute -45\\r\\nKPX Udieresis Abreve -45\\r\\nKPX Udieresis Acircumflex -45\\r\\nKPX Udieresis Adieresis -45\\r\\nKPX Udieresis Agrave -45\\r\\nKPX Udieresis Amacron -45\\r\\nKPX Udieresis Aogonek -45\\r\\nKPX Udieresis Aring -45\\r\\nKPX Udieresis Atilde -45\\r\\nKPX Ugrave A -45\\r\\nKPX Ugrave Aacute -45\\r\\nKPX Ugrave Abreve -45\\r\\nKPX Ugrave Acircumflex -45\\r\\nKPX Ugrave Adieresis -45\\r\\nKPX Ugrave Agrave -45\\r\\nKPX Ugrave Amacron -45\\r\\nKPX Ugrave Aogonek -45\\r\\nKPX Ugrave Aring -45\\r\\nKPX Ugrave Atilde -45\\r\\nKPX Uhungarumlaut A -45\\r\\nKPX Uhungarumlaut Aacute -45\\r\\nKPX Uhungarumlaut Abreve -45\\r\\nKPX Uhungarumlaut Acircumflex -45\\r\\nKPX Uhungarumlaut Adieresis -45\\r\\nKPX Uhungarumlaut Agrave -45\\r\\nKPX Uhungarumlaut Amacron -45\\r\\nKPX Uhungarumlaut Aogonek -45\\r\\nKPX Uhungarumlaut Aring -45\\r\\nKPX Uhungarumlaut Atilde -45\\r\\nKPX Umacron A -45\\r\\nKPX Umacron Aacute -45\\r\\nKPX Umacron Abreve -45\\r\\nKPX Umacron Acircumflex -45\\r\\nKPX Umacron Adieresis -45\\r\\nKPX Umacron Agrave -45\\r\\nKPX Umacron Amacron -45\\r\\nKPX Umacron Aogonek -45\\r\\nKPX Umacron Aring -45\\r\\nKPX Umacron Atilde -45\\r\\nKPX Uogonek A -45\\r\\nKPX Uogonek Aacute -45\\r\\nKPX Uogonek Abreve -45\\r\\nKPX Uogonek Acircumflex -45\\r\\nKPX Uogonek Adieresis -45\\r\\nKPX Uogonek Agrave -45\\r\\nKPX Uogonek Amacron -45\\r\\nKPX Uogonek Aogonek -45\\r\\nKPX Uogonek Aring -45\\r\\nKPX Uogonek Atilde -45\\r\\nKPX Uring A -45\\r\\nKPX Uring Aacute -45\\r\\nKPX Uring Abreve -45\\r\\nKPX Uring Acircumflex -45\\r\\nKPX Uring Adieresis -45\\r\\nKPX Uring Agrave -45\\r\\nKPX Uring Amacron -45\\r\\nKPX Uring Aogonek -45\\r\\nKPX Uring Aring -45\\r\\nKPX Uring Atilde -45\\r\\nKPX V A -85\\r\\nKPX V Aacute -85\\r\\nKPX V Abreve -85\\r\\nKPX V Acircumflex -85\\r\\nKPX V Adieresis -85\\r\\nKPX V Agrave -85\\r\\nKPX V Amacron -85\\r\\nKPX V Aogonek -85\\r\\nKPX V Aring -85\\r\\nKPX V Atilde -85\\r\\nKPX V G -10\\r\\nKPX V Gbreve -10\\r\\nKPX V Gcommaaccent -10\\r\\nKPX V O -30\\r\\nKPX V Oacute -30\\r\\nKPX V Ocircumflex -30\\r\\nKPX V Odieresis -30\\r\\nKPX V Ograve -30\\r\\nKPX V Ohungarumlaut -30\\r\\nKPX V Omacron -30\\r\\nKPX V Oslash -30\\r\\nKPX V Otilde -30\\r\\nKPX V a -111\\r\\nKPX V aacute -111\\r\\nKPX V abreve -111\\r\\nKPX V acircumflex -111\\r\\nKPX V adieresis -111\\r\\nKPX V agrave -111\\r\\nKPX V amacron -111\\r\\nKPX V aogonek -111\\r\\nKPX V aring -111\\r\\nKPX V atilde -111\\r\\nKPX V colon -74\\r\\nKPX V comma -129\\r\\nKPX V e -111\\r\\nKPX V eacute -111\\r\\nKPX V ecaron -111\\r\\nKPX V ecircumflex -111\\r\\nKPX V edieresis -71\\r\\nKPX V edotaccent -111\\r\\nKPX V egrave -71\\r\\nKPX V emacron -71\\r\\nKPX V eogonek -111\\r\\nKPX V hyphen -70\\r\\nKPX V i -55\\r\\nKPX V iacute -55\\r\\nKPX V iogonek -55\\r\\nKPX V o -111\\r\\nKPX V oacute -111\\r\\nKPX V ocircumflex -111\\r\\nKPX V odieresis -111\\r\\nKPX V ograve -111\\r\\nKPX V ohungarumlaut -111\\r\\nKPX V omacron -111\\r\\nKPX V oslash -111\\r\\nKPX V otilde -111\\r\\nKPX V period -129\\r\\nKPX V semicolon -74\\r\\nKPX V u -55\\r\\nKPX V uacute -55\\r\\nKPX V ucircumflex -55\\r\\nKPX V udieresis -55\\r\\nKPX V ugrave -55\\r\\nKPX V uhungarumlaut -55\\r\\nKPX V umacron -55\\r\\nKPX V uogonek -55\\r\\nKPX V uring -55\\r\\nKPX W A -74\\r\\nKPX W Aacute -74\\r\\nKPX W Abreve -74\\r\\nKPX W Acircumflex -74\\r\\nKPX W Adieresis -74\\r\\nKPX W Agrave -74\\r\\nKPX W Amacron -74\\r\\nKPX W Aogonek -74\\r\\nKPX W Aring -74\\r\\nKPX W Atilde -74\\r\\nKPX W O -15\\r\\nKPX W Oacute -15\\r\\nKPX W Ocircumflex -15\\r\\nKPX W Odieresis -15\\r\\nKPX W Ograve -15\\r\\nKPX W Ohungarumlaut -15\\r\\nKPX W Omacron -15\\r\\nKPX W Oslash -15\\r\\nKPX W Otilde -15\\r\\nKPX W a -85\\r\\nKPX W aacute -85\\r\\nKPX W abreve -85\\r\\nKPX W acircumflex -85\\r\\nKPX W adieresis -85\\r\\nKPX W agrave -85\\r\\nKPX W amacron -85\\r\\nKPX W aogonek -85\\r\\nKPX W aring -85\\r\\nKPX W atilde -85\\r\\nKPX W colon -55\\r\\nKPX W comma -74\\r\\nKPX W e -90\\r\\nKPX W eacute -90\\r\\nKPX W ecaron -90\\r\\nKPX W ecircumflex -90\\r\\nKPX W edieresis -50\\r\\nKPX W edotaccent -90\\r\\nKPX W egrave -50\\r\\nKPX W emacron -50\\r\\nKPX W eogonek -90\\r\\nKPX W hyphen -50\\r\\nKPX W i -37\\r\\nKPX W iacute -37\\r\\nKPX W iogonek -37\\r\\nKPX W o -80\\r\\nKPX W oacute -80\\r\\nKPX W ocircumflex -80\\r\\nKPX W odieresis -80\\r\\nKPX W ograve -80\\r\\nKPX W ohungarumlaut -80\\r\\nKPX W omacron -80\\r\\nKPX W oslash -80\\r\\nKPX W otilde -80\\r\\nKPX W period -74\\r\\nKPX W semicolon -55\\r\\nKPX W u -55\\r\\nKPX W uacute -55\\r\\nKPX W ucircumflex -55\\r\\nKPX W udieresis -55\\r\\nKPX W ugrave -55\\r\\nKPX W uhungarumlaut -55\\r\\nKPX W umacron -55\\r\\nKPX W uogonek -55\\r\\nKPX W uring -55\\r\\nKPX W y -55\\r\\nKPX W yacute -55\\r\\nKPX W ydieresis -55\\r\\nKPX Y A -74\\r\\nKPX Y Aacute -74\\r\\nKPX Y Abreve -74\\r\\nKPX Y Acircumflex -74\\r\\nKPX Y Adieresis -74\\r\\nKPX Y Agrave -74\\r\\nKPX Y Amacron -74\\r\\nKPX Y Aogonek -74\\r\\nKPX Y Aring -74\\r\\nKPX Y Atilde -74\\r\\nKPX Y O -25\\r\\nKPX Y Oacute -25\\r\\nKPX Y Ocircumflex -25\\r\\nKPX Y Odieresis -25\\r\\nKPX Y Ograve -25\\r\\nKPX Y Ohungarumlaut -25\\r\\nKPX Y Omacron -25\\r\\nKPX Y Oslash -25\\r\\nKPX Y Otilde -25\\r\\nKPX Y a -92\\r\\nKPX Y aacute -92\\r\\nKPX Y abreve -92\\r\\nKPX Y acircumflex -92\\r\\nKPX Y adieresis -92\\r\\nKPX Y agrave -92\\r\\nKPX Y amacron -92\\r\\nKPX Y aogonek -92\\r\\nKPX Y aring -92\\r\\nKPX Y atilde -92\\r\\nKPX Y colon -92\\r\\nKPX Y comma -92\\r\\nKPX Y e -111\\r\\nKPX Y eacute -111\\r\\nKPX Y ecaron -111\\r\\nKPX Y ecircumflex -71\\r\\nKPX Y edieresis -71\\r\\nKPX Y edotaccent -111\\r\\nKPX Y egrave -71\\r\\nKPX Y emacron -71\\r\\nKPX Y eogonek -111\\r\\nKPX Y hyphen -92\\r\\nKPX Y i -55\\r\\nKPX Y iacute -55\\r\\nKPX Y iogonek -55\\r\\nKPX Y o -111\\r\\nKPX Y oacute -111\\r\\nKPX Y ocircumflex -111\\r\\nKPX Y odieresis -111\\r\\nKPX Y ograve -111\\r\\nKPX Y ohungarumlaut -111\\r\\nKPX Y omacron -111\\r\\nKPX Y oslash -111\\r\\nKPX Y otilde -111\\r\\nKPX Y period -74\\r\\nKPX Y semicolon -92\\r\\nKPX Y u -92\\r\\nKPX Y uacute -92\\r\\nKPX Y ucircumflex -92\\r\\nKPX Y udieresis -92\\r\\nKPX Y ugrave -92\\r\\nKPX Y uhungarumlaut -92\\r\\nKPX Y umacron -92\\r\\nKPX Y uogonek -92\\r\\nKPX Y uring -92\\r\\nKPX Yacute A -74\\r\\nKPX Yacute Aacute -74\\r\\nKPX Yacute Abreve -74\\r\\nKPX Yacute Acircumflex -74\\r\\nKPX Yacute Adieresis -74\\r\\nKPX Yacute Agrave -74\\r\\nKPX Yacute Amacron -74\\r\\nKPX Yacute Aogonek -74\\r\\nKPX Yacute Aring -74\\r\\nKPX Yacute Atilde -74\\r\\nKPX Yacute O -25\\r\\nKPX Yacute Oacute -25\\r\\nKPX Yacute Ocircumflex -25\\r\\nKPX Yacute Odieresis -25\\r\\nKPX Yacute Ograve -25\\r\\nKPX Yacute Ohungarumlaut -25\\r\\nKPX Yacute Omacron -25\\r\\nKPX Yacute Oslash -25\\r\\nKPX Yacute Otilde -25\\r\\nKPX Yacute a -92\\r\\nKPX Yacute aacute -92\\r\\nKPX Yacute abreve -92\\r\\nKPX Yacute acircumflex -92\\r\\nKPX Yacute adieresis -92\\r\\nKPX Yacute agrave -92\\r\\nKPX Yacute amacron -92\\r\\nKPX Yacute aogonek -92\\r\\nKPX Yacute aring -92\\r\\nKPX Yacute atilde -92\\r\\nKPX Yacute colon -92\\r\\nKPX Yacute comma -92\\r\\nKPX Yacute e -111\\r\\nKPX Yacute eacute -111\\r\\nKPX Yacute ecaron -111\\r\\nKPX Yacute ecircumflex -71\\r\\nKPX Yacute edieresis -71\\r\\nKPX Yacute edotaccent -111\\r\\nKPX Yacute egrave -71\\r\\nKPX Yacute emacron -71\\r\\nKPX Yacute eogonek -111\\r\\nKPX Yacute hyphen -92\\r\\nKPX Yacute i -55\\r\\nKPX Yacute iacute -55\\r\\nKPX Yacute iogonek -55\\r\\nKPX Yacute o -111\\r\\nKPX Yacute oacute -111\\r\\nKPX Yacute ocircumflex -111\\r\\nKPX Yacute odieresis -111\\r\\nKPX Yacute ograve -111\\r\\nKPX Yacute ohungarumlaut -111\\r\\nKPX Yacute omacron -111\\r\\nKPX Yacute oslash -111\\r\\nKPX Yacute otilde -111\\r\\nKPX Yacute period -74\\r\\nKPX Yacute semicolon -92\\r\\nKPX Yacute u -92\\r\\nKPX Yacute uacute -92\\r\\nKPX Yacute ucircumflex -92\\r\\nKPX Yacute udieresis -92\\r\\nKPX Yacute ugrave -92\\r\\nKPX Yacute uhungarumlaut -92\\r\\nKPX Yacute umacron -92\\r\\nKPX Yacute uogonek -92\\r\\nKPX Yacute uring -92\\r\\nKPX Ydieresis A -74\\r\\nKPX Ydieresis Aacute -74\\r\\nKPX Ydieresis Abreve -74\\r\\nKPX Ydieresis Acircumflex -74\\r\\nKPX Ydieresis Adieresis -74\\r\\nKPX Ydieresis Agrave -74\\r\\nKPX Ydieresis Amacron -74\\r\\nKPX Ydieresis Aogonek -74\\r\\nKPX Ydieresis Aring -74\\r\\nKPX Ydieresis Atilde -74\\r\\nKPX Ydieresis O -25\\r\\nKPX Ydieresis Oacute -25\\r\\nKPX Ydieresis Ocircumflex -25\\r\\nKPX Ydieresis Odieresis -25\\r\\nKPX Ydieresis Ograve -25\\r\\nKPX Ydieresis Ohungarumlaut -25\\r\\nKPX Ydieresis Omacron -25\\r\\nKPX Ydieresis Oslash -25\\r\\nKPX Ydieresis Otilde -25\\r\\nKPX Ydieresis a -92\\r\\nKPX Ydieresis aacute -92\\r\\nKPX Ydieresis abreve -92\\r\\nKPX Ydieresis acircumflex -92\\r\\nKPX Ydieresis adieresis -92\\r\\nKPX Ydieresis agrave -92\\r\\nKPX Ydieresis amacron -92\\r\\nKPX Ydieresis aogonek -92\\r\\nKPX Ydieresis aring -92\\r\\nKPX Ydieresis atilde -92\\r\\nKPX Ydieresis colon -92\\r\\nKPX Ydieresis comma -92\\r\\nKPX Ydieresis e -111\\r\\nKPX Ydieresis eacute -111\\r\\nKPX Ydieresis ecaron -111\\r\\nKPX Ydieresis ecircumflex -71\\r\\nKPX Ydieresis edieresis -71\\r\\nKPX Ydieresis edotaccent -111\\r\\nKPX Ydieresis egrave -71\\r\\nKPX Ydieresis emacron -71\\r\\nKPX Ydieresis eogonek -111\\r\\nKPX Ydieresis hyphen -92\\r\\nKPX Ydieresis i -55\\r\\nKPX Ydieresis iacute -55\\r\\nKPX Ydieresis iogonek -55\\r\\nKPX Ydieresis o -111\\r\\nKPX Ydieresis oacute -111\\r\\nKPX Ydieresis ocircumflex -111\\r\\nKPX Ydieresis odieresis -111\\r\\nKPX Ydieresis ograve -111\\r\\nKPX Ydieresis ohungarumlaut -111\\r\\nKPX Ydieresis omacron -111\\r\\nKPX Ydieresis oslash -111\\r\\nKPX Ydieresis otilde -111\\r\\nKPX Ydieresis period -74\\r\\nKPX Ydieresis semicolon -92\\r\\nKPX Ydieresis u -92\\r\\nKPX Ydieresis uacute -92\\r\\nKPX Ydieresis ucircumflex -92\\r\\nKPX Ydieresis udieresis -92\\r\\nKPX Ydieresis ugrave -92\\r\\nKPX Ydieresis uhungarumlaut -92\\r\\nKPX Ydieresis umacron -92\\r\\nKPX Ydieresis uogonek -92\\r\\nKPX Ydieresis uring -92\\r\\nKPX b b -10\\r\\nKPX b period -40\\r\\nKPX b u -20\\r\\nKPX b uacute -20\\r\\nKPX b ucircumflex -20\\r\\nKPX b udieresis -20\\r\\nKPX b ugrave -20\\r\\nKPX b uhungarumlaut -20\\r\\nKPX b umacron -20\\r\\nKPX b uogonek -20\\r\\nKPX b uring -20\\r\\nKPX c h -10\\r\\nKPX c k -10\\r\\nKPX c kcommaaccent -10\\r\\nKPX cacute h -10\\r\\nKPX cacute k -10\\r\\nKPX cacute kcommaaccent -10\\r\\nKPX ccaron h -10\\r\\nKPX ccaron k -10\\r\\nKPX ccaron kcommaaccent -10\\r\\nKPX ccedilla h -10\\r\\nKPX ccedilla k -10\\r\\nKPX ccedilla kcommaaccent -10\\r\\nKPX comma quotedblright -95\\r\\nKPX comma quoteright -95\\r\\nKPX e b -10\\r\\nKPX eacute b -10\\r\\nKPX ecaron b -10\\r\\nKPX ecircumflex b -10\\r\\nKPX edieresis b -10\\r\\nKPX edotaccent b -10\\r\\nKPX egrave b -10\\r\\nKPX emacron b -10\\r\\nKPX eogonek b -10\\r\\nKPX f comma -10\\r\\nKPX f dotlessi -30\\r\\nKPX f e -10\\r\\nKPX f eacute -10\\r\\nKPX f edotaccent -10\\r\\nKPX f eogonek -10\\r\\nKPX f f -18\\r\\nKPX f o -10\\r\\nKPX f oacute -10\\r\\nKPX f ocircumflex -10\\r\\nKPX f ograve -10\\r\\nKPX f ohungarumlaut -10\\r\\nKPX f oslash -10\\r\\nKPX f otilde -10\\r\\nKPX f period -10\\r\\nKPX f quoteright 55\\r\\nKPX k e -30\\r\\nKPX k eacute -30\\r\\nKPX k ecaron -30\\r\\nKPX k ecircumflex -30\\r\\nKPX k edieresis -30\\r\\nKPX k edotaccent -30\\r\\nKPX k egrave -30\\r\\nKPX k emacron -30\\r\\nKPX k eogonek -30\\r\\nKPX k o -10\\r\\nKPX k oacute -10\\r\\nKPX k ocircumflex -10\\r\\nKPX k odieresis -10\\r\\nKPX k ograve -10\\r\\nKPX k ohungarumlaut -10\\r\\nKPX k omacron -10\\r\\nKPX k oslash -10\\r\\nKPX k otilde -10\\r\\nKPX kcommaaccent e -30\\r\\nKPX kcommaaccent eacute -30\\r\\nKPX kcommaaccent ecaron -30\\r\\nKPX kcommaaccent ecircumflex -30\\r\\nKPX kcommaaccent edieresis -30\\r\\nKPX kcommaaccent edotaccent -30\\r\\nKPX kcommaaccent egrave -30\\r\\nKPX kcommaaccent emacron -30\\r\\nKPX kcommaaccent eogonek -30\\r\\nKPX kcommaaccent o -10\\r\\nKPX kcommaaccent oacute -10\\r\\nKPX kcommaaccent ocircumflex -10\\r\\nKPX kcommaaccent odieresis -10\\r\\nKPX kcommaaccent ograve -10\\r\\nKPX kcommaaccent ohungarumlaut -10\\r\\nKPX kcommaaccent omacron -10\\r\\nKPX kcommaaccent oslash -10\\r\\nKPX kcommaaccent otilde -10\\r\\nKPX n v -40\\r\\nKPX nacute v -40\\r\\nKPX ncaron v -40\\r\\nKPX ncommaaccent v -40\\r\\nKPX ntilde v -40\\r\\nKPX o v -15\\r\\nKPX o w -25\\r\\nKPX o x -10\\r\\nKPX o y -10\\r\\nKPX o yacute -10\\r\\nKPX o ydieresis -10\\r\\nKPX oacute v -15\\r\\nKPX oacute w -25\\r\\nKPX oacute x -10\\r\\nKPX oacute y -10\\r\\nKPX oacute yacute -10\\r\\nKPX oacute ydieresis -10\\r\\nKPX ocircumflex v -15\\r\\nKPX ocircumflex w -25\\r\\nKPX ocircumflex x -10\\r\\nKPX ocircumflex y -10\\r\\nKPX ocircumflex yacute -10\\r\\nKPX ocircumflex ydieresis -10\\r\\nKPX odieresis v -15\\r\\nKPX odieresis w -25\\r\\nKPX odieresis x -10\\r\\nKPX odieresis y -10\\r\\nKPX odieresis yacute -10\\r\\nKPX odieresis ydieresis -10\\r\\nKPX ograve v -15\\r\\nKPX ograve w -25\\r\\nKPX ograve x -10\\r\\nKPX ograve y -10\\r\\nKPX ograve yacute -10\\r\\nKPX ograve ydieresis -10\\r\\nKPX ohungarumlaut v -15\\r\\nKPX ohungarumlaut w -25\\r\\nKPX ohungarumlaut x -10\\r\\nKPX ohungarumlaut y -10\\r\\nKPX ohungarumlaut yacute -10\\r\\nKPX ohungarumlaut ydieresis -10\\r\\nKPX omacron v -15\\r\\nKPX omacron w -25\\r\\nKPX omacron x -10\\r\\nKPX omacron y -10\\r\\nKPX omacron yacute -10\\r\\nKPX omacron ydieresis -10\\r\\nKPX oslash v -15\\r\\nKPX oslash w -25\\r\\nKPX oslash x -10\\r\\nKPX oslash y -10\\r\\nKPX oslash yacute -10\\r\\nKPX oslash ydieresis -10\\r\\nKPX otilde v -15\\r\\nKPX otilde w -25\\r\\nKPX otilde x -10\\r\\nKPX otilde y -10\\r\\nKPX otilde yacute -10\\r\\nKPX otilde ydieresis -10\\r\\nKPX period quotedblright -95\\r\\nKPX period quoteright -95\\r\\nKPX quoteleft quoteleft -74\\r\\nKPX quoteright d -15\\r\\nKPX quoteright dcroat -15\\r\\nKPX quoteright quoteright -74\\r\\nKPX quoteright r -15\\r\\nKPX quoteright racute -15\\r\\nKPX quoteright rcaron -15\\r\\nKPX quoteright rcommaaccent -15\\r\\nKPX quoteright s -74\\r\\nKPX quoteright sacute -74\\r\\nKPX quoteright scaron -74\\r\\nKPX quoteright scedilla -74\\r\\nKPX quoteright scommaaccent -74\\r\\nKPX quoteright space -74\\r\\nKPX quoteright t -37\\r\\nKPX quoteright tcommaaccent -37\\r\\nKPX quoteright v -15\\r\\nKPX r comma -65\\r\\nKPX r period -65\\r\\nKPX racute comma -65\\r\\nKPX racute period -65\\r\\nKPX rcaron comma -65\\r\\nKPX rcaron period -65\\r\\nKPX rcommaaccent comma -65\\r\\nKPX rcommaaccent period -65\\r\\nKPX space A -37\\r\\nKPX space Aacute -37\\r\\nKPX space Abreve -37\\r\\nKPX space Acircumflex -37\\r\\nKPX space Adieresis -37\\r\\nKPX space Agrave -37\\r\\nKPX space Amacron -37\\r\\nKPX space Aogonek -37\\r\\nKPX space Aring -37\\r\\nKPX space Atilde -37\\r\\nKPX space V -70\\r\\nKPX space W -70\\r\\nKPX space Y -70\\r\\nKPX space Yacute -70\\r\\nKPX space Ydieresis -70\\r\\nKPX v comma -37\\r\\nKPX v e -15\\r\\nKPX v eacute -15\\r\\nKPX v ecaron -15\\r\\nKPX v ecircumflex -15\\r\\nKPX v edieresis -15\\r\\nKPX v edotaccent -15\\r\\nKPX v egrave -15\\r\\nKPX v emacron -15\\r\\nKPX v eogonek -15\\r\\nKPX v o -15\\r\\nKPX v oacute -15\\r\\nKPX v ocircumflex -15\\r\\nKPX v odieresis -15\\r\\nKPX v ograve -15\\r\\nKPX v ohungarumlaut -15\\r\\nKPX v omacron -15\\r\\nKPX v oslash -15\\r\\nKPX v otilde -15\\r\\nKPX v period -37\\r\\nKPX w a -10\\r\\nKPX w aacute -10\\r\\nKPX w abreve -10\\r\\nKPX w acircumflex -10\\r\\nKPX w adieresis -10\\r\\nKPX w agrave -10\\r\\nKPX w amacron -10\\r\\nKPX w aogonek -10\\r\\nKPX w aring -10\\r\\nKPX w atilde -10\\r\\nKPX w comma -37\\r\\nKPX w e -10\\r\\nKPX w eacute -10\\r\\nKPX w ecaron -10\\r\\nKPX w ecircumflex -10\\r\\nKPX w edieresis -10\\r\\nKPX w edotaccent -10\\r\\nKPX w egrave -10\\r\\nKPX w emacron -10\\r\\nKPX w eogonek -10\\r\\nKPX w o -15\\r\\nKPX w oacute -15\\r\\nKPX w ocircumflex -15\\r\\nKPX w odieresis -15\\r\\nKPX w ograve -15\\r\\nKPX w ohungarumlaut -15\\r\\nKPX w omacron -15\\r\\nKPX w oslash -15\\r\\nKPX w otilde -15\\r\\nKPX w period -37\\r\\nKPX x e -10\\r\\nKPX x eacute -10\\r\\nKPX x ecaron -10\\r\\nKPX x ecircumflex -10\\r\\nKPX x edieresis -10\\r\\nKPX x edotaccent -10\\r\\nKPX x egrave -10\\r\\nKPX x emacron -10\\r\\nKPX x eogonek -10\\r\\nKPX y comma -37\\r\\nKPX y period -37\\r\\nKPX yacute comma -37\\r\\nKPX yacute period -37\\r\\nKPX ydieresis comma -37\\r\\nKPX ydieresis period -37\\r\\nEndKernPairs\\r\\nEndKernData\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Times-BoldItalic.afm?`)},"./node_modules/pdfkit/js/data/Times-Italic.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nComment Creation Date: Thu May  1 12:56:55 1997\\r\\nComment UniqueID 43067\\r\\nComment VMusage 47727 58752\\r\\nFontName Times-Italic\\r\\nFullName Times Italic\\r\\nFamilyName Times\\r\\nWeight Medium\\r\\nItalicAngle -15.5\\r\\nIsFixedPitch false\\r\\nCharacterSet ExtendedRoman\\r\\nFontBBox -169 -217 1010 883 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 002.000\\r\\nNotice Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.\\r\\nEncodingScheme AdobeStandardEncoding\\r\\nCapHeight 653\\r\\nXHeight 441\\r\\nAscender 683\\r\\nDescender -217\\r\\nStdHW 32\\r\\nStdVW 76\\r\\nStartCharMetrics 315\\r\\nC 32 ; WX 250 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 333 ; N exclam ; B 39 -11 302 667 ;\\r\\nC 34 ; WX 420 ; N quotedbl ; B 144 421 432 666 ;\\r\\nC 35 ; WX 500 ; N numbersign ; B 2 0 540 676 ;\\r\\nC 36 ; WX 500 ; N dollar ; B 31 -89 497 731 ;\\r\\nC 37 ; WX 833 ; N percent ; B 79 -13 790 676 ;\\r\\nC 38 ; WX 778 ; N ampersand ; B 76 -18 723 666 ;\\r\\nC 39 ; WX 333 ; N quoteright ; B 151 436 290 666 ;\\r\\nC 40 ; WX 333 ; N parenleft ; B 42 -181 315 669 ;\\r\\nC 41 ; WX 333 ; N parenright ; B 16 -180 289 669 ;\\r\\nC 42 ; WX 500 ; N asterisk ; B 128 255 492 666 ;\\r\\nC 43 ; WX 675 ; N plus ; B 86 0 590 506 ;\\r\\nC 44 ; WX 250 ; N comma ; B -4 -129 135 101 ;\\r\\nC 45 ; WX 333 ; N hyphen ; B 49 192 282 255 ;\\r\\nC 46 ; WX 250 ; N period ; B 27 -11 138 100 ;\\r\\nC 47 ; WX 278 ; N slash ; B -65 -18 386 666 ;\\r\\nC 48 ; WX 500 ; N zero ; B 32 -7 497 676 ;\\r\\nC 49 ; WX 500 ; N one ; B 49 0 409 676 ;\\r\\nC 50 ; WX 500 ; N two ; B 12 0 452 676 ;\\r\\nC 51 ; WX 500 ; N three ; B 15 -7 465 676 ;\\r\\nC 52 ; WX 500 ; N four ; B 1 0 479 676 ;\\r\\nC 53 ; WX 500 ; N five ; B 15 -7 491 666 ;\\r\\nC 54 ; WX 500 ; N six ; B 30 -7 521 686 ;\\r\\nC 55 ; WX 500 ; N seven ; B 75 -8 537 666 ;\\r\\nC 56 ; WX 500 ; N eight ; B 30 -7 493 676 ;\\r\\nC 57 ; WX 500 ; N nine ; B 23 -17 492 676 ;\\r\\nC 58 ; WX 333 ; N colon ; B 50 -11 261 441 ;\\r\\nC 59 ; WX 333 ; N semicolon ; B 27 -129 261 441 ;\\r\\nC 60 ; WX 675 ; N less ; B 84 -8 592 514 ;\\r\\nC 61 ; WX 675 ; N equal ; B 86 120 590 386 ;\\r\\nC 62 ; WX 675 ; N greater ; B 84 -8 592 514 ;\\r\\nC 63 ; WX 500 ; N question ; B 132 -12 472 664 ;\\r\\nC 64 ; WX 920 ; N at ; B 118 -18 806 666 ;\\r\\nC 65 ; WX 611 ; N A ; B -51 0 564 668 ;\\r\\nC 66 ; WX 611 ; N B ; B -8 0 588 653 ;\\r\\nC 67 ; WX 667 ; N C ; B 66 -18 689 666 ;\\r\\nC 68 ; WX 722 ; N D ; B -8 0 700 653 ;\\r\\nC 69 ; WX 611 ; N E ; B -1 0 634 653 ;\\r\\nC 70 ; WX 611 ; N F ; B 8 0 645 653 ;\\r\\nC 71 ; WX 722 ; N G ; B 52 -18 722 666 ;\\r\\nC 72 ; WX 722 ; N H ; B -8 0 767 653 ;\\r\\nC 73 ; WX 333 ; N I ; B -8 0 384 653 ;\\r\\nC 74 ; WX 444 ; N J ; B -6 -18 491 653 ;\\r\\nC 75 ; WX 667 ; N K ; B 7 0 722 653 ;\\r\\nC 76 ; WX 556 ; N L ; B -8 0 559 653 ;\\r\\nC 77 ; WX 833 ; N M ; B -18 0 873 653 ;\\r\\nC 78 ; WX 667 ; N N ; B -20 -15 727 653 ;\\r\\nC 79 ; WX 722 ; N O ; B 60 -18 699 666 ;\\r\\nC 80 ; WX 611 ; N P ; B 0 0 605 653 ;\\r\\nC 81 ; WX 722 ; N Q ; B 59 -182 699 666 ;\\r\\nC 82 ; WX 611 ; N R ; B -13 0 588 653 ;\\r\\nC 83 ; WX 500 ; N S ; B 17 -18 508 667 ;\\r\\nC 84 ; WX 556 ; N T ; B 59 0 633 653 ;\\r\\nC 85 ; WX 722 ; N U ; B 102 -18 765 653 ;\\r\\nC 86 ; WX 611 ; N V ; B 76 -18 688 653 ;\\r\\nC 87 ; WX 833 ; N W ; B 71 -18 906 653 ;\\r\\nC 88 ; WX 611 ; N X ; B -29 0 655 653 ;\\r\\nC 89 ; WX 556 ; N Y ; B 78 0 633 653 ;\\r\\nC 90 ; WX 556 ; N Z ; B -6 0 606 653 ;\\r\\nC 91 ; WX 389 ; N bracketleft ; B 21 -153 391 663 ;\\r\\nC 92 ; WX 278 ; N backslash ; B -41 -18 319 666 ;\\r\\nC 93 ; WX 389 ; N bracketright ; B 12 -153 382 663 ;\\r\\nC 94 ; WX 422 ; N asciicircum ; B 0 301 422 666 ;\\r\\nC 95 ; WX 500 ; N underscore ; B 0 -125 500 -75 ;\\r\\nC 96 ; WX 333 ; N quoteleft ; B 171 436 310 666 ;\\r\\nC 97 ; WX 500 ; N a ; B 17 -11 476 441 ;\\r\\nC 98 ; WX 500 ; N b ; B 23 -11 473 683 ;\\r\\nC 99 ; WX 444 ; N c ; B 30 -11 425 441 ;\\r\\nC 100 ; WX 500 ; N d ; B 15 -13 527 683 ;\\r\\nC 101 ; WX 444 ; N e ; B 31 -11 412 441 ;\\r\\nC 102 ; WX 278 ; N f ; B -147 -207 424 678 ; L i fi ; L l fl ;\\r\\nC 103 ; WX 500 ; N g ; B 8 -206 472 441 ;\\r\\nC 104 ; WX 500 ; N h ; B 19 -9 478 683 ;\\r\\nC 105 ; WX 278 ; N i ; B 49 -11 264 654 ;\\r\\nC 106 ; WX 278 ; N j ; B -124 -207 276 654 ;\\r\\nC 107 ; WX 444 ; N k ; B 14 -11 461 683 ;\\r\\nC 108 ; WX 278 ; N l ; B 41 -11 279 683 ;\\r\\nC 109 ; WX 722 ; N m ; B 12 -9 704 441 ;\\r\\nC 110 ; WX 500 ; N n ; B 14 -9 474 441 ;\\r\\nC 111 ; WX 500 ; N o ; B 27 -11 468 441 ;\\r\\nC 112 ; WX 500 ; N p ; B -75 -205 469 441 ;\\r\\nC 113 ; WX 500 ; N q ; B 25 -209 483 441 ;\\r\\nC 114 ; WX 389 ; N r ; B 45 0 412 441 ;\\r\\nC 115 ; WX 389 ; N s ; B 16 -13 366 442 ;\\r\\nC 116 ; WX 278 ; N t ; B 37 -11 296 546 ;\\r\\nC 117 ; WX 500 ; N u ; B 42 -11 475 441 ;\\r\\nC 118 ; WX 444 ; N v ; B 21 -18 426 441 ;\\r\\nC 119 ; WX 667 ; N w ; B 16 -18 648 441 ;\\r\\nC 120 ; WX 444 ; N x ; B -27 -11 447 441 ;\\r\\nC 121 ; WX 444 ; N y ; B -24 -206 426 441 ;\\r\\nC 122 ; WX 389 ; N z ; B -2 -81 380 428 ;\\r\\nC 123 ; WX 400 ; N braceleft ; B 51 -177 407 687 ;\\r\\nC 124 ; WX 275 ; N bar ; B 105 -217 171 783 ;\\r\\nC 125 ; WX 400 ; N braceright ; B -7 -177 349 687 ;\\r\\nC 126 ; WX 541 ; N asciitilde ; B 40 183 502 323 ;\\r\\nC 161 ; WX 389 ; N exclamdown ; B 59 -205 322 473 ;\\r\\nC 162 ; WX 500 ; N cent ; B 77 -143 472 560 ;\\r\\nC 163 ; WX 500 ; N sterling ; B 10 -6 517 670 ;\\r\\nC 164 ; WX 167 ; N fraction ; B -169 -10 337 676 ;\\r\\nC 165 ; WX 500 ; N yen ; B 27 0 603 653 ;\\r\\nC 166 ; WX 500 ; N florin ; B 25 -182 507 682 ;\\r\\nC 167 ; WX 500 ; N section ; B 53 -162 461 666 ;\\r\\nC 168 ; WX 500 ; N currency ; B -22 53 522 597 ;\\r\\nC 169 ; WX 214 ; N quotesingle ; B 132 421 241 666 ;\\r\\nC 170 ; WX 556 ; N quotedblleft ; B 166 436 514 666 ;\\r\\nC 171 ; WX 500 ; N guillemotleft ; B 53 37 445 403 ;\\r\\nC 172 ; WX 333 ; N guilsinglleft ; B 51 37 281 403 ;\\r\\nC 173 ; WX 333 ; N guilsinglright ; B 52 37 282 403 ;\\r\\nC 174 ; WX 500 ; N fi ; B -141 -207 481 681 ;\\r\\nC 175 ; WX 500 ; N fl ; B -141 -204 518 682 ;\\r\\nC 177 ; WX 500 ; N endash ; B -6 197 505 243 ;\\r\\nC 178 ; WX 500 ; N dagger ; B 101 -159 488 666 ;\\r\\nC 179 ; WX 500 ; N daggerdbl ; B 22 -143 491 666 ;\\r\\nC 180 ; WX 250 ; N periodcentered ; B 70 199 181 310 ;\\r\\nC 182 ; WX 523 ; N paragraph ; B 55 -123 616 653 ;\\r\\nC 183 ; WX 350 ; N bullet ; B 40 191 310 461 ;\\r\\nC 184 ; WX 333 ; N quotesinglbase ; B 44 -129 183 101 ;\\r\\nC 185 ; WX 556 ; N quotedblbase ; B 57 -129 405 101 ;\\r\\nC 186 ; WX 556 ; N quotedblright ; B 151 436 499 666 ;\\r\\nC 187 ; WX 500 ; N guillemotright ; B 55 37 447 403 ;\\r\\nC 188 ; WX 889 ; N ellipsis ; B 57 -11 762 100 ;\\r\\nC 189 ; WX 1000 ; N perthousand ; B 25 -19 1010 706 ;\\r\\nC 191 ; WX 500 ; N questiondown ; B 28 -205 368 471 ;\\r\\nC 193 ; WX 333 ; N grave ; B 121 492 311 664 ;\\r\\nC 194 ; WX 333 ; N acute ; B 180 494 403 664 ;\\r\\nC 195 ; WX 333 ; N circumflex ; B 91 492 385 661 ;\\r\\nC 196 ; WX 333 ; N tilde ; B 100 517 427 624 ;\\r\\nC 197 ; WX 333 ; N macron ; B 99 532 411 583 ;\\r\\nC 198 ; WX 333 ; N breve ; B 117 492 418 650 ;\\r\\nC 199 ; WX 333 ; N dotaccent ; B 207 548 305 646 ;\\r\\nC 200 ; WX 333 ; N dieresis ; B 107 548 405 646 ;\\r\\nC 202 ; WX 333 ; N ring ; B 155 492 355 691 ;\\r\\nC 203 ; WX 333 ; N cedilla ; B -30 -217 182 0 ;\\r\\nC 205 ; WX 333 ; N hungarumlaut ; B 93 494 486 664 ;\\r\\nC 206 ; WX 333 ; N ogonek ; B 20 -169 203 40 ;\\r\\nC 207 ; WX 333 ; N caron ; B 121 492 426 661 ;\\r\\nC 208 ; WX 889 ; N emdash ; B -6 197 894 243 ;\\r\\nC 225 ; WX 889 ; N AE ; B -27 0 911 653 ;\\r\\nC 227 ; WX 276 ; N ordfeminine ; B 42 406 352 676 ;\\r\\nC 232 ; WX 556 ; N Lslash ; B -8 0 559 653 ;\\r\\nC 233 ; WX 722 ; N Oslash ; B 60 -105 699 722 ;\\r\\nC 234 ; WX 944 ; N OE ; B 49 -8 964 666 ;\\r\\nC 235 ; WX 310 ; N ordmasculine ; B 67 406 362 676 ;\\r\\nC 241 ; WX 667 ; N ae ; B 23 -11 640 441 ;\\r\\nC 245 ; WX 278 ; N dotlessi ; B 49 -11 235 441 ;\\r\\nC 248 ; WX 278 ; N lslash ; B 41 -11 312 683 ;\\r\\nC 249 ; WX 500 ; N oslash ; B 28 -135 469 554 ;\\r\\nC 250 ; WX 667 ; N oe ; B 20 -12 646 441 ;\\r\\nC 251 ; WX 500 ; N germandbls ; B -168 -207 493 679 ;\\r\\nC -1 ; WX 333 ; N Idieresis ; B -8 0 435 818 ;\\r\\nC -1 ; WX 444 ; N eacute ; B 31 -11 459 664 ;\\r\\nC -1 ; WX 500 ; N abreve ; B 17 -11 502 650 ;\\r\\nC -1 ; WX 500 ; N uhungarumlaut ; B 42 -11 580 664 ;\\r\\nC -1 ; WX 444 ; N ecaron ; B 31 -11 482 661 ;\\r\\nC -1 ; WX 556 ; N Ydieresis ; B 78 0 633 818 ;\\r\\nC -1 ; WX 675 ; N divide ; B 86 -11 590 517 ;\\r\\nC -1 ; WX 556 ; N Yacute ; B 78 0 633 876 ;\\r\\nC -1 ; WX 611 ; N Acircumflex ; B -51 0 564 873 ;\\r\\nC -1 ; WX 500 ; N aacute ; B 17 -11 487 664 ;\\r\\nC -1 ; WX 722 ; N Ucircumflex ; B 102 -18 765 873 ;\\r\\nC -1 ; WX 444 ; N yacute ; B -24 -206 459 664 ;\\r\\nC -1 ; WX 389 ; N scommaaccent ; B 16 -217 366 442 ;\\r\\nC -1 ; WX 444 ; N ecircumflex ; B 31 -11 441 661 ;\\r\\nC -1 ; WX 722 ; N Uring ; B 102 -18 765 883 ;\\r\\nC -1 ; WX 722 ; N Udieresis ; B 102 -18 765 818 ;\\r\\nC -1 ; WX 500 ; N aogonek ; B 17 -169 476 441 ;\\r\\nC -1 ; WX 722 ; N Uacute ; B 102 -18 765 876 ;\\r\\nC -1 ; WX 500 ; N uogonek ; B 42 -169 477 441 ;\\r\\nC -1 ; WX 611 ; N Edieresis ; B -1 0 634 818 ;\\r\\nC -1 ; WX 722 ; N Dcroat ; B -8 0 700 653 ;\\r\\nC -1 ; WX 250 ; N commaaccent ; B 8 -217 133 -50 ;\\r\\nC -1 ; WX 760 ; N copyright ; B 41 -18 719 666 ;\\r\\nC -1 ; WX 611 ; N Emacron ; B -1 0 634 795 ;\\r\\nC -1 ; WX 444 ; N ccaron ; B 30 -11 482 661 ;\\r\\nC -1 ; WX 500 ; N aring ; B 17 -11 476 691 ;\\r\\nC -1 ; WX 667 ; N Ncommaaccent ; B -20 -187 727 653 ;\\r\\nC -1 ; WX 278 ; N lacute ; B 41 -11 395 876 ;\\r\\nC -1 ; WX 500 ; N agrave ; B 17 -11 476 664 ;\\r\\nC -1 ; WX 556 ; N Tcommaaccent ; B 59 -217 633 653 ;\\r\\nC -1 ; WX 667 ; N Cacute ; B 66 -18 690 876 ;\\r\\nC -1 ; WX 500 ; N atilde ; B 17 -11 511 624 ;\\r\\nC -1 ; WX 611 ; N Edotaccent ; B -1 0 634 818 ;\\r\\nC -1 ; WX 389 ; N scaron ; B 16 -13 454 661 ;\\r\\nC -1 ; WX 389 ; N scedilla ; B 16 -217 366 442 ;\\r\\nC -1 ; WX 278 ; N iacute ; B 49 -11 355 664 ;\\r\\nC -1 ; WX 471 ; N lozenge ; B 13 0 459 724 ;\\r\\nC -1 ; WX 611 ; N Rcaron ; B -13 0 588 873 ;\\r\\nC -1 ; WX 722 ; N Gcommaaccent ; B 52 -217 722 666 ;\\r\\nC -1 ; WX 500 ; N ucircumflex ; B 42 -11 475 661 ;\\r\\nC -1 ; WX 500 ; N acircumflex ; B 17 -11 476 661 ;\\r\\nC -1 ; WX 611 ; N Amacron ; B -51 0 564 795 ;\\r\\nC -1 ; WX 389 ; N rcaron ; B 45 0 434 661 ;\\r\\nC -1 ; WX 444 ; N ccedilla ; B 30 -217 425 441 ;\\r\\nC -1 ; WX 556 ; N Zdotaccent ; B -6 0 606 818 ;\\r\\nC -1 ; WX 611 ; N Thorn ; B 0 0 569 653 ;\\r\\nC -1 ; WX 722 ; N Omacron ; B 60 -18 699 795 ;\\r\\nC -1 ; WX 611 ; N Racute ; B -13 0 588 876 ;\\r\\nC -1 ; WX 500 ; N Sacute ; B 17 -18 508 876 ;\\r\\nC -1 ; WX 544 ; N dcaron ; B 15 -13 658 683 ;\\r\\nC -1 ; WX 722 ; N Umacron ; B 102 -18 765 795 ;\\r\\nC -1 ; WX 500 ; N uring ; B 42 -11 475 691 ;\\r\\nC -1 ; WX 300 ; N threesuperior ; B 43 268 339 676 ;\\r\\nC -1 ; WX 722 ; N Ograve ; B 60 -18 699 876 ;\\r\\nC -1 ; WX 611 ; N Agrave ; B -51 0 564 876 ;\\r\\nC -1 ; WX 611 ; N Abreve ; B -51 0 564 862 ;\\r\\nC -1 ; WX 675 ; N multiply ; B 93 8 582 497 ;\\r\\nC -1 ; WX 500 ; N uacute ; B 42 -11 477 664 ;\\r\\nC -1 ; WX 556 ; N Tcaron ; B 59 0 633 873 ;\\r\\nC -1 ; WX 476 ; N partialdiff ; B 17 -38 459 710 ;\\r\\nC -1 ; WX 444 ; N ydieresis ; B -24 -206 441 606 ;\\r\\nC -1 ; WX 667 ; N Nacute ; B -20 -15 727 876 ;\\r\\nC -1 ; WX 278 ; N icircumflex ; B 33 -11 327 661 ;\\r\\nC -1 ; WX 611 ; N Ecircumflex ; B -1 0 634 873 ;\\r\\nC -1 ; WX 500 ; N adieresis ; B 17 -11 489 606 ;\\r\\nC -1 ; WX 444 ; N edieresis ; B 31 -11 451 606 ;\\r\\nC -1 ; WX 444 ; N cacute ; B 30 -11 459 664 ;\\r\\nC -1 ; WX 500 ; N nacute ; B 14 -9 477 664 ;\\r\\nC -1 ; WX 500 ; N umacron ; B 42 -11 485 583 ;\\r\\nC -1 ; WX 667 ; N Ncaron ; B -20 -15 727 873 ;\\r\\nC -1 ; WX 333 ; N Iacute ; B -8 0 433 876 ;\\r\\nC -1 ; WX 675 ; N plusminus ; B 86 0 590 506 ;\\r\\nC -1 ; WX 275 ; N brokenbar ; B 105 -142 171 708 ;\\r\\nC -1 ; WX 760 ; N registered ; B 41 -18 719 666 ;\\r\\nC -1 ; WX 722 ; N Gbreve ; B 52 -18 722 862 ;\\r\\nC -1 ; WX 333 ; N Idotaccent ; B -8 0 384 818 ;\\r\\nC -1 ; WX 600 ; N summation ; B 15 -10 585 706 ;\\r\\nC -1 ; WX 611 ; N Egrave ; B -1 0 634 876 ;\\r\\nC -1 ; WX 389 ; N racute ; B 45 0 431 664 ;\\r\\nC -1 ; WX 500 ; N omacron ; B 27 -11 495 583 ;\\r\\nC -1 ; WX 556 ; N Zacute ; B -6 0 606 876 ;\\r\\nC -1 ; WX 556 ; N Zcaron ; B -6 0 606 873 ;\\r\\nC -1 ; WX 549 ; N greaterequal ; B 26 0 523 658 ;\\r\\nC -1 ; WX 722 ; N Eth ; B -8 0 700 653 ;\\r\\nC -1 ; WX 667 ; N Ccedilla ; B 66 -217 689 666 ;\\r\\nC -1 ; WX 278 ; N lcommaaccent ; B 22 -217 279 683 ;\\r\\nC -1 ; WX 300 ; N tcaron ; B 37 -11 407 681 ;\\r\\nC -1 ; WX 444 ; N eogonek ; B 31 -169 412 441 ;\\r\\nC -1 ; WX 722 ; N Uogonek ; B 102 -184 765 653 ;\\r\\nC -1 ; WX 611 ; N Aacute ; B -51 0 564 876 ;\\r\\nC -1 ; WX 611 ; N Adieresis ; B -51 0 564 818 ;\\r\\nC -1 ; WX 444 ; N egrave ; B 31 -11 412 664 ;\\r\\nC -1 ; WX 389 ; N zacute ; B -2 -81 431 664 ;\\r\\nC -1 ; WX 278 ; N iogonek ; B 49 -169 264 654 ;\\r\\nC -1 ; WX 722 ; N Oacute ; B 60 -18 699 876 ;\\r\\nC -1 ; WX 500 ; N oacute ; B 27 -11 487 664 ;\\r\\nC -1 ; WX 500 ; N amacron ; B 17 -11 495 583 ;\\r\\nC -1 ; WX 389 ; N sacute ; B 16 -13 431 664 ;\\r\\nC -1 ; WX 278 ; N idieresis ; B 49 -11 352 606 ;\\r\\nC -1 ; WX 722 ; N Ocircumflex ; B 60 -18 699 873 ;\\r\\nC -1 ; WX 722 ; N Ugrave ; B 102 -18 765 876 ;\\r\\nC -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;\\r\\nC -1 ; WX 500 ; N thorn ; B -75 -205 469 683 ;\\r\\nC -1 ; WX 300 ; N twosuperior ; B 33 271 324 676 ;\\r\\nC -1 ; WX 722 ; N Odieresis ; B 60 -18 699 818 ;\\r\\nC -1 ; WX 500 ; N mu ; B -30 -209 497 428 ;\\r\\nC -1 ; WX 278 ; N igrave ; B 49 -11 284 664 ;\\r\\nC -1 ; WX 500 ; N ohungarumlaut ; B 27 -11 590 664 ;\\r\\nC -1 ; WX 611 ; N Eogonek ; B -1 -169 634 653 ;\\r\\nC -1 ; WX 500 ; N dcroat ; B 15 -13 572 683 ;\\r\\nC -1 ; WX 750 ; N threequarters ; B 23 -10 736 676 ;\\r\\nC -1 ; WX 500 ; N Scedilla ; B 17 -217 508 667 ;\\r\\nC -1 ; WX 300 ; N lcaron ; B 41 -11 407 683 ;\\r\\nC -1 ; WX 667 ; N Kcommaaccent ; B 7 -217 722 653 ;\\r\\nC -1 ; WX 556 ; N Lacute ; B -8 0 559 876 ;\\r\\nC -1 ; WX 980 ; N trademark ; B 30 247 957 653 ;\\r\\nC -1 ; WX 444 ; N edotaccent ; B 31 -11 412 606 ;\\r\\nC -1 ; WX 333 ; N Igrave ; B -8 0 384 876 ;\\r\\nC -1 ; WX 333 ; N Imacron ; B -8 0 441 795 ;\\r\\nC -1 ; WX 611 ; N Lcaron ; B -8 0 586 653 ;\\r\\nC -1 ; WX 750 ; N onehalf ; B 34 -10 749 676 ;\\r\\nC -1 ; WX 549 ; N lessequal ; B 26 0 523 658 ;\\r\\nC -1 ; WX 500 ; N ocircumflex ; B 27 -11 468 661 ;\\r\\nC -1 ; WX 500 ; N ntilde ; B 14 -9 476 624 ;\\r\\nC -1 ; WX 722 ; N Uhungarumlaut ; B 102 -18 765 876 ;\\r\\nC -1 ; WX 611 ; N Eacute ; B -1 0 634 876 ;\\r\\nC -1 ; WX 444 ; N emacron ; B 31 -11 457 583 ;\\r\\nC -1 ; WX 500 ; N gbreve ; B 8 -206 487 650 ;\\r\\nC -1 ; WX 750 ; N onequarter ; B 33 -10 736 676 ;\\r\\nC -1 ; WX 500 ; N Scaron ; B 17 -18 520 873 ;\\r\\nC -1 ; WX 500 ; N Scommaaccent ; B 17 -217 508 667 ;\\r\\nC -1 ; WX 722 ; N Ohungarumlaut ; B 60 -18 699 876 ;\\r\\nC -1 ; WX 400 ; N degree ; B 101 390 387 676 ;\\r\\nC -1 ; WX 500 ; N ograve ; B 27 -11 468 664 ;\\r\\nC -1 ; WX 667 ; N Ccaron ; B 66 -18 689 873 ;\\r\\nC -1 ; WX 500 ; N ugrave ; B 42 -11 475 664 ;\\r\\nC -1 ; WX 453 ; N radical ; B 2 -60 452 768 ;\\r\\nC -1 ; WX 722 ; N Dcaron ; B -8 0 700 873 ;\\r\\nC -1 ; WX 389 ; N rcommaaccent ; B -3 -217 412 441 ;\\r\\nC -1 ; WX 667 ; N Ntilde ; B -20 -15 727 836 ;\\r\\nC -1 ; WX 500 ; N otilde ; B 27 -11 496 624 ;\\r\\nC -1 ; WX 611 ; N Rcommaaccent ; B -13 -187 588 653 ;\\r\\nC -1 ; WX 556 ; N Lcommaaccent ; B -8 -217 559 653 ;\\r\\nC -1 ; WX 611 ; N Atilde ; B -51 0 566 836 ;\\r\\nC -1 ; WX 611 ; N Aogonek ; B -51 -169 566 668 ;\\r\\nC -1 ; WX 611 ; N Aring ; B -51 0 564 883 ;\\r\\nC -1 ; WX 722 ; N Otilde ; B 60 -18 699 836 ;\\r\\nC -1 ; WX 389 ; N zdotaccent ; B -2 -81 380 606 ;\\r\\nC -1 ; WX 611 ; N Ecaron ; B -1 0 634 873 ;\\r\\nC -1 ; WX 333 ; N Iogonek ; B -8 -169 384 653 ;\\r\\nC -1 ; WX 444 ; N kcommaaccent ; B 14 -187 461 683 ;\\r\\nC -1 ; WX 675 ; N minus ; B 86 220 590 286 ;\\r\\nC -1 ; WX 333 ; N Icircumflex ; B -8 0 425 873 ;\\r\\nC -1 ; WX 500 ; N ncaron ; B 14 -9 510 661 ;\\r\\nC -1 ; WX 278 ; N tcommaaccent ; B 2 -217 296 546 ;\\r\\nC -1 ; WX 675 ; N logicalnot ; B 86 108 590 386 ;\\r\\nC -1 ; WX 500 ; N odieresis ; B 27 -11 489 606 ;\\r\\nC -1 ; WX 500 ; N udieresis ; B 42 -11 479 606 ;\\r\\nC -1 ; WX 549 ; N notequal ; B 12 -29 537 541 ;\\r\\nC -1 ; WX 500 ; N gcommaaccent ; B 8 -206 472 706 ;\\r\\nC -1 ; WX 500 ; N eth ; B 27 -11 482 683 ;\\r\\nC -1 ; WX 389 ; N zcaron ; B -2 -81 434 661 ;\\r\\nC -1 ; WX 500 ; N ncommaaccent ; B 14 -187 474 441 ;\\r\\nC -1 ; WX 300 ; N onesuperior ; B 43 271 284 676 ;\\r\\nC -1 ; WX 278 ; N imacron ; B 46 -11 311 583 ;\\r\\nC -1 ; WX 500 ; N Euro ; B 0 0 0 0 ;\\r\\nEndCharMetrics\\r\\nStartKernData\\r\\nStartKernPairs 2321\\r\\nKPX A C -30\\r\\nKPX A Cacute -30\\r\\nKPX A Ccaron -30\\r\\nKPX A Ccedilla -30\\r\\nKPX A G -35\\r\\nKPX A Gbreve -35\\r\\nKPX A Gcommaaccent -35\\r\\nKPX A O -40\\r\\nKPX A Oacute -40\\r\\nKPX A Ocircumflex -40\\r\\nKPX A Odieresis -40\\r\\nKPX A Ograve -40\\r\\nKPX A Ohungarumlaut -40\\r\\nKPX A Omacron -40\\r\\nKPX A Oslash -40\\r\\nKPX A Otilde -40\\r\\nKPX A Q -40\\r\\nKPX A T -37\\r\\nKPX A Tcaron -37\\r\\nKPX A Tcommaaccent -37\\r\\nKPX A U -50\\r\\nKPX A Uacute -50\\r\\nKPX A Ucircumflex -50\\r\\nKPX A Udieresis -50\\r\\nKPX A Ugrave -50\\r\\nKPX A Uhungarumlaut -50\\r\\nKPX A Umacron -50\\r\\nKPX A Uogonek -50\\r\\nKPX A Uring -50\\r\\nKPX A V -105\\r\\nKPX A W -95\\r\\nKPX A Y -55\\r\\nKPX A Yacute -55\\r\\nKPX A Ydieresis -55\\r\\nKPX A quoteright -37\\r\\nKPX A u -20\\r\\nKPX A uacute -20\\r\\nKPX A ucircumflex -20\\r\\nKPX A udieresis -20\\r\\nKPX A ugrave -20\\r\\nKPX A uhungarumlaut -20\\r\\nKPX A umacron -20\\r\\nKPX A uogonek -20\\r\\nKPX A uring -20\\r\\nKPX A v -55\\r\\nKPX A w -55\\r\\nKPX A y -55\\r\\nKPX A yacute -55\\r\\nKPX A ydieresis -55\\r\\nKPX Aacute C -30\\r\\nKPX Aacute Cacute -30\\r\\nKPX Aacute Ccaron -30\\r\\nKPX Aacute Ccedilla -30\\r\\nKPX Aacute G -35\\r\\nKPX Aacute Gbreve -35\\r\\nKPX Aacute Gcommaaccent -35\\r\\nKPX Aacute O -40\\r\\nKPX Aacute Oacute -40\\r\\nKPX Aacute Ocircumflex -40\\r\\nKPX Aacute Odieresis -40\\r\\nKPX Aacute Ograve -40\\r\\nKPX Aacute Ohungarumlaut -40\\r\\nKPX Aacute Omacron -40\\r\\nKPX Aacute Oslash -40\\r\\nKPX Aacute Otilde -40\\r\\nKPX Aacute Q -40\\r\\nKPX Aacute T -37\\r\\nKPX Aacute Tcaron -37\\r\\nKPX Aacute Tcommaaccent -37\\r\\nKPX Aacute U -50\\r\\nKPX Aacute Uacute -50\\r\\nKPX Aacute Ucircumflex -50\\r\\nKPX Aacute Udieresis -50\\r\\nKPX Aacute Ugrave -50\\r\\nKPX Aacute Uhungarumlaut -50\\r\\nKPX Aacute Umacron -50\\r\\nKPX Aacute Uogonek -50\\r\\nKPX Aacute Uring -50\\r\\nKPX Aacute V -105\\r\\nKPX Aacute W -95\\r\\nKPX Aacute Y -55\\r\\nKPX Aacute Yacute -55\\r\\nKPX Aacute Ydieresis -55\\r\\nKPX Aacute quoteright -37\\r\\nKPX Aacute u -20\\r\\nKPX Aacute uacute -20\\r\\nKPX Aacute ucircumflex -20\\r\\nKPX Aacute udieresis -20\\r\\nKPX Aacute ugrave -20\\r\\nKPX Aacute uhungarumlaut -20\\r\\nKPX Aacute umacron -20\\r\\nKPX Aacute uogonek -20\\r\\nKPX Aacute uring -20\\r\\nKPX Aacute v -55\\r\\nKPX Aacute w -55\\r\\nKPX Aacute y -55\\r\\nKPX Aacute yacute -55\\r\\nKPX Aacute ydieresis -55\\r\\nKPX Abreve C -30\\r\\nKPX Abreve Cacute -30\\r\\nKPX Abreve Ccaron -30\\r\\nKPX Abreve Ccedilla -30\\r\\nKPX Abreve G -35\\r\\nKPX Abreve Gbreve -35\\r\\nKPX Abreve Gcommaaccent -35\\r\\nKPX Abreve O -40\\r\\nKPX Abreve Oacute -40\\r\\nKPX Abreve Ocircumflex -40\\r\\nKPX Abreve Odieresis -40\\r\\nKPX Abreve Ograve -40\\r\\nKPX Abreve Ohungarumlaut -40\\r\\nKPX Abreve Omacron -40\\r\\nKPX Abreve Oslash -40\\r\\nKPX Abreve Otilde -40\\r\\nKPX Abreve Q -40\\r\\nKPX Abreve T -37\\r\\nKPX Abreve Tcaron -37\\r\\nKPX Abreve Tcommaaccent -37\\r\\nKPX Abreve U -50\\r\\nKPX Abreve Uacute -50\\r\\nKPX Abreve Ucircumflex -50\\r\\nKPX Abreve Udieresis -50\\r\\nKPX Abreve Ugrave -50\\r\\nKPX Abreve Uhungarumlaut -50\\r\\nKPX Abreve Umacron -50\\r\\nKPX Abreve Uogonek -50\\r\\nKPX Abreve Uring -50\\r\\nKPX Abreve V -105\\r\\nKPX Abreve W -95\\r\\nKPX Abreve Y -55\\r\\nKPX Abreve Yacute -55\\r\\nKPX Abreve Ydieresis -55\\r\\nKPX Abreve quoteright -37\\r\\nKPX Abreve u -20\\r\\nKPX Abreve uacute -20\\r\\nKPX Abreve ucircumflex -20\\r\\nKPX Abreve udieresis -20\\r\\nKPX Abreve ugrave -20\\r\\nKPX Abreve uhungarumlaut -20\\r\\nKPX Abreve umacron -20\\r\\nKPX Abreve uogonek -20\\r\\nKPX Abreve uring -20\\r\\nKPX Abreve v -55\\r\\nKPX Abreve w -55\\r\\nKPX Abreve y -55\\r\\nKPX Abreve yacute -55\\r\\nKPX Abreve ydieresis -55\\r\\nKPX Acircumflex C -30\\r\\nKPX Acircumflex Cacute -30\\r\\nKPX Acircumflex Ccaron -30\\r\\nKPX Acircumflex Ccedilla -30\\r\\nKPX Acircumflex G -35\\r\\nKPX Acircumflex Gbreve -35\\r\\nKPX Acircumflex Gcommaaccent -35\\r\\nKPX Acircumflex O -40\\r\\nKPX Acircumflex Oacute -40\\r\\nKPX Acircumflex Ocircumflex -40\\r\\nKPX Acircumflex Odieresis -40\\r\\nKPX Acircumflex Ograve -40\\r\\nKPX Acircumflex Ohungarumlaut -40\\r\\nKPX Acircumflex Omacron -40\\r\\nKPX Acircumflex Oslash -40\\r\\nKPX Acircumflex Otilde -40\\r\\nKPX Acircumflex Q -40\\r\\nKPX Acircumflex T -37\\r\\nKPX Acircumflex Tcaron -37\\r\\nKPX Acircumflex Tcommaaccent -37\\r\\nKPX Acircumflex U -50\\r\\nKPX Acircumflex Uacute -50\\r\\nKPX Acircumflex Ucircumflex -50\\r\\nKPX Acircumflex Udieresis -50\\r\\nKPX Acircumflex Ugrave -50\\r\\nKPX Acircumflex Uhungarumlaut -50\\r\\nKPX Acircumflex Umacron -50\\r\\nKPX Acircumflex Uogonek -50\\r\\nKPX Acircumflex Uring -50\\r\\nKPX Acircumflex V -105\\r\\nKPX Acircumflex W -95\\r\\nKPX Acircumflex Y -55\\r\\nKPX Acircumflex Yacute -55\\r\\nKPX Acircumflex Ydieresis -55\\r\\nKPX Acircumflex quoteright -37\\r\\nKPX Acircumflex u -20\\r\\nKPX Acircumflex uacute -20\\r\\nKPX Acircumflex ucircumflex -20\\r\\nKPX Acircumflex udieresis -20\\r\\nKPX Acircumflex ugrave -20\\r\\nKPX Acircumflex uhungarumlaut -20\\r\\nKPX Acircumflex umacron -20\\r\\nKPX Acircumflex uogonek -20\\r\\nKPX Acircumflex uring -20\\r\\nKPX Acircumflex v -55\\r\\nKPX Acircumflex w -55\\r\\nKPX Acircumflex y -55\\r\\nKPX Acircumflex yacute -55\\r\\nKPX Acircumflex ydieresis -55\\r\\nKPX Adieresis C -30\\r\\nKPX Adieresis Cacute -30\\r\\nKPX Adieresis Ccaron -30\\r\\nKPX Adieresis Ccedilla -30\\r\\nKPX Adieresis G -35\\r\\nKPX Adieresis Gbreve -35\\r\\nKPX Adieresis Gcommaaccent -35\\r\\nKPX Adieresis O -40\\r\\nKPX Adieresis Oacute -40\\r\\nKPX Adieresis Ocircumflex -40\\r\\nKPX Adieresis Odieresis -40\\r\\nKPX Adieresis Ograve -40\\r\\nKPX Adieresis Ohungarumlaut -40\\r\\nKPX Adieresis Omacron -40\\r\\nKPX Adieresis Oslash -40\\r\\nKPX Adieresis Otilde -40\\r\\nKPX Adieresis Q -40\\r\\nKPX Adieresis T -37\\r\\nKPX Adieresis Tcaron -37\\r\\nKPX Adieresis Tcommaaccent -37\\r\\nKPX Adieresis U -50\\r\\nKPX Adieresis Uacute -50\\r\\nKPX Adieresis Ucircumflex -50\\r\\nKPX Adieresis Udieresis -50\\r\\nKPX Adieresis Ugrave -50\\r\\nKPX Adieresis Uhungarumlaut -50\\r\\nKPX Adieresis Umacron -50\\r\\nKPX Adieresis Uogonek -50\\r\\nKPX Adieresis Uring -50\\r\\nKPX Adieresis V -105\\r\\nKPX Adieresis W -95\\r\\nKPX Adieresis Y -55\\r\\nKPX Adieresis Yacute -55\\r\\nKPX Adieresis Ydieresis -55\\r\\nKPX Adieresis quoteright -37\\r\\nKPX Adieresis u -20\\r\\nKPX Adieresis uacute -20\\r\\nKPX Adieresis ucircumflex -20\\r\\nKPX Adieresis udieresis -20\\r\\nKPX Adieresis ugrave -20\\r\\nKPX Adieresis uhungarumlaut -20\\r\\nKPX Adieresis umacron -20\\r\\nKPX Adieresis uogonek -20\\r\\nKPX Adieresis uring -20\\r\\nKPX Adieresis v -55\\r\\nKPX Adieresis w -55\\r\\nKPX Adieresis y -55\\r\\nKPX Adieresis yacute -55\\r\\nKPX Adieresis ydieresis -55\\r\\nKPX Agrave C -30\\r\\nKPX Agrave Cacute -30\\r\\nKPX Agrave Ccaron -30\\r\\nKPX Agrave Ccedilla -30\\r\\nKPX Agrave G -35\\r\\nKPX Agrave Gbreve -35\\r\\nKPX Agrave Gcommaaccent -35\\r\\nKPX Agrave O -40\\r\\nKPX Agrave Oacute -40\\r\\nKPX Agrave Ocircumflex -40\\r\\nKPX Agrave Odieresis -40\\r\\nKPX Agrave Ograve -40\\r\\nKPX Agrave Ohungarumlaut -40\\r\\nKPX Agrave Omacron -40\\r\\nKPX Agrave Oslash -40\\r\\nKPX Agrave Otilde -40\\r\\nKPX Agrave Q -40\\r\\nKPX Agrave T -37\\r\\nKPX Agrave Tcaron -37\\r\\nKPX Agrave Tcommaaccent -37\\r\\nKPX Agrave U -50\\r\\nKPX Agrave Uacute -50\\r\\nKPX Agrave Ucircumflex -50\\r\\nKPX Agrave Udieresis -50\\r\\nKPX Agrave Ugrave -50\\r\\nKPX Agrave Uhungarumlaut -50\\r\\nKPX Agrave Umacron -50\\r\\nKPX Agrave Uogonek -50\\r\\nKPX Agrave Uring -50\\r\\nKPX Agrave V -105\\r\\nKPX Agrave W -95\\r\\nKPX Agrave Y -55\\r\\nKPX Agrave Yacute -55\\r\\nKPX Agrave Ydieresis -55\\r\\nKPX Agrave quoteright -37\\r\\nKPX Agrave u -20\\r\\nKPX Agrave uacute -20\\r\\nKPX Agrave ucircumflex -20\\r\\nKPX Agrave udieresis -20\\r\\nKPX Agrave ugrave -20\\r\\nKPX Agrave uhungarumlaut -20\\r\\nKPX Agrave umacron -20\\r\\nKPX Agrave uogonek -20\\r\\nKPX Agrave uring -20\\r\\nKPX Agrave v -55\\r\\nKPX Agrave w -55\\r\\nKPX Agrave y -55\\r\\nKPX Agrave yacute -55\\r\\nKPX Agrave ydieresis -55\\r\\nKPX Amacron C -30\\r\\nKPX Amacron Cacute -30\\r\\nKPX Amacron Ccaron -30\\r\\nKPX Amacron Ccedilla -30\\r\\nKPX Amacron G -35\\r\\nKPX Amacron Gbreve -35\\r\\nKPX Amacron Gcommaaccent -35\\r\\nKPX Amacron O -40\\r\\nKPX Amacron Oacute -40\\r\\nKPX Amacron Ocircumflex -40\\r\\nKPX Amacron Odieresis -40\\r\\nKPX Amacron Ograve -40\\r\\nKPX Amacron Ohungarumlaut -40\\r\\nKPX Amacron Omacron -40\\r\\nKPX Amacron Oslash -40\\r\\nKPX Amacron Otilde -40\\r\\nKPX Amacron Q -40\\r\\nKPX Amacron T -37\\r\\nKPX Amacron Tcaron -37\\r\\nKPX Amacron Tcommaaccent -37\\r\\nKPX Amacron U -50\\r\\nKPX Amacron Uacute -50\\r\\nKPX Amacron Ucircumflex -50\\r\\nKPX Amacron Udieresis -50\\r\\nKPX Amacron Ugrave -50\\r\\nKPX Amacron Uhungarumlaut -50\\r\\nKPX Amacron Umacron -50\\r\\nKPX Amacron Uogonek -50\\r\\nKPX Amacron Uring -50\\r\\nKPX Amacron V -105\\r\\nKPX Amacron W -95\\r\\nKPX Amacron Y -55\\r\\nKPX Amacron Yacute -55\\r\\nKPX Amacron Ydieresis -55\\r\\nKPX Amacron quoteright -37\\r\\nKPX Amacron u -20\\r\\nKPX Amacron uacute -20\\r\\nKPX Amacron ucircumflex -20\\r\\nKPX Amacron udieresis -20\\r\\nKPX Amacron ugrave -20\\r\\nKPX Amacron uhungarumlaut -20\\r\\nKPX Amacron umacron -20\\r\\nKPX Amacron uogonek -20\\r\\nKPX Amacron uring -20\\r\\nKPX Amacron v -55\\r\\nKPX Amacron w -55\\r\\nKPX Amacron y -55\\r\\nKPX Amacron yacute -55\\r\\nKPX Amacron ydieresis -55\\r\\nKPX Aogonek C -30\\r\\nKPX Aogonek Cacute -30\\r\\nKPX Aogonek Ccaron -30\\r\\nKPX Aogonek Ccedilla -30\\r\\nKPX Aogonek G -35\\r\\nKPX Aogonek Gbreve -35\\r\\nKPX Aogonek Gcommaaccent -35\\r\\nKPX Aogonek O -40\\r\\nKPX Aogonek Oacute -40\\r\\nKPX Aogonek Ocircumflex -40\\r\\nKPX Aogonek Odieresis -40\\r\\nKPX Aogonek Ograve -40\\r\\nKPX Aogonek Ohungarumlaut -40\\r\\nKPX Aogonek Omacron -40\\r\\nKPX Aogonek Oslash -40\\r\\nKPX Aogonek Otilde -40\\r\\nKPX Aogonek Q -40\\r\\nKPX Aogonek T -37\\r\\nKPX Aogonek Tcaron -37\\r\\nKPX Aogonek Tcommaaccent -37\\r\\nKPX Aogonek U -50\\r\\nKPX Aogonek Uacute -50\\r\\nKPX Aogonek Ucircumflex -50\\r\\nKPX Aogonek Udieresis -50\\r\\nKPX Aogonek Ugrave -50\\r\\nKPX Aogonek Uhungarumlaut -50\\r\\nKPX Aogonek Umacron -50\\r\\nKPX Aogonek Uogonek -50\\r\\nKPX Aogonek Uring -50\\r\\nKPX Aogonek V -105\\r\\nKPX Aogonek W -95\\r\\nKPX Aogonek Y -55\\r\\nKPX Aogonek Yacute -55\\r\\nKPX Aogonek Ydieresis -55\\r\\nKPX Aogonek quoteright -37\\r\\nKPX Aogonek u -20\\r\\nKPX Aogonek uacute -20\\r\\nKPX Aogonek ucircumflex -20\\r\\nKPX Aogonek udieresis -20\\r\\nKPX Aogonek ugrave -20\\r\\nKPX Aogonek uhungarumlaut -20\\r\\nKPX Aogonek umacron -20\\r\\nKPX Aogonek uogonek -20\\r\\nKPX Aogonek uring -20\\r\\nKPX Aogonek v -55\\r\\nKPX Aogonek w -55\\r\\nKPX Aogonek y -55\\r\\nKPX Aogonek yacute -55\\r\\nKPX Aogonek ydieresis -55\\r\\nKPX Aring C -30\\r\\nKPX Aring Cacute -30\\r\\nKPX Aring Ccaron -30\\r\\nKPX Aring Ccedilla -30\\r\\nKPX Aring G -35\\r\\nKPX Aring Gbreve -35\\r\\nKPX Aring Gcommaaccent -35\\r\\nKPX Aring O -40\\r\\nKPX Aring Oacute -40\\r\\nKPX Aring Ocircumflex -40\\r\\nKPX Aring Odieresis -40\\r\\nKPX Aring Ograve -40\\r\\nKPX Aring Ohungarumlaut -40\\r\\nKPX Aring Omacron -40\\r\\nKPX Aring Oslash -40\\r\\nKPX Aring Otilde -40\\r\\nKPX Aring Q -40\\r\\nKPX Aring T -37\\r\\nKPX Aring Tcaron -37\\r\\nKPX Aring Tcommaaccent -37\\r\\nKPX Aring U -50\\r\\nKPX Aring Uacute -50\\r\\nKPX Aring Ucircumflex -50\\r\\nKPX Aring Udieresis -50\\r\\nKPX Aring Ugrave -50\\r\\nKPX Aring Uhungarumlaut -50\\r\\nKPX Aring Umacron -50\\r\\nKPX Aring Uogonek -50\\r\\nKPX Aring Uring -50\\r\\nKPX Aring V -105\\r\\nKPX Aring W -95\\r\\nKPX Aring Y -55\\r\\nKPX Aring Yacute -55\\r\\nKPX Aring Ydieresis -55\\r\\nKPX Aring quoteright -37\\r\\nKPX Aring u -20\\r\\nKPX Aring uacute -20\\r\\nKPX Aring ucircumflex -20\\r\\nKPX Aring udieresis -20\\r\\nKPX Aring ugrave -20\\r\\nKPX Aring uhungarumlaut -20\\r\\nKPX Aring umacron -20\\r\\nKPX Aring uogonek -20\\r\\nKPX Aring uring -20\\r\\nKPX Aring v -55\\r\\nKPX Aring w -55\\r\\nKPX Aring y -55\\r\\nKPX Aring yacute -55\\r\\nKPX Aring ydieresis -55\\r\\nKPX Atilde C -30\\r\\nKPX Atilde Cacute -30\\r\\nKPX Atilde Ccaron -30\\r\\nKPX Atilde Ccedilla -30\\r\\nKPX Atilde G -35\\r\\nKPX Atilde Gbreve -35\\r\\nKPX Atilde Gcommaaccent -35\\r\\nKPX Atilde O -40\\r\\nKPX Atilde Oacute -40\\r\\nKPX Atilde Ocircumflex -40\\r\\nKPX Atilde Odieresis -40\\r\\nKPX Atilde Ograve -40\\r\\nKPX Atilde Ohungarumlaut -40\\r\\nKPX Atilde Omacron -40\\r\\nKPX Atilde Oslash -40\\r\\nKPX Atilde Otilde -40\\r\\nKPX Atilde Q -40\\r\\nKPX Atilde T -37\\r\\nKPX Atilde Tcaron -37\\r\\nKPX Atilde Tcommaaccent -37\\r\\nKPX Atilde U -50\\r\\nKPX Atilde Uacute -50\\r\\nKPX Atilde Ucircumflex -50\\r\\nKPX Atilde Udieresis -50\\r\\nKPX Atilde Ugrave -50\\r\\nKPX Atilde Uhungarumlaut -50\\r\\nKPX Atilde Umacron -50\\r\\nKPX Atilde Uogonek -50\\r\\nKPX Atilde Uring -50\\r\\nKPX Atilde V -105\\r\\nKPX Atilde W -95\\r\\nKPX Atilde Y -55\\r\\nKPX Atilde Yacute -55\\r\\nKPX Atilde Ydieresis -55\\r\\nKPX Atilde quoteright -37\\r\\nKPX Atilde u -20\\r\\nKPX Atilde uacute -20\\r\\nKPX Atilde ucircumflex -20\\r\\nKPX Atilde udieresis -20\\r\\nKPX Atilde ugrave -20\\r\\nKPX Atilde uhungarumlaut -20\\r\\nKPX Atilde umacron -20\\r\\nKPX Atilde uogonek -20\\r\\nKPX Atilde uring -20\\r\\nKPX Atilde v -55\\r\\nKPX Atilde w -55\\r\\nKPX Atilde y -55\\r\\nKPX Atilde yacute -55\\r\\nKPX Atilde ydieresis -55\\r\\nKPX B A -25\\r\\nKPX B Aacute -25\\r\\nKPX B Abreve -25\\r\\nKPX B Acircumflex -25\\r\\nKPX B Adieresis -25\\r\\nKPX B Agrave -25\\r\\nKPX B Amacron -25\\r\\nKPX B Aogonek -25\\r\\nKPX B Aring -25\\r\\nKPX B Atilde -25\\r\\nKPX B U -10\\r\\nKPX B Uacute -10\\r\\nKPX B Ucircumflex -10\\r\\nKPX B Udieresis -10\\r\\nKPX B Ugrave -10\\r\\nKPX B Uhungarumlaut -10\\r\\nKPX B Umacron -10\\r\\nKPX B Uogonek -10\\r\\nKPX B Uring -10\\r\\nKPX D A -35\\r\\nKPX D Aacute -35\\r\\nKPX D Abreve -35\\r\\nKPX D Acircumflex -35\\r\\nKPX D Adieresis -35\\r\\nKPX D Agrave -35\\r\\nKPX D Amacron -35\\r\\nKPX D Aogonek -35\\r\\nKPX D Aring -35\\r\\nKPX D Atilde -35\\r\\nKPX D V -40\\r\\nKPX D W -40\\r\\nKPX D Y -40\\r\\nKPX D Yacute -40\\r\\nKPX D Ydieresis -40\\r\\nKPX Dcaron A -35\\r\\nKPX Dcaron Aacute -35\\r\\nKPX Dcaron Abreve -35\\r\\nKPX Dcaron Acircumflex -35\\r\\nKPX Dcaron Adieresis -35\\r\\nKPX Dcaron Agrave -35\\r\\nKPX Dcaron Amacron -35\\r\\nKPX Dcaron Aogonek -35\\r\\nKPX Dcaron Aring -35\\r\\nKPX Dcaron Atilde -35\\r\\nKPX Dcaron V -40\\r\\nKPX Dcaron W -40\\r\\nKPX Dcaron Y -40\\r\\nKPX Dcaron Yacute -40\\r\\nKPX Dcaron Ydieresis -40\\r\\nKPX Dcroat A -35\\r\\nKPX Dcroat Aacute -35\\r\\nKPX Dcroat Abreve -35\\r\\nKPX Dcroat Acircumflex -35\\r\\nKPX Dcroat Adieresis -35\\r\\nKPX Dcroat Agrave -35\\r\\nKPX Dcroat Amacron -35\\r\\nKPX Dcroat Aogonek -35\\r\\nKPX Dcroat Aring -35\\r\\nKPX Dcroat Atilde -35\\r\\nKPX Dcroat V -40\\r\\nKPX Dcroat W -40\\r\\nKPX Dcroat Y -40\\r\\nKPX Dcroat Yacute -40\\r\\nKPX Dcroat Ydieresis -40\\r\\nKPX F A -115\\r\\nKPX F Aacute -115\\r\\nKPX F Abreve -115\\r\\nKPX F Acircumflex -115\\r\\nKPX F Adieresis -115\\r\\nKPX F Agrave -115\\r\\nKPX F Amacron -115\\r\\nKPX F Aogonek -115\\r\\nKPX F Aring -115\\r\\nKPX F Atilde -115\\r\\nKPX F a -75\\r\\nKPX F aacute -75\\r\\nKPX F abreve -75\\r\\nKPX F acircumflex -75\\r\\nKPX F adieresis -75\\r\\nKPX F agrave -75\\r\\nKPX F amacron -75\\r\\nKPX F aogonek -75\\r\\nKPX F aring -75\\r\\nKPX F atilde -75\\r\\nKPX F comma -135\\r\\nKPX F e -75\\r\\nKPX F eacute -75\\r\\nKPX F ecaron -75\\r\\nKPX F ecircumflex -75\\r\\nKPX F edieresis -75\\r\\nKPX F edotaccent -75\\r\\nKPX F egrave -75\\r\\nKPX F emacron -75\\r\\nKPX F eogonek -75\\r\\nKPX F i -45\\r\\nKPX F iacute -45\\r\\nKPX F icircumflex -45\\r\\nKPX F idieresis -45\\r\\nKPX F igrave -45\\r\\nKPX F imacron -45\\r\\nKPX F iogonek -45\\r\\nKPX F o -105\\r\\nKPX F oacute -105\\r\\nKPX F ocircumflex -105\\r\\nKPX F odieresis -105\\r\\nKPX F ograve -105\\r\\nKPX F ohungarumlaut -105\\r\\nKPX F omacron -105\\r\\nKPX F oslash -105\\r\\nKPX F otilde -105\\r\\nKPX F period -135\\r\\nKPX F r -55\\r\\nKPX F racute -55\\r\\nKPX F rcaron -55\\r\\nKPX F rcommaaccent -55\\r\\nKPX J A -40\\r\\nKPX J Aacute -40\\r\\nKPX J Abreve -40\\r\\nKPX J Acircumflex -40\\r\\nKPX J Adieresis -40\\r\\nKPX J Agrave -40\\r\\nKPX J Amacron -40\\r\\nKPX J Aogonek -40\\r\\nKPX J Aring -40\\r\\nKPX J Atilde -40\\r\\nKPX J a -35\\r\\nKPX J aacute -35\\r\\nKPX J abreve -35\\r\\nKPX J acircumflex -35\\r\\nKPX J adieresis -35\\r\\nKPX J agrave -35\\r\\nKPX J amacron -35\\r\\nKPX J aogonek -35\\r\\nKPX J aring -35\\r\\nKPX J atilde -35\\r\\nKPX J comma -25\\r\\nKPX J e -25\\r\\nKPX J eacute -25\\r\\nKPX J ecaron -25\\r\\nKPX J ecircumflex -25\\r\\nKPX J edieresis -25\\r\\nKPX J edotaccent -25\\r\\nKPX J egrave -25\\r\\nKPX J emacron -25\\r\\nKPX J eogonek -25\\r\\nKPX J o -25\\r\\nKPX J oacute -25\\r\\nKPX J ocircumflex -25\\r\\nKPX J odieresis -25\\r\\nKPX J ograve -25\\r\\nKPX J ohungarumlaut -25\\r\\nKPX J omacron -25\\r\\nKPX J oslash -25\\r\\nKPX J otilde -25\\r\\nKPX J period -25\\r\\nKPX J u -35\\r\\nKPX J uacute -35\\r\\nKPX J ucircumflex -35\\r\\nKPX J udieresis -35\\r\\nKPX J ugrave -35\\r\\nKPX J uhungarumlaut -35\\r\\nKPX J umacron -35\\r\\nKPX J uogonek -35\\r\\nKPX J uring -35\\r\\nKPX K O -50\\r\\nKPX K Oacute -50\\r\\nKPX K Ocircumflex -50\\r\\nKPX K Odieresis -50\\r\\nKPX K Ograve -50\\r\\nKPX K Ohungarumlaut -50\\r\\nKPX K Omacron -50\\r\\nKPX K Oslash -50\\r\\nKPX K Otilde -50\\r\\nKPX K e -35\\r\\nKPX K eacute -35\\r\\nKPX K ecaron -35\\r\\nKPX K ecircumflex -35\\r\\nKPX K edieresis -35\\r\\nKPX K edotaccent -35\\r\\nKPX K egrave -35\\r\\nKPX K emacron -35\\r\\nKPX K eogonek -35\\r\\nKPX K o -40\\r\\nKPX K oacute -40\\r\\nKPX K ocircumflex -40\\r\\nKPX K odieresis -40\\r\\nKPX K ograve -40\\r\\nKPX K ohungarumlaut -40\\r\\nKPX K omacron -40\\r\\nKPX K oslash -40\\r\\nKPX K otilde -40\\r\\nKPX K u -40\\r\\nKPX K uacute -40\\r\\nKPX K ucircumflex -40\\r\\nKPX K udieresis -40\\r\\nKPX K ugrave -40\\r\\nKPX K uhungarumlaut -40\\r\\nKPX K umacron -40\\r\\nKPX K uogonek -40\\r\\nKPX K uring -40\\r\\nKPX K y -40\\r\\nKPX K yacute -40\\r\\nKPX K ydieresis -40\\r\\nKPX Kcommaaccent O -50\\r\\nKPX Kcommaaccent Oacute -50\\r\\nKPX Kcommaaccent Ocircumflex -50\\r\\nKPX Kcommaaccent Odieresis -50\\r\\nKPX Kcommaaccent Ograve -50\\r\\nKPX Kcommaaccent Ohungarumlaut -50\\r\\nKPX Kcommaaccent Omacron -50\\r\\nKPX Kcommaaccent Oslash -50\\r\\nKPX Kcommaaccent Otilde -50\\r\\nKPX Kcommaaccent e -35\\r\\nKPX Kcommaaccent eacute -35\\r\\nKPX Kcommaaccent ecaron -35\\r\\nKPX Kcommaaccent ecircumflex -35\\r\\nKPX Kcommaaccent edieresis -35\\r\\nKPX Kcommaaccent edotaccent -35\\r\\nKPX Kcommaaccent egrave -35\\r\\nKPX Kcommaaccent emacron -35\\r\\nKPX Kcommaaccent eogonek -35\\r\\nKPX Kcommaaccent o -40\\r\\nKPX Kcommaaccent oacute -40\\r\\nKPX Kcommaaccent ocircumflex -40\\r\\nKPX Kcommaaccent odieresis -40\\r\\nKPX Kcommaaccent ograve -40\\r\\nKPX Kcommaaccent ohungarumlaut -40\\r\\nKPX Kcommaaccent omacron -40\\r\\nKPX Kcommaaccent oslash -40\\r\\nKPX Kcommaaccent otilde -40\\r\\nKPX Kcommaaccent u -40\\r\\nKPX Kcommaaccent uacute -40\\r\\nKPX Kcommaaccent ucircumflex -40\\r\\nKPX Kcommaaccent udieresis -40\\r\\nKPX Kcommaaccent ugrave -40\\r\\nKPX Kcommaaccent uhungarumlaut -40\\r\\nKPX Kcommaaccent umacron -40\\r\\nKPX Kcommaaccent uogonek -40\\r\\nKPX Kcommaaccent uring -40\\r\\nKPX Kcommaaccent y -40\\r\\nKPX Kcommaaccent yacute -40\\r\\nKPX Kcommaaccent ydieresis -40\\r\\nKPX L T -20\\r\\nKPX L Tcaron -20\\r\\nKPX L Tcommaaccent -20\\r\\nKPX L V -55\\r\\nKPX L W -55\\r\\nKPX L Y -20\\r\\nKPX L Yacute -20\\r\\nKPX L Ydieresis -20\\r\\nKPX L quoteright -37\\r\\nKPX L y -30\\r\\nKPX L yacute -30\\r\\nKPX L ydieresis -30\\r\\nKPX Lacute T -20\\r\\nKPX Lacute Tcaron -20\\r\\nKPX Lacute Tcommaaccent -20\\r\\nKPX Lacute V -55\\r\\nKPX Lacute W -55\\r\\nKPX Lacute Y -20\\r\\nKPX Lacute Yacute -20\\r\\nKPX Lacute Ydieresis -20\\r\\nKPX Lacute quoteright -37\\r\\nKPX Lacute y -30\\r\\nKPX Lacute yacute -30\\r\\nKPX Lacute ydieresis -30\\r\\nKPX Lcommaaccent T -20\\r\\nKPX Lcommaaccent Tcaron -20\\r\\nKPX Lcommaaccent Tcommaaccent -20\\r\\nKPX Lcommaaccent V -55\\r\\nKPX Lcommaaccent W -55\\r\\nKPX Lcommaaccent Y -20\\r\\nKPX Lcommaaccent Yacute -20\\r\\nKPX Lcommaaccent Ydieresis -20\\r\\nKPX Lcommaaccent quoteright -37\\r\\nKPX Lcommaaccent y -30\\r\\nKPX Lcommaaccent yacute -30\\r\\nKPX Lcommaaccent ydieresis -30\\r\\nKPX Lslash T -20\\r\\nKPX Lslash Tcaron -20\\r\\nKPX Lslash Tcommaaccent -20\\r\\nKPX Lslash V -55\\r\\nKPX Lslash W -55\\r\\nKPX Lslash Y -20\\r\\nKPX Lslash Yacute -20\\r\\nKPX Lslash Ydieresis -20\\r\\nKPX Lslash quoteright -37\\r\\nKPX Lslash y -30\\r\\nKPX Lslash yacute -30\\r\\nKPX Lslash ydieresis -30\\r\\nKPX N A -27\\r\\nKPX N Aacute -27\\r\\nKPX N Abreve -27\\r\\nKPX N Acircumflex -27\\r\\nKPX N Adieresis -27\\r\\nKPX N Agrave -27\\r\\nKPX N Amacron -27\\r\\nKPX N Aogonek -27\\r\\nKPX N Aring -27\\r\\nKPX N Atilde -27\\r\\nKPX Nacute A -27\\r\\nKPX Nacute Aacute -27\\r\\nKPX Nacute Abreve -27\\r\\nKPX Nacute Acircumflex -27\\r\\nKPX Nacute Adieresis -27\\r\\nKPX Nacute Agrave -27\\r\\nKPX Nacute Amacron -27\\r\\nKPX Nacute Aogonek -27\\r\\nKPX Nacute Aring -27\\r\\nKPX Nacute Atilde -27\\r\\nKPX Ncaron A -27\\r\\nKPX Ncaron Aacute -27\\r\\nKPX Ncaron Abreve -27\\r\\nKPX Ncaron Acircumflex -27\\r\\nKPX Ncaron Adieresis -27\\r\\nKPX Ncaron Agrave -27\\r\\nKPX Ncaron Amacron -27\\r\\nKPX Ncaron Aogonek -27\\r\\nKPX Ncaron Aring -27\\r\\nKPX Ncaron Atilde -27\\r\\nKPX Ncommaaccent A -27\\r\\nKPX Ncommaaccent Aacute -27\\r\\nKPX Ncommaaccent Abreve -27\\r\\nKPX Ncommaaccent Acircumflex -27\\r\\nKPX Ncommaaccent Adieresis -27\\r\\nKPX Ncommaaccent Agrave -27\\r\\nKPX Ncommaaccent Amacron -27\\r\\nKPX Ncommaaccent Aogonek -27\\r\\nKPX Ncommaaccent Aring -27\\r\\nKPX Ncommaaccent Atilde -27\\r\\nKPX Ntilde A -27\\r\\nKPX Ntilde Aacute -27\\r\\nKPX Ntilde Abreve -27\\r\\nKPX Ntilde Acircumflex -27\\r\\nKPX Ntilde Adieresis -27\\r\\nKPX Ntilde Agrave -27\\r\\nKPX Ntilde Amacron -27\\r\\nKPX Ntilde Aogonek -27\\r\\nKPX Ntilde Aring -27\\r\\nKPX Ntilde Atilde -27\\r\\nKPX O A -55\\r\\nKPX O Aacute -55\\r\\nKPX O Abreve -55\\r\\nKPX O Acircumflex -55\\r\\nKPX O Adieresis -55\\r\\nKPX O Agrave -55\\r\\nKPX O Amacron -55\\r\\nKPX O Aogonek -55\\r\\nKPX O Aring -55\\r\\nKPX O Atilde -55\\r\\nKPX O T -40\\r\\nKPX O Tcaron -40\\r\\nKPX O Tcommaaccent -40\\r\\nKPX O V -50\\r\\nKPX O W -50\\r\\nKPX O X -40\\r\\nKPX O Y -50\\r\\nKPX O Yacute -50\\r\\nKPX O Ydieresis -50\\r\\nKPX Oacute A -55\\r\\nKPX Oacute Aacute -55\\r\\nKPX Oacute Abreve -55\\r\\nKPX Oacute Acircumflex -55\\r\\nKPX Oacute Adieresis -55\\r\\nKPX Oacute Agrave -55\\r\\nKPX Oacute Amacron -55\\r\\nKPX Oacute Aogonek -55\\r\\nKPX Oacute Aring -55\\r\\nKPX Oacute Atilde -55\\r\\nKPX Oacute T -40\\r\\nKPX Oacute Tcaron -40\\r\\nKPX Oacute Tcommaaccent -40\\r\\nKPX Oacute V -50\\r\\nKPX Oacute W -50\\r\\nKPX Oacute X -40\\r\\nKPX Oacute Y -50\\r\\nKPX Oacute Yacute -50\\r\\nKPX Oacute Ydieresis -50\\r\\nKPX Ocircumflex A -55\\r\\nKPX Ocircumflex Aacute -55\\r\\nKPX Ocircumflex Abreve -55\\r\\nKPX Ocircumflex Acircumflex -55\\r\\nKPX Ocircumflex Adieresis -55\\r\\nKPX Ocircumflex Agrave -55\\r\\nKPX Ocircumflex Amacron -55\\r\\nKPX Ocircumflex Aogonek -55\\r\\nKPX Ocircumflex Aring -55\\r\\nKPX Ocircumflex Atilde -55\\r\\nKPX Ocircumflex T -40\\r\\nKPX Ocircumflex Tcaron -40\\r\\nKPX Ocircumflex Tcommaaccent -40\\r\\nKPX Ocircumflex V -50\\r\\nKPX Ocircumflex W -50\\r\\nKPX Ocircumflex X -40\\r\\nKPX Ocircumflex Y -50\\r\\nKPX Ocircumflex Yacute -50\\r\\nKPX Ocircumflex Ydieresis -50\\r\\nKPX Odieresis A -55\\r\\nKPX Odieresis Aacute -55\\r\\nKPX Odieresis Abreve -55\\r\\nKPX Odieresis Acircumflex -55\\r\\nKPX Odieresis Adieresis -55\\r\\nKPX Odieresis Agrave -55\\r\\nKPX Odieresis Amacron -55\\r\\nKPX Odieresis Aogonek -55\\r\\nKPX Odieresis Aring -55\\r\\nKPX Odieresis Atilde -55\\r\\nKPX Odieresis T -40\\r\\nKPX Odieresis Tcaron -40\\r\\nKPX Odieresis Tcommaaccent -40\\r\\nKPX Odieresis V -50\\r\\nKPX Odieresis W -50\\r\\nKPX Odieresis X -40\\r\\nKPX Odieresis Y -50\\r\\nKPX Odieresis Yacute -50\\r\\nKPX Odieresis Ydieresis -50\\r\\nKPX Ograve A -55\\r\\nKPX Ograve Aacute -55\\r\\nKPX Ograve Abreve -55\\r\\nKPX Ograve Acircumflex -55\\r\\nKPX Ograve Adieresis -55\\r\\nKPX Ograve Agrave -55\\r\\nKPX Ograve Amacron -55\\r\\nKPX Ograve Aogonek -55\\r\\nKPX Ograve Aring -55\\r\\nKPX Ograve Atilde -55\\r\\nKPX Ograve T -40\\r\\nKPX Ograve Tcaron -40\\r\\nKPX Ograve Tcommaaccent -40\\r\\nKPX Ograve V -50\\r\\nKPX Ograve W -50\\r\\nKPX Ograve X -40\\r\\nKPX Ograve Y -50\\r\\nKPX Ograve Yacute -50\\r\\nKPX Ograve Ydieresis -50\\r\\nKPX Ohungarumlaut A -55\\r\\nKPX Ohungarumlaut Aacute -55\\r\\nKPX Ohungarumlaut Abreve -55\\r\\nKPX Ohungarumlaut Acircumflex -55\\r\\nKPX Ohungarumlaut Adieresis -55\\r\\nKPX Ohungarumlaut Agrave -55\\r\\nKPX Ohungarumlaut Amacron -55\\r\\nKPX Ohungarumlaut Aogonek -55\\r\\nKPX Ohungarumlaut Aring -55\\r\\nKPX Ohungarumlaut Atilde -55\\r\\nKPX Ohungarumlaut T -40\\r\\nKPX Ohungarumlaut Tcaron -40\\r\\nKPX Ohungarumlaut Tcommaaccent -40\\r\\nKPX Ohungarumlaut V -50\\r\\nKPX Ohungarumlaut W -50\\r\\nKPX Ohungarumlaut X -40\\r\\nKPX Ohungarumlaut Y -50\\r\\nKPX Ohungarumlaut Yacute -50\\r\\nKPX Ohungarumlaut Ydieresis -50\\r\\nKPX Omacron A -55\\r\\nKPX Omacron Aacute -55\\r\\nKPX Omacron Abreve -55\\r\\nKPX Omacron Acircumflex -55\\r\\nKPX Omacron Adieresis -55\\r\\nKPX Omacron Agrave -55\\r\\nKPX Omacron Amacron -55\\r\\nKPX Omacron Aogonek -55\\r\\nKPX Omacron Aring -55\\r\\nKPX Omacron Atilde -55\\r\\nKPX Omacron T -40\\r\\nKPX Omacron Tcaron -40\\r\\nKPX Omacron Tcommaaccent -40\\r\\nKPX Omacron V -50\\r\\nKPX Omacron W -50\\r\\nKPX Omacron X -40\\r\\nKPX Omacron Y -50\\r\\nKPX Omacron Yacute -50\\r\\nKPX Omacron Ydieresis -50\\r\\nKPX Oslash A -55\\r\\nKPX Oslash Aacute -55\\r\\nKPX Oslash Abreve -55\\r\\nKPX Oslash Acircumflex -55\\r\\nKPX Oslash Adieresis -55\\r\\nKPX Oslash Agrave -55\\r\\nKPX Oslash Amacron -55\\r\\nKPX Oslash Aogonek -55\\r\\nKPX Oslash Aring -55\\r\\nKPX Oslash Atilde -55\\r\\nKPX Oslash T -40\\r\\nKPX Oslash Tcaron -40\\r\\nKPX Oslash Tcommaaccent -40\\r\\nKPX Oslash V -50\\r\\nKPX Oslash W -50\\r\\nKPX Oslash X -40\\r\\nKPX Oslash Y -50\\r\\nKPX Oslash Yacute -50\\r\\nKPX Oslash Ydieresis -50\\r\\nKPX Otilde A -55\\r\\nKPX Otilde Aacute -55\\r\\nKPX Otilde Abreve -55\\r\\nKPX Otilde Acircumflex -55\\r\\nKPX Otilde Adieresis -55\\r\\nKPX Otilde Agrave -55\\r\\nKPX Otilde Amacron -55\\r\\nKPX Otilde Aogonek -55\\r\\nKPX Otilde Aring -55\\r\\nKPX Otilde Atilde -55\\r\\nKPX Otilde T -40\\r\\nKPX Otilde Tcaron -40\\r\\nKPX Otilde Tcommaaccent -40\\r\\nKPX Otilde V -50\\r\\nKPX Otilde W -50\\r\\nKPX Otilde X -40\\r\\nKPX Otilde Y -50\\r\\nKPX Otilde Yacute -50\\r\\nKPX Otilde Ydieresis -50\\r\\nKPX P A -90\\r\\nKPX P Aacute -90\\r\\nKPX P Abreve -90\\r\\nKPX P Acircumflex -90\\r\\nKPX P Adieresis -90\\r\\nKPX P Agrave -90\\r\\nKPX P Amacron -90\\r\\nKPX P Aogonek -90\\r\\nKPX P Aring -90\\r\\nKPX P Atilde -90\\r\\nKPX P a -80\\r\\nKPX P aacute -80\\r\\nKPX P abreve -80\\r\\nKPX P acircumflex -80\\r\\nKPX P adieresis -80\\r\\nKPX P agrave -80\\r\\nKPX P amacron -80\\r\\nKPX P aogonek -80\\r\\nKPX P aring -80\\r\\nKPX P atilde -80\\r\\nKPX P comma -135\\r\\nKPX P e -80\\r\\nKPX P eacute -80\\r\\nKPX P ecaron -80\\r\\nKPX P ecircumflex -80\\r\\nKPX P edieresis -80\\r\\nKPX P edotaccent -80\\r\\nKPX P egrave -80\\r\\nKPX P emacron -80\\r\\nKPX P eogonek -80\\r\\nKPX P o -80\\r\\nKPX P oacute -80\\r\\nKPX P ocircumflex -80\\r\\nKPX P odieresis -80\\r\\nKPX P ograve -80\\r\\nKPX P ohungarumlaut -80\\r\\nKPX P omacron -80\\r\\nKPX P oslash -80\\r\\nKPX P otilde -80\\r\\nKPX P period -135\\r\\nKPX Q U -10\\r\\nKPX Q Uacute -10\\r\\nKPX Q Ucircumflex -10\\r\\nKPX Q Udieresis -10\\r\\nKPX Q Ugrave -10\\r\\nKPX Q Uhungarumlaut -10\\r\\nKPX Q Umacron -10\\r\\nKPX Q Uogonek -10\\r\\nKPX Q Uring -10\\r\\nKPX R O -40\\r\\nKPX R Oacute -40\\r\\nKPX R Ocircumflex -40\\r\\nKPX R Odieresis -40\\r\\nKPX R Ograve -40\\r\\nKPX R Ohungarumlaut -40\\r\\nKPX R Omacron -40\\r\\nKPX R Oslash -40\\r\\nKPX R Otilde -40\\r\\nKPX R U -40\\r\\nKPX R Uacute -40\\r\\nKPX R Ucircumflex -40\\r\\nKPX R Udieresis -40\\r\\nKPX R Ugrave -40\\r\\nKPX R Uhungarumlaut -40\\r\\nKPX R Umacron -40\\r\\nKPX R Uogonek -40\\r\\nKPX R Uring -40\\r\\nKPX R V -18\\r\\nKPX R W -18\\r\\nKPX R Y -18\\r\\nKPX R Yacute -18\\r\\nKPX R Ydieresis -18\\r\\nKPX Racute O -40\\r\\nKPX Racute Oacute -40\\r\\nKPX Racute Ocircumflex -40\\r\\nKPX Racute Odieresis -40\\r\\nKPX Racute Ograve -40\\r\\nKPX Racute Ohungarumlaut -40\\r\\nKPX Racute Omacron -40\\r\\nKPX Racute Oslash -40\\r\\nKPX Racute Otilde -40\\r\\nKPX Racute U -40\\r\\nKPX Racute Uacute -40\\r\\nKPX Racute Ucircumflex -40\\r\\nKPX Racute Udieresis -40\\r\\nKPX Racute Ugrave -40\\r\\nKPX Racute Uhungarumlaut -40\\r\\nKPX Racute Umacron -40\\r\\nKPX Racute Uogonek -40\\r\\nKPX Racute Uring -40\\r\\nKPX Racute V -18\\r\\nKPX Racute W -18\\r\\nKPX Racute Y -18\\r\\nKPX Racute Yacute -18\\r\\nKPX Racute Ydieresis -18\\r\\nKPX Rcaron O -40\\r\\nKPX Rcaron Oacute -40\\r\\nKPX Rcaron Ocircumflex -40\\r\\nKPX Rcaron Odieresis -40\\r\\nKPX Rcaron Ograve -40\\r\\nKPX Rcaron Ohungarumlaut -40\\r\\nKPX Rcaron Omacron -40\\r\\nKPX Rcaron Oslash -40\\r\\nKPX Rcaron Otilde -40\\r\\nKPX Rcaron U -40\\r\\nKPX Rcaron Uacute -40\\r\\nKPX Rcaron Ucircumflex -40\\r\\nKPX Rcaron Udieresis -40\\r\\nKPX Rcaron Ugrave -40\\r\\nKPX Rcaron Uhungarumlaut -40\\r\\nKPX Rcaron Umacron -40\\r\\nKPX Rcaron Uogonek -40\\r\\nKPX Rcaron Uring -40\\r\\nKPX Rcaron V -18\\r\\nKPX Rcaron W -18\\r\\nKPX Rcaron Y -18\\r\\nKPX Rcaron Yacute -18\\r\\nKPX Rcaron Ydieresis -18\\r\\nKPX Rcommaaccent O -40\\r\\nKPX Rcommaaccent Oacute -40\\r\\nKPX Rcommaaccent Ocircumflex -40\\r\\nKPX Rcommaaccent Odieresis -40\\r\\nKPX Rcommaaccent Ograve -40\\r\\nKPX Rcommaaccent Ohungarumlaut -40\\r\\nKPX Rcommaaccent Omacron -40\\r\\nKPX Rcommaaccent Oslash -40\\r\\nKPX Rcommaaccent Otilde -40\\r\\nKPX Rcommaaccent U -40\\r\\nKPX Rcommaaccent Uacute -40\\r\\nKPX Rcommaaccent Ucircumflex -40\\r\\nKPX Rcommaaccent Udieresis -40\\r\\nKPX Rcommaaccent Ugrave -40\\r\\nKPX Rcommaaccent Uhungarumlaut -40\\r\\nKPX Rcommaaccent Umacron -40\\r\\nKPX Rcommaaccent Uogonek -40\\r\\nKPX Rcommaaccent Uring -40\\r\\nKPX Rcommaaccent V -18\\r\\nKPX Rcommaaccent W -18\\r\\nKPX Rcommaaccent Y -18\\r\\nKPX Rcommaaccent Yacute -18\\r\\nKPX Rcommaaccent Ydieresis -18\\r\\nKPX T A -50\\r\\nKPX T Aacute -50\\r\\nKPX T Abreve -50\\r\\nKPX T Acircumflex -50\\r\\nKPX T Adieresis -50\\r\\nKPX T Agrave -50\\r\\nKPX T Amacron -50\\r\\nKPX T Aogonek -50\\r\\nKPX T Aring -50\\r\\nKPX T Atilde -50\\r\\nKPX T O -18\\r\\nKPX T Oacute -18\\r\\nKPX T Ocircumflex -18\\r\\nKPX T Odieresis -18\\r\\nKPX T Ograve -18\\r\\nKPX T Ohungarumlaut -18\\r\\nKPX T Omacron -18\\r\\nKPX T Oslash -18\\r\\nKPX T Otilde -18\\r\\nKPX T a -92\\r\\nKPX T aacute -92\\r\\nKPX T abreve -92\\r\\nKPX T acircumflex -92\\r\\nKPX T adieresis -92\\r\\nKPX T agrave -92\\r\\nKPX T amacron -92\\r\\nKPX T aogonek -92\\r\\nKPX T aring -92\\r\\nKPX T atilde -92\\r\\nKPX T colon -55\\r\\nKPX T comma -74\\r\\nKPX T e -92\\r\\nKPX T eacute -92\\r\\nKPX T ecaron -92\\r\\nKPX T ecircumflex -52\\r\\nKPX T edieresis -52\\r\\nKPX T edotaccent -92\\r\\nKPX T egrave -52\\r\\nKPX T emacron -52\\r\\nKPX T eogonek -92\\r\\nKPX T hyphen -74\\r\\nKPX T i -55\\r\\nKPX T iacute -55\\r\\nKPX T iogonek -55\\r\\nKPX T o -92\\r\\nKPX T oacute -92\\r\\nKPX T ocircumflex -92\\r\\nKPX T odieresis -92\\r\\nKPX T ograve -92\\r\\nKPX T ohungarumlaut -92\\r\\nKPX T omacron -92\\r\\nKPX T oslash -92\\r\\nKPX T otilde -92\\r\\nKPX T period -74\\r\\nKPX T r -55\\r\\nKPX T racute -55\\r\\nKPX T rcaron -55\\r\\nKPX T rcommaaccent -55\\r\\nKPX T semicolon -65\\r\\nKPX T u -55\\r\\nKPX T uacute -55\\r\\nKPX T ucircumflex -55\\r\\nKPX T udieresis -55\\r\\nKPX T ugrave -55\\r\\nKPX T uhungarumlaut -55\\r\\nKPX T umacron -55\\r\\nKPX T uogonek -55\\r\\nKPX T uring -55\\r\\nKPX T w -74\\r\\nKPX T y -74\\r\\nKPX T yacute -74\\r\\nKPX T ydieresis -34\\r\\nKPX Tcaron A -50\\r\\nKPX Tcaron Aacute -50\\r\\nKPX Tcaron Abreve -50\\r\\nKPX Tcaron Acircumflex -50\\r\\nKPX Tcaron Adieresis -50\\r\\nKPX Tcaron Agrave -50\\r\\nKPX Tcaron Amacron -50\\r\\nKPX Tcaron Aogonek -50\\r\\nKPX Tcaron Aring -50\\r\\nKPX Tcaron Atilde -50\\r\\nKPX Tcaron O -18\\r\\nKPX Tcaron Oacute -18\\r\\nKPX Tcaron Ocircumflex -18\\r\\nKPX Tcaron Odieresis -18\\r\\nKPX Tcaron Ograve -18\\r\\nKPX Tcaron Ohungarumlaut -18\\r\\nKPX Tcaron Omacron -18\\r\\nKPX Tcaron Oslash -18\\r\\nKPX Tcaron Otilde -18\\r\\nKPX Tcaron a -92\\r\\nKPX Tcaron aacute -92\\r\\nKPX Tcaron abreve -92\\r\\nKPX Tcaron acircumflex -92\\r\\nKPX Tcaron adieresis -92\\r\\nKPX Tcaron agrave -92\\r\\nKPX Tcaron amacron -92\\r\\nKPX Tcaron aogonek -92\\r\\nKPX Tcaron aring -92\\r\\nKPX Tcaron atilde -92\\r\\nKPX Tcaron colon -55\\r\\nKPX Tcaron comma -74\\r\\nKPX Tcaron e -92\\r\\nKPX Tcaron eacute -92\\r\\nKPX Tcaron ecaron -92\\r\\nKPX Tcaron ecircumflex -52\\r\\nKPX Tcaron edieresis -52\\r\\nKPX Tcaron edotaccent -92\\r\\nKPX Tcaron egrave -52\\r\\nKPX Tcaron emacron -52\\r\\nKPX Tcaron eogonek -92\\r\\nKPX Tcaron hyphen -74\\r\\nKPX Tcaron i -55\\r\\nKPX Tcaron iacute -55\\r\\nKPX Tcaron iogonek -55\\r\\nKPX Tcaron o -92\\r\\nKPX Tcaron oacute -92\\r\\nKPX Tcaron ocircumflex -92\\r\\nKPX Tcaron odieresis -92\\r\\nKPX Tcaron ograve -92\\r\\nKPX Tcaron ohungarumlaut -92\\r\\nKPX Tcaron omacron -92\\r\\nKPX Tcaron oslash -92\\r\\nKPX Tcaron otilde -92\\r\\nKPX Tcaron period -74\\r\\nKPX Tcaron r -55\\r\\nKPX Tcaron racute -55\\r\\nKPX Tcaron rcaron -55\\r\\nKPX Tcaron rcommaaccent -55\\r\\nKPX Tcaron semicolon -65\\r\\nKPX Tcaron u -55\\r\\nKPX Tcaron uacute -55\\r\\nKPX Tcaron ucircumflex -55\\r\\nKPX Tcaron udieresis -55\\r\\nKPX Tcaron ugrave -55\\r\\nKPX Tcaron uhungarumlaut -55\\r\\nKPX Tcaron umacron -55\\r\\nKPX Tcaron uogonek -55\\r\\nKPX Tcaron uring -55\\r\\nKPX Tcaron w -74\\r\\nKPX Tcaron y -74\\r\\nKPX Tcaron yacute -74\\r\\nKPX Tcaron ydieresis -34\\r\\nKPX Tcommaaccent A -50\\r\\nKPX Tcommaaccent Aacute -50\\r\\nKPX Tcommaaccent Abreve -50\\r\\nKPX Tcommaaccent Acircumflex -50\\r\\nKPX Tcommaaccent Adieresis -50\\r\\nKPX Tcommaaccent Agrave -50\\r\\nKPX Tcommaaccent Amacron -50\\r\\nKPX Tcommaaccent Aogonek -50\\r\\nKPX Tcommaaccent Aring -50\\r\\nKPX Tcommaaccent Atilde -50\\r\\nKPX Tcommaaccent O -18\\r\\nKPX Tcommaaccent Oacute -18\\r\\nKPX Tcommaaccent Ocircumflex -18\\r\\nKPX Tcommaaccent Odieresis -18\\r\\nKPX Tcommaaccent Ograve -18\\r\\nKPX Tcommaaccent Ohungarumlaut -18\\r\\nKPX Tcommaaccent Omacron -18\\r\\nKPX Tcommaaccent Oslash -18\\r\\nKPX Tcommaaccent Otilde -18\\r\\nKPX Tcommaaccent a -92\\r\\nKPX Tcommaaccent aacute -92\\r\\nKPX Tcommaaccent abreve -92\\r\\nKPX Tcommaaccent acircumflex -92\\r\\nKPX Tcommaaccent adieresis -92\\r\\nKPX Tcommaaccent agrave -92\\r\\nKPX Tcommaaccent amacron -92\\r\\nKPX Tcommaaccent aogonek -92\\r\\nKPX Tcommaaccent aring -92\\r\\nKPX Tcommaaccent atilde -92\\r\\nKPX Tcommaaccent colon -55\\r\\nKPX Tcommaaccent comma -74\\r\\nKPX Tcommaaccent e -92\\r\\nKPX Tcommaaccent eacute -92\\r\\nKPX Tcommaaccent ecaron -92\\r\\nKPX Tcommaaccent ecircumflex -52\\r\\nKPX Tcommaaccent edieresis -52\\r\\nKPX Tcommaaccent edotaccent -92\\r\\nKPX Tcommaaccent egrave -52\\r\\nKPX Tcommaaccent emacron -52\\r\\nKPX Tcommaaccent eogonek -92\\r\\nKPX Tcommaaccent hyphen -74\\r\\nKPX Tcommaaccent i -55\\r\\nKPX Tcommaaccent iacute -55\\r\\nKPX Tcommaaccent iogonek -55\\r\\nKPX Tcommaaccent o -92\\r\\nKPX Tcommaaccent oacute -92\\r\\nKPX Tcommaaccent ocircumflex -92\\r\\nKPX Tcommaaccent odieresis -92\\r\\nKPX Tcommaaccent ograve -92\\r\\nKPX Tcommaaccent ohungarumlaut -92\\r\\nKPX Tcommaaccent omacron -92\\r\\nKPX Tcommaaccent oslash -92\\r\\nKPX Tcommaaccent otilde -92\\r\\nKPX Tcommaaccent period -74\\r\\nKPX Tcommaaccent r -55\\r\\nKPX Tcommaaccent racute -55\\r\\nKPX Tcommaaccent rcaron -55\\r\\nKPX Tcommaaccent rcommaaccent -55\\r\\nKPX Tcommaaccent semicolon -65\\r\\nKPX Tcommaaccent u -55\\r\\nKPX Tcommaaccent uacute -55\\r\\nKPX Tcommaaccent ucircumflex -55\\r\\nKPX Tcommaaccent udieresis -55\\r\\nKPX Tcommaaccent ugrave -55\\r\\nKPX Tcommaaccent uhungarumlaut -55\\r\\nKPX Tcommaaccent umacron -55\\r\\nKPX Tcommaaccent uogonek -55\\r\\nKPX Tcommaaccent uring -55\\r\\nKPX Tcommaaccent w -74\\r\\nKPX Tcommaaccent y -74\\r\\nKPX Tcommaaccent yacute -74\\r\\nKPX Tcommaaccent ydieresis -34\\r\\nKPX U A -40\\r\\nKPX U Aacute -40\\r\\nKPX U Abreve -40\\r\\nKPX U Acircumflex -40\\r\\nKPX U Adieresis -40\\r\\nKPX U Agrave -40\\r\\nKPX U Amacron -40\\r\\nKPX U Aogonek -40\\r\\nKPX U Aring -40\\r\\nKPX U Atilde -40\\r\\nKPX U comma -25\\r\\nKPX U period -25\\r\\nKPX Uacute A -40\\r\\nKPX Uacute Aacute -40\\r\\nKPX Uacute Abreve -40\\r\\nKPX Uacute Acircumflex -40\\r\\nKPX Uacute Adieresis -40\\r\\nKPX Uacute Agrave -40\\r\\nKPX Uacute Amacron -40\\r\\nKPX Uacute Aogonek -40\\r\\nKPX Uacute Aring -40\\r\\nKPX Uacute Atilde -40\\r\\nKPX Uacute comma -25\\r\\nKPX Uacute period -25\\r\\nKPX Ucircumflex A -40\\r\\nKPX Ucircumflex Aacute -40\\r\\nKPX Ucircumflex Abreve -40\\r\\nKPX Ucircumflex Acircumflex -40\\r\\nKPX Ucircumflex Adieresis -40\\r\\nKPX Ucircumflex Agrave -40\\r\\nKPX Ucircumflex Amacron -40\\r\\nKPX Ucircumflex Aogonek -40\\r\\nKPX Ucircumflex Aring -40\\r\\nKPX Ucircumflex Atilde -40\\r\\nKPX Ucircumflex comma -25\\r\\nKPX Ucircumflex period -25\\r\\nKPX Udieresis A -40\\r\\nKPX Udieresis Aacute -40\\r\\nKPX Udieresis Abreve -40\\r\\nKPX Udieresis Acircumflex -40\\r\\nKPX Udieresis Adieresis -40\\r\\nKPX Udieresis Agrave -40\\r\\nKPX Udieresis Amacron -40\\r\\nKPX Udieresis Aogonek -40\\r\\nKPX Udieresis Aring -40\\r\\nKPX Udieresis Atilde -40\\r\\nKPX Udieresis comma -25\\r\\nKPX Udieresis period -25\\r\\nKPX Ugrave A -40\\r\\nKPX Ugrave Aacute -40\\r\\nKPX Ugrave Abreve -40\\r\\nKPX Ugrave Acircumflex -40\\r\\nKPX Ugrave Adieresis -40\\r\\nKPX Ugrave Agrave -40\\r\\nKPX Ugrave Amacron -40\\r\\nKPX Ugrave Aogonek -40\\r\\nKPX Ugrave Aring -40\\r\\nKPX Ugrave Atilde -40\\r\\nKPX Ugrave comma -25\\r\\nKPX Ugrave period -25\\r\\nKPX Uhungarumlaut A -40\\r\\nKPX Uhungarumlaut Aacute -40\\r\\nKPX Uhungarumlaut Abreve -40\\r\\nKPX Uhungarumlaut Acircumflex -40\\r\\nKPX Uhungarumlaut Adieresis -40\\r\\nKPX Uhungarumlaut Agrave -40\\r\\nKPX Uhungarumlaut Amacron -40\\r\\nKPX Uhungarumlaut Aogonek -40\\r\\nKPX Uhungarumlaut Aring -40\\r\\nKPX Uhungarumlaut Atilde -40\\r\\nKPX Uhungarumlaut comma -25\\r\\nKPX Uhungarumlaut period -25\\r\\nKPX Umacron A -40\\r\\nKPX Umacron Aacute -40\\r\\nKPX Umacron Abreve -40\\r\\nKPX Umacron Acircumflex -40\\r\\nKPX Umacron Adieresis -40\\r\\nKPX Umacron Agrave -40\\r\\nKPX Umacron Amacron -40\\r\\nKPX Umacron Aogonek -40\\r\\nKPX Umacron Aring -40\\r\\nKPX Umacron Atilde -40\\r\\nKPX Umacron comma -25\\r\\nKPX Umacron period -25\\r\\nKPX Uogonek A -40\\r\\nKPX Uogonek Aacute -40\\r\\nKPX Uogonek Abreve -40\\r\\nKPX Uogonek Acircumflex -40\\r\\nKPX Uogonek Adieresis -40\\r\\nKPX Uogonek Agrave -40\\r\\nKPX Uogonek Amacron -40\\r\\nKPX Uogonek Aogonek -40\\r\\nKPX Uogonek Aring -40\\r\\nKPX Uogonek Atilde -40\\r\\nKPX Uogonek comma -25\\r\\nKPX Uogonek period -25\\r\\nKPX Uring A -40\\r\\nKPX Uring Aacute -40\\r\\nKPX Uring Abreve -40\\r\\nKPX Uring Acircumflex -40\\r\\nKPX Uring Adieresis -40\\r\\nKPX Uring Agrave -40\\r\\nKPX Uring Amacron -40\\r\\nKPX Uring Aogonek -40\\r\\nKPX Uring Aring -40\\r\\nKPX Uring Atilde -40\\r\\nKPX Uring comma -25\\r\\nKPX Uring period -25\\r\\nKPX V A -60\\r\\nKPX V Aacute -60\\r\\nKPX V Abreve -60\\r\\nKPX V Acircumflex -60\\r\\nKPX V Adieresis -60\\r\\nKPX V Agrave -60\\r\\nKPX V Amacron -60\\r\\nKPX V Aogonek -60\\r\\nKPX V Aring -60\\r\\nKPX V Atilde -60\\r\\nKPX V O -30\\r\\nKPX V Oacute -30\\r\\nKPX V Ocircumflex -30\\r\\nKPX V Odieresis -30\\r\\nKPX V Ograve -30\\r\\nKPX V Ohungarumlaut -30\\r\\nKPX V Omacron -30\\r\\nKPX V Oslash -30\\r\\nKPX V Otilde -30\\r\\nKPX V a -111\\r\\nKPX V aacute -111\\r\\nKPX V abreve -111\\r\\nKPX V acircumflex -111\\r\\nKPX V adieresis -111\\r\\nKPX V agrave -111\\r\\nKPX V amacron -111\\r\\nKPX V aogonek -111\\r\\nKPX V aring -111\\r\\nKPX V atilde -111\\r\\nKPX V colon -65\\r\\nKPX V comma -129\\r\\nKPX V e -111\\r\\nKPX V eacute -111\\r\\nKPX V ecaron -111\\r\\nKPX V ecircumflex -111\\r\\nKPX V edieresis -71\\r\\nKPX V edotaccent -111\\r\\nKPX V egrave -71\\r\\nKPX V emacron -71\\r\\nKPX V eogonek -111\\r\\nKPX V hyphen -55\\r\\nKPX V i -74\\r\\nKPX V iacute -74\\r\\nKPX V icircumflex -34\\r\\nKPX V idieresis -34\\r\\nKPX V igrave -34\\r\\nKPX V imacron -34\\r\\nKPX V iogonek -74\\r\\nKPX V o -111\\r\\nKPX V oacute -111\\r\\nKPX V ocircumflex -111\\r\\nKPX V odieresis -111\\r\\nKPX V ograve -111\\r\\nKPX V ohungarumlaut -111\\r\\nKPX V omacron -111\\r\\nKPX V oslash -111\\r\\nKPX V otilde -111\\r\\nKPX V period -129\\r\\nKPX V semicolon -74\\r\\nKPX V u -74\\r\\nKPX V uacute -74\\r\\nKPX V ucircumflex -74\\r\\nKPX V udieresis -74\\r\\nKPX V ugrave -74\\r\\nKPX V uhungarumlaut -74\\r\\nKPX V umacron -74\\r\\nKPX V uogonek -74\\r\\nKPX V uring -74\\r\\nKPX W A -60\\r\\nKPX W Aacute -60\\r\\nKPX W Abreve -60\\r\\nKPX W Acircumflex -60\\r\\nKPX W Adieresis -60\\r\\nKPX W Agrave -60\\r\\nKPX W Amacron -60\\r\\nKPX W Aogonek -60\\r\\nKPX W Aring -60\\r\\nKPX W Atilde -60\\r\\nKPX W O -25\\r\\nKPX W Oacute -25\\r\\nKPX W Ocircumflex -25\\r\\nKPX W Odieresis -25\\r\\nKPX W Ograve -25\\r\\nKPX W Ohungarumlaut -25\\r\\nKPX W Omacron -25\\r\\nKPX W Oslash -25\\r\\nKPX W Otilde -25\\r\\nKPX W a -92\\r\\nKPX W aacute -92\\r\\nKPX W abreve -92\\r\\nKPX W acircumflex -92\\r\\nKPX W adieresis -92\\r\\nKPX W agrave -92\\r\\nKPX W amacron -92\\r\\nKPX W aogonek -92\\r\\nKPX W aring -92\\r\\nKPX W atilde -92\\r\\nKPX W colon -65\\r\\nKPX W comma -92\\r\\nKPX W e -92\\r\\nKPX W eacute -92\\r\\nKPX W ecaron -92\\r\\nKPX W ecircumflex -92\\r\\nKPX W edieresis -52\\r\\nKPX W edotaccent -92\\r\\nKPX W egrave -52\\r\\nKPX W emacron -52\\r\\nKPX W eogonek -92\\r\\nKPX W hyphen -37\\r\\nKPX W i -55\\r\\nKPX W iacute -55\\r\\nKPX W iogonek -55\\r\\nKPX W o -92\\r\\nKPX W oacute -92\\r\\nKPX W ocircumflex -92\\r\\nKPX W odieresis -92\\r\\nKPX W ograve -92\\r\\nKPX W ohungarumlaut -92\\r\\nKPX W omacron -92\\r\\nKPX W oslash -92\\r\\nKPX W otilde -92\\r\\nKPX W period -92\\r\\nKPX W semicolon -65\\r\\nKPX W u -55\\r\\nKPX W uacute -55\\r\\nKPX W ucircumflex -55\\r\\nKPX W udieresis -55\\r\\nKPX W ugrave -55\\r\\nKPX W uhungarumlaut -55\\r\\nKPX W umacron -55\\r\\nKPX W uogonek -55\\r\\nKPX W uring -55\\r\\nKPX W y -70\\r\\nKPX W yacute -70\\r\\nKPX W ydieresis -70\\r\\nKPX Y A -50\\r\\nKPX Y Aacute -50\\r\\nKPX Y Abreve -50\\r\\nKPX Y Acircumflex -50\\r\\nKPX Y Adieresis -50\\r\\nKPX Y Agrave -50\\r\\nKPX Y Amacron -50\\r\\nKPX Y Aogonek -50\\r\\nKPX Y Aring -50\\r\\nKPX Y Atilde -50\\r\\nKPX Y O -15\\r\\nKPX Y Oacute -15\\r\\nKPX Y Ocircumflex -15\\r\\nKPX Y Odieresis -15\\r\\nKPX Y Ograve -15\\r\\nKPX Y Ohungarumlaut -15\\r\\nKPX Y Omacron -15\\r\\nKPX Y Oslash -15\\r\\nKPX Y Otilde -15\\r\\nKPX Y a -92\\r\\nKPX Y aacute -92\\r\\nKPX Y abreve -92\\r\\nKPX Y acircumflex -92\\r\\nKPX Y adieresis -92\\r\\nKPX Y agrave -92\\r\\nKPX Y amacron -92\\r\\nKPX Y aogonek -92\\r\\nKPX Y aring -92\\r\\nKPX Y atilde -92\\r\\nKPX Y colon -65\\r\\nKPX Y comma -92\\r\\nKPX Y e -92\\r\\nKPX Y eacute -92\\r\\nKPX Y ecaron -92\\r\\nKPX Y ecircumflex -92\\r\\nKPX Y edieresis -52\\r\\nKPX Y edotaccent -92\\r\\nKPX Y egrave -52\\r\\nKPX Y emacron -52\\r\\nKPX Y eogonek -92\\r\\nKPX Y hyphen -74\\r\\nKPX Y i -74\\r\\nKPX Y iacute -74\\r\\nKPX Y icircumflex -34\\r\\nKPX Y idieresis -34\\r\\nKPX Y igrave -34\\r\\nKPX Y imacron -34\\r\\nKPX Y iogonek -74\\r\\nKPX Y o -92\\r\\nKPX Y oacute -92\\r\\nKPX Y ocircumflex -92\\r\\nKPX Y odieresis -92\\r\\nKPX Y ograve -92\\r\\nKPX Y ohungarumlaut -92\\r\\nKPX Y omacron -92\\r\\nKPX Y oslash -92\\r\\nKPX Y otilde -92\\r\\nKPX Y period -92\\r\\nKPX Y semicolon -65\\r\\nKPX Y u -92\\r\\nKPX Y uacute -92\\r\\nKPX Y ucircumflex -92\\r\\nKPX Y udieresis -92\\r\\nKPX Y ugrave -92\\r\\nKPX Y uhungarumlaut -92\\r\\nKPX Y umacron -92\\r\\nKPX Y uogonek -92\\r\\nKPX Y uring -92\\r\\nKPX Yacute A -50\\r\\nKPX Yacute Aacute -50\\r\\nKPX Yacute Abreve -50\\r\\nKPX Yacute Acircumflex -50\\r\\nKPX Yacute Adieresis -50\\r\\nKPX Yacute Agrave -50\\r\\nKPX Yacute Amacron -50\\r\\nKPX Yacute Aogonek -50\\r\\nKPX Yacute Aring -50\\r\\nKPX Yacute Atilde -50\\r\\nKPX Yacute O -15\\r\\nKPX Yacute Oacute -15\\r\\nKPX Yacute Ocircumflex -15\\r\\nKPX Yacute Odieresis -15\\r\\nKPX Yacute Ograve -15\\r\\nKPX Yacute Ohungarumlaut -15\\r\\nKPX Yacute Omacron -15\\r\\nKPX Yacute Oslash -15\\r\\nKPX Yacute Otilde -15\\r\\nKPX Yacute a -92\\r\\nKPX Yacute aacute -92\\r\\nKPX Yacute abreve -92\\r\\nKPX Yacute acircumflex -92\\r\\nKPX Yacute adieresis -92\\r\\nKPX Yacute agrave -92\\r\\nKPX Yacute amacron -92\\r\\nKPX Yacute aogonek -92\\r\\nKPX Yacute aring -92\\r\\nKPX Yacute atilde -92\\r\\nKPX Yacute colon -65\\r\\nKPX Yacute comma -92\\r\\nKPX Yacute e -92\\r\\nKPX Yacute eacute -92\\r\\nKPX Yacute ecaron -92\\r\\nKPX Yacute ecircumflex -92\\r\\nKPX Yacute edieresis -52\\r\\nKPX Yacute edotaccent -92\\r\\nKPX Yacute egrave -52\\r\\nKPX Yacute emacron -52\\r\\nKPX Yacute eogonek -92\\r\\nKPX Yacute hyphen -74\\r\\nKPX Yacute i -74\\r\\nKPX Yacute iacute -74\\r\\nKPX Yacute icircumflex -34\\r\\nKPX Yacute idieresis -34\\r\\nKPX Yacute igrave -34\\r\\nKPX Yacute imacron -34\\r\\nKPX Yacute iogonek -74\\r\\nKPX Yacute o -92\\r\\nKPX Yacute oacute -92\\r\\nKPX Yacute ocircumflex -92\\r\\nKPX Yacute odieresis -92\\r\\nKPX Yacute ograve -92\\r\\nKPX Yacute ohungarumlaut -92\\r\\nKPX Yacute omacron -92\\r\\nKPX Yacute oslash -92\\r\\nKPX Yacute otilde -92\\r\\nKPX Yacute period -92\\r\\nKPX Yacute semicolon -65\\r\\nKPX Yacute u -92\\r\\nKPX Yacute uacute -92\\r\\nKPX Yacute ucircumflex -92\\r\\nKPX Yacute udieresis -92\\r\\nKPX Yacute ugrave -92\\r\\nKPX Yacute uhungarumlaut -92\\r\\nKPX Yacute umacron -92\\r\\nKPX Yacute uogonek -92\\r\\nKPX Yacute uring -92\\r\\nKPX Ydieresis A -50\\r\\nKPX Ydieresis Aacute -50\\r\\nKPX Ydieresis Abreve -50\\r\\nKPX Ydieresis Acircumflex -50\\r\\nKPX Ydieresis Adieresis -50\\r\\nKPX Ydieresis Agrave -50\\r\\nKPX Ydieresis Amacron -50\\r\\nKPX Ydieresis Aogonek -50\\r\\nKPX Ydieresis Aring -50\\r\\nKPX Ydieresis Atilde -50\\r\\nKPX Ydieresis O -15\\r\\nKPX Ydieresis Oacute -15\\r\\nKPX Ydieresis Ocircumflex -15\\r\\nKPX Ydieresis Odieresis -15\\r\\nKPX Ydieresis Ograve -15\\r\\nKPX Ydieresis Ohungarumlaut -15\\r\\nKPX Ydieresis Omacron -15\\r\\nKPX Ydieresis Oslash -15\\r\\nKPX Ydieresis Otilde -15\\r\\nKPX Ydieresis a -92\\r\\nKPX Ydieresis aacute -92\\r\\nKPX Ydieresis abreve -92\\r\\nKPX Ydieresis acircumflex -92\\r\\nKPX Ydieresis adieresis -92\\r\\nKPX Ydieresis agrave -92\\r\\nKPX Ydieresis amacron -92\\r\\nKPX Ydieresis aogonek -92\\r\\nKPX Ydieresis aring -92\\r\\nKPX Ydieresis atilde -92\\r\\nKPX Ydieresis colon -65\\r\\nKPX Ydieresis comma -92\\r\\nKPX Ydieresis e -92\\r\\nKPX Ydieresis eacute -92\\r\\nKPX Ydieresis ecaron -92\\r\\nKPX Ydieresis ecircumflex -92\\r\\nKPX Ydieresis edieresis -52\\r\\nKPX Ydieresis edotaccent -92\\r\\nKPX Ydieresis egrave -52\\r\\nKPX Ydieresis emacron -52\\r\\nKPX Ydieresis eogonek -92\\r\\nKPX Ydieresis hyphen -74\\r\\nKPX Ydieresis i -74\\r\\nKPX Ydieresis iacute -74\\r\\nKPX Ydieresis icircumflex -34\\r\\nKPX Ydieresis idieresis -34\\r\\nKPX Ydieresis igrave -34\\r\\nKPX Ydieresis imacron -34\\r\\nKPX Ydieresis iogonek -74\\r\\nKPX Ydieresis o -92\\r\\nKPX Ydieresis oacute -92\\r\\nKPX Ydieresis ocircumflex -92\\r\\nKPX Ydieresis odieresis -92\\r\\nKPX Ydieresis ograve -92\\r\\nKPX Ydieresis ohungarumlaut -92\\r\\nKPX Ydieresis omacron -92\\r\\nKPX Ydieresis oslash -92\\r\\nKPX Ydieresis otilde -92\\r\\nKPX Ydieresis period -92\\r\\nKPX Ydieresis semicolon -65\\r\\nKPX Ydieresis u -92\\r\\nKPX Ydieresis uacute -92\\r\\nKPX Ydieresis ucircumflex -92\\r\\nKPX Ydieresis udieresis -92\\r\\nKPX Ydieresis ugrave -92\\r\\nKPX Ydieresis uhungarumlaut -92\\r\\nKPX Ydieresis umacron -92\\r\\nKPX Ydieresis uogonek -92\\r\\nKPX Ydieresis uring -92\\r\\nKPX a g -10\\r\\nKPX a gbreve -10\\r\\nKPX a gcommaaccent -10\\r\\nKPX aacute g -10\\r\\nKPX aacute gbreve -10\\r\\nKPX aacute gcommaaccent -10\\r\\nKPX abreve g -10\\r\\nKPX abreve gbreve -10\\r\\nKPX abreve gcommaaccent -10\\r\\nKPX acircumflex g -10\\r\\nKPX acircumflex gbreve -10\\r\\nKPX acircumflex gcommaaccent -10\\r\\nKPX adieresis g -10\\r\\nKPX adieresis gbreve -10\\r\\nKPX adieresis gcommaaccent -10\\r\\nKPX agrave g -10\\r\\nKPX agrave gbreve -10\\r\\nKPX agrave gcommaaccent -10\\r\\nKPX amacron g -10\\r\\nKPX amacron gbreve -10\\r\\nKPX amacron gcommaaccent -10\\r\\nKPX aogonek g -10\\r\\nKPX aogonek gbreve -10\\r\\nKPX aogonek gcommaaccent -10\\r\\nKPX aring g -10\\r\\nKPX aring gbreve -10\\r\\nKPX aring gcommaaccent -10\\r\\nKPX atilde g -10\\r\\nKPX atilde gbreve -10\\r\\nKPX atilde gcommaaccent -10\\r\\nKPX b period -40\\r\\nKPX b u -20\\r\\nKPX b uacute -20\\r\\nKPX b ucircumflex -20\\r\\nKPX b udieresis -20\\r\\nKPX b ugrave -20\\r\\nKPX b uhungarumlaut -20\\r\\nKPX b umacron -20\\r\\nKPX b uogonek -20\\r\\nKPX b uring -20\\r\\nKPX c h -15\\r\\nKPX c k -20\\r\\nKPX c kcommaaccent -20\\r\\nKPX cacute h -15\\r\\nKPX cacute k -20\\r\\nKPX cacute kcommaaccent -20\\r\\nKPX ccaron h -15\\r\\nKPX ccaron k -20\\r\\nKPX ccaron kcommaaccent -20\\r\\nKPX ccedilla h -15\\r\\nKPX ccedilla k -20\\r\\nKPX ccedilla kcommaaccent -20\\r\\nKPX comma quotedblright -140\\r\\nKPX comma quoteright -140\\r\\nKPX e comma -10\\r\\nKPX e g -40\\r\\nKPX e gbreve -40\\r\\nKPX e gcommaaccent -40\\r\\nKPX e period -15\\r\\nKPX e v -15\\r\\nKPX e w -15\\r\\nKPX e x -20\\r\\nKPX e y -30\\r\\nKPX e yacute -30\\r\\nKPX e ydieresis -30\\r\\nKPX eacute comma -10\\r\\nKPX eacute g -40\\r\\nKPX eacute gbreve -40\\r\\nKPX eacute gcommaaccent -40\\r\\nKPX eacute period -15\\r\\nKPX eacute v -15\\r\\nKPX eacute w -15\\r\\nKPX eacute x -20\\r\\nKPX eacute y -30\\r\\nKPX eacute yacute -30\\r\\nKPX eacute ydieresis -30\\r\\nKPX ecaron comma -10\\r\\nKPX ecaron g -40\\r\\nKPX ecaron gbreve -40\\r\\nKPX ecaron gcommaaccent -40\\r\\nKPX ecaron period -15\\r\\nKPX ecaron v -15\\r\\nKPX ecaron w -15\\r\\nKPX ecaron x -20\\r\\nKPX ecaron y -30\\r\\nKPX ecaron yacute -30\\r\\nKPX ecaron ydieresis -30\\r\\nKPX ecircumflex comma -10\\r\\nKPX ecircumflex g -40\\r\\nKPX ecircumflex gbreve -40\\r\\nKPX ecircumflex gcommaaccent -40\\r\\nKPX ecircumflex period -15\\r\\nKPX ecircumflex v -15\\r\\nKPX ecircumflex w -15\\r\\nKPX ecircumflex x -20\\r\\nKPX ecircumflex y -30\\r\\nKPX ecircumflex yacute -30\\r\\nKPX ecircumflex ydieresis -30\\r\\nKPX edieresis comma -10\\r\\nKPX edieresis g -40\\r\\nKPX edieresis gbreve -40\\r\\nKPX edieresis gcommaaccent -40\\r\\nKPX edieresis period -15\\r\\nKPX edieresis v -15\\r\\nKPX edieresis w -15\\r\\nKPX edieresis x -20\\r\\nKPX edieresis y -30\\r\\nKPX edieresis yacute -30\\r\\nKPX edieresis ydieresis -30\\r\\nKPX edotaccent comma -10\\r\\nKPX edotaccent g -40\\r\\nKPX edotaccent gbreve -40\\r\\nKPX edotaccent gcommaaccent -40\\r\\nKPX edotaccent period -15\\r\\nKPX edotaccent v -15\\r\\nKPX edotaccent w -15\\r\\nKPX edotaccent x -20\\r\\nKPX edotaccent y -30\\r\\nKPX edotaccent yacute -30\\r\\nKPX edotaccent ydieresis -30\\r\\nKPX egrave comma -10\\r\\nKPX egrave g -40\\r\\nKPX egrave gbreve -40\\r\\nKPX egrave gcommaaccent -40\\r\\nKPX egrave period -15\\r\\nKPX egrave v -15\\r\\nKPX egrave w -15\\r\\nKPX egrave x -20\\r\\nKPX egrave y -30\\r\\nKPX egrave yacute -30\\r\\nKPX egrave ydieresis -30\\r\\nKPX emacron comma -10\\r\\nKPX emacron g -40\\r\\nKPX emacron gbreve -40\\r\\nKPX emacron gcommaaccent -40\\r\\nKPX emacron period -15\\r\\nKPX emacron v -15\\r\\nKPX emacron w -15\\r\\nKPX emacron x -20\\r\\nKPX emacron y -30\\r\\nKPX emacron yacute -30\\r\\nKPX emacron ydieresis -30\\r\\nKPX eogonek comma -10\\r\\nKPX eogonek g -40\\r\\nKPX eogonek gbreve -40\\r\\nKPX eogonek gcommaaccent -40\\r\\nKPX eogonek period -15\\r\\nKPX eogonek v -15\\r\\nKPX eogonek w -15\\r\\nKPX eogonek x -20\\r\\nKPX eogonek y -30\\r\\nKPX eogonek yacute -30\\r\\nKPX eogonek ydieresis -30\\r\\nKPX f comma -10\\r\\nKPX f dotlessi -60\\r\\nKPX f f -18\\r\\nKPX f i -20\\r\\nKPX f iogonek -20\\r\\nKPX f period -15\\r\\nKPX f quoteright 92\\r\\nKPX g comma -10\\r\\nKPX g e -10\\r\\nKPX g eacute -10\\r\\nKPX g ecaron -10\\r\\nKPX g ecircumflex -10\\r\\nKPX g edieresis -10\\r\\nKPX g edotaccent -10\\r\\nKPX g egrave -10\\r\\nKPX g emacron -10\\r\\nKPX g eogonek -10\\r\\nKPX g g -10\\r\\nKPX g gbreve -10\\r\\nKPX g gcommaaccent -10\\r\\nKPX g period -15\\r\\nKPX gbreve comma -10\\r\\nKPX gbreve e -10\\r\\nKPX gbreve eacute -10\\r\\nKPX gbreve ecaron -10\\r\\nKPX gbreve ecircumflex -10\\r\\nKPX gbreve edieresis -10\\r\\nKPX gbreve edotaccent -10\\r\\nKPX gbreve egrave -10\\r\\nKPX gbreve emacron -10\\r\\nKPX gbreve eogonek -10\\r\\nKPX gbreve g -10\\r\\nKPX gbreve gbreve -10\\r\\nKPX gbreve gcommaaccent -10\\r\\nKPX gbreve period -15\\r\\nKPX gcommaaccent comma -10\\r\\nKPX gcommaaccent e -10\\r\\nKPX gcommaaccent eacute -10\\r\\nKPX gcommaaccent ecaron -10\\r\\nKPX gcommaaccent ecircumflex -10\\r\\nKPX gcommaaccent edieresis -10\\r\\nKPX gcommaaccent edotaccent -10\\r\\nKPX gcommaaccent egrave -10\\r\\nKPX gcommaaccent emacron -10\\r\\nKPX gcommaaccent eogonek -10\\r\\nKPX gcommaaccent g -10\\r\\nKPX gcommaaccent gbreve -10\\r\\nKPX gcommaaccent gcommaaccent -10\\r\\nKPX gcommaaccent period -15\\r\\nKPX k e -10\\r\\nKPX k eacute -10\\r\\nKPX k ecaron -10\\r\\nKPX k ecircumflex -10\\r\\nKPX k edieresis -10\\r\\nKPX k edotaccent -10\\r\\nKPX k egrave -10\\r\\nKPX k emacron -10\\r\\nKPX k eogonek -10\\r\\nKPX k o -10\\r\\nKPX k oacute -10\\r\\nKPX k ocircumflex -10\\r\\nKPX k odieresis -10\\r\\nKPX k ograve -10\\r\\nKPX k ohungarumlaut -10\\r\\nKPX k omacron -10\\r\\nKPX k oslash -10\\r\\nKPX k otilde -10\\r\\nKPX k y -10\\r\\nKPX k yacute -10\\r\\nKPX k ydieresis -10\\r\\nKPX kcommaaccent e -10\\r\\nKPX kcommaaccent eacute -10\\r\\nKPX kcommaaccent ecaron -10\\r\\nKPX kcommaaccent ecircumflex -10\\r\\nKPX kcommaaccent edieresis -10\\r\\nKPX kcommaaccent edotaccent -10\\r\\nKPX kcommaaccent egrave -10\\r\\nKPX kcommaaccent emacron -10\\r\\nKPX kcommaaccent eogonek -10\\r\\nKPX kcommaaccent o -10\\r\\nKPX kcommaaccent oacute -10\\r\\nKPX kcommaaccent ocircumflex -10\\r\\nKPX kcommaaccent odieresis -10\\r\\nKPX kcommaaccent ograve -10\\r\\nKPX kcommaaccent ohungarumlaut -10\\r\\nKPX kcommaaccent omacron -10\\r\\nKPX kcommaaccent oslash -10\\r\\nKPX kcommaaccent otilde -10\\r\\nKPX kcommaaccent y -10\\r\\nKPX kcommaaccent yacute -10\\r\\nKPX kcommaaccent ydieresis -10\\r\\nKPX n v -40\\r\\nKPX nacute v -40\\r\\nKPX ncaron v -40\\r\\nKPX ncommaaccent v -40\\r\\nKPX ntilde v -40\\r\\nKPX o g -10\\r\\nKPX o gbreve -10\\r\\nKPX o gcommaaccent -10\\r\\nKPX o v -10\\r\\nKPX oacute g -10\\r\\nKPX oacute gbreve -10\\r\\nKPX oacute gcommaaccent -10\\r\\nKPX oacute v -10\\r\\nKPX ocircumflex g -10\\r\\nKPX ocircumflex gbreve -10\\r\\nKPX ocircumflex gcommaaccent -10\\r\\nKPX ocircumflex v -10\\r\\nKPX odieresis g -10\\r\\nKPX odieresis gbreve -10\\r\\nKPX odieresis gcommaaccent -10\\r\\nKPX odieresis v -10\\r\\nKPX ograve g -10\\r\\nKPX ograve gbreve -10\\r\\nKPX ograve gcommaaccent -10\\r\\nKPX ograve v -10\\r\\nKPX ohungarumlaut g -10\\r\\nKPX ohungarumlaut gbreve -10\\r\\nKPX ohungarumlaut gcommaaccent -10\\r\\nKPX ohungarumlaut v -10\\r\\nKPX omacron g -10\\r\\nKPX omacron gbreve -10\\r\\nKPX omacron gcommaaccent -10\\r\\nKPX omacron v -10\\r\\nKPX oslash g -10\\r\\nKPX oslash gbreve -10\\r\\nKPX oslash gcommaaccent -10\\r\\nKPX oslash v -10\\r\\nKPX otilde g -10\\r\\nKPX otilde gbreve -10\\r\\nKPX otilde gcommaaccent -10\\r\\nKPX otilde v -10\\r\\nKPX period quotedblright -140\\r\\nKPX period quoteright -140\\r\\nKPX quoteleft quoteleft -111\\r\\nKPX quoteright d -25\\r\\nKPX quoteright dcroat -25\\r\\nKPX quoteright quoteright -111\\r\\nKPX quoteright r -25\\r\\nKPX quoteright racute -25\\r\\nKPX quoteright rcaron -25\\r\\nKPX quoteright rcommaaccent -25\\r\\nKPX quoteright s -40\\r\\nKPX quoteright sacute -40\\r\\nKPX quoteright scaron -40\\r\\nKPX quoteright scedilla -40\\r\\nKPX quoteright scommaaccent -40\\r\\nKPX quoteright space -111\\r\\nKPX quoteright t -30\\r\\nKPX quoteright tcommaaccent -30\\r\\nKPX quoteright v -10\\r\\nKPX r a -15\\r\\nKPX r aacute -15\\r\\nKPX r abreve -15\\r\\nKPX r acircumflex -15\\r\\nKPX r adieresis -15\\r\\nKPX r agrave -15\\r\\nKPX r amacron -15\\r\\nKPX r aogonek -15\\r\\nKPX r aring -15\\r\\nKPX r atilde -15\\r\\nKPX r c -37\\r\\nKPX r cacute -37\\r\\nKPX r ccaron -37\\r\\nKPX r ccedilla -37\\r\\nKPX r comma -111\\r\\nKPX r d -37\\r\\nKPX r dcroat -37\\r\\nKPX r e -37\\r\\nKPX r eacute -37\\r\\nKPX r ecaron -37\\r\\nKPX r ecircumflex -37\\r\\nKPX r edieresis -37\\r\\nKPX r edotaccent -37\\r\\nKPX r egrave -37\\r\\nKPX r emacron -37\\r\\nKPX r eogonek -37\\r\\nKPX r g -37\\r\\nKPX r gbreve -37\\r\\nKPX r gcommaaccent -37\\r\\nKPX r hyphen -20\\r\\nKPX r o -45\\r\\nKPX r oacute -45\\r\\nKPX r ocircumflex -45\\r\\nKPX r odieresis -45\\r\\nKPX r ograve -45\\r\\nKPX r ohungarumlaut -45\\r\\nKPX r omacron -45\\r\\nKPX r oslash -45\\r\\nKPX r otilde -45\\r\\nKPX r period -111\\r\\nKPX r q -37\\r\\nKPX r s -10\\r\\nKPX r sacute -10\\r\\nKPX r scaron -10\\r\\nKPX r scedilla -10\\r\\nKPX r scommaaccent -10\\r\\nKPX racute a -15\\r\\nKPX racute aacute -15\\r\\nKPX racute abreve -15\\r\\nKPX racute acircumflex -15\\r\\nKPX racute adieresis -15\\r\\nKPX racute agrave -15\\r\\nKPX racute amacron -15\\r\\nKPX racute aogonek -15\\r\\nKPX racute aring -15\\r\\nKPX racute atilde -15\\r\\nKPX racute c -37\\r\\nKPX racute cacute -37\\r\\nKPX racute ccaron -37\\r\\nKPX racute ccedilla -37\\r\\nKPX racute comma -111\\r\\nKPX racute d -37\\r\\nKPX racute dcroat -37\\r\\nKPX racute e -37\\r\\nKPX racute eacute -37\\r\\nKPX racute ecaron -37\\r\\nKPX racute ecircumflex -37\\r\\nKPX racute edieresis -37\\r\\nKPX racute edotaccent -37\\r\\nKPX racute egrave -37\\r\\nKPX racute emacron -37\\r\\nKPX racute eogonek -37\\r\\nKPX racute g -37\\r\\nKPX racute gbreve -37\\r\\nKPX racute gcommaaccent -37\\r\\nKPX racute hyphen -20\\r\\nKPX racute o -45\\r\\nKPX racute oacute -45\\r\\nKPX racute ocircumflex -45\\r\\nKPX racute odieresis -45\\r\\nKPX racute ograve -45\\r\\nKPX racute ohungarumlaut -45\\r\\nKPX racute omacron -45\\r\\nKPX racute oslash -45\\r\\nKPX racute otilde -45\\r\\nKPX racute period -111\\r\\nKPX racute q -37\\r\\nKPX racute s -10\\r\\nKPX racute sacute -10\\r\\nKPX racute scaron -10\\r\\nKPX racute scedilla -10\\r\\nKPX racute scommaaccent -10\\r\\nKPX rcaron a -15\\r\\nKPX rcaron aacute -15\\r\\nKPX rcaron abreve -15\\r\\nKPX rcaron acircumflex -15\\r\\nKPX rcaron adieresis -15\\r\\nKPX rcaron agrave -15\\r\\nKPX rcaron amacron -15\\r\\nKPX rcaron aogonek -15\\r\\nKPX rcaron aring -15\\r\\nKPX rcaron atilde -15\\r\\nKPX rcaron c -37\\r\\nKPX rcaron cacute -37\\r\\nKPX rcaron ccaron -37\\r\\nKPX rcaron ccedilla -37\\r\\nKPX rcaron comma -111\\r\\nKPX rcaron d -37\\r\\nKPX rcaron dcroat -37\\r\\nKPX rcaron e -37\\r\\nKPX rcaron eacute -37\\r\\nKPX rcaron ecaron -37\\r\\nKPX rcaron ecircumflex -37\\r\\nKPX rcaron edieresis -37\\r\\nKPX rcaron edotaccent -37\\r\\nKPX rcaron egrave -37\\r\\nKPX rcaron emacron -37\\r\\nKPX rcaron eogonek -37\\r\\nKPX rcaron g -37\\r\\nKPX rcaron gbreve -37\\r\\nKPX rcaron gcommaaccent -37\\r\\nKPX rcaron hyphen -20\\r\\nKPX rcaron o -45\\r\\nKPX rcaron oacute -45\\r\\nKPX rcaron ocircumflex -45\\r\\nKPX rcaron odieresis -45\\r\\nKPX rcaron ograve -45\\r\\nKPX rcaron ohungarumlaut -45\\r\\nKPX rcaron omacron -45\\r\\nKPX rcaron oslash -45\\r\\nKPX rcaron otilde -45\\r\\nKPX rcaron period -111\\r\\nKPX rcaron q -37\\r\\nKPX rcaron s -10\\r\\nKPX rcaron sacute -10\\r\\nKPX rcaron scaron -10\\r\\nKPX rcaron scedilla -10\\r\\nKPX rcaron scommaaccent -10\\r\\nKPX rcommaaccent a -15\\r\\nKPX rcommaaccent aacute -15\\r\\nKPX rcommaaccent abreve -15\\r\\nKPX rcommaaccent acircumflex -15\\r\\nKPX rcommaaccent adieresis -15\\r\\nKPX rcommaaccent agrave -15\\r\\nKPX rcommaaccent amacron -15\\r\\nKPX rcommaaccent aogonek -15\\r\\nKPX rcommaaccent aring -15\\r\\nKPX rcommaaccent atilde -15\\r\\nKPX rcommaaccent c -37\\r\\nKPX rcommaaccent cacute -37\\r\\nKPX rcommaaccent ccaron -37\\r\\nKPX rcommaaccent ccedilla -37\\r\\nKPX rcommaaccent comma -111\\r\\nKPX rcommaaccent d -37\\r\\nKPX rcommaaccent dcroat -37\\r\\nKPX rcommaaccent e -37\\r\\nKPX rcommaaccent eacute -37\\r\\nKPX rcommaaccent ecaron -37\\r\\nKPX rcommaaccent ecircumflex -37\\r\\nKPX rcommaaccent edieresis -37\\r\\nKPX rcommaaccent edotaccent -37\\r\\nKPX rcommaaccent egrave -37\\r\\nKPX rcommaaccent emacron -37\\r\\nKPX rcommaaccent eogonek -37\\r\\nKPX rcommaaccent g -37\\r\\nKPX rcommaaccent gbreve -37\\r\\nKPX rcommaaccent gcommaaccent -37\\r\\nKPX rcommaaccent hyphen -20\\r\\nKPX rcommaaccent o -45\\r\\nKPX rcommaaccent oacute -45\\r\\nKPX rcommaaccent ocircumflex -45\\r\\nKPX rcommaaccent odieresis -45\\r\\nKPX rcommaaccent ograve -45\\r\\nKPX rcommaaccent ohungarumlaut -45\\r\\nKPX rcommaaccent omacron -45\\r\\nKPX rcommaaccent oslash -45\\r\\nKPX rcommaaccent otilde -45\\r\\nKPX rcommaaccent period -111\\r\\nKPX rcommaaccent q -37\\r\\nKPX rcommaaccent s -10\\r\\nKPX rcommaaccent sacute -10\\r\\nKPX rcommaaccent scaron -10\\r\\nKPX rcommaaccent scedilla -10\\r\\nKPX rcommaaccent scommaaccent -10\\r\\nKPX space A -18\\r\\nKPX space Aacute -18\\r\\nKPX space Abreve -18\\r\\nKPX space Acircumflex -18\\r\\nKPX space Adieresis -18\\r\\nKPX space Agrave -18\\r\\nKPX space Amacron -18\\r\\nKPX space Aogonek -18\\r\\nKPX space Aring -18\\r\\nKPX space Atilde -18\\r\\nKPX space T -18\\r\\nKPX space Tcaron -18\\r\\nKPX space Tcommaaccent -18\\r\\nKPX space V -35\\r\\nKPX space W -40\\r\\nKPX space Y -75\\r\\nKPX space Yacute -75\\r\\nKPX space Ydieresis -75\\r\\nKPX v comma -74\\r\\nKPX v period -74\\r\\nKPX w comma -74\\r\\nKPX w period -74\\r\\nKPX y comma -55\\r\\nKPX y period -55\\r\\nKPX yacute comma -55\\r\\nKPX yacute period -55\\r\\nKPX ydieresis comma -55\\r\\nKPX ydieresis period -55\\r\\nEndKernPairs\\r\\nEndKernData\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Times-Italic.afm?`)},"./node_modules/pdfkit/js/data/Times-Roman.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\\r\\nComment Creation Date: Thu May  1 12:49:17 1997\\r\\nComment UniqueID 43068\\r\\nComment VMusage 43909 54934\\r\\nFontName Times-Roman\\r\\nFullName Times Roman\\r\\nFamilyName Times\\r\\nWeight Roman\\r\\nItalicAngle 0\\r\\nIsFixedPitch false\\r\\nCharacterSet ExtendedRoman\\r\\nFontBBox -168 -218 1000 898 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 002.000\\r\\nNotice Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.\\r\\nEncodingScheme AdobeStandardEncoding\\r\\nCapHeight 662\\r\\nXHeight 450\\r\\nAscender 683\\r\\nDescender -217\\r\\nStdHW 28\\r\\nStdVW 84\\r\\nStartCharMetrics 315\\r\\nC 32 ; WX 250 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 333 ; N exclam ; B 130 -9 238 676 ;\\r\\nC 34 ; WX 408 ; N quotedbl ; B 77 431 331 676 ;\\r\\nC 35 ; WX 500 ; N numbersign ; B 5 0 496 662 ;\\r\\nC 36 ; WX 500 ; N dollar ; B 44 -87 457 727 ;\\r\\nC 37 ; WX 833 ; N percent ; B 61 -13 772 676 ;\\r\\nC 38 ; WX 778 ; N ampersand ; B 42 -13 750 676 ;\\r\\nC 39 ; WX 333 ; N quoteright ; B 79 433 218 676 ;\\r\\nC 40 ; WX 333 ; N parenleft ; B 48 -177 304 676 ;\\r\\nC 41 ; WX 333 ; N parenright ; B 29 -177 285 676 ;\\r\\nC 42 ; WX 500 ; N asterisk ; B 69 265 432 676 ;\\r\\nC 43 ; WX 564 ; N plus ; B 30 0 534 506 ;\\r\\nC 44 ; WX 250 ; N comma ; B 56 -141 195 102 ;\\r\\nC 45 ; WX 333 ; N hyphen ; B 39 194 285 257 ;\\r\\nC 46 ; WX 250 ; N period ; B 70 -11 181 100 ;\\r\\nC 47 ; WX 278 ; N slash ; B -9 -14 287 676 ;\\r\\nC 48 ; WX 500 ; N zero ; B 24 -14 476 676 ;\\r\\nC 49 ; WX 500 ; N one ; B 111 0 394 676 ;\\r\\nC 50 ; WX 500 ; N two ; B 30 0 475 676 ;\\r\\nC 51 ; WX 500 ; N three ; B 43 -14 431 676 ;\\r\\nC 52 ; WX 500 ; N four ; B 12 0 472 676 ;\\r\\nC 53 ; WX 500 ; N five ; B 32 -14 438 688 ;\\r\\nC 54 ; WX 500 ; N six ; B 34 -14 468 684 ;\\r\\nC 55 ; WX 500 ; N seven ; B 20 -8 449 662 ;\\r\\nC 56 ; WX 500 ; N eight ; B 56 -14 445 676 ;\\r\\nC 57 ; WX 500 ; N nine ; B 30 -22 459 676 ;\\r\\nC 58 ; WX 278 ; N colon ; B 81 -11 192 459 ;\\r\\nC 59 ; WX 278 ; N semicolon ; B 80 -141 219 459 ;\\r\\nC 60 ; WX 564 ; N less ; B 28 -8 536 514 ;\\r\\nC 61 ; WX 564 ; N equal ; B 30 120 534 386 ;\\r\\nC 62 ; WX 564 ; N greater ; B 28 -8 536 514 ;\\r\\nC 63 ; WX 444 ; N question ; B 68 -8 414 676 ;\\r\\nC 64 ; WX 921 ; N at ; B 116 -14 809 676 ;\\r\\nC 65 ; WX 722 ; N A ; B 15 0 706 674 ;\\r\\nC 66 ; WX 667 ; N B ; B 17 0 593 662 ;\\r\\nC 67 ; WX 667 ; N C ; B 28 -14 633 676 ;\\r\\nC 68 ; WX 722 ; N D ; B 16 0 685 662 ;\\r\\nC 69 ; WX 611 ; N E ; B 12 0 597 662 ;\\r\\nC 70 ; WX 556 ; N F ; B 12 0 546 662 ;\\r\\nC 71 ; WX 722 ; N G ; B 32 -14 709 676 ;\\r\\nC 72 ; WX 722 ; N H ; B 19 0 702 662 ;\\r\\nC 73 ; WX 333 ; N I ; B 18 0 315 662 ;\\r\\nC 74 ; WX 389 ; N J ; B 10 -14 370 662 ;\\r\\nC 75 ; WX 722 ; N K ; B 34 0 723 662 ;\\r\\nC 76 ; WX 611 ; N L ; B 12 0 598 662 ;\\r\\nC 77 ; WX 889 ; N M ; B 12 0 863 662 ;\\r\\nC 78 ; WX 722 ; N N ; B 12 -11 707 662 ;\\r\\nC 79 ; WX 722 ; N O ; B 34 -14 688 676 ;\\r\\nC 80 ; WX 556 ; N P ; B 16 0 542 662 ;\\r\\nC 81 ; WX 722 ; N Q ; B 34 -178 701 676 ;\\r\\nC 82 ; WX 667 ; N R ; B 17 0 659 662 ;\\r\\nC 83 ; WX 556 ; N S ; B 42 -14 491 676 ;\\r\\nC 84 ; WX 611 ; N T ; B 17 0 593 662 ;\\r\\nC 85 ; WX 722 ; N U ; B 14 -14 705 662 ;\\r\\nC 86 ; WX 722 ; N V ; B 16 -11 697 662 ;\\r\\nC 87 ; WX 944 ; N W ; B 5 -11 932 662 ;\\r\\nC 88 ; WX 722 ; N X ; B 10 0 704 662 ;\\r\\nC 89 ; WX 722 ; N Y ; B 22 0 703 662 ;\\r\\nC 90 ; WX 611 ; N Z ; B 9 0 597 662 ;\\r\\nC 91 ; WX 333 ; N bracketleft ; B 88 -156 299 662 ;\\r\\nC 92 ; WX 278 ; N backslash ; B -9 -14 287 676 ;\\r\\nC 93 ; WX 333 ; N bracketright ; B 34 -156 245 662 ;\\r\\nC 94 ; WX 469 ; N asciicircum ; B 24 297 446 662 ;\\r\\nC 95 ; WX 500 ; N underscore ; B 0 -125 500 -75 ;\\r\\nC 96 ; WX 333 ; N quoteleft ; B 115 433 254 676 ;\\r\\nC 97 ; WX 444 ; N a ; B 37 -10 442 460 ;\\r\\nC 98 ; WX 500 ; N b ; B 3 -10 468 683 ;\\r\\nC 99 ; WX 444 ; N c ; B 25 -10 412 460 ;\\r\\nC 100 ; WX 500 ; N d ; B 27 -10 491 683 ;\\r\\nC 101 ; WX 444 ; N e ; B 25 -10 424 460 ;\\r\\nC 102 ; WX 333 ; N f ; B 20 0 383 683 ; L i fi ; L l fl ;\\r\\nC 103 ; WX 500 ; N g ; B 28 -218 470 460 ;\\r\\nC 104 ; WX 500 ; N h ; B 9 0 487 683 ;\\r\\nC 105 ; WX 278 ; N i ; B 16 0 253 683 ;\\r\\nC 106 ; WX 278 ; N j ; B -70 -218 194 683 ;\\r\\nC 107 ; WX 500 ; N k ; B 7 0 505 683 ;\\r\\nC 108 ; WX 278 ; N l ; B 19 0 257 683 ;\\r\\nC 109 ; WX 778 ; N m ; B 16 0 775 460 ;\\r\\nC 110 ; WX 500 ; N n ; B 16 0 485 460 ;\\r\\nC 111 ; WX 500 ; N o ; B 29 -10 470 460 ;\\r\\nC 112 ; WX 500 ; N p ; B 5 -217 470 460 ;\\r\\nC 113 ; WX 500 ; N q ; B 24 -217 488 460 ;\\r\\nC 114 ; WX 333 ; N r ; B 5 0 335 460 ;\\r\\nC 115 ; WX 389 ; N s ; B 51 -10 348 460 ;\\r\\nC 116 ; WX 278 ; N t ; B 13 -10 279 579 ;\\r\\nC 117 ; WX 500 ; N u ; B 9 -10 479 450 ;\\r\\nC 118 ; WX 500 ; N v ; B 19 -14 477 450 ;\\r\\nC 119 ; WX 722 ; N w ; B 21 -14 694 450 ;\\r\\nC 120 ; WX 500 ; N x ; B 17 0 479 450 ;\\r\\nC 121 ; WX 500 ; N y ; B 14 -218 475 450 ;\\r\\nC 122 ; WX 444 ; N z ; B 27 0 418 450 ;\\r\\nC 123 ; WX 480 ; N braceleft ; B 100 -181 350 680 ;\\r\\nC 124 ; WX 200 ; N bar ; B 67 -218 133 782 ;\\r\\nC 125 ; WX 480 ; N braceright ; B 130 -181 380 680 ;\\r\\nC 126 ; WX 541 ; N asciitilde ; B 40 183 502 323 ;\\r\\nC 161 ; WX 333 ; N exclamdown ; B 97 -218 205 467 ;\\r\\nC 162 ; WX 500 ; N cent ; B 53 -138 448 579 ;\\r\\nC 163 ; WX 500 ; N sterling ; B 12 -8 490 676 ;\\r\\nC 164 ; WX 167 ; N fraction ; B -168 -14 331 676 ;\\r\\nC 165 ; WX 500 ; N yen ; B -53 0 512 662 ;\\r\\nC 166 ; WX 500 ; N florin ; B 7 -189 490 676 ;\\r\\nC 167 ; WX 500 ; N section ; B 70 -148 426 676 ;\\r\\nC 168 ; WX 500 ; N currency ; B -22 58 522 602 ;\\r\\nC 169 ; WX 180 ; N quotesingle ; B 48 431 133 676 ;\\r\\nC 170 ; WX 444 ; N quotedblleft ; B 43 433 414 676 ;\\r\\nC 171 ; WX 500 ; N guillemotleft ; B 42 33 456 416 ;\\r\\nC 172 ; WX 333 ; N guilsinglleft ; B 63 33 285 416 ;\\r\\nC 173 ; WX 333 ; N guilsinglright ; B 48 33 270 416 ;\\r\\nC 174 ; WX 556 ; N fi ; B 31 0 521 683 ;\\r\\nC 175 ; WX 556 ; N fl ; B 32 0 521 683 ;\\r\\nC 177 ; WX 500 ; N endash ; B 0 201 500 250 ;\\r\\nC 178 ; WX 500 ; N dagger ; B 59 -149 442 676 ;\\r\\nC 179 ; WX 500 ; N daggerdbl ; B 58 -153 442 676 ;\\r\\nC 180 ; WX 250 ; N periodcentered ; B 70 199 181 310 ;\\r\\nC 182 ; WX 453 ; N paragraph ; B -22 -154 450 662 ;\\r\\nC 183 ; WX 350 ; N bullet ; B 40 196 310 466 ;\\r\\nC 184 ; WX 333 ; N quotesinglbase ; B 79 -141 218 102 ;\\r\\nC 185 ; WX 444 ; N quotedblbase ; B 45 -141 416 102 ;\\r\\nC 186 ; WX 444 ; N quotedblright ; B 30 433 401 676 ;\\r\\nC 187 ; WX 500 ; N guillemotright ; B 44 33 458 416 ;\\r\\nC 188 ; WX 1000 ; N ellipsis ; B 111 -11 888 100 ;\\r\\nC 189 ; WX 1000 ; N perthousand ; B 7 -19 994 706 ;\\r\\nC 191 ; WX 444 ; N questiondown ; B 30 -218 376 466 ;\\r\\nC 193 ; WX 333 ; N grave ; B 19 507 242 678 ;\\r\\nC 194 ; WX 333 ; N acute ; B 93 507 317 678 ;\\r\\nC 195 ; WX 333 ; N circumflex ; B 11 507 322 674 ;\\r\\nC 196 ; WX 333 ; N tilde ; B 1 532 331 638 ;\\r\\nC 197 ; WX 333 ; N macron ; B 11 547 322 601 ;\\r\\nC 198 ; WX 333 ; N breve ; B 26 507 307 664 ;\\r\\nC 199 ; WX 333 ; N dotaccent ; B 118 581 216 681 ;\\r\\nC 200 ; WX 333 ; N dieresis ; B 18 581 315 681 ;\\r\\nC 202 ; WX 333 ; N ring ; B 67 512 266 711 ;\\r\\nC 203 ; WX 333 ; N cedilla ; B 52 -215 261 0 ;\\r\\nC 205 ; WX 333 ; N hungarumlaut ; B -3 507 377 678 ;\\r\\nC 206 ; WX 333 ; N ogonek ; B 62 -165 243 0 ;\\r\\nC 207 ; WX 333 ; N caron ; B 11 507 322 674 ;\\r\\nC 208 ; WX 1000 ; N emdash ; B 0 201 1000 250 ;\\r\\nC 225 ; WX 889 ; N AE ; B 0 0 863 662 ;\\r\\nC 227 ; WX 276 ; N ordfeminine ; B 4 394 270 676 ;\\r\\nC 232 ; WX 611 ; N Lslash ; B 12 0 598 662 ;\\r\\nC 233 ; WX 722 ; N Oslash ; B 34 -80 688 734 ;\\r\\nC 234 ; WX 889 ; N OE ; B 30 -6 885 668 ;\\r\\nC 235 ; WX 310 ; N ordmasculine ; B 6 394 304 676 ;\\r\\nC 241 ; WX 667 ; N ae ; B 38 -10 632 460 ;\\r\\nC 245 ; WX 278 ; N dotlessi ; B 16 0 253 460 ;\\r\\nC 248 ; WX 278 ; N lslash ; B 19 0 259 683 ;\\r\\nC 249 ; WX 500 ; N oslash ; B 29 -112 470 551 ;\\r\\nC 250 ; WX 722 ; N oe ; B 30 -10 690 460 ;\\r\\nC 251 ; WX 500 ; N germandbls ; B 12 -9 468 683 ;\\r\\nC -1 ; WX 333 ; N Idieresis ; B 18 0 315 835 ;\\r\\nC -1 ; WX 444 ; N eacute ; B 25 -10 424 678 ;\\r\\nC -1 ; WX 444 ; N abreve ; B 37 -10 442 664 ;\\r\\nC -1 ; WX 500 ; N uhungarumlaut ; B 9 -10 501 678 ;\\r\\nC -1 ; WX 444 ; N ecaron ; B 25 -10 424 674 ;\\r\\nC -1 ; WX 722 ; N Ydieresis ; B 22 0 703 835 ;\\r\\nC -1 ; WX 564 ; N divide ; B 30 -10 534 516 ;\\r\\nC -1 ; WX 722 ; N Yacute ; B 22 0 703 890 ;\\r\\nC -1 ; WX 722 ; N Acircumflex ; B 15 0 706 886 ;\\r\\nC -1 ; WX 444 ; N aacute ; B 37 -10 442 678 ;\\r\\nC -1 ; WX 722 ; N Ucircumflex ; B 14 -14 705 886 ;\\r\\nC -1 ; WX 500 ; N yacute ; B 14 -218 475 678 ;\\r\\nC -1 ; WX 389 ; N scommaaccent ; B 51 -218 348 460 ;\\r\\nC -1 ; WX 444 ; N ecircumflex ; B 25 -10 424 674 ;\\r\\nC -1 ; WX 722 ; N Uring ; B 14 -14 705 898 ;\\r\\nC -1 ; WX 722 ; N Udieresis ; B 14 -14 705 835 ;\\r\\nC -1 ; WX 444 ; N aogonek ; B 37 -165 469 460 ;\\r\\nC -1 ; WX 722 ; N Uacute ; B 14 -14 705 890 ;\\r\\nC -1 ; WX 500 ; N uogonek ; B 9 -155 487 450 ;\\r\\nC -1 ; WX 611 ; N Edieresis ; B 12 0 597 835 ;\\r\\nC -1 ; WX 722 ; N Dcroat ; B 16 0 685 662 ;\\r\\nC -1 ; WX 250 ; N commaaccent ; B 59 -218 184 -50 ;\\r\\nC -1 ; WX 760 ; N copyright ; B 38 -14 722 676 ;\\r\\nC -1 ; WX 611 ; N Emacron ; B 12 0 597 813 ;\\r\\nC -1 ; WX 444 ; N ccaron ; B 25 -10 412 674 ;\\r\\nC -1 ; WX 444 ; N aring ; B 37 -10 442 711 ;\\r\\nC -1 ; WX 722 ; N Ncommaaccent ; B 12 -198 707 662 ;\\r\\nC -1 ; WX 278 ; N lacute ; B 19 0 290 890 ;\\r\\nC -1 ; WX 444 ; N agrave ; B 37 -10 442 678 ;\\r\\nC -1 ; WX 611 ; N Tcommaaccent ; B 17 -218 593 662 ;\\r\\nC -1 ; WX 667 ; N Cacute ; B 28 -14 633 890 ;\\r\\nC -1 ; WX 444 ; N atilde ; B 37 -10 442 638 ;\\r\\nC -1 ; WX 611 ; N Edotaccent ; B 12 0 597 835 ;\\r\\nC -1 ; WX 389 ; N scaron ; B 39 -10 350 674 ;\\r\\nC -1 ; WX 389 ; N scedilla ; B 51 -215 348 460 ;\\r\\nC -1 ; WX 278 ; N iacute ; B 16 0 290 678 ;\\r\\nC -1 ; WX 471 ; N lozenge ; B 13 0 459 724 ;\\r\\nC -1 ; WX 667 ; N Rcaron ; B 17 0 659 886 ;\\r\\nC -1 ; WX 722 ; N Gcommaaccent ; B 32 -218 709 676 ;\\r\\nC -1 ; WX 500 ; N ucircumflex ; B 9 -10 479 674 ;\\r\\nC -1 ; WX 444 ; N acircumflex ; B 37 -10 442 674 ;\\r\\nC -1 ; WX 722 ; N Amacron ; B 15 0 706 813 ;\\r\\nC -1 ; WX 333 ; N rcaron ; B 5 0 335 674 ;\\r\\nC -1 ; WX 444 ; N ccedilla ; B 25 -215 412 460 ;\\r\\nC -1 ; WX 611 ; N Zdotaccent ; B 9 0 597 835 ;\\r\\nC -1 ; WX 556 ; N Thorn ; B 16 0 542 662 ;\\r\\nC -1 ; WX 722 ; N Omacron ; B 34 -14 688 813 ;\\r\\nC -1 ; WX 667 ; N Racute ; B 17 0 659 890 ;\\r\\nC -1 ; WX 556 ; N Sacute ; B 42 -14 491 890 ;\\r\\nC -1 ; WX 588 ; N dcaron ; B 27 -10 589 695 ;\\r\\nC -1 ; WX 722 ; N Umacron ; B 14 -14 705 813 ;\\r\\nC -1 ; WX 500 ; N uring ; B 9 -10 479 711 ;\\r\\nC -1 ; WX 300 ; N threesuperior ; B 15 262 291 676 ;\\r\\nC -1 ; WX 722 ; N Ograve ; B 34 -14 688 890 ;\\r\\nC -1 ; WX 722 ; N Agrave ; B 15 0 706 890 ;\\r\\nC -1 ; WX 722 ; N Abreve ; B 15 0 706 876 ;\\r\\nC -1 ; WX 564 ; N multiply ; B 38 8 527 497 ;\\r\\nC -1 ; WX 500 ; N uacute ; B 9 -10 479 678 ;\\r\\nC -1 ; WX 611 ; N Tcaron ; B 17 0 593 886 ;\\r\\nC -1 ; WX 476 ; N partialdiff ; B 17 -38 459 710 ;\\r\\nC -1 ; WX 500 ; N ydieresis ; B 14 -218 475 623 ;\\r\\nC -1 ; WX 722 ; N Nacute ; B 12 -11 707 890 ;\\r\\nC -1 ; WX 278 ; N icircumflex ; B -16 0 295 674 ;\\r\\nC -1 ; WX 611 ; N Ecircumflex ; B 12 0 597 886 ;\\r\\nC -1 ; WX 444 ; N adieresis ; B 37 -10 442 623 ;\\r\\nC -1 ; WX 444 ; N edieresis ; B 25 -10 424 623 ;\\r\\nC -1 ; WX 444 ; N cacute ; B 25 -10 413 678 ;\\r\\nC -1 ; WX 500 ; N nacute ; B 16 0 485 678 ;\\r\\nC -1 ; WX 500 ; N umacron ; B 9 -10 479 601 ;\\r\\nC -1 ; WX 722 ; N Ncaron ; B 12 -11 707 886 ;\\r\\nC -1 ; WX 333 ; N Iacute ; B 18 0 317 890 ;\\r\\nC -1 ; WX 564 ; N plusminus ; B 30 0 534 506 ;\\r\\nC -1 ; WX 200 ; N brokenbar ; B 67 -143 133 707 ;\\r\\nC -1 ; WX 760 ; N registered ; B 38 -14 722 676 ;\\r\\nC -1 ; WX 722 ; N Gbreve ; B 32 -14 709 876 ;\\r\\nC -1 ; WX 333 ; N Idotaccent ; B 18 0 315 835 ;\\r\\nC -1 ; WX 600 ; N summation ; B 15 -10 585 706 ;\\r\\nC -1 ; WX 611 ; N Egrave ; B 12 0 597 890 ;\\r\\nC -1 ; WX 333 ; N racute ; B 5 0 335 678 ;\\r\\nC -1 ; WX 500 ; N omacron ; B 29 -10 470 601 ;\\r\\nC -1 ; WX 611 ; N Zacute ; B 9 0 597 890 ;\\r\\nC -1 ; WX 611 ; N Zcaron ; B 9 0 597 886 ;\\r\\nC -1 ; WX 549 ; N greaterequal ; B 26 0 523 666 ;\\r\\nC -1 ; WX 722 ; N Eth ; B 16 0 685 662 ;\\r\\nC -1 ; WX 667 ; N Ccedilla ; B 28 -215 633 676 ;\\r\\nC -1 ; WX 278 ; N lcommaaccent ; B 19 -218 257 683 ;\\r\\nC -1 ; WX 326 ; N tcaron ; B 13 -10 318 722 ;\\r\\nC -1 ; WX 444 ; N eogonek ; B 25 -165 424 460 ;\\r\\nC -1 ; WX 722 ; N Uogonek ; B 14 -165 705 662 ;\\r\\nC -1 ; WX 722 ; N Aacute ; B 15 0 706 890 ;\\r\\nC -1 ; WX 722 ; N Adieresis ; B 15 0 706 835 ;\\r\\nC -1 ; WX 444 ; N egrave ; B 25 -10 424 678 ;\\r\\nC -1 ; WX 444 ; N zacute ; B 27 0 418 678 ;\\r\\nC -1 ; WX 278 ; N iogonek ; B 16 -165 265 683 ;\\r\\nC -1 ; WX 722 ; N Oacute ; B 34 -14 688 890 ;\\r\\nC -1 ; WX 500 ; N oacute ; B 29 -10 470 678 ;\\r\\nC -1 ; WX 444 ; N amacron ; B 37 -10 442 601 ;\\r\\nC -1 ; WX 389 ; N sacute ; B 51 -10 348 678 ;\\r\\nC -1 ; WX 278 ; N idieresis ; B -9 0 288 623 ;\\r\\nC -1 ; WX 722 ; N Ocircumflex ; B 34 -14 688 886 ;\\r\\nC -1 ; WX 722 ; N Ugrave ; B 14 -14 705 890 ;\\r\\nC -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;\\r\\nC -1 ; WX 500 ; N thorn ; B 5 -217 470 683 ;\\r\\nC -1 ; WX 300 ; N twosuperior ; B 1 270 296 676 ;\\r\\nC -1 ; WX 722 ; N Odieresis ; B 34 -14 688 835 ;\\r\\nC -1 ; WX 500 ; N mu ; B 36 -218 512 450 ;\\r\\nC -1 ; WX 278 ; N igrave ; B -8 0 253 678 ;\\r\\nC -1 ; WX 500 ; N ohungarumlaut ; B 29 -10 491 678 ;\\r\\nC -1 ; WX 611 ; N Eogonek ; B 12 -165 597 662 ;\\r\\nC -1 ; WX 500 ; N dcroat ; B 27 -10 500 683 ;\\r\\nC -1 ; WX 750 ; N threequarters ; B 15 -14 718 676 ;\\r\\nC -1 ; WX 556 ; N Scedilla ; B 42 -215 491 676 ;\\r\\nC -1 ; WX 344 ; N lcaron ; B 19 0 347 695 ;\\r\\nC -1 ; WX 722 ; N Kcommaaccent ; B 34 -198 723 662 ;\\r\\nC -1 ; WX 611 ; N Lacute ; B 12 0 598 890 ;\\r\\nC -1 ; WX 980 ; N trademark ; B 30 256 957 662 ;\\r\\nC -1 ; WX 444 ; N edotaccent ; B 25 -10 424 623 ;\\r\\nC -1 ; WX 333 ; N Igrave ; B 18 0 315 890 ;\\r\\nC -1 ; WX 333 ; N Imacron ; B 11 0 322 813 ;\\r\\nC -1 ; WX 611 ; N Lcaron ; B 12 0 598 676 ;\\r\\nC -1 ; WX 750 ; N onehalf ; B 31 -14 746 676 ;\\r\\nC -1 ; WX 549 ; N lessequal ; B 26 0 523 666 ;\\r\\nC -1 ; WX 500 ; N ocircumflex ; B 29 -10 470 674 ;\\r\\nC -1 ; WX 500 ; N ntilde ; B 16 0 485 638 ;\\r\\nC -1 ; WX 722 ; N Uhungarumlaut ; B 14 -14 705 890 ;\\r\\nC -1 ; WX 611 ; N Eacute ; B 12 0 597 890 ;\\r\\nC -1 ; WX 444 ; N emacron ; B 25 -10 424 601 ;\\r\\nC -1 ; WX 500 ; N gbreve ; B 28 -218 470 664 ;\\r\\nC -1 ; WX 750 ; N onequarter ; B 37 -14 718 676 ;\\r\\nC -1 ; WX 556 ; N Scaron ; B 42 -14 491 886 ;\\r\\nC -1 ; WX 556 ; N Scommaaccent ; B 42 -218 491 676 ;\\r\\nC -1 ; WX 722 ; N Ohungarumlaut ; B 34 -14 688 890 ;\\r\\nC -1 ; WX 400 ; N degree ; B 57 390 343 676 ;\\r\\nC -1 ; WX 500 ; N ograve ; B 29 -10 470 678 ;\\r\\nC -1 ; WX 667 ; N Ccaron ; B 28 -14 633 886 ;\\r\\nC -1 ; WX 500 ; N ugrave ; B 9 -10 479 678 ;\\r\\nC -1 ; WX 453 ; N radical ; B 2 -60 452 768 ;\\r\\nC -1 ; WX 722 ; N Dcaron ; B 16 0 685 886 ;\\r\\nC -1 ; WX 333 ; N rcommaaccent ; B 5 -218 335 460 ;\\r\\nC -1 ; WX 722 ; N Ntilde ; B 12 -11 707 850 ;\\r\\nC -1 ; WX 500 ; N otilde ; B 29 -10 470 638 ;\\r\\nC -1 ; WX 667 ; N Rcommaaccent ; B 17 -198 659 662 ;\\r\\nC -1 ; WX 611 ; N Lcommaaccent ; B 12 -218 598 662 ;\\r\\nC -1 ; WX 722 ; N Atilde ; B 15 0 706 850 ;\\r\\nC -1 ; WX 722 ; N Aogonek ; B 15 -165 738 674 ;\\r\\nC -1 ; WX 722 ; N Aring ; B 15 0 706 898 ;\\r\\nC -1 ; WX 722 ; N Otilde ; B 34 -14 688 850 ;\\r\\nC -1 ; WX 444 ; N zdotaccent ; B 27 0 418 623 ;\\r\\nC -1 ; WX 611 ; N Ecaron ; B 12 0 597 886 ;\\r\\nC -1 ; WX 333 ; N Iogonek ; B 18 -165 315 662 ;\\r\\nC -1 ; WX 500 ; N kcommaaccent ; B 7 -218 505 683 ;\\r\\nC -1 ; WX 564 ; N minus ; B 30 220 534 286 ;\\r\\nC -1 ; WX 333 ; N Icircumflex ; B 11 0 322 886 ;\\r\\nC -1 ; WX 500 ; N ncaron ; B 16 0 485 674 ;\\r\\nC -1 ; WX 278 ; N tcommaaccent ; B 13 -218 279 579 ;\\r\\nC -1 ; WX 564 ; N logicalnot ; B 30 108 534 386 ;\\r\\nC -1 ; WX 500 ; N odieresis ; B 29 -10 470 623 ;\\r\\nC -1 ; WX 500 ; N udieresis ; B 9 -10 479 623 ;\\r\\nC -1 ; WX 549 ; N notequal ; B 12 -31 537 547 ;\\r\\nC -1 ; WX 500 ; N gcommaaccent ; B 28 -218 470 749 ;\\r\\nC -1 ; WX 500 ; N eth ; B 29 -10 471 686 ;\\r\\nC -1 ; WX 444 ; N zcaron ; B 27 0 418 674 ;\\r\\nC -1 ; WX 500 ; N ncommaaccent ; B 16 -218 485 460 ;\\r\\nC -1 ; WX 300 ; N onesuperior ; B 57 270 248 676 ;\\r\\nC -1 ; WX 278 ; N imacron ; B 6 0 271 601 ;\\r\\nC -1 ; WX 500 ; N Euro ; B 0 0 0 0 ;\\r\\nEndCharMetrics\\r\\nStartKernData\\r\\nStartKernPairs 2073\\r\\nKPX A C -40\\r\\nKPX A Cacute -40\\r\\nKPX A Ccaron -40\\r\\nKPX A Ccedilla -40\\r\\nKPX A G -40\\r\\nKPX A Gbreve -40\\r\\nKPX A Gcommaaccent -40\\r\\nKPX A O -55\\r\\nKPX A Oacute -55\\r\\nKPX A Ocircumflex -55\\r\\nKPX A Odieresis -55\\r\\nKPX A Ograve -55\\r\\nKPX A Ohungarumlaut -55\\r\\nKPX A Omacron -55\\r\\nKPX A Oslash -55\\r\\nKPX A Otilde -55\\r\\nKPX A Q -55\\r\\nKPX A T -111\\r\\nKPX A Tcaron -111\\r\\nKPX A Tcommaaccent -111\\r\\nKPX A U -55\\r\\nKPX A Uacute -55\\r\\nKPX A Ucircumflex -55\\r\\nKPX A Udieresis -55\\r\\nKPX A Ugrave -55\\r\\nKPX A Uhungarumlaut -55\\r\\nKPX A Umacron -55\\r\\nKPX A Uogonek -55\\r\\nKPX A Uring -55\\r\\nKPX A V -135\\r\\nKPX A W -90\\r\\nKPX A Y -105\\r\\nKPX A Yacute -105\\r\\nKPX A Ydieresis -105\\r\\nKPX A quoteright -111\\r\\nKPX A v -74\\r\\nKPX A w -92\\r\\nKPX A y -92\\r\\nKPX A yacute -92\\r\\nKPX A ydieresis -92\\r\\nKPX Aacute C -40\\r\\nKPX Aacute Cacute -40\\r\\nKPX Aacute Ccaron -40\\r\\nKPX Aacute Ccedilla -40\\r\\nKPX Aacute G -40\\r\\nKPX Aacute Gbreve -40\\r\\nKPX Aacute Gcommaaccent -40\\r\\nKPX Aacute O -55\\r\\nKPX Aacute Oacute -55\\r\\nKPX Aacute Ocircumflex -55\\r\\nKPX Aacute Odieresis -55\\r\\nKPX Aacute Ograve -55\\r\\nKPX Aacute Ohungarumlaut -55\\r\\nKPX Aacute Omacron -55\\r\\nKPX Aacute Oslash -55\\r\\nKPX Aacute Otilde -55\\r\\nKPX Aacute Q -55\\r\\nKPX Aacute T -111\\r\\nKPX Aacute Tcaron -111\\r\\nKPX Aacute Tcommaaccent -111\\r\\nKPX Aacute U -55\\r\\nKPX Aacute Uacute -55\\r\\nKPX Aacute Ucircumflex -55\\r\\nKPX Aacute Udieresis -55\\r\\nKPX Aacute Ugrave -55\\r\\nKPX Aacute Uhungarumlaut -55\\r\\nKPX Aacute Umacron -55\\r\\nKPX Aacute Uogonek -55\\r\\nKPX Aacute Uring -55\\r\\nKPX Aacute V -135\\r\\nKPX Aacute W -90\\r\\nKPX Aacute Y -105\\r\\nKPX Aacute Yacute -105\\r\\nKPX Aacute Ydieresis -105\\r\\nKPX Aacute quoteright -111\\r\\nKPX Aacute v -74\\r\\nKPX Aacute w -92\\r\\nKPX Aacute y -92\\r\\nKPX Aacute yacute -92\\r\\nKPX Aacute ydieresis -92\\r\\nKPX Abreve C -40\\r\\nKPX Abreve Cacute -40\\r\\nKPX Abreve Ccaron -40\\r\\nKPX Abreve Ccedilla -40\\r\\nKPX Abreve G -40\\r\\nKPX Abreve Gbreve -40\\r\\nKPX Abreve Gcommaaccent -40\\r\\nKPX Abreve O -55\\r\\nKPX Abreve Oacute -55\\r\\nKPX Abreve Ocircumflex -55\\r\\nKPX Abreve Odieresis -55\\r\\nKPX Abreve Ograve -55\\r\\nKPX Abreve Ohungarumlaut -55\\r\\nKPX Abreve Omacron -55\\r\\nKPX Abreve Oslash -55\\r\\nKPX Abreve Otilde -55\\r\\nKPX Abreve Q -55\\r\\nKPX Abreve T -111\\r\\nKPX Abreve Tcaron -111\\r\\nKPX Abreve Tcommaaccent -111\\r\\nKPX Abreve U -55\\r\\nKPX Abreve Uacute -55\\r\\nKPX Abreve Ucircumflex -55\\r\\nKPX Abreve Udieresis -55\\r\\nKPX Abreve Ugrave -55\\r\\nKPX Abreve Uhungarumlaut -55\\r\\nKPX Abreve Umacron -55\\r\\nKPX Abreve Uogonek -55\\r\\nKPX Abreve Uring -55\\r\\nKPX Abreve V -135\\r\\nKPX Abreve W -90\\r\\nKPX Abreve Y -105\\r\\nKPX Abreve Yacute -105\\r\\nKPX Abreve Ydieresis -105\\r\\nKPX Abreve quoteright -111\\r\\nKPX Abreve v -74\\r\\nKPX Abreve w -92\\r\\nKPX Abreve y -92\\r\\nKPX Abreve yacute -92\\r\\nKPX Abreve ydieresis -92\\r\\nKPX Acircumflex C -40\\r\\nKPX Acircumflex Cacute -40\\r\\nKPX Acircumflex Ccaron -40\\r\\nKPX Acircumflex Ccedilla -40\\r\\nKPX Acircumflex G -40\\r\\nKPX Acircumflex Gbreve -40\\r\\nKPX Acircumflex Gcommaaccent -40\\r\\nKPX Acircumflex O -55\\r\\nKPX Acircumflex Oacute -55\\r\\nKPX Acircumflex Ocircumflex -55\\r\\nKPX Acircumflex Odieresis -55\\r\\nKPX Acircumflex Ograve -55\\r\\nKPX Acircumflex Ohungarumlaut -55\\r\\nKPX Acircumflex Omacron -55\\r\\nKPX Acircumflex Oslash -55\\r\\nKPX Acircumflex Otilde -55\\r\\nKPX Acircumflex Q -55\\r\\nKPX Acircumflex T -111\\r\\nKPX Acircumflex Tcaron -111\\r\\nKPX Acircumflex Tcommaaccent -111\\r\\nKPX Acircumflex U -55\\r\\nKPX Acircumflex Uacute -55\\r\\nKPX Acircumflex Ucircumflex -55\\r\\nKPX Acircumflex Udieresis -55\\r\\nKPX Acircumflex Ugrave -55\\r\\nKPX Acircumflex Uhungarumlaut -55\\r\\nKPX Acircumflex Umacron -55\\r\\nKPX Acircumflex Uogonek -55\\r\\nKPX Acircumflex Uring -55\\r\\nKPX Acircumflex V -135\\r\\nKPX Acircumflex W -90\\r\\nKPX Acircumflex Y -105\\r\\nKPX Acircumflex Yacute -105\\r\\nKPX Acircumflex Ydieresis -105\\r\\nKPX Acircumflex quoteright -111\\r\\nKPX Acircumflex v -74\\r\\nKPX Acircumflex w -92\\r\\nKPX Acircumflex y -92\\r\\nKPX Acircumflex yacute -92\\r\\nKPX Acircumflex ydieresis -92\\r\\nKPX Adieresis C -40\\r\\nKPX Adieresis Cacute -40\\r\\nKPX Adieresis Ccaron -40\\r\\nKPX Adieresis Ccedilla -40\\r\\nKPX Adieresis G -40\\r\\nKPX Adieresis Gbreve -40\\r\\nKPX Adieresis Gcommaaccent -40\\r\\nKPX Adieresis O -55\\r\\nKPX Adieresis Oacute -55\\r\\nKPX Adieresis Ocircumflex -55\\r\\nKPX Adieresis Odieresis -55\\r\\nKPX Adieresis Ograve -55\\r\\nKPX Adieresis Ohungarumlaut -55\\r\\nKPX Adieresis Omacron -55\\r\\nKPX Adieresis Oslash -55\\r\\nKPX Adieresis Otilde -55\\r\\nKPX Adieresis Q -55\\r\\nKPX Adieresis T -111\\r\\nKPX Adieresis Tcaron -111\\r\\nKPX Adieresis Tcommaaccent -111\\r\\nKPX Adieresis U -55\\r\\nKPX Adieresis Uacute -55\\r\\nKPX Adieresis Ucircumflex -55\\r\\nKPX Adieresis Udieresis -55\\r\\nKPX Adieresis Ugrave -55\\r\\nKPX Adieresis Uhungarumlaut -55\\r\\nKPX Adieresis Umacron -55\\r\\nKPX Adieresis Uogonek -55\\r\\nKPX Adieresis Uring -55\\r\\nKPX Adieresis V -135\\r\\nKPX Adieresis W -90\\r\\nKPX Adieresis Y -105\\r\\nKPX Adieresis Yacute -105\\r\\nKPX Adieresis Ydieresis -105\\r\\nKPX Adieresis quoteright -111\\r\\nKPX Adieresis v -74\\r\\nKPX Adieresis w -92\\r\\nKPX Adieresis y -92\\r\\nKPX Adieresis yacute -92\\r\\nKPX Adieresis ydieresis -92\\r\\nKPX Agrave C -40\\r\\nKPX Agrave Cacute -40\\r\\nKPX Agrave Ccaron -40\\r\\nKPX Agrave Ccedilla -40\\r\\nKPX Agrave G -40\\r\\nKPX Agrave Gbreve -40\\r\\nKPX Agrave Gcommaaccent -40\\r\\nKPX Agrave O -55\\r\\nKPX Agrave Oacute -55\\r\\nKPX Agrave Ocircumflex -55\\r\\nKPX Agrave Odieresis -55\\r\\nKPX Agrave Ograve -55\\r\\nKPX Agrave Ohungarumlaut -55\\r\\nKPX Agrave Omacron -55\\r\\nKPX Agrave Oslash -55\\r\\nKPX Agrave Otilde -55\\r\\nKPX Agrave Q -55\\r\\nKPX Agrave T -111\\r\\nKPX Agrave Tcaron -111\\r\\nKPX Agrave Tcommaaccent -111\\r\\nKPX Agrave U -55\\r\\nKPX Agrave Uacute -55\\r\\nKPX Agrave Ucircumflex -55\\r\\nKPX Agrave Udieresis -55\\r\\nKPX Agrave Ugrave -55\\r\\nKPX Agrave Uhungarumlaut -55\\r\\nKPX Agrave Umacron -55\\r\\nKPX Agrave Uogonek -55\\r\\nKPX Agrave Uring -55\\r\\nKPX Agrave V -135\\r\\nKPX Agrave W -90\\r\\nKPX Agrave Y -105\\r\\nKPX Agrave Yacute -105\\r\\nKPX Agrave Ydieresis -105\\r\\nKPX Agrave quoteright -111\\r\\nKPX Agrave v -74\\r\\nKPX Agrave w -92\\r\\nKPX Agrave y -92\\r\\nKPX Agrave yacute -92\\r\\nKPX Agrave ydieresis -92\\r\\nKPX Amacron C -40\\r\\nKPX Amacron Cacute -40\\r\\nKPX Amacron Ccaron -40\\r\\nKPX Amacron Ccedilla -40\\r\\nKPX Amacron G -40\\r\\nKPX Amacron Gbreve -40\\r\\nKPX Amacron Gcommaaccent -40\\r\\nKPX Amacron O -55\\r\\nKPX Amacron Oacute -55\\r\\nKPX Amacron Ocircumflex -55\\r\\nKPX Amacron Odieresis -55\\r\\nKPX Amacron Ograve -55\\r\\nKPX Amacron Ohungarumlaut -55\\r\\nKPX Amacron Omacron -55\\r\\nKPX Amacron Oslash -55\\r\\nKPX Amacron Otilde -55\\r\\nKPX Amacron Q -55\\r\\nKPX Amacron T -111\\r\\nKPX Amacron Tcaron -111\\r\\nKPX Amacron Tcommaaccent -111\\r\\nKPX Amacron U -55\\r\\nKPX Amacron Uacute -55\\r\\nKPX Amacron Ucircumflex -55\\r\\nKPX Amacron Udieresis -55\\r\\nKPX Amacron Ugrave -55\\r\\nKPX Amacron Uhungarumlaut -55\\r\\nKPX Amacron Umacron -55\\r\\nKPX Amacron Uogonek -55\\r\\nKPX Amacron Uring -55\\r\\nKPX Amacron V -135\\r\\nKPX Amacron W -90\\r\\nKPX Amacron Y -105\\r\\nKPX Amacron Yacute -105\\r\\nKPX Amacron Ydieresis -105\\r\\nKPX Amacron quoteright -111\\r\\nKPX Amacron v -74\\r\\nKPX Amacron w -92\\r\\nKPX Amacron y -92\\r\\nKPX Amacron yacute -92\\r\\nKPX Amacron ydieresis -92\\r\\nKPX Aogonek C -40\\r\\nKPX Aogonek Cacute -40\\r\\nKPX Aogonek Ccaron -40\\r\\nKPX Aogonek Ccedilla -40\\r\\nKPX Aogonek G -40\\r\\nKPX Aogonek Gbreve -40\\r\\nKPX Aogonek Gcommaaccent -40\\r\\nKPX Aogonek O -55\\r\\nKPX Aogonek Oacute -55\\r\\nKPX Aogonek Ocircumflex -55\\r\\nKPX Aogonek Odieresis -55\\r\\nKPX Aogonek Ograve -55\\r\\nKPX Aogonek Ohungarumlaut -55\\r\\nKPX Aogonek Omacron -55\\r\\nKPX Aogonek Oslash -55\\r\\nKPX Aogonek Otilde -55\\r\\nKPX Aogonek Q -55\\r\\nKPX Aogonek T -111\\r\\nKPX Aogonek Tcaron -111\\r\\nKPX Aogonek Tcommaaccent -111\\r\\nKPX Aogonek U -55\\r\\nKPX Aogonek Uacute -55\\r\\nKPX Aogonek Ucircumflex -55\\r\\nKPX Aogonek Udieresis -55\\r\\nKPX Aogonek Ugrave -55\\r\\nKPX Aogonek Uhungarumlaut -55\\r\\nKPX Aogonek Umacron -55\\r\\nKPX Aogonek Uogonek -55\\r\\nKPX Aogonek Uring -55\\r\\nKPX Aogonek V -135\\r\\nKPX Aogonek W -90\\r\\nKPX Aogonek Y -105\\r\\nKPX Aogonek Yacute -105\\r\\nKPX Aogonek Ydieresis -105\\r\\nKPX Aogonek quoteright -111\\r\\nKPX Aogonek v -74\\r\\nKPX Aogonek w -52\\r\\nKPX Aogonek y -52\\r\\nKPX Aogonek yacute -52\\r\\nKPX Aogonek ydieresis -52\\r\\nKPX Aring C -40\\r\\nKPX Aring Cacute -40\\r\\nKPX Aring Ccaron -40\\r\\nKPX Aring Ccedilla -40\\r\\nKPX Aring G -40\\r\\nKPX Aring Gbreve -40\\r\\nKPX Aring Gcommaaccent -40\\r\\nKPX Aring O -55\\r\\nKPX Aring Oacute -55\\r\\nKPX Aring Ocircumflex -55\\r\\nKPX Aring Odieresis -55\\r\\nKPX Aring Ograve -55\\r\\nKPX Aring Ohungarumlaut -55\\r\\nKPX Aring Omacron -55\\r\\nKPX Aring Oslash -55\\r\\nKPX Aring Otilde -55\\r\\nKPX Aring Q -55\\r\\nKPX Aring T -111\\r\\nKPX Aring Tcaron -111\\r\\nKPX Aring Tcommaaccent -111\\r\\nKPX Aring U -55\\r\\nKPX Aring Uacute -55\\r\\nKPX Aring Ucircumflex -55\\r\\nKPX Aring Udieresis -55\\r\\nKPX Aring Ugrave -55\\r\\nKPX Aring Uhungarumlaut -55\\r\\nKPX Aring Umacron -55\\r\\nKPX Aring Uogonek -55\\r\\nKPX Aring Uring -55\\r\\nKPX Aring V -135\\r\\nKPX Aring W -90\\r\\nKPX Aring Y -105\\r\\nKPX Aring Yacute -105\\r\\nKPX Aring Ydieresis -105\\r\\nKPX Aring quoteright -111\\r\\nKPX Aring v -74\\r\\nKPX Aring w -92\\r\\nKPX Aring y -92\\r\\nKPX Aring yacute -92\\r\\nKPX Aring ydieresis -92\\r\\nKPX Atilde C -40\\r\\nKPX Atilde Cacute -40\\r\\nKPX Atilde Ccaron -40\\r\\nKPX Atilde Ccedilla -40\\r\\nKPX Atilde G -40\\r\\nKPX Atilde Gbreve -40\\r\\nKPX Atilde Gcommaaccent -40\\r\\nKPX Atilde O -55\\r\\nKPX Atilde Oacute -55\\r\\nKPX Atilde Ocircumflex -55\\r\\nKPX Atilde Odieresis -55\\r\\nKPX Atilde Ograve -55\\r\\nKPX Atilde Ohungarumlaut -55\\r\\nKPX Atilde Omacron -55\\r\\nKPX Atilde Oslash -55\\r\\nKPX Atilde Otilde -55\\r\\nKPX Atilde Q -55\\r\\nKPX Atilde T -111\\r\\nKPX Atilde Tcaron -111\\r\\nKPX Atilde Tcommaaccent -111\\r\\nKPX Atilde U -55\\r\\nKPX Atilde Uacute -55\\r\\nKPX Atilde Ucircumflex -55\\r\\nKPX Atilde Udieresis -55\\r\\nKPX Atilde Ugrave -55\\r\\nKPX Atilde Uhungarumlaut -55\\r\\nKPX Atilde Umacron -55\\r\\nKPX Atilde Uogonek -55\\r\\nKPX Atilde Uring -55\\r\\nKPX Atilde V -135\\r\\nKPX Atilde W -90\\r\\nKPX Atilde Y -105\\r\\nKPX Atilde Yacute -105\\r\\nKPX Atilde Ydieresis -105\\r\\nKPX Atilde quoteright -111\\r\\nKPX Atilde v -74\\r\\nKPX Atilde w -92\\r\\nKPX Atilde y -92\\r\\nKPX Atilde yacute -92\\r\\nKPX Atilde ydieresis -92\\r\\nKPX B A -35\\r\\nKPX B Aacute -35\\r\\nKPX B Abreve -35\\r\\nKPX B Acircumflex -35\\r\\nKPX B Adieresis -35\\r\\nKPX B Agrave -35\\r\\nKPX B Amacron -35\\r\\nKPX B Aogonek -35\\r\\nKPX B Aring -35\\r\\nKPX B Atilde -35\\r\\nKPX B U -10\\r\\nKPX B Uacute -10\\r\\nKPX B Ucircumflex -10\\r\\nKPX B Udieresis -10\\r\\nKPX B Ugrave -10\\r\\nKPX B Uhungarumlaut -10\\r\\nKPX B Umacron -10\\r\\nKPX B Uogonek -10\\r\\nKPX B Uring -10\\r\\nKPX D A -40\\r\\nKPX D Aacute -40\\r\\nKPX D Abreve -40\\r\\nKPX D Acircumflex -40\\r\\nKPX D Adieresis -40\\r\\nKPX D Agrave -40\\r\\nKPX D Amacron -40\\r\\nKPX D Aogonek -40\\r\\nKPX D Aring -40\\r\\nKPX D Atilde -40\\r\\nKPX D V -40\\r\\nKPX D W -30\\r\\nKPX D Y -55\\r\\nKPX D Yacute -55\\r\\nKPX D Ydieresis -55\\r\\nKPX Dcaron A -40\\r\\nKPX Dcaron Aacute -40\\r\\nKPX Dcaron Abreve -40\\r\\nKPX Dcaron Acircumflex -40\\r\\nKPX Dcaron Adieresis -40\\r\\nKPX Dcaron Agrave -40\\r\\nKPX Dcaron Amacron -40\\r\\nKPX Dcaron Aogonek -40\\r\\nKPX Dcaron Aring -40\\r\\nKPX Dcaron Atilde -40\\r\\nKPX Dcaron V -40\\r\\nKPX Dcaron W -30\\r\\nKPX Dcaron Y -55\\r\\nKPX Dcaron Yacute -55\\r\\nKPX Dcaron Ydieresis -55\\r\\nKPX Dcroat A -40\\r\\nKPX Dcroat Aacute -40\\r\\nKPX Dcroat Abreve -40\\r\\nKPX Dcroat Acircumflex -40\\r\\nKPX Dcroat Adieresis -40\\r\\nKPX Dcroat Agrave -40\\r\\nKPX Dcroat Amacron -40\\r\\nKPX Dcroat Aogonek -40\\r\\nKPX Dcroat Aring -40\\r\\nKPX Dcroat Atilde -40\\r\\nKPX Dcroat V -40\\r\\nKPX Dcroat W -30\\r\\nKPX Dcroat Y -55\\r\\nKPX Dcroat Yacute -55\\r\\nKPX Dcroat Ydieresis -55\\r\\nKPX F A -74\\r\\nKPX F Aacute -74\\r\\nKPX F Abreve -74\\r\\nKPX F Acircumflex -74\\r\\nKPX F Adieresis -74\\r\\nKPX F Agrave -74\\r\\nKPX F Amacron -74\\r\\nKPX F Aogonek -74\\r\\nKPX F Aring -74\\r\\nKPX F Atilde -74\\r\\nKPX F a -15\\r\\nKPX F aacute -15\\r\\nKPX F abreve -15\\r\\nKPX F acircumflex -15\\r\\nKPX F adieresis -15\\r\\nKPX F agrave -15\\r\\nKPX F amacron -15\\r\\nKPX F aogonek -15\\r\\nKPX F aring -15\\r\\nKPX F atilde -15\\r\\nKPX F comma -80\\r\\nKPX F o -15\\r\\nKPX F oacute -15\\r\\nKPX F ocircumflex -15\\r\\nKPX F odieresis -15\\r\\nKPX F ograve -15\\r\\nKPX F ohungarumlaut -15\\r\\nKPX F omacron -15\\r\\nKPX F oslash -15\\r\\nKPX F otilde -15\\r\\nKPX F period -80\\r\\nKPX J A -60\\r\\nKPX J Aacute -60\\r\\nKPX J Abreve -60\\r\\nKPX J Acircumflex -60\\r\\nKPX J Adieresis -60\\r\\nKPX J Agrave -60\\r\\nKPX J Amacron -60\\r\\nKPX J Aogonek -60\\r\\nKPX J Aring -60\\r\\nKPX J Atilde -60\\r\\nKPX K O -30\\r\\nKPX K Oacute -30\\r\\nKPX K Ocircumflex -30\\r\\nKPX K Odieresis -30\\r\\nKPX K Ograve -30\\r\\nKPX K Ohungarumlaut -30\\r\\nKPX K Omacron -30\\r\\nKPX K Oslash -30\\r\\nKPX K Otilde -30\\r\\nKPX K e -25\\r\\nKPX K eacute -25\\r\\nKPX K ecaron -25\\r\\nKPX K ecircumflex -25\\r\\nKPX K edieresis -25\\r\\nKPX K edotaccent -25\\r\\nKPX K egrave -25\\r\\nKPX K emacron -25\\r\\nKPX K eogonek -25\\r\\nKPX K o -35\\r\\nKPX K oacute -35\\r\\nKPX K ocircumflex -35\\r\\nKPX K odieresis -35\\r\\nKPX K ograve -35\\r\\nKPX K ohungarumlaut -35\\r\\nKPX K omacron -35\\r\\nKPX K oslash -35\\r\\nKPX K otilde -35\\r\\nKPX K u -15\\r\\nKPX K uacute -15\\r\\nKPX K ucircumflex -15\\r\\nKPX K udieresis -15\\r\\nKPX K ugrave -15\\r\\nKPX K uhungarumlaut -15\\r\\nKPX K umacron -15\\r\\nKPX K uogonek -15\\r\\nKPX K uring -15\\r\\nKPX K y -25\\r\\nKPX K yacute -25\\r\\nKPX K ydieresis -25\\r\\nKPX Kcommaaccent O -30\\r\\nKPX Kcommaaccent Oacute -30\\r\\nKPX Kcommaaccent Ocircumflex -30\\r\\nKPX Kcommaaccent Odieresis -30\\r\\nKPX Kcommaaccent Ograve -30\\r\\nKPX Kcommaaccent Ohungarumlaut -30\\r\\nKPX Kcommaaccent Omacron -30\\r\\nKPX Kcommaaccent Oslash -30\\r\\nKPX Kcommaaccent Otilde -30\\r\\nKPX Kcommaaccent e -25\\r\\nKPX Kcommaaccent eacute -25\\r\\nKPX Kcommaaccent ecaron -25\\r\\nKPX Kcommaaccent ecircumflex -25\\r\\nKPX Kcommaaccent edieresis -25\\r\\nKPX Kcommaaccent edotaccent -25\\r\\nKPX Kcommaaccent egrave -25\\r\\nKPX Kcommaaccent emacron -25\\r\\nKPX Kcommaaccent eogonek -25\\r\\nKPX Kcommaaccent o -35\\r\\nKPX Kcommaaccent oacute -35\\r\\nKPX Kcommaaccent ocircumflex -35\\r\\nKPX Kcommaaccent odieresis -35\\r\\nKPX Kcommaaccent ograve -35\\r\\nKPX Kcommaaccent ohungarumlaut -35\\r\\nKPX Kcommaaccent omacron -35\\r\\nKPX Kcommaaccent oslash -35\\r\\nKPX Kcommaaccent otilde -35\\r\\nKPX Kcommaaccent u -15\\r\\nKPX Kcommaaccent uacute -15\\r\\nKPX Kcommaaccent ucircumflex -15\\r\\nKPX Kcommaaccent udieresis -15\\r\\nKPX Kcommaaccent ugrave -15\\r\\nKPX Kcommaaccent uhungarumlaut -15\\r\\nKPX Kcommaaccent umacron -15\\r\\nKPX Kcommaaccent uogonek -15\\r\\nKPX Kcommaaccent uring -15\\r\\nKPX Kcommaaccent y -25\\r\\nKPX Kcommaaccent yacute -25\\r\\nKPX Kcommaaccent ydieresis -25\\r\\nKPX L T -92\\r\\nKPX L Tcaron -92\\r\\nKPX L Tcommaaccent -92\\r\\nKPX L V -100\\r\\nKPX L W -74\\r\\nKPX L Y -100\\r\\nKPX L Yacute -100\\r\\nKPX L Ydieresis -100\\r\\nKPX L quoteright -92\\r\\nKPX L y -55\\r\\nKPX L yacute -55\\r\\nKPX L ydieresis -55\\r\\nKPX Lacute T -92\\r\\nKPX Lacute Tcaron -92\\r\\nKPX Lacute Tcommaaccent -92\\r\\nKPX Lacute V -100\\r\\nKPX Lacute W -74\\r\\nKPX Lacute Y -100\\r\\nKPX Lacute Yacute -100\\r\\nKPX Lacute Ydieresis -100\\r\\nKPX Lacute quoteright -92\\r\\nKPX Lacute y -55\\r\\nKPX Lacute yacute -55\\r\\nKPX Lacute ydieresis -55\\r\\nKPX Lcaron quoteright -92\\r\\nKPX Lcaron y -55\\r\\nKPX Lcaron yacute -55\\r\\nKPX Lcaron ydieresis -55\\r\\nKPX Lcommaaccent T -92\\r\\nKPX Lcommaaccent Tcaron -92\\r\\nKPX Lcommaaccent Tcommaaccent -92\\r\\nKPX Lcommaaccent V -100\\r\\nKPX Lcommaaccent W -74\\r\\nKPX Lcommaaccent Y -100\\r\\nKPX Lcommaaccent Yacute -100\\r\\nKPX Lcommaaccent Ydieresis -100\\r\\nKPX Lcommaaccent quoteright -92\\r\\nKPX Lcommaaccent y -55\\r\\nKPX Lcommaaccent yacute -55\\r\\nKPX Lcommaaccent ydieresis -55\\r\\nKPX Lslash T -92\\r\\nKPX Lslash Tcaron -92\\r\\nKPX Lslash Tcommaaccent -92\\r\\nKPX Lslash V -100\\r\\nKPX Lslash W -74\\r\\nKPX Lslash Y -100\\r\\nKPX Lslash Yacute -100\\r\\nKPX Lslash Ydieresis -100\\r\\nKPX Lslash quoteright -92\\r\\nKPX Lslash y -55\\r\\nKPX Lslash yacute -55\\r\\nKPX Lslash ydieresis -55\\r\\nKPX N A -35\\r\\nKPX N Aacute -35\\r\\nKPX N Abreve -35\\r\\nKPX N Acircumflex -35\\r\\nKPX N Adieresis -35\\r\\nKPX N Agrave -35\\r\\nKPX N Amacron -35\\r\\nKPX N Aogonek -35\\r\\nKPX N Aring -35\\r\\nKPX N Atilde -35\\r\\nKPX Nacute A -35\\r\\nKPX Nacute Aacute -35\\r\\nKPX Nacute Abreve -35\\r\\nKPX Nacute Acircumflex -35\\r\\nKPX Nacute Adieresis -35\\r\\nKPX Nacute Agrave -35\\r\\nKPX Nacute Amacron -35\\r\\nKPX Nacute Aogonek -35\\r\\nKPX Nacute Aring -35\\r\\nKPX Nacute Atilde -35\\r\\nKPX Ncaron A -35\\r\\nKPX Ncaron Aacute -35\\r\\nKPX Ncaron Abreve -35\\r\\nKPX Ncaron Acircumflex -35\\r\\nKPX Ncaron Adieresis -35\\r\\nKPX Ncaron Agrave -35\\r\\nKPX Ncaron Amacron -35\\r\\nKPX Ncaron Aogonek -35\\r\\nKPX Ncaron Aring -35\\r\\nKPX Ncaron Atilde -35\\r\\nKPX Ncommaaccent A -35\\r\\nKPX Ncommaaccent Aacute -35\\r\\nKPX Ncommaaccent Abreve -35\\r\\nKPX Ncommaaccent Acircumflex -35\\r\\nKPX Ncommaaccent Adieresis -35\\r\\nKPX Ncommaaccent Agrave -35\\r\\nKPX Ncommaaccent Amacron -35\\r\\nKPX Ncommaaccent Aogonek -35\\r\\nKPX Ncommaaccent Aring -35\\r\\nKPX Ncommaaccent Atilde -35\\r\\nKPX Ntilde A -35\\r\\nKPX Ntilde Aacute -35\\r\\nKPX Ntilde Abreve -35\\r\\nKPX Ntilde Acircumflex -35\\r\\nKPX Ntilde Adieresis -35\\r\\nKPX Ntilde Agrave -35\\r\\nKPX Ntilde Amacron -35\\r\\nKPX Ntilde Aogonek -35\\r\\nKPX Ntilde Aring -35\\r\\nKPX Ntilde Atilde -35\\r\\nKPX O A -35\\r\\nKPX O Aacute -35\\r\\nKPX O Abreve -35\\r\\nKPX O Acircumflex -35\\r\\nKPX O Adieresis -35\\r\\nKPX O Agrave -35\\r\\nKPX O Amacron -35\\r\\nKPX O Aogonek -35\\r\\nKPX O Aring -35\\r\\nKPX O Atilde -35\\r\\nKPX O T -40\\r\\nKPX O Tcaron -40\\r\\nKPX O Tcommaaccent -40\\r\\nKPX O V -50\\r\\nKPX O W -35\\r\\nKPX O X -40\\r\\nKPX O Y -50\\r\\nKPX O Yacute -50\\r\\nKPX O Ydieresis -50\\r\\nKPX Oacute A -35\\r\\nKPX Oacute Aacute -35\\r\\nKPX Oacute Abreve -35\\r\\nKPX Oacute Acircumflex -35\\r\\nKPX Oacute Adieresis -35\\r\\nKPX Oacute Agrave -35\\r\\nKPX Oacute Amacron -35\\r\\nKPX Oacute Aogonek -35\\r\\nKPX Oacute Aring -35\\r\\nKPX Oacute Atilde -35\\r\\nKPX Oacute T -40\\r\\nKPX Oacute Tcaron -40\\r\\nKPX Oacute Tcommaaccent -40\\r\\nKPX Oacute V -50\\r\\nKPX Oacute W -35\\r\\nKPX Oacute X -40\\r\\nKPX Oacute Y -50\\r\\nKPX Oacute Yacute -50\\r\\nKPX Oacute Ydieresis -50\\r\\nKPX Ocircumflex A -35\\r\\nKPX Ocircumflex Aacute -35\\r\\nKPX Ocircumflex Abreve -35\\r\\nKPX Ocircumflex Acircumflex -35\\r\\nKPX Ocircumflex Adieresis -35\\r\\nKPX Ocircumflex Agrave -35\\r\\nKPX Ocircumflex Amacron -35\\r\\nKPX Ocircumflex Aogonek -35\\r\\nKPX Ocircumflex Aring -35\\r\\nKPX Ocircumflex Atilde -35\\r\\nKPX Ocircumflex T -40\\r\\nKPX Ocircumflex Tcaron -40\\r\\nKPX Ocircumflex Tcommaaccent -40\\r\\nKPX Ocircumflex V -50\\r\\nKPX Ocircumflex W -35\\r\\nKPX Ocircumflex X -40\\r\\nKPX Ocircumflex Y -50\\r\\nKPX Ocircumflex Yacute -50\\r\\nKPX Ocircumflex Ydieresis -50\\r\\nKPX Odieresis A -35\\r\\nKPX Odieresis Aacute -35\\r\\nKPX Odieresis Abreve -35\\r\\nKPX Odieresis Acircumflex -35\\r\\nKPX Odieresis Adieresis -35\\r\\nKPX Odieresis Agrave -35\\r\\nKPX Odieresis Amacron -35\\r\\nKPX Odieresis Aogonek -35\\r\\nKPX Odieresis Aring -35\\r\\nKPX Odieresis Atilde -35\\r\\nKPX Odieresis T -40\\r\\nKPX Odieresis Tcaron -40\\r\\nKPX Odieresis Tcommaaccent -40\\r\\nKPX Odieresis V -50\\r\\nKPX Odieresis W -35\\r\\nKPX Odieresis X -40\\r\\nKPX Odieresis Y -50\\r\\nKPX Odieresis Yacute -50\\r\\nKPX Odieresis Ydieresis -50\\r\\nKPX Ograve A -35\\r\\nKPX Ograve Aacute -35\\r\\nKPX Ograve Abreve -35\\r\\nKPX Ograve Acircumflex -35\\r\\nKPX Ograve Adieresis -35\\r\\nKPX Ograve Agrave -35\\r\\nKPX Ograve Amacron -35\\r\\nKPX Ograve Aogonek -35\\r\\nKPX Ograve Aring -35\\r\\nKPX Ograve Atilde -35\\r\\nKPX Ograve T -40\\r\\nKPX Ograve Tcaron -40\\r\\nKPX Ograve Tcommaaccent -40\\r\\nKPX Ograve V -50\\r\\nKPX Ograve W -35\\r\\nKPX Ograve X -40\\r\\nKPX Ograve Y -50\\r\\nKPX Ograve Yacute -50\\r\\nKPX Ograve Ydieresis -50\\r\\nKPX Ohungarumlaut A -35\\r\\nKPX Ohungarumlaut Aacute -35\\r\\nKPX Ohungarumlaut Abreve -35\\r\\nKPX Ohungarumlaut Acircumflex -35\\r\\nKPX Ohungarumlaut Adieresis -35\\r\\nKPX Ohungarumlaut Agrave -35\\r\\nKPX Ohungarumlaut Amacron -35\\r\\nKPX Ohungarumlaut Aogonek -35\\r\\nKPX Ohungarumlaut Aring -35\\r\\nKPX Ohungarumlaut Atilde -35\\r\\nKPX Ohungarumlaut T -40\\r\\nKPX Ohungarumlaut Tcaron -40\\r\\nKPX Ohungarumlaut Tcommaaccent -40\\r\\nKPX Ohungarumlaut V -50\\r\\nKPX Ohungarumlaut W -35\\r\\nKPX Ohungarumlaut X -40\\r\\nKPX Ohungarumlaut Y -50\\r\\nKPX Ohungarumlaut Yacute -50\\r\\nKPX Ohungarumlaut Ydieresis -50\\r\\nKPX Omacron A -35\\r\\nKPX Omacron Aacute -35\\r\\nKPX Omacron Abreve -35\\r\\nKPX Omacron Acircumflex -35\\r\\nKPX Omacron Adieresis -35\\r\\nKPX Omacron Agrave -35\\r\\nKPX Omacron Amacron -35\\r\\nKPX Omacron Aogonek -35\\r\\nKPX Omacron Aring -35\\r\\nKPX Omacron Atilde -35\\r\\nKPX Omacron T -40\\r\\nKPX Omacron Tcaron -40\\r\\nKPX Omacron Tcommaaccent -40\\r\\nKPX Omacron V -50\\r\\nKPX Omacron W -35\\r\\nKPX Omacron X -40\\r\\nKPX Omacron Y -50\\r\\nKPX Omacron Yacute -50\\r\\nKPX Omacron Ydieresis -50\\r\\nKPX Oslash A -35\\r\\nKPX Oslash Aacute -35\\r\\nKPX Oslash Abreve -35\\r\\nKPX Oslash Acircumflex -35\\r\\nKPX Oslash Adieresis -35\\r\\nKPX Oslash Agrave -35\\r\\nKPX Oslash Amacron -35\\r\\nKPX Oslash Aogonek -35\\r\\nKPX Oslash Aring -35\\r\\nKPX Oslash Atilde -35\\r\\nKPX Oslash T -40\\r\\nKPX Oslash Tcaron -40\\r\\nKPX Oslash Tcommaaccent -40\\r\\nKPX Oslash V -50\\r\\nKPX Oslash W -35\\r\\nKPX Oslash X -40\\r\\nKPX Oslash Y -50\\r\\nKPX Oslash Yacute -50\\r\\nKPX Oslash Ydieresis -50\\r\\nKPX Otilde A -35\\r\\nKPX Otilde Aacute -35\\r\\nKPX Otilde Abreve -35\\r\\nKPX Otilde Acircumflex -35\\r\\nKPX Otilde Adieresis -35\\r\\nKPX Otilde Agrave -35\\r\\nKPX Otilde Amacron -35\\r\\nKPX Otilde Aogonek -35\\r\\nKPX Otilde Aring -35\\r\\nKPX Otilde Atilde -35\\r\\nKPX Otilde T -40\\r\\nKPX Otilde Tcaron -40\\r\\nKPX Otilde Tcommaaccent -40\\r\\nKPX Otilde V -50\\r\\nKPX Otilde W -35\\r\\nKPX Otilde X -40\\r\\nKPX Otilde Y -50\\r\\nKPX Otilde Yacute -50\\r\\nKPX Otilde Ydieresis -50\\r\\nKPX P A -92\\r\\nKPX P Aacute -92\\r\\nKPX P Abreve -92\\r\\nKPX P Acircumflex -92\\r\\nKPX P Adieresis -92\\r\\nKPX P Agrave -92\\r\\nKPX P Amacron -92\\r\\nKPX P Aogonek -92\\r\\nKPX P Aring -92\\r\\nKPX P Atilde -92\\r\\nKPX P a -15\\r\\nKPX P aacute -15\\r\\nKPX P abreve -15\\r\\nKPX P acircumflex -15\\r\\nKPX P adieresis -15\\r\\nKPX P agrave -15\\r\\nKPX P amacron -15\\r\\nKPX P aogonek -15\\r\\nKPX P aring -15\\r\\nKPX P atilde -15\\r\\nKPX P comma -111\\r\\nKPX P period -111\\r\\nKPX Q U -10\\r\\nKPX Q Uacute -10\\r\\nKPX Q Ucircumflex -10\\r\\nKPX Q Udieresis -10\\r\\nKPX Q Ugrave -10\\r\\nKPX Q Uhungarumlaut -10\\r\\nKPX Q Umacron -10\\r\\nKPX Q Uogonek -10\\r\\nKPX Q Uring -10\\r\\nKPX R O -40\\r\\nKPX R Oacute -40\\r\\nKPX R Ocircumflex -40\\r\\nKPX R Odieresis -40\\r\\nKPX R Ograve -40\\r\\nKPX R Ohungarumlaut -40\\r\\nKPX R Omacron -40\\r\\nKPX R Oslash -40\\r\\nKPX R Otilde -40\\r\\nKPX R T -60\\r\\nKPX R Tcaron -60\\r\\nKPX R Tcommaaccent -60\\r\\nKPX R U -40\\r\\nKPX R Uacute -40\\r\\nKPX R Ucircumflex -40\\r\\nKPX R Udieresis -40\\r\\nKPX R Ugrave -40\\r\\nKPX R Uhungarumlaut -40\\r\\nKPX R Umacron -40\\r\\nKPX R Uogonek -40\\r\\nKPX R Uring -40\\r\\nKPX R V -80\\r\\nKPX R W -55\\r\\nKPX R Y -65\\r\\nKPX R Yacute -65\\r\\nKPX R Ydieresis -65\\r\\nKPX Racute O -40\\r\\nKPX Racute Oacute -40\\r\\nKPX Racute Ocircumflex -40\\r\\nKPX Racute Odieresis -40\\r\\nKPX Racute Ograve -40\\r\\nKPX Racute Ohungarumlaut -40\\r\\nKPX Racute Omacron -40\\r\\nKPX Racute Oslash -40\\r\\nKPX Racute Otilde -40\\r\\nKPX Racute T -60\\r\\nKPX Racute Tcaron -60\\r\\nKPX Racute Tcommaaccent -60\\r\\nKPX Racute U -40\\r\\nKPX Racute Uacute -40\\r\\nKPX Racute Ucircumflex -40\\r\\nKPX Racute Udieresis -40\\r\\nKPX Racute Ugrave -40\\r\\nKPX Racute Uhungarumlaut -40\\r\\nKPX Racute Umacron -40\\r\\nKPX Racute Uogonek -40\\r\\nKPX Racute Uring -40\\r\\nKPX Racute V -80\\r\\nKPX Racute W -55\\r\\nKPX Racute Y -65\\r\\nKPX Racute Yacute -65\\r\\nKPX Racute Ydieresis -65\\r\\nKPX Rcaron O -40\\r\\nKPX Rcaron Oacute -40\\r\\nKPX Rcaron Ocircumflex -40\\r\\nKPX Rcaron Odieresis -40\\r\\nKPX Rcaron Ograve -40\\r\\nKPX Rcaron Ohungarumlaut -40\\r\\nKPX Rcaron Omacron -40\\r\\nKPX Rcaron Oslash -40\\r\\nKPX Rcaron Otilde -40\\r\\nKPX Rcaron T -60\\r\\nKPX Rcaron Tcaron -60\\r\\nKPX Rcaron Tcommaaccent -60\\r\\nKPX Rcaron U -40\\r\\nKPX Rcaron Uacute -40\\r\\nKPX Rcaron Ucircumflex -40\\r\\nKPX Rcaron Udieresis -40\\r\\nKPX Rcaron Ugrave -40\\r\\nKPX Rcaron Uhungarumlaut -40\\r\\nKPX Rcaron Umacron -40\\r\\nKPX Rcaron Uogonek -40\\r\\nKPX Rcaron Uring -40\\r\\nKPX Rcaron V -80\\r\\nKPX Rcaron W -55\\r\\nKPX Rcaron Y -65\\r\\nKPX Rcaron Yacute -65\\r\\nKPX Rcaron Ydieresis -65\\r\\nKPX Rcommaaccent O -40\\r\\nKPX Rcommaaccent Oacute -40\\r\\nKPX Rcommaaccent Ocircumflex -40\\r\\nKPX Rcommaaccent Odieresis -40\\r\\nKPX Rcommaaccent Ograve -40\\r\\nKPX Rcommaaccent Ohungarumlaut -40\\r\\nKPX Rcommaaccent Omacron -40\\r\\nKPX Rcommaaccent Oslash -40\\r\\nKPX Rcommaaccent Otilde -40\\r\\nKPX Rcommaaccent T -60\\r\\nKPX Rcommaaccent Tcaron -60\\r\\nKPX Rcommaaccent Tcommaaccent -60\\r\\nKPX Rcommaaccent U -40\\r\\nKPX Rcommaaccent Uacute -40\\r\\nKPX Rcommaaccent Ucircumflex -40\\r\\nKPX Rcommaaccent Udieresis -40\\r\\nKPX Rcommaaccent Ugrave -40\\r\\nKPX Rcommaaccent Uhungarumlaut -40\\r\\nKPX Rcommaaccent Umacron -40\\r\\nKPX Rcommaaccent Uogonek -40\\r\\nKPX Rcommaaccent Uring -40\\r\\nKPX Rcommaaccent V -80\\r\\nKPX Rcommaaccent W -55\\r\\nKPX Rcommaaccent Y -65\\r\\nKPX Rcommaaccent Yacute -65\\r\\nKPX Rcommaaccent Ydieresis -65\\r\\nKPX T A -93\\r\\nKPX T Aacute -93\\r\\nKPX T Abreve -93\\r\\nKPX T Acircumflex -93\\r\\nKPX T Adieresis -93\\r\\nKPX T Agrave -93\\r\\nKPX T Amacron -93\\r\\nKPX T Aogonek -93\\r\\nKPX T Aring -93\\r\\nKPX T Atilde -93\\r\\nKPX T O -18\\r\\nKPX T Oacute -18\\r\\nKPX T Ocircumflex -18\\r\\nKPX T Odieresis -18\\r\\nKPX T Ograve -18\\r\\nKPX T Ohungarumlaut -18\\r\\nKPX T Omacron -18\\r\\nKPX T Oslash -18\\r\\nKPX T Otilde -18\\r\\nKPX T a -80\\r\\nKPX T aacute -80\\r\\nKPX T abreve -80\\r\\nKPX T acircumflex -80\\r\\nKPX T adieresis -40\\r\\nKPX T agrave -40\\r\\nKPX T amacron -40\\r\\nKPX T aogonek -80\\r\\nKPX T aring -80\\r\\nKPX T atilde -40\\r\\nKPX T colon -50\\r\\nKPX T comma -74\\r\\nKPX T e -70\\r\\nKPX T eacute -70\\r\\nKPX T ecaron -70\\r\\nKPX T ecircumflex -70\\r\\nKPX T edieresis -30\\r\\nKPX T edotaccent -70\\r\\nKPX T egrave -70\\r\\nKPX T emacron -30\\r\\nKPX T eogonek -70\\r\\nKPX T hyphen -92\\r\\nKPX T i -35\\r\\nKPX T iacute -35\\r\\nKPX T iogonek -35\\r\\nKPX T o -80\\r\\nKPX T oacute -80\\r\\nKPX T ocircumflex -80\\r\\nKPX T odieresis -80\\r\\nKPX T ograve -80\\r\\nKPX T ohungarumlaut -80\\r\\nKPX T omacron -80\\r\\nKPX T oslash -80\\r\\nKPX T otilde -80\\r\\nKPX T period -74\\r\\nKPX T r -35\\r\\nKPX T racute -35\\r\\nKPX T rcaron -35\\r\\nKPX T rcommaaccent -35\\r\\nKPX T semicolon -55\\r\\nKPX T u -45\\r\\nKPX T uacute -45\\r\\nKPX T ucircumflex -45\\r\\nKPX T udieresis -45\\r\\nKPX T ugrave -45\\r\\nKPX T uhungarumlaut -45\\r\\nKPX T umacron -45\\r\\nKPX T uogonek -45\\r\\nKPX T uring -45\\r\\nKPX T w -80\\r\\nKPX T y -80\\r\\nKPX T yacute -80\\r\\nKPX T ydieresis -80\\r\\nKPX Tcaron A -93\\r\\nKPX Tcaron Aacute -93\\r\\nKPX Tcaron Abreve -93\\r\\nKPX Tcaron Acircumflex -93\\r\\nKPX Tcaron Adieresis -93\\r\\nKPX Tcaron Agrave -93\\r\\nKPX Tcaron Amacron -93\\r\\nKPX Tcaron Aogonek -93\\r\\nKPX Tcaron Aring -93\\r\\nKPX Tcaron Atilde -93\\r\\nKPX Tcaron O -18\\r\\nKPX Tcaron Oacute -18\\r\\nKPX Tcaron Ocircumflex -18\\r\\nKPX Tcaron Odieresis -18\\r\\nKPX Tcaron Ograve -18\\r\\nKPX Tcaron Ohungarumlaut -18\\r\\nKPX Tcaron Omacron -18\\r\\nKPX Tcaron Oslash -18\\r\\nKPX Tcaron Otilde -18\\r\\nKPX Tcaron a -80\\r\\nKPX Tcaron aacute -80\\r\\nKPX Tcaron abreve -80\\r\\nKPX Tcaron acircumflex -80\\r\\nKPX Tcaron adieresis -40\\r\\nKPX Tcaron agrave -40\\r\\nKPX Tcaron amacron -40\\r\\nKPX Tcaron aogonek -80\\r\\nKPX Tcaron aring -80\\r\\nKPX Tcaron atilde -40\\r\\nKPX Tcaron colon -50\\r\\nKPX Tcaron comma -74\\r\\nKPX Tcaron e -70\\r\\nKPX Tcaron eacute -70\\r\\nKPX Tcaron ecaron -70\\r\\nKPX Tcaron ecircumflex -30\\r\\nKPX Tcaron edieresis -30\\r\\nKPX Tcaron edotaccent -70\\r\\nKPX Tcaron egrave -70\\r\\nKPX Tcaron emacron -30\\r\\nKPX Tcaron eogonek -70\\r\\nKPX Tcaron hyphen -92\\r\\nKPX Tcaron i -35\\r\\nKPX Tcaron iacute -35\\r\\nKPX Tcaron iogonek -35\\r\\nKPX Tcaron o -80\\r\\nKPX Tcaron oacute -80\\r\\nKPX Tcaron ocircumflex -80\\r\\nKPX Tcaron odieresis -80\\r\\nKPX Tcaron ograve -80\\r\\nKPX Tcaron ohungarumlaut -80\\r\\nKPX Tcaron omacron -80\\r\\nKPX Tcaron oslash -80\\r\\nKPX Tcaron otilde -80\\r\\nKPX Tcaron period -74\\r\\nKPX Tcaron r -35\\r\\nKPX Tcaron racute -35\\r\\nKPX Tcaron rcaron -35\\r\\nKPX Tcaron rcommaaccent -35\\r\\nKPX Tcaron semicolon -55\\r\\nKPX Tcaron u -45\\r\\nKPX Tcaron uacute -45\\r\\nKPX Tcaron ucircumflex -45\\r\\nKPX Tcaron udieresis -45\\r\\nKPX Tcaron ugrave -45\\r\\nKPX Tcaron uhungarumlaut -45\\r\\nKPX Tcaron umacron -45\\r\\nKPX Tcaron uogonek -45\\r\\nKPX Tcaron uring -45\\r\\nKPX Tcaron w -80\\r\\nKPX Tcaron y -80\\r\\nKPX Tcaron yacute -80\\r\\nKPX Tcaron ydieresis -80\\r\\nKPX Tcommaaccent A -93\\r\\nKPX Tcommaaccent Aacute -93\\r\\nKPX Tcommaaccent Abreve -93\\r\\nKPX Tcommaaccent Acircumflex -93\\r\\nKPX Tcommaaccent Adieresis -93\\r\\nKPX Tcommaaccent Agrave -93\\r\\nKPX Tcommaaccent Amacron -93\\r\\nKPX Tcommaaccent Aogonek -93\\r\\nKPX Tcommaaccent Aring -93\\r\\nKPX Tcommaaccent Atilde -93\\r\\nKPX Tcommaaccent O -18\\r\\nKPX Tcommaaccent Oacute -18\\r\\nKPX Tcommaaccent Ocircumflex -18\\r\\nKPX Tcommaaccent Odieresis -18\\r\\nKPX Tcommaaccent Ograve -18\\r\\nKPX Tcommaaccent Ohungarumlaut -18\\r\\nKPX Tcommaaccent Omacron -18\\r\\nKPX Tcommaaccent Oslash -18\\r\\nKPX Tcommaaccent Otilde -18\\r\\nKPX Tcommaaccent a -80\\r\\nKPX Tcommaaccent aacute -80\\r\\nKPX Tcommaaccent abreve -80\\r\\nKPX Tcommaaccent acircumflex -80\\r\\nKPX Tcommaaccent adieresis -40\\r\\nKPX Tcommaaccent agrave -40\\r\\nKPX Tcommaaccent amacron -40\\r\\nKPX Tcommaaccent aogonek -80\\r\\nKPX Tcommaaccent aring -80\\r\\nKPX Tcommaaccent atilde -40\\r\\nKPX Tcommaaccent colon -50\\r\\nKPX Tcommaaccent comma -74\\r\\nKPX Tcommaaccent e -70\\r\\nKPX Tcommaaccent eacute -70\\r\\nKPX Tcommaaccent ecaron -70\\r\\nKPX Tcommaaccent ecircumflex -30\\r\\nKPX Tcommaaccent edieresis -30\\r\\nKPX Tcommaaccent edotaccent -70\\r\\nKPX Tcommaaccent egrave -30\\r\\nKPX Tcommaaccent emacron -70\\r\\nKPX Tcommaaccent eogonek -70\\r\\nKPX Tcommaaccent hyphen -92\\r\\nKPX Tcommaaccent i -35\\r\\nKPX Tcommaaccent iacute -35\\r\\nKPX Tcommaaccent iogonek -35\\r\\nKPX Tcommaaccent o -80\\r\\nKPX Tcommaaccent oacute -80\\r\\nKPX Tcommaaccent ocircumflex -80\\r\\nKPX Tcommaaccent odieresis -80\\r\\nKPX Tcommaaccent ograve -80\\r\\nKPX Tcommaaccent ohungarumlaut -80\\r\\nKPX Tcommaaccent omacron -80\\r\\nKPX Tcommaaccent oslash -80\\r\\nKPX Tcommaaccent otilde -80\\r\\nKPX Tcommaaccent period -74\\r\\nKPX Tcommaaccent r -35\\r\\nKPX Tcommaaccent racute -35\\r\\nKPX Tcommaaccent rcaron -35\\r\\nKPX Tcommaaccent rcommaaccent -35\\r\\nKPX Tcommaaccent semicolon -55\\r\\nKPX Tcommaaccent u -45\\r\\nKPX Tcommaaccent uacute -45\\r\\nKPX Tcommaaccent ucircumflex -45\\r\\nKPX Tcommaaccent udieresis -45\\r\\nKPX Tcommaaccent ugrave -45\\r\\nKPX Tcommaaccent uhungarumlaut -45\\r\\nKPX Tcommaaccent umacron -45\\r\\nKPX Tcommaaccent uogonek -45\\r\\nKPX Tcommaaccent uring -45\\r\\nKPX Tcommaaccent w -80\\r\\nKPX Tcommaaccent y -80\\r\\nKPX Tcommaaccent yacute -80\\r\\nKPX Tcommaaccent ydieresis -80\\r\\nKPX U A -40\\r\\nKPX U Aacute -40\\r\\nKPX U Abreve -40\\r\\nKPX U Acircumflex -40\\r\\nKPX U Adieresis -40\\r\\nKPX U Agrave -40\\r\\nKPX U Amacron -40\\r\\nKPX U Aogonek -40\\r\\nKPX U Aring -40\\r\\nKPX U Atilde -40\\r\\nKPX Uacute A -40\\r\\nKPX Uacute Aacute -40\\r\\nKPX Uacute Abreve -40\\r\\nKPX Uacute Acircumflex -40\\r\\nKPX Uacute Adieresis -40\\r\\nKPX Uacute Agrave -40\\r\\nKPX Uacute Amacron -40\\r\\nKPX Uacute Aogonek -40\\r\\nKPX Uacute Aring -40\\r\\nKPX Uacute Atilde -40\\r\\nKPX Ucircumflex A -40\\r\\nKPX Ucircumflex Aacute -40\\r\\nKPX Ucircumflex Abreve -40\\r\\nKPX Ucircumflex Acircumflex -40\\r\\nKPX Ucircumflex Adieresis -40\\r\\nKPX Ucircumflex Agrave -40\\r\\nKPX Ucircumflex Amacron -40\\r\\nKPX Ucircumflex Aogonek -40\\r\\nKPX Ucircumflex Aring -40\\r\\nKPX Ucircumflex Atilde -40\\r\\nKPX Udieresis A -40\\r\\nKPX Udieresis Aacute -40\\r\\nKPX Udieresis Abreve -40\\r\\nKPX Udieresis Acircumflex -40\\r\\nKPX Udieresis Adieresis -40\\r\\nKPX Udieresis Agrave -40\\r\\nKPX Udieresis Amacron -40\\r\\nKPX Udieresis Aogonek -40\\r\\nKPX Udieresis Aring -40\\r\\nKPX Udieresis Atilde -40\\r\\nKPX Ugrave A -40\\r\\nKPX Ugrave Aacute -40\\r\\nKPX Ugrave Abreve -40\\r\\nKPX Ugrave Acircumflex -40\\r\\nKPX Ugrave Adieresis -40\\r\\nKPX Ugrave Agrave -40\\r\\nKPX Ugrave Amacron -40\\r\\nKPX Ugrave Aogonek -40\\r\\nKPX Ugrave Aring -40\\r\\nKPX Ugrave Atilde -40\\r\\nKPX Uhungarumlaut A -40\\r\\nKPX Uhungarumlaut Aacute -40\\r\\nKPX Uhungarumlaut Abreve -40\\r\\nKPX Uhungarumlaut Acircumflex -40\\r\\nKPX Uhungarumlaut Adieresis -40\\r\\nKPX Uhungarumlaut Agrave -40\\r\\nKPX Uhungarumlaut Amacron -40\\r\\nKPX Uhungarumlaut Aogonek -40\\r\\nKPX Uhungarumlaut Aring -40\\r\\nKPX Uhungarumlaut Atilde -40\\r\\nKPX Umacron A -40\\r\\nKPX Umacron Aacute -40\\r\\nKPX Umacron Abreve -40\\r\\nKPX Umacron Acircumflex -40\\r\\nKPX Umacron Adieresis -40\\r\\nKPX Umacron Agrave -40\\r\\nKPX Umacron Amacron -40\\r\\nKPX Umacron Aogonek -40\\r\\nKPX Umacron Aring -40\\r\\nKPX Umacron Atilde -40\\r\\nKPX Uogonek A -40\\r\\nKPX Uogonek Aacute -40\\r\\nKPX Uogonek Abreve -40\\r\\nKPX Uogonek Acircumflex -40\\r\\nKPX Uogonek Adieresis -40\\r\\nKPX Uogonek Agrave -40\\r\\nKPX Uogonek Amacron -40\\r\\nKPX Uogonek Aogonek -40\\r\\nKPX Uogonek Aring -40\\r\\nKPX Uogonek Atilde -40\\r\\nKPX Uring A -40\\r\\nKPX Uring Aacute -40\\r\\nKPX Uring Abreve -40\\r\\nKPX Uring Acircumflex -40\\r\\nKPX Uring Adieresis -40\\r\\nKPX Uring Agrave -40\\r\\nKPX Uring Amacron -40\\r\\nKPX Uring Aogonek -40\\r\\nKPX Uring Aring -40\\r\\nKPX Uring Atilde -40\\r\\nKPX V A -135\\r\\nKPX V Aacute -135\\r\\nKPX V Abreve -135\\r\\nKPX V Acircumflex -135\\r\\nKPX V Adieresis -135\\r\\nKPX V Agrave -135\\r\\nKPX V Amacron -135\\r\\nKPX V Aogonek -135\\r\\nKPX V Aring -135\\r\\nKPX V Atilde -135\\r\\nKPX V G -15\\r\\nKPX V Gbreve -15\\r\\nKPX V Gcommaaccent -15\\r\\nKPX V O -40\\r\\nKPX V Oacute -40\\r\\nKPX V Ocircumflex -40\\r\\nKPX V Odieresis -40\\r\\nKPX V Ograve -40\\r\\nKPX V Ohungarumlaut -40\\r\\nKPX V Omacron -40\\r\\nKPX V Oslash -40\\r\\nKPX V Otilde -40\\r\\nKPX V a -111\\r\\nKPX V aacute -111\\r\\nKPX V abreve -111\\r\\nKPX V acircumflex -71\\r\\nKPX V adieresis -71\\r\\nKPX V agrave -71\\r\\nKPX V amacron -71\\r\\nKPX V aogonek -111\\r\\nKPX V aring -111\\r\\nKPX V atilde -71\\r\\nKPX V colon -74\\r\\nKPX V comma -129\\r\\nKPX V e -111\\r\\nKPX V eacute -111\\r\\nKPX V ecaron -71\\r\\nKPX V ecircumflex -71\\r\\nKPX V edieresis -71\\r\\nKPX V edotaccent -111\\r\\nKPX V egrave -71\\r\\nKPX V emacron -71\\r\\nKPX V eogonek -111\\r\\nKPX V hyphen -100\\r\\nKPX V i -60\\r\\nKPX V iacute -60\\r\\nKPX V icircumflex -20\\r\\nKPX V idieresis -20\\r\\nKPX V igrave -20\\r\\nKPX V imacron -20\\r\\nKPX V iogonek -60\\r\\nKPX V o -129\\r\\nKPX V oacute -129\\r\\nKPX V ocircumflex -129\\r\\nKPX V odieresis -89\\r\\nKPX V ograve -89\\r\\nKPX V ohungarumlaut -129\\r\\nKPX V omacron -89\\r\\nKPX V oslash -129\\r\\nKPX V otilde -89\\r\\nKPX V period -129\\r\\nKPX V semicolon -74\\r\\nKPX V u -75\\r\\nKPX V uacute -75\\r\\nKPX V ucircumflex -75\\r\\nKPX V udieresis -75\\r\\nKPX V ugrave -75\\r\\nKPX V uhungarumlaut -75\\r\\nKPX V umacron -75\\r\\nKPX V uogonek -75\\r\\nKPX V uring -75\\r\\nKPX W A -120\\r\\nKPX W Aacute -120\\r\\nKPX W Abreve -120\\r\\nKPX W Acircumflex -120\\r\\nKPX W Adieresis -120\\r\\nKPX W Agrave -120\\r\\nKPX W Amacron -120\\r\\nKPX W Aogonek -120\\r\\nKPX W Aring -120\\r\\nKPX W Atilde -120\\r\\nKPX W O -10\\r\\nKPX W Oacute -10\\r\\nKPX W Ocircumflex -10\\r\\nKPX W Odieresis -10\\r\\nKPX W Ograve -10\\r\\nKPX W Ohungarumlaut -10\\r\\nKPX W Omacron -10\\r\\nKPX W Oslash -10\\r\\nKPX W Otilde -10\\r\\nKPX W a -80\\r\\nKPX W aacute -80\\r\\nKPX W abreve -80\\r\\nKPX W acircumflex -80\\r\\nKPX W adieresis -80\\r\\nKPX W agrave -80\\r\\nKPX W amacron -80\\r\\nKPX W aogonek -80\\r\\nKPX W aring -80\\r\\nKPX W atilde -80\\r\\nKPX W colon -37\\r\\nKPX W comma -92\\r\\nKPX W e -80\\r\\nKPX W eacute -80\\r\\nKPX W ecaron -80\\r\\nKPX W ecircumflex -80\\r\\nKPX W edieresis -40\\r\\nKPX W edotaccent -80\\r\\nKPX W egrave -40\\r\\nKPX W emacron -40\\r\\nKPX W eogonek -80\\r\\nKPX W hyphen -65\\r\\nKPX W i -40\\r\\nKPX W iacute -40\\r\\nKPX W iogonek -40\\r\\nKPX W o -80\\r\\nKPX W oacute -80\\r\\nKPX W ocircumflex -80\\r\\nKPX W odieresis -80\\r\\nKPX W ograve -80\\r\\nKPX W ohungarumlaut -80\\r\\nKPX W omacron -80\\r\\nKPX W oslash -80\\r\\nKPX W otilde -80\\r\\nKPX W period -92\\r\\nKPX W semicolon -37\\r\\nKPX W u -50\\r\\nKPX W uacute -50\\r\\nKPX W ucircumflex -50\\r\\nKPX W udieresis -50\\r\\nKPX W ugrave -50\\r\\nKPX W uhungarumlaut -50\\r\\nKPX W umacron -50\\r\\nKPX W uogonek -50\\r\\nKPX W uring -50\\r\\nKPX W y -73\\r\\nKPX W yacute -73\\r\\nKPX W ydieresis -73\\r\\nKPX Y A -120\\r\\nKPX Y Aacute -120\\r\\nKPX Y Abreve -120\\r\\nKPX Y Acircumflex -120\\r\\nKPX Y Adieresis -120\\r\\nKPX Y Agrave -120\\r\\nKPX Y Amacron -120\\r\\nKPX Y Aogonek -120\\r\\nKPX Y Aring -120\\r\\nKPX Y Atilde -120\\r\\nKPX Y O -30\\r\\nKPX Y Oacute -30\\r\\nKPX Y Ocircumflex -30\\r\\nKPX Y Odieresis -30\\r\\nKPX Y Ograve -30\\r\\nKPX Y Ohungarumlaut -30\\r\\nKPX Y Omacron -30\\r\\nKPX Y Oslash -30\\r\\nKPX Y Otilde -30\\r\\nKPX Y a -100\\r\\nKPX Y aacute -100\\r\\nKPX Y abreve -100\\r\\nKPX Y acircumflex -100\\r\\nKPX Y adieresis -60\\r\\nKPX Y agrave -60\\r\\nKPX Y amacron -60\\r\\nKPX Y aogonek -100\\r\\nKPX Y aring -100\\r\\nKPX Y atilde -60\\r\\nKPX Y colon -92\\r\\nKPX Y comma -129\\r\\nKPX Y e -100\\r\\nKPX Y eacute -100\\r\\nKPX Y ecaron -100\\r\\nKPX Y ecircumflex -100\\r\\nKPX Y edieresis -60\\r\\nKPX Y edotaccent -100\\r\\nKPX Y egrave -60\\r\\nKPX Y emacron -60\\r\\nKPX Y eogonek -100\\r\\nKPX Y hyphen -111\\r\\nKPX Y i -55\\r\\nKPX Y iacute -55\\r\\nKPX Y iogonek -55\\r\\nKPX Y o -110\\r\\nKPX Y oacute -110\\r\\nKPX Y ocircumflex -110\\r\\nKPX Y odieresis -70\\r\\nKPX Y ograve -70\\r\\nKPX Y ohungarumlaut -110\\r\\nKPX Y omacron -70\\r\\nKPX Y oslash -110\\r\\nKPX Y otilde -70\\r\\nKPX Y period -129\\r\\nKPX Y semicolon -92\\r\\nKPX Y u -111\\r\\nKPX Y uacute -111\\r\\nKPX Y ucircumflex -111\\r\\nKPX Y udieresis -71\\r\\nKPX Y ugrave -71\\r\\nKPX Y uhungarumlaut -111\\r\\nKPX Y umacron -71\\r\\nKPX Y uogonek -111\\r\\nKPX Y uring -111\\r\\nKPX Yacute A -120\\r\\nKPX Yacute Aacute -120\\r\\nKPX Yacute Abreve -120\\r\\nKPX Yacute Acircumflex -120\\r\\nKPX Yacute Adieresis -120\\r\\nKPX Yacute Agrave -120\\r\\nKPX Yacute Amacron -120\\r\\nKPX Yacute Aogonek -120\\r\\nKPX Yacute Aring -120\\r\\nKPX Yacute Atilde -120\\r\\nKPX Yacute O -30\\r\\nKPX Yacute Oacute -30\\r\\nKPX Yacute Ocircumflex -30\\r\\nKPX Yacute Odieresis -30\\r\\nKPX Yacute Ograve -30\\r\\nKPX Yacute Ohungarumlaut -30\\r\\nKPX Yacute Omacron -30\\r\\nKPX Yacute Oslash -30\\r\\nKPX Yacute Otilde -30\\r\\nKPX Yacute a -100\\r\\nKPX Yacute aacute -100\\r\\nKPX Yacute abreve -100\\r\\nKPX Yacute acircumflex -100\\r\\nKPX Yacute adieresis -60\\r\\nKPX Yacute agrave -60\\r\\nKPX Yacute amacron -60\\r\\nKPX Yacute aogonek -100\\r\\nKPX Yacute aring -100\\r\\nKPX Yacute atilde -60\\r\\nKPX Yacute colon -92\\r\\nKPX Yacute comma -129\\r\\nKPX Yacute e -100\\r\\nKPX Yacute eacute -100\\r\\nKPX Yacute ecaron -100\\r\\nKPX Yacute ecircumflex -100\\r\\nKPX Yacute edieresis -60\\r\\nKPX Yacute edotaccent -100\\r\\nKPX Yacute egrave -60\\r\\nKPX Yacute emacron -60\\r\\nKPX Yacute eogonek -100\\r\\nKPX Yacute hyphen -111\\r\\nKPX Yacute i -55\\r\\nKPX Yacute iacute -55\\r\\nKPX Yacute iogonek -55\\r\\nKPX Yacute o -110\\r\\nKPX Yacute oacute -110\\r\\nKPX Yacute ocircumflex -110\\r\\nKPX Yacute odieresis -70\\r\\nKPX Yacute ograve -70\\r\\nKPX Yacute ohungarumlaut -110\\r\\nKPX Yacute omacron -70\\r\\nKPX Yacute oslash -110\\r\\nKPX Yacute otilde -70\\r\\nKPX Yacute period -129\\r\\nKPX Yacute semicolon -92\\r\\nKPX Yacute u -111\\r\\nKPX Yacute uacute -111\\r\\nKPX Yacute ucircumflex -111\\r\\nKPX Yacute udieresis -71\\r\\nKPX Yacute ugrave -71\\r\\nKPX Yacute uhungarumlaut -111\\r\\nKPX Yacute umacron -71\\r\\nKPX Yacute uogonek -111\\r\\nKPX Yacute uring -111\\r\\nKPX Ydieresis A -120\\r\\nKPX Ydieresis Aacute -120\\r\\nKPX Ydieresis Abreve -120\\r\\nKPX Ydieresis Acircumflex -120\\r\\nKPX Ydieresis Adieresis -120\\r\\nKPX Ydieresis Agrave -120\\r\\nKPX Ydieresis Amacron -120\\r\\nKPX Ydieresis Aogonek -120\\r\\nKPX Ydieresis Aring -120\\r\\nKPX Ydieresis Atilde -120\\r\\nKPX Ydieresis O -30\\r\\nKPX Ydieresis Oacute -30\\r\\nKPX Ydieresis Ocircumflex -30\\r\\nKPX Ydieresis Odieresis -30\\r\\nKPX Ydieresis Ograve -30\\r\\nKPX Ydieresis Ohungarumlaut -30\\r\\nKPX Ydieresis Omacron -30\\r\\nKPX Ydieresis Oslash -30\\r\\nKPX Ydieresis Otilde -30\\r\\nKPX Ydieresis a -100\\r\\nKPX Ydieresis aacute -100\\r\\nKPX Ydieresis abreve -100\\r\\nKPX Ydieresis acircumflex -100\\r\\nKPX Ydieresis adieresis -60\\r\\nKPX Ydieresis agrave -60\\r\\nKPX Ydieresis amacron -60\\r\\nKPX Ydieresis aogonek -100\\r\\nKPX Ydieresis aring -100\\r\\nKPX Ydieresis atilde -100\\r\\nKPX Ydieresis colon -92\\r\\nKPX Ydieresis comma -129\\r\\nKPX Ydieresis e -100\\r\\nKPX Ydieresis eacute -100\\r\\nKPX Ydieresis ecaron -100\\r\\nKPX Ydieresis ecircumflex -100\\r\\nKPX Ydieresis edieresis -60\\r\\nKPX Ydieresis edotaccent -100\\r\\nKPX Ydieresis egrave -60\\r\\nKPX Ydieresis emacron -60\\r\\nKPX Ydieresis eogonek -100\\r\\nKPX Ydieresis hyphen -111\\r\\nKPX Ydieresis i -55\\r\\nKPX Ydieresis iacute -55\\r\\nKPX Ydieresis iogonek -55\\r\\nKPX Ydieresis o -110\\r\\nKPX Ydieresis oacute -110\\r\\nKPX Ydieresis ocircumflex -110\\r\\nKPX Ydieresis odieresis -70\\r\\nKPX Ydieresis ograve -70\\r\\nKPX Ydieresis ohungarumlaut -110\\r\\nKPX Ydieresis omacron -70\\r\\nKPX Ydieresis oslash -110\\r\\nKPX Ydieresis otilde -70\\r\\nKPX Ydieresis period -129\\r\\nKPX Ydieresis semicolon -92\\r\\nKPX Ydieresis u -111\\r\\nKPX Ydieresis uacute -111\\r\\nKPX Ydieresis ucircumflex -111\\r\\nKPX Ydieresis udieresis -71\\r\\nKPX Ydieresis ugrave -71\\r\\nKPX Ydieresis uhungarumlaut -111\\r\\nKPX Ydieresis umacron -71\\r\\nKPX Ydieresis uogonek -111\\r\\nKPX Ydieresis uring -111\\r\\nKPX a v -20\\r\\nKPX a w -15\\r\\nKPX aacute v -20\\r\\nKPX aacute w -15\\r\\nKPX abreve v -20\\r\\nKPX abreve w -15\\r\\nKPX acircumflex v -20\\r\\nKPX acircumflex w -15\\r\\nKPX adieresis v -20\\r\\nKPX adieresis w -15\\r\\nKPX agrave v -20\\r\\nKPX agrave w -15\\r\\nKPX amacron v -20\\r\\nKPX amacron w -15\\r\\nKPX aogonek v -20\\r\\nKPX aogonek w -15\\r\\nKPX aring v -20\\r\\nKPX aring w -15\\r\\nKPX atilde v -20\\r\\nKPX atilde w -15\\r\\nKPX b period -40\\r\\nKPX b u -20\\r\\nKPX b uacute -20\\r\\nKPX b ucircumflex -20\\r\\nKPX b udieresis -20\\r\\nKPX b ugrave -20\\r\\nKPX b uhungarumlaut -20\\r\\nKPX b umacron -20\\r\\nKPX b uogonek -20\\r\\nKPX b uring -20\\r\\nKPX b v -15\\r\\nKPX c y -15\\r\\nKPX c yacute -15\\r\\nKPX c ydieresis -15\\r\\nKPX cacute y -15\\r\\nKPX cacute yacute -15\\r\\nKPX cacute ydieresis -15\\r\\nKPX ccaron y -15\\r\\nKPX ccaron yacute -15\\r\\nKPX ccaron ydieresis -15\\r\\nKPX ccedilla y -15\\r\\nKPX ccedilla yacute -15\\r\\nKPX ccedilla ydieresis -15\\r\\nKPX comma quotedblright -70\\r\\nKPX comma quoteright -70\\r\\nKPX e g -15\\r\\nKPX e gbreve -15\\r\\nKPX e gcommaaccent -15\\r\\nKPX e v -25\\r\\nKPX e w -25\\r\\nKPX e x -15\\r\\nKPX e y -15\\r\\nKPX e yacute -15\\r\\nKPX e ydieresis -15\\r\\nKPX eacute g -15\\r\\nKPX eacute gbreve -15\\r\\nKPX eacute gcommaaccent -15\\r\\nKPX eacute v -25\\r\\nKPX eacute w -25\\r\\nKPX eacute x -15\\r\\nKPX eacute y -15\\r\\nKPX eacute yacute -15\\r\\nKPX eacute ydieresis -15\\r\\nKPX ecaron g -15\\r\\nKPX ecaron gbreve -15\\r\\nKPX ecaron gcommaaccent -15\\r\\nKPX ecaron v -25\\r\\nKPX ecaron w -25\\r\\nKPX ecaron x -15\\r\\nKPX ecaron y -15\\r\\nKPX ecaron yacute -15\\r\\nKPX ecaron ydieresis -15\\r\\nKPX ecircumflex g -15\\r\\nKPX ecircumflex gbreve -15\\r\\nKPX ecircumflex gcommaaccent -15\\r\\nKPX ecircumflex v -25\\r\\nKPX ecircumflex w -25\\r\\nKPX ecircumflex x -15\\r\\nKPX ecircumflex y -15\\r\\nKPX ecircumflex yacute -15\\r\\nKPX ecircumflex ydieresis -15\\r\\nKPX edieresis g -15\\r\\nKPX edieresis gbreve -15\\r\\nKPX edieresis gcommaaccent -15\\r\\nKPX edieresis v -25\\r\\nKPX edieresis w -25\\r\\nKPX edieresis x -15\\r\\nKPX edieresis y -15\\r\\nKPX edieresis yacute -15\\r\\nKPX edieresis ydieresis -15\\r\\nKPX edotaccent g -15\\r\\nKPX edotaccent gbreve -15\\r\\nKPX edotaccent gcommaaccent -15\\r\\nKPX edotaccent v -25\\r\\nKPX edotaccent w -25\\r\\nKPX edotaccent x -15\\r\\nKPX edotaccent y -15\\r\\nKPX edotaccent yacute -15\\r\\nKPX edotaccent ydieresis -15\\r\\nKPX egrave g -15\\r\\nKPX egrave gbreve -15\\r\\nKPX egrave gcommaaccent -15\\r\\nKPX egrave v -25\\r\\nKPX egrave w -25\\r\\nKPX egrave x -15\\r\\nKPX egrave y -15\\r\\nKPX egrave yacute -15\\r\\nKPX egrave ydieresis -15\\r\\nKPX emacron g -15\\r\\nKPX emacron gbreve -15\\r\\nKPX emacron gcommaaccent -15\\r\\nKPX emacron v -25\\r\\nKPX emacron w -25\\r\\nKPX emacron x -15\\r\\nKPX emacron y -15\\r\\nKPX emacron yacute -15\\r\\nKPX emacron ydieresis -15\\r\\nKPX eogonek g -15\\r\\nKPX eogonek gbreve -15\\r\\nKPX eogonek gcommaaccent -15\\r\\nKPX eogonek v -25\\r\\nKPX eogonek w -25\\r\\nKPX eogonek x -15\\r\\nKPX eogonek y -15\\r\\nKPX eogonek yacute -15\\r\\nKPX eogonek ydieresis -15\\r\\nKPX f a -10\\r\\nKPX f aacute -10\\r\\nKPX f abreve -10\\r\\nKPX f acircumflex -10\\r\\nKPX f adieresis -10\\r\\nKPX f agrave -10\\r\\nKPX f amacron -10\\r\\nKPX f aogonek -10\\r\\nKPX f aring -10\\r\\nKPX f atilde -10\\r\\nKPX f dotlessi -50\\r\\nKPX f f -25\\r\\nKPX f i -20\\r\\nKPX f iacute -20\\r\\nKPX f quoteright 55\\r\\nKPX g a -5\\r\\nKPX g aacute -5\\r\\nKPX g abreve -5\\r\\nKPX g acircumflex -5\\r\\nKPX g adieresis -5\\r\\nKPX g agrave -5\\r\\nKPX g amacron -5\\r\\nKPX g aogonek -5\\r\\nKPX g aring -5\\r\\nKPX g atilde -5\\r\\nKPX gbreve a -5\\r\\nKPX gbreve aacute -5\\r\\nKPX gbreve abreve -5\\r\\nKPX gbreve acircumflex -5\\r\\nKPX gbreve adieresis -5\\r\\nKPX gbreve agrave -5\\r\\nKPX gbreve amacron -5\\r\\nKPX gbreve aogonek -5\\r\\nKPX gbreve aring -5\\r\\nKPX gbreve atilde -5\\r\\nKPX gcommaaccent a -5\\r\\nKPX gcommaaccent aacute -5\\r\\nKPX gcommaaccent abreve -5\\r\\nKPX gcommaaccent acircumflex -5\\r\\nKPX gcommaaccent adieresis -5\\r\\nKPX gcommaaccent agrave -5\\r\\nKPX gcommaaccent amacron -5\\r\\nKPX gcommaaccent aogonek -5\\r\\nKPX gcommaaccent aring -5\\r\\nKPX gcommaaccent atilde -5\\r\\nKPX h y -5\\r\\nKPX h yacute -5\\r\\nKPX h ydieresis -5\\r\\nKPX i v -25\\r\\nKPX iacute v -25\\r\\nKPX icircumflex v -25\\r\\nKPX idieresis v -25\\r\\nKPX igrave v -25\\r\\nKPX imacron v -25\\r\\nKPX iogonek v -25\\r\\nKPX k e -10\\r\\nKPX k eacute -10\\r\\nKPX k ecaron -10\\r\\nKPX k ecircumflex -10\\r\\nKPX k edieresis -10\\r\\nKPX k edotaccent -10\\r\\nKPX k egrave -10\\r\\nKPX k emacron -10\\r\\nKPX k eogonek -10\\r\\nKPX k o -10\\r\\nKPX k oacute -10\\r\\nKPX k ocircumflex -10\\r\\nKPX k odieresis -10\\r\\nKPX k ograve -10\\r\\nKPX k ohungarumlaut -10\\r\\nKPX k omacron -10\\r\\nKPX k oslash -10\\r\\nKPX k otilde -10\\r\\nKPX k y -15\\r\\nKPX k yacute -15\\r\\nKPX k ydieresis -15\\r\\nKPX kcommaaccent e -10\\r\\nKPX kcommaaccent eacute -10\\r\\nKPX kcommaaccent ecaron -10\\r\\nKPX kcommaaccent ecircumflex -10\\r\\nKPX kcommaaccent edieresis -10\\r\\nKPX kcommaaccent edotaccent -10\\r\\nKPX kcommaaccent egrave -10\\r\\nKPX kcommaaccent emacron -10\\r\\nKPX kcommaaccent eogonek -10\\r\\nKPX kcommaaccent o -10\\r\\nKPX kcommaaccent oacute -10\\r\\nKPX kcommaaccent ocircumflex -10\\r\\nKPX kcommaaccent odieresis -10\\r\\nKPX kcommaaccent ograve -10\\r\\nKPX kcommaaccent ohungarumlaut -10\\r\\nKPX kcommaaccent omacron -10\\r\\nKPX kcommaaccent oslash -10\\r\\nKPX kcommaaccent otilde -10\\r\\nKPX kcommaaccent y -15\\r\\nKPX kcommaaccent yacute -15\\r\\nKPX kcommaaccent ydieresis -15\\r\\nKPX l w -10\\r\\nKPX lacute w -10\\r\\nKPX lcommaaccent w -10\\r\\nKPX lslash w -10\\r\\nKPX n v -40\\r\\nKPX n y -15\\r\\nKPX n yacute -15\\r\\nKPX n ydieresis -15\\r\\nKPX nacute v -40\\r\\nKPX nacute y -15\\r\\nKPX nacute yacute -15\\r\\nKPX nacute ydieresis -15\\r\\nKPX ncaron v -40\\r\\nKPX ncaron y -15\\r\\nKPX ncaron yacute -15\\r\\nKPX ncaron ydieresis -15\\r\\nKPX ncommaaccent v -40\\r\\nKPX ncommaaccent y -15\\r\\nKPX ncommaaccent yacute -15\\r\\nKPX ncommaaccent ydieresis -15\\r\\nKPX ntilde v -40\\r\\nKPX ntilde y -15\\r\\nKPX ntilde yacute -15\\r\\nKPX ntilde ydieresis -15\\r\\nKPX o v -15\\r\\nKPX o w -25\\r\\nKPX o y -10\\r\\nKPX o yacute -10\\r\\nKPX o ydieresis -10\\r\\nKPX oacute v -15\\r\\nKPX oacute w -25\\r\\nKPX oacute y -10\\r\\nKPX oacute yacute -10\\r\\nKPX oacute ydieresis -10\\r\\nKPX ocircumflex v -15\\r\\nKPX ocircumflex w -25\\r\\nKPX ocircumflex y -10\\r\\nKPX ocircumflex yacute -10\\r\\nKPX ocircumflex ydieresis -10\\r\\nKPX odieresis v -15\\r\\nKPX odieresis w -25\\r\\nKPX odieresis y -10\\r\\nKPX odieresis yacute -10\\r\\nKPX odieresis ydieresis -10\\r\\nKPX ograve v -15\\r\\nKPX ograve w -25\\r\\nKPX ograve y -10\\r\\nKPX ograve yacute -10\\r\\nKPX ograve ydieresis -10\\r\\nKPX ohungarumlaut v -15\\r\\nKPX ohungarumlaut w -25\\r\\nKPX ohungarumlaut y -10\\r\\nKPX ohungarumlaut yacute -10\\r\\nKPX ohungarumlaut ydieresis -10\\r\\nKPX omacron v -15\\r\\nKPX omacron w -25\\r\\nKPX omacron y -10\\r\\nKPX omacron yacute -10\\r\\nKPX omacron ydieresis -10\\r\\nKPX oslash v -15\\r\\nKPX oslash w -25\\r\\nKPX oslash y -10\\r\\nKPX oslash yacute -10\\r\\nKPX oslash ydieresis -10\\r\\nKPX otilde v -15\\r\\nKPX otilde w -25\\r\\nKPX otilde y -10\\r\\nKPX otilde yacute -10\\r\\nKPX otilde ydieresis -10\\r\\nKPX p y -10\\r\\nKPX p yacute -10\\r\\nKPX p ydieresis -10\\r\\nKPX period quotedblright -70\\r\\nKPX period quoteright -70\\r\\nKPX quotedblleft A -80\\r\\nKPX quotedblleft Aacute -80\\r\\nKPX quotedblleft Abreve -80\\r\\nKPX quotedblleft Acircumflex -80\\r\\nKPX quotedblleft Adieresis -80\\r\\nKPX quotedblleft Agrave -80\\r\\nKPX quotedblleft Amacron -80\\r\\nKPX quotedblleft Aogonek -80\\r\\nKPX quotedblleft Aring -80\\r\\nKPX quotedblleft Atilde -80\\r\\nKPX quoteleft A -80\\r\\nKPX quoteleft Aacute -80\\r\\nKPX quoteleft Abreve -80\\r\\nKPX quoteleft Acircumflex -80\\r\\nKPX quoteleft Adieresis -80\\r\\nKPX quoteleft Agrave -80\\r\\nKPX quoteleft Amacron -80\\r\\nKPX quoteleft Aogonek -80\\r\\nKPX quoteleft Aring -80\\r\\nKPX quoteleft Atilde -80\\r\\nKPX quoteleft quoteleft -74\\r\\nKPX quoteright d -50\\r\\nKPX quoteright dcroat -50\\r\\nKPX quoteright l -10\\r\\nKPX quoteright lacute -10\\r\\nKPX quoteright lcommaaccent -10\\r\\nKPX quoteright lslash -10\\r\\nKPX quoteright quoteright -74\\r\\nKPX quoteright r -50\\r\\nKPX quoteright racute -50\\r\\nKPX quoteright rcaron -50\\r\\nKPX quoteright rcommaaccent -50\\r\\nKPX quoteright s -55\\r\\nKPX quoteright sacute -55\\r\\nKPX quoteright scaron -55\\r\\nKPX quoteright scedilla -55\\r\\nKPX quoteright scommaaccent -55\\r\\nKPX quoteright space -74\\r\\nKPX quoteright t -18\\r\\nKPX quoteright tcommaaccent -18\\r\\nKPX quoteright v -50\\r\\nKPX r comma -40\\r\\nKPX r g -18\\r\\nKPX r gbreve -18\\r\\nKPX r gcommaaccent -18\\r\\nKPX r hyphen -20\\r\\nKPX r period -55\\r\\nKPX racute comma -40\\r\\nKPX racute g -18\\r\\nKPX racute gbreve -18\\r\\nKPX racute gcommaaccent -18\\r\\nKPX racute hyphen -20\\r\\nKPX racute period -55\\r\\nKPX rcaron comma -40\\r\\nKPX rcaron g -18\\r\\nKPX rcaron gbreve -18\\r\\nKPX rcaron gcommaaccent -18\\r\\nKPX rcaron hyphen -20\\r\\nKPX rcaron period -55\\r\\nKPX rcommaaccent comma -40\\r\\nKPX rcommaaccent g -18\\r\\nKPX rcommaaccent gbreve -18\\r\\nKPX rcommaaccent gcommaaccent -18\\r\\nKPX rcommaaccent hyphen -20\\r\\nKPX rcommaaccent period -55\\r\\nKPX space A -55\\r\\nKPX space Aacute -55\\r\\nKPX space Abreve -55\\r\\nKPX space Acircumflex -55\\r\\nKPX space Adieresis -55\\r\\nKPX space Agrave -55\\r\\nKPX space Amacron -55\\r\\nKPX space Aogonek -55\\r\\nKPX space Aring -55\\r\\nKPX space Atilde -55\\r\\nKPX space T -18\\r\\nKPX space Tcaron -18\\r\\nKPX space Tcommaaccent -18\\r\\nKPX space V -50\\r\\nKPX space W -30\\r\\nKPX space Y -90\\r\\nKPX space Yacute -90\\r\\nKPX space Ydieresis -90\\r\\nKPX v a -25\\r\\nKPX v aacute -25\\r\\nKPX v abreve -25\\r\\nKPX v acircumflex -25\\r\\nKPX v adieresis -25\\r\\nKPX v agrave -25\\r\\nKPX v amacron -25\\r\\nKPX v aogonek -25\\r\\nKPX v aring -25\\r\\nKPX v atilde -25\\r\\nKPX v comma -65\\r\\nKPX v e -15\\r\\nKPX v eacute -15\\r\\nKPX v ecaron -15\\r\\nKPX v ecircumflex -15\\r\\nKPX v edieresis -15\\r\\nKPX v edotaccent -15\\r\\nKPX v egrave -15\\r\\nKPX v emacron -15\\r\\nKPX v eogonek -15\\r\\nKPX v o -20\\r\\nKPX v oacute -20\\r\\nKPX v ocircumflex -20\\r\\nKPX v odieresis -20\\r\\nKPX v ograve -20\\r\\nKPX v ohungarumlaut -20\\r\\nKPX v omacron -20\\r\\nKPX v oslash -20\\r\\nKPX v otilde -20\\r\\nKPX v period -65\\r\\nKPX w a -10\\r\\nKPX w aacute -10\\r\\nKPX w abreve -10\\r\\nKPX w acircumflex -10\\r\\nKPX w adieresis -10\\r\\nKPX w agrave -10\\r\\nKPX w amacron -10\\r\\nKPX w aogonek -10\\r\\nKPX w aring -10\\r\\nKPX w atilde -10\\r\\nKPX w comma -65\\r\\nKPX w o -10\\r\\nKPX w oacute -10\\r\\nKPX w ocircumflex -10\\r\\nKPX w odieresis -10\\r\\nKPX w ograve -10\\r\\nKPX w ohungarumlaut -10\\r\\nKPX w omacron -10\\r\\nKPX w oslash -10\\r\\nKPX w otilde -10\\r\\nKPX w period -65\\r\\nKPX x e -15\\r\\nKPX x eacute -15\\r\\nKPX x ecaron -15\\r\\nKPX x ecircumflex -15\\r\\nKPX x edieresis -15\\r\\nKPX x edotaccent -15\\r\\nKPX x egrave -15\\r\\nKPX x emacron -15\\r\\nKPX x eogonek -15\\r\\nKPX y comma -65\\r\\nKPX y period -65\\r\\nKPX yacute comma -65\\r\\nKPX yacute period -65\\r\\nKPX ydieresis comma -65\\r\\nKPX ydieresis period -65\\r\\nEndKernPairs\\r\\nEndKernData\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/Times-Roman.afm?`)},"./node_modules/pdfkit/js/data/ZapfDingbats.afm":module=>{"use strict";eval(`module.exports = "StartFontMetrics 4.1\\r\\nComment Copyright (c) 1985, 1987, 1988, 1989, 1997 Adobe Systems Incorporated. All Rights Reserved.\\r\\nComment Creation Date: Thu May  1 15:14:13 1997\\r\\nComment UniqueID 43082\\r\\nComment VMusage 45775 55535\\r\\nFontName ZapfDingbats\\r\\nFullName ITC Zapf Dingbats\\r\\nFamilyName ZapfDingbats\\r\\nWeight Medium\\r\\nItalicAngle 0\\r\\nIsFixedPitch false\\r\\nCharacterSet Special\\r\\nFontBBox -1 -143 981 820 \\r\\nUnderlinePosition -100\\r\\nUnderlineThickness 50\\r\\nVersion 002.000\\r\\nNotice Copyright (c) 1985, 1987, 1988, 1989, 1997 Adobe Systems Incorporated. All Rights Reserved.ITC Zapf Dingbats is a registered trademark of International Typeface Corporation.\\r\\nEncodingScheme FontSpecific\\r\\nStdHW 28\\r\\nStdVW 90\\r\\nStartCharMetrics 202\\r\\nC 32 ; WX 278 ; N space ; B 0 0 0 0 ;\\r\\nC 33 ; WX 974 ; N a1 ; B 35 72 939 621 ;\\r\\nC 34 ; WX 961 ; N a2 ; B 35 81 927 611 ;\\r\\nC 35 ; WX 974 ; N a202 ; B 35 72 939 621 ;\\r\\nC 36 ; WX 980 ; N a3 ; B 35 0 945 692 ;\\r\\nC 37 ; WX 719 ; N a4 ; B 34 139 685 566 ;\\r\\nC 38 ; WX 789 ; N a5 ; B 35 -14 755 705 ;\\r\\nC 39 ; WX 790 ; N a119 ; B 35 -14 755 705 ;\\r\\nC 40 ; WX 791 ; N a118 ; B 35 -13 761 705 ;\\r\\nC 41 ; WX 690 ; N a117 ; B 34 138 655 553 ;\\r\\nC 42 ; WX 960 ; N a11 ; B 35 123 925 568 ;\\r\\nC 43 ; WX 939 ; N a12 ; B 35 134 904 559 ;\\r\\nC 44 ; WX 549 ; N a13 ; B 29 -11 516 705 ;\\r\\nC 45 ; WX 855 ; N a14 ; B 34 59 820 632 ;\\r\\nC 46 ; WX 911 ; N a15 ; B 35 50 876 642 ;\\r\\nC 47 ; WX 933 ; N a16 ; B 35 139 899 550 ;\\r\\nC 48 ; WX 911 ; N a105 ; B 35 50 876 642 ;\\r\\nC 49 ; WX 945 ; N a17 ; B 35 139 909 553 ;\\r\\nC 50 ; WX 974 ; N a18 ; B 35 104 938 587 ;\\r\\nC 51 ; WX 755 ; N a19 ; B 34 -13 721 705 ;\\r\\nC 52 ; WX 846 ; N a20 ; B 36 -14 811 705 ;\\r\\nC 53 ; WX 762 ; N a21 ; B 35 0 727 692 ;\\r\\nC 54 ; WX 761 ; N a22 ; B 35 0 727 692 ;\\r\\nC 55 ; WX 571 ; N a23 ; B -1 -68 571 661 ;\\r\\nC 56 ; WX 677 ; N a24 ; B 36 -13 642 705 ;\\r\\nC 57 ; WX 763 ; N a25 ; B 35 0 728 692 ;\\r\\nC 58 ; WX 760 ; N a26 ; B 35 0 726 692 ;\\r\\nC 59 ; WX 759 ; N a27 ; B 35 0 725 692 ;\\r\\nC 60 ; WX 754 ; N a28 ; B 35 0 720 692 ;\\r\\nC 61 ; WX 494 ; N a6 ; B 35 0 460 692 ;\\r\\nC 62 ; WX 552 ; N a7 ; B 35 0 517 692 ;\\r\\nC 63 ; WX 537 ; N a8 ; B 35 0 503 692 ;\\r\\nC 64 ; WX 577 ; N a9 ; B 35 96 542 596 ;\\r\\nC 65 ; WX 692 ; N a10 ; B 35 -14 657 705 ;\\r\\nC 66 ; WX 786 ; N a29 ; B 35 -14 751 705 ;\\r\\nC 67 ; WX 788 ; N a30 ; B 35 -14 752 705 ;\\r\\nC 68 ; WX 788 ; N a31 ; B 35 -14 753 705 ;\\r\\nC 69 ; WX 790 ; N a32 ; B 35 -14 756 705 ;\\r\\nC 70 ; WX 793 ; N a33 ; B 35 -13 759 705 ;\\r\\nC 71 ; WX 794 ; N a34 ; B 35 -13 759 705 ;\\r\\nC 72 ; WX 816 ; N a35 ; B 35 -14 782 705 ;\\r\\nC 73 ; WX 823 ; N a36 ; B 35 -14 787 705 ;\\r\\nC 74 ; WX 789 ; N a37 ; B 35 -14 754 705 ;\\r\\nC 75 ; WX 841 ; N a38 ; B 35 -14 807 705 ;\\r\\nC 76 ; WX 823 ; N a39 ; B 35 -14 789 705 ;\\r\\nC 77 ; WX 833 ; N a40 ; B 35 -14 798 705 ;\\r\\nC 78 ; WX 816 ; N a41 ; B 35 -13 782 705 ;\\r\\nC 79 ; WX 831 ; N a42 ; B 35 -14 796 705 ;\\r\\nC 80 ; WX 923 ; N a43 ; B 35 -14 888 705 ;\\r\\nC 81 ; WX 744 ; N a44 ; B 35 0 710 692 ;\\r\\nC 82 ; WX 723 ; N a45 ; B 35 0 688 692 ;\\r\\nC 83 ; WX 749 ; N a46 ; B 35 0 714 692 ;\\r\\nC 84 ; WX 790 ; N a47 ; B 34 -14 756 705 ;\\r\\nC 85 ; WX 792 ; N a48 ; B 35 -14 758 705 ;\\r\\nC 86 ; WX 695 ; N a49 ; B 35 -14 661 706 ;\\r\\nC 87 ; WX 776 ; N a50 ; B 35 -6 741 699 ;\\r\\nC 88 ; WX 768 ; N a51 ; B 35 -7 734 699 ;\\r\\nC 89 ; WX 792 ; N a52 ; B 35 -14 757 705 ;\\r\\nC 90 ; WX 759 ; N a53 ; B 35 0 725 692 ;\\r\\nC 91 ; WX 707 ; N a54 ; B 35 -13 672 704 ;\\r\\nC 92 ; WX 708 ; N a55 ; B 35 -14 672 705 ;\\r\\nC 93 ; WX 682 ; N a56 ; B 35 -14 647 705 ;\\r\\nC 94 ; WX 701 ; N a57 ; B 35 -14 666 705 ;\\r\\nC 95 ; WX 826 ; N a58 ; B 35 -14 791 705 ;\\r\\nC 96 ; WX 815 ; N a59 ; B 35 -14 780 705 ;\\r\\nC 97 ; WX 789 ; N a60 ; B 35 -14 754 705 ;\\r\\nC 98 ; WX 789 ; N a61 ; B 35 -14 754 705 ;\\r\\nC 99 ; WX 707 ; N a62 ; B 34 -14 673 705 ;\\r\\nC 100 ; WX 687 ; N a63 ; B 36 0 651 692 ;\\r\\nC 101 ; WX 696 ; N a64 ; B 35 0 661 691 ;\\r\\nC 102 ; WX 689 ; N a65 ; B 35 0 655 692 ;\\r\\nC 103 ; WX 786 ; N a66 ; B 34 -14 751 705 ;\\r\\nC 104 ; WX 787 ; N a67 ; B 35 -14 752 705 ;\\r\\nC 105 ; WX 713 ; N a68 ; B 35 -14 678 705 ;\\r\\nC 106 ; WX 791 ; N a69 ; B 35 -14 756 705 ;\\r\\nC 107 ; WX 785 ; N a70 ; B 36 -14 751 705 ;\\r\\nC 108 ; WX 791 ; N a71 ; B 35 -14 757 705 ;\\r\\nC 109 ; WX 873 ; N a72 ; B 35 -14 838 705 ;\\r\\nC 110 ; WX 761 ; N a73 ; B 35 0 726 692 ;\\r\\nC 111 ; WX 762 ; N a74 ; B 35 0 727 692 ;\\r\\nC 112 ; WX 762 ; N a203 ; B 35 0 727 692 ;\\r\\nC 113 ; WX 759 ; N a75 ; B 35 0 725 692 ;\\r\\nC 114 ; WX 759 ; N a204 ; B 35 0 725 692 ;\\r\\nC 115 ; WX 892 ; N a76 ; B 35 0 858 705 ;\\r\\nC 116 ; WX 892 ; N a77 ; B 35 -14 858 692 ;\\r\\nC 117 ; WX 788 ; N a78 ; B 35 -14 754 705 ;\\r\\nC 118 ; WX 784 ; N a79 ; B 35 -14 749 705 ;\\r\\nC 119 ; WX 438 ; N a81 ; B 35 -14 403 705 ;\\r\\nC 120 ; WX 138 ; N a82 ; B 35 0 104 692 ;\\r\\nC 121 ; WX 277 ; N a83 ; B 35 0 242 692 ;\\r\\nC 122 ; WX 415 ; N a84 ; B 35 0 380 692 ;\\r\\nC 123 ; WX 392 ; N a97 ; B 35 263 357 705 ;\\r\\nC 124 ; WX 392 ; N a98 ; B 34 263 357 705 ;\\r\\nC 125 ; WX 668 ; N a99 ; B 35 263 633 705 ;\\r\\nC 126 ; WX 668 ; N a100 ; B 36 263 634 705 ;\\r\\nC 128 ; WX 390 ; N a89 ; B 35 -14 356 705 ;\\r\\nC 129 ; WX 390 ; N a90 ; B 35 -14 355 705 ;\\r\\nC 130 ; WX 317 ; N a93 ; B 35 0 283 692 ;\\r\\nC 131 ; WX 317 ; N a94 ; B 35 0 283 692 ;\\r\\nC 132 ; WX 276 ; N a91 ; B 35 0 242 692 ;\\r\\nC 133 ; WX 276 ; N a92 ; B 35 0 242 692 ;\\r\\nC 134 ; WX 509 ; N a205 ; B 35 0 475 692 ;\\r\\nC 135 ; WX 509 ; N a85 ; B 35 0 475 692 ;\\r\\nC 136 ; WX 410 ; N a206 ; B 35 0 375 692 ;\\r\\nC 137 ; WX 410 ; N a86 ; B 35 0 375 692 ;\\r\\nC 138 ; WX 234 ; N a87 ; B 35 -14 199 705 ;\\r\\nC 139 ; WX 234 ; N a88 ; B 35 -14 199 705 ;\\r\\nC 140 ; WX 334 ; N a95 ; B 35 0 299 692 ;\\r\\nC 141 ; WX 334 ; N a96 ; B 35 0 299 692 ;\\r\\nC 161 ; WX 732 ; N a101 ; B 35 -143 697 806 ;\\r\\nC 162 ; WX 544 ; N a102 ; B 56 -14 488 706 ;\\r\\nC 163 ; WX 544 ; N a103 ; B 34 -14 508 705 ;\\r\\nC 164 ; WX 910 ; N a104 ; B 35 40 875 651 ;\\r\\nC 165 ; WX 667 ; N a106 ; B 35 -14 633 705 ;\\r\\nC 166 ; WX 760 ; N a107 ; B 35 -14 726 705 ;\\r\\nC 167 ; WX 760 ; N a108 ; B 0 121 758 569 ;\\r\\nC 168 ; WX 776 ; N a112 ; B 35 0 741 705 ;\\r\\nC 169 ; WX 595 ; N a111 ; B 34 -14 560 705 ;\\r\\nC 170 ; WX 694 ; N a110 ; B 35 -14 659 705 ;\\r\\nC 171 ; WX 626 ; N a109 ; B 34 0 591 705 ;\\r\\nC 172 ; WX 788 ; N a120 ; B 35 -14 754 705 ;\\r\\nC 173 ; WX 788 ; N a121 ; B 35 -14 754 705 ;\\r\\nC 174 ; WX 788 ; N a122 ; B 35 -14 754 705 ;\\r\\nC 175 ; WX 788 ; N a123 ; B 35 -14 754 705 ;\\r\\nC 176 ; WX 788 ; N a124 ; B 35 -14 754 705 ;\\r\\nC 177 ; WX 788 ; N a125 ; B 35 -14 754 705 ;\\r\\nC 178 ; WX 788 ; N a126 ; B 35 -14 754 705 ;\\r\\nC 179 ; WX 788 ; N a127 ; B 35 -14 754 705 ;\\r\\nC 180 ; WX 788 ; N a128 ; B 35 -14 754 705 ;\\r\\nC 181 ; WX 788 ; N a129 ; B 35 -14 754 705 ;\\r\\nC 182 ; WX 788 ; N a130 ; B 35 -14 754 705 ;\\r\\nC 183 ; WX 788 ; N a131 ; B 35 -14 754 705 ;\\r\\nC 184 ; WX 788 ; N a132 ; B 35 -14 754 705 ;\\r\\nC 185 ; WX 788 ; N a133 ; B 35 -14 754 705 ;\\r\\nC 186 ; WX 788 ; N a134 ; B 35 -14 754 705 ;\\r\\nC 187 ; WX 788 ; N a135 ; B 35 -14 754 705 ;\\r\\nC 188 ; WX 788 ; N a136 ; B 35 -14 754 705 ;\\r\\nC 189 ; WX 788 ; N a137 ; B 35 -14 754 705 ;\\r\\nC 190 ; WX 788 ; N a138 ; B 35 -14 754 705 ;\\r\\nC 191 ; WX 788 ; N a139 ; B 35 -14 754 705 ;\\r\\nC 192 ; WX 788 ; N a140 ; B 35 -14 754 705 ;\\r\\nC 193 ; WX 788 ; N a141 ; B 35 -14 754 705 ;\\r\\nC 194 ; WX 788 ; N a142 ; B 35 -14 754 705 ;\\r\\nC 195 ; WX 788 ; N a143 ; B 35 -14 754 705 ;\\r\\nC 196 ; WX 788 ; N a144 ; B 35 -14 754 705 ;\\r\\nC 197 ; WX 788 ; N a145 ; B 35 -14 754 705 ;\\r\\nC 198 ; WX 788 ; N a146 ; B 35 -14 754 705 ;\\r\\nC 199 ; WX 788 ; N a147 ; B 35 -14 754 705 ;\\r\\nC 200 ; WX 788 ; N a148 ; B 35 -14 754 705 ;\\r\\nC 201 ; WX 788 ; N a149 ; B 35 -14 754 705 ;\\r\\nC 202 ; WX 788 ; N a150 ; B 35 -14 754 705 ;\\r\\nC 203 ; WX 788 ; N a151 ; B 35 -14 754 705 ;\\r\\nC 204 ; WX 788 ; N a152 ; B 35 -14 754 705 ;\\r\\nC 205 ; WX 788 ; N a153 ; B 35 -14 754 705 ;\\r\\nC 206 ; WX 788 ; N a154 ; B 35 -14 754 705 ;\\r\\nC 207 ; WX 788 ; N a155 ; B 35 -14 754 705 ;\\r\\nC 208 ; WX 788 ; N a156 ; B 35 -14 754 705 ;\\r\\nC 209 ; WX 788 ; N a157 ; B 35 -14 754 705 ;\\r\\nC 210 ; WX 788 ; N a158 ; B 35 -14 754 705 ;\\r\\nC 211 ; WX 788 ; N a159 ; B 35 -14 754 705 ;\\r\\nC 212 ; WX 894 ; N a160 ; B 35 58 860 634 ;\\r\\nC 213 ; WX 838 ; N a161 ; B 35 152 803 540 ;\\r\\nC 214 ; WX 1016 ; N a163 ; B 34 152 981 540 ;\\r\\nC 215 ; WX 458 ; N a164 ; B 35 -127 422 820 ;\\r\\nC 216 ; WX 748 ; N a196 ; B 35 94 698 597 ;\\r\\nC 217 ; WX 924 ; N a165 ; B 35 140 890 552 ;\\r\\nC 218 ; WX 748 ; N a192 ; B 35 94 698 597 ;\\r\\nC 219 ; WX 918 ; N a166 ; B 35 166 884 526 ;\\r\\nC 220 ; WX 927 ; N a167 ; B 35 32 892 660 ;\\r\\nC 221 ; WX 928 ; N a168 ; B 35 129 891 562 ;\\r\\nC 222 ; WX 928 ; N a169 ; B 35 128 893 563 ;\\r\\nC 223 ; WX 834 ; N a170 ; B 35 155 799 537 ;\\r\\nC 224 ; WX 873 ; N a171 ; B 35 93 838 599 ;\\r\\nC 225 ; WX 828 ; N a172 ; B 35 104 791 588 ;\\r\\nC 226 ; WX 924 ; N a173 ; B 35 98 889 594 ;\\r\\nC 227 ; WX 924 ; N a162 ; B 35 98 889 594 ;\\r\\nC 228 ; WX 917 ; N a174 ; B 35 0 882 692 ;\\r\\nC 229 ; WX 930 ; N a175 ; B 35 84 896 608 ;\\r\\nC 230 ; WX 931 ; N a176 ; B 35 84 896 608 ;\\r\\nC 231 ; WX 463 ; N a177 ; B 35 -99 429 791 ;\\r\\nC 232 ; WX 883 ; N a178 ; B 35 71 848 623 ;\\r\\nC 233 ; WX 836 ; N a179 ; B 35 44 802 648 ;\\r\\nC 234 ; WX 836 ; N a193 ; B 35 44 802 648 ;\\r\\nC 235 ; WX 867 ; N a180 ; B 35 101 832 591 ;\\r\\nC 236 ; WX 867 ; N a199 ; B 35 101 832 591 ;\\r\\nC 237 ; WX 696 ; N a181 ; B 35 44 661 648 ;\\r\\nC 238 ; WX 696 ; N a200 ; B 35 44 661 648 ;\\r\\nC 239 ; WX 874 ; N a182 ; B 35 77 840 619 ;\\r\\nC 241 ; WX 874 ; N a201 ; B 35 73 840 615 ;\\r\\nC 242 ; WX 760 ; N a183 ; B 35 0 725 692 ;\\r\\nC 243 ; WX 946 ; N a184 ; B 35 160 911 533 ;\\r\\nC 244 ; WX 771 ; N a197 ; B 34 37 736 655 ;\\r\\nC 245 ; WX 865 ; N a185 ; B 35 207 830 481 ;\\r\\nC 246 ; WX 771 ; N a194 ; B 34 37 736 655 ;\\r\\nC 247 ; WX 888 ; N a198 ; B 34 -19 853 712 ;\\r\\nC 248 ; WX 967 ; N a186 ; B 35 124 932 568 ;\\r\\nC 249 ; WX 888 ; N a195 ; B 34 -19 853 712 ;\\r\\nC 250 ; WX 831 ; N a187 ; B 35 113 796 579 ;\\r\\nC 251 ; WX 873 ; N a188 ; B 36 118 838 578 ;\\r\\nC 252 ; WX 927 ; N a189 ; B 35 150 891 542 ;\\r\\nC 253 ; WX 970 ; N a190 ; B 35 76 931 616 ;\\r\\nC 254 ; WX 918 ; N a191 ; B 34 99 884 593 ;\\r\\nEndCharMetrics\\r\\nEndFontMetrics\\r\\n";

//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/pdfkit/js/data/ZapfDingbats.afm?`)},"?9157":()=>{eval(`/* (ignored) */

//# sourceURL=webpack://cytoscape-pdf-export/crypto_(ignored)?`)},"?e18d":()=>{eval(`/* (ignored) */

//# sourceURL=webpack://cytoscape-pdf-export/iconv-lite_(ignored)?`)},"?4f7e":()=>{eval(`/* (ignored) */

//# sourceURL=webpack://cytoscape-pdf-export/./util.inspect_(ignored)?`)},"?ed1b":()=>{eval(`/* (ignored) */

//# sourceURL=webpack://cytoscape-pdf-export/util_(ignored)?`)},"?d17e":()=>{eval(`/* (ignored) */

//# sourceURL=webpack://cytoscape-pdf-export/util_(ignored)?`)},"?fddb":()=>{eval(`/* (ignored) */

//# sourceURL=webpack://cytoscape-pdf-export/iconv-lite_(ignored)?`)},"./node_modules/available-typed-arrays/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var /** @type {ReturnType<import('.')>} */ possibleNames = [
	'BigInt64Array',
	'BigUint64Array',
	'Float32Array',
	'Float64Array',
	'Int16Array',
	'Int32Array',
	'Int8Array',
	'Uint16Array',
	'Uint32Array',
	'Uint8Array',
	'Uint8ClampedArray'
];

var g = typeof globalThis === 'undefined' ? __webpack_require__.g : globalThis;

/** @type {import('.')} */
module.exports = function availableTypedArrays() {
	var /** @type {ReturnType<typeof availableTypedArrays>} */ out = [];
	for (var i = 0; i < possibleNames.length; i++) {
		if (typeof g[possibleNames[i]] === 'function') {
			// @ts-expect-error
			out[out.length] = possibleNames[i];
		}
	}
	return out;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/available-typed-arrays/index.js?`)},"./node_modules/es-get-iterator/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");


/* eslint global-require: 0 */
// the code is structured this way so that bundlers can
// alias out \`has-symbols\` to \`() => true\` or \`() => false\` if your target
// environments' Symbol capabilities are known, and then use
// dead code elimination on the rest of this module.
//
// Similarly, \`isarray\` can be aliased to \`Array.isArray\` if
// available in all target environments.

var isArguments = __webpack_require__(/*! is-arguments */ "./node_modules/is-arguments/index.js");
var getStopIterationIterator = __webpack_require__(/*! stop-iteration-iterator */ "./node_modules/stop-iteration-iterator/index.js");

if (__webpack_require__(/*! has-symbols */ "./node_modules/has-symbols/index.js")() || __webpack_require__(/*! has-symbols/shams */ "./node_modules/has-symbols/shams.js")()) {
	var $iterator = Symbol.iterator;
	// Symbol is available natively or shammed
	// natively:
	//  - Chrome >= 38
	//  - Edge 12-14?, Edge >= 15 for sure
	//  - FF >= 36
	//  - Safari >= 9
	//  - node >= 0.12
	module.exports = function getIterator(iterable) {
		// alternatively, \`iterable[$iterator]?.()\`
		if (iterable != null && typeof iterable[$iterator] !== 'undefined') {
			return iterable[$iterator]();
		}
		if (isArguments(iterable)) {
			// arguments objects lack Symbol.iterator
			// - node 0.12
			return Array.prototype[$iterator].call(iterable);
		}
	};
} else {
	// Symbol is not available, native or shammed
	var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js");
	var isString = __webpack_require__(/*! is-string */ "./node_modules/is-string/index.js");
	var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");
	var $Map = GetIntrinsic('%Map%', true);
	var $Set = GetIntrinsic('%Set%', true);
	var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");
	var $arrayPush = callBound('Array.prototype.push');
	var $charCodeAt = callBound('String.prototype.charCodeAt');
	var $stringSlice = callBound('String.prototype.slice');

	var advanceStringIndex = function advanceStringIndex(S, index) {
		var length = S.length;
		if ((index + 1) >= length) {
			return index + 1;
		}

		var first = $charCodeAt(S, index);
		if (first < 0xD800 || first > 0xDBFF) {
			return index + 1;
		}

		var second = $charCodeAt(S, index + 1);
		if (second < 0xDC00 || second > 0xDFFF) {
			return index + 1;
		}

		return index + 2;
	};

	var getArrayIterator = function getArrayIterator(arraylike) {
		var i = 0;
		return {
			next: function next() {
				var done = i >= arraylike.length;
				var value;
				if (!done) {
					value = arraylike[i];
					i += 1;
				}
				return {
					done: done,
					value: value
				};
			}
		};
	};

	var getNonCollectionIterator = function getNonCollectionIterator(iterable, noPrimordialCollections) {
		if (isArray(iterable) || isArguments(iterable)) {
			return getArrayIterator(iterable);
		}
		if (isString(iterable)) {
			var i = 0;
			return {
				next: function next() {
					var nextIndex = advanceStringIndex(iterable, i);
					var value = $stringSlice(iterable, i, nextIndex);
					i = nextIndex;
					return {
						done: nextIndex > iterable.length,
						value: value
					};
				}
			};
		}

		// es6-shim and es-shims' es-map use a string "_es6-shim iterator_" property on different iterables, such as MapIterator.
		if (noPrimordialCollections && typeof iterable['_es6-shim iterator_'] !== 'undefined') {
			return iterable['_es6-shim iterator_']();
		}
	};

	if (!$Map && !$Set) {
		// the only language iterables are Array, String, arguments
		// - Safari <= 6.0
		// - Chrome < 38
		// - node < 0.12
		// - FF < 13
		// - IE < 11
		// - Edge < 11

		module.exports = function getIterator(iterable) {
			if (iterable != null) {
				return getNonCollectionIterator(iterable, true);
			}
		};
	} else {
		// either Map or Set are available, but Symbol is not
		// - es6-shim on an ES5 browser
		// - Safari 6.2 (maybe 6.1?)
		// - FF v[13, 36)
		// - IE 11
		// - Edge 11
		// - Safari v[6, 9)

		var isMap = __webpack_require__(/*! is-map */ "./node_modules/is-map/index.js");
		var isSet = __webpack_require__(/*! is-set */ "./node_modules/is-set/index.js");

		// Firefox >= 27, IE 11, Safari 6.2 - 9, Edge 11, es6-shim in older envs, all have forEach
		var $mapForEach = callBound('Map.prototype.forEach', true);
		var $setForEach = callBound('Set.prototype.forEach', true);
		if (typeof process === 'undefined' || !process.versions || !process.versions.node) { // "if is not node"

			// Firefox 17 - 26 has \`.iterator()\`, whose iterator \`.next()\` either
			// returns a value, or throws a StopIteration object. These browsers
			// do not have any other mechanism for iteration.
			var $mapIterator = callBound('Map.prototype.iterator', true);
			var $setIterator = callBound('Set.prototype.iterator', true);
		}
		// Firefox 27-35, and some older es6-shim versions, use a string "@@iterator" property
		// this returns a proper iterator object, so we should use it instead of forEach.
		// newer es6-shim versions use a string "_es6-shim iterator_" property.
		var $mapAtAtIterator = callBound('Map.prototype.@@iterator', true) || callBound('Map.prototype._es6-shim iterator_', true);
		var $setAtAtIterator = callBound('Set.prototype.@@iterator', true) || callBound('Set.prototype._es6-shim iterator_', true);

		var getCollectionIterator = function getCollectionIterator(iterable) {
			if (isMap(iterable)) {
				if ($mapIterator) {
					return getStopIterationIterator($mapIterator(iterable));
				}
				if ($mapAtAtIterator) {
					return $mapAtAtIterator(iterable);
				}
				if ($mapForEach) {
					var entries = [];
					$mapForEach(iterable, function (v, k) {
						$arrayPush(entries, [k, v]);
					});
					return getArrayIterator(entries);
				}
			}
			if (isSet(iterable)) {
				if ($setIterator) {
					return getStopIterationIterator($setIterator(iterable));
				}
				if ($setAtAtIterator) {
					return $setAtAtIterator(iterable);
				}
				if ($setForEach) {
					var values = [];
					$setForEach(iterable, function (v) {
						$arrayPush(values, v);
					});
					return getArrayIterator(values);
				}
			}
		};

		module.exports = function getIterator(iterable) {
			return getCollectionIterator(iterable) || getNonCollectionIterator(iterable);
		};
	}
}


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/es-get-iterator/index.js?`)},"./node_modules/fontkit/iconv-lite.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{eval(`// iconv-lite is an optional dependency.
// This is a hack to make that work with Node native ESM by creating a CJS module
// that can be imported from ESM. This also works in bundlers which support try..catch
// blocks to mark optional dependencies.
try {
  module.exports = __webpack_require__(/*! iconv-lite */ "?e18d");
} catch (err) { }


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/fontkit/iconv-lite.cjs?`)},"./node_modules/which-collection/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval(`

var isMap = __webpack_require__(/*! is-map */ "./node_modules/is-map/index.js");
var isSet = __webpack_require__(/*! is-set */ "./node_modules/is-set/index.js");
var isWeakMap = __webpack_require__(/*! is-weakmap */ "./node_modules/is-weakmap/index.js");
var isWeakSet = __webpack_require__(/*! is-weakset */ "./node_modules/is-weakset/index.js");

module.exports = function whichCollection(value) {
	if (value && typeof value === 'object') {
		if (isMap(value)) {
			return 'Map';
		}
		if (isSet(value)) {
			return 'Set';
		}
		if (isWeakMap(value)) {
			return 'WeakMap';
		}
		if (isWeakSet(value)) {
			return 'WeakSet';
		}
	}
	return false;
};


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/which-collection/index.js?`)},"./node_modules/fontkit/dist/module.mjs":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   create: () => (/* binding */ $8857867ee3ddfad5$export$185802fd694ee1f5),
/* harmony export */   "default": () => (/* binding */ $cf838c15c8b009ba$export$2e2bcd8739ae039),
/* harmony export */   defaultLanguage: () => (/* binding */ $8857867ee3ddfad5$export$42940898df819940),
/* harmony export */   logErrors: () => (/* binding */ $8857867ee3ddfad5$export$bd5c5d8b8dcafd78),
/* harmony export */   open: () => (/* binding */ $8857867ee3ddfad5$export$3ce6949f20cea765),
/* harmony export */   openSync: () => (/* binding */ $8857867ee3ddfad5$export$fa5499edb1ab414a),
/* harmony export */   registerFormat: () => (/* binding */ $8857867ee3ddfad5$export$36b2f24e97d43be),
/* harmony export */   setDefaultLanguage: () => (/* binding */ $8857867ee3ddfad5$export$5157e7780d44cc36)
/* harmony export */ });
/* harmony import */ var restructure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! restructure */ "./node_modules/restructure/index.js");
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ "./node_modules/pdfkit/js/virtual-fs.js");
/* harmony import */ var _swc_helpers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @swc/helpers */ "./node_modules/fontkit/node_modules/@swc/helpers/src/_apply_decorated_descriptor.js");
/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js");
/* harmony import */ var restructure_src_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! restructure/src/utils.js */ "./node_modules/restructure/src/utils.js");
/* harmony import */ var deep_equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! deep-equal */ "./node_modules/deep-equal/index.js");
/* harmony import */ var _iconv_lite_cjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../iconv-lite.cjs */ "./node_modules/fontkit/iconv-lite.cjs");
/* harmony import */ var unicode_properties__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! unicode-properties */ "./node_modules/unicode-properties/dist/module.mjs");
/* harmony import */ var unicode_trie__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! unicode-trie */ "./node_modules/unicode-trie/index.js");
/* harmony import */ var dfa__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! dfa */ "./node_modules/dfa/index.js");
/* harmony import */ var clone__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! clone */ "./node_modules/clone/clone.js");
/* harmony import */ var tiny_inflate__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tiny-inflate */ "./node_modules/tiny-inflate/index.js");
/* harmony import */ var brotli_decompress_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! brotli/decompress.js */ "./node_modules/brotli/decompress.js");














function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
var $8857867ee3ddfad5$exports = {};

$parcel$export($8857867ee3ddfad5$exports, "logErrors", () => $8857867ee3ddfad5$export$bd5c5d8b8dcafd78);
$parcel$export($8857867ee3ddfad5$exports, "registerFormat", () => $8857867ee3ddfad5$export$36b2f24e97d43be);
$parcel$export($8857867ee3ddfad5$exports, "openSync", () => $8857867ee3ddfad5$export$fa5499edb1ab414a);
$parcel$export($8857867ee3ddfad5$exports, "create", () => $8857867ee3ddfad5$export$185802fd694ee1f5);
$parcel$export($8857867ee3ddfad5$exports, "open", () => $8857867ee3ddfad5$export$3ce6949f20cea765);
$parcel$export($8857867ee3ddfad5$exports, "defaultLanguage", () => $8857867ee3ddfad5$export$42940898df819940);
$parcel$export($8857867ee3ddfad5$exports, "setDefaultLanguage", () => $8857867ee3ddfad5$export$5157e7780d44cc36);


let $8857867ee3ddfad5$export$bd5c5d8b8dcafd78 = false;
let $8857867ee3ddfad5$var$formats = [];
function $8857867ee3ddfad5$export$36b2f24e97d43be(format) {
    $8857867ee3ddfad5$var$formats.push(format);
}
function $8857867ee3ddfad5$export$fa5499edb1ab414a(filename, postscriptName) {
    let buffer = (0,fs__WEBPACK_IMPORTED_MODULE_1__.readFileSync)(filename);
    return $8857867ee3ddfad5$export$185802fd694ee1f5(buffer, postscriptName);
}
function $8857867ee3ddfad5$export$3ce6949f20cea765(filename, postscriptName, callback) {
    if (typeof postscriptName === 'function') {
        callback = postscriptName;
        postscriptName = null;
    }
    (0,fs__WEBPACK_IMPORTED_MODULE_1__.readFile)(filename, function(err, buffer) {
        if (err) return callback(err);
        try {
            var font = $8857867ee3ddfad5$export$185802fd694ee1f5(buffer, postscriptName);
        } catch (e) {
            return callback(e);
        }
        return callback(null, font);
    });
    return;
}
function $8857867ee3ddfad5$export$185802fd694ee1f5(buffer, postscriptName) {
    for(let i = 0; i < $8857867ee3ddfad5$var$formats.length; i++){
        let format = $8857867ee3ddfad5$var$formats[i];
        if (format.probe(buffer)) {
            let font = new format(new restructure__WEBPACK_IMPORTED_MODULE_0__.DecodeStream(buffer));
            if (postscriptName) return font.getFont(postscriptName);
            return font;
        }
    }
    throw new Error('Unknown font format');
}
let $8857867ee3ddfad5$export$42940898df819940 = 'en';
function $8857867ee3ddfad5$export$5157e7780d44cc36(lang = 'en') {
    $8857867ee3ddfad5$export$42940898df819940 = lang;
}




function $df9bc573962369ff$export$69a3209f1a06c04d(target, key1, descriptor) {
    if (descriptor.get) {
        let get = descriptor.get;
        descriptor.get = function() {
            let value = get.call(this);
            Object.defineProperty(this, key1, {
                value: value
            });
            return value;
        };
    } else if (typeof descriptor.value === 'function') {
        let fn = descriptor.value;
        return {
            get () {
                let $df9bc573962369ff$export$69a3209f1a06c04d = new Map;
                function memoized(...args) {
                    let key = args.length > 0 ? args[0] : 'value';
                    if ($df9bc573962369ff$export$69a3209f1a06c04d.has(key)) return $df9bc573962369ff$export$69a3209f1a06c04d.get(key);
                    let result = fn.apply(this, args);
                    $df9bc573962369ff$export$69a3209f1a06c04d.set(key, result);
                    return result;
                }
                Object.defineProperty(this, key1, {
                    value: memoized
                });
                return memoized;
            }
        };
    }
}





let $9aad45a64cf8e4b5$var$SubHeader = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    firstCode: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    entryCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    idDelta: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    idRangeOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});
let $9aad45a64cf8e4b5$var$CmapGroup = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    startCharCode: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    endCharCode: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    glyphID: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32
});
let $9aad45a64cf8e4b5$var$UnicodeValueRange = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    startUnicodeValue: restructure__WEBPACK_IMPORTED_MODULE_0__.uint24,
    additionalCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8
});
let $9aad45a64cf8e4b5$var$UVSMapping = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    unicodeValue: restructure__WEBPACK_IMPORTED_MODULE_0__.uint24,
    glyphID: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});
let $9aad45a64cf8e4b5$var$DefaultUVS = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($9aad45a64cf8e4b5$var$UnicodeValueRange, restructure__WEBPACK_IMPORTED_MODULE_0__.uint32);
let $9aad45a64cf8e4b5$var$NonDefaultUVS = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($9aad45a64cf8e4b5$var$UVSMapping, restructure__WEBPACK_IMPORTED_MODULE_0__.uint32);
let $9aad45a64cf8e4b5$var$VarSelectorRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    varSelector: restructure__WEBPACK_IMPORTED_MODULE_0__.uint24,
    defaultUVS: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $9aad45a64cf8e4b5$var$DefaultUVS, {
        type: 'parent'
    }),
    nonDefaultUVS: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $9aad45a64cf8e4b5$var$NonDefaultUVS, {
        type: 'parent'
    })
});
let $9aad45a64cf8e4b5$var$CmapSubtable = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    0: {
        length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        language: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        codeMap: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, 256)
    },
    2: {
        length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        language: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        subHeaderKeys: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 256),
        subHeaderCount: (t)=>Math.max.apply(Math, t.subHeaderKeys)
        ,
        subHeaders: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray($9aad45a64cf8e4b5$var$SubHeader, 'subHeaderCount'),
        glyphIndexArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'subHeaderCount')
    },
    4: {
        length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        language: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        segCountX2: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        segCount: (t)=>t.segCountX2 >> 1
        ,
        searchRange: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        entrySelector: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        rangeShift: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        endCode: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'segCount'),
        reservedPad: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
        startCode: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'segCount'),
        idDelta: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.int16, 'segCount'),
        idRangeOffset: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'segCount'),
        glyphIndexArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, (t)=>(t.length - t._currentOffset) / 2
        )
    },
    6: {
        length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        language: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        firstCode: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        entryCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        glyphIndices: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'entryCount')
    },
    8: {
        reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
        length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        language: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        is32: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, 8192),
        nGroups: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        groups: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray($9aad45a64cf8e4b5$var$CmapGroup, 'nGroups')
    },
    10: {
        reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
        length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        language: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        firstCode: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        entryCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        glyphIndices: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'numChars')
    },
    12: {
        reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
        length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        language: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        nGroups: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        groups: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray($9aad45a64cf8e4b5$var$CmapGroup, 'nGroups')
    },
    13: {
        reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
        length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        language: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        nGroups: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        groups: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray($9aad45a64cf8e4b5$var$CmapGroup, 'nGroups')
    },
    14: {
        length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        numRecords: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        varSelectors: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray($9aad45a64cf8e4b5$var$VarSelectorRecord, 'numRecords')
    }
});
let $9aad45a64cf8e4b5$var$CmapEntry = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    platformID: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    encodingID: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    table: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $9aad45a64cf8e4b5$var$CmapSubtable, {
        type: 'parent',
        lazy: true
    })
});
var // character to glyph mapping
$9aad45a64cf8e4b5$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    numSubtables: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    tables: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($9aad45a64cf8e4b5$var$CmapEntry, 'numSubtables')
});



var // font header
$b41847595480ce3a$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.int32,
    revision: restructure__WEBPACK_IMPORTED_MODULE_0__.int32,
    checkSumAdjustment: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    magicNumber: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    flags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    unitsPerEm: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    created: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.int32, 2),
    modified: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.int32, 2),
    xMin: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    yMin: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    xMax: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    yMax: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    macStyle: new restructure__WEBPACK_IMPORTED_MODULE_0__.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, [
        'bold',
        'italic',
        'underline',
        'outline',
        'shadow',
        'condensed',
        'extended'
    ]),
    lowestRecPPEM: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    fontDirectionHint: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    indexToLocFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    glyphDataFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.int16 // 0 for current format
});



var // horizontal header
$5fda302e2516d0c7$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.int32,
    ascent: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    descent: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    lineGap: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    advanceWidthMax: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    minLeftSideBearing: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    minRightSideBearing: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    xMaxExtent: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    caretSlopeRise: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    caretSlopeRun: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    caretOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.int16, 4),
    metricDataFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    numberOfMetrics: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16 // Number of advance widths in 'hmtx' table
});



let $28788c978325a3e1$var$HmtxEntry = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    advance: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    bearing: restructure__WEBPACK_IMPORTED_MODULE_0__.int16
});
var $28788c978325a3e1$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    metrics: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray($28788c978325a3e1$var$HmtxEntry, (t)=>t.parent.hhea.numberOfMetrics
    ),
    bearings: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.int16, (t)=>t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics
    )
});



var // maxiumum profile
$9e68d972c1fae2a9$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.int32,
    numGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxPoints: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxContours: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxComponentPoints: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxComponentContours: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxZones: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxTwilightPoints: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxStorage: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxFunctionDefs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxInstructionDefs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxStackElements: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxSizeOfInstructions: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxComponentElements: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    maxComponentDepth: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16 // Maximum levels of recursion; 1 for simple components
});



function $111d7d948974b54a$export$badc544e0651b6b1(platformID, encodingID, languageID = 0) {
    if (platformID === 1 && $111d7d948974b54a$export$479e671907f486d1[languageID]) return $111d7d948974b54a$export$479e671907f486d1[languageID];
    return $111d7d948974b54a$export$6fef87b7618bdf0b[platformID][encodingID];
}
const $111d7d948974b54a$export$6fef87b7618bdf0b = [
    // unicode
    [
        'utf16be',
        'utf16be',
        'utf16be',
        'utf16be',
        'utf16be',
        'utf16be'
    ],
    // macintosh
    // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/
    // 0	Roman                 17	Malayalam
    // 1	Japanese	            18	Sinhalese
    // 2	Traditional Chinese	  19	Burmese
    // 3	Korean	              20	Khmer
    // 4	Arabic	              21	Thai
    // 5	Hebrew	              22	Laotian
    // 6	Greek	                23	Georgian
    // 7	Russian	              24	Armenian
    // 8	RSymbol	              25	Simplified Chinese
    // 9	Devanagari	          26	Tibetan
    // 10	Gurmukhi	            27	Mongolian
    // 11	Gujarati	            28	Geez
    // 12	Oriya	                29	Slavic
    // 13	Bengali	              30	Vietnamese
    // 14	Tamil	                31	Sindhi
    // 15	Telugu	              32	(Uninterpreted)
    // 16	Kannada
    [
        'macroman',
        'shift-jis',
        'big5',
        'euc-kr',
        'iso-8859-6',
        'iso-8859-8',
        'macgreek',
        'maccyrillic',
        'symbol',
        'Devanagari',
        'Gurmukhi',
        'Gujarati',
        'Oriya',
        'Bengali',
        'Tamil',
        'Telugu',
        'Kannada',
        'Malayalam',
        'Sinhalese',
        'Burmese',
        'Khmer',
        'macthai',
        'Laotian',
        'Georgian',
        'Armenian',
        'gb-2312-80',
        'Tibetan',
        'Mongolian',
        'Geez',
        'maccenteuro',
        'Vietnamese',
        'Sindhi'
    ],
    // ISO (deprecated)
    [
        'ascii'
    ],
    // windows
    // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx
    [
        'symbol',
        'utf16be',
        'shift-jis',
        'gb18030',
        'big5',
        'wansung',
        'johab',
        null,
        null,
        null,
        'utf16be'
    ]
];
const $111d7d948974b54a$export$479e671907f486d1 = {
    15: 'maciceland',
    17: 'macturkish',
    18: 'maccroatian',
    24: 'maccenteuro',
    25: 'maccenteuro',
    26: 'maccenteuro',
    27: 'maccenteuro',
    28: 'maccenteuro',
    30: 'maciceland',
    37: 'macromania',
    38: 'maccenteuro',
    39: 'maccenteuro',
    40: 'maccenteuro',
    143: 'macinuit',
    146: 'macgaelic' // Unsupported by iconv-lite
};
const $111d7d948974b54a$export$2092376fd002e13 = [
    // unicode
    [],
    {
        0: 'en',
        30: 'fo',
        60: 'ks',
        90: 'rw',
        1: 'fr',
        31: 'fa',
        61: 'ku',
        91: 'rn',
        2: 'de',
        32: 'ru',
        62: 'sd',
        92: 'ny',
        3: 'it',
        33: 'zh',
        63: 'bo',
        93: 'mg',
        4: 'nl',
        34: 'nl-BE',
        64: 'ne',
        94: 'eo',
        5: 'sv',
        35: 'ga',
        65: 'sa',
        128: 'cy',
        6: 'es',
        36: 'sq',
        66: 'mr',
        129: 'eu',
        7: 'da',
        37: 'ro',
        67: 'bn',
        130: 'ca',
        8: 'pt',
        38: 'cz',
        68: 'as',
        131: 'la',
        9: 'no',
        39: 'sk',
        69: 'gu',
        132: 'qu',
        10: 'he',
        40: 'si',
        70: 'pa',
        133: 'gn',
        11: 'ja',
        41: 'yi',
        71: 'or',
        134: 'ay',
        12: 'ar',
        42: 'sr',
        72: 'ml',
        135: 'tt',
        13: 'fi',
        43: 'mk',
        73: 'kn',
        136: 'ug',
        14: 'el',
        44: 'bg',
        74: 'ta',
        137: 'dz',
        15: 'is',
        45: 'uk',
        75: 'te',
        138: 'jv',
        16: 'mt',
        46: 'be',
        76: 'si',
        139: 'su',
        17: 'tr',
        47: 'uz',
        77: 'my',
        140: 'gl',
        18: 'hr',
        48: 'kk',
        78: 'km',
        141: 'af',
        19: 'zh-Hant',
        49: 'az-Cyrl',
        79: 'lo',
        142: 'br',
        20: 'ur',
        50: 'az-Arab',
        80: 'vi',
        143: 'iu',
        21: 'hi',
        51: 'hy',
        81: 'id',
        144: 'gd',
        22: 'th',
        52: 'ka',
        82: 'tl',
        145: 'gv',
        23: 'ko',
        53: 'mo',
        83: 'ms',
        146: 'ga',
        24: 'lt',
        54: 'ky',
        84: 'ms-Arab',
        147: 'to',
        25: 'pl',
        55: 'tg',
        85: 'am',
        148: 'el-polyton',
        26: 'hu',
        56: 'tk',
        86: 'ti',
        149: 'kl',
        27: 'es',
        57: 'mn-CN',
        87: 'om',
        150: 'az',
        28: 'lv',
        58: 'mn',
        88: 'so',
        151: 'nn',
        29: 'se',
        59: 'ps',
        89: 'sw'
    },
    // ISO (deprecated)
    [],
    {
        0x0436: 'af',
        0x4009: 'en-IN',
        0x0487: 'rw',
        0x0432: 'tn',
        0x041C: 'sq',
        0x1809: 'en-IE',
        0x0441: 'sw',
        0x045B: 'si',
        0x0484: 'gsw',
        0x2009: 'en-JM',
        0x0457: 'kok',
        0x041B: 'sk',
        0x045E: 'am',
        0x4409: 'en-MY',
        0x0412: 'ko',
        0x0424: 'sl',
        0x1401: 'ar-DZ',
        0x1409: 'en-NZ',
        0x0440: 'ky',
        0x2C0A: 'es-AR',
        0x3C01: 'ar-BH',
        0x3409: 'en-PH',
        0x0454: 'lo',
        0x400A: 'es-BO',
        0x0C01: 'ar',
        0x4809: 'en-SG',
        0x0426: 'lv',
        0x340A: 'es-CL',
        0x0801: 'ar-IQ',
        0x1C09: 'en-ZA',
        0x0427: 'lt',
        0x240A: 'es-CO',
        0x2C01: 'ar-JO',
        0x2C09: 'en-TT',
        0x082E: 'dsb',
        0x140A: 'es-CR',
        0x3401: 'ar-KW',
        0x0809: 'en-GB',
        0x046E: 'lb',
        0x1C0A: 'es-DO',
        0x3001: 'ar-LB',
        0x0409: 'en',
        0x042F: 'mk',
        0x300A: 'es-EC',
        0x1001: 'ar-LY',
        0x3009: 'en-ZW',
        0x083E: 'ms-BN',
        0x440A: 'es-SV',
        0x1801: 'ary',
        0x0425: 'et',
        0x043E: 'ms',
        0x100A: 'es-GT',
        0x2001: 'ar-OM',
        0x0438: 'fo',
        0x044C: 'ml',
        0x480A: 'es-HN',
        0x4001: 'ar-QA',
        0x0464: 'fil',
        0x043A: 'mt',
        0x080A: 'es-MX',
        0x0401: 'ar-SA',
        0x040B: 'fi',
        0x0481: 'mi',
        0x4C0A: 'es-NI',
        0x2801: 'ar-SY',
        0x080C: 'fr-BE',
        0x047A: 'arn',
        0x180A: 'es-PA',
        0x1C01: 'aeb',
        0x0C0C: 'fr-CA',
        0x044E: 'mr',
        0x3C0A: 'es-PY',
        0x3801: 'ar-AE',
        0x040C: 'fr',
        0x047C: 'moh',
        0x280A: 'es-PE',
        0x2401: 'ar-YE',
        0x140C: 'fr-LU',
        0x0450: 'mn',
        0x500A: 'es-PR',
        0x042B: 'hy',
        0x180C: 'fr-MC',
        0x0850: 'mn-CN',
        0x0C0A: 'es',
        0x044D: 'as',
        0x100C: 'fr-CH',
        0x0461: 'ne',
        0x040A: 'es',
        0x082C: 'az-Cyrl',
        0x0462: 'fy',
        0x0414: 'nb',
        0x540A: 'es-US',
        0x042C: 'az',
        0x0456: 'gl',
        0x0814: 'nn',
        0x380A: 'es-UY',
        0x046D: 'ba',
        0x0437: 'ka',
        0x0482: 'oc',
        0x200A: 'es-VE',
        0x042D: 'eu',
        0x0C07: 'de-AT',
        0x0448: 'or',
        0x081D: 'sv-FI',
        0x0423: 'be',
        0x0407: 'de',
        0x0463: 'ps',
        0x041D: 'sv',
        0x0845: 'bn',
        0x1407: 'de-LI',
        0x0415: 'pl',
        0x045A: 'syr',
        0x0445: 'bn-IN',
        0x1007: 'de-LU',
        0x0416: 'pt',
        0x0428: 'tg',
        0x201A: 'bs-Cyrl',
        0x0807: 'de-CH',
        0x0816: 'pt-PT',
        0x085F: 'tzm',
        0x141A: 'bs',
        0x0408: 'el',
        0x0446: 'pa',
        0x0449: 'ta',
        0x047E: 'br',
        0x046F: 'kl',
        0x046B: 'qu-BO',
        0x0444: 'tt',
        0x0402: 'bg',
        0x0447: 'gu',
        0x086B: 'qu-EC',
        0x044A: 'te',
        0x0403: 'ca',
        0x0468: 'ha',
        0x0C6B: 'qu',
        0x041E: 'th',
        0x0C04: 'zh-HK',
        0x040D: 'he',
        0x0418: 'ro',
        0x0451: 'bo',
        0x1404: 'zh-MO',
        0x0439: 'hi',
        0x0417: 'rm',
        0x041F: 'tr',
        0x0804: 'zh',
        0x040E: 'hu',
        0x0419: 'ru',
        0x0442: 'tk',
        0x1004: 'zh-SG',
        0x040F: 'is',
        0x243B: 'smn',
        0x0480: 'ug',
        0x0404: 'zh-TW',
        0x0470: 'ig',
        0x103B: 'smj-NO',
        0x0422: 'uk',
        0x0483: 'co',
        0x0421: 'id',
        0x143B: 'smj',
        0x042E: 'hsb',
        0x041A: 'hr',
        0x045D: 'iu',
        0x0C3B: 'se-FI',
        0x0420: 'ur',
        0x101A: 'hr-BA',
        0x085D: 'iu-Latn',
        0x043B: 'se',
        0x0843: 'uz-Cyrl',
        0x0405: 'cs',
        0x083C: 'ga',
        0x083B: 'se-SE',
        0x0443: 'uz',
        0x0406: 'da',
        0x0434: 'xh',
        0x203B: 'sms',
        0x042A: 'vi',
        0x048C: 'prs',
        0x0435: 'zu',
        0x183B: 'sma-NO',
        0x0452: 'cy',
        0x0465: 'dv',
        0x0410: 'it',
        0x1C3B: 'sms',
        0x0488: 'wo',
        0x0813: 'nl-BE',
        0x0810: 'it-CH',
        0x044F: 'sa',
        0x0485: 'sah',
        0x0413: 'nl',
        0x0411: 'ja',
        0x1C1A: 'sr-Cyrl-BA',
        0x0478: 'ii',
        0x0C09: 'en-AU',
        0x044B: 'kn',
        0x0C1A: 'sr',
        0x046A: 'yo',
        0x2809: 'en-BZ',
        0x043F: 'kk',
        0x181A: 'sr-Latn-BA',
        0x1009: 'en-CA',
        0x0453: 'km',
        0x081A: 'sr-Latn',
        0x2409: 'en-029',
        0x0486: 'quc',
        0x046C: 'nso'
    }
];



var $866b9b7dd32d7242$require$Buffer = buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer;
let $866b9b7dd32d7242$var$NameRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    platformID: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    encodingID: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    languageID: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    nameID: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    string: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, new restructure__WEBPACK_IMPORTED_MODULE_0__.String('length', (t)=>$111d7d948974b54a$export$badc544e0651b6b1(t.platformID, t.encodingID, t.languageID)
    ), {
        type: 'parent',
        relativeTo: (ctx)=>ctx.parent.stringOffset
        ,
        allowNull: false
    })
});
let $866b9b7dd32d7242$var$LangTagRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, new restructure__WEBPACK_IMPORTED_MODULE_0__.String('length', 'utf16be'), {
        type: 'parent',
        relativeTo: (ctx)=>ctx.stringOffset
    })
});
var $866b9b7dd32d7242$var$NameTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    0: {
        count: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        stringOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        records: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($866b9b7dd32d7242$var$NameRecord, 'count')
    },
    1: {
        count: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        stringOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        records: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($866b9b7dd32d7242$var$NameRecord, 'count'),
        langTagCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        langTags: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($866b9b7dd32d7242$var$LangTagRecord, 'langTagCount')
    }
});
var $866b9b7dd32d7242$export$2e2bcd8739ae039 = $866b9b7dd32d7242$var$NameTable;
const $866b9b7dd32d7242$var$NAMES = [
    'copyright',
    'fontFamily',
    'fontSubfamily',
    'uniqueSubfamily',
    'fullName',
    'version',
    'postscriptName',
    'trademark',
    'manufacturer',
    'designer',
    'description',
    'vendorURL',
    'designerURL',
    'license',
    'licenseURL',
    null,
    'preferredFamily',
    'preferredSubfamily',
    'compatibleFull',
    'sampleText',
    'postscriptCIDFontName',
    'wwsFamilyName',
    'wwsSubfamilyName'
];
$866b9b7dd32d7242$var$NameTable.process = function(stream) {
    var records = {};
    for (let record of this.records){
        // find out what language this is for
        let language = $111d7d948974b54a$export$2092376fd002e13[record.platformID][record.languageID];
        if (language == null && this.langTags != null && record.languageID >= 0x8000) language = this.langTags[record.languageID - 0x8000].tag;
        if (language == null) language = record.platformID + '-' + record.languageID;
        // if the nameID is >= 256, it is a font feature record (AAT)
        let key = record.nameID >= 256 ? 'fontFeatures' : $866b9b7dd32d7242$var$NAMES[record.nameID] || record.nameID;
        if (records[key] == null) records[key] = {};
        let obj = records[key];
        if (record.nameID >= 256) obj = obj[record.nameID] || (obj[record.nameID] = {});
        if (typeof record.string === 'string' || typeof obj[language] !== 'string') obj[language] = record.string;
    }
    this.records = records;
};
$866b9b7dd32d7242$var$NameTable.preEncode = function() {
    if (Array.isArray(this.records)) return;
    this.version = 0;
    let records = [];
    for(let key in this.records){
        let val = this.records[key];
        if (key === 'fontFeatures') continue;
        records.push({
            platformID: 3,
            encodingID: 1,
            languageID: 0x409,
            nameID: $866b9b7dd32d7242$var$NAMES.indexOf(key),
            length: $866b9b7dd32d7242$require$Buffer.byteLength(val.en, 'utf16le'),
            string: val.en
        });
        if (key === 'postscriptName') records.push({
            platformID: 1,
            encodingID: 0,
            languageID: 0,
            nameID: $866b9b7dd32d7242$var$NAMES.indexOf(key),
            length: val.en.length,
            string: val.en
        });
    }
    this.records = records;
    this.count = records.length;
    this.stringOffset = $866b9b7dd32d7242$var$NameTable.size(this, null, false);
};



var $268023eac606db57$var$OS2 = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    header: {
        xAvgCharWidth: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        usWeightClass: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        usWidthClass: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        fsType: new restructure__WEBPACK_IMPORTED_MODULE_0__.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, [
            null,
            'noEmbedding',
            'viewOnly',
            'editable',
            null,
            null,
            null,
            null,
            'noSubsetting',
            'bitmapOnly'
        ]),
        ySubscriptXSize: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        ySubscriptYSize: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        ySubscriptXOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        ySubscriptYOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        ySuperscriptXSize: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        ySuperscriptYSize: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        ySuperscriptXOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        ySuperscriptYOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        yStrikeoutSize: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        yStrikeoutPosition: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        sFamilyClass: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        panose: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, 10),
        ulCharRange: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, 4),
        vendorID: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
        fsSelection: new restructure__WEBPACK_IMPORTED_MODULE_0__.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, [
            'italic',
            'underscore',
            'negative',
            'outlined',
            'strikeout',
            'bold',
            'regular',
            'useTypoMetrics',
            'wws',
            'oblique'
        ]),
        usFirstCharIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        usLastCharIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16 // The maximum Unicode index in this font
    },
    // The Apple version of this table ends here, but the Microsoft one continues on...
    0: {},
    1: {
        typoAscender: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        typoDescender: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        typoLineGap: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        winAscent: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        winDescent: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        codePageRange: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, 2)
    },
    2: {
        // these should be common with version 1 somehow
        typoAscender: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        typoDescender: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        typoLineGap: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        winAscent: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        winDescent: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        codePageRange: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, 2),
        xHeight: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        capHeight: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        defaultChar: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        breakChar: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        maxContent: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
    },
    5: {
        typoAscender: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        typoDescender: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        typoLineGap: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        winAscent: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        winDescent: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        codePageRange: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, 2),
        xHeight: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        capHeight: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        defaultChar: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        breakChar: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        maxContent: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        usLowerOpticalPointSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        usUpperOpticalPointSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
    }
});
let $268023eac606db57$var$versions = $268023eac606db57$var$OS2.versions;
$268023eac606db57$var$versions[3] = $268023eac606db57$var$versions[4] = $268023eac606db57$var$versions[2];
var $268023eac606db57$export$2e2bcd8739ae039 = $268023eac606db57$var$OS2;



var // PostScript information
$5287343c85bea17e$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32, {
    header: {
        italicAngle: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
        underlinePosition: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        underlineThickness: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        isFixedPitch: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        minMemType42: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        maxMemType42: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        minMemType1: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        maxMemType1: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font
    },
    1: {},
    2: {
        numberOfGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        glyphNameIndex: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'numberOfGlyphs'),
        names: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.String(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8))
    },
    2.5: {
        numberOfGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        offsets: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, 'numberOfGlyphs')
    },
    3: {},
    4: {
        map: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, (t)=>t.parent.maxp.numGlyphs
        )
    }
});



var // An array of predefined values accessible by instructions
$5768e6ef8b1a512a$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    controlValues: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.int16)
});



var // A list of instructions that are executed once when a font is first used.
// These instructions are known as the font program. The main use of this table
// is for the definition of functions that are used in many different glyph programs.
$6f2fae1f8d2b4b41$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    instructions: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8)
});



let $cae48a5e791773ec$var$loca = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct('head.indexToLocFormat', {
    0: {
        offsets: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16)
    },
    1: {
        offsets: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32)
    }
});
$cae48a5e791773ec$var$loca.process = function() {
    if (this.version === 0) for(let i = 0; i < this.offsets.length; i++)this.offsets[i] <<= 1;
};
$cae48a5e791773ec$var$loca.preEncode = function() {
    if (this.version === 0) for(let i = 0; i < this.offsets.length; i++)this.offsets[i] >>>= 1;
};
var $cae48a5e791773ec$export$2e2bcd8739ae039 = $cae48a5e791773ec$var$loca;



var // Set of instructions executed whenever the point size or font transformation change
$7b12cfca10f7f884$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    controlValueProgram: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8)
});



var // only used for encoding
$06e9f2dae5795013$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Buffer);




class $6333f51d822e64a1$export$2e2bcd8739ae039 {
    constructor(type){
        this.type = type;
    }
    getCFFVersion(ctx) {
        while(ctx && !ctx.hdrSize)ctx = ctx.parent;
        return ctx ? ctx.version : -1;
    }
    decode(stream, parent) {
        let version = this.getCFFVersion(parent);
        let count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();
        if (count === 0) return [];
        let offSize = stream.readUInt8();
        let offsetType;
        if (offSize === 1) offsetType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint8;
        else if (offSize === 2) offsetType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint16;
        else if (offSize === 3) offsetType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint24;
        else if (offSize === 4) offsetType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint32;
        else throw new Error(\`Bad offset size in CFFIndex: \${offSize} \${stream.pos}\`);
        let ret = [];
        let startPos = stream.pos + (count + 1) * offSize - 1;
        let start = offsetType.decode(stream);
        for(let i = 0; i < count; i++){
            let end = offsetType.decode(stream);
            if (this.type != null) {
                let pos = stream.pos;
                stream.pos = startPos + start;
                parent.length = end - start;
                ret.push(this.type.decode(stream, parent));
                stream.pos = pos;
            } else ret.push({
                offset: startPos + start,
                length: end - start
            });
            start = end;
        }
        stream.pos = startPos + start;
        return ret;
    }
    size(arr, parent) {
        let size = 2;
        if (arr.length === 0) return size;
        let type = this.type || new restructure__WEBPACK_IMPORTED_MODULE_0__.Buffer;
        // find maximum offset to detminine offset type
        let offset = 1;
        for(let i = 0; i < arr.length; i++){
            let item = arr[i];
            offset += type.size(item, parent);
        }
        let offsetType;
        if (offset <= 0xff) offsetType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint8;
        else if (offset <= 0xffff) offsetType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint16;
        else if (offset <= 0xffffff) offsetType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint24;
        else if (offset <= 0xffffffff) offsetType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint32;
        else throw new Error("Bad offset in CFFIndex");
        size += 1 + offsetType.size() * (arr.length + 1);
        size += offset - 1;
        return size;
    }
    encode(stream, arr, parent) {
        stream.writeUInt16BE(arr.length);
        if (arr.length === 0) return;
        let type = this.type || new restructure__WEBPACK_IMPORTED_MODULE_0__.Buffer;
        // find maximum offset to detminine offset type
        let sizes = [];
        let offset = 1;
        for (let item of arr){
            let s = type.size(item, parent);
            sizes.push(s);
            offset += s;
        }
        let offsetType;
        if (offset <= 0xff) offsetType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint8;
        else if (offset <= 0xffff) offsetType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint16;
        else if (offset <= 0xffffff) offsetType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint24;
        else if (offset <= 0xffffffff) offsetType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint32;
        else throw new Error("Bad offset in CFFIndex");
        // write offset size
        stream.writeUInt8(offsetType.size());
        // write elements
        offset = 1;
        offsetType.encode(stream, offset);
        for (let size of sizes){
            offset += size;
            offsetType.encode(stream, offset);
        }
        for (let item1 of arr)type.encode(stream, item1, parent);
        return;
    }
}






const $2e2b3208cd32b1af$var$FLOAT_EOF = 0xf;
const $2e2b3208cd32b1af$var$FLOAT_LOOKUP = [
    '0',
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
    '.',
    'E',
    'E-',
    null,
    '-'
];
const $2e2b3208cd32b1af$var$FLOAT_ENCODE_LOOKUP = {
    '.': 10,
    'E': 11,
    'E-': 12,
    '-': 14
};
class $2e2b3208cd32b1af$export$2e2bcd8739ae039 {
    static decode(stream, value) {
        if (32 <= value && value <= 246) return value - 139;
        if (247 <= value && value <= 250) return (value - 247) * 256 + stream.readUInt8() + 108;
        if (251 <= value && value <= 254) return -(value - 251) * 256 - stream.readUInt8() - 108;
        if (value === 28) return stream.readInt16BE();
        if (value === 29) return stream.readInt32BE();
        if (value === 30) {
            let str = '';
            while(true){
                let b = stream.readUInt8();
                let n1 = b >> 4;
                if (n1 === $2e2b3208cd32b1af$var$FLOAT_EOF) break;
                str += $2e2b3208cd32b1af$var$FLOAT_LOOKUP[n1];
                let n2 = b & 15;
                if (n2 === $2e2b3208cd32b1af$var$FLOAT_EOF) break;
                str += $2e2b3208cd32b1af$var$FLOAT_LOOKUP[n2];
            }
            return parseFloat(str);
        }
        return null;
    }
    static size(value) {
        // if the value needs to be forced to the largest size (32 bit)
        // e.g. for unknown pointers, set to 32768
        if (value.forceLarge) value = 32768;
        if ((value | 0) !== value) {
            let str = '' + value;
            return 1 + Math.ceil((str.length + 1) / 2);
        } else if (-107 <= value && value <= 107) return 1;
        else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) return 2;
        else if (-32768 <= value && value <= 32767) return 3;
        else return 5;
    }
    static encode(stream, value) {
        // if the value needs to be forced to the largest size (32 bit)
        // e.g. for unknown pointers, save the old value and set to 32768
        let val = Number(value);
        if (value.forceLarge) {
            stream.writeUInt8(29);
            return stream.writeInt32BE(val);
        } else if ((val | 0) !== val) {
            stream.writeUInt8(30);
            let str = '' + val;
            for(let i = 0; i < str.length; i += 2){
                let c1 = str[i];
                let n1 = $2e2b3208cd32b1af$var$FLOAT_ENCODE_LOOKUP[c1] || +c1;
                if (i === str.length - 1) var n2 = $2e2b3208cd32b1af$var$FLOAT_EOF;
                else {
                    let c2 = str[i + 1];
                    var n2 = $2e2b3208cd32b1af$var$FLOAT_ENCODE_LOOKUP[c2] || +c2;
                }
                stream.writeUInt8(n1 << 4 | n2 & 15);
            }
            if (n2 !== $2e2b3208cd32b1af$var$FLOAT_EOF) return stream.writeUInt8($2e2b3208cd32b1af$var$FLOAT_EOF << 4);
        } else if (-107 <= val && val <= 107) return stream.writeUInt8(val + 139);
        else if (108 <= val && val <= 1131) {
            val -= 108;
            stream.writeUInt8((val >> 8) + 247);
            return stream.writeUInt8(val & 0xff);
        } else if (-1131 <= val && val <= -108) {
            val = -val - 108;
            stream.writeUInt8((val >> 8) + 251);
            return stream.writeUInt8(val & 0xff);
        } else if (-32768 <= val && val <= 32767) {
            stream.writeUInt8(28);
            return stream.writeInt16BE(val);
        } else {
            stream.writeUInt8(29);
            return stream.writeInt32BE(val);
        }
    }
}



class $1694c4b242cd1a66$export$2e2bcd8739ae039 {
    constructor(ops = []){
        this.ops = ops;
        this.fields = {};
        for (let field of ops){
            let key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];
            this.fields[key] = field;
        }
    }
    decodeOperands(type, stream, ret, operands) {
        if (Array.isArray(type)) return operands.map((op, i)=>this.decodeOperands(type[i], stream, ret, [
                op
            ])
        );
        else if (type.decode != null) return type.decode(stream, ret, operands);
        else switch(type){
            case 'number':
            case 'offset':
            case 'sid':
                return operands[0];
            case 'boolean':
                return !!operands[0];
            default:
                return operands;
        }
    }
    encodeOperands(type, stream, ctx, operands) {
        if (Array.isArray(type)) return operands.map((op, i)=>this.encodeOperands(type[i], stream, ctx, op)[0]
        );
        else if (type.encode != null) return type.encode(stream, operands, ctx);
        else if (typeof operands === 'number') return [
            operands
        ];
        else if (typeof operands === 'boolean') return [
            +operands
        ];
        else if (Array.isArray(operands)) return operands;
        else return [
            operands
        ];
    }
    decode(stream, parent) {
        let end = stream.pos + parent.length;
        let ret = {};
        let operands = [];
        // define hidden properties
        Object.defineProperties(ret, {
            parent: {
                value: parent
            },
            _startOffset: {
                value: stream.pos
            }
        });
        // fill in defaults
        for(let key in this.fields){
            let field = this.fields[key];
            ret[field[1]] = field[3];
        }
        while(stream.pos < end){
            let b = stream.readUInt8();
            if (b < 28) {
                if (b === 12) b = b << 8 | stream.readUInt8();
                let field = this.fields[b];
                if (!field) throw new Error(\`Unknown operator \${b}\`);
                let val = this.decodeOperands(field[2], stream, ret, operands);
                if (val != null) {
                    if (val instanceof restructure_src_utils_js__WEBPACK_IMPORTED_MODULE_3__.PropertyDescriptor) Object.defineProperty(ret, field[1], val);
                    else ret[field[1]] = val;
                }
                operands = [];
            } else operands.push($2e2b3208cd32b1af$export$2e2bcd8739ae039.decode(stream, b));
        }
        return ret;
    }
    size(dict, parent, includePointers = true) {
        let ctx = {
            parent: parent,
            val: dict,
            pointerSize: 0,
            startOffset: parent.startOffset || 0
        };
        let len = 0;
        for(let k in this.fields){
            let field = this.fields[k];
            let val = dict[field[1]];
            if (val == null || deep_equal__WEBPACK_IMPORTED_MODULE_4__(val, field[3])) continue;
            let operands = this.encodeOperands(field[2], null, ctx, val);
            for (let op of operands)len += $2e2b3208cd32b1af$export$2e2bcd8739ae039.size(op);
            let key = Array.isArray(field[0]) ? field[0] : [
                field[0]
            ];
            len += key.length;
        }
        if (includePointers) len += ctx.pointerSize;
        return len;
    }
    encode(stream, dict, parent) {
        let ctx = {
            pointers: [],
            startOffset: stream.pos,
            parent: parent,
            val: dict,
            pointerSize: 0
        };
        ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);
        for (let field of this.ops){
            let val = dict[field[1]];
            if (val == null || deep_equal__WEBPACK_IMPORTED_MODULE_4__(val, field[3])) continue;
            let operands = this.encodeOperands(field[2], stream, ctx, val);
            for (let op of operands)$2e2b3208cd32b1af$export$2e2bcd8739ae039.encode(stream, op);
            let key = Array.isArray(field[0]) ? field[0] : [
                field[0]
            ];
            for (let op1 of key)stream.writeUInt8(op1);
        }
        let i = 0;
        while(i < ctx.pointers.length){
            let ptr = ctx.pointers[i++];
            ptr.type.encode(stream, ptr.val, ptr.parent);
        }
        return;
    }
}




class $6631a7581d654814$export$2e2bcd8739ae039 extends restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer {
    constructor(type, options = {}){
        if (options.type == null) options.type = 'global';
        super(null, type, options);
    }
    decode(stream, parent, operands) {
        this.offsetType = {
            decode: ()=>operands[0]
        };
        return super.decode(stream, parent, operands);
    }
    encode(stream, value, ctx) {
        if (!stream) {
            // compute the size (so ctx.pointerSize is correct)
            this.offsetType = {
                size: ()=>0
            };
            this.size(value, ctx);
            return [
                new $6631a7581d654814$var$Ptr(0)
            ];
        }
        let ptr = null;
        this.offsetType = {
            encode: (stream, val)=>ptr = val
        };
        super.encode(stream, value, ctx);
        return [
            new $6631a7581d654814$var$Ptr(ptr)
        ];
    }
}
class $6631a7581d654814$var$Ptr {
    constructor(val){
        this.val = val;
        this.forceLarge = true;
    }
    valueOf() {
        return this.val;
    }
}





class $94c2c7ed7c236891$var$CFFBlendOp {
    static decode(stream, parent, operands) {
        let numBlends = operands.pop();
        // TODO: actually blend. For now just consume the deltas
        // since we don't use any of the values anyway.
        while(operands.length > numBlends)operands.pop();
    }
}
var $94c2c7ed7c236891$export$2e2bcd8739ae039 = new $1694c4b242cd1a66$export$2e2bcd8739ae039([
    // key       name                    type                                          default
    [
        6,
        'BlueValues',
        'delta',
        null
    ],
    [
        7,
        'OtherBlues',
        'delta',
        null
    ],
    [
        8,
        'FamilyBlues',
        'delta',
        null
    ],
    [
        9,
        'FamilyOtherBlues',
        'delta',
        null
    ],
    [
        [
            12,
            9
        ],
        'BlueScale',
        'number',
        0.039625
    ],
    [
        [
            12,
            10
        ],
        'BlueShift',
        'number',
        7
    ],
    [
        [
            12,
            11
        ],
        'BlueFuzz',
        'number',
        1
    ],
    [
        10,
        'StdHW',
        'number',
        null
    ],
    [
        11,
        'StdVW',
        'number',
        null
    ],
    [
        [
            12,
            12
        ],
        'StemSnapH',
        'delta',
        null
    ],
    [
        [
            12,
            13
        ],
        'StemSnapV',
        'delta',
        null
    ],
    [
        [
            12,
            14
        ],
        'ForceBold',
        'boolean',
        false
    ],
    [
        [
            12,
            17
        ],
        'LanguageGroup',
        'number',
        0
    ],
    [
        [
            12,
            18
        ],
        'ExpansionFactor',
        'number',
        0.06
    ],
    [
        [
            12,
            19
        ],
        'initialRandomSeed',
        'number',
        0
    ],
    [
        20,
        'defaultWidthX',
        'number',
        0
    ],
    [
        21,
        'nominalWidthX',
        'number',
        0
    ],
    [
        22,
        'vsindex',
        'number',
        0
    ],
    [
        23,
        'blend',
        $94c2c7ed7c236891$var$CFFBlendOp,
        null
    ],
    [
        19,
        'Subrs',
        new $6631a7581d654814$export$2e2bcd8739ae039(new $6333f51d822e64a1$export$2e2bcd8739ae039, {
            type: 'local'
        }),
        null
    ]
]);


var // Automatically generated from Appendix A of the CFF specification; do
// not edit. Length should be 391.
$276d3ff37a4362c9$export$2e2bcd8739ae039 = [
    ".notdef",
    "space",
    "exclam",
    "quotedbl",
    "numbersign",
    "dollar",
    "percent",
    "ampersand",
    "quoteright",
    "parenleft",
    "parenright",
    "asterisk",
    "plus",
    "comma",
    "hyphen",
    "period",
    "slash",
    "zero",
    "one",
    "two",
    "three",
    "four",
    "five",
    "six",
    "seven",
    "eight",
    "nine",
    "colon",
    "semicolon",
    "less",
    "equal",
    "greater",
    "question",
    "at",
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
    "bracketleft",
    "backslash",
    "bracketright",
    "asciicircum",
    "underscore",
    "quoteleft",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
    "braceleft",
    "bar",
    "braceright",
    "asciitilde",
    "exclamdown",
    "cent",
    "sterling",
    "fraction",
    "yen",
    "florin",
    "section",
    "currency",
    "quotesingle",
    "quotedblleft",
    "guillemotleft",
    "guilsinglleft",
    "guilsinglright",
    "fi",
    "fl",
    "endash",
    "dagger",
    "daggerdbl",
    "periodcentered",
    "paragraph",
    "bullet",
    "quotesinglbase",
    "quotedblbase",
    "quotedblright",
    "guillemotright",
    "ellipsis",
    "perthousand",
    "questiondown",
    "grave",
    "acute",
    "circumflex",
    "tilde",
    "macron",
    "breve",
    "dotaccent",
    "dieresis",
    "ring",
    "cedilla",
    "hungarumlaut",
    "ogonek",
    "caron",
    "emdash",
    "AE",
    "ordfeminine",
    "Lslash",
    "Oslash",
    "OE",
    "ordmasculine",
    "ae",
    "dotlessi",
    "lslash",
    "oslash",
    "oe",
    "germandbls",
    "onesuperior",
    "logicalnot",
    "mu",
    "trademark",
    "Eth",
    "onehalf",
    "plusminus",
    "Thorn",
    "onequarter",
    "divide",
    "brokenbar",
    "degree",
    "thorn",
    "threequarters",
    "twosuperior",
    "registered",
    "minus",
    "eth",
    "multiply",
    "threesuperior",
    "copyright",
    "Aacute",
    "Acircumflex",
    "Adieresis",
    "Agrave",
    "Aring",
    "Atilde",
    "Ccedilla",
    "Eacute",
    "Ecircumflex",
    "Edieresis",
    "Egrave",
    "Iacute",
    "Icircumflex",
    "Idieresis",
    "Igrave",
    "Ntilde",
    "Oacute",
    "Ocircumflex",
    "Odieresis",
    "Ograve",
    "Otilde",
    "Scaron",
    "Uacute",
    "Ucircumflex",
    "Udieresis",
    "Ugrave",
    "Yacute",
    "Ydieresis",
    "Zcaron",
    "aacute",
    "acircumflex",
    "adieresis",
    "agrave",
    "aring",
    "atilde",
    "ccedilla",
    "eacute",
    "ecircumflex",
    "edieresis",
    "egrave",
    "iacute",
    "icircumflex",
    "idieresis",
    "igrave",
    "ntilde",
    "oacute",
    "ocircumflex",
    "odieresis",
    "ograve",
    "otilde",
    "scaron",
    "uacute",
    "ucircumflex",
    "udieresis",
    "ugrave",
    "yacute",
    "ydieresis",
    "zcaron",
    "exclamsmall",
    "Hungarumlautsmall",
    "dollaroldstyle",
    "dollarsuperior",
    "ampersandsmall",
    "Acutesmall",
    "parenleftsuperior",
    "parenrightsuperior",
    "twodotenleader",
    "onedotenleader",
    "zerooldstyle",
    "oneoldstyle",
    "twooldstyle",
    "threeoldstyle",
    "fouroldstyle",
    "fiveoldstyle",
    "sixoldstyle",
    "sevenoldstyle",
    "eightoldstyle",
    "nineoldstyle",
    "commasuperior",
    "threequartersemdash",
    "periodsuperior",
    "questionsmall",
    "asuperior",
    "bsuperior",
    "centsuperior",
    "dsuperior",
    "esuperior",
    "isuperior",
    "lsuperior",
    "msuperior",
    "nsuperior",
    "osuperior",
    "rsuperior",
    "ssuperior",
    "tsuperior",
    "ff",
    "ffi",
    "ffl",
    "parenleftinferior",
    "parenrightinferior",
    "Circumflexsmall",
    "hyphensuperior",
    "Gravesmall",
    "Asmall",
    "Bsmall",
    "Csmall",
    "Dsmall",
    "Esmall",
    "Fsmall",
    "Gsmall",
    "Hsmall",
    "Ismall",
    "Jsmall",
    "Ksmall",
    "Lsmall",
    "Msmall",
    "Nsmall",
    "Osmall",
    "Psmall",
    "Qsmall",
    "Rsmall",
    "Ssmall",
    "Tsmall",
    "Usmall",
    "Vsmall",
    "Wsmall",
    "Xsmall",
    "Ysmall",
    "Zsmall",
    "colonmonetary",
    "onefitted",
    "rupiah",
    "Tildesmall",
    "exclamdownsmall",
    "centoldstyle",
    "Lslashsmall",
    "Scaronsmall",
    "Zcaronsmall",
    "Dieresissmall",
    "Brevesmall",
    "Caronsmall",
    "Dotaccentsmall",
    "Macronsmall",
    "figuredash",
    "hypheninferior",
    "Ogoneksmall",
    "Ringsmall",
    "Cedillasmall",
    "questiondownsmall",
    "oneeighth",
    "threeeighths",
    "fiveeighths",
    "seveneighths",
    "onethird",
    "twothirds",
    "zerosuperior",
    "foursuperior",
    "fivesuperior",
    "sixsuperior",
    "sevensuperior",
    "eightsuperior",
    "ninesuperior",
    "zeroinferior",
    "oneinferior",
    "twoinferior",
    "threeinferior",
    "fourinferior",
    "fiveinferior",
    "sixinferior",
    "seveninferior",
    "eightinferior",
    "nineinferior",
    "centinferior",
    "dollarinferior",
    "periodinferior",
    "commainferior",
    "Agravesmall",
    "Aacutesmall",
    "Acircumflexsmall",
    "Atildesmall",
    "Adieresissmall",
    "Aringsmall",
    "AEsmall",
    "Ccedillasmall",
    "Egravesmall",
    "Eacutesmall",
    "Ecircumflexsmall",
    "Edieresissmall",
    "Igravesmall",
    "Iacutesmall",
    "Icircumflexsmall",
    "Idieresissmall",
    "Ethsmall",
    "Ntildesmall",
    "Ogravesmall",
    "Oacutesmall",
    "Ocircumflexsmall",
    "Otildesmall",
    "Odieresissmall",
    "OEsmall",
    "Oslashsmall",
    "Ugravesmall",
    "Uacutesmall",
    "Ucircumflexsmall",
    "Udieresissmall",
    "Yacutesmall",
    "Thornsmall",
    "Ydieresissmall",
    "001.000",
    "001.001",
    "001.002",
    "001.003",
    "Black",
    "Bold",
    "Book",
    "Light",
    "Medium",
    "Regular",
    "Roman",
    "Semibold"
];


let $50148a3b88f16e26$export$dee0027060fa13bd = [
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    'space',
    'exclam',
    'quotedbl',
    'numbersign',
    'dollar',
    'percent',
    'ampersand',
    'quoteright',
    'parenleft',
    'parenright',
    'asterisk',
    'plus',
    'comma',
    'hyphen',
    'period',
    'slash',
    'zero',
    'one',
    'two',
    'three',
    'four',
    'five',
    'six',
    'seven',
    'eight',
    'nine',
    'colon',
    'semicolon',
    'less',
    'equal',
    'greater',
    'question',
    'at',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    'bracketleft',
    'backslash',
    'bracketright',
    'asciicircum',
    'underscore',
    'quoteleft',
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
    'braceleft',
    'bar',
    'braceright',
    'asciitilde',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    'exclamdown',
    'cent',
    'sterling',
    'fraction',
    'yen',
    'florin',
    'section',
    'currency',
    'quotesingle',
    'quotedblleft',
    'guillemotleft',
    'guilsinglleft',
    'guilsinglright',
    'fi',
    'fl',
    '',
    'endash',
    'dagger',
    'daggerdbl',
    'periodcentered',
    '',
    'paragraph',
    'bullet',
    'quotesinglbase',
    'quotedblbase',
    'quotedblright',
    'guillemotright',
    'ellipsis',
    'perthousand',
    '',
    'questiondown',
    '',
    'grave',
    'acute',
    'circumflex',
    'tilde',
    'macron',
    'breve',
    'dotaccent',
    'dieresis',
    '',
    'ring',
    'cedilla',
    '',
    'hungarumlaut',
    'ogonek',
    'caron',
    'emdash',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    'AE',
    '',
    'ordfeminine',
    '',
    '',
    '',
    '',
    'Lslash',
    'Oslash',
    'OE',
    'ordmasculine',
    '',
    '',
    '',
    '',
    '',
    'ae',
    '',
    '',
    '',
    'dotlessi',
    '',
    '',
    'lslash',
    'oslash',
    'oe',
    'germandbls'
];
let $50148a3b88f16e26$export$4f58f497e14a53c3 = [
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    'space',
    'exclamsmall',
    'Hungarumlautsmall',
    '',
    'dollaroldstyle',
    'dollarsuperior',
    'ampersandsmall',
    'Acutesmall',
    'parenleftsuperior',
    'parenrightsuperior',
    'twodotenleader',
    'onedotenleader',
    'comma',
    'hyphen',
    'period',
    'fraction',
    'zerooldstyle',
    'oneoldstyle',
    'twooldstyle',
    'threeoldstyle',
    'fouroldstyle',
    'fiveoldstyle',
    'sixoldstyle',
    'sevenoldstyle',
    'eightoldstyle',
    'nineoldstyle',
    'colon',
    'semicolon',
    'commasuperior',
    'threequartersemdash',
    'periodsuperior',
    'questionsmall',
    '',
    'asuperior',
    'bsuperior',
    'centsuperior',
    'dsuperior',
    'esuperior',
    '',
    '',
    'isuperior',
    '',
    '',
    'lsuperior',
    'msuperior',
    'nsuperior',
    'osuperior',
    '',
    '',
    'rsuperior',
    'ssuperior',
    'tsuperior',
    '',
    'ff',
    'fi',
    'fl',
    'ffi',
    'ffl',
    'parenleftinferior',
    '',
    'parenrightinferior',
    'Circumflexsmall',
    'hyphensuperior',
    'Gravesmall',
    'Asmall',
    'Bsmall',
    'Csmall',
    'Dsmall',
    'Esmall',
    'Fsmall',
    'Gsmall',
    'Hsmall',
    'Ismall',
    'Jsmall',
    'Ksmall',
    'Lsmall',
    'Msmall',
    'Nsmall',
    'Osmall',
    'Psmall',
    'Qsmall',
    'Rsmall',
    'Ssmall',
    'Tsmall',
    'Usmall',
    'Vsmall',
    'Wsmall',
    'Xsmall',
    'Ysmall',
    'Zsmall',
    'colonmonetary',
    'onefitted',
    'rupiah',
    'Tildesmall',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    'exclamdownsmall',
    'centoldstyle',
    'Lslashsmall',
    '',
    '',
    'Scaronsmall',
    'Zcaronsmall',
    'Dieresissmall',
    'Brevesmall',
    'Caronsmall',
    '',
    'Dotaccentsmall',
    '',
    '',
    'Macronsmall',
    '',
    '',
    'figuredash',
    'hypheninferior',
    '',
    '',
    'Ogoneksmall',
    'Ringsmall',
    'Cedillasmall',
    '',
    '',
    '',
    'onequarter',
    'onehalf',
    'threequarters',
    'questiondownsmall',
    'oneeighth',
    'threeeighths',
    'fiveeighths',
    'seveneighths',
    'onethird',
    'twothirds',
    '',
    '',
    'zerosuperior',
    'onesuperior',
    'twosuperior',
    'threesuperior',
    'foursuperior',
    'fivesuperior',
    'sixsuperior',
    'sevensuperior',
    'eightsuperior',
    'ninesuperior',
    'zeroinferior',
    'oneinferior',
    'twoinferior',
    'threeinferior',
    'fourinferior',
    'fiveinferior',
    'sixinferior',
    'seveninferior',
    'eightinferior',
    'nineinferior',
    'centinferior',
    'dollarinferior',
    'periodinferior',
    'commainferior',
    'Agravesmall',
    'Aacutesmall',
    'Acircumflexsmall',
    'Atildesmall',
    'Adieresissmall',
    'Aringsmall',
    'AEsmall',
    'Ccedillasmall',
    'Egravesmall',
    'Eacutesmall',
    'Ecircumflexsmall',
    'Edieresissmall',
    'Igravesmall',
    'Iacutesmall',
    'Icircumflexsmall',
    'Idieresissmall',
    'Ethsmall',
    'Ntildesmall',
    'Ogravesmall',
    'Oacutesmall',
    'Ocircumflexsmall',
    'Otildesmall',
    'Odieresissmall',
    'OEsmall',
    'Oslashsmall',
    'Ugravesmall',
    'Uacutesmall',
    'Ucircumflexsmall',
    'Udieresissmall',
    'Yacutesmall',
    'Thornsmall',
    'Ydieresissmall'
];


let $a5fab60a6eadb8ed$export$c33b50336c234f16 = [
    '.notdef',
    'space',
    'exclam',
    'quotedbl',
    'numbersign',
    'dollar',
    'percent',
    'ampersand',
    'quoteright',
    'parenleft',
    'parenright',
    'asterisk',
    'plus',
    'comma',
    'hyphen',
    'period',
    'slash',
    'zero',
    'one',
    'two',
    'three',
    'four',
    'five',
    'six',
    'seven',
    'eight',
    'nine',
    'colon',
    'semicolon',
    'less',
    'equal',
    'greater',
    'question',
    'at',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    'bracketleft',
    'backslash',
    'bracketright',
    'asciicircum',
    'underscore',
    'quoteleft',
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
    'braceleft',
    'bar',
    'braceright',
    'asciitilde',
    'exclamdown',
    'cent',
    'sterling',
    'fraction',
    'yen',
    'florin',
    'section',
    'currency',
    'quotesingle',
    'quotedblleft',
    'guillemotleft',
    'guilsinglleft',
    'guilsinglright',
    'fi',
    'fl',
    'endash',
    'dagger',
    'daggerdbl',
    'periodcentered',
    'paragraph',
    'bullet',
    'quotesinglbase',
    'quotedblbase',
    'quotedblright',
    'guillemotright',
    'ellipsis',
    'perthousand',
    'questiondown',
    'grave',
    'acute',
    'circumflex',
    'tilde',
    'macron',
    'breve',
    'dotaccent',
    'dieresis',
    'ring',
    'cedilla',
    'hungarumlaut',
    'ogonek',
    'caron',
    'emdash',
    'AE',
    'ordfeminine',
    'Lslash',
    'Oslash',
    'OE',
    'ordmasculine',
    'ae',
    'dotlessi',
    'lslash',
    'oslash',
    'oe',
    'germandbls',
    'onesuperior',
    'logicalnot',
    'mu',
    'trademark',
    'Eth',
    'onehalf',
    'plusminus',
    'Thorn',
    'onequarter',
    'divide',
    'brokenbar',
    'degree',
    'thorn',
    'threequarters',
    'twosuperior',
    'registered',
    'minus',
    'eth',
    'multiply',
    'threesuperior',
    'copyright',
    'Aacute',
    'Acircumflex',
    'Adieresis',
    'Agrave',
    'Aring',
    'Atilde',
    'Ccedilla',
    'Eacute',
    'Ecircumflex',
    'Edieresis',
    'Egrave',
    'Iacute',
    'Icircumflex',
    'Idieresis',
    'Igrave',
    'Ntilde',
    'Oacute',
    'Ocircumflex',
    'Odieresis',
    'Ograve',
    'Otilde',
    'Scaron',
    'Uacute',
    'Ucircumflex',
    'Udieresis',
    'Ugrave',
    'Yacute',
    'Ydieresis',
    'Zcaron',
    'aacute',
    'acircumflex',
    'adieresis',
    'agrave',
    'aring',
    'atilde',
    'ccedilla',
    'eacute',
    'ecircumflex',
    'edieresis',
    'egrave',
    'iacute',
    'icircumflex',
    'idieresis',
    'igrave',
    'ntilde',
    'oacute',
    'ocircumflex',
    'odieresis',
    'ograve',
    'otilde',
    'scaron',
    'uacute',
    'ucircumflex',
    'udieresis',
    'ugrave',
    'yacute',
    'ydieresis',
    'zcaron'
];
let $a5fab60a6eadb8ed$export$3ed0f9e1fee8d489 = [
    '.notdef',
    'space',
    'exclamsmall',
    'Hungarumlautsmall',
    'dollaroldstyle',
    'dollarsuperior',
    'ampersandsmall',
    'Acutesmall',
    'parenleftsuperior',
    'parenrightsuperior',
    'twodotenleader',
    'onedotenleader',
    'comma',
    'hyphen',
    'period',
    'fraction',
    'zerooldstyle',
    'oneoldstyle',
    'twooldstyle',
    'threeoldstyle',
    'fouroldstyle',
    'fiveoldstyle',
    'sixoldstyle',
    'sevenoldstyle',
    'eightoldstyle',
    'nineoldstyle',
    'colon',
    'semicolon',
    'commasuperior',
    'threequartersemdash',
    'periodsuperior',
    'questionsmall',
    'asuperior',
    'bsuperior',
    'centsuperior',
    'dsuperior',
    'esuperior',
    'isuperior',
    'lsuperior',
    'msuperior',
    'nsuperior',
    'osuperior',
    'rsuperior',
    'ssuperior',
    'tsuperior',
    'ff',
    'fi',
    'fl',
    'ffi',
    'ffl',
    'parenleftinferior',
    'parenrightinferior',
    'Circumflexsmall',
    'hyphensuperior',
    'Gravesmall',
    'Asmall',
    'Bsmall',
    'Csmall',
    'Dsmall',
    'Esmall',
    'Fsmall',
    'Gsmall',
    'Hsmall',
    'Ismall',
    'Jsmall',
    'Ksmall',
    'Lsmall',
    'Msmall',
    'Nsmall',
    'Osmall',
    'Psmall',
    'Qsmall',
    'Rsmall',
    'Ssmall',
    'Tsmall',
    'Usmall',
    'Vsmall',
    'Wsmall',
    'Xsmall',
    'Ysmall',
    'Zsmall',
    'colonmonetary',
    'onefitted',
    'rupiah',
    'Tildesmall',
    'exclamdownsmall',
    'centoldstyle',
    'Lslashsmall',
    'Scaronsmall',
    'Zcaronsmall',
    'Dieresissmall',
    'Brevesmall',
    'Caronsmall',
    'Dotaccentsmall',
    'Macronsmall',
    'figuredash',
    'hypheninferior',
    'Ogoneksmall',
    'Ringsmall',
    'Cedillasmall',
    'onequarter',
    'onehalf',
    'threequarters',
    'questiondownsmall',
    'oneeighth',
    'threeeighths',
    'fiveeighths',
    'seveneighths',
    'onethird',
    'twothirds',
    'zerosuperior',
    'onesuperior',
    'twosuperior',
    'threesuperior',
    'foursuperior',
    'fivesuperior',
    'sixsuperior',
    'sevensuperior',
    'eightsuperior',
    'ninesuperior',
    'zeroinferior',
    'oneinferior',
    'twoinferior',
    'threeinferior',
    'fourinferior',
    'fiveinferior',
    'sixinferior',
    'seveninferior',
    'eightinferior',
    'nineinferior',
    'centinferior',
    'dollarinferior',
    'periodinferior',
    'commainferior',
    'Agravesmall',
    'Aacutesmall',
    'Acircumflexsmall',
    'Atildesmall',
    'Adieresissmall',
    'Aringsmall',
    'AEsmall',
    'Ccedillasmall',
    'Egravesmall',
    'Eacutesmall',
    'Ecircumflexsmall',
    'Edieresissmall',
    'Igravesmall',
    'Iacutesmall',
    'Icircumflexsmall',
    'Idieresissmall',
    'Ethsmall',
    'Ntildesmall',
    'Ogravesmall',
    'Oacutesmall',
    'Ocircumflexsmall',
    'Otildesmall',
    'Odieresissmall',
    'OEsmall',
    'Oslashsmall',
    'Ugravesmall',
    'Uacutesmall',
    'Ucircumflexsmall',
    'Udieresissmall',
    'Yacutesmall',
    'Thornsmall',
    'Ydieresissmall'
];
let $a5fab60a6eadb8ed$export$dc28be11139d4120 = [
    '.notdef',
    'space',
    'dollaroldstyle',
    'dollarsuperior',
    'parenleftsuperior',
    'parenrightsuperior',
    'twodotenleader',
    'onedotenleader',
    'comma',
    'hyphen',
    'period',
    'fraction',
    'zerooldstyle',
    'oneoldstyle',
    'twooldstyle',
    'threeoldstyle',
    'fouroldstyle',
    'fiveoldstyle',
    'sixoldstyle',
    'sevenoldstyle',
    'eightoldstyle',
    'nineoldstyle',
    'colon',
    'semicolon',
    'commasuperior',
    'threequartersemdash',
    'periodsuperior',
    'asuperior',
    'bsuperior',
    'centsuperior',
    'dsuperior',
    'esuperior',
    'isuperior',
    'lsuperior',
    'msuperior',
    'nsuperior',
    'osuperior',
    'rsuperior',
    'ssuperior',
    'tsuperior',
    'ff',
    'fi',
    'fl',
    'ffi',
    'ffl',
    'parenleftinferior',
    'parenrightinferior',
    'hyphensuperior',
    'colonmonetary',
    'onefitted',
    'rupiah',
    'centoldstyle',
    'figuredash',
    'hypheninferior',
    'onequarter',
    'onehalf',
    'threequarters',
    'oneeighth',
    'threeeighths',
    'fiveeighths',
    'seveneighths',
    'onethird',
    'twothirds',
    'zerosuperior',
    'onesuperior',
    'twosuperior',
    'threesuperior',
    'foursuperior',
    'fivesuperior',
    'sixsuperior',
    'sevensuperior',
    'eightsuperior',
    'ninesuperior',
    'zeroinferior',
    'oneinferior',
    'twoinferior',
    'threeinferior',
    'fourinferior',
    'fiveinferior',
    'sixinferior',
    'seveninferior',
    'eightinferior',
    'nineinferior',
    'centinferior',
    'dollarinferior',
    'periodinferior',
    'commainferior'
];



//########################
// Scripts and Languages #
//########################
let $401800e36a580e62$var$LangSysTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
    reqFeatureIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    featureCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    featureIndexes: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'featureCount')
});
let $401800e36a580e62$var$LangSysRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    langSys: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$var$LangSysTable, {
        type: 'parent'
    })
});
let $401800e36a580e62$var$Script = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    defaultLangSys: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$var$LangSysTable),
    count: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    langSysRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($401800e36a580e62$var$LangSysRecord, 'count')
});
let $401800e36a580e62$var$ScriptRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    script: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$var$Script, {
        type: 'parent'
    })
});
let $401800e36a580e62$export$3e15fc05ce864229 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($401800e36a580e62$var$ScriptRecord, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
//#######################
// Features and Lookups #
//#######################
let $401800e36a580e62$var$FeatureParams = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    nameID: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});
let $401800e36a580e62$export$6e91cf7616333d5 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    featureParams: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$var$FeatureParams),
    lookupCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    lookupListIndexes: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'lookupCount')
});
let $401800e36a580e62$var$FeatureRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    feature: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$6e91cf7616333d5, {
        type: 'parent'
    })
});
let $401800e36a580e62$export$aa18130def4b6cb4 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($401800e36a580e62$var$FeatureRecord, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $401800e36a580e62$var$LookupFlags = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    markAttachmentType: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    flags: new restructure__WEBPACK_IMPORTED_MODULE_0__.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, [
        'rightToLeft',
        'ignoreBaseGlyphs',
        'ignoreLigatures',
        'ignoreMarks',
        'useMarkFilteringSet'
    ])
});
function $401800e36a580e62$export$df0008c6ff2da22a(SubTable) {
    let Lookup = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
        lookupType: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        flags: $401800e36a580e62$var$LookupFlags,
        subTableCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        subTables: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, SubTable), 'subTableCount'),
        markFilteringSet: new restructure__WEBPACK_IMPORTED_MODULE_0__.Optional(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, (t)=>t.flags.flags.useMarkFilteringSet
        )
    });
    return new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, Lookup), restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
}
//#################
// Coverage Table #
//#################
let $401800e36a580e62$var$RangeRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    start: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    end: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    startCoverageIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});
let $401800e36a580e62$export$17608c3f81a6111 = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    1: {
        glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        glyphs: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'glyphCount')
    },
    2: {
        rangeCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        rangeRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($401800e36a580e62$var$RangeRecord, 'rangeCount')
    }
});
//#########################
// Class Definition Table #
//#########################
let $401800e36a580e62$var$ClassRangeRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    start: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    end: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    class: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});
let $401800e36a580e62$export$843d551fbbafef71 = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    1: {
        startGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        classValueArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'glyphCount')
    },
    2: {
        classRangeCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        classRangeRecord: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($401800e36a580e62$var$ClassRangeRecord, 'classRangeCount')
    }
});
let $401800e36a580e62$export$8215d14a63d9fb10 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    a: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    b: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    deltaFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});
//#############################################
// Contextual Substitution/Positioning Tables #
//#############################################
let $401800e36a580e62$var$LookupRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    sequenceIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    lookupListIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});
let $401800e36a580e62$var$Rule = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    lookupCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    input: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, (t)=>t.glyphCount - 1
    ),
    lookupRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($401800e36a580e62$var$LookupRecord, 'lookupCount')
});
let $401800e36a580e62$var$RuleSet = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$var$Rule), restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $401800e36a580e62$var$ClassRule = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    lookupCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    classes: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, (t)=>t.glyphCount - 1
    ),
    lookupRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($401800e36a580e62$var$LookupRecord, 'lookupCount')
});
let $401800e36a580e62$var$ClassSet = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$var$ClassRule), restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $401800e36a580e62$export$841858b892ce1f4c = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    1: {
        coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        ruleSetCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        ruleSets: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$var$RuleSet), 'ruleSetCount')
    },
    2: {
        coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        classDef: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$843d551fbbafef71),
        classSetCnt: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        classSet: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$var$ClassSet), 'classSetCnt')
    },
    3: {
        glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        lookupCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        coverages: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111), 'glyphCount'),
        lookupRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($401800e36a580e62$var$LookupRecord, 'lookupCount')
    }
});
//######################################################
// Chaining Contextual Substitution/Positioning Tables #
//######################################################
let $401800e36a580e62$var$ChainRule = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    backtrackGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    backtrack: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'backtrackGlyphCount'),
    inputGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    input: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, (t)=>t.inputGlyphCount - 1
    ),
    lookaheadGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    lookahead: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'lookaheadGlyphCount'),
    lookupCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    lookupRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($401800e36a580e62$var$LookupRecord, 'lookupCount')
});
let $401800e36a580e62$var$ChainRuleSet = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$var$ChainRule), restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $401800e36a580e62$export$5e6d09e6861162f6 = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    1: {
        coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        chainCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        chainRuleSets: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$var$ChainRuleSet), 'chainCount')
    },
    2: {
        coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        backtrackClassDef: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$843d551fbbafef71),
        inputClassDef: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$843d551fbbafef71),
        lookaheadClassDef: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$843d551fbbafef71),
        chainCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        chainClassSet: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$var$ChainRuleSet), 'chainCount')
    },
    3: {
        backtrackGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        backtrackCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111), 'backtrackGlyphCount'),
        inputGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        inputCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111), 'inputGlyphCount'),
        lookaheadGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        lookaheadCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111), 'lookaheadGlyphCount'),
        lookupCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        lookupRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($401800e36a580e62$var$LookupRecord, 'lookupCount')
    }
});



/*******************
 * Variation Store *
 *******************/ let $421a2456cdbaa0d8$var$F2DOT14 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Fixed(16, 'BE', 14);
let $421a2456cdbaa0d8$var$RegionAxisCoordinates = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    startCoord: $421a2456cdbaa0d8$var$F2DOT14,
    peakCoord: $421a2456cdbaa0d8$var$F2DOT14,
    endCoord: $421a2456cdbaa0d8$var$F2DOT14
});
let $421a2456cdbaa0d8$var$VariationRegionList = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    axisCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    regionCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    variationRegions: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($421a2456cdbaa0d8$var$RegionAxisCoordinates, 'axisCount'), 'regionCount')
});
let $421a2456cdbaa0d8$var$DeltaSet = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    shortDeltas: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.int16, (t)=>t.parent.shortDeltaCount
    ),
    regionDeltas: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.int8, (t)=>t.parent.regionIndexCount - t.parent.shortDeltaCount
    ),
    deltas: (t)=>t.shortDeltas.concat(t.regionDeltas)
});
let $421a2456cdbaa0d8$var$ItemVariationData = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    itemCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    shortDeltaCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    regionIndexCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    regionIndexes: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'regionIndexCount'),
    deltaSets: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($421a2456cdbaa0d8$var$DeltaSet, 'itemCount')
});
let $421a2456cdbaa0d8$export$fe1b122a2710f241 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    format: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    variationRegionList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $421a2456cdbaa0d8$var$VariationRegionList),
    variationDataCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    itemVariationData: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $421a2456cdbaa0d8$var$ItemVariationData), 'variationDataCount')
});
/**********************
 * Feature Variations *
 **********************/ let $421a2456cdbaa0d8$var$ConditionTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    1: {
        axisIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        axisIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        filterRangeMinValue: $421a2456cdbaa0d8$var$F2DOT14,
        filterRangeMaxValue: $421a2456cdbaa0d8$var$F2DOT14
    }
});
let $421a2456cdbaa0d8$var$ConditionSet = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    conditionCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    conditionTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $421a2456cdbaa0d8$var$ConditionTable), 'conditionCount')
});
let $421a2456cdbaa0d8$var$FeatureTableSubstitutionRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    featureIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    alternateFeatureTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $401800e36a580e62$export$6e91cf7616333d5, {
        type: 'parent'
    })
});
let $421a2456cdbaa0d8$var$FeatureTableSubstitution = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    substitutionCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    substitutions: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($421a2456cdbaa0d8$var$FeatureTableSubstitutionRecord, 'substitutionCount')
});
let $421a2456cdbaa0d8$var$FeatureVariationRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    conditionSet: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $421a2456cdbaa0d8$var$ConditionSet, {
        type: 'parent'
    }),
    featureTableSubstitution: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $421a2456cdbaa0d8$var$FeatureTableSubstitution, {
        type: 'parent'
    })
});
let $421a2456cdbaa0d8$export$441b70b7971dd419 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    majorVersion: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    minorVersion: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    featureVariationRecordCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    featureVariationRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($421a2456cdbaa0d8$var$FeatureVariationRecord, 'featureVariationRecordCount')
});


// Checks if an operand is an index of a predefined value,
// otherwise delegates to the provided type.
class $3e41cd50e8921098$var$PredefinedOp {
    constructor(predefinedOps, type){
        this.predefinedOps = predefinedOps;
        this.type = type;
    }
    decode(stream, parent, operands) {
        if (this.predefinedOps[operands[0]]) return this.predefinedOps[operands[0]];
        return this.type.decode(stream, parent, operands);
    }
    size(value, ctx) {
        return this.type.size(value, ctx);
    }
    encode(stream, value, ctx) {
        let index = this.predefinedOps.indexOf(value);
        if (index !== -1) return index;
        return this.type.encode(stream, value, ctx);
    }
}
class $3e41cd50e8921098$var$CFFEncodingVersion extends restructure__WEBPACK_IMPORTED_MODULE_0__.Number {
    constructor(){
        super('UInt8');
    }
    decode(stream) {
        return restructure__WEBPACK_IMPORTED_MODULE_0__.uint8.decode(stream) & 0x7f;
    }
}
let $3e41cd50e8921098$var$Range1 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    first: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    nLeft: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8
});
let $3e41cd50e8921098$var$Range2 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    first: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    nLeft: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});
let $3e41cd50e8921098$var$CFFCustomEncoding = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(new $3e41cd50e8921098$var$CFFEncodingVersion(), {
    0: {
        nCodes: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
        codes: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, 'nCodes')
    },
    1: {
        nRanges: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
        ranges: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($3e41cd50e8921098$var$Range1, 'nRanges')
    }
});
let $3e41cd50e8921098$var$CFFEncoding = new $3e41cd50e8921098$var$PredefinedOp([
    $50148a3b88f16e26$export$dee0027060fa13bd,
    $50148a3b88f16e26$export$4f58f497e14a53c3
], new $6631a7581d654814$export$2e2bcd8739ae039($3e41cd50e8921098$var$CFFCustomEncoding, {
    lazy: true
}));
// Decodes an array of ranges until the total
// length is equal to the provided length.
class $3e41cd50e8921098$var$RangeArray extends restructure__WEBPACK_IMPORTED_MODULE_0__.Array {
    decode(stream, parent) {
        let length = (0,restructure_src_utils_js__WEBPACK_IMPORTED_MODULE_3__.resolveLength)(this.length, stream, parent);
        let count = 0;
        let res = [];
        while(count < length){
            let range = this.type.decode(stream, parent);
            range.offset = count;
            count += range.nLeft + 1;
            res.push(range);
        }
        return res;
    }
}
let $3e41cd50e8921098$var$CFFCustomCharset = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, {
    0: {
        glyphs: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, (t)=>t.parent.CharStrings.length - 1
        )
    },
    1: {
        ranges: new $3e41cd50e8921098$var$RangeArray($3e41cd50e8921098$var$Range1, (t)=>t.parent.CharStrings.length - 1
        )
    },
    2: {
        ranges: new $3e41cd50e8921098$var$RangeArray($3e41cd50e8921098$var$Range2, (t)=>t.parent.CharStrings.length - 1
        )
    }
});
let $3e41cd50e8921098$var$CFFCharset = new $3e41cd50e8921098$var$PredefinedOp([
    $a5fab60a6eadb8ed$export$c33b50336c234f16,
    $a5fab60a6eadb8ed$export$3ed0f9e1fee8d489,
    $a5fab60a6eadb8ed$export$dc28be11139d4120
], new $6631a7581d654814$export$2e2bcd8739ae039($3e41cd50e8921098$var$CFFCustomCharset, {
    lazy: true
}));
let $3e41cd50e8921098$var$FDRange3 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    first: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    fd: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8
});
let $3e41cd50e8921098$var$FDRange4 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    first: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    fd: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});
let $3e41cd50e8921098$var$FDSelect = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, {
    0: {
        fds: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, (t)=>t.parent.CharStrings.length
        )
    },
    3: {
        nRanges: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        ranges: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($3e41cd50e8921098$var$FDRange3, 'nRanges'),
        sentinel: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
    },
    4: {
        nRanges: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        ranges: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($3e41cd50e8921098$var$FDRange4, 'nRanges'),
        sentinel: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32
    }
});
let $3e41cd50e8921098$var$ptr = new $6631a7581d654814$export$2e2bcd8739ae039($94c2c7ed7c236891$export$2e2bcd8739ae039);
class $3e41cd50e8921098$var$CFFPrivateOp {
    decode(stream, parent, operands) {
        parent.length = operands[0];
        return $3e41cd50e8921098$var$ptr.decode(stream, parent, [
            operands[1]
        ]);
    }
    size(dict, ctx) {
        return [
            $94c2c7ed7c236891$export$2e2bcd8739ae039.size(dict, ctx, false),
            $3e41cd50e8921098$var$ptr.size(dict, ctx)[0]
        ];
    }
    encode(stream, dict, ctx) {
        return [
            $94c2c7ed7c236891$export$2e2bcd8739ae039.size(dict, ctx, false),
            $3e41cd50e8921098$var$ptr.encode(stream, dict, ctx)[0]
        ];
    }
}
let $3e41cd50e8921098$var$FontDict = new $1694c4b242cd1a66$export$2e2bcd8739ae039([
    // key       name                   type(s)                                 default
    [
        18,
        'Private',
        new $3e41cd50e8921098$var$CFFPrivateOp,
        null
    ],
    [
        [
            12,
            38
        ],
        'FontName',
        'sid',
        null
    ],
    [
        [
            12,
            7
        ],
        'FontMatrix',
        'array',
        [
            0.001,
            0,
            0,
            0.001,
            0,
            0
        ]
    ],
    [
        [
            12,
            5
        ],
        'PaintType',
        'number',
        0
    ], 
]);
let $3e41cd50e8921098$var$CFFTopDict = new $1694c4b242cd1a66$export$2e2bcd8739ae039([
    // key       name                   type(s)                                 default
    [
        [
            12,
            30
        ],
        'ROS',
        [
            'sid',
            'sid',
            'number'
        ],
        null
    ],
    [
        0,
        'version',
        'sid',
        null
    ],
    [
        1,
        'Notice',
        'sid',
        null
    ],
    [
        [
            12,
            0
        ],
        'Copyright',
        'sid',
        null
    ],
    [
        2,
        'FullName',
        'sid',
        null
    ],
    [
        3,
        'FamilyName',
        'sid',
        null
    ],
    [
        4,
        'Weight',
        'sid',
        null
    ],
    [
        [
            12,
            1
        ],
        'isFixedPitch',
        'boolean',
        false
    ],
    [
        [
            12,
            2
        ],
        'ItalicAngle',
        'number',
        0
    ],
    [
        [
            12,
            3
        ],
        'UnderlinePosition',
        'number',
        -100
    ],
    [
        [
            12,
            4
        ],
        'UnderlineThickness',
        'number',
        50
    ],
    [
        [
            12,
            5
        ],
        'PaintType',
        'number',
        0
    ],
    [
        [
            12,
            6
        ],
        'CharstringType',
        'number',
        2
    ],
    [
        [
            12,
            7
        ],
        'FontMatrix',
        'array',
        [
            0.001,
            0,
            0,
            0.001,
            0,
            0
        ]
    ],
    [
        13,
        'UniqueID',
        'number',
        null
    ],
    [
        5,
        'FontBBox',
        'array',
        [
            0,
            0,
            0,
            0
        ]
    ],
    [
        [
            12,
            8
        ],
        'StrokeWidth',
        'number',
        0
    ],
    [
        14,
        'XUID',
        'array',
        null
    ],
    [
        15,
        'charset',
        $3e41cd50e8921098$var$CFFCharset,
        $a5fab60a6eadb8ed$export$c33b50336c234f16
    ],
    [
        16,
        'Encoding',
        $3e41cd50e8921098$var$CFFEncoding,
        $50148a3b88f16e26$export$dee0027060fa13bd
    ],
    [
        17,
        'CharStrings',
        new $6631a7581d654814$export$2e2bcd8739ae039(new $6333f51d822e64a1$export$2e2bcd8739ae039),
        null
    ],
    [
        18,
        'Private',
        new $3e41cd50e8921098$var$CFFPrivateOp,
        null
    ],
    [
        [
            12,
            20
        ],
        'SyntheticBase',
        'number',
        null
    ],
    [
        [
            12,
            21
        ],
        'PostScript',
        'sid',
        null
    ],
    [
        [
            12,
            22
        ],
        'BaseFontName',
        'sid',
        null
    ],
    [
        [
            12,
            23
        ],
        'BaseFontBlend',
        'delta',
        null
    ],
    // CID font specific
    [
        [
            12,
            31
        ],
        'CIDFontVersion',
        'number',
        0
    ],
    [
        [
            12,
            32
        ],
        'CIDFontRevision',
        'number',
        0
    ],
    [
        [
            12,
            33
        ],
        'CIDFontType',
        'number',
        0
    ],
    [
        [
            12,
            34
        ],
        'CIDCount',
        'number',
        8720
    ],
    [
        [
            12,
            35
        ],
        'UIDBase',
        'number',
        null
    ],
    [
        [
            12,
            37
        ],
        'FDSelect',
        new $6631a7581d654814$export$2e2bcd8739ae039($3e41cd50e8921098$var$FDSelect),
        null
    ],
    [
        [
            12,
            36
        ],
        'FDArray',
        new $6631a7581d654814$export$2e2bcd8739ae039(new $6333f51d822e64a1$export$2e2bcd8739ae039($3e41cd50e8921098$var$FontDict)),
        null
    ],
    [
        [
            12,
            38
        ],
        'FontName',
        'sid',
        null
    ]
]);
let $3e41cd50e8921098$var$VariationStore = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    itemVariationStore: $421a2456cdbaa0d8$export$fe1b122a2710f241
});
let $3e41cd50e8921098$var$CFF2TopDict = new $1694c4b242cd1a66$export$2e2bcd8739ae039([
    [
        [
            12,
            7
        ],
        'FontMatrix',
        'array',
        [
            0.001,
            0,
            0,
            0.001,
            0,
            0
        ]
    ],
    [
        17,
        'CharStrings',
        new $6631a7581d654814$export$2e2bcd8739ae039(new $6333f51d822e64a1$export$2e2bcd8739ae039),
        null
    ],
    [
        [
            12,
            37
        ],
        'FDSelect',
        new $6631a7581d654814$export$2e2bcd8739ae039($3e41cd50e8921098$var$FDSelect),
        null
    ],
    [
        [
            12,
            36
        ],
        'FDArray',
        new $6631a7581d654814$export$2e2bcd8739ae039(new $6333f51d822e64a1$export$2e2bcd8739ae039($3e41cd50e8921098$var$FontDict)),
        null
    ],
    [
        24,
        'vstore',
        new $6631a7581d654814$export$2e2bcd8739ae039($3e41cd50e8921098$var$VariationStore),
        null
    ],
    [
        25,
        'maxstack',
        'number',
        193
    ]
]);
let $3e41cd50e8921098$var$CFFTop = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.fixed16, {
    1: {
        hdrSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
        offSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
        nameIndex: new $6333f51d822e64a1$export$2e2bcd8739ae039(new restructure__WEBPACK_IMPORTED_MODULE_0__.String('length')),
        topDictIndex: new $6333f51d822e64a1$export$2e2bcd8739ae039($3e41cd50e8921098$var$CFFTopDict),
        stringIndex: new $6333f51d822e64a1$export$2e2bcd8739ae039(new restructure__WEBPACK_IMPORTED_MODULE_0__.String('length')),
        globalSubrIndex: new $6333f51d822e64a1$export$2e2bcd8739ae039
    },
    2: {
        hdrSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
        length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        topDict: $3e41cd50e8921098$var$CFF2TopDict,
        globalSubrIndex: new $6333f51d822e64a1$export$2e2bcd8739ae039
    }
});
var $3e41cd50e8921098$export$2e2bcd8739ae039 = $3e41cd50e8921098$var$CFFTop;




class $8770fc79268fa3c2$var$CFFFont {
    constructor(stream){
        this.stream = stream;
        this.decode();
    }
    static decode(stream) {
        return new $8770fc79268fa3c2$var$CFFFont(stream);
    }
    decode() {
        let start = this.stream.pos;
        let top = $3e41cd50e8921098$export$2e2bcd8739ae039.decode(this.stream);
        for(let key in top){
            let val = top[key];
            this[key] = val;
        }
        if (this.version < 2) {
            if (this.topDictIndex.length !== 1) throw new Error("Only a single font is allowed in CFF");
            this.topDict = this.topDictIndex[0];
        }
        this.isCIDFont = this.topDict.ROS != null;
        return this;
    }
    string(sid) {
        if (this.version >= 2) return null;
        if (sid < $276d3ff37a4362c9$export$2e2bcd8739ae039.length) return $276d3ff37a4362c9$export$2e2bcd8739ae039[sid];
        return this.stringIndex[sid - $276d3ff37a4362c9$export$2e2bcd8739ae039.length];
    }
    get postscriptName() {
        if (this.version < 2) return this.nameIndex[0];
        return null;
    }
    get fullName() {
        return this.string(this.topDict.FullName);
    }
    get familyName() {
        return this.string(this.topDict.FamilyName);
    }
    getCharString(glyph) {
        this.stream.pos = this.topDict.CharStrings[glyph].offset;
        return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);
    }
    getGlyphName(gid) {
        // CFF2 glyph names are in the post table.
        if (this.version >= 2) return null;
        // CID-keyed fonts don't have glyph names
        if (this.isCIDFont) return null;
        let { charset: charset  } = this.topDict;
        if (Array.isArray(charset)) return charset[gid];
        if (gid === 0) return '.notdef';
        gid -= 1;
        switch(charset.version){
            case 0:
                return this.string(charset.glyphs[gid]);
            case 1:
            case 2:
                for(let i = 0; i < charset.ranges.length; i++){
                    let range = charset.ranges[i];
                    if (range.offset <= gid && gid <= range.offset + range.nLeft) return this.string(range.first + (gid - range.offset));
                }
                break;
        }
        return null;
    }
    fdForGlyph(gid) {
        if (!this.topDict.FDSelect) return null;
        switch(this.topDict.FDSelect.version){
            case 0:
                return this.topDict.FDSelect.fds[gid];
            case 3:
            case 4:
                let { ranges: ranges  } = this.topDict.FDSelect;
                let low = 0;
                let high = ranges.length - 1;
                while(low <= high){
                    let mid = low + high >> 1;
                    if (gid < ranges[mid].first) high = mid - 1;
                    else if (mid < high && gid >= ranges[mid + 1].first) low = mid + 1;
                    else return ranges[mid].fd;
                }
            default:
                throw new Error(\`Unknown FDSelect version: \${this.topDict.FDSelect.version}\`);
        }
    }
    privateDictForGlyph(gid) {
        if (this.topDict.FDSelect) {
            let fd = this.fdForGlyph(gid);
            if (this.topDict.FDArray[fd]) return this.topDict.FDArray[fd].Private;
            return null;
        }
        if (this.version < 2) return this.topDict.Private;
        return this.topDict.FDArray[0].Private;
    }
}
var $8770fc79268fa3c2$export$2e2bcd8739ae039 = $8770fc79268fa3c2$var$CFFFont;



let $79f2eb50e4490e51$var$VerticalOrigin = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    glyphIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    vertOriginY: restructure__WEBPACK_IMPORTED_MODULE_0__.int16
});
var $79f2eb50e4490e51$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    majorVersion: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    minorVersion: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    defaultVertOriginY: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    numVertOriginYMetrics: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    metrics: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($79f2eb50e4490e51$var$VerticalOrigin, 'numVertOriginYMetrics')
});




let $9dd3c2ae0a322c53$export$16b227cb15d716a0 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    height: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    width: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    horiBearingX: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    horiBearingY: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    horiAdvance: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    vertBearingX: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    vertBearingY: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    vertAdvance: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8
});
let $9dd3c2ae0a322c53$export$62c53e75f69bfe12 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    height: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    width: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    bearingX: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    bearingY: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    advance: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8
});
let $9dd3c2ae0a322c53$var$EBDTComponent = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    glyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    xOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    yOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.int8
});
class $9dd3c2ae0a322c53$var$ByteAligned {
}
class $9dd3c2ae0a322c53$var$BitAligned {
}
let $9dd3c2ae0a322c53$export$f1f5ddeb20d14f = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct('version', {
    1: {
        metrics: $9dd3c2ae0a322c53$export$62c53e75f69bfe12,
        data: $9dd3c2ae0a322c53$var$ByteAligned
    },
    2: {
        metrics: $9dd3c2ae0a322c53$export$62c53e75f69bfe12,
        data: $9dd3c2ae0a322c53$var$BitAligned
    },
    // format 3 is deprecated
    // format 4 is not supported by Microsoft
    5: {
        data: $9dd3c2ae0a322c53$var$BitAligned
    },
    6: {
        metrics: $9dd3c2ae0a322c53$export$16b227cb15d716a0,
        data: $9dd3c2ae0a322c53$var$ByteAligned
    },
    7: {
        metrics: $9dd3c2ae0a322c53$export$16b227cb15d716a0,
        data: $9dd3c2ae0a322c53$var$BitAligned
    },
    8: {
        metrics: $9dd3c2ae0a322c53$export$62c53e75f69bfe12,
        pad: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8),
        numComponents: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        components: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($9dd3c2ae0a322c53$var$EBDTComponent, 'numComponents')
    },
    9: {
        metrics: $9dd3c2ae0a322c53$export$16b227cb15d716a0,
        pad: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8),
        numComponents: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        components: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($9dd3c2ae0a322c53$var$EBDTComponent, 'numComponents')
    },
    17: {
        metrics: $9dd3c2ae0a322c53$export$62c53e75f69bfe12,
        dataLen: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        data: new restructure__WEBPACK_IMPORTED_MODULE_0__.Buffer('dataLen')
    },
    18: {
        metrics: $9dd3c2ae0a322c53$export$16b227cb15d716a0,
        dataLen: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        data: new restructure__WEBPACK_IMPORTED_MODULE_0__.Buffer('dataLen')
    },
    19: {
        dataLen: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        data: new restructure__WEBPACK_IMPORTED_MODULE_0__.Buffer('dataLen')
    }
});


let $234c291eab07e474$var$SBitLineMetrics = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    ascender: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    descender: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    widthMax: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    caretSlopeNumerator: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    caretSlopeDenominator: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    caretOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    minOriginSB: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    minAdvanceSB: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    maxBeforeBL: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    minAfterBL: restructure__WEBPACK_IMPORTED_MODULE_0__.int8,
    pad: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.int8, 2)
});
let $234c291eab07e474$var$CodeOffsetPair = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    glyphCode: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    offset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});
let $234c291eab07e474$var$IndexSubtable = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    header: {
        imageFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        imageDataOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32
    },
    1: {
        offsetArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, (t)=>t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1
        )
    },
    2: {
        imageSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        bigMetrics: $9dd3c2ae0a322c53$export$16b227cb15d716a0
    },
    3: {
        offsetArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, (t)=>t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1
        )
    },
    4: {
        numGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        glyphArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($234c291eab07e474$var$CodeOffsetPair, (t)=>t.numGlyphs + 1
        )
    },
    5: {
        imageSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        bigMetrics: $9dd3c2ae0a322c53$export$16b227cb15d716a0,
        numGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        glyphCodeArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'numGlyphs')
    }
});
let $234c291eab07e474$var$IndexSubtableArray = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    firstGlyphIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    lastGlyphIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    subtable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $234c291eab07e474$var$IndexSubtable)
});
let $234c291eab07e474$var$BitmapSizeTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    indexSubTableArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($234c291eab07e474$var$IndexSubtableArray, 1), {
        type: 'parent'
    }),
    indexTablesSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    numberOfIndexSubTables: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    colorRef: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    hori: $234c291eab07e474$var$SBitLineMetrics,
    vert: $234c291eab07e474$var$SBitLineMetrics,
    startGlyphIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    endGlyphIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    ppemX: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    ppemY: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    bitDepth: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    flags: new restructure__WEBPACK_IMPORTED_MODULE_0__.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, [
        'horizontal',
        'vertical'
    ])
});
var $234c291eab07e474$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    numSizes: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    sizes: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($234c291eab07e474$var$BitmapSizeTable, 'numSizes')
});



let $55d04373f0cac44e$var$ImageTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    ppem: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    resolution: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    imageOffsets: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, 'void'), (t)=>t.parent.parent.maxp.numGlyphs + 1
    )
});
var // This is the Apple sbix table, used by the "Apple Color Emoji" font.
// It includes several image tables with images for each bitmap glyph
// of several different sizes.
$55d04373f0cac44e$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    flags: new restructure__WEBPACK_IMPORTED_MODULE_0__.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, [
        'renderOutlines'
    ]),
    numImgTables: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    imageTables: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $55d04373f0cac44e$var$ImageTable), 'numImgTables')
});



let $0e59eccfa3005d9d$var$LayerRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    gid: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    paletteIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16 // Index value to use in the appropriate palette. This value must
}); // be less than numPaletteEntries in the CPAL table, except for
// the special case noted below. Each palette entry is 16 bits.
// A palette index of 0xFFFF is a special case indicating that
// the text foreground color should be used.
let $0e59eccfa3005d9d$var$BaseGlyphRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    gid: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    // and is not rendered for color.
    firstLayerIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    // There will be numLayers consecutive entries for this base glyph.
    numLayers: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});
var $0e59eccfa3005d9d$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    numBaseGlyphRecords: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    baseGlyphRecord: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($0e59eccfa3005d9d$var$BaseGlyphRecord, 'numBaseGlyphRecords')),
    layerRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($0e59eccfa3005d9d$var$LayerRecord, 'numLayerRecords'), {
        lazy: true
    }),
    numLayerRecords: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});



let $23affa36a12f7915$var$ColorRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    blue: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    green: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    red: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    alpha: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8
});
var $23affa36a12f7915$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    header: {
        numPaletteEntries: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        numPalettes: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        numColorRecords: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        colorRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($23affa36a12f7915$var$ColorRecord, 'numColorRecords')),
        colorRecordIndices: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'numPalettes')
    },
    0: {},
    1: {
        offsetPaletteTypeArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, 'numPalettes')),
        offsetPaletteLabelArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'numPalettes')),
        offsetPaletteEntryLabelArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'numPaletteEntries'))
    }
});





let $9fffe61eb0785f74$var$BaseCoord = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    1: {
        coordinate: restructure__WEBPACK_IMPORTED_MODULE_0__.int16 // X or Y value, in design units
    },
    2: {
        coordinate: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        referenceGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        baseCoordPoint: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16 // Index of contour point on the referenceGlyph
    },
    3: {
        coordinate: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        deviceTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$8215d14a63d9fb10) // Device table for X or Y value
    }
});
let $9fffe61eb0785f74$var$BaseValues = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    defaultIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    baseCoordCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    baseCoords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$BaseCoord), 'baseCoordCount')
});
let $9fffe61eb0785f74$var$FeatMinMaxRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    minCoord: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$BaseCoord, {
        type: 'parent'
    }),
    maxCoord: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$BaseCoord, {
        type: 'parent'
    }) // May be NULL
});
let $9fffe61eb0785f74$var$MinMax = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    minCoord: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$BaseCoord),
    maxCoord: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$BaseCoord),
    featMinMaxCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    featMinMaxRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($9fffe61eb0785f74$var$FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order
});
let $9fffe61eb0785f74$var$BaseLangSysRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    minMax: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$MinMax, {
        type: 'parent'
    })
});
let $9fffe61eb0785f74$var$BaseScript = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    baseValues: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$BaseValues),
    defaultMinMax: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$MinMax),
    baseLangSysCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    baseLangSysRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($9fffe61eb0785f74$var$BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag
});
let $9fffe61eb0785f74$var$BaseScriptRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    script: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$BaseScript, {
        type: 'parent'
    })
});
let $9fffe61eb0785f74$var$BaseScriptList = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($9fffe61eb0785f74$var$BaseScriptRecord, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
// Array of 4-byte baseline identification tags-must be in alphabetical order
let $9fffe61eb0785f74$var$BaseTagList = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4), restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $9fffe61eb0785f74$var$Axis = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    baseTagList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$BaseTagList),
    baseScriptList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$BaseScriptList)
});
var $9fffe61eb0785f74$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, {
    header: {
        horizAxis: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$Axis),
        vertAxis: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $9fffe61eb0785f74$var$Axis) // May be NULL
    },
    0x00010000: {},
    0x00010001: {
        itemVariationStore: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $421a2456cdbaa0d8$export$fe1b122a2710f241)
    }
});





let $418face38567ee6e$var$AttachPoint = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $418face38567ee6e$var$AttachList = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
    glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    attachPoints: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $418face38567ee6e$var$AttachPoint), 'glyphCount')
});
let $418face38567ee6e$var$CaretValue = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    1: {
        coordinate: restructure__WEBPACK_IMPORTED_MODULE_0__.int16
    },
    2: {
        caretValuePoint: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
    },
    3: {
        coordinate: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        deviceTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$8215d14a63d9fb10)
    }
});
let $418face38567ee6e$var$LigGlyph = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $418face38567ee6e$var$CaretValue), restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $418face38567ee6e$var$LigCaretList = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
    ligGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    ligGlyphs: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $418face38567ee6e$var$LigGlyph), 'ligGlyphCount')
});
let $418face38567ee6e$var$MarkGlyphSetsDef = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    markSetTableFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    markSetCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $401800e36a580e62$export$17608c3f81a6111), 'markSetCount')
});
var $418face38567ee6e$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, {
    header: {
        glyphClassDef: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$843d551fbbafef71),
        attachList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $418face38567ee6e$var$AttachList),
        ligCaretList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $418face38567ee6e$var$LigCaretList),
        markAttachClassDef: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$843d551fbbafef71)
    },
    0x00010000: {},
    0x00010002: {
        markGlyphSetsDef: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $418face38567ee6e$var$MarkGlyphSetsDef)
    },
    0x00010003: {
        markGlyphSetsDef: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $418face38567ee6e$var$MarkGlyphSetsDef),
        itemVariationStore: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $421a2456cdbaa0d8$export$fe1b122a2710f241)
    }
});





let $010e157f6d8a40e9$var$ValueFormat = new restructure__WEBPACK_IMPORTED_MODULE_0__.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, [
    'xPlacement',
    'yPlacement',
    'xAdvance',
    'yAdvance',
    'xPlaDevice',
    'yPlaDevice',
    'xAdvDevice',
    'yAdvDevice'
]);
let $010e157f6d8a40e9$var$types = {
    xPlacement: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    yPlacement: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    xAdvance: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    yAdvance: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    xPlaDevice: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$8215d14a63d9fb10, {
        type: 'global',
        relativeTo: (ctx)=>ctx.rel
    }),
    yPlaDevice: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$8215d14a63d9fb10, {
        type: 'global',
        relativeTo: (ctx)=>ctx.rel
    }),
    xAdvDevice: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$8215d14a63d9fb10, {
        type: 'global',
        relativeTo: (ctx)=>ctx.rel
    }),
    yAdvDevice: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$8215d14a63d9fb10, {
        type: 'global',
        relativeTo: (ctx)=>ctx.rel
    })
};
class $010e157f6d8a40e9$var$ValueRecord {
    constructor(key = 'valueFormat'){
        this.key = key;
    }
    buildStruct(parent) {
        let struct = parent;
        while(!struct[this.key] && struct.parent)struct = struct.parent;
        if (!struct[this.key]) return;
        let fields = {};
        fields.rel = ()=>struct._startOffset
        ;
        let format = struct[this.key];
        for(let key in format)if (format[key]) fields[key] = $010e157f6d8a40e9$var$types[key];
        return new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct(fields);
    }
    size(val, ctx) {
        return this.buildStruct(ctx).size(val, ctx);
    }
    decode(stream, parent) {
        let res = this.buildStruct(parent).decode(stream, parent);
        delete res.rel;
        return res;
    }
}
let $010e157f6d8a40e9$var$PairValueRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    secondGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    value1: new $010e157f6d8a40e9$var$ValueRecord('valueFormat1'),
    value2: new $010e157f6d8a40e9$var$ValueRecord('valueFormat2')
});
let $010e157f6d8a40e9$var$PairSet = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($010e157f6d8a40e9$var$PairValueRecord, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $010e157f6d8a40e9$var$Class2Record = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    value1: new $010e157f6d8a40e9$var$ValueRecord('valueFormat1'),
    value2: new $010e157f6d8a40e9$var$ValueRecord('valueFormat2')
});
let $010e157f6d8a40e9$var$Anchor = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    1: {
        xCoordinate: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        yCoordinate: restructure__WEBPACK_IMPORTED_MODULE_0__.int16
    },
    2: {
        xCoordinate: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        yCoordinate: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        anchorPoint: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
    },
    3: {
        xCoordinate: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        yCoordinate: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
        xDeviceTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$8215d14a63d9fb10),
        yDeviceTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$8215d14a63d9fb10)
    }
});
let $010e157f6d8a40e9$var$EntryExitRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    entryAnchor: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$Anchor, {
        type: 'parent'
    }),
    exitAnchor: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$Anchor, {
        type: 'parent'
    })
});
let $010e157f6d8a40e9$var$MarkRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    class: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    markAnchor: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$Anchor, {
        type: 'parent'
    })
});
let $010e157f6d8a40e9$var$MarkArray = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($010e157f6d8a40e9$var$MarkRecord, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $010e157f6d8a40e9$var$BaseRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$Anchor), (t)=>t.parent.classCount
);
let $010e157f6d8a40e9$var$BaseArray = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($010e157f6d8a40e9$var$BaseRecord, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $010e157f6d8a40e9$var$ComponentRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$Anchor), (t)=>t.parent.parent.classCount
);
let $010e157f6d8a40e9$var$LigatureAttach = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($010e157f6d8a40e9$var$ComponentRecord, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $010e157f6d8a40e9$var$LigatureArray = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$LigatureAttach), restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $010e157f6d8a40e9$export$73a8cfb19cd43a0f = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct('lookupType', {
    1: new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
        1: {
            coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
            valueFormat: $010e157f6d8a40e9$var$ValueFormat,
            value: new $010e157f6d8a40e9$var$ValueRecord()
        },
        2: {
            coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
            valueFormat: $010e157f6d8a40e9$var$ValueFormat,
            valueCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
            values: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(new $010e157f6d8a40e9$var$ValueRecord(), 'valueCount')
        }
    }),
    2: new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
        1: {
            coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
            valueFormat1: $010e157f6d8a40e9$var$ValueFormat,
            valueFormat2: $010e157f6d8a40e9$var$ValueFormat,
            pairSetCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
            pairSets: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$PairSet), 'pairSetCount')
        },
        2: {
            coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
            valueFormat1: $010e157f6d8a40e9$var$ValueFormat,
            valueFormat2: $010e157f6d8a40e9$var$ValueFormat,
            classDef1: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$843d551fbbafef71),
            classDef2: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$843d551fbbafef71),
            class1Count: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
            class2Count: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
            classRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray($010e157f6d8a40e9$var$Class2Record, 'class2Count'), 'class1Count')
        }
    }),
    3: {
        format: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        entryExitCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        entryExitRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($010e157f6d8a40e9$var$EntryExitRecord, 'entryExitCount')
    },
    4: {
        format: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        markCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        baseCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        classCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        markArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$MarkArray),
        baseArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$BaseArray)
    },
    5: {
        format: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        markCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        ligatureCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        classCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        markArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$MarkArray),
        ligatureArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$LigatureArray)
    },
    6: {
        format: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        mark1Coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        mark2Coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        classCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        mark1Array: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$MarkArray),
        mark2Array: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $010e157f6d8a40e9$var$BaseArray)
    },
    7: $401800e36a580e62$export$841858b892ce1f4c,
    8: $401800e36a580e62$export$5e6d09e6861162f6,
    9: {
        posFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        lookupType: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        extension: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, null)
    }
});
// Fix circular reference
$010e157f6d8a40e9$export$73a8cfb19cd43a0f.versions[9].extension.type = $010e157f6d8a40e9$export$73a8cfb19cd43a0f;
var $010e157f6d8a40e9$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, {
    header: {
        scriptList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$3e15fc05ce864229),
        featureList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$aa18130def4b6cb4),
        lookupList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, new $401800e36a580e62$export$df0008c6ff2da22a($010e157f6d8a40e9$export$73a8cfb19cd43a0f))
    },
    0x00010000: {},
    0x00010001: {
        featureVariations: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $421a2456cdbaa0d8$export$441b70b7971dd419)
    }
});





let $7176ea6bb7dcf1c6$var$Sequence = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $7176ea6bb7dcf1c6$var$AlternateSet = $7176ea6bb7dcf1c6$var$Sequence;
let $7176ea6bb7dcf1c6$var$Ligature = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    glyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    compCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    components: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, (t)=>t.compCount - 1
    )
});
let $7176ea6bb7dcf1c6$var$LigatureSet = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $7176ea6bb7dcf1c6$var$Ligature), restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $7176ea6bb7dcf1c6$var$GSUBLookup = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct('lookupType', {
    1: new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
        1: {
            coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
            deltaGlyphID: restructure__WEBPACK_IMPORTED_MODULE_0__.int16
        },
        2: {
            coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
            glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
            substitute: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'glyphCount')
        }
    }),
    2: {
        substFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        count: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        sequences: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $7176ea6bb7dcf1c6$var$Sequence), 'count')
    },
    3: {
        substFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        count: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        alternateSet: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $7176ea6bb7dcf1c6$var$AlternateSet), 'count')
    },
    4: {
        substFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        count: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        ligatureSets: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $7176ea6bb7dcf1c6$var$LigatureSet), 'count')
    },
    5: $401800e36a580e62$export$841858b892ce1f4c,
    6: $401800e36a580e62$export$5e6d09e6861162f6,
    7: {
        substFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        lookupType: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        extension: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, null)
    },
    8: {
        substFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111),
        backtrackCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111), 'backtrackGlyphCount'),
        lookaheadGlyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        lookaheadCoverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$17608c3f81a6111), 'lookaheadGlyphCount'),
        glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        substitutes: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'glyphCount')
    }
});
// Fix circular reference
$7176ea6bb7dcf1c6$var$GSUBLookup.versions[7].extension.type = $7176ea6bb7dcf1c6$var$GSUBLookup;
var $7176ea6bb7dcf1c6$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, {
    header: {
        scriptList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$3e15fc05ce864229),
        featureList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $401800e36a580e62$export$aa18130def4b6cb4),
        lookupList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, new $401800e36a580e62$export$df0008c6ff2da22a($7176ea6bb7dcf1c6$var$GSUBLookup))
    },
    0x00010000: {},
    0x00010001: {
        featureVariations: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $421a2456cdbaa0d8$export$441b70b7971dd419)
    }
});





let $71e9e74bb6366bce$var$JstfGSUBModList = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $71e9e74bb6366bce$var$JstfPriority = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    shrinkageEnableGSUB: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $71e9e74bb6366bce$var$JstfGSUBModList),
    shrinkageDisableGSUB: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $71e9e74bb6366bce$var$JstfGSUBModList),
    shrinkageEnableGPOS: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $71e9e74bb6366bce$var$JstfGSUBModList),
    shrinkageDisableGPOS: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $71e9e74bb6366bce$var$JstfGSUBModList),
    shrinkageJstfMax: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, new $401800e36a580e62$export$df0008c6ff2da22a($010e157f6d8a40e9$export$73a8cfb19cd43a0f)),
    extensionEnableGSUB: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $71e9e74bb6366bce$var$JstfGSUBModList),
    extensionDisableGSUB: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $71e9e74bb6366bce$var$JstfGSUBModList),
    extensionEnableGPOS: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $71e9e74bb6366bce$var$JstfGSUBModList),
    extensionDisableGPOS: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $71e9e74bb6366bce$var$JstfGSUBModList),
    extensionJstfMax: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, new $401800e36a580e62$export$df0008c6ff2da22a($010e157f6d8a40e9$export$73a8cfb19cd43a0f))
});
let $71e9e74bb6366bce$var$JstfLangSys = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $71e9e74bb6366bce$var$JstfPriority), restructure__WEBPACK_IMPORTED_MODULE_0__.uint16);
let $71e9e74bb6366bce$var$JstfLangSysRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    jstfLangSys: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $71e9e74bb6366bce$var$JstfLangSys)
});
let $71e9e74bb6366bce$var$JstfScript = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    extenderGlyphs: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16)),
    defaultLangSys: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $71e9e74bb6366bce$var$JstfLangSys),
    langSysCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    langSysRecords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($71e9e74bb6366bce$var$JstfLangSysRecord, 'langSysCount')
});
let $71e9e74bb6366bce$var$JstfScriptRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    script: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $71e9e74bb6366bce$var$JstfScript, {
        type: 'parent'
    })
});
var $71e9e74bb6366bce$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    scriptCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    scriptList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($71e9e74bb6366bce$var$JstfScriptRecord, 'scriptCount')
});





// TODO: add this to restructure
class $706225b6909f9418$var$VariableSizeNumber {
    constructor(size){
        this._size = size;
    }
    decode(stream, parent) {
        switch(this.size(0, parent)){
            case 1:
                return stream.readUInt8();
            case 2:
                return stream.readUInt16BE();
            case 3:
                return stream.readUInt24BE();
            case 4:
                return stream.readUInt32BE();
        }
    }
    size(val, parent) {
        return (0,restructure_src_utils_js__WEBPACK_IMPORTED_MODULE_3__.resolveLength)(this._size, null, parent);
    }
}
let $706225b6909f9418$var$MapDataEntry = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    entry: new $706225b6909f9418$var$VariableSizeNumber((t)=>((t.parent.entryFormat & 0x0030) >> 4) + 1
    ),
    outerIndex: (t)=>t.entry >> (t.parent.entryFormat & 0x000F) + 1
    ,
    innerIndex: (t)=>t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1
});
let $706225b6909f9418$var$DeltaSetIndexMap = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    entryFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    mapCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    mapData: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($706225b6909f9418$var$MapDataEntry, 'mapCount')
});
var $706225b6909f9418$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    majorVersion: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    minorVersion: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    itemVariationStore: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $421a2456cdbaa0d8$export$fe1b122a2710f241),
    advanceWidthMapping: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $706225b6909f9418$var$DeltaSetIndexMap),
    LSBMapping: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $706225b6909f9418$var$DeltaSetIndexMap),
    RSBMapping: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $706225b6909f9418$var$DeltaSetIndexMap)
});



let $4a144b8ae6f53b7c$var$Signature = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    format: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    offset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32
});
let $4a144b8ae6f53b7c$var$SignatureBlock = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 2),
    cbSignature: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    signature: new restructure__WEBPACK_IMPORTED_MODULE_0__.Buffer('cbSignature')
});
var $4a144b8ae6f53b7c$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    ulVersion: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    usNumSigs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    usFlag: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    signatures: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($4a144b8ae6f53b7c$var$Signature, 'usNumSigs'),
    signatureBlocks: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($4a144b8ae6f53b7c$var$SignatureBlock, 'usNumSigs')
});



let $a2086c3965d7b105$var$GaspRange = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    rangeMaxPPEM: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    rangeGaspBehavior: new restructure__WEBPACK_IMPORTED_MODULE_0__.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, [
        'grayscale',
        'gridfit',
        'symmetricSmoothing',
        'symmetricGridfit' // only in version 1, for ClearType
    ])
});
var $a2086c3965d7b105$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    numRanges: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    gaspRanges: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($a2086c3965d7b105$var$GaspRange, 'numRanges') // Sorted by ppem
});



let $de83746c6c1c8559$var$DeviceRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    pixelSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    maximumWidth: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    widths: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, (t)=>t.parent.parent.maxp.numGlyphs
    )
});
var // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes
$de83746c6c1c8559$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    numRecords: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    sizeDeviceRecord: restructure__WEBPACK_IMPORTED_MODULE_0__.int32,
    records: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($de83746c6c1c8559$var$DeviceRecord, 'numRecords')
});



let $5a2237650c44652a$var$KernPair = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    left: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    right: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    value: restructure__WEBPACK_IMPORTED_MODULE_0__.int16
});
let $5a2237650c44652a$var$ClassTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    firstGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    nGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    offsets: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'nGlyphs'),
    max: (t)=>t.offsets.length && Math.max.apply(Math, t.offsets)
});
let $5a2237650c44652a$var$Kern2Array = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    off: (t)=>t._startOffset - t.parent.parent._startOffset
    ,
    len: (t)=>((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2)
    ,
    values: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.int16, 'len')
});
let $5a2237650c44652a$var$KernSubtable = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct('format', {
    0: {
        nPairs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        searchRange: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        entrySelector: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        rangeShift: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        pairs: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($5a2237650c44652a$var$KernPair, 'nPairs')
    },
    2: {
        rowWidth: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        leftTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $5a2237650c44652a$var$ClassTable, {
            type: 'parent'
        }),
        rightTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $5a2237650c44652a$var$ClassTable, {
            type: 'parent'
        }),
        array: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $5a2237650c44652a$var$Kern2Array, {
            type: 'parent'
        })
    },
    3: {
        glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        kernValueCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
        leftClassCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
        rightClassCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
        flags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
        kernValue: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.int16, 'kernValueCount'),
        leftClass: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, 'glyphCount'),
        rightClass: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, 'glyphCount'),
        kernIndex: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, (t)=>t.leftClassCount * t.rightClassCount
        )
    }
});
let $5a2237650c44652a$var$KernTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct('version', {
    0: {
        subVersion: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        format: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
        coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, [
            'horizontal',
            'minimum',
            'crossStream',
            'override' // If set to 1 the value in this table replaces the accumulated value
        ]),
        subtable: $5a2237650c44652a$var$KernSubtable,
        padding: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, (t)=>t.length - t._currentOffset
        )
    },
    1: {
        length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        coverage: new restructure__WEBPACK_IMPORTED_MODULE_0__.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, [
            null,
            null,
            null,
            null,
            null,
            'variation',
            'crossStream',
            'vertical' // Set if table has vertical kerning values
        ]),
        format: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
        tupleIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        subtable: $5a2237650c44652a$var$KernSubtable,
        padding: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, (t)=>t.length - t._currentOffset
        )
    }
});
var $5a2237650c44652a$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
    0: {
        nTables: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        tables: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($5a2237650c44652a$var$KernTable, 'nTables')
    },
    1: {
        reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
        nTables: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        tables: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($5a2237650c44652a$var$KernTable, 'nTables')
    }
});



var // Linear Threshold table
// Records the ppem for each glyph at which the scaling becomes linear again,
// despite instructions effecting the advance width
$1eadf070c8b34e48$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    numGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    yPels: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, 'numGlyphs')
});



var // PCL 5 Table
// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines
$8eb2f7302ef75084$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    fontNumber: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    pitch: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    xHeight: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    style: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    typeFamily: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    capHeight: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    symbolSet: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    typeface: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(16),
    characterComplement: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(8),
    fileName: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(6),
    strokeWeight: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(1),
    widthType: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(1),
    serifStyle: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8)
});



// VDMX tables contain ascender/descender overrides for certain (usually small)
// sizes. This is needed in order to match font metrics on Windows.
let $8223b0d67f5fd7c9$var$Ratio = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    bCharSet: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    xRatio: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    yStartRatio: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    yEndRatio: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8 // Ending y-Ratio value
});
let $8223b0d67f5fd7c9$var$vTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    yPelHeight: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    yMax: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    yMin: restructure__WEBPACK_IMPORTED_MODULE_0__.int16 // Minimum value (in pels) for this yPelHeight
});
let $8223b0d67f5fd7c9$var$VdmxGroup = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    recs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    startsz: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    endsz: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    entries: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($8223b0d67f5fd7c9$var$vTable, 'recs') // The VDMX records
});
var $8223b0d67f5fd7c9$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    numRecs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    numRatios: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    ratioRanges: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($8223b0d67f5fd7c9$var$Ratio, 'numRatios'),
    offsets: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'numRatios'),
    groups: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($8223b0d67f5fd7c9$var$VdmxGroup, 'numRecs') // The actual VDMX groupings
});



var // Vertical Header Table
$4b17ac6a75c85897$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    ascent: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    descent: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    lineGap: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    advanceHeightMax: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    minTopSideBearing: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    minBottomSideBearing: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    yMaxExtent: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    caretSlopeRise: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    caretSlopeRun: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    caretOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.int16, 4),
    metricDataFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    numberOfMetrics: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16 // Number of advance heights in the Vertical Metrics table
});



let $a9f9c5185d84186d$var$VmtxEntry = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    advance: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    bearing: restructure__WEBPACK_IMPORTED_MODULE_0__.int16 // The top sidebearing of the glyph
});
var // Vertical Metrics Table
$a9f9c5185d84186d$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    metrics: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray($a9f9c5185d84186d$var$VmtxEntry, (t)=>t.parent.vhea.numberOfMetrics
    ),
    bearings: new restructure__WEBPACK_IMPORTED_MODULE_0__.LazyArray(restructure__WEBPACK_IMPORTED_MODULE_0__.int16, (t)=>t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics
    )
});



let $d9cf6d6467871d68$var$shortFrac = new restructure__WEBPACK_IMPORTED_MODULE_0__.Fixed(16, 'BE', 14);
let $d9cf6d6467871d68$var$Correspondence = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    fromCoord: $d9cf6d6467871d68$var$shortFrac,
    toCoord: $d9cf6d6467871d68$var$shortFrac
});
let $d9cf6d6467871d68$var$Segment = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    pairCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    correspondence: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($d9cf6d6467871d68$var$Correspondence, 'pairCount')
});
var $d9cf6d6467871d68$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    axisCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    segment: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($d9cf6d6467871d68$var$Segment, 'axisCount')
});




class $c35aa0a165e05d15$var$UnboundedArrayAccessor {
    constructor(type, stream, parent){
        this.type = type;
        this.stream = stream;
        this.parent = parent;
        this.base = this.stream.pos;
        this._items = [];
    }
    getItem(index) {
        if (this._items[index] == null) {
            let pos = this.stream.pos;
            this.stream.pos = this.base + this.type.size(null, this.parent) * index;
            this._items[index] = this.type.decode(this.stream, this.parent);
            this.stream.pos = pos;
        }
        return this._items[index];
    }
    inspect() {
        return \`[UnboundedArray \${this.type.constructor.name}]\`;
    }
}
class $c35aa0a165e05d15$export$c5af1eebc882e39a extends restructure__WEBPACK_IMPORTED_MODULE_0__.Array {
    constructor(type){
        super(type, 0);
    }
    decode(stream, parent) {
        return new $c35aa0a165e05d15$var$UnboundedArrayAccessor(this.type, stream, parent);
    }
}
let $c35aa0a165e05d15$export$8351f8c2ae2f103c = function(ValueType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint16) {
    // Helper class that makes internal structures invisible to pointers
    class Shadow {
        constructor(type){
            this.type = type;
        }
        decode(stream, ctx) {
            ctx = ctx.parent.parent;
            return this.type.decode(stream, ctx);
        }
        size(val, ctx) {
            ctx = ctx.parent.parent;
            return this.type.size(val, ctx);
        }
        encode(stream, val, ctx) {
            ctx = ctx.parent.parent;
            return this.type.encode(stream, val, ctx);
        }
    }
    ValueType = new Shadow(ValueType);
    let BinarySearchHeader = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
        unitSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        nUnits: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        searchRange: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        entrySelector: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        rangeShift: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
    });
    let LookupSegmentSingle = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
        lastGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        firstGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        value: ValueType
    });
    let LookupSegmentArray = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
        lastGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        firstGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        values: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(ValueType, (t)=>t.lastGlyph - t.firstGlyph + 1
        ), {
            type: 'parent'
        })
    });
    let LookupSingle = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
        glyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        value: ValueType
    });
    return new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, {
        0: {
            values: new $c35aa0a165e05d15$export$c5af1eebc882e39a(ValueType) // length == number of glyphs maybe?
        },
        2: {
            binarySearchHeader: BinarySearchHeader,
            segments: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(LookupSegmentSingle, (t)=>t.binarySearchHeader.nUnits
            )
        },
        4: {
            binarySearchHeader: BinarySearchHeader,
            segments: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(LookupSegmentArray, (t)=>t.binarySearchHeader.nUnits
            )
        },
        6: {
            binarySearchHeader: BinarySearchHeader,
            segments: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(LookupSingle, (t)=>t.binarySearchHeader.nUnits
            )
        },
        8: {
            firstGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
            count: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
            values: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(ValueType, 'count')
        }
    });
};
function $c35aa0a165e05d15$export$79f7d93d790934ba(entryData = {}, lookupType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint16) {
    let entry = Object.assign({
        newState: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        flags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
    }, entryData);
    let Entry = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct(entry);
    let StateArray = new $c35aa0a165e05d15$export$c5af1eebc882e39a(new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, (t)=>t.nClasses
    ));
    let StateHeader = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
        nClasses: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        classTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new $c35aa0a165e05d15$export$8351f8c2ae2f103c(lookupType)),
        stateArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, StateArray),
        entryTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new $c35aa0a165e05d15$export$c5af1eebc882e39a(Entry))
    });
    return StateHeader;
}
function $c35aa0a165e05d15$export$105027425199cc51(entryData = {}, lookupType = restructure__WEBPACK_IMPORTED_MODULE_0__.uint16) {
    let ClassLookupTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
        version () {
            return 8;
        },
        firstGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        values: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16)
    });
    let entry = Object.assign({
        newStateOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        // convert offset to stateArray index
        newState: (t)=>(t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses
        ,
        flags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
    }, entryData);
    let Entry = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct(entry);
    let StateArray = new $c35aa0a165e05d15$export$c5af1eebc882e39a(new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, (t)=>t.nClasses
    ));
    let StateHeader1 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
        nClasses: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        classTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, ClassLookupTable),
        stateArray: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, StateArray),
        entryTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, new $c35aa0a165e05d15$export$c5af1eebc882e39a(Entry))
    });
    return StateHeader1;
}


let $53e6946cfb72ad0c$var$BslnSubtable = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct('format', {
    0: {
        deltas: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.int16, 32)
    },
    1: {
        deltas: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.int16, 32),
        mappingData: new $c35aa0a165e05d15$export$8351f8c2ae2f103c(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16)
    },
    2: {
        standardGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        controlPoints: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 32)
    },
    3: {
        standardGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        controlPoints: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 32),
        mappingData: new $c35aa0a165e05d15$export$8351f8c2ae2f103c(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16)
    }
});
var $53e6946cfb72ad0c$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    format: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    defaultBaseline: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    subtable: $53e6946cfb72ad0c$var$BslnSubtable
});



let $117550c71e13cb3d$var$Setting = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    setting: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    nameIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    name: (t)=>t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]
});
let $117550c71e13cb3d$var$FeatureName = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    feature: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    nSettings: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    settingTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($117550c71e13cb3d$var$Setting, 'nSettings'), {
        type: 'parent'
    }),
    featureFlags: new restructure__WEBPACK_IMPORTED_MODULE_0__.Bitfield(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, [
        null,
        null,
        null,
        null,
        null,
        null,
        'hasDefault',
        'exclusive'
    ]),
    defaultSetting: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    nameIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameIndex]
});
var $117550c71e13cb3d$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    featureNameCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    reserved1: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
    reserved2: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32),
    featureNames: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($117550c71e13cb3d$var$FeatureName, 'featureNameCount')
});



let $551f92fdd501454e$var$Axis = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    axisTag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    minValue: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    defaultValue: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    maxValue: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    flags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    nameID: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameID]
});
let $551f92fdd501454e$var$Instance = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    nameID: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameID]
    ,
    flags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    coord: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32, (t)=>t.parent.axisCount
    ),
    postscriptNameID: new restructure__WEBPACK_IMPORTED_MODULE_0__.Optional(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, (t)=>t.parent.instanceSize - t._currentOffset > 0
    )
});
var $551f92fdd501454e$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    offsetToData: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    countSizePairs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    axisCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    axisSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    instanceCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    instanceSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    axis: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($551f92fdd501454e$var$Axis, 'axisCount'),
    instance: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($551f92fdd501454e$var$Instance, 'instanceCount')
});



let $d03801ee7a5f4d7c$var$shortFrac = new restructure__WEBPACK_IMPORTED_MODULE_0__.Fixed(16, 'BE', 14);
class $d03801ee7a5f4d7c$var$Offset {
    static decode(stream, parent) {
        // In short format, offsets are multiplied by 2.
        // This doesn't seem to be documented by Apple, but it
        // is implemented this way in Freetype.
        return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;
    }
}
let $d03801ee7a5f4d7c$var$gvar = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
    axisCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    globalCoordCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    globalCoords: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($d03801ee7a5f4d7c$var$shortFrac, 'axisCount'), 'globalCoordCount')),
    glyphCount: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    flags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    offsetToData: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    offsets: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer($d03801ee7a5f4d7c$var$Offset, 'void', {
        relativeTo: (ctx)=>ctx.offsetToData
        ,
        allowNull: false
    }), (t)=>t.glyphCount + 1
    )
});
var $d03801ee7a5f4d7c$export$2e2bcd8739ae039 = $d03801ee7a5f4d7c$var$gvar;




let $70ffc7fec5b89b5e$var$ClassTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    coverage: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    subFeatureFlags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    stateTable: new $c35aa0a165e05d15$export$105027425199cc51
});
let $70ffc7fec5b89b5e$var$WidthDeltaRecord = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    justClass: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    beforeGrowLimit: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    beforeShrinkLimit: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    afterGrowLimit: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    afterShrinkLimit: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    growFlags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    shrinkFlags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
});
let $70ffc7fec5b89b5e$var$WidthDeltaCluster = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($70ffc7fec5b89b5e$var$WidthDeltaRecord, restructure__WEBPACK_IMPORTED_MODULE_0__.uint32);
let $70ffc7fec5b89b5e$var$ActionData = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct('actionType', {
    0: {
        lowerLimit: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
        upperLimit: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
        order: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        glyphs: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16)
    },
    1: {
        addGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
    },
    2: {
        substThreshold: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
        addGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        substGlyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
    },
    3: {},
    4: {
        variationAxis: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        minimumLimit: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
        noStretchValue: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
        maximumLimit: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32
    },
    5: {
        flags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
        glyph: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
    }
});
let $70ffc7fec5b89b5e$var$Action = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    actionClass: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    actionType: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    actionLength: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    actionData: $70ffc7fec5b89b5e$var$ActionData,
    padding: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, (t)=>t.actionLength - t._currentOffset
    )
});
let $70ffc7fec5b89b5e$var$PostcompensationAction = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($70ffc7fec5b89b5e$var$Action, restructure__WEBPACK_IMPORTED_MODULE_0__.uint32);
let $70ffc7fec5b89b5e$var$PostCompensationTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    lookupTable: new $c35aa0a165e05d15$export$8351f8c2ae2f103c(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $70ffc7fec5b89b5e$var$PostcompensationAction))
});
let $70ffc7fec5b89b5e$var$JustificationTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    classTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $70ffc7fec5b89b5e$var$ClassTable, {
        type: 'parent'
    }),
    wdcOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    postCompensationTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $70ffc7fec5b89b5e$var$PostCompensationTable, {
        type: 'parent'
    }),
    widthDeltaClusters: new $c35aa0a165e05d15$export$8351f8c2ae2f103c(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $70ffc7fec5b89b5e$var$WidthDeltaCluster, {
        type: 'parent',
        relativeTo: (ctx)=>ctx.wdcOffset
    }))
});
var $70ffc7fec5b89b5e$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    format: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    horizontal: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $70ffc7fec5b89b5e$var$JustificationTable),
    vertical: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $70ffc7fec5b89b5e$var$JustificationTable)
});




let $dd743f90b6270daa$var$LigatureData = {
    action: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
};
let $dd743f90b6270daa$var$ContextualData = {
    markIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    currentIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
};
let $dd743f90b6270daa$var$InsertionData = {
    currentInsertIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    markedInsertIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16
};
let $dd743f90b6270daa$var$SubstitutionTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    items: new $c35aa0a165e05d15$export$c5af1eebc882e39a(new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new $c35aa0a165e05d15$export$8351f8c2ae2f103c))
});
let $dd743f90b6270daa$var$SubtableData = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct('type', {
    0: {
        stateTable: new $c35aa0a165e05d15$export$79f7d93d790934ba
    },
    1: {
        stateTable: new $c35aa0a165e05d15$export$79f7d93d790934ba($dd743f90b6270daa$var$ContextualData),
        substitutionTable: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $dd743f90b6270daa$var$SubstitutionTable)
    },
    2: {
        stateTable: new $c35aa0a165e05d15$export$79f7d93d790934ba($dd743f90b6270daa$var$LigatureData),
        ligatureActions: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new $c35aa0a165e05d15$export$c5af1eebc882e39a(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32)),
        components: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new $c35aa0a165e05d15$export$c5af1eebc882e39a(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16)),
        ligatureList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new $c35aa0a165e05d15$export$c5af1eebc882e39a(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16))
    },
    4: {
        lookupTable: new $c35aa0a165e05d15$export$8351f8c2ae2f103c
    },
    5: {
        stateTable: new $c35aa0a165e05d15$export$79f7d93d790934ba($dd743f90b6270daa$var$InsertionData),
        insertionActions: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, new $c35aa0a165e05d15$export$c5af1eebc882e39a(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16))
    }
});
let $dd743f90b6270daa$var$Subtable = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    coverage: restructure__WEBPACK_IMPORTED_MODULE_0__.uint24,
    type: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    subFeatureFlags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    table: $dd743f90b6270daa$var$SubtableData,
    padding: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, (t)=>t.length - t._currentOffset
    )
});
let $dd743f90b6270daa$var$FeatureEntry = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    featureType: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    featureSetting: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    enableFlags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    disableFlags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32
});
let $dd743f90b6270daa$var$MorxChain = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    defaultFlags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    chainLength: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    nFeatureEntries: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    nSubtables: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    features: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($dd743f90b6270daa$var$FeatureEntry, 'nFeatureEntries'),
    subtables: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($dd743f90b6270daa$var$Subtable, 'nSubtables')
});
var $dd743f90b6270daa$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    unused: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
    nChains: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    chains: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($dd743f90b6270daa$var$MorxChain, 'nChains')
});




let $40e500cc5163d19f$var$OpticalBounds = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    left: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    top: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    right: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    bottom: restructure__WEBPACK_IMPORTED_MODULE_0__.int16
});
var $40e500cc5163d19f$export$2e2bcd8739ae039 = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.fixed32,
    format: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    lookupTable: new $c35aa0a165e05d15$export$8351f8c2ae2f103c($40e500cc5163d19f$var$OpticalBounds)
});


let $60d88718e7e1fa97$var$tables = {};
var $60d88718e7e1fa97$export$2e2bcd8739ae039 = $60d88718e7e1fa97$var$tables;
$60d88718e7e1fa97$var$tables.cmap = $9aad45a64cf8e4b5$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.head = $b41847595480ce3a$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.hhea = $5fda302e2516d0c7$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.hmtx = $28788c978325a3e1$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.maxp = $9e68d972c1fae2a9$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.name = $866b9b7dd32d7242$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables['OS/2'] = $268023eac606db57$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.post = $5287343c85bea17e$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.fpgm = $6f2fae1f8d2b4b41$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.loca = $cae48a5e791773ec$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.prep = $7b12cfca10f7f884$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables['cvt '] = $5768e6ef8b1a512a$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.glyf = $06e9f2dae5795013$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables['CFF '] = $8770fc79268fa3c2$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables['CFF2'] = $8770fc79268fa3c2$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.VORG = $79f2eb50e4490e51$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.EBLC = $234c291eab07e474$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.CBLC = $60d88718e7e1fa97$var$tables.EBLC;
$60d88718e7e1fa97$var$tables.sbix = $55d04373f0cac44e$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.COLR = $0e59eccfa3005d9d$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.CPAL = $23affa36a12f7915$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.BASE = $9fffe61eb0785f74$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.GDEF = $418face38567ee6e$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.GPOS = $010e157f6d8a40e9$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.GSUB = $7176ea6bb7dcf1c6$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.JSTF = $71e9e74bb6366bce$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.HVAR = $706225b6909f9418$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.DSIG = $4a144b8ae6f53b7c$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.gasp = $a2086c3965d7b105$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.hdmx = $de83746c6c1c8559$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.kern = $5a2237650c44652a$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.LTSH = $1eadf070c8b34e48$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.PCLT = $8eb2f7302ef75084$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.VDMX = $8223b0d67f5fd7c9$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.vhea = $4b17ac6a75c85897$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.vmtx = $a9f9c5185d84186d$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.avar = $d9cf6d6467871d68$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.bsln = $53e6946cfb72ad0c$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.feat = $117550c71e13cb3d$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.fvar = $551f92fdd501454e$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.gvar = $d03801ee7a5f4d7c$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.just = $70ffc7fec5b89b5e$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.morx = $dd743f90b6270daa$export$2e2bcd8739ae039;
$60d88718e7e1fa97$var$tables.opbd = $40e500cc5163d19f$export$2e2bcd8739ae039;


let $d5e01a2298150c9a$var$TableEntry = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    checkSum: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    offset: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, 'void', {
        type: 'global'
    }),
    length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32
});
let $d5e01a2298150c9a$var$Directory = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    numTables: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    searchRange: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    entrySelector: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    rangeShift: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    tables: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($d5e01a2298150c9a$var$TableEntry, 'numTables')
});
$d5e01a2298150c9a$var$Directory.process = function() {
    let tables = {};
    for (let table of this.tables)tables[table.tag] = table;
    this.tables = tables;
};
$d5e01a2298150c9a$var$Directory.preEncode = function(stream) {
    let tables = [];
    for(let tag in this.tables){
        let table = this.tables[tag];
        if (table) tables.push({
            tag: tag,
            checkSum: 0,
            offset: new restructure__WEBPACK_IMPORTED_MODULE_0__.VoidPointer($60d88718e7e1fa97$export$2e2bcd8739ae039[tag], table),
            length: $60d88718e7e1fa97$export$2e2bcd8739ae039[tag].size(table)
        });
    }
    this.tag = 'true';
    this.numTables = tables.length;
    this.tables = tables;
    let maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);
    let maxPowerOf2 = Math.pow(2, maxExponentFor2);
    this.searchRange = maxPowerOf2 * 16;
    this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;
    this.rangeShift = this.numTables * 16 - this.searchRange;
};
var $d5e01a2298150c9a$export$2e2bcd8739ae039 = $d5e01a2298150c9a$var$Directory;




function $f3ad94c9f84f4d57$export$2e0ae67339d5f1ac(arr, cmp) {
    let min = 0;
    let max = arr.length - 1;
    while(min <= max){
        let mid = min + max >> 1;
        let res = cmp(arr[mid]);
        if (res < 0) max = mid - 1;
        else if (res > 0) min = mid + 1;
        else return mid;
    }
    return -1;
}
function $f3ad94c9f84f4d57$export$d02631cccf789723(index, end) {
    let $f3ad94c9f84f4d57$export$d02631cccf789723 = [];
    while(index < end)$f3ad94c9f84f4d57$export$d02631cccf789723.push(index++);
    return $f3ad94c9f84f4d57$export$d02631cccf789723;
}






var _class;
let $5d24cfe1a4cd83bb$export$2e2bcd8739ae039 = (_class = class $5d24cfe1a4cd83bb$export$2e2bcd8739ae039 {
    constructor(cmapTable){
        // Attempt to find a Unicode cmap first
        this.encoding = null;
        this.cmap = this.findSubtable(cmapTable, [
            // 32-bit subtables
            [
                3,
                10
            ],
            [
                0,
                6
            ],
            [
                0,
                4
            ],
            // 16-bit subtables
            [
                3,
                1
            ],
            [
                0,
                3
            ],
            [
                0,
                2
            ],
            [
                0,
                1
            ],
            [
                0,
                0
            ]
        ]);
        // If not unicode cmap was found, and iconv-lite is installed,
        // take the first table with a supported encoding.
        if (!this.cmap && _iconv_lite_cjs__WEBPACK_IMPORTED_MODULE_5__) for (let cmap of cmapTable.tables){
            let encoding = $111d7d948974b54a$export$badc544e0651b6b1(cmap.platformID, cmap.encodingID, cmap.table.language - 1);
            if (_iconv_lite_cjs__WEBPACK_IMPORTED_MODULE_5__.encodingExists(encoding)) {
                this.cmap = cmap.table;
                this.encoding = encoding;
            }
        }
        if (!this.cmap) throw new Error("Could not find a supported cmap table");
        this.uvs = this.findSubtable(cmapTable, [
            [
                0,
                5
            ]
        ]);
        if (this.uvs && this.uvs.version !== 14) this.uvs = null;
    }
    findSubtable(cmapTable, pairs) {
        for (let [platformID, encodingID] of pairs)for (let cmap of cmapTable.tables){
            if (cmap.platformID === platformID && cmap.encodingID === encodingID) return cmap.table;
        }
        return null;
    }
    lookup(codepoint, variationSelector) {
        // If there is no Unicode cmap in this font, we need to re-encode
        // the codepoint in the encoding that the cmap supports.
        if (this.encoding) {
            let buf = _iconv_lite_cjs__WEBPACK_IMPORTED_MODULE_5__.encode(String.fromCodePoint(codepoint), this.encoding);
            codepoint = 0;
            for(let i = 0; i < buf.length; i++)codepoint = codepoint << 8 | buf[i];
        // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.
        } else if (variationSelector) {
            let gid = this.getVariationSelector(codepoint, variationSelector);
            if (gid) return gid;
        }
        let cmap = this.cmap;
        switch(cmap.version){
            case 0:
                return cmap.codeMap.get(codepoint) || 0;
            case 4:
                {
                    let min = 0;
                    let max = cmap.segCount - 1;
                    while(min <= max){
                        let mid = min + max >> 1;
                        if (codepoint < cmap.startCode.get(mid)) max = mid - 1;
                        else if (codepoint > cmap.endCode.get(mid)) min = mid + 1;
                        else {
                            let rangeOffset = cmap.idRangeOffset.get(mid);
                            let gid;
                            if (rangeOffset === 0) gid = codepoint + cmap.idDelta.get(mid);
                            else {
                                let index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);
                                gid = cmap.glyphIndexArray.get(index) || 0;
                                if (gid !== 0) gid += cmap.idDelta.get(mid);
                            }
                            return gid & 0xffff;
                        }
                    }
                    return 0;
                }
            case 8:
                throw new Error('TODO: cmap format 8');
            case 6:
            case 10:
                return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;
            case 12:
            case 13:
                {
                    let min = 0;
                    let max = cmap.nGroups - 1;
                    while(min <= max){
                        let mid = min + max >> 1;
                        let group = cmap.groups.get(mid);
                        if (codepoint < group.startCharCode) max = mid - 1;
                        else if (codepoint > group.endCharCode) min = mid + 1;
                        else {
                            if (cmap.version === 12) return group.glyphID + (codepoint - group.startCharCode);
                            else return group.glyphID;
                        }
                    }
                    return 0;
                }
            case 14:
                throw new Error('TODO: cmap format 14');
            default:
                throw new Error(\`Unknown cmap format \${cmap.version}\`);
        }
    }
    getVariationSelector(codepoint, variationSelector) {
        if (!this.uvs) return 0;
        let selectors = this.uvs.varSelectors.toArray();
        let i = $f3ad94c9f84f4d57$export$2e0ae67339d5f1ac(selectors, (x)=>variationSelector - x.varSelector
        );
        let sel = selectors[i];
        if (i !== -1 && sel.defaultUVS) i = $f3ad94c9f84f4d57$export$2e0ae67339d5f1ac(sel.defaultUVS, (x)=>codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? 1 : 0
        );
        if (i !== -1 && sel.nonDefaultUVS) {
            i = $f3ad94c9f84f4d57$export$2e0ae67339d5f1ac(sel.nonDefaultUVS, (x)=>codepoint - x.unicodeValue
            );
            if (i !== -1) return sel.nonDefaultUVS[i].glyphID;
        }
        return 0;
    }
    getCharacterSet() {
        let cmap = this.cmap;
        switch(cmap.version){
            case 0:
                return $f3ad94c9f84f4d57$export$d02631cccf789723(0, cmap.codeMap.length);
            case 4:
                {
                    let res = [];
                    let endCodes = cmap.endCode.toArray();
                    for(let i = 0; i < endCodes.length; i++){
                        let tail = endCodes[i] + 1;
                        let start = cmap.startCode.get(i);
                        res.push(...$f3ad94c9f84f4d57$export$d02631cccf789723(start, tail));
                    }
                    return res;
                }
            case 8:
                throw new Error('TODO: cmap format 8');
            case 6:
            case 10:
                return $f3ad94c9f84f4d57$export$d02631cccf789723(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);
            case 12:
            case 13:
                {
                    let res = [];
                    for (let group of cmap.groups.toArray())res.push(...$f3ad94c9f84f4d57$export$d02631cccf789723(group.startCharCode, group.endCharCode + 1));
                    return res;
                }
            case 14:
                throw new Error('TODO: cmap format 14');
            default:
                throw new Error(\`Unknown cmap format \${cmap.version}\`);
        }
    }
    codePointsForGlyph(gid) {
        let cmap = this.cmap;
        switch(cmap.version){
            case 0:
                {
                    let res = [];
                    for(let i = 0; i < 256; i++)if (cmap.codeMap.get(i) === gid) res.push(i);
                    return res;
                }
            case 4:
                {
                    let res = [];
                    for(let i = 0; i < cmap.segCount; i++){
                        let end = cmap.endCode.get(i);
                        let start = cmap.startCode.get(i);
                        let rangeOffset = cmap.idRangeOffset.get(i);
                        let delta = cmap.idDelta.get(i);
                        for(var c = start; c <= end; c++){
                            let g = 0;
                            if (rangeOffset === 0) g = c + delta;
                            else {
                                let index = rangeOffset / 2 + (c - start) - (cmap.segCount - i);
                                g = cmap.glyphIndexArray.get(index) || 0;
                                if (g !== 0) g += delta;
                            }
                            if (g === gid) res.push(c);
                        }
                    }
                    return res;
                }
            case 12:
                {
                    let res = [];
                    for (let group of cmap.groups.toArray())if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) res.push(group.startCharCode + (gid - group.glyphID));
                    return res;
                }
            case 13:
                {
                    let res = [];
                    for (let group of cmap.groups.toArray())if (gid === group.glyphID) res.push(...$f3ad94c9f84f4d57$export$d02631cccf789723(group.startCharCode, group.endCharCode + 1));
                    return res;
                }
            default:
                throw new Error(\`Unknown cmap format \${cmap.version}\`);
        }
    }
}, (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "getCharacterSet", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "getCharacterSet"), _class.prototype), (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "codePointsForGlyph", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "codePointsForGlyph"), _class.prototype), _class);



class $8526e21034212dc1$export$2e2bcd8739ae039 {
    constructor(font){
        this.kern = font.kern;
    }
    process(glyphs, positions) {
        for(let glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++){
            let left = glyphs[glyphIndex].id;
            let right = glyphs[glyphIndex + 1].id;
            positions[glyphIndex].xAdvance += this.getKerning(left, right);
        }
    }
    getKerning(left, right) {
        let res = 0;
        for (let table of this.kern.tables){
            if (table.coverage.crossStream) continue;
            switch(table.version){
                case 0:
                    if (!table.coverage.horizontal) continue;
                    break;
                case 1:
                    if (table.coverage.vertical || table.coverage.variation) continue;
                    break;
                default:
                    throw new Error(\`Unsupported kerning table version \${table.version}\`);
            }
            let val = 0;
            let s = table.subtable;
            switch(table.format){
                case 0:
                    let pairIdx = $f3ad94c9f84f4d57$export$2e0ae67339d5f1ac(s.pairs, function(pair) {
                        return left - pair.left || right - pair.right;
                    });
                    if (pairIdx >= 0) val = s.pairs[pairIdx].value;
                    break;
                case 2:
                    let leftOffset = 0, rightOffset = 0;
                    if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];
                    else leftOffset = s.array.off;
                    if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];
                    let index = (leftOffset + rightOffset - s.array.off) / 2;
                    val = s.array.values.get(index);
                    break;
                case 3:
                    if (left >= s.glyphCount || right >= s.glyphCount) return 0;
                    val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];
                    break;
                default:
                    throw new Error(\`Unsupported kerning sub-table format \${table.format}\`);
            }
            // Microsoft supports the override flag, which resets the result
            // Otherwise, the sum of the results from all subtables is returned
            if (table.coverage.override) res = val;
            else res += val;
        }
        return res;
    }
}



class $e4967fef9afc586a$export$2e2bcd8739ae039 {
    constructor(font){
        this.font = font;
    }
    positionGlyphs(glyphs, positions) {
        // find each base + mark cluster, and position the marks relative to the base
        let clusterStart = 0;
        let clusterEnd = 0;
        for(let index = 0; index < glyphs.length; index++){
            let glyph = glyphs[index];
            if (glyph.isMark) clusterEnd = index;
            else {
                if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);
                clusterStart = clusterEnd = index;
            }
        }
        if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);
        return positions;
    }
    positionCluster(glyphs, positions, clusterStart, clusterEnd) {
        let base = glyphs[clusterStart];
        let baseBox = base.cbox.copy();
        // adjust bounding box for ligature glyphs
        if (base.codePoints.length > 1) // LTR. TODO: RTL support.
        baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;
        let xOffset = -positions[clusterStart].xAdvance;
        let yOffset = 0;
        let yGap = this.font.unitsPerEm / 16;
        // position each of the mark glyphs relative to the base glyph
        for(let index = clusterStart + 1; index <= clusterEnd; index++){
            let mark = glyphs[index];
            let markBox = mark.cbox;
            let position = positions[index];
            let combiningClass = this.getCombiningClass(mark.codePoints[0]);
            if (combiningClass !== 'Not_Reordered') {
                position.xOffset = position.yOffset = 0;
                // x positioning
                switch(combiningClass){
                    case 'Double_Above':
                    case 'Double_Below':
                        // LTR. TODO: RTL support.
                        position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;
                        break;
                    case 'Attached_Below_Left':
                    case 'Below_Left':
                    case 'Above_Left':
                        // left align
                        position.xOffset += baseBox.minX - markBox.minX;
                        break;
                    case 'Attached_Above_Right':
                    case 'Below_Right':
                    case 'Above_Right':
                        // right align
                        position.xOffset += baseBox.maxX - markBox.width - markBox.minX;
                        break;
                    default:
                        // center align
                        position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;
                }
                // y positioning
                switch(combiningClass){
                    case 'Double_Below':
                    case 'Below_Left':
                    case 'Below':
                    case 'Below_Right':
                    case 'Attached_Below_Left':
                    case 'Attached_Below':
                        // add a small gap between the glyphs if they are not attached
                        if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') baseBox.minY += yGap;
                        position.yOffset = -baseBox.minY - markBox.maxY;
                        baseBox.minY += markBox.height;
                        break;
                    case 'Double_Above':
                    case 'Above_Left':
                    case 'Above':
                    case 'Above_Right':
                    case 'Attached_Above':
                    case 'Attached_Above_Right':
                        // add a small gap between the glyphs if they are not attached
                        if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') baseBox.maxY += yGap;
                        position.yOffset = baseBox.maxY - markBox.minY;
                        baseBox.maxY += markBox.height;
                        break;
                }
                position.xAdvance = position.yAdvance = 0;
                position.xOffset += xOffset;
                position.yOffset += yOffset;
            } else {
                xOffset -= position.xAdvance;
                yOffset -= position.yAdvance;
            }
        }
        return;
    }
    getCombiningClass(codePoint) {
        let combiningClass = unicode_properties__WEBPACK_IMPORTED_MODULE_6__["default"].getCombiningClass(codePoint);
        // Thai / Lao need some per-character work
        if ((codePoint & -256) === 0x0e00) {
            if (combiningClass === 'Not_Reordered') switch(codePoint){
                case 0x0e31:
                case 0x0e34:
                case 0x0e35:
                case 0x0e36:
                case 0x0e37:
                case 0x0e47:
                case 0x0e4c:
                case 0x0e3d:
                case 0x0e4e:
                    return 'Above_Right';
                case 0x0eb1:
                case 0x0eb4:
                case 0x0eb5:
                case 0x0eb6:
                case 0x0eb7:
                case 0x0ebb:
                case 0x0ecc:
                case 0x0ecd:
                    return 'Above';
                case 0x0ebc:
                    return 'Below';
            }
            else if (codePoint === 0x0e3a) return 'Below_Right';
        }
        switch(combiningClass){
            // Hebrew
            case 'CCC10':
            case 'CCC11':
            case 'CCC12':
            case 'CCC13':
            case 'CCC14':
            case 'CCC15':
            case 'CCC16':
            case 'CCC17':
            case 'CCC18':
            case 'CCC20':
            case 'CCC22':
                return 'Below';
            case 'CCC23':
                return 'Attached_Above';
            case 'CCC24':
                return 'Above_Right';
            case 'CCC25':
            case 'CCC19':
                return 'Above_Left';
            case 'CCC26':
                return 'Above';
            case 'CCC21':
                break;
            // Arabic and Syriac
            case 'CCC27':
            case 'CCC28':
            case 'CCC30':
            case 'CCC31':
            case 'CCC33':
            case 'CCC34':
            case 'CCC35':
            case 'CCC36':
                return 'Above';
            case 'CCC29':
            case 'CCC32':
                return 'Below';
            // Thai
            case 'CCC103':
                return 'Below_Right';
            case 'CCC107':
                return 'Above_Right';
            // Lao
            case 'CCC118':
                return 'Below';
            case 'CCC122':
                return 'Above';
            // Tibetan
            case 'CCC129':
            case 'CCC132':
                return 'Below';
            case 'CCC130':
                return 'Above';
        }
        return combiningClass;
    }
}


class $fcb46e14b01ea01f$export$2e2bcd8739ae039 {
    constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity){
        /**
     * The minimum X position in the bounding box
     * @type {number}
     */ this.minX = minX;
        /**
     * The minimum Y position in the bounding box
     * @type {number}
     */ this.minY = minY;
        /**
     * The maxmimum X position in the bounding box
     * @type {number}
     */ this.maxX = maxX;
        /**
     * The maxmimum Y position in the bounding box
     * @type {number}
     */ this.maxY = maxY;
    }
    /**
   * The width of the bounding box
   * @type {number}
   */ get width() {
        return this.maxX - this.minX;
    }
    /**
   * The height of the bounding box
   * @type {number}
   */ get height() {
        return this.maxY - this.minY;
    }
    addPoint(x, y) {
        if (Math.abs(x) !== Infinity) {
            if (x < this.minX) this.minX = x;
            if (x > this.maxX) this.maxX = x;
        }
        if (Math.abs(y) !== Infinity) {
            if (y < this.minY) this.minY = y;
            if (y > this.maxY) this.maxY = y;
        }
    }
    copy() {
        return new $fcb46e14b01ea01f$export$2e2bcd8739ae039(this.minX, this.minY, this.maxX, this.maxY);
    }
}



// This maps the Unicode Script property to an OpenType script tag
// Data from http://www.microsoft.com/typography/otspec/scripttags.htm
// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.
const $a5878e4f4663c9e2$var$UNICODE_SCRIPTS = {
    Caucasian_Albanian: 'aghb',
    Arabic: 'arab',
    Imperial_Aramaic: 'armi',
    Armenian: 'armn',
    Avestan: 'avst',
    Balinese: 'bali',
    Bamum: 'bamu',
    Bassa_Vah: 'bass',
    Batak: 'batk',
    Bengali: [
        'bng2',
        'beng'
    ],
    Bopomofo: 'bopo',
    Brahmi: 'brah',
    Braille: 'brai',
    Buginese: 'bugi',
    Buhid: 'buhd',
    Chakma: 'cakm',
    Canadian_Aboriginal: 'cans',
    Carian: 'cari',
    Cham: 'cham',
    Cherokee: 'cher',
    Coptic: 'copt',
    Cypriot: 'cprt',
    Cyrillic: 'cyrl',
    Devanagari: [
        'dev2',
        'deva'
    ],
    Deseret: 'dsrt',
    Duployan: 'dupl',
    Egyptian_Hieroglyphs: 'egyp',
    Elbasan: 'elba',
    Ethiopic: 'ethi',
    Georgian: 'geor',
    Glagolitic: 'glag',
    Gothic: 'goth',
    Grantha: 'gran',
    Greek: 'grek',
    Gujarati: [
        'gjr2',
        'gujr'
    ],
    Gurmukhi: [
        'gur2',
        'guru'
    ],
    Hangul: 'hang',
    Han: 'hani',
    Hanunoo: 'hano',
    Hebrew: 'hebr',
    Hiragana: 'hira',
    Pahawh_Hmong: 'hmng',
    Katakana_Or_Hiragana: 'hrkt',
    Old_Italic: 'ital',
    Javanese: 'java',
    Kayah_Li: 'kali',
    Katakana: 'kana',
    Kharoshthi: 'khar',
    Khmer: 'khmr',
    Khojki: 'khoj',
    Kannada: [
        'knd2',
        'knda'
    ],
    Kaithi: 'kthi',
    Tai_Tham: 'lana',
    Lao: 'lao ',
    Latin: 'latn',
    Lepcha: 'lepc',
    Limbu: 'limb',
    Linear_A: 'lina',
    Linear_B: 'linb',
    Lisu: 'lisu',
    Lycian: 'lyci',
    Lydian: 'lydi',
    Mahajani: 'mahj',
    Mandaic: 'mand',
    Manichaean: 'mani',
    Mende_Kikakui: 'mend',
    Meroitic_Cursive: 'merc',
    Meroitic_Hieroglyphs: 'mero',
    Malayalam: [
        'mlm2',
        'mlym'
    ],
    Modi: 'modi',
    Mongolian: 'mong',
    Mro: 'mroo',
    Meetei_Mayek: 'mtei',
    Myanmar: [
        'mym2',
        'mymr'
    ],
    Old_North_Arabian: 'narb',
    Nabataean: 'nbat',
    Nko: 'nko ',
    Ogham: 'ogam',
    Ol_Chiki: 'olck',
    Old_Turkic: 'orkh',
    Oriya: [
        'ory2',
        'orya'
    ],
    Osmanya: 'osma',
    Palmyrene: 'palm',
    Pau_Cin_Hau: 'pauc',
    Old_Permic: 'perm',
    Phags_Pa: 'phag',
    Inscriptional_Pahlavi: 'phli',
    Psalter_Pahlavi: 'phlp',
    Phoenician: 'phnx',
    Miao: 'plrd',
    Inscriptional_Parthian: 'prti',
    Rejang: 'rjng',
    Runic: 'runr',
    Samaritan: 'samr',
    Old_South_Arabian: 'sarb',
    Saurashtra: 'saur',
    Shavian: 'shaw',
    Sharada: 'shrd',
    Siddham: 'sidd',
    Khudawadi: 'sind',
    Sinhala: 'sinh',
    Sora_Sompeng: 'sora',
    Sundanese: 'sund',
    Syloti_Nagri: 'sylo',
    Syriac: 'syrc',
    Tagbanwa: 'tagb',
    Takri: 'takr',
    Tai_Le: 'tale',
    New_Tai_Lue: 'talu',
    Tamil: [
        'tml2',
        'taml'
    ],
    Tai_Viet: 'tavt',
    Telugu: [
        'tel2',
        'telu'
    ],
    Tifinagh: 'tfng',
    Tagalog: 'tglg',
    Thaana: 'thaa',
    Thai: 'thai',
    Tibetan: 'tibt',
    Tirhuta: 'tirh',
    Ugaritic: 'ugar',
    Vai: 'vai ',
    Warang_Citi: 'wara',
    Old_Persian: 'xpeo',
    Cuneiform: 'xsux',
    Yi: 'yi  ',
    Inherited: 'zinh',
    Common: 'zyyy',
    Unknown: 'zzzz'
};
const $a5878e4f4663c9e2$var$OPENTYPE_SCRIPTS = {};
for(let script in $a5878e4f4663c9e2$var$UNICODE_SCRIPTS){
    let tag = $a5878e4f4663c9e2$var$UNICODE_SCRIPTS[script];
    if (Array.isArray(tag)) for (let t of tag)$a5878e4f4663c9e2$var$OPENTYPE_SCRIPTS[t] = script;
    else $a5878e4f4663c9e2$var$OPENTYPE_SCRIPTS[tag] = script;
}
function $a5878e4f4663c9e2$export$b32f0b5f69d65e51(script1) {
    return $a5878e4f4663c9e2$var$UNICODE_SCRIPTS[script1];
}
function $a5878e4f4663c9e2$export$ce50e82f12a827a4(tag) {
    return $a5878e4f4663c9e2$var$OPENTYPE_SCRIPTS[tag];
}
function $a5878e4f4663c9e2$export$e5cb25e204fb8450(string) {
    let len = string.length;
    let idx = 0;
    while(idx < len){
        let code = string.charCodeAt(idx++);
        // Check if this is a high surrogate
        if (0xd800 <= code && code <= 0xdbff && idx < len) {
            let next = string.charCodeAt(idx);
            // Check if this is a low surrogate
            if (0xdc00 <= next && next <= 0xdfff) {
                idx++;
                code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;
            }
        }
        let script2 = unicode_properties__WEBPACK_IMPORTED_MODULE_6__["default"].getScript(code);
        if (script2 !== 'Common' && script2 !== 'Inherited' && script2 !== 'Unknown') return $a5878e4f4663c9e2$var$UNICODE_SCRIPTS[script2];
    }
    return $a5878e4f4663c9e2$var$UNICODE_SCRIPTS.Unknown;
}
function $a5878e4f4663c9e2$export$16fab0757cfc223d(codePoints) {
    for(let i = 0; i < codePoints.length; i++){
        let codePoint = codePoints[i];
        let script3 = unicode_properties__WEBPACK_IMPORTED_MODULE_6__["default"].getScript(codePoint);
        if (script3 !== 'Common' && script3 !== 'Inherited' && script3 !== 'Unknown') return $a5878e4f4663c9e2$var$UNICODE_SCRIPTS[script3];
    }
    return $a5878e4f4663c9e2$var$UNICODE_SCRIPTS.Unknown;
}
// The scripts in this map are written from right to left
const $a5878e4f4663c9e2$var$RTL = {
    arab: true,
    hebr: true,
    syrc: true,
    thaa: true,
    cprt: true,
    khar: true,
    phnx: true,
    'nko ': true,
    lydi: true,
    avst: true,
    armi: true,
    phli: true,
    prti: true,
    sarb: true,
    orkh: true,
    samr: true,
    mand: true,
    merc: true,
    mero: true,
    // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)
    mani: true,
    mend: true,
    nbat: true,
    narb: true,
    palm: true,
    phlp: true // Psalter Pahlavi
};
function $a5878e4f4663c9e2$export$9fddb9d0dd7d8a54(script4) {
    if ($a5878e4f4663c9e2$var$RTL[script4]) return 'rtl';
    return 'ltr';
}


class $5a6ae00fa7e614b0$export$2e2bcd8739ae039 {
    constructor(glyphs, features, script, language, direction){
        /**
     * An array of Glyph objects in the run
     * @type {Glyph[]}
     */ this.glyphs = glyphs;
        /**
     * An array of GlyphPosition objects for each glyph in the run
     * @type {GlyphPosition[]}
     */ this.positions = null;
        /**
     * The script that was requested for shaping. This was either passed in or detected automatically.
     * @type {string}
     */ this.script = script;
        /**
     * The language requested for shaping, as passed in. If \`null\`, the default language for the
     * script was used.
     * @type {string}
     */ this.language = language || null;
        /**
     * The direction requested for shaping, as passed in (either ltr or rtl).
     * If \`null\`, the default direction of the script is used.
     * @type {string}
     */ this.direction = direction || $a5878e4f4663c9e2$export$9fddb9d0dd7d8a54(script);
        /**
     * The features requested during shaping. This is a combination of user
     * specified features and features chosen by the shaper.
     * @type {object}
     */ this.features = {};
        // Convert features to an object
        if (Array.isArray(features)) for (let tag of features)this.features[tag] = true;
        else if (typeof features === 'object') this.features = features;
    }
    /**
   * The total advance width of the run.
   * @type {number}
   */ get advanceWidth() {
        let width = 0;
        for (let position of this.positions)width += position.xAdvance;
        return width;
    }
    /**
  * The total advance height of the run.
  * @type {number}
  */ get advanceHeight() {
        let height = 0;
        for (let position of this.positions)height += position.yAdvance;
        return height;
    }
    /**
  * The bounding box containing all glyphs in the run.
  * @type {BBox}
  */ get bbox() {
        let bbox = new $fcb46e14b01ea01f$export$2e2bcd8739ae039;
        let x = 0;
        let y = 0;
        for(let index = 0; index < this.glyphs.length; index++){
            let glyph = this.glyphs[index];
            let p = this.positions[index];
            let b = glyph.bbox;
            bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);
            bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);
            x += p.xAdvance;
            y += p.yAdvance;
        }
        return bbox;
    }
}


class $4bff5f854806c785$export$2e2bcd8739ae039 {
    constructor(xAdvance = 0, yAdvance = 0, xOffset = 0, yOffset = 0){
        /**
     * The amount to move the virtual pen in the X direction after rendering this glyph.
     * @type {number}
     */ this.xAdvance = xAdvance;
        /**
     * The amount to move the virtual pen in the Y direction after rendering this glyph.
     * @type {number}
     */ this.yAdvance = yAdvance;
        /**
     * The offset from the pen position in the X direction at which to render this glyph.
     * @type {number}
     */ this.xOffset = xOffset;
        /**
     * The offset from the pen position in the Y direction at which to render this glyph.
     * @type {number}
     */ this.yOffset = yOffset;
    }
}




// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html
// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac
const $b603e0ade09ad01e$var$features = {
    allTypographicFeatures: {
        code: 0,
        exclusive: false,
        allTypeFeatures: 0
    },
    ligatures: {
        code: 1,
        exclusive: false,
        requiredLigatures: 0,
        commonLigatures: 2,
        rareLigatures: 4,
        // logos: 6
        rebusPictures: 8,
        diphthongLigatures: 10,
        squaredLigatures: 12,
        abbrevSquaredLigatures: 14,
        symbolLigatures: 16,
        contextualLigatures: 18,
        historicalLigatures: 20
    },
    cursiveConnection: {
        code: 2,
        exclusive: true,
        unconnected: 0,
        partiallyConnected: 1,
        cursive: 2
    },
    letterCase: {
        code: 3,
        exclusive: true
    },
    // upperAndLowerCase: 0          # deprecated
    // allCaps: 1                    # deprecated
    // allLowerCase: 2               # deprecated
    // smallCaps: 3                  # deprecated
    // initialCaps: 4                # deprecated
    // initialCapsAndSmallCaps: 5    # deprecated
    verticalSubstitution: {
        code: 4,
        exclusive: false,
        substituteVerticalForms: 0
    },
    linguisticRearrangement: {
        code: 5,
        exclusive: false,
        linguisticRearrangement: 0
    },
    numberSpacing: {
        code: 6,
        exclusive: true,
        monospacedNumbers: 0,
        proportionalNumbers: 1,
        thirdWidthNumbers: 2,
        quarterWidthNumbers: 3
    },
    smartSwash: {
        code: 8,
        exclusive: false,
        wordInitialSwashes: 0,
        wordFinalSwashes: 2,
        // lineInitialSwashes: 4
        // lineFinalSwashes: 6
        nonFinalSwashes: 8
    },
    diacritics: {
        code: 9,
        exclusive: true,
        showDiacritics: 0,
        hideDiacritics: 1,
        decomposeDiacritics: 2
    },
    verticalPosition: {
        code: 10,
        exclusive: true,
        normalPosition: 0,
        superiors: 1,
        inferiors: 2,
        ordinals: 3,
        scientificInferiors: 4
    },
    fractions: {
        code: 11,
        exclusive: true,
        noFractions: 0,
        verticalFractions: 1,
        diagonalFractions: 2
    },
    overlappingCharacters: {
        code: 13,
        exclusive: false,
        preventOverlap: 0
    },
    typographicExtras: {
        code: 14,
        exclusive: false,
        // hyphensToEmDash: 0
        // hyphenToEnDash: 2
        slashedZero: 4
    },
    // formInterrobang: 6
    // smartQuotes: 8
    // periodsToEllipsis: 10
    mathematicalExtras: {
        code: 15,
        exclusive: false,
        // hyphenToMinus: 0
        // asteristoMultiply: 2
        // slashToDivide: 4
        // inequalityLigatures: 6
        // exponents: 8
        mathematicalGreek: 10
    },
    ornamentSets: {
        code: 16,
        exclusive: true,
        noOrnaments: 0,
        dingbats: 1,
        piCharacters: 2,
        fleurons: 3,
        decorativeBorders: 4,
        internationalSymbols: 5,
        mathSymbols: 6
    },
    characterAlternatives: {
        code: 17,
        exclusive: true,
        noAlternates: 0
    },
    // user defined options
    designComplexity: {
        code: 18,
        exclusive: true,
        designLevel1: 0,
        designLevel2: 1,
        designLevel3: 2,
        designLevel4: 3,
        designLevel5: 4
    },
    styleOptions: {
        code: 19,
        exclusive: true,
        noStyleOptions: 0,
        displayText: 1,
        engravedText: 2,
        illuminatedCaps: 3,
        titlingCaps: 4,
        tallCaps: 5
    },
    characterShape: {
        code: 20,
        exclusive: true,
        traditionalCharacters: 0,
        simplifiedCharacters: 1,
        JIS1978Characters: 2,
        JIS1983Characters: 3,
        JIS1990Characters: 4,
        traditionalAltOne: 5,
        traditionalAltTwo: 6,
        traditionalAltThree: 7,
        traditionalAltFour: 8,
        traditionalAltFive: 9,
        expertCharacters: 10,
        JIS2004Characters: 11,
        hojoCharacters: 12,
        NLCCharacters: 13,
        traditionalNamesCharacters: 14
    },
    numberCase: {
        code: 21,
        exclusive: true,
        lowerCaseNumbers: 0,
        upperCaseNumbers: 1
    },
    textSpacing: {
        code: 22,
        exclusive: true,
        proportionalText: 0,
        monospacedText: 1,
        halfWidthText: 2,
        thirdWidthText: 3,
        quarterWidthText: 4,
        altProportionalText: 5,
        altHalfWidthText: 6
    },
    transliteration: {
        code: 23,
        exclusive: true,
        noTransliteration: 0
    },
    // hanjaToHangul: 1
    // hiraganaToKatakana: 2
    // katakanaToHiragana: 3
    // kanaToRomanization: 4
    // romanizationToHiragana: 5
    // romanizationToKatakana: 6
    // hanjaToHangulAltOne: 7
    // hanjaToHangulAltTwo: 8
    // hanjaToHangulAltThree: 9
    annotation: {
        code: 24,
        exclusive: true,
        noAnnotation: 0,
        boxAnnotation: 1,
        roundedBoxAnnotation: 2,
        circleAnnotation: 3,
        invertedCircleAnnotation: 4,
        parenthesisAnnotation: 5,
        periodAnnotation: 6,
        romanNumeralAnnotation: 7,
        diamondAnnotation: 8,
        invertedBoxAnnotation: 9,
        invertedRoundedBoxAnnotation: 10
    },
    kanaSpacing: {
        code: 25,
        exclusive: true,
        fullWidthKana: 0,
        proportionalKana: 1
    },
    ideographicSpacing: {
        code: 26,
        exclusive: true,
        fullWidthIdeographs: 0,
        proportionalIdeographs: 1,
        halfWidthIdeographs: 2
    },
    unicodeDecomposition: {
        code: 27,
        exclusive: false,
        canonicalComposition: 0,
        compatibilityComposition: 2,
        transcodingComposition: 4
    },
    rubyKana: {
        code: 28,
        exclusive: false,
        // noRubyKana: 0     # deprecated - use rubyKanaOff instead
        // rubyKana: 1     # deprecated - use rubyKanaOn instead
        rubyKana: 2
    },
    CJKSymbolAlternatives: {
        code: 29,
        exclusive: true,
        noCJKSymbolAlternatives: 0,
        CJKSymbolAltOne: 1,
        CJKSymbolAltTwo: 2,
        CJKSymbolAltThree: 3,
        CJKSymbolAltFour: 4,
        CJKSymbolAltFive: 5
    },
    ideographicAlternatives: {
        code: 30,
        exclusive: true,
        noIdeographicAlternatives: 0,
        ideographicAltOne: 1,
        ideographicAltTwo: 2,
        ideographicAltThree: 3,
        ideographicAltFour: 4,
        ideographicAltFive: 5
    },
    CJKVerticalRomanPlacement: {
        code: 31,
        exclusive: true,
        CJKVerticalRomanCentered: 0,
        CJKVerticalRomanHBaseline: 1
    },
    italicCJKRoman: {
        code: 32,
        exclusive: false,
        // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead
        // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead
        CJKItalicRoman: 2
    },
    caseSensitiveLayout: {
        code: 33,
        exclusive: false,
        caseSensitiveLayout: 0,
        caseSensitiveSpacing: 2
    },
    alternateKana: {
        code: 34,
        exclusive: false,
        alternateHorizKana: 0,
        alternateVertKana: 2
    },
    stylisticAlternatives: {
        code: 35,
        exclusive: false,
        noStylisticAlternates: 0,
        stylisticAltOne: 2,
        stylisticAltTwo: 4,
        stylisticAltThree: 6,
        stylisticAltFour: 8,
        stylisticAltFive: 10,
        stylisticAltSix: 12,
        stylisticAltSeven: 14,
        stylisticAltEight: 16,
        stylisticAltNine: 18,
        stylisticAltTen: 20,
        stylisticAltEleven: 22,
        stylisticAltTwelve: 24,
        stylisticAltThirteen: 26,
        stylisticAltFourteen: 28,
        stylisticAltFifteen: 30,
        stylisticAltSixteen: 32,
        stylisticAltSeventeen: 34,
        stylisticAltEighteen: 36,
        stylisticAltNineteen: 38,
        stylisticAltTwenty: 40
    },
    contextualAlternates: {
        code: 36,
        exclusive: false,
        contextualAlternates: 0,
        swashAlternates: 2,
        contextualSwashAlternates: 4
    },
    lowerCase: {
        code: 37,
        exclusive: true,
        defaultLowerCase: 0,
        lowerCaseSmallCaps: 1,
        lowerCasePetiteCaps: 2
    },
    upperCase: {
        code: 38,
        exclusive: true,
        defaultUpperCase: 0,
        upperCaseSmallCaps: 1,
        upperCasePetiteCaps: 2
    },
    languageTag: {
        code: 39,
        exclusive: true
    },
    CJKRomanSpacing: {
        code: 103,
        exclusive: true,
        halfWidthCJKRoman: 0,
        proportionalCJKRoman: 1,
        defaultCJKRoman: 2,
        fullWidthCJKRoman: 3
    }
};
const $b603e0ade09ad01e$var$feature = (name, selector)=>[
        $b603e0ade09ad01e$var$features[name].code,
        $b603e0ade09ad01e$var$features[name][selector]
    ]
;
const $b603e0ade09ad01e$var$OTMapping = {
    rlig: $b603e0ade09ad01e$var$feature('ligatures', 'requiredLigatures'),
    clig: $b603e0ade09ad01e$var$feature('ligatures', 'contextualLigatures'),
    dlig: $b603e0ade09ad01e$var$feature('ligatures', 'rareLigatures'),
    hlig: $b603e0ade09ad01e$var$feature('ligatures', 'historicalLigatures'),
    liga: $b603e0ade09ad01e$var$feature('ligatures', 'commonLigatures'),
    hist: $b603e0ade09ad01e$var$feature('ligatures', 'historicalLigatures'),
    smcp: $b603e0ade09ad01e$var$feature('lowerCase', 'lowerCaseSmallCaps'),
    pcap: $b603e0ade09ad01e$var$feature('lowerCase', 'lowerCasePetiteCaps'),
    frac: $b603e0ade09ad01e$var$feature('fractions', 'diagonalFractions'),
    dnom: $b603e0ade09ad01e$var$feature('fractions', 'diagonalFractions'),
    numr: $b603e0ade09ad01e$var$feature('fractions', 'diagonalFractions'),
    afrc: $b603e0ade09ad01e$var$feature('fractions', 'verticalFractions'),
    // aalt
    // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?
    // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?
    // unic, vatu, vhal, vjmo, vpal, vrt2
    // dist -> trak table?
    // kern, vkrn -> kern table
    // lfbd + opbd + rtbd -> opbd table?
    // mark, mkmk -> acnt table?
    // locl -> languageTag + ltag table
    case: $b603e0ade09ad01e$var$feature('caseSensitiveLayout', 'caseSensitiveLayout'),
    ccmp: $b603e0ade09ad01e$var$feature('unicodeDecomposition', 'canonicalComposition'),
    cpct: $b603e0ade09ad01e$var$feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),
    valt: $b603e0ade09ad01e$var$feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),
    swsh: $b603e0ade09ad01e$var$feature('contextualAlternates', 'swashAlternates'),
    cswh: $b603e0ade09ad01e$var$feature('contextualAlternates', 'contextualSwashAlternates'),
    curs: $b603e0ade09ad01e$var$feature('cursiveConnection', 'cursive'),
    c2pc: $b603e0ade09ad01e$var$feature('upperCase', 'upperCasePetiteCaps'),
    c2sc: $b603e0ade09ad01e$var$feature('upperCase', 'upperCaseSmallCaps'),
    init: $b603e0ade09ad01e$var$feature('smartSwash', 'wordInitialSwashes'),
    fin2: $b603e0ade09ad01e$var$feature('smartSwash', 'wordFinalSwashes'),
    medi: $b603e0ade09ad01e$var$feature('smartSwash', 'nonFinalSwashes'),
    med2: $b603e0ade09ad01e$var$feature('smartSwash', 'nonFinalSwashes'),
    fin3: $b603e0ade09ad01e$var$feature('smartSwash', 'wordFinalSwashes'),
    fina: $b603e0ade09ad01e$var$feature('smartSwash', 'wordFinalSwashes'),
    pkna: $b603e0ade09ad01e$var$feature('kanaSpacing', 'proportionalKana'),
    half: $b603e0ade09ad01e$var$feature('textSpacing', 'halfWidthText'),
    halt: $b603e0ade09ad01e$var$feature('textSpacing', 'altHalfWidthText'),
    hkna: $b603e0ade09ad01e$var$feature('alternateKana', 'alternateHorizKana'),
    vkna: $b603e0ade09ad01e$var$feature('alternateKana', 'alternateVertKana'),
    // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated
    ital: $b603e0ade09ad01e$var$feature('italicCJKRoman', 'CJKItalicRoman'),
    lnum: $b603e0ade09ad01e$var$feature('numberCase', 'upperCaseNumbers'),
    onum: $b603e0ade09ad01e$var$feature('numberCase', 'lowerCaseNumbers'),
    mgrk: $b603e0ade09ad01e$var$feature('mathematicalExtras', 'mathematicalGreek'),
    // nalt: not enough info. what type of annotation?
    // ornm: ditto, which ornament style?
    calt: $b603e0ade09ad01e$var$feature('contextualAlternates', 'contextualAlternates'),
    vrt2: $b603e0ade09ad01e$var$feature('verticalSubstitution', 'substituteVerticalForms'),
    vert: $b603e0ade09ad01e$var$feature('verticalSubstitution', 'substituteVerticalForms'),
    tnum: $b603e0ade09ad01e$var$feature('numberSpacing', 'monospacedNumbers'),
    pnum: $b603e0ade09ad01e$var$feature('numberSpacing', 'proportionalNumbers'),
    sups: $b603e0ade09ad01e$var$feature('verticalPosition', 'superiors'),
    subs: $b603e0ade09ad01e$var$feature('verticalPosition', 'inferiors'),
    ordn: $b603e0ade09ad01e$var$feature('verticalPosition', 'ordinals'),
    pwid: $b603e0ade09ad01e$var$feature('textSpacing', 'proportionalText'),
    hwid: $b603e0ade09ad01e$var$feature('textSpacing', 'halfWidthText'),
    qwid: $b603e0ade09ad01e$var$feature('textSpacing', 'quarterWidthText'),
    twid: $b603e0ade09ad01e$var$feature('textSpacing', 'thirdWidthText'),
    fwid: $b603e0ade09ad01e$var$feature('textSpacing', 'proportionalText'),
    palt: $b603e0ade09ad01e$var$feature('textSpacing', 'altProportionalText'),
    trad: $b603e0ade09ad01e$var$feature('characterShape', 'traditionalCharacters'),
    smpl: $b603e0ade09ad01e$var$feature('characterShape', 'simplifiedCharacters'),
    jp78: $b603e0ade09ad01e$var$feature('characterShape', 'JIS1978Characters'),
    jp83: $b603e0ade09ad01e$var$feature('characterShape', 'JIS1983Characters'),
    jp90: $b603e0ade09ad01e$var$feature('characterShape', 'JIS1990Characters'),
    jp04: $b603e0ade09ad01e$var$feature('characterShape', 'JIS2004Characters'),
    expt: $b603e0ade09ad01e$var$feature('characterShape', 'expertCharacters'),
    hojo: $b603e0ade09ad01e$var$feature('characterShape', 'hojoCharacters'),
    nlck: $b603e0ade09ad01e$var$feature('characterShape', 'NLCCharacters'),
    tnam: $b603e0ade09ad01e$var$feature('characterShape', 'traditionalNamesCharacters'),
    ruby: $b603e0ade09ad01e$var$feature('rubyKana', 'rubyKana'),
    titl: $b603e0ade09ad01e$var$feature('styleOptions', 'titlingCaps'),
    zero: $b603e0ade09ad01e$var$feature('typographicExtras', 'slashedZero'),
    ss01: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltOne'),
    ss02: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltTwo'),
    ss03: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltThree'),
    ss04: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltFour'),
    ss05: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltFive'),
    ss06: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltSix'),
    ss07: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltSeven'),
    ss08: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltEight'),
    ss09: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltNine'),
    ss10: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltTen'),
    ss11: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltEleven'),
    ss12: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltTwelve'),
    ss13: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltThirteen'),
    ss14: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltFourteen'),
    ss15: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltFifteen'),
    ss16: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltSixteen'),
    ss17: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltSeventeen'),
    ss18: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltEighteen'),
    ss19: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltNineteen'),
    ss20: $b603e0ade09ad01e$var$feature('stylisticAlternatives', 'stylisticAltTwenty')
};
// salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose
// Add cv01-cv99 features
for(let i = 1; i <= 99; i++)$b603e0ade09ad01e$var$OTMapping[\`cv\${\`00\${i}\`.slice(-2)}\`] = [
    $b603e0ade09ad01e$var$features.characterAlternatives.code,
    i
];
// create inverse mapping
let $b603e0ade09ad01e$var$AATMapping = {};
for(let ot in $b603e0ade09ad01e$var$OTMapping){
    let aat = $b603e0ade09ad01e$var$OTMapping[ot];
    if ($b603e0ade09ad01e$var$AATMapping[aat[0]] == null) $b603e0ade09ad01e$var$AATMapping[aat[0]] = {};
    $b603e0ade09ad01e$var$AATMapping[aat[0]][aat[1]] = ot;
}
function $b603e0ade09ad01e$export$b813f7d2a1677c16(features) {
    let res = {};
    for(let k in features){
        let r;
        if (r = $b603e0ade09ad01e$var$OTMapping[k]) {
            if (res[r[0]] == null) res[r[0]] = {};
            res[r[0]][r[1]] = features[k];
        }
    }
    return res;
}
// Maps strings in a [featureType, featureSetting]
// to their equivalent number codes
function $b603e0ade09ad01e$var$mapFeatureStrings(f) {
    let [type, setting] = f;
    if (isNaN(type)) var typeCode = $b603e0ade09ad01e$var$features[type] && $b603e0ade09ad01e$var$features[type].code;
    else var typeCode = type;
    if (isNaN(setting)) var settingCode = $b603e0ade09ad01e$var$features[type] && $b603e0ade09ad01e$var$features[type][setting];
    else var settingCode = setting;
    return [
        typeCode,
        settingCode
    ];
}
function $b603e0ade09ad01e$export$bd6df347a4f391c4(features) {
    let res = {};
    if (Array.isArray(features)) for(let k = 0; k < features.length; k++){
        let r;
        let f = $b603e0ade09ad01e$var$mapFeatureStrings(features[k]);
        if (r = $b603e0ade09ad01e$var$AATMapping[f[0]] && $b603e0ade09ad01e$var$AATMapping[f[0]][f[1]]) res[r] = true;
    }
    else if (typeof features === 'object') for(let type in features){
        let feature = features[type];
        for(let setting in feature){
            let r;
            let f = $b603e0ade09ad01e$var$mapFeatureStrings([
                type,
                setting
            ]);
            if (feature[setting] && (r = $b603e0ade09ad01e$var$AATMapping[f[0]] && $b603e0ade09ad01e$var$AATMapping[f[0]][f[1]])) res[r] = true;
        }
    }
    return Object.keys(res);
}







var _class;
let $16667a2c0f0b1be5$export$2e2bcd8739ae039 = (_class = class $16667a2c0f0b1be5$export$2e2bcd8739ae039 {
    constructor(table){
        this.table = table;
    }
    lookup(glyph) {
        switch(this.table.version){
            case 0:
                return this.table.values.getItem(glyph);
            case 2:
            case 4:
                {
                    let min = 0;
                    let max = this.table.binarySearchHeader.nUnits - 1;
                    while(min <= max){
                        var mid = min + max >> 1;
                        var seg = this.table.segments[mid];
                        // special end of search value
                        if (seg.firstGlyph === 0xffff) return null;
                        if (glyph < seg.firstGlyph) max = mid - 1;
                        else if (glyph > seg.lastGlyph) min = mid + 1;
                        else {
                            if (this.table.version === 2) return seg.value;
                            else return seg.values[glyph - seg.firstGlyph];
                        }
                    }
                    return null;
                }
            case 6:
                {
                    let min = 0;
                    let max = this.table.binarySearchHeader.nUnits - 1;
                    while(min <= max){
                        var mid = min + max >> 1;
                        var seg = this.table.segments[mid];
                        // special end of search value
                        if (seg.glyph === 0xffff) return null;
                        if (glyph < seg.glyph) max = mid - 1;
                        else if (glyph > seg.glyph) min = mid + 1;
                        else return seg.value;
                    }
                    return null;
                }
            case 8:
                return this.table.values[glyph - this.table.firstGlyph];
            default:
                throw new Error(\`Unknown lookup table format: \${this.table.version}\`);
        }
    }
    glyphsForValue(classValue) {
        let res = [];
        switch(this.table.version){
            case 2:
            case 4:
                for (let segment of this.table.segments)if (this.table.version === 2 && segment.value === classValue) res.push(...$f3ad94c9f84f4d57$export$d02631cccf789723(segment.firstGlyph, segment.lastGlyph + 1));
                else {
                    for(let index = 0; index < segment.values.length; index++)if (segment.values[index] === classValue) res.push(segment.firstGlyph + index);
                }
                break;
            case 6:
                for (let segment1 of this.table.segments)if (segment1.value === classValue) res.push(segment1.glyph);
                break;
            case 8:
                for(let i = 0; i < this.table.values.length; i++)if (this.table.values[i] === classValue) res.push(this.table.firstGlyph + i);
                break;
            default:
                throw new Error(\`Unknown lookup table format: \${this.table.version}\`);
        }
        return res;
    }
}, (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "glyphsForValue", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "glyphsForValue"), _class.prototype), _class);


const $de324b614d9ee26c$var$START_OF_TEXT_STATE = 0;
const $de324b614d9ee26c$var$START_OF_LINE_STATE = 1;
const $de324b614d9ee26c$var$END_OF_TEXT_CLASS = 0;
const $de324b614d9ee26c$var$OUT_OF_BOUNDS_CLASS = 1;
const $de324b614d9ee26c$var$DELETED_GLYPH_CLASS = 2;
const $de324b614d9ee26c$var$END_OF_LINE_CLASS = 3;
const $de324b614d9ee26c$var$DONT_ADVANCE = 0x4000;
class $de324b614d9ee26c$export$2e2bcd8739ae039 {
    constructor(stateTable){
        this.stateTable = stateTable;
        this.lookupTable = new $16667a2c0f0b1be5$export$2e2bcd8739ae039(stateTable.classTable);
    }
    process(glyphs, reverse, processEntry) {
        let currentState = $de324b614d9ee26c$var$START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?
        let index = reverse ? glyphs.length - 1 : 0;
        let dir = reverse ? -1 : 1;
        while(dir === 1 && index <= glyphs.length || dir === -1 && index >= -1){
            let glyph = null;
            let classCode = $de324b614d9ee26c$var$OUT_OF_BOUNDS_CLASS;
            let shouldAdvance = true;
            if (index === glyphs.length || index === -1) classCode = $de324b614d9ee26c$var$END_OF_TEXT_CLASS;
            else {
                glyph = glyphs[index];
                if (glyph.id === 0xffff) classCode = $de324b614d9ee26c$var$DELETED_GLYPH_CLASS;
                else {
                    classCode = this.lookupTable.lookup(glyph.id);
                    if (classCode == null) classCode = $de324b614d9ee26c$var$OUT_OF_BOUNDS_CLASS;
                }
            }
            let row = this.stateTable.stateArray.getItem(currentState);
            let entryIndex = row[classCode];
            let entry = this.stateTable.entryTable.getItem(entryIndex);
            if (classCode !== $de324b614d9ee26c$var$END_OF_TEXT_CLASS && classCode !== $de324b614d9ee26c$var$DELETED_GLYPH_CLASS) {
                processEntry(glyph, entry, index);
                shouldAdvance = !(entry.flags & $de324b614d9ee26c$var$DONT_ADVANCE);
            }
            currentState = entry.newState;
            if (shouldAdvance) index += dir;
        }
        return glyphs;
    }
    /**
   * Performs a depth-first traversal of the glyph strings
   * represented by the state machine.
   */ traverse(opts, state = 0, visited = new Set) {
        if (visited.has(state)) return;
        visited.add(state);
        let { nClasses: nClasses , stateArray: stateArray , entryTable: entryTable  } = this.stateTable;
        let row = stateArray.getItem(state);
        // Skip predefined classes
        for(let classCode = 4; classCode < nClasses; classCode++){
            let entryIndex = row[classCode];
            let entry = entryTable.getItem(entryIndex);
            // Try all glyphs in the class
            for (let glyph of this.lookupTable.glyphsForValue(classCode)){
                if (opts.enter) opts.enter(glyph, entry);
                if (entry.newState !== 0) this.traverse(opts, entry.newState, visited);
                if (opts.exit) opts.exit(glyph, entry);
            }
        }
    }
}




var _class;
// indic replacement flags
const $696c050512749a50$var$MARK_FIRST = 0x8000;
const $696c050512749a50$var$MARK_LAST = 0x2000;
const $696c050512749a50$var$VERB = 0x000F;
// contextual substitution and glyph insertion flag
const $696c050512749a50$var$SET_MARK = 0x8000;
// ligature entry flags
const $696c050512749a50$var$SET_COMPONENT = 0x8000;
const $696c050512749a50$var$PERFORM_ACTION = 0x2000;
// ligature action masks
const $696c050512749a50$var$LAST_MASK = 0x80000000;
const $696c050512749a50$var$STORE_MASK = 0x40000000;
const $696c050512749a50$var$OFFSET_MASK = 0x3FFFFFFF;
const $696c050512749a50$var$VERTICAL_ONLY = 0x800000;
const $696c050512749a50$var$REVERSE_DIRECTION = 0x400000;
const $696c050512749a50$var$HORIZONTAL_AND_VERTICAL = 0x200000;
// glyph insertion flags
const $696c050512749a50$var$CURRENT_IS_KASHIDA_LIKE = 0x2000;
const $696c050512749a50$var$MARKED_IS_KASHIDA_LIKE = 0x1000;
const $696c050512749a50$var$CURRENT_INSERT_BEFORE = 0x0800;
const $696c050512749a50$var$MARKED_INSERT_BEFORE = 0x0400;
const $696c050512749a50$var$CURRENT_INSERT_COUNT = 0x03E0;
const $696c050512749a50$var$MARKED_INSERT_COUNT = 0x001F;
let $696c050512749a50$export$2e2bcd8739ae039 = (_class = class $696c050512749a50$export$2e2bcd8739ae039 {
    constructor(font){
        this.processIndicRearragement = this.processIndicRearragement.bind(this);
        this.processContextualSubstitution = this.processContextualSubstitution.bind(this);
        this.processLigature = this.processLigature.bind(this);
        this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);
        this.processGlyphInsertion = this.processGlyphInsertion.bind(this);
        this.font = font;
        this.morx = font.morx;
        this.inputCache = null;
    }
    // Processes an array of glyphs and applies the specified features
    // Features should be in the form of {featureType:{featureSetting:boolean}}
    process(glyphs, features = {}) {
        for (let chain of this.morx.chains){
            let flags = chain.defaultFlags;
            // enable/disable the requested features
            for (let feature of chain.features){
                let f;
                if (f = features[feature.featureType]) {
                    if (f[feature.featureSetting]) {
                        flags &= feature.disableFlags;
                        flags |= feature.enableFlags;
                    } else if (f[feature.featureSetting] === false) {
                        flags |= ~feature.disableFlags;
                        flags &= ~feature.enableFlags;
                    }
                }
            }
            for (let subtable of chain.subtables)if (subtable.subFeatureFlags & flags) this.processSubtable(subtable, glyphs);
        }
        // remove deleted glyphs
        let index = glyphs.length - 1;
        while(index >= 0){
            if (glyphs[index].id === 0xffff) glyphs.splice(index, 1);
            index--;
        }
        return glyphs;
    }
    processSubtable(subtable, glyphs) {
        this.subtable = subtable;
        this.glyphs = glyphs;
        if (this.subtable.type === 4) {
            this.processNoncontextualSubstitutions(this.subtable, this.glyphs);
            return;
        }
        this.ligatureStack = [];
        this.markedGlyph = null;
        this.firstGlyph = null;
        this.lastGlyph = null;
        this.markedIndex = null;
        let stateMachine = this.getStateMachine(subtable);
        let process = this.getProcessor();
        let reverse = !!(this.subtable.coverage & $696c050512749a50$var$REVERSE_DIRECTION);
        return stateMachine.process(this.glyphs, reverse, process);
    }
    getStateMachine(subtable) {
        return new $de324b614d9ee26c$export$2e2bcd8739ae039(subtable.table.stateTable);
    }
    getProcessor() {
        switch(this.subtable.type){
            case 0:
                return this.processIndicRearragement;
            case 1:
                return this.processContextualSubstitution;
            case 2:
                return this.processLigature;
            case 4:
                return this.processNoncontextualSubstitutions;
            case 5:
                return this.processGlyphInsertion;
            default:
                throw new Error(\`Invalid morx subtable type: \${this.subtable.type}\`);
        }
    }
    processIndicRearragement(glyph, entry, index) {
        if (entry.flags & $696c050512749a50$var$MARK_FIRST) this.firstGlyph = index;
        if (entry.flags & $696c050512749a50$var$MARK_LAST) this.lastGlyph = index;
        $696c050512749a50$var$reorderGlyphs(this.glyphs, entry.flags & $696c050512749a50$var$VERB, this.firstGlyph, this.lastGlyph);
    }
    processContextualSubstitution(glyph, entry, index) {
        let subsitutions = this.subtable.table.substitutionTable.items;
        if (entry.markIndex !== 0xffff) {
            let lookup = subsitutions.getItem(entry.markIndex);
            let lookupTable = new $16667a2c0f0b1be5$export$2e2bcd8739ae039(lookup);
            glyph = this.glyphs[this.markedGlyph];
            var gid = lookupTable.lookup(glyph.id);
            if (gid) this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);
        }
        if (entry.currentIndex !== 0xffff) {
            let lookup = subsitutions.getItem(entry.currentIndex);
            let lookupTable = new $16667a2c0f0b1be5$export$2e2bcd8739ae039(lookup);
            glyph = this.glyphs[index];
            var gid = lookupTable.lookup(glyph.id);
            if (gid) this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);
        }
        if (entry.flags & $696c050512749a50$var$SET_MARK) this.markedGlyph = index;
    }
    processLigature(glyph, entry, index) {
        if (entry.flags & $696c050512749a50$var$SET_COMPONENT) this.ligatureStack.push(index);
        if (entry.flags & $696c050512749a50$var$PERFORM_ACTION) {
            let actions = this.subtable.table.ligatureActions;
            let components = this.subtable.table.components;
            let ligatureList = this.subtable.table.ligatureList;
            let actionIndex = entry.action;
            let last = false;
            let ligatureIndex = 0;
            let codePoints = [];
            let ligatureGlyphs = [];
            while(!last){
                let componentGlyph = this.ligatureStack.pop();
                codePoints.unshift(...this.glyphs[componentGlyph].codePoints);
                let action = actions.getItem(actionIndex++);
                last = !!(action & $696c050512749a50$var$LAST_MASK);
                let store = !!(action & $696c050512749a50$var$STORE_MASK);
                let offset = (action & $696c050512749a50$var$OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits
                offset += this.glyphs[componentGlyph].id;
                let component = components.getItem(offset);
                ligatureIndex += component;
                if (last || store) {
                    let ligatureEntry = ligatureList.getItem(ligatureIndex);
                    this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);
                    ligatureGlyphs.push(componentGlyph);
                    ligatureIndex = 0;
                    codePoints = [];
                } else this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);
            }
            // Put ligature glyph indexes back on the stack
            this.ligatureStack.push(...ligatureGlyphs);
        }
    }
    processNoncontextualSubstitutions(subtable, glyphs, index) {
        let lookupTable = new $16667a2c0f0b1be5$export$2e2bcd8739ae039(subtable.table.lookupTable);
        for(index = 0; index < glyphs.length; index++){
            let glyph = glyphs[index];
            if (glyph.id !== 0xffff) {
                let gid = lookupTable.lookup(glyph.id);
                if (gid) glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);
            }
        }
    }
    _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {
        let insertions = [];
        while(count--){
            let gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);
            insertions.push(this.font.getGlyph(gid));
        }
        if (!isBefore) glyphIndex++;
        this.glyphs.splice(glyphIndex, 0, ...insertions);
    }
    processGlyphInsertion(glyph, entry, index) {
        if (entry.flags & $696c050512749a50$var$SET_MARK) this.markedIndex = index;
        if (entry.markedInsertIndex !== 0xffff) {
            let count = (entry.flags & $696c050512749a50$var$MARKED_INSERT_COUNT) >>> 5;
            let isBefore = !!(entry.flags & $696c050512749a50$var$MARKED_INSERT_BEFORE);
            this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);
        }
        if (entry.currentInsertIndex !== 0xffff) {
            let count = (entry.flags & $696c050512749a50$var$CURRENT_INSERT_COUNT) >>> 5;
            let isBefore = !!(entry.flags & $696c050512749a50$var$CURRENT_INSERT_BEFORE);
            this._insertGlyphs(index, entry.currentInsertIndex, count, isBefore);
        }
    }
    getSupportedFeatures() {
        let features = [];
        for (let chain of this.morx.chains)for (let feature of chain.features)features.push([
            feature.featureType,
            feature.featureSetting
        ]);
        return features;
    }
    generateInputs(gid) {
        if (!this.inputCache) this.generateInputCache();
        return this.inputCache[gid] || [];
    }
    generateInputCache() {
        this.inputCache = {};
        for (let chain of this.morx.chains){
            let flags = chain.defaultFlags;
            for (let subtable of chain.subtables)if (subtable.subFeatureFlags & flags) this.generateInputsForSubtable(subtable);
        }
    }
    generateInputsForSubtable(subtable) {
        // Currently, only supporting ligature subtables.
        if (subtable.type !== 2) return;
        let reverse = !!(subtable.coverage & $696c050512749a50$var$REVERSE_DIRECTION);
        if (reverse) throw new Error('Reverse subtable, not supported.');
        this.subtable = subtable;
        this.ligatureStack = [];
        let stateMachine = this.getStateMachine(subtable);
        let process = this.getProcessor();
        let input = [];
        let stack = [];
        this.glyphs = [];
        stateMachine.traverse({
            enter: (glyph, entry)=>{
                let glyphs = this.glyphs;
                stack.push({
                    glyphs: glyphs.slice(),
                    ligatureStack: this.ligatureStack.slice()
                });
                // Add glyph to input and glyphs to process.
                let g1 = this.font.getGlyph(glyph);
                input.push(g1);
                glyphs.push(input[input.length - 1]);
                // Process ligature substitution
                process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);
                // Add input to result if only one matching (non-deleted) glyph remains.
                let count = 0;
                let found = 0;
                for(let i = 0; i < glyphs.length && count <= 1; i++)if (glyphs[i].id !== 0xffff) {
                    count++;
                    found = glyphs[i].id;
                }
                if (count === 1) {
                    let result = input.map((g)=>g.id
                    );
                    let cache = this.inputCache[found];
                    if (cache) cache.push(result);
                    else this.inputCache[found] = [
                        result
                    ];
                }
            },
            exit: ()=>{
                ({ glyphs: this.glyphs , ligatureStack: this.ligatureStack  } = stack.pop());
                input.pop();
            }
        });
    }
}, (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "getStateMachine", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "getStateMachine"), _class.prototype), _class);
// swaps the glyphs in rangeA with those in rangeB
// reverse the glyphs inside those ranges if specified
// ranges are in [offset, length] format
function $696c050512749a50$var$swap(glyphs, rangeA, rangeB, reverseA = false, reverseB = false) {
    let end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);
    if (reverseB) end.reverse();
    let start = glyphs.splice(rangeA[0], rangeA[1], ...end);
    if (reverseA) start.reverse();
    glyphs.splice(rangeB[0] - (rangeA[1] - 1), 0, ...start);
    return glyphs;
}
function $696c050512749a50$var$reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {
    let length = lastGlyph - firstGlyph + 1;
    switch(verb){
        case 0:
            return glyphs;
        case 1:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                1
            ], [
                lastGlyph,
                0
            ]);
        case 2:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                0
            ], [
                lastGlyph,
                1
            ]);
        case 3:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                1
            ], [
                lastGlyph,
                1
            ]);
        case 4:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                2
            ], [
                lastGlyph,
                0
            ]);
        case 5:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                2
            ], [
                lastGlyph,
                0
            ], true, false);
        case 6:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                0
            ], [
                lastGlyph,
                2
            ]);
        case 7:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                0
            ], [
                lastGlyph,
                2
            ], false, true);
        case 8:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                1
            ], [
                lastGlyph,
                2
            ]);
        case 9:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                1
            ], [
                lastGlyph,
                2
            ], false, true);
        case 10:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                2
            ], [
                lastGlyph,
                1
            ]);
        case 11:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                2
            ], [
                lastGlyph,
                1
            ], true, false);
        case 12:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                2
            ], [
                lastGlyph,
                2
            ]);
        case 13:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                2
            ], [
                lastGlyph,
                2
            ], true, false);
        case 14:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                2
            ], [
                lastGlyph,
                2
            ], false, true);
        case 15:
            return $696c050512749a50$var$swap(glyphs, [
                firstGlyph,
                2
            ], [
                lastGlyph,
                2
            ], true, true);
        default:
            throw new Error(\`Unknown verb: \${verb}\`);
    }
}


class $9273c77bc46b13e0$export$2e2bcd8739ae039 {
    constructor(font){
        this.font = font;
        this.morxProcessor = new $696c050512749a50$export$2e2bcd8739ae039(font);
        this.fallbackPosition = false;
    }
    substitute(glyphRun) {
        // AAT expects the glyphs to be in visual order prior to morx processing,
        // so reverse the glyphs if the script is right-to-left.
        if (glyphRun.direction === 'rtl') glyphRun.glyphs.reverse();
        this.morxProcessor.process(glyphRun.glyphs, $b603e0ade09ad01e$export$b813f7d2a1677c16(glyphRun.features));
    }
    getAvailableFeatures(script, language) {
        return $b603e0ade09ad01e$export$bd6df347a4f391c4(this.morxProcessor.getSupportedFeatures());
    }
    stringsForGlyph(gid) {
        let glyphStrings = this.morxProcessor.generateInputs(gid);
        let result = new Set;
        for (let glyphs of glyphStrings)this._addStrings(glyphs, 0, result, '');
        return result;
    }
    _addStrings(glyphs, index, strings, string) {
        let codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);
        for (let codePoint of codePoints){
            let s = string + String.fromCodePoint(codePoint);
            if (index < glyphs.length - 1) this._addStrings(glyphs, index + 1, strings, s);
            else strings.add(s);
        }
    }
}



class $d208953d14e55e3c$export$2e2bcd8739ae039 {
    constructor(font, script, direction){
        this.font = font;
        this.script = script;
        this.direction = direction;
        this.stages = [];
        this.globalFeatures = {};
        this.allFeatures = {};
    }
    /**
   * Adds the given features to the last stage.
   * Ignores features that have already been applied.
   */ _addFeatures(features, global) {
        let stageIndex = this.stages.length - 1;
        let stage = this.stages[stageIndex];
        for (let feature of features)if (this.allFeatures[feature] == null) {
            stage.push(feature);
            this.allFeatures[feature] = stageIndex;
            if (global) this.globalFeatures[feature] = true;
        }
    }
    /**
   * Add features to the last stage
   */ add(arg, global = true) {
        if (this.stages.length === 0) this.stages.push([]);
        if (typeof arg === 'string') arg = [
            arg
        ];
        if (Array.isArray(arg)) this._addFeatures(arg, global);
        else if (typeof arg === 'object') {
            this._addFeatures(arg.global || [], true);
            this._addFeatures(arg.local || [], false);
        } else throw new Error("Unsupported argument to ShapingPlan#add");
    }
    /**
   * Add a new stage
   */ addStage(arg, global) {
        if (typeof arg === 'function') this.stages.push(arg, []);
        else {
            this.stages.push([]);
            this.add(arg, global);
        }
    }
    setFeatureOverrides(features) {
        if (Array.isArray(features)) this.add(features);
        else if (typeof features === 'object') for(let tag in features){
            if (features[tag]) this.add(tag);
            else if (this.allFeatures[tag] != null) {
                let stage = this.stages[this.allFeatures[tag]];
                stage.splice(stage.indexOf(tag), 1);
                delete this.allFeatures[tag];
                delete this.globalFeatures[tag];
            }
        }
    }
    /**
   * Assigns the global features to the given glyphs
   */ assignGlobalFeatures(glyphs) {
        for (let glyph of glyphs)for(let feature in this.globalFeatures)glyph.features[feature] = true;
    }
    /**
   * Executes the planned stages using the given OTProcessor
   */ process(processor, glyphs, positions) {
        for (let stage of this.stages){
            if (typeof stage === 'function') {
                if (!positions) stage(this.font, glyphs, this);
            } else if (stage.length > 0) processor.applyFeatures(stage, glyphs, positions);
        }
    }
}



const $5340de7a86f3ae85$var$VARIATION_FEATURES = [
    'rvrn'
];
const $5340de7a86f3ae85$var$COMMON_FEATURES = [
    'ccmp',
    'locl',
    'rlig',
    'mark',
    'mkmk'
];
const $5340de7a86f3ae85$var$FRACTIONAL_FEATURES = [
    'frac',
    'numr',
    'dnom'
];
const $5340de7a86f3ae85$var$HORIZONTAL_FEATURES = [
    'calt',
    'clig',
    'liga',
    'rclt',
    'curs',
    'kern'
];
const $5340de7a86f3ae85$var$VERTICAL_FEATURES = [
    'vert'
];
const $5340de7a86f3ae85$var$DIRECTIONAL_FEATURES = {
    ltr: [
        'ltra',
        'ltrm'
    ],
    rtl: [
        'rtla',
        'rtlm'
    ]
};
class $5340de7a86f3ae85$export$2e2bcd8739ae039 {
    static zeroMarkWidths = 'AFTER_GPOS';
    static plan(plan, glyphs, features) {
        // Plan the features we want to apply
        this.planPreprocessing(plan);
        this.planFeatures(plan);
        this.planPostprocessing(plan, features);
        // Assign the global features to all the glyphs
        plan.assignGlobalFeatures(glyphs);
        // Assign local features to glyphs
        this.assignFeatures(plan, glyphs);
    }
    static planPreprocessing(plan) {
        plan.add({
            global: [
                ...$5340de7a86f3ae85$var$VARIATION_FEATURES,
                ...$5340de7a86f3ae85$var$DIRECTIONAL_FEATURES[plan.direction]
            ],
            local: $5340de7a86f3ae85$var$FRACTIONAL_FEATURES
        });
    }
    static planFeatures(plan) {
    // Do nothing by default. Let subclasses override this.
    }
    static planPostprocessing(plan, userFeatures) {
        plan.add([
            ...$5340de7a86f3ae85$var$COMMON_FEATURES,
            ...$5340de7a86f3ae85$var$HORIZONTAL_FEATURES
        ]);
        plan.setFeatureOverrides(userFeatures);
    }
    static assignFeatures(plan, glyphs) {
        // Enable contextual fractions
        for(let i = 0; i < glyphs.length; i++){
            let glyph = glyphs[i];
            if (glyph.codePoints[0] === 0x2044) {
                let start = i;
                let end = i + 1;
                // Apply numerator
                while(start > 0 && unicode_properties__WEBPACK_IMPORTED_MODULE_6__["default"].isDigit(glyphs[start - 1].codePoints[0])){
                    glyphs[start - 1].features.numr = true;
                    glyphs[start - 1].features.frac = true;
                    start--;
                }
                // Apply denominator
                while(end < glyphs.length && unicode_properties__WEBPACK_IMPORTED_MODULE_6__["default"].isDigit(glyphs[end].codePoints[0])){
                    glyphs[end].features.dnom = true;
                    glyphs[end].features.frac = true;
                    end++;
                }
                // Apply fraction slash
                glyph.features.frac = true;
                i = end - 1;
            }
        }
    }
}






var $5cab828b3273a17c$require$Buffer = buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer;
const $5cab828b3273a17c$var$trie = new unicode_trie__WEBPACK_IMPORTED_MODULE_7__($5cab828b3273a17c$require$Buffer.from("ABABAAAAAACgMQAAAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=", "base64"));
const $5cab828b3273a17c$var$FEATURES = [
    'isol',
    'fina',
    'fin2',
    'fin3',
    'medi',
    'med2',
    'init'
];
const $5cab828b3273a17c$var$ShapingClasses = {
    Non_Joining: 0,
    Left_Joining: 1,
    Right_Joining: 2,
    Dual_Joining: 3,
    Join_Causing: 3,
    ALAPH: 4,
    'DALATH RISH': 5,
    Transparent: 6
};
const $5cab828b3273a17c$var$ISOL = 'isol';
const $5cab828b3273a17c$var$FINA = 'fina';
const $5cab828b3273a17c$var$FIN2 = 'fin2';
const $5cab828b3273a17c$var$FIN3 = 'fin3';
const $5cab828b3273a17c$var$MEDI = 'medi';
const $5cab828b3273a17c$var$MED2 = 'med2';
const $5cab828b3273a17c$var$INIT = 'init';
const $5cab828b3273a17c$var$NONE = null;
// Each entry is [prevAction, curAction, nextState]
const $5cab828b3273a17c$var$STATE_TABLE = [
    //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH
    // State 0: prev was U,  not willing to join.
    [
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$NONE,
            0
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            2
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            1
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            2
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            1
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            6
        ]
    ],
    // State 1: prev was R or ISOL/ALAPH,  not willing to join.
    [
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$NONE,
            0
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            2
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            1
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            2
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$FIN2,
            5
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            6
        ]
    ],
    // State 2: prev was D/L in ISOL form,  willing to join.
    [
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$NONE,
            0
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            2
        ],
        [
            $5cab828b3273a17c$var$INIT,
            $5cab828b3273a17c$var$FINA,
            1
        ],
        [
            $5cab828b3273a17c$var$INIT,
            $5cab828b3273a17c$var$FINA,
            3
        ],
        [
            $5cab828b3273a17c$var$INIT,
            $5cab828b3273a17c$var$FINA,
            4
        ],
        [
            $5cab828b3273a17c$var$INIT,
            $5cab828b3273a17c$var$FINA,
            6
        ]
    ],
    // State 3: prev was D in FINA form,  willing to join.
    [
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$NONE,
            0
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            2
        ],
        [
            $5cab828b3273a17c$var$MEDI,
            $5cab828b3273a17c$var$FINA,
            1
        ],
        [
            $5cab828b3273a17c$var$MEDI,
            $5cab828b3273a17c$var$FINA,
            3
        ],
        [
            $5cab828b3273a17c$var$MEDI,
            $5cab828b3273a17c$var$FINA,
            4
        ],
        [
            $5cab828b3273a17c$var$MEDI,
            $5cab828b3273a17c$var$FINA,
            6
        ]
    ],
    // State 4: prev was FINA ALAPH,  not willing to join.
    [
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$NONE,
            0
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            2
        ],
        [
            $5cab828b3273a17c$var$MED2,
            $5cab828b3273a17c$var$ISOL,
            1
        ],
        [
            $5cab828b3273a17c$var$MED2,
            $5cab828b3273a17c$var$ISOL,
            2
        ],
        [
            $5cab828b3273a17c$var$MED2,
            $5cab828b3273a17c$var$FIN2,
            5
        ],
        [
            $5cab828b3273a17c$var$MED2,
            $5cab828b3273a17c$var$ISOL,
            6
        ]
    ],
    // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.
    [
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$NONE,
            0
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            2
        ],
        [
            $5cab828b3273a17c$var$ISOL,
            $5cab828b3273a17c$var$ISOL,
            1
        ],
        [
            $5cab828b3273a17c$var$ISOL,
            $5cab828b3273a17c$var$ISOL,
            2
        ],
        [
            $5cab828b3273a17c$var$ISOL,
            $5cab828b3273a17c$var$FIN2,
            5
        ],
        [
            $5cab828b3273a17c$var$ISOL,
            $5cab828b3273a17c$var$ISOL,
            6
        ]
    ],
    // State 6: prev was DALATH/RISH,  not willing to join.
    [
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$NONE,
            0
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            2
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            1
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            2
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$FIN3,
            5
        ],
        [
            $5cab828b3273a17c$var$NONE,
            $5cab828b3273a17c$var$ISOL,
            6
        ]
    ]
];
class $5cab828b3273a17c$export$2e2bcd8739ae039 extends $5340de7a86f3ae85$export$2e2bcd8739ae039 {
    static planFeatures(plan) {
        plan.add([
            'ccmp',
            'locl'
        ]);
        for(let i = 0; i < $5cab828b3273a17c$var$FEATURES.length; i++){
            let feature = $5cab828b3273a17c$var$FEATURES[i];
            plan.addStage(feature, false);
        }
        plan.addStage('mset');
    }
    static assignFeatures(plan, glyphs) {
        super.assignFeatures(plan, glyphs);
        let prev = -1;
        let state = 0;
        let actions = [];
        // Apply the state machine to map glyphs to features
        for(let i = 0; i < glyphs.length; i++){
            let curAction, prevAction;
            var glyph = glyphs[i];
            let type = $5cab828b3273a17c$var$getShapingClass(glyph.codePoints[0]);
            if (type === $5cab828b3273a17c$var$ShapingClasses.Transparent) {
                actions[i] = $5cab828b3273a17c$var$NONE;
                continue;
            }
            [prevAction, curAction, state] = $5cab828b3273a17c$var$STATE_TABLE[state][type];
            if (prevAction !== $5cab828b3273a17c$var$NONE && prev !== -1) actions[prev] = prevAction;
            actions[i] = curAction;
            prev = i;
        }
        // Apply the chosen features to their respective glyphs
        for(let index = 0; index < glyphs.length; index++){
            let feature;
            var glyph = glyphs[index];
            if (feature = actions[index]) glyph.features[feature] = true;
        }
    }
}
function $5cab828b3273a17c$var$getShapingClass(codePoint) {
    let res = $5cab828b3273a17c$var$trie.get(codePoint);
    if (res) return res - 1;
    let category = unicode_properties__WEBPACK_IMPORTED_MODULE_6__["default"].getCategory(codePoint);
    if (category === 'Mn' || category === 'Me' || category === 'Cf') return $5cab828b3273a17c$var$ShapingClasses.Transparent;
    return $5cab828b3273a17c$var$ShapingClasses.Non_Joining;
}




class $ab0ec2aaf85421fe$export$2e2bcd8739ae039 {
    constructor(glyphs, options){
        this.glyphs = glyphs;
        this.reset(options);
    }
    reset(options = {}, index = 0) {
        this.options = options;
        this.flags = options.flags || {};
        this.markAttachmentType = options.markAttachmentType || 0;
        this.index = index;
    }
    get cur() {
        return this.glyphs[this.index] || null;
    }
    shouldIgnore(glyph) {
        return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;
    }
    move(dir) {
        this.index += dir;
        while(0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index]))this.index += dir;
        if (0 > this.index || this.index >= this.glyphs.length) return null;
        return this.glyphs[this.index];
    }
    next() {
        return this.move(1);
    }
    prev() {
        return this.move(-1);
    }
    peek(count = 1) {
        let idx = this.index;
        let res = this.increment(count);
        this.index = idx;
        return res;
    }
    peekIndex(count = 1) {
        let idx = this.index;
        this.increment(count);
        let res = this.index;
        this.index = idx;
        return res;
    }
    increment(count = 1) {
        let dir = count < 0 ? -1 : 1;
        count = Math.abs(count);
        while(count--)this.move(dir);
        return this.glyphs[this.index];
    }
}



const $cffd0e0e7e88a6c6$var$DEFAULT_SCRIPTS = [
    'DFLT',
    'dflt',
    'latn'
];
class $cffd0e0e7e88a6c6$export$2e2bcd8739ae039 {
    constructor(font, table){
        this.font = font;
        this.table = table;
        this.script = null;
        this.scriptTag = null;
        this.language = null;
        this.languageTag = null;
        this.features = {};
        this.lookups = {};
        // Setup variation substitutions
        this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1;
        // initialize to default script + language
        this.selectScript();
        // current context (set by applyFeatures)
        this.glyphs = [];
        this.positions = []; // only used by GPOS
        this.ligatureID = 1;
        this.currentFeature = null;
    }
    findScript(script) {
        if (this.table.scriptList == null) return null;
        if (!Array.isArray(script)) script = [
            script
        ];
        for (let s of script)for (let entry of this.table.scriptList){
            if (entry.tag === s) return entry;
        }
        return null;
    }
    selectScript(script, language, direction) {
        let changed = false;
        let entry;
        if (!this.script || script !== this.scriptTag) {
            entry = this.findScript(script);
            if (!entry) entry = this.findScript($cffd0e0e7e88a6c6$var$DEFAULT_SCRIPTS);
            if (!entry) return this.scriptTag;
            this.scriptTag = entry.tag;
            this.script = entry.script;
            this.language = null;
            this.languageTag = null;
            changed = true;
        }
        if (!direction || direction !== this.direction) this.direction = direction || $a5878e4f4663c9e2$export$9fddb9d0dd7d8a54(script);
        if (language && language.length < 4) language += ' '.repeat(4 - language.length);
        if (!language || language !== this.languageTag) {
            this.language = null;
            for (let lang of this.script.langSysRecords)if (lang.tag === language) {
                this.language = lang.langSys;
                this.languageTag = lang.tag;
                break;
            }
            if (!this.language) {
                this.language = this.script.defaultLangSys;
                this.languageTag = null;
            }
            changed = true;
        }
        // Build a feature lookup table
        if (changed) {
            this.features = {};
            if (this.language) for (let featureIndex of this.language.featureIndexes){
                let record = this.table.featureList[featureIndex];
                let substituteFeature = this.substituteFeatureForVariations(featureIndex);
                this.features[record.tag] = substituteFeature || record.feature;
            }
        }
        return this.scriptTag;
    }
    lookupsForFeatures(userFeatures = [], exclude) {
        let lookups = [];
        for (let tag of userFeatures){
            let feature = this.features[tag];
            if (!feature) continue;
            for (let lookupIndex of feature.lookupListIndexes){
                if (exclude && exclude.indexOf(lookupIndex) !== -1) continue;
                lookups.push({
                    feature: tag,
                    index: lookupIndex,
                    lookup: this.table.lookupList.get(lookupIndex)
                });
            }
        }
        lookups.sort((a, b)=>a.index - b.index
        );
        return lookups;
    }
    substituteFeatureForVariations(featureIndex) {
        if (this.variationsIndex === -1) return null;
        let record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];
        let substitutions = record.featureTableSubstitution.substitutions;
        for (let substitution of substitutions){
            if (substitution.featureIndex === featureIndex) return substitution.alternateFeatureTable;
        }
        return null;
    }
    findVariationsIndex(coords) {
        let variations = this.table.featureVariations;
        if (!variations) return -1;
        let records = variations.featureVariationRecords;
        for(let i = 0; i < records.length; i++){
            let conditions = records[i].conditionSet.conditionTable;
            if (this.variationConditionsMatch(conditions, coords)) return i;
        }
        return -1;
    }
    variationConditionsMatch(conditions, coords) {
        return conditions.every((condition)=>{
            let coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;
            return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;
        });
    }
    applyFeatures(userFeatures, glyphs, advances) {
        let lookups = this.lookupsForFeatures(userFeatures);
        this.applyLookups(lookups, glyphs, advances);
    }
    applyLookups(lookups, glyphs, positions) {
        this.glyphs = glyphs;
        this.positions = positions;
        this.glyphIterator = new $ab0ec2aaf85421fe$export$2e2bcd8739ae039(glyphs);
        for (let { feature: feature , lookup: lookup  } of lookups){
            this.currentFeature = feature;
            this.glyphIterator.reset(lookup.flags);
            while(this.glyphIterator.index < glyphs.length){
                if (!(feature in this.glyphIterator.cur.features)) {
                    this.glyphIterator.next();
                    continue;
                }
                for (let table of lookup.subTables){
                    let res = this.applyLookup(lookup.lookupType, table);
                    if (res) break;
                }
                this.glyphIterator.next();
            }
        }
    }
    applyLookup(lookup, table) {
        throw new Error("applyLookup must be implemented by subclasses");
    }
    applyLookupList(lookupRecords) {
        let options = this.glyphIterator.options;
        let glyphIndex = this.glyphIterator.index;
        for (let lookupRecord of lookupRecords){
            // Reset flags and find glyph index for this lookup record
            this.glyphIterator.reset(options, glyphIndex);
            this.glyphIterator.increment(lookupRecord.sequenceIndex);
            // Get the lookup and setup flags for subtables
            let lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);
            this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);
            // Apply lookup subtables until one matches
            for (let table of lookup.subTables){
                if (this.applyLookup(lookup.lookupType, table)) break;
            }
        }
        this.glyphIterator.reset(options, glyphIndex);
        return true;
    }
    coverageIndex(coverage, glyph) {
        if (glyph == null) glyph = this.glyphIterator.cur.id;
        switch(coverage.version){
            case 1:
                return coverage.glyphs.indexOf(glyph);
            case 2:
                for (let range of coverage.rangeRecords){
                    if (range.start <= glyph && glyph <= range.end) return range.startCoverageIndex + glyph - range.start;
                }
                break;
        }
        return -1;
    }
    match(sequenceIndex, sequence, fn, matched) {
        let pos = this.glyphIterator.index;
        let glyph = this.glyphIterator.increment(sequenceIndex);
        let idx = 0;
        while(idx < sequence.length && glyph && fn(sequence[idx], glyph)){
            if (matched) matched.push(this.glyphIterator.index);
            idx++;
            glyph = this.glyphIterator.next();
        }
        this.glyphIterator.index = pos;
        if (idx < sequence.length) return false;
        return matched || true;
    }
    sequenceMatches(sequenceIndex, sequence) {
        return this.match(sequenceIndex, sequence, (component, glyph)=>component === glyph.id
        );
    }
    sequenceMatchIndices(sequenceIndex, sequence) {
        return this.match(sequenceIndex, sequence, (component, glyph)=>{
            // If the current feature doesn't apply to this glyph,
            if (!(this.currentFeature in glyph.features)) return false;
            return component === glyph.id;
        }, []);
    }
    coverageSequenceMatches(sequenceIndex, sequence) {
        return this.match(sequenceIndex, sequence, (coverage, glyph)=>this.coverageIndex(coverage, glyph.id) >= 0
        );
    }
    getClassID(glyph, classDef) {
        switch(classDef.version){
            case 1:
                let i = glyph - classDef.startGlyph;
                if (i >= 0 && i < classDef.classValueArray.length) return classDef.classValueArray[i];
                break;
            case 2:
                for (let range of classDef.classRangeRecord){
                    if (range.start <= glyph && glyph <= range.end) return range.class;
                }
                break;
        }
        return 0;
    }
    classSequenceMatches(sequenceIndex, sequence, classDef) {
        return this.match(sequenceIndex, sequence, (classID, glyph)=>classID === this.getClassID(glyph.id, classDef)
        );
    }
    applyContext(table) {
        let index, set;
        switch(table.version){
            case 1:
                index = this.coverageIndex(table.coverage);
                if (index === -1) return false;
                set = table.ruleSets[index];
                for (let rule of set){
                    if (this.sequenceMatches(1, rule.input)) return this.applyLookupList(rule.lookupRecords);
                }
                break;
            case 2:
                if (this.coverageIndex(table.coverage) === -1) return false;
                index = this.getClassID(this.glyphIterator.cur.id, table.classDef);
                if (index === -1) return false;
                set = table.classSet[index];
                for (let rule1 of set){
                    if (this.classSequenceMatches(1, rule1.classes, table.classDef)) return this.applyLookupList(rule1.lookupRecords);
                }
                break;
            case 3:
                if (this.coverageSequenceMatches(0, table.coverages)) return this.applyLookupList(table.lookupRecords);
                break;
        }
        return false;
    }
    applyChainingContext(table) {
        let index;
        switch(table.version){
            case 1:
                index = this.coverageIndex(table.coverage);
                if (index === -1) return false;
                let set = table.chainRuleSets[index];
                for (let rule of set){
                    if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) return this.applyLookupList(rule.lookupRecords);
                }
                break;
            case 2:
                if (this.coverageIndex(table.coverage) === -1) return false;
                index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);
                let rules = table.chainClassSet[index];
                if (!rules) return false;
                for (let rule2 of rules){
                    if (this.classSequenceMatches(-rule2.backtrack.length, rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + rule2.input.length, rule2.lookahead, table.lookaheadClassDef)) return this.applyLookupList(rule2.lookupRecords);
                }
                break;
            case 3:
                if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) return this.applyLookupList(table.lookupRecords);
                break;
        }
        return false;
    }
}


class $8cba766f534deddd$export$2e2bcd8739ae039 {
    constructor(font, id, codePoints = [], features){
        this._font = font;
        this.codePoints = codePoints;
        this.id = id;
        this.features = {};
        if (Array.isArray(features)) for(let i = 0; i < features.length; i++){
            let feature = features[i];
            this.features[feature] = true;
        }
        else if (typeof features === 'object') Object.assign(this.features, features);
        this.ligatureID = null;
        this.ligatureComponent = null;
        this.isLigated = false;
        this.cursiveAttachment = null;
        this.markAttachment = null;
        this.shaperInfo = null;
        this.substituted = false;
        this.isMultiplied = false;
    }
    get id() {
        return this._id;
    }
    set id(id) {
        this._id = id;
        this.substituted = true;
        let GDEF = this._font.GDEF;
        if (GDEF && GDEF.glyphClassDef) {
            // TODO: clean this up
            let classID = $cffd0e0e7e88a6c6$export$2e2bcd8739ae039.prototype.getClassID(id, GDEF.glyphClassDef);
            this.isBase = classID === 1;
            this.isLigature = classID === 2;
            this.isMark = classID === 3;
            this.markAttachmentType = GDEF.markAttachClassDef ? $cffd0e0e7e88a6c6$export$2e2bcd8739ae039.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;
        } else {
            this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode_properties__WEBPACK_IMPORTED_MODULE_6__["default"].isMark);
            this.isBase = !this.isMark;
            this.isLigature = this.codePoints.length > 1;
            this.markAttachmentType = 0;
        }
    }
    copy() {
        return new $8cba766f534deddd$export$2e2bcd8739ae039(this._font, this.id, this.codePoints, this.features);
    }
}


class $ce39c5154631fd0c$export$2e2bcd8739ae039 extends $5340de7a86f3ae85$export$2e2bcd8739ae039 {
    static zeroMarkWidths = 'NONE';
    static planFeatures(plan) {
        plan.add([
            'ljmo',
            'vjmo',
            'tjmo'
        ], false);
    }
    static assignFeatures(plan, glyphs) {
        let state = 0;
        let i = 0;
        while(i < glyphs.length){
            let action;
            let glyph = glyphs[i];
            let code = glyph.codePoints[0];
            let type = $ce39c5154631fd0c$var$getType(code);
            [action, state] = $ce39c5154631fd0c$var$STATE_TABLE[state][type];
            switch(action){
                case $ce39c5154631fd0c$var$DECOMPOSE:
                    // Decompose the composed syllable if it is not supported by the font.
                    if (!plan.font.hasGlyphForCodePoint(code)) i = $ce39c5154631fd0c$var$decompose(glyphs, i, plan.font);
                    break;
                case $ce39c5154631fd0c$var$COMPOSE:
                    // Found a decomposed syllable. Try to compose if supported by the font.
                    i = $ce39c5154631fd0c$var$compose(glyphs, i, plan.font);
                    break;
                case $ce39c5154631fd0c$var$TONE_MARK:
                    // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.
                    $ce39c5154631fd0c$var$reorderToneMark(glyphs, i, plan.font);
                    break;
                case $ce39c5154631fd0c$var$INVALID:
                    // Tone mark has no valid syllable to attach to, so insert a dotted circle
                    i = $ce39c5154631fd0c$var$insertDottedCircle(glyphs, i, plan.font);
                    break;
            }
            i++;
        }
    }
}
const $ce39c5154631fd0c$var$HANGUL_BASE = 0xac00;
const $ce39c5154631fd0c$var$HANGUL_END = 0xd7a4;
const $ce39c5154631fd0c$var$HANGUL_COUNT = $ce39c5154631fd0c$var$HANGUL_END - $ce39c5154631fd0c$var$HANGUL_BASE + 1;
const $ce39c5154631fd0c$var$L_BASE = 0x1100; // lead
const $ce39c5154631fd0c$var$V_BASE = 0x1161; // vowel
const $ce39c5154631fd0c$var$T_BASE = 0x11a7; // trail
const $ce39c5154631fd0c$var$L_COUNT = 19;
const $ce39c5154631fd0c$var$V_COUNT = 21;
const $ce39c5154631fd0c$var$T_COUNT = 28;
const $ce39c5154631fd0c$var$L_END = $ce39c5154631fd0c$var$L_BASE + $ce39c5154631fd0c$var$L_COUNT - 1;
const $ce39c5154631fd0c$var$V_END = $ce39c5154631fd0c$var$V_BASE + $ce39c5154631fd0c$var$V_COUNT - 1;
const $ce39c5154631fd0c$var$T_END = $ce39c5154631fd0c$var$T_BASE + $ce39c5154631fd0c$var$T_COUNT - 1;
const $ce39c5154631fd0c$var$DOTTED_CIRCLE = 0x25cc;
const $ce39c5154631fd0c$var$isL = (code)=>0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c
;
const $ce39c5154631fd0c$var$isV = (code)=>0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6
;
const $ce39c5154631fd0c$var$isT = (code)=>0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb
;
const $ce39c5154631fd0c$var$isTone = (code)=>0x302e <= code && code <= 0x302f
;
const $ce39c5154631fd0c$var$isLVT = (code)=>$ce39c5154631fd0c$var$HANGUL_BASE <= code && code <= $ce39c5154631fd0c$var$HANGUL_END
;
const $ce39c5154631fd0c$var$isLV = (code)=>code - $ce39c5154631fd0c$var$HANGUL_BASE < $ce39c5154631fd0c$var$HANGUL_COUNT && (code - $ce39c5154631fd0c$var$HANGUL_BASE) % $ce39c5154631fd0c$var$T_COUNT === 0
;
const $ce39c5154631fd0c$var$isCombiningL = (code)=>$ce39c5154631fd0c$var$L_BASE <= code && code <= $ce39c5154631fd0c$var$L_END
;
const $ce39c5154631fd0c$var$isCombiningV = (code)=>$ce39c5154631fd0c$var$V_BASE <= code && code <= $ce39c5154631fd0c$var$V_END
;
const $ce39c5154631fd0c$var$isCombiningT = (code)=>$ce39c5154631fd0c$var$T_BASE + 1 && 1 <= code && code <= $ce39c5154631fd0c$var$T_END
;
// Character categories
const $ce39c5154631fd0c$var$X = 0; // Other character
const $ce39c5154631fd0c$var$L = 1; // Leading consonant
const $ce39c5154631fd0c$var$V = 2; // Medial vowel
const $ce39c5154631fd0c$var$T = 3; // Trailing consonant
const $ce39c5154631fd0c$var$LV = 4; // Composed <LV> syllable
const $ce39c5154631fd0c$var$LVT = 5; // Composed <LVT> syllable
const $ce39c5154631fd0c$var$M = 6; // Tone mark
// This function classifies a character using the above categories.
function $ce39c5154631fd0c$var$getType(code) {
    if ($ce39c5154631fd0c$var$isL(code)) return $ce39c5154631fd0c$var$L;
    if ($ce39c5154631fd0c$var$isV(code)) return $ce39c5154631fd0c$var$V;
    if ($ce39c5154631fd0c$var$isT(code)) return $ce39c5154631fd0c$var$T;
    if ($ce39c5154631fd0c$var$isLV(code)) return $ce39c5154631fd0c$var$LV;
    if ($ce39c5154631fd0c$var$isLVT(code)) return $ce39c5154631fd0c$var$LVT;
    if ($ce39c5154631fd0c$var$isTone(code)) return $ce39c5154631fd0c$var$M;
    return $ce39c5154631fd0c$var$X;
}
// State machine actions
const $ce39c5154631fd0c$var$NO_ACTION = 0;
const $ce39c5154631fd0c$var$DECOMPOSE = 1;
const $ce39c5154631fd0c$var$COMPOSE = 2;
const $ce39c5154631fd0c$var$TONE_MARK = 4;
const $ce39c5154631fd0c$var$INVALID = 5;
// Build a state machine that accepts valid syllables, and applies actions along the way.
// The logic this is implementing is documented at the top of the file.
const $ce39c5154631fd0c$var$STATE_TABLE = [
    //       X                 L                 V                T                  LV                LVT               M
    // State 0: start state
    [
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            0
        ],
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            1
        ],
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            0
        ],
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            0
        ],
        [
            $ce39c5154631fd0c$var$DECOMPOSE,
            2
        ],
        [
            $ce39c5154631fd0c$var$DECOMPOSE,
            3
        ],
        [
            $ce39c5154631fd0c$var$INVALID,
            0
        ]
    ],
    // State 1: <L>
    [
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            0
        ],
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            1
        ],
        [
            $ce39c5154631fd0c$var$COMPOSE,
            2
        ],
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            0
        ],
        [
            $ce39c5154631fd0c$var$DECOMPOSE,
            2
        ],
        [
            $ce39c5154631fd0c$var$DECOMPOSE,
            3
        ],
        [
            $ce39c5154631fd0c$var$INVALID,
            0
        ]
    ],
    // State 2: <L,V> or <LV>
    [
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            0
        ],
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            1
        ],
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            0
        ],
        [
            $ce39c5154631fd0c$var$COMPOSE,
            3
        ],
        [
            $ce39c5154631fd0c$var$DECOMPOSE,
            2
        ],
        [
            $ce39c5154631fd0c$var$DECOMPOSE,
            3
        ],
        [
            $ce39c5154631fd0c$var$TONE_MARK,
            0
        ]
    ],
    // State 3: <L,V,T> or <LVT>
    [
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            0
        ],
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            1
        ],
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            0
        ],
        [
            $ce39c5154631fd0c$var$NO_ACTION,
            0
        ],
        [
            $ce39c5154631fd0c$var$DECOMPOSE,
            2
        ],
        [
            $ce39c5154631fd0c$var$DECOMPOSE,
            3
        ],
        [
            $ce39c5154631fd0c$var$TONE_MARK,
            0
        ]
    ]
];
function $ce39c5154631fd0c$var$getGlyph(font, code, features) {
    return new $8cba766f534deddd$export$2e2bcd8739ae039(font, font.glyphForCodePoint(code).id, [
        code
    ], features);
}
function $ce39c5154631fd0c$var$decompose(glyphs, i, font) {
    let glyph = glyphs[i];
    let code = glyph.codePoints[0];
    let s = code - $ce39c5154631fd0c$var$HANGUL_BASE;
    let t = $ce39c5154631fd0c$var$T_BASE + s % $ce39c5154631fd0c$var$T_COUNT;
    s = s / $ce39c5154631fd0c$var$T_COUNT | 0;
    let l = $ce39c5154631fd0c$var$L_BASE + s / $ce39c5154631fd0c$var$V_COUNT | 0;
    let v = $ce39c5154631fd0c$var$V_BASE + s % $ce39c5154631fd0c$var$V_COUNT;
    // Don't decompose if all of the components are not available
    if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== $ce39c5154631fd0c$var$T_BASE && !font.hasGlyphForCodePoint(t)) return i;
    // Replace the current glyph with decomposed L, V, and T glyphs,
    // and apply the proper OpenType features to each component.
    let ljmo = $ce39c5154631fd0c$var$getGlyph(font, l, glyph.features);
    ljmo.features.ljmo = true;
    let vjmo = $ce39c5154631fd0c$var$getGlyph(font, v, glyph.features);
    vjmo.features.vjmo = true;
    let insert = [
        ljmo,
        vjmo
    ];
    if (t > $ce39c5154631fd0c$var$T_BASE) {
        let tjmo = $ce39c5154631fd0c$var$getGlyph(font, t, glyph.features);
        tjmo.features.tjmo = true;
        insert.push(tjmo);
    }
    glyphs.splice(i, 1, ...insert);
    return i + insert.length - 1;
}
function $ce39c5154631fd0c$var$compose(glyphs, i, font) {
    let glyph = glyphs[i];
    let code = glyphs[i].codePoints[0];
    let type = $ce39c5154631fd0c$var$getType(code);
    let prev = glyphs[i - 1].codePoints[0];
    let prevType = $ce39c5154631fd0c$var$getType(prev);
    // Figure out what type of syllable we're dealing with
    let lv, ljmo, vjmo, tjmo;
    if (prevType === $ce39c5154631fd0c$var$LV && type === $ce39c5154631fd0c$var$T) {
        // <LV,T>
        lv = prev;
        tjmo = glyph;
    } else {
        if (type === $ce39c5154631fd0c$var$V) {
            // <L,V>
            ljmo = glyphs[i - 1];
            vjmo = glyph;
        } else {
            // <L,V,T>
            ljmo = glyphs[i - 2];
            vjmo = glyphs[i - 1];
            tjmo = glyph;
        }
        let l = ljmo.codePoints[0];
        let v = vjmo.codePoints[0];
        // Make sure L and V are combining characters
        if ($ce39c5154631fd0c$var$isCombiningL(l) && $ce39c5154631fd0c$var$isCombiningV(v)) lv = $ce39c5154631fd0c$var$HANGUL_BASE + ((l - $ce39c5154631fd0c$var$L_BASE) * $ce39c5154631fd0c$var$V_COUNT + (v - $ce39c5154631fd0c$var$V_BASE)) * $ce39c5154631fd0c$var$T_COUNT;
    }
    let t = tjmo && tjmo.codePoints[0] || $ce39c5154631fd0c$var$T_BASE;
    if (lv != null && (t === $ce39c5154631fd0c$var$T_BASE || $ce39c5154631fd0c$var$isCombiningT(t))) {
        let s = lv + (t - $ce39c5154631fd0c$var$T_BASE);
        // Replace with a composed glyph if supported by the font,
        // otherwise apply the proper OpenType features to each component.
        if (font.hasGlyphForCodePoint(s)) {
            let del = prevType === $ce39c5154631fd0c$var$V ? 3 : 2;
            glyphs.splice(i - del + 1, del, $ce39c5154631fd0c$var$getGlyph(font, s, glyph.features));
            return i - del + 1;
        }
    }
    // Didn't compose (either a non-combining component or unsupported by font).
    if (ljmo) ljmo.features.ljmo = true;
    if (vjmo) vjmo.features.vjmo = true;
    if (tjmo) tjmo.features.tjmo = true;
    if (prevType === $ce39c5154631fd0c$var$LV) {
        // Sequence was originally <L,V>, which got combined earlier.
        // Either the T was non-combining, or the LVT glyph wasn't supported.
        // Decompose the glyph again and apply OT features.
        $ce39c5154631fd0c$var$decompose(glyphs, i - 1, font);
        return i + 1;
    }
    return i;
}
function $ce39c5154631fd0c$var$getLength(code) {
    switch($ce39c5154631fd0c$var$getType(code)){
        case $ce39c5154631fd0c$var$LV:
        case $ce39c5154631fd0c$var$LVT:
            return 1;
        case $ce39c5154631fd0c$var$V:
            return 2;
        case $ce39c5154631fd0c$var$T:
            return 3;
    }
}
function $ce39c5154631fd0c$var$reorderToneMark(glyphs, i, font) {
    let glyph = glyphs[i];
    let code = glyphs[i].codePoints[0];
    // Move tone mark to the beginning of the previous syllable, unless it is zero width
    if (font.glyphForCodePoint(code).advanceWidth === 0) return;
    let prev = glyphs[i - 1].codePoints[0];
    let len = $ce39c5154631fd0c$var$getLength(prev);
    glyphs.splice(i, 1);
    return glyphs.splice(i - len, 0, glyph);
}
function $ce39c5154631fd0c$var$insertDottedCircle(glyphs, i, font) {
    let glyph = glyphs[i];
    let code = glyphs[i].codePoints[0];
    if (font.hasGlyphForCodePoint($ce39c5154631fd0c$var$DOTTED_CIRCLE)) {
        let dottedCircle = $ce39c5154631fd0c$var$getGlyph(font, $ce39c5154631fd0c$var$DOTTED_CIRCLE, glyph.features);
        // If the tone mark is zero width, insert the dotted circle before, otherwise after
        let idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;
        glyphs.splice(idx, 0, dottedCircle);
        i++;
    }
    return i;
}








var $a550b6039b7700b3$exports = {};
$a550b6039b7700b3$exports = JSON.parse("{\\"stateTable\\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],\\"accepting\\":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],\\"tags\\":[[],[\\"broken_cluster\\"],[\\"consonant_syllable\\"],[\\"vowel_syllable\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"standalone_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"consonant_syllable\\"],[\\"broken_cluster\\"],[\\"symbol_cluster\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"symbol_cluster\\"],[],[\\"symbol_cluster\\"],[\\"symbol_cluster\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"symbol_cluster\\"],[\\"symbol_cluster\\"],[\\"symbol_cluster\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[],[],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[],[\\"broken_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"broken_cluster\\"],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"symbol_cluster\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[],[],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[],[],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[],[],[],[\\"broken_cluster\\"],[],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[],[],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[],[],[],[\\"consonant_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[],[],[],[\\"vowel_syllable\\"],[],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[],[],[],[\\"standalone_cluster\\"],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[],[],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[],[],[],[],[],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[],[],[],[],[\\"consonant_syllable\\",\\"broken_cluster\\"],[\\"consonant_syllable\\",\\"broken_cluster\\"],[],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[],[],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[],[\\"consonant_syllable\\"],[\\"consonant_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[],[\\"vowel_syllable\\"],[\\"vowel_syllable\\"],[\\"broken_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"standalone_cluster\\"],[\\"standalone_cluster\\"],[],[\\"consonant_syllable\\"],[\\"vowel_syllable\\"],[\\"standalone_cluster\\"]]}");


var $f3bd27a8c88f3f53$exports = {};
$f3bd27a8c88f3f53$exports = JSON.parse("{\\"categories\\":[\\"O\\",\\"IND\\",\\"S\\",\\"GB\\",\\"B\\",\\"FM\\",\\"CGJ\\",\\"VMAbv\\",\\"VMPst\\",\\"VAbv\\",\\"VPst\\",\\"CMBlw\\",\\"VPre\\",\\"VBlw\\",\\"H\\",\\"VMBlw\\",\\"CMAbv\\",\\"MBlw\\",\\"CS\\",\\"R\\",\\"SUB\\",\\"MPst\\",\\"MPre\\",\\"FAbv\\",\\"FPst\\",\\"FBlw\\",\\"SMAbv\\",\\"SMBlw\\",\\"VMPre\\",\\"ZWNJ\\",\\"ZWJ\\",\\"WJ\\",\\"VS\\",\\"N\\",\\"HN\\",\\"MAbv\\"],\\"decompositions\\":{\\"2507\\":[2503,2494],\\"2508\\":[2503,2519],\\"2888\\":[2887,2902],\\"2891\\":[2887,2878],\\"2892\\":[2887,2903],\\"3018\\":[3014,3006],\\"3019\\":[3015,3006],\\"3020\\":[3014,3031],\\"3144\\":[3142,3158],\\"3264\\":[3263,3285],\\"3271\\":[3270,3285],\\"3272\\":[3270,3286],\\"3274\\":[3270,3266],\\"3275\\":[3270,3266,3285],\\"3402\\":[3398,3390],\\"3403\\":[3399,3390],\\"3404\\":[3398,3415],\\"3546\\":[3545,3530],\\"3548\\":[3545,3535],\\"3549\\":[3545,3535,3530],\\"3550\\":[3545,3551],\\"3635\\":[3661,3634],\\"3763\\":[3789,3762],\\"3955\\":[3953,3954],\\"3957\\":[3953,3956],\\"3958\\":[4018,3968],\\"3959\\":[4018,3953,3968],\\"3960\\":[4019,3968],\\"3961\\":[4019,3953,3968],\\"3969\\":[3953,3968],\\"6971\\":[6970,6965],\\"6973\\":[6972,6965],\\"6976\\":[6974,6965],\\"6977\\":[6975,6965],\\"6979\\":[6978,6965],\\"69934\\":[69937,69927],\\"69935\\":[69938,69927],\\"70475\\":[70471,70462],\\"70476\\":[70471,70487],\\"70843\\":[70841,70842],\\"70844\\":[70841,70832],\\"70846\\":[70841,70845],\\"71098\\":[71096,71087],\\"71099\\":[71097,71087]},\\"stateTable\\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],\\"accepting\\":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],\\"tags\\":[[],[\\"broken_cluster\\"],[\\"independent_cluster\\"],[\\"symbol_cluster\\"],[\\"standard_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"numeral_cluster\\"],[\\"broken_cluster\\"],[\\"independent_cluster\\"],[\\"symbol_cluster\\"],[\\"symbol_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"virama_terminated_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"broken_cluster\\"],[\\"broken_cluster\\"],[\\"numeral_cluster\\"],[\\"number_joiner_terminated_cluster\\"],[\\"standard_cluster\\"],[\\"standard_cluster\\"],[\\"numeral_cluster\\"]]}");


const $b9778c6b60232cf0$export$a513ea61a7bee91c = {
    X: 1,
    C: 2,
    V: 4,
    N: 8,
    H: 16,
    ZWNJ: 32,
    ZWJ: 64,
    M: 128,
    SM: 256,
    VD: 512,
    A: 1024,
    Placeholder: 2048,
    Dotted_Circle: 4096,
    RS: 8192,
    Coeng: 16384,
    Repha: 32768,
    Ra: 65536,
    CM: 131072,
    Symbol: 262144 // Avagraha, etc that take marks (SM,A,VD).
};
const $b9778c6b60232cf0$export$1a1f61c9c4dd9df0 = {
    Start: 1,
    Ra_To_Become_Reph: 2,
    Pre_M: 4,
    Pre_C: 8,
    Base_C: 16,
    After_Main: 32,
    Above_C: 64,
    Before_Sub: 128,
    Below_C: 256,
    After_Sub: 512,
    Before_Post: 1024,
    Post_C: 2048,
    After_Post: 4096,
    Final_C: 8192,
    SMVD: 16384,
    End: 32768
};
const $b9778c6b60232cf0$export$8519deaa7de2b07 = $b9778c6b60232cf0$export$a513ea61a7bee91c.C | $b9778c6b60232cf0$export$a513ea61a7bee91c.Ra | $b9778c6b60232cf0$export$a513ea61a7bee91c.CM | $b9778c6b60232cf0$export$a513ea61a7bee91c.V | $b9778c6b60232cf0$export$a513ea61a7bee91c.Placeholder | $b9778c6b60232cf0$export$a513ea61a7bee91c.Dotted_Circle;
const $b9778c6b60232cf0$export$bbcd928767338e0d = $b9778c6b60232cf0$export$a513ea61a7bee91c.ZWJ | $b9778c6b60232cf0$export$a513ea61a7bee91c.ZWNJ;
const $b9778c6b60232cf0$export$ca9599b2a300afc = $b9778c6b60232cf0$export$a513ea61a7bee91c.H | $b9778c6b60232cf0$export$a513ea61a7bee91c.Coeng;
const $b9778c6b60232cf0$export$e99d119da76a0fc5 = {
    Default: {
        hasOldSpec: false,
        virama: 0,
        basePos: 'Last',
        rephPos: $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Before_Post,
        rephMode: 'Implicit',
        blwfMode: 'Pre_And_Post'
    },
    Devanagari: {
        hasOldSpec: true,
        virama: 0x094D,
        basePos: 'Last',
        rephPos: $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Before_Post,
        rephMode: 'Implicit',
        blwfMode: 'Pre_And_Post'
    },
    Bengali: {
        hasOldSpec: true,
        virama: 0x09CD,
        basePos: 'Last',
        rephPos: $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.After_Sub,
        rephMode: 'Implicit',
        blwfMode: 'Pre_And_Post'
    },
    Gurmukhi: {
        hasOldSpec: true,
        virama: 0x0A4D,
        basePos: 'Last',
        rephPos: $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Before_Sub,
        rephMode: 'Implicit',
        blwfMode: 'Pre_And_Post'
    },
    Gujarati: {
        hasOldSpec: true,
        virama: 0x0ACD,
        basePos: 'Last',
        rephPos: $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Before_Post,
        rephMode: 'Implicit',
        blwfMode: 'Pre_And_Post'
    },
    Oriya: {
        hasOldSpec: true,
        virama: 0x0B4D,
        basePos: 'Last',
        rephPos: $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.After_Main,
        rephMode: 'Implicit',
        blwfMode: 'Pre_And_Post'
    },
    Tamil: {
        hasOldSpec: true,
        virama: 0x0BCD,
        basePos: 'Last',
        rephPos: $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.After_Post,
        rephMode: 'Implicit',
        blwfMode: 'Pre_And_Post'
    },
    Telugu: {
        hasOldSpec: true,
        virama: 0x0C4D,
        basePos: 'Last',
        rephPos: $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.After_Post,
        rephMode: 'Explicit',
        blwfMode: 'Post_Only'
    },
    Kannada: {
        hasOldSpec: true,
        virama: 0x0CCD,
        basePos: 'Last',
        rephPos: $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.After_Post,
        rephMode: 'Implicit',
        blwfMode: 'Post_Only'
    },
    Malayalam: {
        hasOldSpec: true,
        virama: 0x0D4D,
        basePos: 'Last',
        rephPos: $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.After_Main,
        rephMode: 'Log_Repha',
        blwfMode: 'Pre_And_Post'
    },
    // Handled by UniversalShaper
    // Sinhala: {
    //   hasOldSpec: false,
    //   virama: 0x0DCA,
    //   basePos: 'Last_Sinhala',
    //   rephPos: POSITIONS.After_Main,
    //   rephMode: 'Explicit',
    //   blwfMode: 'Pre_And_Post'
    // },
    Khmer: {
        hasOldSpec: false,
        virama: 0x17D2,
        basePos: 'First',
        rephPos: $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph,
        rephMode: 'Vis_Repha',
        blwfMode: 'Pre_And_Post'
    }
};
const $b9778c6b60232cf0$export$f647c9cfdd77d95a = {
    // Khmer
    0x17BE: [
        0x17C1,
        0x17BE
    ],
    0x17BF: [
        0x17C1,
        0x17BF
    ],
    0x17C0: [
        0x17C1,
        0x17C0
    ],
    0x17C4: [
        0x17C1,
        0x17C4
    ],
    0x17C5: [
        0x17C1,
        0x17C5
    ]
};



var $c6b883ac45fa55f1$require$Buffer = buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer;
const { decompositions: $c6b883ac45fa55f1$var$decompositions  } = (/*@__PURE__*/$parcel$interopDefault($f3bd27a8c88f3f53$exports));
const $c6b883ac45fa55f1$var$trie = new unicode_trie__WEBPACK_IMPORTED_MODULE_7__($c6b883ac45fa55f1$require$Buffer.from("AAARAAAAAACgwgAAAbENTvLtnX+sHUUVx/f13nd/vHf7bl+FRGL7R0OJMcWYphBrimkVCSJR2xiEaLEGQ7AkBGowbYRSgj8K2B/GkpRYE6wlQSyJKCagrSlGkmqsqUZMY7S2CWkgqQViQSkt4Hfuzrx77tyZ2fm1u+/RPcknuzs7O3PmnDOzs7N73zteS5KXwKvgDTCnniTvBfPBJeAVpP2vFr69GGUtAkvAModyr0DeT4BrwCpwPVgDbga3ga+DjYbyluLcCvBN8F2wGWwHO8Ej4DjyPIbtz0DCeZpvD4CD4E/gb+AoOAFOgtPgLKiNJkkbTIKLwALwfvAh8GGwHFwFPg2uAzeCm8Ft4E5wN7gPPAi+D34AfgR+Ap7kx8+AZ8HvwZ/BEXAMvAheAa+Bc6OpzvVGknTABY30eB62C8GlYDFYCpaDq/n5z2J7PVgDbgG3N1KbrOdbWzby/N/G9i6wlR8/wLebUNcOll7vX7PLsQ4bdpAy92B/L3gK7AO/A38EfwX/AC+AkyT/m3x7mqdtYz7Gfq2ZJOPgPc3UXu/D9uJmmmcRT1uC7TJwZTONJxFL1+J4JbgBrAG3gNv5Nev5dhO2m3l54rqtON7RNLd1V8Z5auMfI+8Wbvv12P4Ux78AvyZl/Bb7fwD34HwH/EVR/t8t6rRlrYgFlHnMsdyXIupRFP+Gzv8Bb4CklSSjrTR9bz21uZx/Nj8v+uIFOJ4HFnJo3kWtNG6WkPSzBl1YbC8jeVfx+q+R9Pg48lxN8jFdhd8+01LrLTCdq6io8GNb1a8qKioqKioqKioc2cbXGcrWQ2Ynf9a9rmV/zVua9Dc16V/gz8pfxvar4A6wAdwL7gdbwUPgh+BR8AR4qpWuLe3D9gA4CA6DI+AoOAFOtdL1nNexfYs937fxDA8ubKf1zmv3dViI/Uvb9m2sqKioqAiHrVtehrH3TK2/3l4WZduioqIiDq+Rd1Jbef9ehnHmSnCtNNf7nOPcr8PHilO8jrfBF9v996lfwf6tUpl3tPvvdSjsvcwGnLt3Gsw/kzkpK8CdYH83my3Id0iT91WkL5xMktXgIfD85OD54zjfmYu5OFgN7h1LkmdBMg5fgbvAChzv49ujfEuZ3xlOk7kReTaSfL/B/jl+fMXsJLkb7AcPj8TlHC/zsgnYcyLd3zSh1vGAJr2ioqKiIn/eKXkMjn3/cWF5t/z6y37+K5urwP2YB36vPfw8yr7zeRjpu8g8cTf2H2+n89EtivLE93fs27Ez/Br2vM2+qWPl/ZyX9StFfQxW5v724PPxzXz7XHu4Pps5Jvtmiq13szmzfP0hlHkYHGn358bHeD0vYvsy+K+kz9vt/jy8gT40G1w4Rua0PN98nnaGf/e1G+mXIO2DY8P6Xz7WPz7Ky/7omJ0PBff4+B91fAqsAp8HXwI3gR04txbbdWDDWDpP/g7Yxs6BXWAP2AueJHo+M5bOpw+Cw+AIOApOgFMW7Xkdec6AkXH1+QfgyzbOTY73jy/C/gJ+/CCOP4D9xfz4I9h+TFMWtf9SRWzZwq7f0yi/L9voWSRbDfV/clx/3TuKfjoT26/iX813URx4tiVG3ay/sfFuJenb7J50A4mr1di/CZzLKZ6y2reunup4qzT+fM0wHp0PUD9+A7bYNJ5fn3eNP/Ft5bc0+S4n9/l1Gj+K82zesd1wfj3fZ79h2YyyVvLj7djfCR4xjJEyuy1+S/FyDt/MPwodn5hB8axrxy9nSBtYjOyHrs+BQ+B58E+u+wsWbWBtpb/hYL8RuA/pJ8fT2GffX+wl+daSa08jz9nxNG2k4963XBG/ZVhpUS573mh3BtPo7x/Eb7pE2yd5XvZssY/M/RZLc9SLeDsfD5gfTidi9//pwrzWu7t9lKcN7dxynthAh8vcKrQu1frHTGKBNF662KfoOXU1FsaFxe6x2kjClkBnGvXxwX0bytZ5unK+S9n2jxabTc5M0HUaIyTrfFa+Ljmflc9Xz7JtNdPa4eKz6WAPlb5l6xfLBzopWxcfncvSf7rHRJk2KSN2bKRsvcu2UZmxVIb9qd551e8rZcTERGuQ+qwIjERkjl2+djOlhWfpibnp/qxmP92FVr1/bc9GYxxuI5o3UzdukzYpj+H6nOxra9nHiaksjhDdsasPe9ca/CvOU1GVwUT4t8P921H4T8gsnkdIh+dn/pXrU0mnOZw21CbJv1P5LP0r4jtkbLH171BbCvavnFfeZ8L8K2wv/CuQRU6n/qWSNSbr2mO8xtK/U+Mq6Y/1yQyFJHHtv8Kn2uOC/Gvbf2VEPxJ9SvhY5d+Q+y21iRxLruOzsY6MWGrOkPHZ1b+jFuPzqEX/VcmoZkyIPT53k36/DZnrMd+K/Dbjs6kv6+6VYl9OU+WT07TplvMvWWhfVo3f4t48S+rbjIZl/1b5Xyd5vJdQiTyf7tUdMlbn0J9d/cn6c7M5DO1TNF0+bmT0Z3qdKaaoXeg1Lv7NEhufzyT/6vIKEeO1jX/psdi38a889qpkStcI/u12U3zE1Re+/Yv6QNwvdTDJGi9t2ps1XtKYDJ0PmcZKcU812sRxvms7J47mZ5c+SWJD5LPRg4qqj+nWL8Q5sRVrGar1EG0sOI6ndH3DVWL7wpeuwaY6O1Nh19N+Oqs5uI7Eto3aICxNrCn5rAuZ7Cn2bdJtfZPlL/k8Ld+ki6v9E56XPUvT52mV/YVvmMj2Zz8TEuNMTxfHuFfFUJ60OLrz1utODnFG47fLbSjXy0xSy4gN63EywlhMxWcNmK71svszi5OGTvdJe3rtd8ifB6I/mKBr1ap7uU/sqqTsMb+H5fxBFyuq+yqLnd7cmj33TwyOVVOwuj3nVXRtQtUGWR9jzI6kecZrKSKPuFakU2hZmXXZMDlsS1W9jBavv6eHpf3EtfJ7mKwYV0lX2g9FVY5N+Ung9aH1590+n3KLgEredfiez6u9svisY/Suk9Jsnkli1a+C1m/T7rzqd5UY9mfiXX9R92ibdZUIawTC96b1GBn6rDG1JsPv/b392SkiXVUGmyN0LO5LYi46Zf/Adc/QMaCo8TtG/bH1Z/TsW1QfUPRjm2cZee5PRaT33lEbnhlMax4qe1o/Y8a0icdaoOv9bsh+Hj6jonueoGtHumcMlX9lxLxXq7/D84fSzznGt6rtUerXxYU47/IcPeG3vqBbJ1StETZqg9fS2Akd/0Ovp+/CxD3P+/6bQwzJtsvyh5w+XjeXH9KfXGH3/VbSX4tS4XoftPZbnvcyxX1G5QvW1wbWTkbs7c3mTco6NWODbdxk3R9lGZo/aGxhiknTmETXLVs1c90u9+mBGCf6hs6fsmTq29sxPv8d82CuhCpNjGNjg31blGHrz1i41hd6nuYzbU3XhLQzj7Jt67Otw0uXUdDoH8e4F/joMdVui2dMJc3E+Tetvr6jEtPnPhJaVwz9Y7TDVlx1qnfitlEbtzlTVD0qX/pcm1esxI65PO3mU4eNrr5SZMz46FDE+aIlb5tntb1o/WOUETsW847pvNpaZH225eUpNnrS9yDy9wTysyr9XVOe63+qd3M6e4X6Ptd1Dpc1SdV53ZqFag1hpP+bE5f4ivY74BzXilzWWW1+S0TjJng91Gd9wmbNgpMVz6W8d7GJZwWtWp8p++c8fpjW0Vzff3dJfzGuoersEtnmpjVLupY48H6o7n8/C+kvJn+Lcd6q3QHx3usvZax3W8apvP6rev+UJSHfiCYe/h2aTwTaRi5DO28ZSd9zNhTfJ8b2je7drOo9HtNNbPMW03zOpq2qNqnKFN+0huhlMye2Pe9TdzfCedfxMlRfG7xjncaJ7fiXMYZk3X+ZvuKbXCGh8y8XH8TybajPTfq4tjG2/qb0RJO3SB19ba2SMuoNbW8R/g653qa9sdsRYsssu+ZxPss+tnayFd94yjofEi+hZdvo73q9jd3yisUYbfEpQ9XmMqUIm2fFZh4xkZeE1BNDL5v+ZcqXh/90bSwjflz8U0QcFWHzPOpy0amM+stqf1ad7LltVPqWmG3p3+GiIvLJf8duYA3NcBwbWRpkDXmo7RP+z5E6+8Xswz512dbrW2aMNrpKaBt9y45VR2j9efhAQL/PF38Xadq907NYC5dpZLy3kMX6PUHgeGGS3nfoPn9rObJ9s/4uMntnSt/J5TX+2ZRhtFcB8ZgVmyZbit8GCd/7/C7EOcYK7LdyjNhIlL81nqN/Xf9mOHt/anovP4X0tyem/OUZF9TmscY2nzEulq96ZeVwv2Bxxnwk3s9njT8m/YWOKl199fe53tTXyu5DLojfKWXej6R3RAPtDf1ex/PvtdJ8Q7aP7Ht6XpdXSJf8/wMdQuS/j0/HtKny9KbT+oT2K2ETuW7Tt09Uss5nCdWhjPuMTXzrztO4FHMy+V6TJaH9I6+2C5HPq9oc8xlKRva5rF8M/7tC26/6BsNFivQ//e1pVsyP19VrNrH1D5Wi7oUDdVp8Q5HVr1ztlzXPtH2Gc30+lMX3edH3ecm3fp0+Ps/IPvWH6OpiV7meEMlbzyIkpi1jtDU0Pmm6nMd0jU8bXK7N0jWkb/joHyNebfWgtrJpc0h7QiQP24aKqcwYPnTRIUmG63fRQ5VXLsekgy5NtVXVadLfpjzV9S6xYnuNri159ZmsmLCpJ8/6XSRGOaH659H+GLYtwhd51xvq31B9Qm0UavM84qhoKaNOnfwf", "base64"));
const $c6b883ac45fa55f1$var$stateMachine = new dfa__WEBPACK_IMPORTED_MODULE_8__((/*@__PURE__*/$parcel$interopDefault($a550b6039b7700b3$exports)));
class $c6b883ac45fa55f1$export$2e2bcd8739ae039 extends $5340de7a86f3ae85$export$2e2bcd8739ae039 {
    static zeroMarkWidths = 'NONE';
    static planFeatures(plan) {
        plan.addStage($c6b883ac45fa55f1$var$setupSyllables);
        plan.addStage([
            'locl',
            'ccmp'
        ]);
        plan.addStage($c6b883ac45fa55f1$var$initialReordering);
        plan.addStage('nukt');
        plan.addStage('akhn');
        plan.addStage('rphf', false);
        plan.addStage('rkrf');
        plan.addStage('pref', false);
        plan.addStage('blwf', false);
        plan.addStage('abvf', false);
        plan.addStage('half', false);
        plan.addStage('pstf', false);
        plan.addStage('vatu');
        plan.addStage('cjct');
        plan.addStage('cfar', false);
        plan.addStage($c6b883ac45fa55f1$var$finalReordering);
        plan.addStage({
            local: [
                'init'
            ],
            global: [
                'pres',
                'abvs',
                'blws',
                'psts',
                'haln',
                'dist',
                'abvm',
                'blwm',
                'calt',
                'clig'
            ]
        });
        // Setup the indic config for the selected script
        plan.unicodeScript = $a5878e4f4663c9e2$export$ce50e82f12a827a4(plan.script);
        plan.indicConfig = $b9778c6b60232cf0$export$e99d119da76a0fc5[plan.unicodeScript] || $b9778c6b60232cf0$export$e99d119da76a0fc5.Default;
        plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2';
    // TODO: turn off kern (Khmer) and liga features.
    }
    static assignFeatures(plan, glyphs) {
        // Decompose split matras
        // TODO: do this in a more general unicode normalizer
        for(let i = glyphs.length - 1; i >= 0; i--){
            let codepoint = glyphs[i].codePoints[0];
            let d = $b9778c6b60232cf0$export$f647c9cfdd77d95a[codepoint] || $c6b883ac45fa55f1$var$decompositions[codepoint];
            if (d) {
                let decomposed = d.map((c)=>{
                    let g = plan.font.glyphForCodePoint(c);
                    return new $8cba766f534deddd$export$2e2bcd8739ae039(plan.font, g.id, [
                        c
                    ], glyphs[i].features);
                });
                glyphs.splice(i, 1, ...decomposed);
            }
        }
    }
}
function $c6b883ac45fa55f1$var$indicCategory(glyph) {
    return $c6b883ac45fa55f1$var$trie.get(glyph.codePoints[0]) >> 8;
}
function $c6b883ac45fa55f1$var$indicPosition(glyph) {
    return 1 << ($c6b883ac45fa55f1$var$trie.get(glyph.codePoints[0]) & 0xff);
}
class $c6b883ac45fa55f1$var$IndicInfo {
    constructor(category, position, syllableType, syllable){
        this.category = category;
        this.position = position;
        this.syllableType = syllableType;
        this.syllable = syllable;
    }
}
function $c6b883ac45fa55f1$var$setupSyllables(font, glyphs) {
    let syllable = 0;
    let last = 0;
    for (let [start, end, tags] of $c6b883ac45fa55f1$var$stateMachine.match(glyphs.map($c6b883ac45fa55f1$var$indicCategory))){
        if (start > last) {
            ++syllable;
            for(let i = last; i < start; i++)glyphs[i].shaperInfo = new $c6b883ac45fa55f1$var$IndicInfo($b9778c6b60232cf0$export$a513ea61a7bee91c.X, $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.End, 'non_indic_cluster', syllable);
        }
        ++syllable;
        // Create shaper info
        for(let i = start; i <= end; i++)glyphs[i].shaperInfo = new $c6b883ac45fa55f1$var$IndicInfo(1 << $c6b883ac45fa55f1$var$indicCategory(glyphs[i]), $c6b883ac45fa55f1$var$indicPosition(glyphs[i]), tags[0], syllable);
        last = end + 1;
    }
    if (last < glyphs.length) {
        ++syllable;
        for(let i = last; i < glyphs.length; i++)glyphs[i].shaperInfo = new $c6b883ac45fa55f1$var$IndicInfo($b9778c6b60232cf0$export$a513ea61a7bee91c.X, $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.End, 'non_indic_cluster', syllable);
    }
}
function $c6b883ac45fa55f1$var$isConsonant(glyph) {
    return glyph.shaperInfo.category & $b9778c6b60232cf0$export$8519deaa7de2b07;
}
function $c6b883ac45fa55f1$var$isJoiner(glyph) {
    return glyph.shaperInfo.category & $b9778c6b60232cf0$export$bbcd928767338e0d;
}
function $c6b883ac45fa55f1$var$isHalantOrCoeng(glyph) {
    return glyph.shaperInfo.category & $b9778c6b60232cf0$export$ca9599b2a300afc;
}
function $c6b883ac45fa55f1$var$wouldSubstitute(glyphs, feature) {
    for (let glyph of glyphs)glyph.features = {
        [feature]: true
    };
    let GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;
    GSUB.applyFeatures([
        feature
    ], glyphs);
    return glyphs.length === 1;
}
function $c6b883ac45fa55f1$var$consonantPosition(font, consonant, virama) {
    let glyphs = [
        virama,
        consonant,
        virama
    ];
    if ($c6b883ac45fa55f1$var$wouldSubstitute(glyphs.slice(0, 2), 'blwf') || $c6b883ac45fa55f1$var$wouldSubstitute(glyphs.slice(1, 3), 'blwf')) return $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Below_C;
    else if ($c6b883ac45fa55f1$var$wouldSubstitute(glyphs.slice(0, 2), 'pstf') || $c6b883ac45fa55f1$var$wouldSubstitute(glyphs.slice(1, 3), 'pstf')) return $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Post_C;
    else if ($c6b883ac45fa55f1$var$wouldSubstitute(glyphs.slice(0, 2), 'pref') || $c6b883ac45fa55f1$var$wouldSubstitute(glyphs.slice(1, 3), 'pref')) return $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Post_C;
    return $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Base_C;
}
function $c6b883ac45fa55f1$var$initialReordering(font, glyphs, plan) {
    let indicConfig = plan.indicConfig;
    let features = font._layoutEngine.engine.GSUBProcessor.features;
    let dottedCircle = font.glyphForCodePoint(0x25cc).id;
    let virama = font.glyphForCodePoint(indicConfig.virama).id;
    if (virama) {
        let info = new $8cba766f534deddd$export$2e2bcd8739ae039(font, virama, [
            indicConfig.virama
        ]);
        for(let i = 0; i < glyphs.length; i++)if (glyphs[i].shaperInfo.position === $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Base_C) glyphs[i].shaperInfo.position = $c6b883ac45fa55f1$var$consonantPosition(font, glyphs[i].copy(), info);
    }
    for(let start = 0, end = $c6b883ac45fa55f1$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $c6b883ac45fa55f1$var$nextSyllable(glyphs, start)){
        let { category: category , syllableType: syllableType  } = glyphs[start].shaperInfo;
        if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') continue;
        if (syllableType === 'broken_cluster' && dottedCircle) {
            let g = new $8cba766f534deddd$export$2e2bcd8739ae039(font, dottedCircle, [
                0x25cc
            ]);
            g.shaperInfo = new $c6b883ac45fa55f1$var$IndicInfo(1 << $c6b883ac45fa55f1$var$indicCategory(g), $c6b883ac45fa55f1$var$indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable);
            // Insert after possible Repha.
            let i = start;
            while(i < end && glyphs[i].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.Repha)i++;
            glyphs.splice(i++, 0, g);
            end++;
        }
        // 1. Find base consonant:
        //
        // The shaping engine finds the base consonant of the syllable, using the
        // following algorithm: starting from the end of the syllable, move backwards
        // until a consonant is found that does not have a below-base or post-base
        // form (post-base forms have to follow below-base forms), or that is not a
        // pre-base reordering Ra, or arrive at the first consonant. The consonant
        // stopped at will be the base.
        let base = end;
        let limit = start;
        let hasReph = false;
        // If the syllable starts with Ra + Halant (in a script that has Reph)
        // and has more than one consonant, Ra is excluded from candidates for
        // base consonants.
        if (indicConfig.rephPos !== $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === 'Implicit' && !$c6b883ac45fa55f1$var$isJoiner(glyphs[start + 2]) || indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.ZWJ)) {
            // See if it matches the 'rphf' feature.
            let g = [
                glyphs[start].copy(),
                glyphs[start + 1].copy(),
                glyphs[start + 2].copy()
            ];
            if ($c6b883ac45fa55f1$var$wouldSubstitute(g.slice(0, 2), 'rphf') || indicConfig.rephMode === 'Explicit' && $c6b883ac45fa55f1$var$wouldSubstitute(g, 'rphf')) {
                limit += 2;
                while(limit < end && $c6b883ac45fa55f1$var$isJoiner(glyphs[limit]))limit++;
                base = start;
                hasReph = true;
            }
        } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.Repha) {
            limit++;
            while(limit < end && $c6b883ac45fa55f1$var$isJoiner(glyphs[limit]))limit++;
            base = start;
            hasReph = true;
        }
        switch(indicConfig.basePos){
            case 'Last':
                {
                    // starting from the end of the syllable, move backwards
                    let i = end;
                    let seenBelow = false;
                    do {
                        let info = glyphs[--i].shaperInfo;
                        // until a consonant is found
                        if ($c6b883ac45fa55f1$var$isConsonant(glyphs[i])) {
                            // that does not have a below-base or post-base form
                            // (post-base forms have to follow below-base forms),
                            if (info.position !== $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Below_C && (info.position !== $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Post_C || seenBelow)) {
                                base = i;
                                break;
                            }
                            // or that is not a pre-base reordering Ra,
                            //
                            // IMPLEMENTATION NOTES:
                            //
                            // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped
                            // by the logic above already.
                            //
                            // or arrive at the first consonant. The consonant stopped at will
                            // be the base.
                            if (info.position === $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Below_C) seenBelow = true;
                            base = i;
                        } else if (start < i && info.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.ZWJ && glyphs[i - 1].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.H) break;
                    }while (i > limit)
                    break;
                }
            case 'First':
                // The first consonant is always the base.
                base = start;
                // Mark all subsequent consonants as below.
                for(let i = base + 1; i < end; i++)if ($c6b883ac45fa55f1$var$isConsonant(glyphs[i])) glyphs[i].shaperInfo.position = $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Below_C;
        }
        // If the syllable starts with Ra + Halant (in a script that has Reph)
        // and has more than one consonant, Ra is excluded from candidates for
        // base consonants.
        //
        //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)
        if (hasReph && base === start && limit - base <= 2) hasReph = false;
        // 2. Decompose and reorder Matras:
        //
        // Each matra and any syllable modifier sign in the cluster are moved to the
        // appropriate position relative to the consonant(s) in the cluster. The
        // shaping engine decomposes two- or three-part matras into their constituent
        // parts before any repositioning. Matra characters are classified by which
        // consonant in a conjunct they have affinity for and are reordered to the
        // following positions:
        //
        //   o Before first half form in the syllable
        //   o After subjoined consonants
        //   o After post-form consonant
        //   o After main consonant (for above marks)
        //
        // IMPLEMENTATION NOTES:
        //
        // The normalize() routine has already decomposed matras for us, so we don't
        // need to worry about that.
        // 3.  Reorder marks to canonical order:
        //
        // Adjacent nukta and halant or nukta and vedic sign are always repositioned
        // if necessary, so that the nukta is first.
        //
        // IMPLEMENTATION NOTES:
        //
        // We don't need to do this: the normalize() routine already did this for us.
        // Reorder characters
        for(let i1 = start; i1 < base; i1++){
            let info = glyphs[i1].shaperInfo;
            info.position = Math.min($b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Pre_C, info.position);
        }
        if (base < end) glyphs[base].shaperInfo.position = $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Base_C;
        // Mark final consonants.  A final consonant is one appearing after a matra,
        // like in Khmer.
        for(let i2 = base + 1; i2 < end; i2++)if (glyphs[i2].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.M) {
            for(let j = i2 + 1; j < end; j++)if ($c6b883ac45fa55f1$var$isConsonant(glyphs[j])) {
                glyphs[j].shaperInfo.position = $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Final_C;
                break;
            }
            break;
        }
        // Handle beginning Ra
        if (hasReph) glyphs[start].shaperInfo.position = $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph;
        // For old-style Indic script tags, move the first post-base Halant after
        // last consonant.
        //
        // Reports suggest that in some scripts Uniscribe does this only if there
        // is *not* a Halant after last consonant already (eg. Kannada), while it
        // does it unconditionally in other scripts (eg. Malayalam).  We don't
        // currently know about other scripts, so we single out Malayalam for now.
        //
        // Kannada test case:
        // U+0C9A,U+0CCD,U+0C9A,U+0CCD
        // With some versions of Lohit Kannada.
        // https://bugs.freedesktop.org/show_bug.cgi?id=59118
        //
        // Malayalam test case:
        // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D
        // With lohit-ttf-20121122/Lohit-Malayalam.ttf
        if (plan.isOldSpec) {
            let disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';
            for(let i = base + 1; i < end; i++)if (glyphs[i].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.H) {
                let j;
                for(j = end - 1; j > i; j--){
                    if ($c6b883ac45fa55f1$var$isConsonant(glyphs[j]) || disallowDoubleHalants && glyphs[j].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.H) break;
                }
                if (glyphs[j].shaperInfo.category !== $b9778c6b60232cf0$export$a513ea61a7bee91c.H && j > i) {
                    // Move Halant to after last consonant.
                    let t = glyphs[i];
                    glyphs.splice(i, 0, ...glyphs.splice(i + 1, j - i));
                    glyphs[j] = t;
                }
                break;
            }
        }
        // Attach misc marks to previous char to move with them.
        let lastPos = $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Start;
        for(let i3 = start; i3 < end; i3++){
            let info = glyphs[i3].shaperInfo;
            if (info.category & ($b9778c6b60232cf0$export$bbcd928767338e0d | $b9778c6b60232cf0$export$a513ea61a7bee91c.N | $b9778c6b60232cf0$export$a513ea61a7bee91c.RS | $b9778c6b60232cf0$export$a513ea61a7bee91c.CM | $b9778c6b60232cf0$export$ca9599b2a300afc & info.category)) {
                info.position = lastPos;
                if (info.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.H && info.position === $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Pre_M) {
                    // Uniscribe doesn't move the Halant with Left Matra.
                    // TEST: U+092B,U+093F,U+094DE
                    // We follow.  This is important for the Sinhala
                    // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA
                    // where U+0DD9 is a left matra and U+0DCA is the virama.
                    // We don't want to move the virama with the left matra.
                    // TEST: U+0D9A,U+0DDA
                    for(let j = i3; j > start; j--)if (glyphs[j - 1].shaperInfo.position !== $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Pre_M) {
                        info.position = glyphs[j - 1].shaperInfo.position;
                        break;
                    }
                }
            } else if (info.position !== $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.SMVD) lastPos = info.position;
        }
        // For post-base consonants let them own anything before them
        // since the last consonant or matra.
        let last = base;
        for(let i4 = base + 1; i4 < end; i4++){
            if ($c6b883ac45fa55f1$var$isConsonant(glyphs[i4])) {
                for(let j = last + 1; j < i4; j++)if (glyphs[j].shaperInfo.position < $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.SMVD) glyphs[j].shaperInfo.position = glyphs[i4].shaperInfo.position;
                last = i4;
            } else if (glyphs[i4].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.M) last = i4;
        }
        let arr = glyphs.slice(start, end);
        arr.sort((a, b)=>a.shaperInfo.position - b.shaperInfo.position
        );
        glyphs.splice(start, arr.length, ...arr);
        // Find base again
        for(let i5 = start; i5 < end; i5++)if (glyphs[i5].shaperInfo.position === $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Base_C) {
            base = i5;
            break;
        }
        // Setup features now
        // Reph
        for(let i6 = start; i6 < end && glyphs[i6].shaperInfo.position === $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph; i6++)glyphs[i6].features.rphf = true;
        // Pre-base
        let blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';
        for(let i7 = start; i7 < base; i7++){
            glyphs[i7].features.half = true;
            if (blwf) glyphs[i7].features.blwf = true;
        }
        // Post-base
        for(let i8 = base + 1; i8 < end; i8++){
            glyphs[i8].features.abvf = true;
            glyphs[i8].features.pstf = true;
            glyphs[i8].features.blwf = true;
        }
        if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {
            // Old-spec eye-lash Ra needs special handling.  From the
            // spec:
            //
            // "The feature 'below-base form' is applied to consonants
            // having below-base forms and following the base consonant.
            // The exception is vattu, which may appear below half forms
            // as well as below the base glyph. The feature 'below-base
            // form' will be applied to all such occurrences of Ra as well."
            //
            // Test case: U+0924,U+094D,U+0930,U+094d,U+0915
            // with Sanskrit 2003 font.
            //
            // However, note that Ra,Halant,ZWJ is the correct way to
            // request eyelash form of Ra, so we wouldbn't inhibit it
            // in that sequence.
            //
            // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915
            for(let i = start; i + 1 < base; i++)if (glyphs[i].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.Ra && glyphs[i + 1].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.H && (i + 1 === base || glyphs[i + 2].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.ZWJ)) {
                glyphs[i].features.blwf = true;
                glyphs[i + 1].features.blwf = true;
            }
        }
        let prefLen = 2;
        if (features.pref && base + prefLen < end) // Find a Halant,Ra sequence and mark it for pre-base reordering processing.
        for(let i9 = base + 1; i9 + prefLen - 1 < end; i9++){
            let g = [
                glyphs[i9].copy(),
                glyphs[i9 + 1].copy()
            ];
            if ($c6b883ac45fa55f1$var$wouldSubstitute(g, 'pref')) {
                for(let j = 0; j < prefLen; j++)glyphs[i9++].features.pref = true;
                // Mark the subsequent stuff with 'cfar'.  Used in Khmer.
                // Read the feature spec.
                // This allows distinguishing the following cases with MS Khmer fonts:
                // U+1784,U+17D2,U+179A,U+17D2,U+1782
                // U+1784,U+17D2,U+1782,U+17D2,U+179A
                if (features.cfar) for(; i9 < end; i9++)glyphs[i9].features.cfar = true;
                break;
            }
        }
        // Apply ZWJ/ZWNJ effects
        for(let i10 = start + 1; i10 < end; i10++)if ($c6b883ac45fa55f1$var$isJoiner(glyphs[i10])) {
            let nonJoiner = glyphs[i10].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.ZWNJ;
            let j = i10;
            do {
                j--;
                // ZWJ/ZWNJ should disable CJCT.  They do that by simply
                // being there, since we don't skip them for the CJCT
                // feature (ie. F_MANUAL_ZWJ)
                // A ZWNJ disables HALF.
                if (nonJoiner) delete glyphs[j].features.half;
            }while (j > start && !$c6b883ac45fa55f1$var$isConsonant(glyphs[j]))
        }
    }
}
function $c6b883ac45fa55f1$var$finalReordering(font, glyphs, plan) {
    let indicConfig = plan.indicConfig;
    let features = font._layoutEngine.engine.GSUBProcessor.features;
    for(let start = 0, end = $c6b883ac45fa55f1$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $c6b883ac45fa55f1$var$nextSyllable(glyphs, start)){
        // 4. Final reordering:
        //
        // After the localized forms and basic shaping forms GSUB features have been
        // applied (see below), the shaping engine performs some final glyph
        // reordering before applying all the remaining font features to the entire
        // cluster.
        let tryPref = !!features.pref;
        // Find base again
        let base = start;
        for(; base < end; base++)if (glyphs[base].shaperInfo.position >= $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Base_C) {
            if (tryPref && base + 1 < end) {
                for(let i = base + 1; i < end; i++)if (glyphs[i].features.pref) {
                    if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {
                        // Ok, this was a 'pref' candidate but didn't form any.
                        // Base is around here...
                        base = i;
                        while(base < end && $c6b883ac45fa55f1$var$isHalantOrCoeng(glyphs[base]))base++;
                        glyphs[base].shaperInfo.position = $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.BASE_C;
                        tryPref = false;
                    }
                    break;
                }
            }
            // For Malayalam, skip over unformed below- (but NOT post-) forms.
            if (plan.unicodeScript === 'Malayalam') for(let i = base + 1; i < end; i++){
                while(i < end && $c6b883ac45fa55f1$var$isJoiner(glyphs[i]))i++;
                if (i === end || !$c6b883ac45fa55f1$var$isHalantOrCoeng(glyphs[i])) break;
                i++; // Skip halant.
                while(i < end && $c6b883ac45fa55f1$var$isJoiner(glyphs[i]))i++;
                if (i < end && $c6b883ac45fa55f1$var$isConsonant(glyphs[i]) && glyphs[i].shaperInfo.position === $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Below_C) {
                    base = i;
                    glyphs[base].shaperInfo.position = $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Base_C;
                }
            }
            if (start < base && glyphs[base].shaperInfo.position > $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Base_C) base--;
            break;
        }
        if (base === end && start < base && glyphs[base - 1].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.ZWJ) base--;
        if (base < end) while(start < base && glyphs[base].shaperInfo.category & ($b9778c6b60232cf0$export$a513ea61a7bee91c.N | $b9778c6b60232cf0$export$ca9599b2a300afc))base--;
        // o Reorder matras:
        //
        // If a pre-base matra character had been reordered before applying basic
        // features, the glyph can be moved closer to the main consonant based on
        // whether half-forms had been formed. Actual position for the matra is
        // defined as \u201Cafter last standalone halant glyph, after initial matra
        // position and before the main consonant\u201D. If ZWJ or ZWNJ follow this
        // halant, position is moved after it.
        //
        if (start + 1 < end && start < base) {
            // If we lost track of base, alas, position before last thingy.
            let newPos = base === end ? base - 2 : base - 1;
            // Malayalam / Tamil do not have "half" forms or explicit virama forms.
            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.
            // We want to position matra after them.
            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {
                while(newPos > start && !(glyphs[newPos].shaperInfo.category & ($b9778c6b60232cf0$export$a513ea61a7bee91c.M | $b9778c6b60232cf0$export$ca9599b2a300afc)))newPos--;
                // If we found no Halant we are done.
                // Otherwise only proceed if the Halant does
                // not belong to the Matra itself!
                if ($c6b883ac45fa55f1$var$isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Pre_M) // If ZWJ or ZWNJ follow this halant, position is moved after it.
                {
                    if (newPos + 1 < end && $c6b883ac45fa55f1$var$isJoiner(glyphs[newPos + 1])) newPos++;
                } else newPos = start; // No move.
            }
            if (start < newPos && glyphs[newPos].shaperInfo.position !== $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Pre_M) {
                // Now go see if there's actually any matras...
                for(let i = newPos; i > start; i--)if (glyphs[i - 1].shaperInfo.position === $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Pre_M) {
                    let oldPos = i - 1;
                    if (oldPos < base && base <= newPos) base--;
                    let tmp = glyphs[oldPos];
                    glyphs.splice(oldPos, 0, ...glyphs.splice(oldPos + 1, newPos - oldPos));
                    glyphs[newPos] = tmp;
                    newPos--;
                }
            }
        }
        // o Reorder reph:
        //
        // Reph\u2019s original position is always at the beginning of the syllable,
        // (i.e. it is not reordered at the character reordering stage). However,
        // it will be reordered according to the basic-forms shaping results.
        // Possible positions for reph, depending on the script, are; after main,
        // before post-base consonant forms, and after post-base consonant forms.
        // Two cases:
        //
        // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then
        //   we should only move it if the sequence ligated to the repha form.
        //
        // - If repha is encoded separately and in the logical position, we should only
        //   move it if it did NOT ligate.  If it ligated, it's probably the font trying
        //   to make it work without the reordering.
        if (start + 1 < end && glyphs[start].shaperInfo.position === $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {
            let newRephPos;
            let rephPos = indicConfig.rephPos;
            let found = false;
            // 1. If reph should be positioned after post-base consonant forms,
            //    proceed to step 5.
            if (rephPos !== $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.After_Post) {
                //  2. If the reph repositioning class is not after post-base: target
                //     position is after the first explicit halant glyph between the
                //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ
                //     are following this halant, position is moved after it. If such
                //     position is found, this is the target position. Otherwise,
                //     proceed to the next step.
                //
                //     Note: in old-implementation fonts, where classifications were
                //     fixed in shaping engine, there was no case where reph position
                //     will be found on this step.
                newRephPos = start + 1;
                while(newRephPos < base && !$c6b883ac45fa55f1$var$isHalantOrCoeng(glyphs[newRephPos]))newRephPos++;
                if (newRephPos < base && $c6b883ac45fa55f1$var$isHalantOrCoeng(glyphs[newRephPos])) {
                    // ->If ZWJ or ZWNJ are following this halant, position is moved after it.
                    if (newRephPos + 1 < base && $c6b883ac45fa55f1$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;
                    found = true;
                }
                // 3. If reph should be repositioned after the main consonant: find the
                //    first consonant not ligated with main, or find the first
                //    consonant that is not a potential pre-base reordering Ra.
                if (!found && rephPos === $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.After_Main) {
                    newRephPos = base;
                    while(newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.After_Main)newRephPos++;
                    found = newRephPos < end;
                }
                // 4. If reph should be positioned before post-base consonant, find
                //    first post-base classified consonant not ligated with main. If no
                //    consonant is found, the target position should be before the
                //    first matra, syllable modifier sign or vedic sign.
                //
                // This is our take on what step 4 is trying to say (and failing, BADLY).
                if (!found && rephPos === $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.After_Sub) {
                    newRephPos = base;
                    while(newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & ($b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Post_C | $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.After_Post | $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.SMVD)))newRephPos++;
                    found = newRephPos < end;
                }
            }
            //  5. If no consonant is found in steps 3 or 4, move reph to a position
            //     immediately before the first post-base matra, syllable modifier
            //     sign or vedic sign that has a reordering class after the intended
            //     reph position. For example, if the reordering position for reph
            //     is post-main, it will skip above-base matras that also have a
            //     post-main position.
            if (!found) {
                // Copied from step 2.
                newRephPos = start + 1;
                while(newRephPos < base && !$c6b883ac45fa55f1$var$isHalantOrCoeng(glyphs[newRephPos]))newRephPos++;
                if (newRephPos < base && $c6b883ac45fa55f1$var$isHalantOrCoeng(glyphs[newRephPos])) {
                    // ->If ZWJ or ZWNJ are following this halant, position is moved after it.
                    if (newRephPos + 1 < base && $c6b883ac45fa55f1$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;
                    found = true;
                }
            }
            // 6. Otherwise, reorder reph to the end of the syllable.
            if (!found) {
                newRephPos = end - 1;
                while(newRephPos > start && glyphs[newRephPos].shaperInfo.position === $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.SMVD)newRephPos--;
                // If the Reph is to be ending up after a Matra,Halant sequence,
                // position it before that Halant so it can interact with the Matra.
                // However, if it's a plain Consonant,Halant we shouldn't do that.
                // Uniscribe doesn't do this.
                // TEST: U+0930,U+094D,U+0915,U+094B,U+094D
                if ($c6b883ac45fa55f1$var$isHalantOrCoeng(glyphs[newRephPos])) {
                    for(let i = base + 1; i < newRephPos; i++)if (glyphs[i].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.M) newRephPos--;
                }
            }
            let reph = glyphs[start];
            glyphs.splice(start, 0, ...glyphs.splice(start + 1, newRephPos - start));
            glyphs[newRephPos] = reph;
            if (start < base && base <= newRephPos) base--;
        }
        // o Reorder pre-base reordering consonants:
        //
        // If a pre-base reordering consonant is found, reorder it according to
        // the following rules:
        if (tryPref && base + 1 < end) {
            for(let i = base + 1; i < end; i++)if (glyphs[i].features.pref) {
                // 1. Only reorder a glyph produced by substitution during application
                //    of the <pref> feature. (Note that a font may shape a Ra consonant with
                //    the feature generally but block it in certain contexts.)
                // Note: We just check that something got substituted.  We don't check that
                // the <pref> feature actually did it...
                //
                // Reorder pref only if it ligated.
                if (glyphs[i].isLigated && !glyphs[i].isMultiplied) {
                    // 2. Try to find a target position the same way as for pre-base matra.
                    //    If it is found, reorder pre-base consonant glyph.
                    //
                    // 3. If position is not found, reorder immediately before main
                    //    consonant.
                    let newPos = base;
                    // Malayalam / Tamil do not have "half" forms or explicit virama forms.
                    // The glyphs formed by 'half' are Chillus or ligated explicit viramas.
                    // We want to position matra after them.
                    if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {
                        while(newPos > start && !(glyphs[newPos - 1].shaperInfo.category & ($b9778c6b60232cf0$export$a513ea61a7bee91c.M | $b9778c6b60232cf0$export$ca9599b2a300afc)))newPos--;
                        // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a
                        // split matra, it should be reordered to *before* the left part of such matra.
                        if (newPos > start && glyphs[newPos - 1].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.M) {
                            let oldPos = i;
                            for(let j = base + 1; j < oldPos; j++)if (glyphs[j].shaperInfo.category === $b9778c6b60232cf0$export$a513ea61a7bee91c.M) {
                                newPos--;
                                break;
                            }
                        }
                    }
                    if (newPos > start && $c6b883ac45fa55f1$var$isHalantOrCoeng(glyphs[newPos - 1])) // -> If ZWJ or ZWNJ follow this halant, position is moved after it.
                    {
                        if (newPos < end && $c6b883ac45fa55f1$var$isJoiner(glyphs[newPos])) newPos++;
                    }
                    let oldPos = i;
                    let tmp = glyphs[oldPos];
                    glyphs.splice(newPos + 1, 0, ...glyphs.splice(newPos, oldPos - newPos));
                    glyphs[newPos] = tmp;
                    if (newPos <= base && base < oldPos) base++;
                }
                break;
            }
        }
        // Apply 'init' to the Left Matra if it's a word start.
        if (glyphs[start].shaperInfo.position === $b9778c6b60232cf0$export$1a1f61c9c4dd9df0.Pre_M && (!start || !/Cf|Mn/.test(unicode_properties__WEBPACK_IMPORTED_MODULE_6__["default"].getCategory(glyphs[start - 1].codePoints[0])))) glyphs[start].features.init = true;
    }
}
function $c6b883ac45fa55f1$var$nextSyllable(glyphs, start) {
    if (start >= glyphs.length) return start;
    let syllable = glyphs[start].shaperInfo.syllable;
    while(++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);
    return start;
}








var $7eb6a55cb7a2526f$require$Buffer = buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer;
const { categories: $7eb6a55cb7a2526f$var$categories , decompositions: $7eb6a55cb7a2526f$var$decompositions  } = (/*@__PURE__*/$parcel$interopDefault($f3bd27a8c88f3f53$exports));
const $7eb6a55cb7a2526f$var$trie = new unicode_trie__WEBPACK_IMPORTED_MODULE_7__($7eb6a55cb7a2526f$require$Buffer.from("AAACAAAAAADQqQAAAVEMrvPtnH+oHUcVx+fd99799W5e8mx+9NkYm7YUI2KtimkVDG3FWgVTFY1Fqa2VJirYB0IaUFLBaKGJViXir6oxKCSBoi0UTKtg2yA26h+milYNtMH+0WK1VQyvtBS/487hnncyMzuzu7N7n7kHPszu7OzMmTNzdmdmfzzfUmpiUqkemAMbwSZwKbjcxM1XEL4VvB28G3zAk+56cLMlfgdYADvBbvBF8GWwH9xl+CFLfwj8BPwU/MKS38/AMfA86v9ro9ucQcdR+CjCP4CT4EnwDPg3eAFMTik1A+bAPNgINoFLwGawZSpLfzXCrWAb+AjYDm4BO8FusAfsA/vBXeAgOALuNfv3g4fAcXACPAaeAE+B58Bp8NJUpnN7WqlZsHY629+A8GLwWvAG8BZwJXinOf5ehB8EN4AdYGE6q7dmF9uugs8hvz0V58nZK/L+Kva/BX4ADoN7prP6HgUPgkfA73L0eQzHnwBPgX+Y80+DF8FUW6lBO4tbjXA9uAi8pj3sS2/E9mawBVwNtoJt5pzrTXgzwk+B7awP7sT+7nY6WxFfQBlfAl8H3wU/Anezcu/D9s/BMRN3HOEJ8EdwMkC/J5HmmXZmq2fBIjgEVEepbieLX4Fw0MnSrzRxmrVsm7MB8ReDV4vjr3ekJy7rZGVPMb196Xm6oug83oRyt4CrwDVgK9gGPtzxn3uTOD6YPDPNJ5Hm0+AznazffJ7Z4KSnXncg3VfAN8EBhx42/z/UGdbrx52sr9yH8AFTrt5+2GzfnWPbKuw7ZszZyNh/xowZM2bMmDFjxsQyZ5lPNs3h9nBNYHuAfr9ic9ffiHnsJzznU91/j3P+2snWYf6G8O/gn+A0eMnEt7vQp5ulX4NwHmwEm7rZ8UsRXg6uMPvXIHwPuK7rLl+nu9FzfMyYMWPGpGVuslmarv+YMWPSkNq/d2D8uNDNngvdivA2y3jy9m72bF9v3ymOf2MExp8fG2TsAcfA2wJYBJetWBq3i+0fwPafwLmzSl0LFmZNPMLHZ4fpnsX2AdjgcXB+T6kPge+AG7D/vXYW/tLsc9r9M+MkVyLNR1m6g9g+ZfYvmMExcHCm+ftP0+T5y/e17Uw/PYLwHnC0m80TH+zG30/3mjSDnPS2/B4pUJ4rX3n+b5H3o92l6UjfvZ7y/oJzToGnu8O66XTPYf8/Jr8XWL6TPXf9bPnHtmVs+89AnxVgDVgPLgKvAg+Y/F6H7c1gC7jKHH8XeJ/x15vAjt4wvwVs7wKfBXvAPvA18G1wsJevj36f5gjS3etIq+ft9+PYQ73h/nFsn2D7f+5l75bo/VPYftpTblFb2/Jo2pdjfL0uXOX/qxfnp8vZVk2Xv9hbmu+LxvYt3A/7/WZsPoptPkr9bdCv1ya+d4TuMO8Tre5n4XkILwSbzP4l/WHazX1//r2O/z7cFHnvSYW8R/Vm02ZXIHxHze1Xdf9bbn7p0z2kDroNr2X9WL+7937sX9fP+v9h9n6jTrfI3jG9EfsfN3G35PR/G4uRfY3eMTwdkFa/C3hrf2kcfy/xYTOmprrfZsLbEe7rDPW/U9Rrv9k/ahmTL0cWWxP/YxRkgtES+zwNhZPs+FQgMj/liEsto2HxsZBQX2pZoLZqWc5riXDaQBLSt1L3hcnE+Vct7aYVKCEhbXk2+b7NZ84mmXAwCiL14Ne85S62MYPcXi5StM/YxlJF2lfabznZsC6/C807xvZV+yFve9d1KY//d3HNO8pKUXuTDh0Gpp7B852q6QFMgdWM2dfbAxOuEPQEfcEsO5fquJLZrMfyCtWP0heZF6oSdiH9u4aQvJRIJ/eL6BBynItLp5D2JRkY5L5u3xAf6lviXHWSZcfaKO/+5zvO/c9Xtq8uRXSObd+8bS0zJrS1rxTyX7k/a0nrk5D+mHeOC90uq1Q216X57lykfqHt62uTGJ2rat+i/kttyq/RSi29PlclZf2Xxq55ZeSV34T96d5X5PqZJ9I3ZX2lnkXt3xL1Kyrav/LutbZ6uGxuS6ss6V3pXOXY4kP7EBfyJT7+4TJQS9uf74f6n+3+6ZIi9bCtieatFfCxUMx4KMYfy/pzrB30vm88q9SZ11K+n9eeNN612UFKWX8uI9TmRca7TbWvKy2JvF6naF+b/0uRupZp35cZikhZvyniY2R/CbdB3vXynIC6hbRBHf4l1xps6w4x/lVEtxRtGZMuRA8uNh/jfYV8kdpsBUszcODrD7E2JT2KrB3V6XMhbdNjcXItxzaOJWkpf976/I5glQn1sbLP86U9FQvz4l0S28/lcWUJbbrE2l+Z/TlHvi4/kvZXLMyrmy1PW7x8hl6UFgvlmNM1Jq3aJ3Se0yJcpdwS6mOp/ZgLX5N1rdFKaIzH9ztquMbqq+/qCFRk+hRoyZvrTHuO8fNd/djmEzZJ3TdisN1bNQNl7y96DV/3mVkTtwasVdk1ai6ybGlDek8nT1fXc4M5tVSPvhqOsWQeXQs8L1n3IradU8OxCeVjK7dr7Dpl0cMHnUvt18TzfVsfb/pZY56fV2GnVPVIYaOi9xcZJ8cmKcu3wcuPsVHV5cdKFfZXNZefp5sWft+wzR1cczKCxh99NRx76HvwOpWNv6YZtAajt6WPyPswtVVs/VOJ7xpYx3VR31er7gMxNuV9Q443CDlW43KuYSXblsybfKYt58trfez7A1X7Tdm+V7TcoudL+LpVGf2khN63U5OyD5Af0NoUv06l7Jc0Rte+so4xL9Ayy3Rz+SufY5Jf267xcm7J4dd3kumIOrmk7Pl549bUY1puI91Gdb8Tpu+9tjmhXFdwtfVsTv5SQvXKW0cK4eXgPBO6iJ07NNVOHH7/tF1jyJdnWbrU/Uau3VNI156QZ2ZaZFu76i6vQXy9YJ2H9QZ97aF3p1xlx1yfuYRcd0Kl7NyaX190+pUOKI0tvus5j7/nSWKLo3FER8R3LHEx8gqwge1POgi1l1yfirV3zHpISHxs3vLeFXOellcG1DFGbGP00PPkeKEOaXIsqhzbruOh9Qk5L08nW2grJ0avsvWocv0zRh/fGCG0TV35hB4v0rds5Vddjm/sFCKx+aXSt2yalPZsolxXW46CDnXp0YQ0rdso9OUYPSYT6+yzuxxzlrVfFfavQ/LKqsP+dbVzE/0qRb8pKin6V9U6Fnn24pqHufLMWy90nV+0DkXmcrb0Uq+6pU7/qcs/67SHTeTaaBk9ipyXQvLqW1U7uPKpux/ESlP9umydR8H3UjzHoXxj0/J1Yr5ubHsPrWOJqxK+hk5r+EVtH3pe1XWIXa+1vQ9YJ/oZre1bGReh3xKWeX7BxfYstwh5errGJi59be8482cSsfUPQT4Xlc9K+XMmatcY0fo2+SxYQs/4XO8M03Ng/TxujYH+FRELSdH+6mtveu8itb1Cy7C9X8GfsVOcfN86RHg56wJ0ob5qOz/E/rIdq7YhF34/0cfoeWKVftJjIbWDbDfXeXR/prBOKWJ/3dd43+sr+32TvgEIEZ6/7Zt5/l7ghMm77u+ey4gcz5xfktA5vE9C5vy2Y3lpXeX40tHcLMX42qZHS/ltZluXiSlDxillt3VdIvufbc0j75wy5aWaOxWRUZmfl5nDSh3LzoWbXJOg8uumKkndp1PnH2IPfe+U33z7vjWhdPQuWMh4raqxWMh9X89RZtSZ7/JpyXs3NWQcETN3CZHU/lmVnstZB1+ZfM5A/1VJ2V9t8wTXN1S+f27mzaulbCxJHePwC1Tz/0K1/VdPvtOsba+vL7ZxM1/jakJ/V9/yfdtNx+i7bhVRRll/rrK+sk3qLt/3T0afH+tzz1HDfxzZ/HlGDduK1y/GL21zvKptQGWFSpVlFm0z+ZxD/vdAt9EqQ971NkRHW7qytog53+cfVfeFGLStfddfYka5x6dl+yi//4z6/559aUn4/+/k2pv8BqfM/0qVCnu+If2OJPRZUcyzJF/5RQm5xtM9ln+LRN+8U9+iMQS1Veg9q2z/TlV3Ett3/rLOIXOookidy/5X3GYD+S8a1z2e0vH695T9vhEqdbY//0dU3jWZ2rYq/cvCRT8r08/NLlT5/zySdSurv1ybLiup5tAp5+NNzfPJ5r61warapajItfTQNeK610/rWEMPyb+uOo/ierRNbGU01Z+rqneIPWNsT9t1rD+OYr8rm0eKvp/Ch1P4Yepyy+hWVD/f+VWXX5X+TZdfZZ+KLb9J+S8=", "base64"));
const $7eb6a55cb7a2526f$var$stateMachine = new dfa__WEBPACK_IMPORTED_MODULE_8__((/*@__PURE__*/$parcel$interopDefault($f3bd27a8c88f3f53$exports)));
class $7eb6a55cb7a2526f$export$2e2bcd8739ae039 extends $5340de7a86f3ae85$export$2e2bcd8739ae039 {
    static zeroMarkWidths = 'BEFORE_GPOS';
    static planFeatures(plan) {
        plan.addStage($7eb6a55cb7a2526f$var$setupSyllables);
        // Default glyph pre-processing group
        plan.addStage([
            'locl',
            'ccmp',
            'nukt',
            'akhn'
        ]);
        // Reordering group
        plan.addStage($7eb6a55cb7a2526f$var$clearSubstitutionFlags);
        plan.addStage([
            'rphf'
        ], false);
        plan.addStage($7eb6a55cb7a2526f$var$recordRphf);
        plan.addStage($7eb6a55cb7a2526f$var$clearSubstitutionFlags);
        plan.addStage([
            'pref'
        ]);
        plan.addStage($7eb6a55cb7a2526f$var$recordPref);
        // Orthographic unit shaping group
        plan.addStage([
            'rkrf',
            'abvf',
            'blwf',
            'half',
            'pstf',
            'vatu',
            'cjct'
        ]);
        plan.addStage($7eb6a55cb7a2526f$var$reorder);
        // Topographical features
        // Scripts that need this are handled by the Arabic shaper, not implemented here for now.
        // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);
        // Standard topographic presentation and positional feature application
        plan.addStage([
            'abvs',
            'blws',
            'pres',
            'psts',
            'dist',
            'abvm',
            'blwm'
        ]);
    }
    static assignFeatures(plan, glyphs) {
        // Decompose split vowels
        // TODO: do this in a more general unicode normalizer
        for(let i = glyphs.length - 1; i >= 0; i--){
            let codepoint = glyphs[i].codePoints[0];
            if ($7eb6a55cb7a2526f$var$decompositions[codepoint]) {
                let decomposed = $7eb6a55cb7a2526f$var$decompositions[codepoint].map((c)=>{
                    let g = plan.font.glyphForCodePoint(c);
                    return new $8cba766f534deddd$export$2e2bcd8739ae039(plan.font, g.id, [
                        c
                    ], glyphs[i].features);
                });
                glyphs.splice(i, 1, ...decomposed);
            }
        }
    }
}
function $7eb6a55cb7a2526f$var$useCategory(glyph) {
    return $7eb6a55cb7a2526f$var$trie.get(glyph.codePoints[0]);
}
class $7eb6a55cb7a2526f$var$USEInfo {
    constructor(category, syllableType, syllable){
        this.category = category;
        this.syllableType = syllableType;
        this.syllable = syllable;
    }
}
function $7eb6a55cb7a2526f$var$setupSyllables(font, glyphs) {
    let syllable = 0;
    for (let [start, end, tags] of $7eb6a55cb7a2526f$var$stateMachine.match(glyphs.map($7eb6a55cb7a2526f$var$useCategory))){
        ++syllable;
        // Create shaper info
        for(let i = start; i <= end; i++)glyphs[i].shaperInfo = new $7eb6a55cb7a2526f$var$USEInfo($7eb6a55cb7a2526f$var$categories[$7eb6a55cb7a2526f$var$useCategory(glyphs[i])], tags[0], syllable);
        // Assign rphf feature
        let limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);
        for(let i1 = start; i1 < start + limit; i1++)glyphs[i1].features.rphf = true;
    }
}
function $7eb6a55cb7a2526f$var$clearSubstitutionFlags(font, glyphs) {
    for (let glyph of glyphs)glyph.substituted = false;
}
function $7eb6a55cb7a2526f$var$recordRphf(font, glyphs) {
    for (let glyph of glyphs)if (glyph.substituted && glyph.features.rphf) // Mark a substituted repha.
    glyph.shaperInfo.category = 'R';
}
function $7eb6a55cb7a2526f$var$recordPref(font, glyphs) {
    for (let glyph of glyphs)if (glyph.substituted) // Mark a substituted pref as VPre, as they behave the same way.
    glyph.shaperInfo.category = 'VPre';
}
function $7eb6a55cb7a2526f$var$reorder(font, glyphs) {
    let dottedCircle = font.glyphForCodePoint(0x25cc).id;
    for(let start = 0, end = $7eb6a55cb7a2526f$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $7eb6a55cb7a2526f$var$nextSyllable(glyphs, start)){
        let i, j;
        let info = glyphs[start].shaperInfo;
        let type = info.syllableType;
        // Only a few syllable types need reordering.
        if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') continue;
        // Insert a dotted circle glyph in broken clusters.
        if (type === 'broken_cluster' && dottedCircle) {
            let g = new $8cba766f534deddd$export$2e2bcd8739ae039(font, dottedCircle, [
                0x25cc
            ]);
            g.shaperInfo = info;
            // Insert after possible Repha.
            for(i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++);
            glyphs.splice(++i, 0, g);
            end++;
        }
        // Move things forward.
        if (info.category === 'R' && end - start > 1) // Got a repha. Reorder it to after first base, before first halant.
        for(i = start + 1; i < end; i++){
            info = glyphs[i].shaperInfo;
            if ($7eb6a55cb7a2526f$var$isBase(info) || $7eb6a55cb7a2526f$var$isHalant(glyphs[i])) {
                // If we hit a halant, move before it; otherwise it's a base: move to it's
                // place, and shift things in between backward.
                if ($7eb6a55cb7a2526f$var$isHalant(glyphs[i])) i--;
                glyphs.splice(start, 0, ...glyphs.splice(start + 1, i - start), glyphs[i]);
                break;
            }
        }
        // Move things back.
        for(i = start, j = end; i < end; i++){
            info = glyphs[i].shaperInfo;
            if ($7eb6a55cb7a2526f$var$isBase(info) || $7eb6a55cb7a2526f$var$isHalant(glyphs[i])) // If we hit a halant, move after it; otherwise it's a base: move to it's
            // place, and shift things in between backward.
            j = $7eb6a55cb7a2526f$var$isHalant(glyphs[i]) ? i + 1 : i;
            else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) glyphs.splice(j, 1, glyphs[i], ...glyphs.splice(j, i - j));
        }
    }
}
function $7eb6a55cb7a2526f$var$nextSyllable(glyphs, start) {
    if (start >= glyphs.length) return start;
    let syllable = glyphs[start].shaperInfo.syllable;
    while(++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);
    return start;
}
function $7eb6a55cb7a2526f$var$isHalant(glyph) {
    return glyph.shaperInfo.category === 'H' && !glyph.isLigated;
}
function $7eb6a55cb7a2526f$var$isBase(info) {
    return info.category === 'B' || info.category === 'GB';
}


const $a1d926e2c804f4db$var$SHAPERS = {
    arab: $5cab828b3273a17c$export$2e2bcd8739ae039,
    mong: $5cab828b3273a17c$export$2e2bcd8739ae039,
    syrc: $5cab828b3273a17c$export$2e2bcd8739ae039,
    'nko ': $5cab828b3273a17c$export$2e2bcd8739ae039,
    phag: $5cab828b3273a17c$export$2e2bcd8739ae039,
    mand: $5cab828b3273a17c$export$2e2bcd8739ae039,
    mani: $5cab828b3273a17c$export$2e2bcd8739ae039,
    phlp: $5cab828b3273a17c$export$2e2bcd8739ae039,
    hang: $ce39c5154631fd0c$export$2e2bcd8739ae039,
    bng2: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    beng: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    dev2: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    deva: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    gjr2: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    gujr: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    guru: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    gur2: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    knda: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    knd2: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    mlm2: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    mlym: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    ory2: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    orya: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    taml: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    tml2: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    telu: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    tel2: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    khmr: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    bali: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    batk: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    brah: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    bugi: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    buhd: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    cakm: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    cham: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    dupl: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    egyp: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    gran: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    hano: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    java: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    kthi: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    kali: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    khar: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    khoj: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    sind: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    lepc: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    limb: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    mahj: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    // mand: UniversalShaper, // Mandaic
    // mani: UniversalShaper, // Manichaean
    mtei: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    modi: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    // mong: UniversalShaper, // Mongolian
    // 'nko ': UniversalShaper, // N\u2019Ko
    hmng: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    // phag: UniversalShaper, // Phags-pa
    // phlp: UniversalShaper, // Psalter Pahlavi
    rjng: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    saur: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    shrd: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    sidd: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    sinh: $c6b883ac45fa55f1$export$2e2bcd8739ae039,
    sund: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    sylo: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    tglg: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    tagb: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    tale: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    lana: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    tavt: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    takr: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    tibt: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    tfng: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    tirh: $7eb6a55cb7a2526f$export$2e2bcd8739ae039,
    latn: $5340de7a86f3ae85$export$2e2bcd8739ae039,
    DFLT: $5340de7a86f3ae85$export$2e2bcd8739ae039 // Default
};
function $a1d926e2c804f4db$export$7877a478dd30fd3d(script) {
    if (!Array.isArray(script)) script = [
        script
    ];
    for (let s of script){
        let shaper = $a1d926e2c804f4db$var$SHAPERS[s];
        if (shaper) return shaper;
    }
    return $5340de7a86f3ae85$export$2e2bcd8739ae039;
}





class $ec0cc8d4808a62ff$export$2e2bcd8739ae039 extends $cffd0e0e7e88a6c6$export$2e2bcd8739ae039 {
    applyLookup(lookupType, table) {
        switch(lookupType){
            case 1:
                {
                    let index = this.coverageIndex(table.coverage);
                    if (index === -1) return false;
                    let glyph = this.glyphIterator.cur;
                    switch(table.version){
                        case 1:
                            glyph.id = glyph.id + table.deltaGlyphID & 0xffff;
                            break;
                        case 2:
                            glyph.id = table.substitute.get(index);
                            break;
                    }
                    return true;
                }
            case 2:
                {
                    let index = this.coverageIndex(table.coverage);
                    if (index !== -1) {
                        let sequence = table.sequences.get(index);
                        if (sequence.length === 0) {
                            // If the sequence length is zero, delete the glyph.
                            // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.
                            this.glyphs.splice(this.glyphIterator.index, 1);
                            return true;
                        }
                        this.glyphIterator.cur.id = sequence[0];
                        this.glyphIterator.cur.ligatureComponent = 0;
                        let features = this.glyphIterator.cur.features;
                        let curGlyph = this.glyphIterator.cur;
                        let replacement = sequence.slice(1).map((gid, i)=>{
                            let glyph = new $8cba766f534deddd$export$2e2bcd8739ae039(this.font, gid, undefined, features);
                            glyph.shaperInfo = curGlyph.shaperInfo;
                            glyph.isLigated = curGlyph.isLigated;
                            glyph.ligatureComponent = i + 1;
                            glyph.substituted = true;
                            glyph.isMultiplied = true;
                            return glyph;
                        });
                        this.glyphs.splice(this.glyphIterator.index + 1, 0, ...replacement);
                        return true;
                    }
                    return false;
                }
            case 3:
                {
                    let index = this.coverageIndex(table.coverage);
                    if (index !== -1) {
                        let USER_INDEX = 0; // TODO
                        this.glyphIterator.cur.id = table.alternateSet.get(index)[USER_INDEX];
                        return true;
                    }
                    return false;
                }
            case 4:
                {
                    let index = this.coverageIndex(table.coverage);
                    if (index === -1) return false;
                    for (let ligature of table.ligatureSets.get(index)){
                        let matched = this.sequenceMatchIndices(1, ligature.components);
                        if (!matched) continue;
                        let curGlyph = this.glyphIterator.cur;
                        // Concatenate all of the characters the new ligature will represent
                        let characters = curGlyph.codePoints.slice();
                        for (let index of matched)characters.push(...this.glyphs[index].codePoints);
                        // Create the replacement ligature glyph
                        let ligatureGlyph = new $8cba766f534deddd$export$2e2bcd8739ae039(this.font, ligature.glyph, characters, curGlyph.features);
                        ligatureGlyph.shaperInfo = curGlyph.shaperInfo;
                        ligatureGlyph.isLigated = true;
                        ligatureGlyph.substituted = true;
                        // From Harfbuzz:
                        // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave
                        //   the ligature to keep its old ligature id.  This will allow it to attach to
                        //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,
                        //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a
                        //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature
                        //   later, we don't want them to lose their ligature id/component, otherwise
                        //   GPOS will fail to correctly position the mark ligature on top of the
                        //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343
                        //
                        // - If a ligature is formed of components that some of which are also ligatures
                        //   themselves, and those ligature components had marks attached to *their*
                        //   components, we have to attach the marks to the new ligature component
                        //   positions!  Now *that*'s tricky!  And these marks may be following the
                        //   last component of the whole sequence, so we should loop forward looking
                        //   for them and update them.
                        //
                        //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a
                        //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature
                        //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature
                        //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to
                        //   the new ligature with a component value of 2.
                        //
                        //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633
                        let isMarkLigature = curGlyph.isMark;
                        for(let i = 0; i < matched.length && isMarkLigature; i++)isMarkLigature = this.glyphs[matched[i]].isMark;
                        ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;
                        let lastLigID = curGlyph.ligatureID;
                        let lastNumComps = curGlyph.codePoints.length;
                        let curComps = lastNumComps;
                        let idx = this.glyphIterator.index + 1;
                        // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.
                        // This allows GPOS to attach marks to the correct ligature components.
                        for (let matchIndex of matched){
                            // Don't assign new ligature components for mark ligatures (see above)
                            if (isMarkLigature) idx = matchIndex;
                            else while(idx < matchIndex){
                                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);
                                this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;
                                this.glyphs[idx].ligatureComponent = ligatureComponent;
                                idx++;
                            }
                            lastLigID = this.glyphs[idx].ligatureID;
                            lastNumComps = this.glyphs[idx].codePoints.length;
                            curComps += lastNumComps;
                            idx++; // skip base glyph
                        }
                        // Adjust ligature components for any marks following
                        if (lastLigID && !isMarkLigature) for(let i1 = idx; i1 < this.glyphs.length; i1++){
                            if (this.glyphs[i1].ligatureID === lastLigID) {
                                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[i1].ligatureComponent || 1, lastNumComps);
                                this.glyphs[i1].ligatureComponent = ligatureComponent;
                            } else break;
                        }
                        // Delete the matched glyphs, and replace the current glyph with the ligature glyph
                        for(let i2 = matched.length - 1; i2 >= 0; i2--)this.glyphs.splice(matched[i2], 1);
                        this.glyphs[this.glyphIterator.index] = ligatureGlyph;
                        return true;
                    }
                    return false;
                }
            case 5:
                return this.applyContext(table);
            case 6:
                return this.applyChainingContext(table);
            case 7:
                return this.applyLookup(table.lookupType, table.extension);
            default:
                throw new Error(\`GSUB lookupType \${lookupType} is not supported\`);
        }
    }
}



class $d1645ec9e32ddac0$export$2e2bcd8739ae039 extends $cffd0e0e7e88a6c6$export$2e2bcd8739ae039 {
    applyPositionValue(sequenceIndex, value) {
        let position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];
        if (value.xAdvance != null) position.xAdvance += value.xAdvance;
        if (value.yAdvance != null) position.yAdvance += value.yAdvance;
        if (value.xPlacement != null) position.xOffset += value.xPlacement;
        if (value.yPlacement != null) position.yOffset += value.yPlacement;
        // Adjustments for font variations
        let variationProcessor = this.font._variationProcessor;
        let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;
        if (variationProcessor && variationStore) {
            if (value.xPlaDevice) position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);
            if (value.yPlaDevice) position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);
            if (value.xAdvDevice) position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);
            if (value.yAdvDevice) position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);
        }
    // TODO: device tables
    }
    applyLookup(lookupType, table) {
        switch(lookupType){
            case 1:
                {
                    let index = this.coverageIndex(table.coverage);
                    if (index === -1) return false;
                    switch(table.version){
                        case 1:
                            this.applyPositionValue(0, table.value);
                            break;
                        case 2:
                            this.applyPositionValue(0, table.values.get(index));
                            break;
                    }
                    return true;
                }
            case 2:
                {
                    let nextGlyph = this.glyphIterator.peek();
                    if (!nextGlyph) return false;
                    let index = this.coverageIndex(table.coverage);
                    if (index === -1) return false;
                    switch(table.version){
                        case 1:
                            let set = table.pairSets.get(index);
                            for (let pair of set)if (pair.secondGlyph === nextGlyph.id) {
                                this.applyPositionValue(0, pair.value1);
                                this.applyPositionValue(1, pair.value2);
                                return true;
                            }
                            return false;
                        case 2:
                            let class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);
                            let class2 = this.getClassID(nextGlyph.id, table.classDef2);
                            if (class1 === -1 || class2 === -1) return false;
                            var pair1 = table.classRecords.get(class1).get(class2);
                            this.applyPositionValue(0, pair1.value1);
                            this.applyPositionValue(1, pair1.value2);
                            return true;
                    }
                }
            case 3:
                {
                    let nextIndex = this.glyphIterator.peekIndex();
                    let nextGlyph = this.glyphs[nextIndex];
                    if (!nextGlyph) return false;
                    let curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];
                    if (!curRecord || !curRecord.exitAnchor) return false;
                    let nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, nextGlyph.id)];
                    if (!nextRecord || !nextRecord.entryAnchor) return false;
                    let entry = this.getAnchor(nextRecord.entryAnchor);
                    let exit = this.getAnchor(curRecord.exitAnchor);
                    let cur = this.positions[this.glyphIterator.index];
                    let next = this.positions[nextIndex];
                    let d;
                    switch(this.direction){
                        case 'ltr':
                            cur.xAdvance = exit.x + cur.xOffset;
                            d = entry.x + next.xOffset;
                            next.xAdvance -= d;
                            next.xOffset -= d;
                            break;
                        case 'rtl':
                            d = exit.x + cur.xOffset;
                            cur.xAdvance -= d;
                            cur.xOffset -= d;
                            next.xAdvance = entry.x + next.xOffset;
                            break;
                    }
                    if (this.glyphIterator.flags.rightToLeft) {
                        this.glyphIterator.cur.cursiveAttachment = nextIndex;
                        cur.yOffset = entry.y - exit.y;
                    } else {
                        nextGlyph.cursiveAttachment = this.glyphIterator.index;
                        cur.yOffset = exit.y - entry.y;
                    }
                    return true;
                }
            case 4:
                {
                    let markIndex = this.coverageIndex(table.markCoverage);
                    if (markIndex === -1) return false;
                    // search backward for a base glyph
                    let baseGlyphIndex = this.glyphIterator.index;
                    while(--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0));
                    if (baseGlyphIndex < 0) return false;
                    let baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);
                    if (baseIndex === -1) return false;
                    let markRecord = table.markArray[markIndex];
                    let baseAnchor = table.baseArray[baseIndex][markRecord.class];
                    this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);
                    return true;
                }
            case 5:
                {
                    let markIndex = this.coverageIndex(table.markCoverage);
                    if (markIndex === -1) return false;
                    // search backward for a base glyph
                    let baseGlyphIndex = this.glyphIterator.index;
                    while(--baseGlyphIndex >= 0 && this.glyphs[baseGlyphIndex].isMark);
                    if (baseGlyphIndex < 0) return false;
                    let ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[baseGlyphIndex].id);
                    if (ligIndex === -1) return false;
                    let ligAttach = table.ligatureArray[ligIndex];
                    let markGlyph = this.glyphIterator.cur;
                    let ligGlyph = this.glyphs[baseGlyphIndex];
                    let compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;
                    let markRecord = table.markArray[markIndex];
                    let baseAnchor = ligAttach[compIndex][markRecord.class];
                    this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);
                    return true;
                }
            case 6:
                {
                    let mark1Index = this.coverageIndex(table.mark1Coverage);
                    if (mark1Index === -1) return false;
                    // get the previous mark to attach to
                    let prevIndex = this.glyphIterator.peekIndex(-1);
                    let prev = this.glyphs[prevIndex];
                    if (!prev || !prev.isMark) return false;
                    let cur = this.glyphIterator.cur;
                    // The following logic was borrowed from Harfbuzz
                    let good = false;
                    if (cur.ligatureID === prev.ligatureID) {
                        if (!cur.ligatureID) good = true;
                        else if (cur.ligatureComponent === prev.ligatureComponent) good = true;
                    } else // If ligature ids don't match, it may be the case that one of the marks
                    // itself is a ligature, in which case match.
                    if (cur.ligatureID && !cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) good = true;
                    if (!good) return false;
                    let mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);
                    if (mark2Index === -1) return false;
                    let markRecord = table.mark1Array[mark1Index];
                    let baseAnchor = table.mark2Array[mark2Index][markRecord.class];
                    this.applyAnchor(markRecord, baseAnchor, prevIndex);
                    return true;
                }
            case 7:
                return this.applyContext(table);
            case 8:
                return this.applyChainingContext(table);
            case 9:
                return this.applyLookup(table.lookupType, table.extension);
            default:
                throw new Error(\`Unsupported GPOS table: \${lookupType}\`);
        }
    }
    applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {
        let baseCoords = this.getAnchor(baseAnchor);
        let markCoords = this.getAnchor(markRecord.markAnchor);
        let basePos = this.positions[baseGlyphIndex];
        let markPos = this.positions[this.glyphIterator.index];
        markPos.xOffset = baseCoords.x - markCoords.x;
        markPos.yOffset = baseCoords.y - markCoords.y;
        this.glyphIterator.cur.markAttachment = baseGlyphIndex;
    }
    getAnchor(anchor) {
        // TODO: contour point, device tables
        let x = anchor.xCoordinate;
        let y = anchor.yCoordinate;
        // Adjustments for font variations
        let variationProcessor = this.font._variationProcessor;
        let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;
        if (variationProcessor && variationStore) {
            if (anchor.xDeviceTable) x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);
            if (anchor.yDeviceTable) y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);
        }
        return {
            x: x,
            y: y
        };
    }
    applyFeatures(userFeatures, glyphs, advances) {
        super.applyFeatures(userFeatures, glyphs, advances);
        for(var i = 0; i < this.glyphs.length; i++)this.fixCursiveAttachment(i);
        this.fixMarkAttachment();
    }
    fixCursiveAttachment(i) {
        let glyph = this.glyphs[i];
        if (glyph.cursiveAttachment != null) {
            let j = glyph.cursiveAttachment;
            glyph.cursiveAttachment = null;
            this.fixCursiveAttachment(j);
            this.positions[i].yOffset += this.positions[j].yOffset;
        }
    }
    fixMarkAttachment() {
        for(let i = 0; i < this.glyphs.length; i++){
            let glyph = this.glyphs[i];
            if (glyph.markAttachment != null) {
                let j = glyph.markAttachment;
                this.positions[i].xOffset += this.positions[j].xOffset;
                this.positions[i].yOffset += this.positions[j].yOffset;
                if (this.direction === 'ltr') for(let k = j; k < i; k++){
                    this.positions[i].xOffset -= this.positions[k].xAdvance;
                    this.positions[i].yOffset -= this.positions[k].yAdvance;
                }
                else for(let k1 = j + 1; k1 < i + 1; k1++){
                    this.positions[i].xOffset += this.positions[k1].xAdvance;
                    this.positions[i].yOffset += this.positions[k1].yAdvance;
                }
            }
        }
    }
}


class $805414ed4cd3125e$export$2e2bcd8739ae039 {
    constructor(font){
        this.font = font;
        this.glyphInfos = null;
        this.plan = null;
        this.GSUBProcessor = null;
        this.GPOSProcessor = null;
        this.fallbackPosition = true;
        if (font.GSUB) this.GSUBProcessor = new $ec0cc8d4808a62ff$export$2e2bcd8739ae039(font, font.GSUB);
        if (font.GPOS) this.GPOSProcessor = new $d1645ec9e32ddac0$export$2e2bcd8739ae039(font, font.GPOS);
    }
    setup(glyphRun) {
        // Map glyphs to GlyphInfo objects so data can be passed between
        // GSUB and GPOS without mutating the real (shared) Glyph objects.
        this.glyphInfos = glyphRun.glyphs.map((glyph)=>new $8cba766f534deddd$export$2e2bcd8739ae039(this.font, glyph.id, [
                ...glyph.codePoints
            ])
        );
        // Select a script based on what is available in GSUB/GPOS.
        let script = null;
        if (this.GPOSProcessor) script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);
        if (this.GSUBProcessor) script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);
        // Choose a shaper based on the script, and setup a shaping plan.
        // This determines which features to apply to which glyphs.
        this.shaper = $a1d926e2c804f4db$export$7877a478dd30fd3d(script);
        this.plan = new $d208953d14e55e3c$export$2e2bcd8739ae039(this.font, script, glyphRun.direction);
        this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features);
        // Assign chosen features to output glyph run
        for(let key in this.plan.allFeatures)glyphRun.features[key] = true;
    }
    substitute(glyphRun) {
        if (this.GSUBProcessor) {
            this.plan.process(this.GSUBProcessor, this.glyphInfos);
            // Map glyph infos back to normal Glyph objects
            glyphRun.glyphs = this.glyphInfos.map((glyphInfo)=>this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints)
            );
        }
    }
    position(glyphRun) {
        if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') this.zeroMarkAdvances(glyphRun.positions);
        if (this.GPOSProcessor) this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);
        if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') this.zeroMarkAdvances(glyphRun.positions);
        // Reverse the glyphs and positions if the script is right-to-left
        if (glyphRun.direction === 'rtl') {
            glyphRun.glyphs.reverse();
            glyphRun.positions.reverse();
        }
        return this.GPOSProcessor && this.GPOSProcessor.features;
    }
    zeroMarkAdvances(positions) {
        for(let i = 0; i < this.glyphInfos.length; i++)if (this.glyphInfos[i].isMark) {
            positions[i].xAdvance = 0;
            positions[i].yAdvance = 0;
        }
    }
    cleanup() {
        this.glyphInfos = null;
        this.plan = null;
        this.shaper = null;
    }
    getAvailableFeatures(script, language) {
        let features = [];
        if (this.GSUBProcessor) {
            this.GSUBProcessor.selectScript(script, language);
            features.push(...Object.keys(this.GSUBProcessor.features));
        }
        if (this.GPOSProcessor) {
            this.GPOSProcessor.selectScript(script, language);
            features.push(...Object.keys(this.GPOSProcessor.features));
        }
        return features;
    }
}


class $2df783177c3b5db5$export$2e2bcd8739ae039 {
    constructor(font){
        this.font = font;
        this.unicodeLayoutEngine = null;
        this.kernProcessor = null;
        // Choose an advanced layout engine. We try the AAT morx table first since more
        // scripts are currently supported because the shaping logic is built into the font.
        if (this.font.morx) this.engine = new $9273c77bc46b13e0$export$2e2bcd8739ae039(this.font);
        else if (this.font.GSUB || this.font.GPOS) this.engine = new $805414ed4cd3125e$export$2e2bcd8739ae039(this.font);
    }
    layout(string, features, script, language, direction) {
        // Make the features parameter optional
        if (typeof features === 'string') {
            direction = language;
            language = script;
            script = features;
            features = [];
        }
        // Map string to glyphs if needed
        if (typeof string === 'string') {
            // Attempt to detect the script from the string if not provided.
            if (script == null) script = $a5878e4f4663c9e2$export$e5cb25e204fb8450(string);
            var glyphs = this.font.glyphsForString(string);
        } else {
            // Attempt to detect the script from the glyph code points if not provided.
            if (script == null) {
                let codePoints = [];
                for (let glyph of string)codePoints.push(...glyph.codePoints);
                script = $a5878e4f4663c9e2$export$16fab0757cfc223d(codePoints);
            }
            var glyphs = string;
        }
        let glyphRun = new $5a6ae00fa7e614b0$export$2e2bcd8739ae039(glyphs, features, script, language, direction);
        // Return early if there are no glyphs
        if (glyphs.length === 0) {
            glyphRun.positions = [];
            return glyphRun;
        }
        // Setup the advanced layout engine
        if (this.engine && this.engine.setup) this.engine.setup(glyphRun);
        // Substitute and position the glyphs
        this.substitute(glyphRun);
        this.position(glyphRun);
        this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);
        // Let the layout engine clean up any state it might have
        if (this.engine && this.engine.cleanup) this.engine.cleanup();
        return glyphRun;
    }
    substitute(glyphRun) {
        // Call the advanced layout engine to make substitutions
        if (this.engine && this.engine.substitute) this.engine.substitute(glyphRun);
    }
    position(glyphRun) {
        // Get initial glyph positions
        glyphRun.positions = glyphRun.glyphs.map((glyph)=>new $4bff5f854806c785$export$2e2bcd8739ae039(glyph.advanceWidth)
        );
        let positioned = null;
        // Call the advanced layout engine. Returns the features applied.
        if (this.engine && this.engine.position) positioned = this.engine.position(glyphRun);
        // if there is no GPOS table, use unicode properties to position marks.
        if (!positioned && (!this.engine || this.engine.fallbackPosition)) {
            if (!this.unicodeLayoutEngine) this.unicodeLayoutEngine = new $e4967fef9afc586a$export$2e2bcd8739ae039(this.font);
            this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);
        }
        // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table
        if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {
            if (!this.kernProcessor) this.kernProcessor = new $8526e21034212dc1$export$2e2bcd8739ae039(this.font);
            this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);
            glyphRun.features.kern = true;
        }
    }
    hideDefaultIgnorables(glyphs, positions) {
        let space = this.font.glyphForCodePoint(0x20);
        for(let i = 0; i < glyphs.length; i++)if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {
            glyphs[i] = space;
            positions[i].xAdvance = 0;
            positions[i].yAdvance = 0;
        }
    }
    isDefaultIgnorable(ch) {
        // From DerivedCoreProperties.txt in the Unicode database,
        // minus U+115F, U+1160, U+3164 and U+FFA0, which is what
        // Harfbuzz and Uniscribe do.
        let plane = ch >> 16;
        if (plane === 0) // BMP
        switch(ch >> 8){
            case 0x00:
                return ch === 0x00AD;
            case 0x03:
                return ch === 0x034F;
            case 0x06:
                return ch === 0x061C;
            case 0x17:
                return 0x17B4 <= ch && ch <= 0x17B5;
            case 0x18:
                return 0x180B <= ch && ch <= 0x180E;
            case 0x20:
                return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;
            case 0xFE:
                return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;
            case 0xFF:
                return 0xFFF0 <= ch && ch <= 0xFFF8;
            default:
                return false;
        }
        else // Other planes
        switch(plane){
            case 0x01:
                return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;
            case 0x0E:
                return 0xE0000 <= ch && ch <= 0xE0FFF;
            default:
                return false;
        }
    }
    getAvailableFeatures(script, language) {
        let features = [];
        if (this.engine) features.push(...this.engine.getAvailableFeatures(script, language));
        if (this.font.kern && features.indexOf('kern') === -1) features.push('kern');
        return features;
    }
    stringsForGlyph(gid) {
        let result = new Set;
        let codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);
        for (let codePoint of codePoints)result.add(String.fromCodePoint(codePoint));
        if (this.engine && this.engine.stringsForGlyph) for (let string of this.engine.stringsForGlyph(gid))result.add(string);
        return Array.from(result);
    }
}





const $af5e1fcddefe17a2$var$SVG_COMMANDS = {
    moveTo: 'M',
    lineTo: 'L',
    quadraticCurveTo: 'Q',
    bezierCurveTo: 'C',
    closePath: 'Z'
};
class $af5e1fcddefe17a2$export$2e2bcd8739ae039 {
    constructor(){
        this.commands = [];
        this._bbox = null;
        this._cbox = null;
    }
    /**
   * Compiles the path to a JavaScript function that can be applied with
   * a graphics context in order to render the path.
   * @return {string}
   */ toFunction() {
        return (ctx)=>{
            this.commands.forEach((c)=>{
                return ctx[c.command].apply(ctx, c.args);
            });
        };
    }
    /**
   * Converts the path to an SVG path data string
   * @return {string}
   */ toSVG() {
        let cmds = this.commands.map((c)=>{
            let args = c.args.map((arg)=>Math.round(arg * 100) / 100
            );
            return \`\${$af5e1fcddefe17a2$var$SVG_COMMANDS[c.command]}\${args.join(' ')}\`;
        });
        return cmds.join('');
    }
    /**
   * Gets the "control box" of a path.
   * This is like the bounding box, but it includes all points including
   * control points of bezier segments and is much faster to compute than
   * the real bounding box.
   * @type {BBox}
   */ get cbox() {
        if (!this._cbox) {
            let cbox = new $fcb46e14b01ea01f$export$2e2bcd8739ae039;
            for (let command1 of this.commands)for(let i = 0; i < command1.args.length; i += 2)cbox.addPoint(command1.args[i], command1.args[i + 1]);
            this._cbox = Object.freeze(cbox);
        }
        return this._cbox;
    }
    /**
   * Gets the exact bounding box of the path by evaluating curve segments.
   * Slower to compute than the control box, but more accurate.
   * @type {BBox}
   */ get bbox() {
        if (this._bbox) return this._bbox;
        let bbox = new $fcb46e14b01ea01f$export$2e2bcd8739ae039;
        let cx = 0, cy = 0;
        let f = (t)=>Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i]
        ;
        for (let c of this.commands)switch(c.command){
            case 'moveTo':
            case 'lineTo':
                let [x, y] = c.args;
                bbox.addPoint(x, y);
                cx = x;
                cy = y;
                break;
            case 'quadraticCurveTo':
            case 'bezierCurveTo':
                if (c.command === 'quadraticCurveTo') {
                    // http://fontforge.org/bezier.html
                    var [qp1x, qp1y, p3x, p3y] = c.args;
                    var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)
                    var cp1y = cy + 2 / 3 * (qp1y - cy);
                    var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)
                    var cp2y = p3y + 2 / 3 * (qp1y - p3y);
                } else var [cp1x, cp1y, cp2x, cp2y, p3x, p3y] = c.args;
                // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html
                bbox.addPoint(p3x, p3y);
                var p0 = [
                    cx,
                    cy
                ];
                var p1 = [
                    cp1x,
                    cp1y
                ];
                var p2 = [
                    cp2x,
                    cp2y
                ];
                var p3 = [
                    p3x,
                    p3y
                ];
                for(var i = 0; i <= 1; i++){
                    let b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];
                    let a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];
                    c = 3 * p1[i] - 3 * p0[i];
                    if (a === 0) {
                        if (b === 0) continue;
                        let t = -c / b;
                        if (0 < t && t < 1) {
                            if (i === 0) bbox.addPoint(f(t), bbox.maxY);
                            else if (i === 1) bbox.addPoint(bbox.maxX, f(t));
                        }
                        continue;
                    }
                    let b2ac = Math.pow(b, 2) - 4 * c * a;
                    if (b2ac < 0) continue;
                    let t1 = (-b + Math.sqrt(b2ac)) / (2 * a);
                    if (0 < t1 && t1 < 1) {
                        if (i === 0) bbox.addPoint(f(t1), bbox.maxY);
                        else if (i === 1) bbox.addPoint(bbox.maxX, f(t1));
                    }
                    let t2 = (-b - Math.sqrt(b2ac)) / (2 * a);
                    if (0 < t2 && t2 < 1) {
                        if (i === 0) bbox.addPoint(f(t2), bbox.maxY);
                        else if (i === 1) bbox.addPoint(bbox.maxX, f(t2));
                    }
                }
                cx = p3x;
                cy = p3y;
                break;
        }
        return this._bbox = Object.freeze(bbox);
    }
    /**
   * Applies a mapping function to each point in the path.
   * @param {function} fn
   * @return {Path}
   */ mapPoints(fn) {
        let path = new $af5e1fcddefe17a2$export$2e2bcd8739ae039;
        for (let c of this.commands){
            let args = [];
            for(let i = 0; i < c.args.length; i += 2){
                let [x, y] = fn(c.args[i], c.args[i + 1]);
                args.push(x, y);
            }
            path[c.command](...args);
        }
        return path;
    }
    /**
   * Transforms the path by the given matrix.
   */ transform(m0, m1, m2, m3, m4, m5) {
        return this.mapPoints((x, y)=>{
            const tx = m0 * x + m2 * y + m4;
            const ty = m1 * x + m3 * y + m5;
            return [
                tx,
                ty
            ];
        });
    }
    /**
   * Translates the path by the given offset.
   */ translate(x, y) {
        return this.transform(1, 0, 0, 1, x, y);
    }
    /**
   * Rotates the path by the given angle (in radians).
   */ rotate(angle) {
        let cos = Math.cos(angle);
        let sin = Math.sin(angle);
        return this.transform(cos, sin, -sin, cos, 0, 0);
    }
    /**
   * Scales the path.
   */ scale(scaleX, scaleY = scaleX) {
        return this.transform(scaleX, 0, 0, scaleY, 0, 0);
    }
}
for (let command of [
    'moveTo',
    'lineTo',
    'quadraticCurveTo',
    'bezierCurveTo',
    'closePath'
])$af5e1fcddefe17a2$export$2e2bcd8739ae039.prototype[command] = function(...args) {
    this._bbox = this._cbox = null;
    this.commands.push({
        command: command,
        args: args
    });
    return this;
};



var $c55d37cb83b3ceea$export$2e2bcd8739ae039 = [
    '.notdef',
    '.null',
    'nonmarkingreturn',
    'space',
    'exclam',
    'quotedbl',
    'numbersign',
    'dollar',
    'percent',
    'ampersand',
    'quotesingle',
    'parenleft',
    'parenright',
    'asterisk',
    'plus',
    'comma',
    'hyphen',
    'period',
    'slash',
    'zero',
    'one',
    'two',
    'three',
    'four',
    'five',
    'six',
    'seven',
    'eight',
    'nine',
    'colon',
    'semicolon',
    'less',
    'equal',
    'greater',
    'question',
    'at',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    'bracketleft',
    'backslash',
    'bracketright',
    'asciicircum',
    'underscore',
    'grave',
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
    'braceleft',
    'bar',
    'braceright',
    'asciitilde',
    'Adieresis',
    'Aring',
    'Ccedilla',
    'Eacute',
    'Ntilde',
    'Odieresis',
    'Udieresis',
    'aacute',
    'agrave',
    'acircumflex',
    'adieresis',
    'atilde',
    'aring',
    'ccedilla',
    'eacute',
    'egrave',
    'ecircumflex',
    'edieresis',
    'iacute',
    'igrave',
    'icircumflex',
    'idieresis',
    'ntilde',
    'oacute',
    'ograve',
    'ocircumflex',
    'odieresis',
    'otilde',
    'uacute',
    'ugrave',
    'ucircumflex',
    'udieresis',
    'dagger',
    'degree',
    'cent',
    'sterling',
    'section',
    'bullet',
    'paragraph',
    'germandbls',
    'registered',
    'copyright',
    'trademark',
    'acute',
    'dieresis',
    'notequal',
    'AE',
    'Oslash',
    'infinity',
    'plusminus',
    'lessequal',
    'greaterequal',
    'yen',
    'mu',
    'partialdiff',
    'summation',
    'product',
    'pi',
    'integral',
    'ordfeminine',
    'ordmasculine',
    'Omega',
    'ae',
    'oslash',
    'questiondown',
    'exclamdown',
    'logicalnot',
    'radical',
    'florin',
    'approxequal',
    'Delta',
    'guillemotleft',
    'guillemotright',
    'ellipsis',
    'nonbreakingspace',
    'Agrave',
    'Atilde',
    'Otilde',
    'OE',
    'oe',
    'endash',
    'emdash',
    'quotedblleft',
    'quotedblright',
    'quoteleft',
    'quoteright',
    'divide',
    'lozenge',
    'ydieresis',
    'Ydieresis',
    'fraction',
    'currency',
    'guilsinglleft',
    'guilsinglright',
    'fi',
    'fl',
    'daggerdbl',
    'periodcentered',
    'quotesinglbase',
    'quotedblbase',
    'perthousand',
    'Acircumflex',
    'Ecircumflex',
    'Aacute',
    'Edieresis',
    'Egrave',
    'Iacute',
    'Icircumflex',
    'Idieresis',
    'Igrave',
    'Oacute',
    'Ocircumflex',
    'apple',
    'Ograve',
    'Uacute',
    'Ucircumflex',
    'Ugrave',
    'dotlessi',
    'circumflex',
    'tilde',
    'macron',
    'breve',
    'dotaccent',
    'ring',
    'cedilla',
    'hungarumlaut',
    'ogonek',
    'caron',
    'Lslash',
    'lslash',
    'Scaron',
    'scaron',
    'Zcaron',
    'zcaron',
    'brokenbar',
    'Eth',
    'eth',
    'Yacute',
    'yacute',
    'Thorn',
    'thorn',
    'minus',
    'multiply',
    'onesuperior',
    'twosuperior',
    'threesuperior',
    'onehalf',
    'onequarter',
    'threequarters',
    'franc',
    'Gbreve',
    'gbreve',
    'Idotaccent',
    'Scedilla',
    'scedilla',
    'Cacute',
    'cacute',
    'Ccaron',
    'ccaron',
    'dcroat'
];


var _class;
let $e1a34a692932ba79$export$2e2bcd8739ae039 = (_class = class $e1a34a692932ba79$export$2e2bcd8739ae039 {
    constructor(id, codePoints, font){
        /**
     * The glyph id in the font
     * @type {number}
     */ this.id = id;
        /**
     * An array of unicode code points that are represented by this glyph.
     * There can be multiple code points in the case of ligatures and other glyphs
     * that represent multiple visual characters.
     * @type {number[]}
     */ this.codePoints = codePoints;
        this._font = font;
        // TODO: get this info from GDEF if available
        this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode_properties__WEBPACK_IMPORTED_MODULE_6__["default"].isMark);
        this.isLigature = this.codePoints.length > 1;
    }
    _getPath() {
        return new $af5e1fcddefe17a2$export$2e2bcd8739ae039();
    }
    _getCBox() {
        return this.path.cbox;
    }
    _getBBox() {
        return this.path.bbox;
    }
    _getTableMetrics(table) {
        if (this.id < table.metrics.length) return table.metrics.get(this.id);
        let metric = table.metrics.get(table.metrics.length - 1);
        let res = {
            advance: metric ? metric.advance : 0,
            bearing: table.bearings.get(this.id - table.metrics.length) || 0
        };
        return res;
    }
    _getMetrics(cbox) {
        if (this._metrics) return this._metrics;
        let { advance: advanceWidth , bearing: leftBearing  } = this._getTableMetrics(this._font.hmtx);
        // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea
        if (this._font.vmtx) var { advance: advanceHeight , bearing: topBearing  } = this._getTableMetrics(this._font.vmtx);
        else {
            let os2;
            if (typeof cbox === 'undefined' || cbox === null) ({ cbox: cbox  } = this);
            if ((os2 = this._font['OS/2']) && os2.version > 0) {
                var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);
                var topBearing = os2.typoAscender - cbox.maxY;
            } else {
                let { hhea: hhea  } = this._font;
                var advanceHeight = Math.abs(hhea.ascent - hhea.descent);
                var topBearing = hhea.ascent - cbox.maxY;
            }
        }
        if (this._font._variationProcessor && this._font.HVAR) advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);
        return this._metrics = {
            advanceWidth: advanceWidth,
            advanceHeight: advanceHeight,
            leftBearing: leftBearing,
            topBearing: topBearing
        };
    }
    /**
   * The glyph\u2019s control box.
   * This is often the same as the bounding box, but is faster to compute.
   * Because of the way bezier curves are defined, some of the control points
   * can be outside of the bounding box. Where \`bbox\` takes this into account,
   * \`cbox\` does not. Thus, cbox is less accurate, but faster to compute.
   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)
   * for a more detailed description.
   *
   * @type {BBox}
   */ get cbox() {
        return this._getCBox();
    }
    /**
   * The glyph\u2019s bounding box, i.e. the rectangle that encloses the
   * glyph outline as tightly as possible.
   * @type {BBox}
   */ get bbox() {
        return this._getBBox();
    }
    /**
   * A vector Path object representing the glyph outline.
   * @type {Path}
   */ get path() {
        // Cache the path so we only decode it once
        // Decoding is actually performed by subclasses
        return this._getPath();
    }
    /**
   * Returns a path scaled to the given font size.
   * @param {number} size
   * @return {Path}
   */ getScaledPath(size) {
        let scale = 1 / this._font.unitsPerEm * size;
        return this.path.scale(scale);
    }
    /**
   * The glyph's advance width.
   * @type {number}
   */ get advanceWidth() {
        return this._getMetrics().advanceWidth;
    }
    /**
   * The glyph's advance height.
   * @type {number}
   */ get advanceHeight() {
        return this._getMetrics().advanceHeight;
    }
    get ligatureCaretPositions() {}
    _getName() {
        let { post: post  } = this._font;
        if (!post) return null;
        switch(post.version){
            case 1:
                return $c55d37cb83b3ceea$export$2e2bcd8739ae039[this.id];
            case 2:
                let id = post.glyphNameIndex[this.id];
                if (id < $c55d37cb83b3ceea$export$2e2bcd8739ae039.length) return $c55d37cb83b3ceea$export$2e2bcd8739ae039[id];
                return post.names[id - $c55d37cb83b3ceea$export$2e2bcd8739ae039.length];
            case 2.5:
                return $c55d37cb83b3ceea$export$2e2bcd8739ae039[this.id + post.offsets[this.id]];
            case 4:
                return String.fromCharCode(post.map[this.id]);
        }
    }
    /**
   * The glyph's name
   * @type {string}
   */ get name() {
        return this._getName();
    }
    /**
   * Renders the glyph to the given graphics context, at the specified font size.
   * @param {CanvasRenderingContext2d} ctx
   * @param {number} size
   */ render(ctx, size) {
        ctx.save();
        let scale = 1 / this._font.head.unitsPerEm * size;
        ctx.scale(scale, scale);
        let fn = this.path.toFunction();
        fn(ctx);
        ctx.fill();
        ctx.restore();
    }
}, (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "cbox", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "cbox"), _class.prototype), (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "bbox", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "bbox"), _class.prototype), (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "path", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "path"), _class.prototype), (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "advanceWidth", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "advanceWidth"), _class.prototype), (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "advanceHeight", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "advanceHeight"), _class.prototype), (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "name", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "name"), _class.prototype), _class);





// The header for both simple and composite glyphs
let $e20fdd09923e4c19$var$GlyfHeader = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    numberOfContours: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    xMin: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    yMin: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    xMax: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    yMax: restructure__WEBPACK_IMPORTED_MODULE_0__.int16
});
// Flags for simple glyphs
const $e20fdd09923e4c19$var$ON_CURVE = 1;
const $e20fdd09923e4c19$var$X_SHORT_VECTOR = 2;
const $e20fdd09923e4c19$var$Y_SHORT_VECTOR = 4;
const $e20fdd09923e4c19$var$REPEAT = 8;
const $e20fdd09923e4c19$var$SAME_X = 16;
const $e20fdd09923e4c19$var$SAME_Y = 32;
// Flags for composite glyphs
const $e20fdd09923e4c19$var$ARG_1_AND_2_ARE_WORDS = 1;
const $e20fdd09923e4c19$var$ARGS_ARE_XY_VALUES = 2;
const $e20fdd09923e4c19$var$ROUND_XY_TO_GRID = 4;
const $e20fdd09923e4c19$var$WE_HAVE_A_SCALE = 8;
const $e20fdd09923e4c19$var$MORE_COMPONENTS = 32;
const $e20fdd09923e4c19$var$WE_HAVE_AN_X_AND_Y_SCALE = 64;
const $e20fdd09923e4c19$var$WE_HAVE_A_TWO_BY_TWO = 128;
const $e20fdd09923e4c19$var$WE_HAVE_INSTRUCTIONS = 256;
const $e20fdd09923e4c19$var$USE_MY_METRICS = 512;
const $e20fdd09923e4c19$var$OVERLAP_COMPOUND = 1024;
const $e20fdd09923e4c19$var$SCALED_COMPONENT_OFFSET = 2048;
const $e20fdd09923e4c19$var$UNSCALED_COMPONENT_OFFSET = 4096;
class $e20fdd09923e4c19$export$baf26146a414f24a {
    constructor(onCurve, endContour, x = 0, y = 0){
        this.onCurve = onCurve;
        this.endContour = endContour;
        this.x = x;
        this.y = y;
    }
    copy() {
        return new $e20fdd09923e4c19$export$baf26146a414f24a(this.onCurve, this.endContour, this.x, this.y);
    }
}
// Represents a component in a composite glyph
class $e20fdd09923e4c19$var$Component {
    constructor(glyphID, dx, dy){
        this.glyphID = glyphID;
        this.dx = dx;
        this.dy = dy;
        this.pos = 0;
        this.scaleX = this.scaleY = 1;
        this.scale01 = this.scale10 = 0;
    }
}
class $e20fdd09923e4c19$export$2e2bcd8739ae039 extends $e1a34a692932ba79$export$2e2bcd8739ae039 {
    type = 'TTF';
    // Parses just the glyph header and returns the bounding box
    _getCBox(internal) {
        // We need to decode the glyph if variation processing is requested,
        // so it's easier just to recompute the path's cbox after decoding.
        if (this._font._variationProcessor && !internal) return this.path.cbox;
        let stream = this._font._getTableStream('glyf');
        stream.pos += this._font.loca.offsets[this.id];
        let glyph = $e20fdd09923e4c19$var$GlyfHeader.decode(stream);
        let cbox = new $fcb46e14b01ea01f$export$2e2bcd8739ae039(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);
        return Object.freeze(cbox);
    }
    // Parses a single glyph coordinate
    _parseGlyphCoord(stream, prev, short, same) {
        if (short) {
            var val = stream.readUInt8();
            if (!same) val = -val;
            val += prev;
        } else if (same) var val = prev;
        else var val = prev + stream.readInt16BE();
        return val;
    }
    // Decodes the glyph data into points for simple glyphs,
    // or components for composite glyphs
    _decode() {
        let glyfPos = this._font.loca.offsets[this.id];
        let nextPos = this._font.loca.offsets[this.id + 1];
        // Nothing to do if there is no data for this glyph
        if (glyfPos === nextPos) return null;
        let stream = this._font._getTableStream('glyf');
        stream.pos += glyfPos;
        let startPos = stream.pos;
        let glyph = $e20fdd09923e4c19$var$GlyfHeader.decode(stream);
        if (glyph.numberOfContours > 0) this._decodeSimple(glyph, stream);
        else if (glyph.numberOfContours < 0) this._decodeComposite(glyph, stream, startPos);
        return glyph;
    }
    _decodeSimple(glyph, stream) {
        // this is a simple glyph
        glyph.points = [];
        let endPtsOfContours = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, glyph.numberOfContours).decode(stream);
        glyph.instructions = new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16).decode(stream);
        let flags = [];
        let numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;
        while(flags.length < numCoords){
            var flag = stream.readUInt8();
            flags.push(flag);
            // check for repeat flag
            if (flag & $e20fdd09923e4c19$var$REPEAT) {
                let count = stream.readUInt8();
                for(let j = 0; j < count; j++)flags.push(flag);
            }
        }
        for(var i = 0; i < flags.length; i++){
            var flag = flags[i];
            let point = new $e20fdd09923e4c19$export$baf26146a414f24a(!!(flag & $e20fdd09923e4c19$var$ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);
            glyph.points.push(point);
        }
        let px = 0;
        for(var i = 0; i < flags.length; i++){
            var flag = flags[i];
            glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & $e20fdd09923e4c19$var$X_SHORT_VECTOR, flag & $e20fdd09923e4c19$var$SAME_X);
        }
        let py = 0;
        for(var i = 0; i < flags.length; i++){
            var flag = flags[i];
            glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & $e20fdd09923e4c19$var$Y_SHORT_VECTOR, flag & $e20fdd09923e4c19$var$SAME_Y);
        }
        if (this._font._variationProcessor) {
            let points = glyph.points.slice();
            points.push(...this._getPhantomPoints(glyph));
            this._font._variationProcessor.transformPoints(this.id, points);
            glyph.phantomPoints = points.slice(-4);
        }
        return;
    }
    _decodeComposite(glyph, stream, offset = 0) {
        // this is a composite glyph
        glyph.components = [];
        let haveInstructions = false;
        let flags = $e20fdd09923e4c19$var$MORE_COMPONENTS;
        while(flags & $e20fdd09923e4c19$var$MORE_COMPONENTS){
            flags = stream.readUInt16BE();
            let gPos = stream.pos - offset;
            let glyphID = stream.readUInt16BE();
            if (!haveInstructions) haveInstructions = (flags & $e20fdd09923e4c19$var$WE_HAVE_INSTRUCTIONS) !== 0;
            if (flags & $e20fdd09923e4c19$var$ARG_1_AND_2_ARE_WORDS) {
                var dx = stream.readInt16BE();
                var dy = stream.readInt16BE();
            } else {
                var dx = stream.readInt8();
                var dy = stream.readInt8();
            }
            var component = new $e20fdd09923e4c19$var$Component(glyphID, dx, dy);
            component.pos = gPos;
            if (flags & $e20fdd09923e4c19$var$WE_HAVE_A_SCALE) // fixed number with 14 bits of fraction
            component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;
            else if (flags & $e20fdd09923e4c19$var$WE_HAVE_AN_X_AND_Y_SCALE) {
                component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;
                component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;
            } else if (flags & $e20fdd09923e4c19$var$WE_HAVE_A_TWO_BY_TWO) {
                component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;
                component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;
                component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;
                component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;
            }
            glyph.components.push(component);
        }
        if (this._font._variationProcessor) {
            let points = [];
            for(let j = 0; j < glyph.components.length; j++){
                var component = glyph.components[j];
                points.push(new $e20fdd09923e4c19$export$baf26146a414f24a(true, true, component.dx, component.dy));
            }
            points.push(...this._getPhantomPoints(glyph));
            this._font._variationProcessor.transformPoints(this.id, points);
            glyph.phantomPoints = points.splice(-4, 4);
            for(let i = 0; i < points.length; i++){
                let point = points[i];
                glyph.components[i].dx = point.x;
                glyph.components[i].dy = point.y;
            }
        }
        return haveInstructions;
    }
    _getPhantomPoints(glyph) {
        let cbox = this._getCBox(true);
        if (this._metrics == null) this._metrics = $e1a34a692932ba79$export$2e2bcd8739ae039.prototype._getMetrics.call(this, cbox);
        let { advanceWidth: advanceWidth , advanceHeight: advanceHeight , leftBearing: leftBearing , topBearing: topBearing  } = this._metrics;
        return [
            new $e20fdd09923e4c19$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing, 0),
            new $e20fdd09923e4c19$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing + advanceWidth, 0),
            new $e20fdd09923e4c19$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing),
            new $e20fdd09923e4c19$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing + advanceHeight)
        ];
    }
    // Decodes font data, resolves composite glyphs, and returns an array of contours
    _getContours() {
        let glyph = this._decode();
        if (!glyph) return [];
        let points = [];
        if (glyph.numberOfContours < 0) // resolve composite glyphs
        for (let component of glyph.components){
            let contours = this._font.getGlyph(component.glyphID)._getContours();
            for(let i = 0; i < contours.length; i++){
                let contour = contours[i];
                for(let j = 0; j < contour.length; j++){
                    let point = contour[j];
                    let x = point.x * component.scaleX + point.y * component.scale01 + component.dx;
                    let y = point.y * component.scaleY + point.x * component.scale10 + component.dy;
                    points.push(new $e20fdd09923e4c19$export$baf26146a414f24a(point.onCurve, point.endContour, x, y));
                }
            }
        }
        else points = glyph.points || [];
        // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table
        if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {
            this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;
            this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;
            this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;
            this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;
        }
        let contours = [];
        let cur = [];
        for(let k = 0; k < points.length; k++){
            var point = points[k];
            cur.push(point);
            if (point.endContour) {
                contours.push(cur);
                cur = [];
            }
        }
        return contours;
    }
    _getMetrics() {
        if (this._metrics) return this._metrics;
        let cbox = this._getCBox(true);
        super._getMetrics(cbox);
        if (this._font._variationProcessor && !this._font.HVAR) // No HVAR table, decode the glyph. This triggers recomputation of metrics.
        this.path;
        return this._metrics;
    }
    // Converts contours to a Path object that can be rendered
    _getPath() {
        let contours = this._getContours();
        let path = new $af5e1fcddefe17a2$export$2e2bcd8739ae039;
        for(let i = 0; i < contours.length; i++){
            let contour = contours[i];
            let firstPt = contour[0];
            let lastPt = contour[contour.length - 1];
            let start = 0;
            if (firstPt.onCurve) {
                // The first point will be consumed by the moveTo command, so skip in the loop
                var curvePt = null;
                start = 1;
            } else {
                if (lastPt.onCurve) // Start at the last point if the first point is off curve and the last point is on curve
                firstPt = lastPt;
                else // Start at the middle if both the first and last points are off curve
                firstPt = new $e20fdd09923e4c19$export$baf26146a414f24a(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);
                var curvePt = firstPt;
            }
            path.moveTo(firstPt.x, firstPt.y);
            for(let j = start; j < contour.length; j++){
                let pt = contour[j];
                let prevPt = j === 0 ? firstPt : contour[j - 1];
                if (prevPt.onCurve && pt.onCurve) path.lineTo(pt.x, pt.y);
                else if (prevPt.onCurve && !pt.onCurve) var curvePt = pt;
                else if (!prevPt.onCurve && !pt.onCurve) {
                    let midX = (prevPt.x + pt.x) / 2;
                    let midY = (prevPt.y + pt.y) / 2;
                    path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);
                    var curvePt = pt;
                } else if (!prevPt.onCurve && pt.onCurve) {
                    path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);
                    var curvePt = null;
                } else throw new Error("Unknown TTF path state");
            }
            // Connect the first and last points
            if (curvePt) path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);
            path.closePath();
        }
        return path;
    }
}




class $efcf21464e1e0f88$export$2e2bcd8739ae039 extends $e1a34a692932ba79$export$2e2bcd8739ae039 {
    type = 'CFF';
    _getName() {
        if (this._font.CFF2) return super._getName();
        return this._font['CFF '].getGlyphName(this.id);
    }
    bias(s) {
        if (s.length < 1240) return 107;
        else if (s.length < 33900) return 1131;
        else return 32768;
    }
    _getPath() {
        let cff = this._font.CFF2 || this._font['CFF '];
        let { stream: stream  } = cff;
        let str = cff.topDict.CharStrings[this.id];
        let end = str.offset + str.length;
        stream.pos = str.offset;
        let path = new $af5e1fcddefe17a2$export$2e2bcd8739ae039;
        let stack = [];
        let trans = [];
        let width = null;
        let nStems = 0;
        let x1 = 0, y1 = 0;
        let usedGsubrs;
        let usedSubrs;
        let open = false;
        this._usedGsubrs = usedGsubrs = {};
        this._usedSubrs = usedSubrs = {};
        let gsubrs = cff.globalSubrIndex || [];
        let gsubrsBias = this.bias(gsubrs);
        let privateDict = cff.privateDictForGlyph(this.id) || {};
        let subrs = privateDict.Subrs || [];
        let subrsBias = this.bias(subrs);
        let vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;
        let vsindex = privateDict.vsindex;
        let variationProcessor = this._font._variationProcessor;
        function checkWidth() {
            if (width == null) width = stack.shift() + privateDict.nominalWidthX;
        }
        function parseStems() {
            if (stack.length % 2 !== 0) checkWidth();
            nStems += stack.length >> 1;
            return stack.length = 0;
        }
        function moveTo(x, y) {
            if (open) path.closePath();
            path.moveTo(x, y);
            open = true;
        }
        let parse = function() {
            while(stream.pos < end){
                let op = stream.readUInt8();
                if (op < 32) {
                    let index, subr, phase;
                    switch(op){
                        case 1:
                        case 3:
                        case 18:
                        case 23:
                            parseStems();
                            break;
                        case 4:
                            if (stack.length > 1) checkWidth();
                            y1 += stack.shift();
                            moveTo(x1, y1);
                            break;
                        case 5:
                            while(stack.length >= 2){
                                x1 += stack.shift();
                                y1 += stack.shift();
                                path.lineTo(x1, y1);
                            }
                            break;
                        case 6:
                        case 7:
                            phase = op === 6;
                            while(stack.length >= 1){
                                if (phase) x1 += stack.shift();
                                else y1 += stack.shift();
                                path.lineTo(x1, y1);
                                phase = !phase;
                            }
                            break;
                        case 8:
                            while(stack.length > 0){
                                var c1x = x1 + stack.shift();
                                var c1y = y1 + stack.shift();
                                var c2x = c1x + stack.shift();
                                var c2y = c1y + stack.shift();
                                x1 = c2x + stack.shift();
                                y1 = c2y + stack.shift();
                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);
                            }
                            break;
                        case 10:
                            index = stack.pop() + subrsBias;
                            subr = subrs[index];
                            if (subr) {
                                usedSubrs[index] = true;
                                var p = stream.pos;
                                var e = end;
                                stream.pos = subr.offset;
                                end = subr.offset + subr.length;
                                parse();
                                stream.pos = p;
                                end = e;
                            }
                            break;
                        case 11:
                            if (cff.version >= 2) break;
                            return;
                        case 14:
                            if (cff.version >= 2) break;
                            if (stack.length > 0) checkWidth();
                            if (open) {
                                path.closePath();
                                open = false;
                            }
                            break;
                        case 15:
                            if (cff.version < 2) throw new Error('vsindex operator not supported in CFF v1');
                            vsindex = stack.pop();
                            break;
                        case 16:
                            {
                                if (cff.version < 2) throw new Error('blend operator not supported in CFF v1');
                                if (!variationProcessor) throw new Error('blend operator in non-variation font');
                                let blendVector = variationProcessor.getBlendVector(vstore, vsindex);
                                let numBlends = stack.pop();
                                let numOperands = numBlends * blendVector.length;
                                let delta = stack.length - numOperands;
                                let base = delta - numBlends;
                                for(let i = 0; i < numBlends; i++){
                                    let sum = stack[base + i];
                                    for(let j = 0; j < blendVector.length; j++)sum += blendVector[j] * stack[delta++];
                                    stack[base + i] = sum;
                                }
                                while(numOperands--)stack.pop();
                                break;
                            }
                        case 19:
                        case 20:
                            parseStems();
                            stream.pos += nStems + 7 >> 3;
                            break;
                        case 21:
                            if (stack.length > 2) checkWidth();
                            x1 += stack.shift();
                            y1 += stack.shift();
                            moveTo(x1, y1);
                            break;
                        case 22:
                            if (stack.length > 1) checkWidth();
                            x1 += stack.shift();
                            moveTo(x1, y1);
                            break;
                        case 24:
                            while(stack.length >= 8){
                                var c1x = x1 + stack.shift();
                                var c1y = y1 + stack.shift();
                                var c2x = c1x + stack.shift();
                                var c2y = c1y + stack.shift();
                                x1 = c2x + stack.shift();
                                y1 = c2y + stack.shift();
                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);
                            }
                            x1 += stack.shift();
                            y1 += stack.shift();
                            path.lineTo(x1, y1);
                            break;
                        case 25:
                            while(stack.length >= 8){
                                x1 += stack.shift();
                                y1 += stack.shift();
                                path.lineTo(x1, y1);
                            }
                            var c1x = x1 + stack.shift();
                            var c1y = y1 + stack.shift();
                            var c2x = c1x + stack.shift();
                            var c2y = c1y + stack.shift();
                            x1 = c2x + stack.shift();
                            y1 = c2y + stack.shift();
                            path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);
                            break;
                        case 26:
                            if (stack.length % 2) x1 += stack.shift();
                            while(stack.length >= 4){
                                c1x = x1;
                                c1y = y1 + stack.shift();
                                c2x = c1x + stack.shift();
                                c2y = c1y + stack.shift();
                                x1 = c2x;
                                y1 = c2y + stack.shift();
                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);
                            }
                            break;
                        case 27:
                            if (stack.length % 2) y1 += stack.shift();
                            while(stack.length >= 4){
                                c1x = x1 + stack.shift();
                                c1y = y1;
                                c2x = c1x + stack.shift();
                                c2y = c1y + stack.shift();
                                x1 = c2x + stack.shift();
                                y1 = c2y;
                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);
                            }
                            break;
                        case 28:
                            stack.push(stream.readInt16BE());
                            break;
                        case 29:
                            index = stack.pop() + gsubrsBias;
                            subr = gsubrs[index];
                            if (subr) {
                                usedGsubrs[index] = true;
                                var p = stream.pos;
                                var e = end;
                                stream.pos = subr.offset;
                                end = subr.offset + subr.length;
                                parse();
                                stream.pos = p;
                                end = e;
                            }
                            break;
                        case 30:
                        case 31:
                            phase = op === 31;
                            while(stack.length >= 4){
                                if (phase) {
                                    c1x = x1 + stack.shift();
                                    c1y = y1;
                                    c2x = c1x + stack.shift();
                                    c2y = c1y + stack.shift();
                                    y1 = c2y + stack.shift();
                                    x1 = c2x + (stack.length === 1 ? stack.shift() : 0);
                                } else {
                                    c1x = x1;
                                    c1y = y1 + stack.shift();
                                    c2x = c1x + stack.shift();
                                    c2y = c1y + stack.shift();
                                    x1 = c2x + stack.shift();
                                    y1 = c2y + (stack.length === 1 ? stack.shift() : 0);
                                }
                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);
                                phase = !phase;
                            }
                            break;
                        case 12:
                            op = stream.readUInt8();
                            switch(op){
                                case 3:
                                    let a = stack.pop();
                                    let b = stack.pop();
                                    stack.push(a && b ? 1 : 0);
                                    break;
                                case 4:
                                    a = stack.pop();
                                    b = stack.pop();
                                    stack.push(a || b ? 1 : 0);
                                    break;
                                case 5:
                                    a = stack.pop();
                                    stack.push(a ? 0 : 1);
                                    break;
                                case 9:
                                    a = stack.pop();
                                    stack.push(Math.abs(a));
                                    break;
                                case 10:
                                    a = stack.pop();
                                    b = stack.pop();
                                    stack.push(a + b);
                                    break;
                                case 11:
                                    a = stack.pop();
                                    b = stack.pop();
                                    stack.push(a - b);
                                    break;
                                case 12:
                                    a = stack.pop();
                                    b = stack.pop();
                                    stack.push(a / b);
                                    break;
                                case 14:
                                    a = stack.pop();
                                    stack.push(-a);
                                    break;
                                case 15:
                                    a = stack.pop();
                                    b = stack.pop();
                                    stack.push(a === b ? 1 : 0);
                                    break;
                                case 18:
                                    stack.pop();
                                    break;
                                case 20:
                                    let val = stack.pop();
                                    let idx = stack.pop();
                                    trans[idx] = val;
                                    break;
                                case 21:
                                    idx = stack.pop();
                                    stack.push(trans[idx] || 0);
                                    break;
                                case 22:
                                    let s1 = stack.pop();
                                    let s2 = stack.pop();
                                    let v1 = stack.pop();
                                    let v2 = stack.pop();
                                    stack.push(v1 <= v2 ? s1 : s2);
                                    break;
                                case 23:
                                    stack.push(Math.random());
                                    break;
                                case 24:
                                    a = stack.pop();
                                    b = stack.pop();
                                    stack.push(a * b);
                                    break;
                                case 26:
                                    a = stack.pop();
                                    stack.push(Math.sqrt(a));
                                    break;
                                case 27:
                                    a = stack.pop();
                                    stack.push(a, a);
                                    break;
                                case 28:
                                    a = stack.pop();
                                    b = stack.pop();
                                    stack.push(b, a);
                                    break;
                                case 29:
                                    idx = stack.pop();
                                    if (idx < 0) idx = 0;
                                    else if (idx > stack.length - 1) idx = stack.length - 1;
                                    stack.push(stack[idx]);
                                    break;
                                case 30:
                                    let n = stack.pop();
                                    let j = stack.pop();
                                    if (j >= 0) while(j > 0){
                                        var t = stack[n - 1];
                                        for(let i = n - 2; i >= 0; i--)stack[i + 1] = stack[i];
                                        stack[0] = t;
                                        j--;
                                    }
                                    else while(j < 0){
                                        var t = stack[0];
                                        for(let i = 0; i <= n; i++)stack[i] = stack[i + 1];
                                        stack[n - 1] = t;
                                        j++;
                                    }
                                    break;
                                case 34:
                                    c1x = x1 + stack.shift();
                                    c1y = y1;
                                    c2x = c1x + stack.shift();
                                    c2y = c1y + stack.shift();
                                    let c3x = c2x + stack.shift();
                                    let c3y = c2y;
                                    let c4x = c3x + stack.shift();
                                    let c4y = c3y;
                                    let c5x = c4x + stack.shift();
                                    let c5y = c4y;
                                    let c6x = c5x + stack.shift();
                                    let c6y = c5y;
                                    x1 = c6x;
                                    y1 = c6y;
                                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);
                                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);
                                    break;
                                case 35:
                                    let pts = [];
                                    for(let i = 0; i <= 5; i++){
                                        x1 += stack.shift();
                                        y1 += stack.shift();
                                        pts.push(x1, y1);
                                    }
                                    path.bezierCurveTo(...pts.slice(0, 6));
                                    path.bezierCurveTo(...pts.slice(6));
                                    stack.shift(); // fd
                                    break;
                                case 36:
                                    c1x = x1 + stack.shift();
                                    c1y = y1 + stack.shift();
                                    c2x = c1x + stack.shift();
                                    c2y = c1y + stack.shift();
                                    c3x = c2x + stack.shift();
                                    c3y = c2y;
                                    c4x = c3x + stack.shift();
                                    c4y = c3y;
                                    c5x = c4x + stack.shift();
                                    c5y = c4y + stack.shift();
                                    c6x = c5x + stack.shift();
                                    c6y = c5y;
                                    x1 = c6x;
                                    y1 = c6y;
                                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);
                                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);
                                    break;
                                case 37:
                                    let startx = x1;
                                    let starty = y1;
                                    pts = [];
                                    for(let i1 = 0; i1 <= 4; i1++){
                                        x1 += stack.shift();
                                        y1 += stack.shift();
                                        pts.push(x1, y1);
                                    }
                                    if (Math.abs(x1 - startx) > Math.abs(y1 - starty)) {
                                        x1 += stack.shift();
                                        y1 = starty;
                                    } else {
                                        x1 = startx;
                                        y1 += stack.shift();
                                    }
                                    pts.push(x1, y1);
                                    path.bezierCurveTo(...pts.slice(0, 6));
                                    path.bezierCurveTo(...pts.slice(6));
                                    break;
                                default:
                                    throw new Error(\`Unknown op: 12 \${op}\`);
                            }
                            break;
                        default:
                            throw new Error(\`Unknown op: \${op}\`);
                    }
                } else if (op < 247) stack.push(op - 139);
                else if (op < 251) {
                    var b1 = stream.readUInt8();
                    stack.push((op - 247) * 256 + b1 + 108);
                } else if (op < 255) {
                    var b1 = stream.readUInt8();
                    stack.push(-(op - 251) * 256 - b1 - 108);
                } else stack.push(stream.readInt32BE() / 65536);
            }
        };
        parse();
        if (open) path.closePath();
        return path;
    }
}




let $df50792647a3d5cf$var$SBIXImage = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    originX: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    originY: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    type: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    data: new restructure__WEBPACK_IMPORTED_MODULE_0__.Buffer((t)=>t.parent.buflen - t._currentOffset
    )
});
class $df50792647a3d5cf$export$2e2bcd8739ae039 extends $e20fdd09923e4c19$export$2e2bcd8739ae039 {
    type = 'SBIX';
    /**
   * Returns an object representing a glyph image at the given point size.
   * The object has a data property with a Buffer containing the actual image data,
   * along with the image type, and origin.
   *
   * @param {number} size
   * @return {object}
   */ getImageForSize(size) {
        for(let i = 0; i < this._font.sbix.imageTables.length; i++){
            var table = this._font.sbix.imageTables[i];
            if (table.ppem >= size) break;
        }
        let offsets = table.imageOffsets;
        let start = offsets[this.id];
        let end = offsets[this.id + 1];
        if (start === end) return null;
        this._font.stream.pos = start;
        return $df50792647a3d5cf$var$SBIXImage.decode(this._font.stream, {
            buflen: end - start
        });
    }
    render(ctx, size) {
        let img = this.getImageForSize(size);
        if (img != null) {
            let scale = size / this._font.unitsPerEm;
            ctx.image(img.data, {
                height: size,
                x: img.originX,
                y: (this.bbox.minY - img.originY) * scale
            });
        }
        if (this._font.sbix.flags.renderOutlines) super.render(ctx, size);
    }
}




class $729b375ce67e8a00$var$COLRLayer {
    constructor(glyph, color){
        this.glyph = glyph;
        this.color = color;
    }
}
class $729b375ce67e8a00$export$2e2bcd8739ae039 extends $e1a34a692932ba79$export$2e2bcd8739ae039 {
    type = 'COLR';
    _getBBox() {
        let bbox = new $fcb46e14b01ea01f$export$2e2bcd8739ae039;
        for(let i = 0; i < this.layers.length; i++){
            let layer = this.layers[i];
            let b = layer.glyph.bbox;
            bbox.addPoint(b.minX, b.minY);
            bbox.addPoint(b.maxX, b.maxY);
        }
        return bbox;
    }
    /**
   * Returns an array of objects containing the glyph and color for
   * each layer in the composite color glyph.
   * @type {object[]}
   */ get layers() {
        let cpal = this._font.CPAL;
        let colr = this._font.COLR;
        let low = 0;
        let high = colr.baseGlyphRecord.length - 1;
        while(low <= high){
            let mid = low + high >> 1;
            var rec = colr.baseGlyphRecord[mid];
            if (this.id < rec.gid) high = mid - 1;
            else if (this.id > rec.gid) low = mid + 1;
            else {
                var baseLayer = rec;
                break;
            }
        }
        // if base glyph not found in COLR table,
        // default to normal glyph from glyf or CFF
        if (baseLayer == null) {
            var g = this._font._getBaseGlyph(this.id);
            var color = {
                red: 0,
                green: 0,
                blue: 0,
                alpha: 255
            };
            return [
                new $729b375ce67e8a00$var$COLRLayer(g, color)
            ];
        }
        // otherwise, return an array of all the layers
        let layers = [];
        for(let i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++){
            var rec = colr.layerRecords[i];
            var color = cpal.colorRecords[rec.paletteIndex];
            var g = this._font._getBaseGlyph(rec.gid);
            layers.push(new $729b375ce67e8a00$var$COLRLayer(g, color));
        }
        return layers;
    }
    render(ctx, size) {
        for (let { glyph: glyph , color: color  } of this.layers){
            ctx.fillColor([
                color.red,
                color.green,
                color.blue
            ], color.alpha / 255 * 100);
            glyph.render(ctx, size);
        }
        return;
    }
}


const $62b2d77b45b438f3$var$TUPLES_SHARE_POINT_NUMBERS = 0x8000;
const $62b2d77b45b438f3$var$TUPLE_COUNT_MASK = 0x0fff;
const $62b2d77b45b438f3$var$EMBEDDED_TUPLE_COORD = 0x8000;
const $62b2d77b45b438f3$var$INTERMEDIATE_TUPLE = 0x4000;
const $62b2d77b45b438f3$var$PRIVATE_POINT_NUMBERS = 0x2000;
const $62b2d77b45b438f3$var$TUPLE_INDEX_MASK = 0x0fff;
const $62b2d77b45b438f3$var$POINTS_ARE_WORDS = 0x80;
const $62b2d77b45b438f3$var$POINT_RUN_COUNT_MASK = 0x7f;
const $62b2d77b45b438f3$var$DELTAS_ARE_ZERO = 0x80;
const $62b2d77b45b438f3$var$DELTAS_ARE_WORDS = 0x40;
const $62b2d77b45b438f3$var$DELTA_RUN_COUNT_MASK = 0x3f;
class $62b2d77b45b438f3$export$2e2bcd8739ae039 {
    constructor(font, coords){
        this.font = font;
        this.normalizedCoords = this.normalizeCoords(coords);
        this.blendVectors = new Map;
    }
    normalizeCoords(coords) {
        // the default mapping is linear along each axis, in two segments:
        // from the minValue to defaultValue, and from defaultValue to maxValue.
        let normalized = [];
        for(var i = 0; i < this.font.fvar.axis.length; i++){
            let axis = this.font.fvar.axis[i];
            if (coords[i] < axis.defaultValue) normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));
            else normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));
        }
        // if there is an avar table, the normalized value is calculated
        // by interpolating between the two nearest mapped values.
        if (this.font.avar) for(var i = 0; i < this.font.avar.segment.length; i++){
            let segment = this.font.avar.segment[i];
            for(let j = 0; j < segment.correspondence.length; j++){
                let pair = segment.correspondence[j];
                if (j >= 1 && normalized[i] < pair.fromCoord) {
                    let prev = segment.correspondence[j - 1];
                    normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;
                    break;
                }
            }
        }
        return normalized;
    }
    transformPoints(gid, glyphPoints) {
        if (!this.font.fvar || !this.font.gvar) return;
        let { gvar: gvar  } = this.font;
        if (gid >= gvar.glyphCount) return;
        let offset = gvar.offsets[gid];
        if (offset === gvar.offsets[gid + 1]) return;
        // Read the gvar data for this glyph
        let { stream: stream  } = this.font;
        stream.pos = offset;
        if (stream.pos >= stream.length) return;
        let tupleCount = stream.readUInt16BE();
        let offsetToData = offset + stream.readUInt16BE();
        if (tupleCount & $62b2d77b45b438f3$var$TUPLES_SHARE_POINT_NUMBERS) {
            var here = stream.pos;
            stream.pos = offsetToData;
            var sharedPoints = this.decodePoints();
            offsetToData = stream.pos;
            stream.pos = here;
        }
        let origPoints = glyphPoints.map((pt)=>pt.copy()
        );
        tupleCount &= $62b2d77b45b438f3$var$TUPLE_COUNT_MASK;
        for(let i = 0; i < tupleCount; i++){
            let tupleDataSize = stream.readUInt16BE();
            let tupleIndex = stream.readUInt16BE();
            if (tupleIndex & $62b2d77b45b438f3$var$EMBEDDED_TUPLE_COORD) {
                var tupleCoords = [];
                for(let a = 0; a < gvar.axisCount; a++)tupleCoords.push(stream.readInt16BE() / 16384);
            } else {
                if ((tupleIndex & $62b2d77b45b438f3$var$TUPLE_INDEX_MASK) >= gvar.globalCoordCount) throw new Error('Invalid gvar table');
                var tupleCoords = gvar.globalCoords[tupleIndex & $62b2d77b45b438f3$var$TUPLE_INDEX_MASK];
            }
            if (tupleIndex & $62b2d77b45b438f3$var$INTERMEDIATE_TUPLE) {
                var startCoords = [];
                for(let a = 0; a < gvar.axisCount; a++)startCoords.push(stream.readInt16BE() / 16384);
                var endCoords = [];
                for(let a1 = 0; a1 < gvar.axisCount; a1++)endCoords.push(stream.readInt16BE() / 16384);
            }
            // Get the factor at which to apply this tuple
            let factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);
            if (factor === 0) {
                offsetToData += tupleDataSize;
                continue;
            }
            var here = stream.pos;
            stream.pos = offsetToData;
            if (tupleIndex & $62b2d77b45b438f3$var$PRIVATE_POINT_NUMBERS) var points = this.decodePoints();
            else var points = sharedPoints;
            // points.length = 0 means there are deltas for all points
            let nPoints = points.length === 0 ? glyphPoints.length : points.length;
            let xDeltas = this.decodeDeltas(nPoints);
            let yDeltas = this.decodeDeltas(nPoints);
            if (points.length === 0) for(let i = 0; i < glyphPoints.length; i++){
                var point = glyphPoints[i];
                point.x += Math.round(xDeltas[i] * factor);
                point.y += Math.round(yDeltas[i] * factor);
            }
            else {
                let outPoints = origPoints.map((pt)=>pt.copy()
                );
                let hasDelta = glyphPoints.map(()=>false
                );
                for(let i = 0; i < points.length; i++){
                    let idx = points[i];
                    if (idx < glyphPoints.length) {
                        let point = outPoints[idx];
                        hasDelta[idx] = true;
                        point.x += Math.round(xDeltas[i] * factor);
                        point.y += Math.round(yDeltas[i] * factor);
                    }
                }
                this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);
                for(let i1 = 0; i1 < glyphPoints.length; i1++){
                    let deltaX = outPoints[i1].x - origPoints[i1].x;
                    let deltaY = outPoints[i1].y - origPoints[i1].y;
                    glyphPoints[i1].x += deltaX;
                    glyphPoints[i1].y += deltaY;
                }
            }
            offsetToData += tupleDataSize;
            stream.pos = here;
        }
    }
    decodePoints() {
        let stream = this.font.stream;
        let count = stream.readUInt8();
        if (count & $62b2d77b45b438f3$var$POINTS_ARE_WORDS) count = (count & $62b2d77b45b438f3$var$POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();
        let points = new Uint16Array(count);
        let i = 0;
        let point = 0;
        while(i < count){
            let run = stream.readUInt8();
            let runCount = (run & $62b2d77b45b438f3$var$POINT_RUN_COUNT_MASK) + 1;
            let fn = run & $62b2d77b45b438f3$var$POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;
            for(let j = 0; j < runCount && i < count; j++){
                point += fn.call(stream);
                points[i++] = point;
            }
        }
        return points;
    }
    decodeDeltas(count) {
        let stream = this.font.stream;
        let i = 0;
        let deltas = new Int16Array(count);
        while(i < count){
            let run = stream.readUInt8();
            let runCount = (run & $62b2d77b45b438f3$var$DELTA_RUN_COUNT_MASK) + 1;
            if (run & $62b2d77b45b438f3$var$DELTAS_ARE_ZERO) i += runCount;
            else {
                let fn = run & $62b2d77b45b438f3$var$DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;
                for(let j = 0; j < runCount && i < count; j++)deltas[i++] = fn.call(stream);
            }
        }
        return deltas;
    }
    tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {
        let normalized = this.normalizedCoords;
        let { gvar: gvar  } = this.font;
        let factor = 1;
        for(let i = 0; i < gvar.axisCount; i++){
            if (tupleCoords[i] === 0) continue;
            if (normalized[i] === 0) return 0;
            if ((tupleIndex & $62b2d77b45b438f3$var$INTERMEDIATE_TUPLE) === 0) {
                if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) return 0;
                factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);
            } else {
                if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) return 0;
                else if (normalized[i] < tupleCoords[i]) factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);
                else factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);
            }
        }
        return factor;
    }
    // Interpolates points without delta values.
    // Needed for the \xD8 and Q glyphs in Skia.
    // Algorithm from Freetype.
    interpolateMissingDeltas(points, inPoints, hasDelta) {
        if (points.length === 0) return;
        let point = 0;
        while(point < points.length){
            let firstPoint = point;
            // find the end point of the contour
            let endPoint = point;
            let pt = points[endPoint];
            while(!pt.endContour)pt = points[++endPoint];
            // find the first point that has a delta
            while(point <= endPoint && !hasDelta[point])point++;
            if (point > endPoint) continue;
            let firstDelta = point;
            let curDelta = point;
            point++;
            while(point <= endPoint){
                // find the next point with a delta, and interpolate intermediate points
                if (hasDelta[point]) {
                    this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);
                    curDelta = point;
                }
                point++;
            }
            // shift contour if we only have a single delta
            if (curDelta === firstDelta) this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);
            else {
                // otherwise, handle the remaining points at the end and beginning of the contour
                this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);
                if (firstDelta > 0) this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);
            }
            point = endPoint + 1;
        }
    }
    deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {
        if (p1 > p2) return;
        let iterable = [
            'x',
            'y'
        ];
        for(let i = 0; i < iterable.length; i++){
            let k = iterable[i];
            if (inPoints[ref1][k] > inPoints[ref2][k]) {
                var p = ref1;
                ref1 = ref2;
                ref2 = p;
            }
            let in1 = inPoints[ref1][k];
            let in2 = inPoints[ref2][k];
            let out1 = outPoints[ref1][k];
            let out2 = outPoints[ref2][k];
            // If the reference points have the same coordinate but different
            // delta, inferred delta is zero.  Otherwise interpolate.
            if (in1 !== in2 || out1 === out2) {
                let scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);
                for(let p = p1; p <= p2; p++){
                    let out = inPoints[p][k];
                    if (out <= in1) out += out1 - in1;
                    else if (out >= in2) out += out2 - in2;
                    else out = out1 + (out - in1) * scale;
                    outPoints[p][k] = out;
                }
            }
        }
    }
    deltaShift(p1, p2, ref, inPoints, outPoints) {
        let deltaX = outPoints[ref].x - inPoints[ref].x;
        let deltaY = outPoints[ref].y - inPoints[ref].y;
        if (deltaX === 0 && deltaY === 0) return;
        for(let p = p1; p <= p2; p++)if (p !== ref) {
            outPoints[p].x += deltaX;
            outPoints[p].y += deltaY;
        }
    }
    getAdvanceAdjustment(gid, table) {
        let outerIndex, innerIndex;
        if (table.advanceWidthMapping) {
            let idx = gid;
            if (idx >= table.advanceWidthMapping.mapCount) idx = table.advanceWidthMapping.mapCount - 1;
            let entryFormat = table.advanceWidthMapping.entryFormat;
            ({ outerIndex: outerIndex , innerIndex: innerIndex  } = table.advanceWidthMapping.mapData[idx]);
        } else {
            outerIndex = 0;
            innerIndex = gid;
        }
        return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);
    }
    // See pseudo code from \`Font Variations Overview'
    // in the OpenType specification.
    getDelta(itemStore, outerIndex, innerIndex) {
        if (outerIndex >= itemStore.itemVariationData.length) return 0;
        let varData = itemStore.itemVariationData[outerIndex];
        if (innerIndex >= varData.deltaSets.length) return 0;
        let deltaSet = varData.deltaSets[innerIndex];
        let blendVector = this.getBlendVector(itemStore, outerIndex);
        let netAdjustment = 0;
        for(let master = 0; master < varData.regionIndexCount; master++)netAdjustment += deltaSet.deltas[master] * blendVector[master];
        return netAdjustment;
    }
    getBlendVector(itemStore, outerIndex) {
        let varData = itemStore.itemVariationData[outerIndex];
        if (this.blendVectors.has(varData)) return this.blendVectors.get(varData);
        let normalizedCoords = this.normalizedCoords;
        let blendVector = [];
        // outer loop steps through master designs to be blended
        for(let master = 0; master < varData.regionIndexCount; master++){
            let scalar = 1;
            let regionIndex = varData.regionIndexes[master];
            let axes = itemStore.variationRegionList.variationRegions[regionIndex];
            // inner loop steps through axes in this region
            for(let j = 0; j < axes.length; j++){
                let axis = axes[j];
                let axisScalar;
                // compute the scalar contribution of this axis
                // ignore invalid ranges
                if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) axisScalar = 1;
                else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) axisScalar = 1;
                else if (axis.peakCoord === 0) axisScalar = 1;
                else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) axisScalar = 0;
                else {
                    if (normalizedCoords[j] === axis.peakCoord) axisScalar = 1;
                    else if (normalizedCoords[j] < axis.peakCoord) axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);
                    else axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);
                }
                // take product of all the axis scalars
                scalar *= axisScalar;
            }
            blendVector[master] = scalar;
        }
        this.blendVectors.set(varData, blendVector);
        return blendVector;
    }
}




const $7768c4d2aa7d03a3$var$resolved = Promise.resolve();
class $7768c4d2aa7d03a3$export$2e2bcd8739ae039 {
    constructor(font){
        this.font = font;
        this.glyphs = [];
        this.mapping = {};
        // always include the missing glyph
        this.includeGlyph(0);
    }
    includeGlyph(glyph) {
        if (typeof glyph === 'object') glyph = glyph.id;
        if (this.mapping[glyph] == null) {
            this.glyphs.push(glyph);
            this.mapping[glyph] = this.glyphs.length - 1;
        }
        return this.mapping[glyph];
    }
    encodeStream() {
        let s = new restructure__WEBPACK_IMPORTED_MODULE_0__.EncodeStream();
        $7768c4d2aa7d03a3$var$resolved.then(()=>{
            this.encode(s);
            return s.end();
        });
        return s;
    }
}





// Flags for simple glyphs
const $681deff774310865$var$ON_CURVE = 1;
const $681deff774310865$var$X_SHORT_VECTOR = 2;
const $681deff774310865$var$Y_SHORT_VECTOR = 4;
const $681deff774310865$var$REPEAT = 8;
const $681deff774310865$var$SAME_X = 16;
const $681deff774310865$var$SAME_Y = 32;
class $681deff774310865$var$Point {
    static size(val) {
        return val >= 0 && val <= 255 ? 1 : 2;
    }
    static encode(stream, value) {
        if (value >= 0 && value <= 255) stream.writeUInt8(value);
        else stream.writeInt16BE(value);
    }
}
let $681deff774310865$var$Glyf = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    numberOfContours: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    xMin: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    yMin: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    xMax: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    yMax: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    endPtsOfContours: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'numberOfContours'),
    instructions: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
    flags: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, 0),
    xPoints: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($681deff774310865$var$Point, 0),
    yPoints: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($681deff774310865$var$Point, 0)
});
class $681deff774310865$export$2e2bcd8739ae039 {
    encodeSimple(path, instructions = []) {
        let endPtsOfContours = [];
        let xPoints = [];
        let yPoints = [];
        let flags = [];
        let same = 0;
        let lastX = 0, lastY = 0, lastFlag = 0;
        let pointCount = 0;
        for(let i = 0; i < path.commands.length; i++){
            let c = path.commands[i];
            for(let j = 0; j < c.args.length; j += 2){
                let x = c.args[j];
                let y = c.args[j + 1];
                let flag = 0;
                // If the ending point of a quadratic curve is the midpoint
                // between the control point and the control point of the next
                // quadratic curve, we can omit the ending point.
                if (c.command === 'quadraticCurveTo' && j === 2) {
                    let next = path.commands[i + 1];
                    if (next && next.command === 'quadraticCurveTo') {
                        let midX = (lastX + next.args[0]) / 2;
                        let midY = (lastY + next.args[1]) / 2;
                        if (x === midX && y === midY) continue;
                    }
                }
                // All points except control points are on curve.
                if (!(c.command === 'quadraticCurveTo' && j === 0)) flag |= $681deff774310865$var$ON_CURVE;
                flag = this._encodePoint(x, lastX, xPoints, flag, $681deff774310865$var$X_SHORT_VECTOR, $681deff774310865$var$SAME_X);
                flag = this._encodePoint(y, lastY, yPoints, flag, $681deff774310865$var$Y_SHORT_VECTOR, $681deff774310865$var$SAME_Y);
                if (flag === lastFlag && same < 255) {
                    flags[flags.length - 1] |= $681deff774310865$var$REPEAT;
                    same++;
                } else {
                    if (same > 0) {
                        flags.push(same);
                        same = 0;
                    }
                    flags.push(flag);
                    lastFlag = flag;
                }
                lastX = x;
                lastY = y;
                pointCount++;
            }
            if (c.command === 'closePath') endPtsOfContours.push(pointCount - 1);
        }
        // Close the path if the last command didn't already
        if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') endPtsOfContours.push(pointCount - 1);
        let bbox = path.bbox;
        let glyf = {
            numberOfContours: endPtsOfContours.length,
            xMin: bbox.minX,
            yMin: bbox.minY,
            xMax: bbox.maxX,
            yMax: bbox.maxY,
            endPtsOfContours: endPtsOfContours,
            instructions: instructions,
            flags: flags,
            xPoints: xPoints,
            yPoints: yPoints
        };
        let size = $681deff774310865$var$Glyf.size(glyf);
        let tail = 4 - size % 4;
        let stream = new restructure__WEBPACK_IMPORTED_MODULE_0__.EncodeStream(size + tail);
        $681deff774310865$var$Glyf.encode(stream, glyf);
        // Align to 4-byte length
        if (tail !== 0) stream.fill(0, tail);
        return stream.buffer;
    }
    _encodePoint(value, last, points, flag, shortFlag, sameFlag) {
        let diff = value - last;
        if (value === last) flag |= sameFlag;
        else {
            if (-255 <= diff && diff <= 255) {
                flag |= shortFlag;
                if (diff < 0) diff = -diff;
                else flag |= sameFlag;
            }
            points.push(diff);
        }
        return flag;
    }
}



var $06433914835b8dd7$require$Buffer = buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer;
class $06433914835b8dd7$export$2e2bcd8739ae039 extends $7768c4d2aa7d03a3$export$2e2bcd8739ae039 {
    constructor(font){
        super(font);
        this.glyphEncoder = new $681deff774310865$export$2e2bcd8739ae039;
    }
    _addGlyph(gid) {
        let glyph = this.font.getGlyph(gid);
        let glyf = glyph._decode();
        // get the offset to the glyph from the loca table
        let curOffset = this.font.loca.offsets[gid];
        let nextOffset = this.font.loca.offsets[gid + 1];
        let stream = this.font._getTableStream('glyf');
        stream.pos += curOffset;
        let buffer = stream.readBuffer(nextOffset - curOffset);
        // if it is a compound glyph, include its components
        if (glyf && glyf.numberOfContours < 0) {
            buffer = $06433914835b8dd7$require$Buffer.from(buffer);
            for (let component of glyf.components){
                gid = this.includeGlyph(component.glyphID);
                buffer.writeUInt16BE(gid, component.pos);
            }
        } else if (glyf && this.font._variationProcessor) // If this is a TrueType variation glyph, re-encode the path
        buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);
        this.glyf.push(buffer);
        this.loca.offsets.push(this.offset);
        this.hmtx.metrics.push({
            advance: glyph.advanceWidth,
            bearing: glyph._getMetrics().leftBearing
        });
        this.offset += buffer.length;
        return this.glyf.length - 1;
    }
    encode(stream) {
        // tables required by PDF spec:
        //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm
        //
        // additional tables required for standalone fonts:
        //   name, cmap, OS/2, post
        this.glyf = [];
        this.offset = 0;
        this.loca = {
            offsets: [],
            version: this.font.loca.version
        };
        this.hmtx = {
            metrics: [],
            bearings: []
        };
        // include all the glyphs
        // not using a for loop because we need to support adding more
        // glyphs to the array as we go, and CoffeeScript caches the length.
        let i = 0;
        while(i < this.glyphs.length)this._addGlyph(this.glyphs[i++]);
        let maxp = clone__WEBPACK_IMPORTED_MODULE_9__(this.font.maxp);
        maxp.numGlyphs = this.glyf.length;
        this.loca.offsets.push(this.offset);
        let head = clone__WEBPACK_IMPORTED_MODULE_9__(this.font.head);
        head.indexToLocFormat = this.loca.version;
        let hhea = clone__WEBPACK_IMPORTED_MODULE_9__(this.font.hhea);
        hhea.numberOfMetrics = this.hmtx.metrics.length;
        // map = []
        // for index in [0...256]
        //     if index < @numGlyphs
        //         map[index] = index
        //     else
        //         map[index] = 0
        //
        // cmapTable =
        //     version: 0
        //     length: 262
        //     language: 0
        //     codeMap: map
        //
        // cmap =
        //     version: 0
        //     numSubtables: 1
        //     tables: [
        //         platformID: 1
        //         encodingID: 0
        //         table: cmapTable
        //     ]
        // TODO: subset prep, cvt, fpgm?
        $d5e01a2298150c9a$export$2e2bcd8739ae039.encode(stream, {
            tables: {
                head: head,
                hhea: hhea,
                loca: this.loca,
                maxp: maxp,
                'cvt ': this.font['cvt '],
                prep: this.font.prep,
                glyf: this.glyf,
                hmtx: this.hmtx,
                fpgm: this.font.fpgm
            }
        });
    }
}







var $2d910ac31fc0baf3$require$Buffer = buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer;
class $2d910ac31fc0baf3$export$2e2bcd8739ae039 extends $7768c4d2aa7d03a3$export$2e2bcd8739ae039 {
    constructor(font){
        super(font);
        this.cff = this.font['CFF '];
        if (!this.cff) throw new Error('Not a CFF Font');
    }
    subsetCharstrings() {
        this.charstrings = [];
        let gsubrs = {};
        for (let gid of this.glyphs){
            this.charstrings.push(this.cff.getCharString(gid));
            let glyph = this.font.getGlyph(gid);
            let path = glyph.path; // this causes the glyph to be parsed
            for(let subr in glyph._usedGsubrs)gsubrs[subr] = true;
        }
        this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);
    }
    subsetSubrs(subrs, used) {
        let res = [];
        for(let i = 0; i < subrs.length; i++){
            let subr = subrs[i];
            if (used[i]) {
                this.cff.stream.pos = subr.offset;
                res.push(this.cff.stream.readBuffer(subr.length));
            } else res.push($2d910ac31fc0baf3$require$Buffer.from([
                11
            ])); // return
        }
        return res;
    }
    subsetFontdict(topDict) {
        topDict.FDArray = [];
        topDict.FDSelect = {
            version: 0,
            fds: []
        };
        let used_fds = {};
        let used_subrs = [];
        let fd_select = {};
        for (let gid of this.glyphs){
            let fd = this.cff.fdForGlyph(gid);
            if (fd == null) continue;
            if (!used_fds[fd]) {
                topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));
                used_subrs.push({});
                fd_select[fd] = topDict.FDArray.length - 1;
            }
            used_fds[fd] = true;
            topDict.FDSelect.fds.push(fd_select[fd]);
            let glyph = this.font.getGlyph(gid);
            let path = glyph.path; // this causes the glyph to be parsed
            for(let subr in glyph._usedSubrs)used_subrs[fd_select[fd]][subr] = true;
        }
        for(let i = 0; i < topDict.FDArray.length; i++){
            let dict = topDict.FDArray[i];
            delete dict.FontName;
            if (dict.Private && dict.Private.Subrs) {
                dict.Private = Object.assign({}, dict.Private);
                dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);
            }
        }
        return;
    }
    createCIDFontdict(topDict) {
        let used_subrs = {};
        for (let gid of this.glyphs){
            let glyph = this.font.getGlyph(gid);
            let path = glyph.path; // this causes the glyph to be parsed
            for(let subr in glyph._usedSubrs)used_subrs[subr] = true;
        }
        let privateDict = Object.assign({}, this.cff.topDict.Private);
        if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);
        topDict.FDArray = [
            {
                Private: privateDict
            }
        ];
        return topDict.FDSelect = {
            version: 3,
            nRanges: 1,
            ranges: [
                {
                    first: 0,
                    fd: 0
                }
            ],
            sentinel: this.charstrings.length
        };
    }
    addString(string) {
        if (!string) return null;
        if (!this.strings) this.strings = [];
        this.strings.push(string);
        return $276d3ff37a4362c9$export$2e2bcd8739ae039.length + this.strings.length - 1;
    }
    encode(stream) {
        this.subsetCharstrings();
        let charset = {
            version: this.charstrings.length > 255 ? 2 : 1,
            ranges: [
                {
                    first: 1,
                    nLeft: this.charstrings.length - 2
                }
            ]
        };
        let topDict = Object.assign({}, this.cff.topDict);
        topDict.Private = null;
        topDict.charset = charset;
        topDict.Encoding = null;
        topDict.CharStrings = this.charstrings;
        for (let key of [
            'version',
            'Notice',
            'Copyright',
            'FullName',
            'FamilyName',
            'Weight',
            'PostScript',
            'BaseFontName',
            'FontName'
        ])topDict[key] = this.addString(this.cff.string(topDict[key]));
        topDict.ROS = [
            this.addString('Adobe'),
            this.addString('Identity'),
            0
        ];
        topDict.CIDCount = this.charstrings.length;
        if (this.cff.isCIDFont) this.subsetFontdict(topDict);
        else this.createCIDFontdict(topDict);
        let top = {
            version: 1,
            hdrSize: this.cff.hdrSize,
            offSize: 4,
            header: this.cff.header,
            nameIndex: [
                this.cff.postscriptName
            ],
            topDictIndex: [
                topDict
            ],
            stringIndex: this.strings,
            globalSubrIndex: this.gsubrs
        };
        $3e41cd50e8921098$export$2e2bcd8739ae039.encode(stream, top);
    }
}



var _class;
let $7de97f725b51e05a$export$2e2bcd8739ae039 = (_class = class $7de97f725b51e05a$export$2e2bcd8739ae039 {
    type = 'TTF';
    static probe(buffer) {
        let format = buffer.toString('ascii', 0, 4);
        return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);
    }
    constructor(stream, variationCoords = null){
        this.defaultLanguage = null;
        this.stream = stream;
        this.variationCoords = variationCoords;
        this._directoryPos = this.stream.pos;
        this._tables = {};
        this._glyphs = {};
        this._decodeDirectory();
        // define properties for each table to lazily parse
        for(let tag in this.directory.tables){
            let table = this.directory.tables[tag];
            if ($60d88718e7e1fa97$export$2e2bcd8739ae039[tag] && table.length > 0) Object.defineProperty(this, tag, {
                get: this._getTable.bind(this, table)
            });
        }
    }
    setDefaultLanguage(lang = null) {
        this.defaultLanguage = lang;
    }
    _getTable(table) {
        if (!(table.tag in this._tables)) try {
            this._tables[table.tag] = this._decodeTable(table);
        } catch (e) {
            if ($8857867ee3ddfad5$export$bd5c5d8b8dcafd78) {
                console.error(\`Error decoding table \${table.tag}\`);
                console.error(e.stack);
            }
        }
        return this._tables[table.tag];
    }
    _getTableStream(tag) {
        let table = this.directory.tables[tag];
        if (table) {
            this.stream.pos = table.offset;
            return this.stream;
        }
        return null;
    }
    _decodeDirectory() {
        return this.directory = $d5e01a2298150c9a$export$2e2bcd8739ae039.decode(this.stream, {
            _startOffset: 0
        });
    }
    _decodeTable(table) {
        let pos = this.stream.pos;
        let stream = this._getTableStream(table.tag);
        let result = $60d88718e7e1fa97$export$2e2bcd8739ae039[table.tag].decode(stream, this, table.length);
        this.stream.pos = pos;
        return result;
    }
    /**
   * Gets a string from the font's \`name\` table
   * \`lang\` is a BCP-47 language code.
   * @return {string}
   */ getName(key, lang = this.defaultLanguage || $8857867ee3ddfad5$export$42940898df819940) {
        let record = this.name && this.name.records[key];
        if (record) // Attempt to retrieve the entry, depending on which translation is available:
        return record[lang] || record[this.defaultLanguage] || record[$8857867ee3ddfad5$export$42940898df819940] || record['en'] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine
         || null;
        return null;
    }
    /**
   * The unique PostScript name for this font, e.g. "Helvetica-Bold"
   * @type {string}
   */ get postscriptName() {
        return this.getName('postscriptName');
    }
    /**
   * The font's full name, e.g. "Helvetica Bold"
   * @type {string}
   */ get fullName() {
        return this.getName('fullName');
    }
    /**
   * The font's family name, e.g. "Helvetica"
   * @type {string}
   */ get familyName() {
        return this.getName('fontFamily');
    }
    /**
   * The font's sub-family, e.g. "Bold".
   * @type {string}
   */ get subfamilyName() {
        return this.getName('fontSubfamily');
    }
    /**
   * The font's copyright information
   * @type {string}
   */ get copyright() {
        return this.getName('copyright');
    }
    /**
   * The font's version number
   * @type {string}
   */ get version() {
        return this.getName('version');
    }
    /**
   * The font\u2019s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))
   * @type {number}
   */ get ascent() {
        return this.hhea.ascent;
    }
    /**
   * The font\u2019s [descender](https://en.wikipedia.org/wiki/Descender)
   * @type {number}
   */ get descent() {
        return this.hhea.descent;
    }
    /**
   * The amount of space that should be included between lines
   * @type {number}
   */ get lineGap() {
        return this.hhea.lineGap;
    }
    /**
   * The offset from the normal underline position that should be used
   * @type {number}
   */ get underlinePosition() {
        return this.post.underlinePosition;
    }
    /**
   * The weight of the underline that should be used
   * @type {number}
   */ get underlineThickness() {
        return this.post.underlineThickness;
    }
    /**
   * If this is an italic font, the angle the cursor should be drawn at to match the font design
   * @type {number}
   */ get italicAngle() {
        return this.post.italicAngle;
    }
    /**
   * The height of capital letters above the baseline.
   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.
   * @type {number}
   */ get capHeight() {
        let os2 = this['OS/2'];
        return os2 ? os2.capHeight : this.ascent;
    }
    /**
   * The height of lower case letters in the font.
   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.
   * @type {number}
   */ get xHeight() {
        let os2 = this['OS/2'];
        return os2 ? os2.xHeight : 0;
    }
    /**
   * The number of glyphs in the font.
   * @type {number}
   */ get numGlyphs() {
        return this.maxp.numGlyphs;
    }
    /**
   * The size of the font\u2019s internal coordinate grid
   * @type {number}
   */ get unitsPerEm() {
        return this.head.unitsPerEm;
    }
    /**
   * The font\u2019s bounding box, i.e. the box that encloses all glyphs in the font.
   * @type {BBox}
   */ get bbox() {
        return Object.freeze(new $fcb46e14b01ea01f$export$2e2bcd8739ae039(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));
    }
    get _cmapProcessor() {
        return new $5d24cfe1a4cd83bb$export$2e2bcd8739ae039(this.cmap);
    }
    /**
   * An array of all of the unicode code points supported by the font.
   * @type {number[]}
   */ get characterSet() {
        return this._cmapProcessor.getCharacterSet();
    }
    /**
   * Returns whether there is glyph in the font for the given unicode code point.
   *
   * @param {number} codePoint
   * @return {boolean}
   */ hasGlyphForCodePoint(codePoint) {
        return !!this._cmapProcessor.lookup(codePoint);
    }
    /**
   * Maps a single unicode code point to a Glyph object.
   * Does not perform any advanced substitutions (there is no context to do so).
   *
   * @param {number} codePoint
   * @return {Glyph}
   */ glyphForCodePoint(codePoint) {
        return this.getGlyph(this._cmapProcessor.lookup(codePoint), [
            codePoint
        ]);
    }
    /**
   * Returns an array of Glyph objects for the given string.
   * This is only a one-to-one mapping from characters to glyphs.
   * For most uses, you should use font.layout (described below), which
   * provides a much more advanced mapping supporting AAT and OpenType shaping.
   *
   * @param {string} string
   * @return {Glyph[]}
   */ glyphsForString(string) {
        let glyphs = [];
        let len = string.length;
        let idx = 0;
        let last = -1;
        let state = -1;
        while(idx <= len){
            let code = 0;
            let nextState = 0;
            if (idx < len) {
                // Decode the next codepoint from UTF 16
                code = string.charCodeAt(idx++);
                if (0xd800 <= code && code <= 0xdbff && idx < len) {
                    let next = string.charCodeAt(idx);
                    if (0xdc00 <= next && next <= 0xdfff) {
                        idx++;
                        code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;
                    }
                }
                // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.
                nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;
            } else idx++;
            if (state === 0 && nextState === 1) // Variation selector following normal codepoint.
            glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [
                last,
                code
            ]));
            else if (state === 0 && nextState === 0) // Normal codepoint following normal codepoint.
            glyphs.push(this.glyphForCodePoint(last));
            last = code;
            state = nextState;
        }
        return glyphs;
    }
    get _layoutEngine() {
        return new $2df783177c3b5db5$export$2e2bcd8739ae039(this);
    }
    /**
   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.
   *
   * @param {string} string
   * @param {string[]} [userFeatures]
   * @param {string} [script]
   * @param {string} [language]
   * @param {string} [direction]
   * @return {GlyphRun}
   */ layout(string, userFeatures, script, language, direction) {
        return this._layoutEngine.layout(string, userFeatures, script, language, direction);
    }
    /**
   * Returns an array of strings that map to the given glyph id.
   * @param {number} gid - glyph id
   */ stringsForGlyph(gid) {
        return this._layoutEngine.stringsForGlyph(gid);
    }
    /**
   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)
   * (or mapped AAT tags) supported by the font.
   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.
   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.
   *
   * @type {string[]}
   */ get availableFeatures() {
        return this._layoutEngine.getAvailableFeatures();
    }
    getAvailableFeatures(script, language) {
        return this._layoutEngine.getAvailableFeatures(script, language);
    }
    _getBaseGlyph(glyph, characters = []) {
        if (!this._glyphs[glyph]) {
            if (this.directory.tables.glyf) this._glyphs[glyph] = new $e20fdd09923e4c19$export$2e2bcd8739ae039(glyph, characters, this);
            else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) this._glyphs[glyph] = new $efcf21464e1e0f88$export$2e2bcd8739ae039(glyph, characters, this);
        }
        return this._glyphs[glyph] || null;
    }
    /**
   * Returns a glyph object for the given glyph id.
   * You can pass the array of code points this glyph represents for
   * your use later, and it will be stored in the glyph object.
   *
   * @param {number} glyph
   * @param {number[]} characters
   * @return {Glyph}
   */ getGlyph(glyph, characters = []) {
        if (!this._glyphs[glyph]) {
            if (this.directory.tables.sbix) this._glyphs[glyph] = new $df50792647a3d5cf$export$2e2bcd8739ae039(glyph, characters, this);
            else if (this.directory.tables.COLR && this.directory.tables.CPAL) this._glyphs[glyph] = new $729b375ce67e8a00$export$2e2bcd8739ae039(glyph, characters, this);
            else this._getBaseGlyph(glyph, characters);
        }
        return this._glyphs[glyph] || null;
    }
    /**
   * Returns a Subset for this font.
   * @return {Subset}
   */ createSubset() {
        if (this.directory.tables['CFF ']) return new $2d910ac31fc0baf3$export$2e2bcd8739ae039(this);
        return new $06433914835b8dd7$export$2e2bcd8739ae039(this);
    }
    /**
   * Returns an object describing the available variation axes
   * that this font supports. Keys are setting tags, and values
   * contain the axis name, range, and default value.
   *
   * @type {object}
   */ get variationAxes() {
        let res = {};
        if (!this.fvar) return res;
        for (let axis of this.fvar.axis)res[axis.axisTag.trim()] = {
            name: axis.name.en,
            min: axis.minValue,
            default: axis.defaultValue,
            max: axis.maxValue
        };
        return res;
    }
    /**
   * Returns an object describing the named variation instances
   * that the font designer has specified. Keys are variation names
   * and values are the variation settings for this instance.
   *
   * @type {object}
   */ get namedVariations() {
        let res = {};
        if (!this.fvar) return res;
        for (let instance of this.fvar.instance){
            let settings = {};
            for(let i = 0; i < this.fvar.axis.length; i++){
                let axis = this.fvar.axis[i];
                settings[axis.axisTag.trim()] = instance.coord[i];
            }
            res[instance.name.en] = settings;
        }
        return res;
    }
    /**
   * Returns a new font with the given variation settings applied.
   * Settings can either be an instance name, or an object containing
   * variation tags as specified by the \`variationAxes\` property.
   *
   * @param {object} settings
   * @return {TTFFont}
   */ getVariation(settings) {
        if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');
        if (typeof settings === 'string') settings = this.namedVariations[settings];
        if (typeof settings !== 'object') throw new Error('Variation settings must be either a variation name or settings object.');
        // normalize the coordinates
        let coords = this.fvar.axis.map((axis, i)=>{
            let axisTag = axis.axisTag.trim();
            if (axisTag in settings) return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));
            else return axis.defaultValue;
        });
        let stream = new restructure__WEBPACK_IMPORTED_MODULE_0__.DecodeStream(this.stream.buffer);
        stream.pos = this._directoryPos;
        let font = new $7de97f725b51e05a$export$2e2bcd8739ae039(stream, coords);
        font._tables = this._tables;
        return font;
    }
    get _variationProcessor() {
        if (!this.fvar) return null;
        let variationCoords = this.variationCoords;
        // Ignore if no variation coords and not CFF2
        if (!variationCoords && !this.CFF2) return null;
        if (!variationCoords) variationCoords = this.fvar.axis.map((axis)=>axis.defaultValue
        );
        return new $62b2d77b45b438f3$export$2e2bcd8739ae039(this, variationCoords);
    }
    // Standardized format plugin API
    getFont(name) {
        return this.getVariation(name);
    }
}, (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "bbox", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "bbox"), _class.prototype), (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "_cmapProcessor", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "_cmapProcessor"), _class.prototype), (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "characterSet", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "characterSet"), _class.prototype), (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "_layoutEngine", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "_layoutEngine"), _class.prototype), (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "variationAxes", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "variationAxes"), _class.prototype), (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "namedVariations", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "namedVariations"), _class.prototype), (0,_swc_helpers__WEBPACK_IMPORTED_MODULE_12__["default"])(_class.prototype, "_variationProcessor", [
    $df9bc573962369ff$export$69a3209f1a06c04d
], Object.getOwnPropertyDescriptor(_class.prototype, "_variationProcessor"), _class.prototype), _class);





let $ab5f467accf33238$var$WOFFDirectoryEntry = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    offset: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, 'void', {
        type: 'global'
    }),
    compLength: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    origChecksum: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32
});
let $ab5f467accf33238$var$WOFFDirectory = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    flavor: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    numTables: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
    totalSfntSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    majorVersion: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    minorVersion: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    metaOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    metaLength: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    metaOrigLength: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    privOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    privLength: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    tables: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($ab5f467accf33238$var$WOFFDirectoryEntry, 'numTables')
});
$ab5f467accf33238$var$WOFFDirectory.process = function() {
    let tables = {};
    for (let table of this.tables)tables[table.tag] = table;
    this.tables = tables;
};
var $ab5f467accf33238$export$2e2bcd8739ae039 = $ab5f467accf33238$var$WOFFDirectory;






var $fce99fef0398d8c8$require$Buffer = buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer;
class $fce99fef0398d8c8$export$2e2bcd8739ae039 extends $7de97f725b51e05a$export$2e2bcd8739ae039 {
    type = 'WOFF';
    static probe(buffer) {
        return buffer.toString('ascii', 0, 4) === 'wOFF';
    }
    _decodeDirectory() {
        this.directory = $ab5f467accf33238$export$2e2bcd8739ae039.decode(this.stream, {
            _startOffset: 0
        });
    }
    _getTableStream(tag) {
        let table = this.directory.tables[tag];
        if (table) {
            this.stream.pos = table.offset;
            if (table.compLength < table.length) {
                this.stream.pos += 2; // skip deflate header
                let outBuffer = $fce99fef0398d8c8$require$Buffer.alloc(table.length);
                let buf = tiny_inflate__WEBPACK_IMPORTED_MODULE_10__(this.stream.readBuffer(table.compLength - 2), outBuffer);
                return new restructure__WEBPACK_IMPORTED_MODULE_0__.DecodeStream(buf);
            } else return this.stream;
        }
        return null;
    }
}







class $f6f1feff1ba0de68$export$2e2bcd8739ae039 extends $e20fdd09923e4c19$export$2e2bcd8739ae039 {
    type = 'WOFF2';
    _decode() {
        // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.
        return this._font._transformedGlyphs[this.id];
    }
    _getCBox() {
        return this.path.bbox;
    }
}



const $4965cf368c868bf6$var$Base128 = {
    decode (stream) {
        let result = 0;
        let iterable = [
            0,
            1,
            2,
            3,
            4
        ];
        for(let j = 0; j < iterable.length; j++){
            let i = iterable[j];
            let code = stream.readUInt8();
            // If any of the top seven bits are set then we're about to overflow.
            if (result & 0xe0000000) throw new Error('Overflow');
            result = result << 7 | code & 0x7f;
            if ((code & 0x80) === 0) return result;
        }
        throw new Error('Bad base 128 number');
    }
};
let $4965cf368c868bf6$var$knownTags = [
    'cmap',
    'head',
    'hhea',
    'hmtx',
    'maxp',
    'name',
    'OS/2',
    'post',
    'cvt ',
    'fpgm',
    'glyf',
    'loca',
    'prep',
    'CFF ',
    'VORG',
    'EBDT',
    'EBLC',
    'gasp',
    'hdmx',
    'kern',
    'LTSH',
    'PCLT',
    'VDMX',
    'vhea',
    'vmtx',
    'BASE',
    'GDEF',
    'GPOS',
    'GSUB',
    'EBSC',
    'JSTF',
    'MATH',
    'CBDT',
    'CBLC',
    'COLR',
    'CPAL',
    'SVG ',
    'sbix',
    'acnt',
    'avar',
    'bdat',
    'bloc',
    'bsln',
    'cvar',
    'fdsc',
    'feat',
    'fmtx',
    'fvar',
    'gvar',
    'hsty',
    'just',
    'lcar',
    'mort',
    'morx',
    'opbd',
    'prop',
    'trak',
    'Zapf',
    'Silf',
    'Glat',
    'Gloc',
    'Feat',
    'Sill'
];
let $4965cf368c868bf6$var$WOFF2DirectoryEntry = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    flags: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    customTag: new restructure__WEBPACK_IMPORTED_MODULE_0__.Optional(new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4), (t)=>(t.flags & 0x3f) === 0x3f
    ),
    tag: (t)=>t.customTag || $4965cf368c868bf6$var$knownTags[t.flags & 0x3f]
    ,
    length: $4965cf368c868bf6$var$Base128,
    transformVersion: (t)=>t.flags >>> 6 & 0x03
    ,
    transformed: (t)=>t.tag === 'glyf' || t.tag === 'loca' ? t.transformVersion === 0 : t.transformVersion !== 0
    ,
    transformLength: new restructure__WEBPACK_IMPORTED_MODULE_0__.Optional($4965cf368c868bf6$var$Base128, (t)=>t.transformed
    )
});
let $4965cf368c868bf6$var$WOFF2Directory = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    tag: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    flavor: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    numTables: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16),
    totalSfntSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    totalCompressedSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    majorVersion: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    minorVersion: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    metaOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    metaLength: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    metaOrigLength: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    privOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    privLength: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    tables: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($4965cf368c868bf6$var$WOFF2DirectoryEntry, 'numTables')
});
$4965cf368c868bf6$var$WOFF2Directory.process = function() {
    let tables = {};
    for(let i = 0; i < this.tables.length; i++){
        let table = this.tables[i];
        tables[table.tag] = table;
    }
    return this.tables = tables;
};
var $4965cf368c868bf6$export$2e2bcd8739ae039 = $4965cf368c868bf6$var$WOFF2Directory;



var $b6deb9db8685274b$require$Buffer = buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer;
class $b6deb9db8685274b$export$2e2bcd8739ae039 extends $7de97f725b51e05a$export$2e2bcd8739ae039 {
    type = 'WOFF2';
    static probe(buffer) {
        return buffer.toString('ascii', 0, 4) === 'wOF2';
    }
    _decodeDirectory() {
        this.directory = $4965cf368c868bf6$export$2e2bcd8739ae039.decode(this.stream);
        this._dataPos = this.stream.pos;
    }
    _decompress() {
        // decompress data and setup table offsets if we haven't already
        if (!this._decompressed) {
            this.stream.pos = this._dataPos;
            let buffer = this.stream.readBuffer(this.directory.totalCompressedSize);
            let decompressedSize = 0;
            for(let tag in this.directory.tables){
                let entry = this.directory.tables[tag];
                entry.offset = decompressedSize;
                decompressedSize += entry.transformLength != null ? entry.transformLength : entry.length;
            }
            let decompressed = brotli_decompress_js__WEBPACK_IMPORTED_MODULE_11__(buffer, decompressedSize);
            if (!decompressed) throw new Error('Error decoding compressed data in WOFF2');
            this.stream = new restructure__WEBPACK_IMPORTED_MODULE_0__.DecodeStream($b6deb9db8685274b$require$Buffer.from(decompressed));
            this._decompressed = true;
        }
    }
    _decodeTable(table) {
        this._decompress();
        return super._decodeTable(table);
    }
    // Override this method to get a glyph and return our
    // custom subclass if there is a glyf table.
    _getBaseGlyph(glyph, characters = []) {
        if (!this._glyphs[glyph]) {
            if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {
                if (!this._transformedGlyphs) this._transformGlyfTable();
                return this._glyphs[glyph] = new $f6f1feff1ba0de68$export$2e2bcd8739ae039(glyph, characters, this);
            } else return super._getBaseGlyph(glyph, characters);
        }
    }
    _transformGlyfTable() {
        this._decompress();
        this.stream.pos = this.directory.tables.glyf.offset;
        let table = $b6deb9db8685274b$var$GlyfTable.decode(this.stream);
        let glyphs = [];
        for(let index = 0; index < table.numGlyphs; index++){
            let glyph = {};
            let nContours = table.nContours.readInt16BE();
            glyph.numberOfContours = nContours;
            if (nContours > 0) {
                let nPoints = [];
                let totalPoints = 0;
                for(let i = 0; i < nContours; i++){
                    let r = $b6deb9db8685274b$var$read255UInt16(table.nPoints);
                    totalPoints += r;
                    nPoints.push(totalPoints);
                }
                glyph.points = $b6deb9db8685274b$var$decodeTriplet(table.flags, table.glyphs, totalPoints);
                for(let i1 = 0; i1 < nContours; i1++)glyph.points[nPoints[i1] - 1].endContour = true;
                var instructionSize = $b6deb9db8685274b$var$read255UInt16(table.glyphs);
            } else if (nContours < 0) {
                let haveInstructions = $e20fdd09923e4c19$export$2e2bcd8739ae039.prototype._decodeComposite.call({
                    _font: this
                }, glyph, table.composites);
                if (haveInstructions) var instructionSize = $b6deb9db8685274b$var$read255UInt16(table.glyphs);
            }
            glyphs.push(glyph);
        }
        this._transformedGlyphs = glyphs;
    }
}
// Special class that accepts a length and returns a sub-stream for that data
class $b6deb9db8685274b$var$Substream {
    constructor(length){
        this.length = length;
        this._buf = new restructure__WEBPACK_IMPORTED_MODULE_0__.Buffer(length);
    }
    decode(stream, parent) {
        return new restructure__WEBPACK_IMPORTED_MODULE_0__.DecodeStream(this._buf.decode(stream, parent));
    }
}
// This struct represents the entire glyf table
let $b6deb9db8685274b$var$GlyfTable = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    version: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    numGlyphs: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    indexFormat: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    nContourStreamSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    nPointsStreamSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    flagStreamSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    glyphStreamSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    compositeStreamSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    bboxStreamSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    instructionStreamSize: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    nContours: new $b6deb9db8685274b$var$Substream('nContourStreamSize'),
    nPoints: new $b6deb9db8685274b$var$Substream('nPointsStreamSize'),
    flags: new $b6deb9db8685274b$var$Substream('flagStreamSize'),
    glyphs: new $b6deb9db8685274b$var$Substream('glyphStreamSize'),
    composites: new $b6deb9db8685274b$var$Substream('compositeStreamSize'),
    bboxes: new $b6deb9db8685274b$var$Substream('bboxStreamSize'),
    instructions: new $b6deb9db8685274b$var$Substream('instructionStreamSize')
});
const $b6deb9db8685274b$var$WORD_CODE = 253;
const $b6deb9db8685274b$var$ONE_MORE_BYTE_CODE2 = 254;
const $b6deb9db8685274b$var$ONE_MORE_BYTE_CODE1 = 255;
const $b6deb9db8685274b$var$LOWEST_U_CODE = 253;
function $b6deb9db8685274b$var$read255UInt16(stream) {
    let code = stream.readUInt8();
    if (code === $b6deb9db8685274b$var$WORD_CODE) return stream.readUInt16BE();
    if (code === $b6deb9db8685274b$var$ONE_MORE_BYTE_CODE1) return stream.readUInt8() + $b6deb9db8685274b$var$LOWEST_U_CODE;
    if (code === $b6deb9db8685274b$var$ONE_MORE_BYTE_CODE2) return stream.readUInt8() + $b6deb9db8685274b$var$LOWEST_U_CODE * 2;
    return code;
}
function $b6deb9db8685274b$var$withSign(flag, baseval) {
    return flag & 1 ? baseval : -baseval;
}
function $b6deb9db8685274b$var$decodeTriplet(flags, glyphs, nPoints) {
    let y;
    let x = y = 0;
    let res = [];
    for(let i = 0; i < nPoints; i++){
        let dx = 0, dy = 0;
        let flag = flags.readUInt8();
        let onCurve = !(flag >> 7);
        flag &= 0x7f;
        if (flag < 10) {
            dx = 0;
            dy = $b6deb9db8685274b$var$withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());
        } else if (flag < 20) {
            dx = $b6deb9db8685274b$var$withSign(flag, ((flag - 10 & 14) << 7) + glyphs.readUInt8());
            dy = 0;
        } else if (flag < 84) {
            var b0 = flag - 20;
            var b1 = glyphs.readUInt8();
            dx = $b6deb9db8685274b$var$withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));
            dy = $b6deb9db8685274b$var$withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));
        } else if (flag < 120) {
            var b0 = flag - 84;
            dx = $b6deb9db8685274b$var$withSign(flag, 1 + (b0 / 12 << 8) + glyphs.readUInt8());
            dy = $b6deb9db8685274b$var$withSign(flag >> 1, 1 + (b0 % 12 >> 2 << 8) + glyphs.readUInt8());
        } else if (flag < 124) {
            var b1 = glyphs.readUInt8();
            let b2 = glyphs.readUInt8();
            dx = $b6deb9db8685274b$var$withSign(flag, (b1 << 4) + (b2 >> 4));
            dy = $b6deb9db8685274b$var$withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());
        } else {
            dx = $b6deb9db8685274b$var$withSign(flag, glyphs.readUInt16BE());
            dy = $b6deb9db8685274b$var$withSign(flag >> 1, glyphs.readUInt16BE());
        }
        x += dx;
        y += dy;
        res.push(new $e20fdd09923e4c19$export$baf26146a414f24a(onCurve, false, x, y));
    }
    return res;
}







var $313c698c6d2649a4$require$Buffer = buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer;
let $313c698c6d2649a4$var$TTCHeader = new restructure__WEBPACK_IMPORTED_MODULE_0__.VersionedStruct(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, {
    0x00010000: {
        numFonts: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        offsets: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, 'numFonts')
    },
    0x00020000: {
        numFonts: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        offsets: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, 'numFonts'),
        dsigTag: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        dsigLength: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
        dsigOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32
    }
});
class $313c698c6d2649a4$export$2e2bcd8739ae039 {
    type = 'TTC';
    static probe(buffer) {
        return buffer.toString('ascii', 0, 4) === 'ttcf';
    }
    constructor(stream){
        this.stream = stream;
        if (stream.readString(4) !== 'ttcf') throw new Error('Not a TrueType collection');
        this.header = $313c698c6d2649a4$var$TTCHeader.decode(stream);
    }
    getFont(name) {
        for (let offset of this.header.offsets){
            let stream = new restructure__WEBPACK_IMPORTED_MODULE_0__.DecodeStream(this.stream.buffer);
            stream.pos = offset;
            let font = new $7de97f725b51e05a$export$2e2bcd8739ae039(stream);
            if ($313c698c6d2649a4$require$Buffer.isBuffer(font.postscriptName) && font.postscriptName.equals(name) || font.postscriptName === name) return font;
        }
        return null;
    }
    get fonts() {
        let fonts = [];
        for (let offset of this.header.offsets){
            let stream = new restructure__WEBPACK_IMPORTED_MODULE_0__.DecodeStream(this.stream.buffer);
            stream.pos = offset;
            fonts.push(new $7de97f725b51e05a$export$2e2bcd8739ae039(stream));
        }
        return fonts;
    }
}





var $7db119589c227f03$require$Buffer = buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer;
let $7db119589c227f03$var$DFontName = new restructure__WEBPACK_IMPORTED_MODULE_0__.String(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8);
let $7db119589c227f03$var$DFontData = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    len: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    buf: new restructure__WEBPACK_IMPORTED_MODULE_0__.Buffer('len')
});
let $7db119589c227f03$var$Ref = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    id: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    nameOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.int16,
    attr: restructure__WEBPACK_IMPORTED_MODULE_0__.uint8,
    dataOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint24,
    handle: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32
});
let $7db119589c227f03$var$Type = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    name: new restructure__WEBPACK_IMPORTED_MODULE_0__.String(4),
    maxTypeIndex: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    refList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($7db119589c227f03$var$Ref, (t)=>t.maxTypeIndex + 1
    ), {
        type: 'parent'
    })
});
let $7db119589c227f03$var$TypeList = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    length: restructure__WEBPACK_IMPORTED_MODULE_0__.uint16,
    types: new restructure__WEBPACK_IMPORTED_MODULE_0__.Array($7db119589c227f03$var$Type, (t)=>t.length + 1
    )
});
let $7db119589c227f03$var$DFontMap = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    reserved: new restructure__WEBPACK_IMPORTED_MODULE_0__.Reserved(restructure__WEBPACK_IMPORTED_MODULE_0__.uint8, 24),
    typeList: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, $7db119589c227f03$var$TypeList),
    nameListOffset: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint16, 'void')
});
let $7db119589c227f03$var$DFontHeader = new restructure__WEBPACK_IMPORTED_MODULE_0__.Struct({
    dataOffset: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    map: new restructure__WEBPACK_IMPORTED_MODULE_0__.Pointer(restructure__WEBPACK_IMPORTED_MODULE_0__.uint32, $7db119589c227f03$var$DFontMap),
    dataLength: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32,
    mapLength: restructure__WEBPACK_IMPORTED_MODULE_0__.uint32
});
class $7db119589c227f03$export$2e2bcd8739ae039 {
    type = 'DFont';
    static probe(buffer) {
        let stream = new restructure__WEBPACK_IMPORTED_MODULE_0__.DecodeStream(buffer);
        try {
            var header = $7db119589c227f03$var$DFontHeader.decode(stream);
        } catch (e) {
            return false;
        }
        for (let type of header.map.typeList.types){
            if (type.name === 'sfnt') return true;
        }
        return false;
    }
    constructor(stream){
        this.stream = stream;
        this.header = $7db119589c227f03$var$DFontHeader.decode(this.stream);
        for (let type of this.header.map.typeList.types){
            for (let ref of type.refList)if (ref.nameOffset >= 0) {
                this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;
                ref.name = $7db119589c227f03$var$DFontName.decode(this.stream);
            } else ref.name = null;
            if (type.name === 'sfnt') this.sfnt = type;
        }
    }
    getFont(name) {
        if (!this.sfnt) return null;
        for (let ref of this.sfnt.refList){
            let pos = this.header.dataOffset + ref.dataOffset + 4;
            let stream = new restructure__WEBPACK_IMPORTED_MODULE_0__.DecodeStream(this.stream.buffer.slice(pos));
            let font = new $7de97f725b51e05a$export$2e2bcd8739ae039(stream);
            if ($7db119589c227f03$require$Buffer.isBuffer(font.postscriptName) && font.postscriptName.equals(name) || font.postscriptName === name) return font;
        }
        return null;
    }
    get fonts() {
        let fonts = [];
        for (let ref of this.sfnt.refList){
            let pos = this.header.dataOffset + ref.dataOffset + 4;
            let stream = new restructure__WEBPACK_IMPORTED_MODULE_0__.DecodeStream(this.stream.buffer.slice(pos));
            fonts.push(new $7de97f725b51e05a$export$2e2bcd8739ae039(stream));
        }
        return fonts;
    }
}



// Register font formats
$8857867ee3ddfad5$export$36b2f24e97d43be($7de97f725b51e05a$export$2e2bcd8739ae039);
$8857867ee3ddfad5$export$36b2f24e97d43be($fce99fef0398d8c8$export$2e2bcd8739ae039);
$8857867ee3ddfad5$export$36b2f24e97d43be($b6deb9db8685274b$export$2e2bcd8739ae039);
$8857867ee3ddfad5$export$36b2f24e97d43be($313c698c6d2649a4$export$2e2bcd8739ae039);
$8857867ee3ddfad5$export$36b2f24e97d43be($7db119589c227f03$export$2e2bcd8739ae039);
var // Legacy default export for backward compatibility.
$cf838c15c8b009ba$export$2e2bcd8739ae039 = {
    registerFormat: $8857867ee3ddfad5$export$36b2f24e97d43be,
    openSync: $8857867ee3ddfad5$export$fa5499edb1ab414a,
    open: $8857867ee3ddfad5$export$3ce6949f20cea765,
    create: $8857867ee3ddfad5$export$185802fd694ee1f5,
    defaultLanguage: $8857867ee3ddfad5$export$42940898df819940,
    setDefaultLanguage: $8857867ee3ddfad5$export$5157e7780d44cc36
};



//# sourceMappingURL=module.mjs.map


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/fontkit/dist/module.mjs?`)},"./node_modules/linebreak/dist/module.mjs":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ $557adaaeb0c7885f$exports)
/* harmony export */ });
/* harmony import */ var unicode_trie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unicode-trie */ "./node_modules/unicode-trie/index.js");
/* harmony import */ var base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! base64-js */ "./node_modules/linebreak/node_modules/base64-js/lib/b64.js");



var $557adaaeb0c7885f$exports = {};

"use strict";



const $1627905f8be2ef3f$export$af862512e23cb54 = 0; // Opening punctuation
const $1627905f8be2ef3f$export$9bf3043cb7503aa1 = 1; // Closing punctuation
const $1627905f8be2ef3f$export$6d0b2a5dd774590a = 2; // Closing parenthesis
const $1627905f8be2ef3f$export$bf0b2277bd569ea1 = 3; // Ambiguous quotation
const $1627905f8be2ef3f$export$bad2a840ccda93b6 = 4; // Glue
const $1627905f8be2ef3f$export$fb4028874a74450 = 5; // Non-starters
const $1627905f8be2ef3f$export$463bd1ce0149c55e = 6; // Exclamation/Interrogation
const $1627905f8be2ef3f$export$2e8caadc521d7cbb = 7; // Symbols allowing break after
const $1627905f8be2ef3f$export$bfe27467c1de9413 = 8; // Infix separator
const $1627905f8be2ef3f$export$af5f8d68aad3cd3a = 9; // Prefix
const $1627905f8be2ef3f$export$6b7e017d6825d38f = 10; // Postfix
const $1627905f8be2ef3f$export$8227ca023eb0daaa = 11; // Numeric
const $1627905f8be2ef3f$export$1bb1140fe1358b00 = 12; // Alphabetic
const $1627905f8be2ef3f$export$f3e416a182673355 = 13; // Hebrew Letter
const $1627905f8be2ef3f$export$8be180ec26319f9f = 14; // Ideographic
const $1627905f8be2ef3f$export$70824c8942178d60 = 15; // Inseparable characters
const $1627905f8be2ef3f$export$24aa617c849a894a = 16; // Hyphen
const $1627905f8be2ef3f$export$a73c4d14459b698d = 17; // Break after
const $1627905f8be2ef3f$export$921068d8846a1559 = 18; // Break before
const $1627905f8be2ef3f$export$8b85a4f193482778 = 19; // Break on either side (but not pair)
const $1627905f8be2ef3f$export$b2fd9c01d360241f = 20; // Zero-width space
const $1627905f8be2ef3f$export$dcd191669c0a595f = 21; // Combining marks
const $1627905f8be2ef3f$export$9e5d732f3676a9ba = 22; // Word joiner
const $1627905f8be2ef3f$export$cb94397127ac9363 = 23; // Hangul LV
const $1627905f8be2ef3f$export$746be9e3a3dfff1f = 24; // Hangul LVT
const $1627905f8be2ef3f$export$96e3e682276c47cf = 25; // Hangul L Jamo
const $1627905f8be2ef3f$export$fc2ff69ee2cb01bf = 26; // Hangul V Jamo
const $1627905f8be2ef3f$export$8999624a7bae9d04 = 27; // Hangul T Jamo
const $1627905f8be2ef3f$export$1dff41d5c0caca01 = 28; // Regional Indicator
const $1627905f8be2ef3f$export$ddb7a6c76d9d93eb = 29; // Emoji Base
const $1627905f8be2ef3f$export$7e93eb3105e4786d = 30; // Emoji Modifier
const $1627905f8be2ef3f$export$30a74a373318dec6 = 31; // Zero Width Joiner
const $1627905f8be2ef3f$export$54caeea5e6dab1f = 32; // Contingent break
const $1627905f8be2ef3f$export$d710c5f50fc7496a = 33; // Ambiguous (Alphabetic or Ideograph)
const $1627905f8be2ef3f$export$66498d28055820a9 = 34; // Break (mandatory)
const $1627905f8be2ef3f$export$eb6c6d0b7c8826f2 = 35; // Conditional Japanese Starter
const $1627905f8be2ef3f$export$de92be486109a1df = 36; // Carriage return
const $1627905f8be2ef3f$export$606cfc2a8896c91f = 37; // Line feed
const $1627905f8be2ef3f$export$e51d3c675bb0140d = 38; // Next line
const $1627905f8be2ef3f$export$da51c6332ad11d7b = 39; // South-East Asian
const $1627905f8be2ef3f$export$bea437c40441867d = 40; // Surrogates
const $1627905f8be2ef3f$export$c4c7eecbfed13dc9 = 41; // Space
const $1627905f8be2ef3f$export$98e1f8a379849661 = 42; // Unknown


const $32627af916ac1b00$export$98f50d781a474745 = 0; // Direct break opportunity
const $32627af916ac1b00$export$12ee1f8f5315ca7e = 1; // Indirect break opportunity
const $32627af916ac1b00$export$e4965ce242860454 = 2; // Indirect break opportunity for combining marks
const $32627af916ac1b00$export$8f14048969dcd45e = 3; // Prohibited break for combining marks
const $32627af916ac1b00$export$133eb141bf58aff4 = 4; // Prohibited break
const $32627af916ac1b00$export$5bdb8ccbf5c57afc = [
    //OP   , CL    , CP    , QU    , GL    , NS    , EX    , SY    , IS    , PR    , PO    , NU    , AL    , HL    , ID    , IN    , HY    , BA    , BB    , B2    , ZW    , CM    , WJ    , H2    , H3    , JL    , JV    , JT    , RI    , EB    , EM    , ZWJ   , CB
    [
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$8f14048969dcd45e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e
    ],
    [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ],
    [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
    ] // CB
];


const $557adaaeb0c7885f$var$data = base64_js__WEBPACK_IMPORTED_MODULE_1__.toByteArray("AAgOAAAAAAAQ4QAAAQ0P8vDtnQuMXUUZx+eyu7d7797d9m5bHoWltKVUlsjLWE0VJNigQoMVqkStEoNQQUl5GIo1KKmogEgqkKbBRki72lYabZMGKoGAjQRtJJDaCCIRiiigREBQS3z+xzOTnZ3O+3HOhd5NfpkzZx7fN9988zivu2M9hGwB28F94DnwEngd/Asc1EtIs9c/bIPDwCxwLDgezHcodyo4w5C+CCwBS8FnwSXgCnA1uFbI93XwbXAbWAfWgx+CzWAb+An4KfgFeAzsYWWfYuFz4CXwGvgb+Dfo6yNkEEwGh4CZYB44FpwI3g1OY+kfBItZOo2fB84Hy8DF4HJwNbiWpV8PVoO1LH4n2NRXyN+KcAd4kNVP9XsY4aPgcfAbsBfs6SniL4K/sPjfEf6HlanXCRkCw2BGvUh/keWfXS/CY+pFXs7x9XHmM94LTmWIeU2cgbxnS/k/B3kf86jDhU8L9V2E40vAFWAlWFUfb++NOL4F3C7JX4/4GiE+hvgWsF0oS7mXldspnN+F493gyXrh9xTav0cg3EvzgVfBG6wsmVSEkxBOBgdPGpd7JI6PnqRvJ68/xlbHof53gPeA94OzwLngk+ACsAwsByvASrAK3MB0Ws3CtQjvBJvAVrADPMDSHkb4CNijaccTwvnf4fiPEs8Lxy+D18A/QU8/xjgYBjPAbDAKTgYLwOngTHAO+EQ/8wuEF4EvsPiVCFf2+9tsFStzA8LVHuXXBsi6QyqzUYiPMR/7Mc7dAx7oL8bzw/3u/Bw8Bp4Az4AXwCtgHzsmDXP5fiF9iiVvly5d0sHngar16NKlS5cuXbp06fLmYlqHXrcd3ph4P0THUY3iXh49novju4S0tzfs5d+JPKewfAsRntZb3K9ZhOMlrO6lCC8An28U9+OuovcPcPxlVu5rCL/VmHh/iHIrzn3fIPu7SN8Axmg+8AOwEWwCm7tp3bRuWjetm5Y8bSu4B9zbKO6ZVsnORrVU3f4uXTqZ2H3sLoyx3eDXjfDndE9qyj6L838CfwVvgFpzYnof4oNgOhgBc8Fos9DrZIQLmtXPP1MmF6wGj4H+KXoWguvADkXaPil+YpuQy8Am8Ey7ODdtmJDF4HowBp4De6HDTNjhfHAHeBr0DBBy0kDxfPbcgSIusgrcWhtnJ8vL+TPix7UIOQtcBq4C28Cr4KRBnANbwSuDE+s50JgyNNFuXbp06XIgsXjIvPafjvXozKY+fVFz/z0LT1uCtKVSWbrOLWPnztG8e0Xfy7ol8XtZJi7WtG+5od2UFXQ/A12vUeS7jp27yVKHjdsU9lXB869TyNvAzt0lpP2oWbwLdjiO78bx/Sz+EMJHwK9Y/LcIfw+eZ3F67/Hl5vh9xX80J+rwX8SvRDhpgL17iPAQMHNArfPrqHPewLheI+AERV6efwV418B4nOZ/H+IfYHV8GOF5LJ3eAz0fx8sM9S0fUNud39O9CulfGZhY5huI3wzWgNvBelbHZoTbNPVpfYjKQpkHwUNgl0LWblbnk0LbbDxr0OMFpL3iqWdu9nWYPlVAWkXY39LnGdCkDbeqv1YNbfcMQ3t9oe8lzm6NH9N1ZB6Ln4BwfkJZJk7RyFnYKt6b/JDQXx9p5X+eFdqOjzM9P9MB/lUlFzr20aXIdzlY4dmn9F3YqtvoO76/2hp/D/xA5Zue88nNyL8GbFbs075X0tyUig3Qd2MCnf//HjnzpbsR3g9+1kHzzVjdnE71/qVBX9rGPUh/ysNWe1neFzvIDi5zAufV1sT0N0poR22wkFUfTOPfA4N2mbZ5fSrqOHSw+IbkSBbOGSzSRgf91/GTUWYBOB2cIZQ/G8cfBZ8CFwrnL8XxF8FKcA24jqXdiPA7Qr61OF7H4mMItwzuv2/YLth1ISt3Hzu3k4W7EH5JqPdRHD/O4k+z8A8IX5Lq3y7Z4nXE9xn6kX6vQ4bKfy+ok+hH+xf3hq9dnTTHhjKd2GmDuWA242iHMq4cC7A8kJ7i8o1+skSa7Jieo38HCWnoNjKFhdSFBxzpZ7QE6lI8N4S14aASZcryaV/WWHw66f6NHuCoxuQxmvM56GX9QMd8Q4D65ywGP+ZzRJuM+zQvx/MOS2VFeqQ4IXnH26zM9Xe6/E6D+4foAzzuajPZp8Qyw5ayZVDWuH0z0BtYRkeIDqH9KO9VbH1btd/lhNqCzvl8zeLnG0S/hnU6baHfpiuO6yy0rd+DHURo/zYF5H26j03rQsip2ndzz82u1z9N4VjWKWeb68Tedpt95HRVXp7H1R6p+/Wt4FPy/PpWwscOLRJ+PVWF/+W0iVyGzs18TIvXkOJ1Wxm66vSXz+vylenrZcj1ub439W+K8RNCGTJi2p/TJ1K23VaXr35tRpnzmjxequgfcfyk6B/TGBVlyedsNgpdd/h+W1U3P99QyFPNo1X3TwpM/WLTIWYfoBqXrv6iskHZ/RFr79R6hIyHBrH3f1nrUVnjP8SnZZ+rYtzr9Exld5MNbPNErusAPg+77u/eDOPftU9yj39TH7rezxd1LvsZQJlzkWlOirG/79zjMj/mtHUKu7vKy+3/LnXr9okyKedjX5/0He9iP/j63LwOQdarEVlfy8OO/Lqw023j6xcqmwxLiOd6heM2i9cV9LJy8jMJ23yQ+rpbfu7EQ/pXE8KYvUSqvVnb4XzZa6LrHMXHR+zcLvqWbm/Bn0/HzIs6fWPHoat8XfnDKmZGxRxeMbn2UqZ5Q94nmcZRbqqUXbZ8+lcjE+cPX11t814orvvAXNcG8vqj2vvk1MGn3anlj0bIT72v47bvE+Lc98T9b6r7AKn6j+8Duf7D0nnZx/j7Zjn0j9nbpSTndaLr9WNLivP+iN23xF7L+fqv6ZouFyb78jxVXvv5jJ9YUs9/sddO8h7KNg5jrhfaJGztT6G7KF+1d6yCmD5Kdb2fan60rSc552fZr3zeQ9DpnPp+Si5cx5Ktv2QfSzF/mMbWdOm46rFI4XstnU9xeqX4NKb7TKEdcr6pZOK3ID1k/LvFHkVczEuZLEDr499YqvqBym1aEHWgcvoYOtv0M91qQl5TfpO/in6rWx8OVpT1Wedkv3f5xom3T/xeR/6Gx6V86PWAOB4bBpqWdN+yTcVxjIyGRz/FrDGu6w/3d7kPm8StX8RyPu+uuvpNju/vTLJV37GpvoM0oZPnW87VLnL/5pDno1NoW1R6yedU6TyUv3u19a3KFnIbTLYz+ZCLP4T0tU1uivFgso0pnsJ/UtXvarNY28Xq5cvkBDrQP/E5ZaiuQwwfmTlsOiQRU1fMuqrDd/3ISSuwjOwXOfTyGUMpZIXq4GpLn3pUcdfzch2x7XO1u2uZHOPb1G6b3Xg9PH1IIWeEpJlPQtqos2EKW8b0u8rnuP1UeVLoXJb9be0uG9nnbchjU+XTszT5VeNBThPHnc5OKj1U9aj0GTHIVaGy1YhEWT4ixns00DT+XEzWn/7VAsIc63Cov3OdyhwjrnaqQqZvWKXdypRdlq+k8msZ031U+Rm4fA+3TtyeR9hwfW9G9yxDN0fZMN33F+9TE6md4hwoxumfaUzI9fN3PFT3xVV2msrQ3UsnChm6Nulk8TndpS28D3zX9tTIPsF/z7Am5OkTjm1tI1JZW74+4VgsZ0N3L1yXV3WeP5uR7TGHHdvC3JQlxybfpd22tDlk/2eofRK8TzrN/qnar/K/OUTth6I/+jAnEptNbPvFHP2gs40N3+dfMWtwqvVct7/wfd8gtQ7imifial9ZJ9/3IHLYU6eDj3+4PhsNhX+vwvcWLnu6kGfEMe8DuciPfUfGZB8X/7HJy/Gefe5n+VRGFd/wyP2ta7/LO4yh/sbLV/k9lev6kfO9Dt/5U67b1/6u/epqB1U9Me23jfHY9sscAg4tkbLl+e4/U36rJ9ddxfd6sg5vq5ice42Wpk/pb9FOJ36/W9tpv4kbC79nUbZceX8Zu6/qJ+P3WvhvA8v3reh7Jbn2d6rrNC7XNZTLma4Ba0JI9efX2uLzF5scG/w9UNU1ZxW+ymUfzELeTllXlQ1rUuhzjS5fp9c964iFBOqeSz63bU065nZKdU+mDEz3qHIjjifquw0pnb/raRtvrnsYcb46ihT3taoYz6brdNW9l6rWRnE/navdPn1XlR1km7hcz1WlH/elKuSOSvLLuE8U6m8uzwRdfcGl73VyTHuyMvzJ1Sa2cWDTP/Z63Kc94n2B1PYr24dz1JlyHLlcP+S4B6vD1c9EW4q2LWstCvUjeVy63k/LMYdUNd5D1xQfvVTzX1VjkMsUv88N8VH5fReVn/Fjn++/h6X6Q8a6b1/q3g/i/ewi0/Scs8zxXeV6mWIOUPlPzBgdFerW+bZrm2P18dnjuK6HunEp+rHvPMXbr+sHVb/lnL+pTP57jPw9Cvk3PW178JD9qChfzuvTf7Htl38L1QUf/VKu9SFjwWbTWPvFEvu7Uq76y7+31g6QlYPc669pbsm9Xur2LWI9Pu8ypfDXqm3A2z8s1FWGn4ntL9NfQu2oSlftX9uetvTtv7J8Ql4zxfXGZ3zk8PeQ9w59x2uMfqI8/q5eKh/l9cb2rwsu9rSNl06ZP2Pmxtz+rNMx93yno0n2/82rVH7rQ+y9P15H6FyRun9ViH81ATmffI7nJ5r8uXXW6enbP6b/B8/l5OifVHYLnb9S39s2zcc+Ph+rh8+eQgVPS72elzGWY/tUtbbabBpDiI7yN1q6/4th2y+ErAc5+9BVvu/7KamJbWNZeuqI/R4tRf+YyD1HmOZM1bMV3/14Sn10c0Xu+Sj1nOXb5jL73ncdy02uvlXZNde65dOHYl7Vs4KYuS6FzWLn2zJlpZqPXPVPOa5yzKOyn1VhT9lmMfdbfH7D11Wf2PXN5h9y+dD287+qxgSnaYmnIrRtIb8pJe6/Uv9OVer6Whn0zfGO/BEloZI9ojmfAlUflClDd178bTmVHVTpZXOkAlk/lb42UujmI89HH5V+cl7XtowY6vTxLVWok6UrGzoGTHN+bB+6ri05687VNpvfuvRfaP2uMlNQth1D5JjGelm/8yn+9p3p/7qk9gnfeddXZmq/Sm333PJT659Kv1zjNbZ9uv2Oi//67CV8/N1nj1DmviyXDNVeJkaeaX8UsyesYg8cu2+NvdaPfb+lLDu5tvt/");
const $557adaaeb0c7885f$var$classTrie = new unicode_trie__WEBPACK_IMPORTED_MODULE_0__($557adaaeb0c7885f$var$data);
const $557adaaeb0c7885f$var$mapClass = function(c) {
    switch(c){
        case $1627905f8be2ef3f$export$d710c5f50fc7496a:
            return $1627905f8be2ef3f$export$1bb1140fe1358b00;
        case $1627905f8be2ef3f$export$da51c6332ad11d7b:
        case $1627905f8be2ef3f$export$bea437c40441867d:
        case $1627905f8be2ef3f$export$98e1f8a379849661:
            return $1627905f8be2ef3f$export$1bb1140fe1358b00;
        case $1627905f8be2ef3f$export$eb6c6d0b7c8826f2:
            return $1627905f8be2ef3f$export$fb4028874a74450;
        default:
            return c;
    }
};
const $557adaaeb0c7885f$var$mapFirst = function(c) {
    switch(c){
        case $1627905f8be2ef3f$export$606cfc2a8896c91f:
        case $1627905f8be2ef3f$export$e51d3c675bb0140d:
            return $1627905f8be2ef3f$export$66498d28055820a9;
        case $1627905f8be2ef3f$export$c4c7eecbfed13dc9:
            return $1627905f8be2ef3f$export$9e5d732f3676a9ba;
        default:
            return c;
    }
};
class $557adaaeb0c7885f$var$Break {
    constructor(position, required = false){
        this.position = position;
        this.required = required;
    }
}
class $557adaaeb0c7885f$var$LineBreaker {
    nextCodePoint() {
        const code = this.string.charCodeAt(this.pos++);
        const next = this.string.charCodeAt(this.pos);
        // If a surrogate pair
        if (0xd800 <= code && code <= 0xdbff && 0xdc00 <= next && next <= 0xdfff) {
            this.pos++;
            return (code - 0xd800) * 0x400 + (next - 0xdc00) + 0x10000;
        }
        return code;
    }
    nextCharClass() {
        return $557adaaeb0c7885f$var$mapClass($557adaaeb0c7885f$var$classTrie.get(this.nextCodePoint()));
    }
    getSimpleBreak() {
        // handle classes not handled by the pair table
        switch(this.nextClass){
            case $1627905f8be2ef3f$export$c4c7eecbfed13dc9:
                return false;
            case $1627905f8be2ef3f$export$66498d28055820a9:
            case $1627905f8be2ef3f$export$606cfc2a8896c91f:
            case $1627905f8be2ef3f$export$e51d3c675bb0140d:
                this.curClass = $1627905f8be2ef3f$export$66498d28055820a9;
                return false;
            case $1627905f8be2ef3f$export$de92be486109a1df:
                this.curClass = $1627905f8be2ef3f$export$de92be486109a1df;
                return false;
        }
        return null;
    }
    getPairTableBreak(lastClass) {
        // if not handled already, use the pair table
        let shouldBreak = false;
        switch($32627af916ac1b00$export$5bdb8ccbf5c57afc[this.curClass][this.nextClass]){
            case $32627af916ac1b00$export$98f50d781a474745:
                shouldBreak = true;
                break;
            case $32627af916ac1b00$export$12ee1f8f5315ca7e:
                shouldBreak = lastClass === $1627905f8be2ef3f$export$c4c7eecbfed13dc9;
                break;
            case $32627af916ac1b00$export$e4965ce242860454:
                shouldBreak = lastClass === $1627905f8be2ef3f$export$c4c7eecbfed13dc9;
                if (!shouldBreak) {
                    shouldBreak = false;
                    return shouldBreak;
                }
                break;
            case $32627af916ac1b00$export$8f14048969dcd45e:
                if (lastClass !== $1627905f8be2ef3f$export$c4c7eecbfed13dc9) return shouldBreak;
                break;
            case $32627af916ac1b00$export$133eb141bf58aff4:
                break;
        }
        if (this.LB8a) shouldBreak = false;
        // Rule LB21a
        if (this.LB21a && (this.curClass === $1627905f8be2ef3f$export$24aa617c849a894a || this.curClass === $1627905f8be2ef3f$export$a73c4d14459b698d)) {
            shouldBreak = false;
            this.LB21a = false;
        } else this.LB21a = this.curClass === $1627905f8be2ef3f$export$f3e416a182673355;
        // Rule LB30a
        if (this.curClass === $1627905f8be2ef3f$export$1dff41d5c0caca01) {
            this.LB30a++;
            if (this.LB30a == 2 && this.nextClass === $1627905f8be2ef3f$export$1dff41d5c0caca01) {
                shouldBreak = true;
                this.LB30a = 0;
            }
        } else this.LB30a = 0;
        this.curClass = this.nextClass;
        return shouldBreak;
    }
    nextBreak() {
        // get the first char if we're at the beginning of the string
        if (this.curClass == null) {
            let firstClass = this.nextCharClass();
            this.curClass = $557adaaeb0c7885f$var$mapFirst(firstClass);
            this.nextClass = firstClass;
            this.LB8a = firstClass === $1627905f8be2ef3f$export$30a74a373318dec6;
            this.LB30a = 0;
        }
        while(this.pos < this.string.length){
            this.lastPos = this.pos;
            const lastClass = this.nextClass;
            this.nextClass = this.nextCharClass();
            // explicit newline
            if (this.curClass === $1627905f8be2ef3f$export$66498d28055820a9 || this.curClass === $1627905f8be2ef3f$export$de92be486109a1df && this.nextClass !== $1627905f8be2ef3f$export$606cfc2a8896c91f) {
                this.curClass = $557adaaeb0c7885f$var$mapFirst($557adaaeb0c7885f$var$mapClass(this.nextClass));
                return new $557adaaeb0c7885f$var$Break(this.lastPos, true);
            }
            let shouldBreak = this.getSimpleBreak();
            if (shouldBreak === null) shouldBreak = this.getPairTableBreak(lastClass);
            // Rule LB8a
            this.LB8a = this.nextClass === $1627905f8be2ef3f$export$30a74a373318dec6;
            if (shouldBreak) return new $557adaaeb0c7885f$var$Break(this.lastPos);
        }
        if (this.lastPos < this.string.length) {
            this.lastPos = this.string.length;
            return new $557adaaeb0c7885f$var$Break(this.string.length);
        }
        return null;
    }
    constructor(string){
        this.string = string;
        this.pos = 0;
        this.lastPos = 0;
        this.curClass = null;
        this.nextClass = null;
        this.LB8a = false;
        this.LB21a = false;
        this.LB30a = 0;
    }
}
$557adaaeb0c7885f$exports = $557adaaeb0c7885f$var$LineBreaker;



//# sourceMappingURL=module.mjs.map


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/linebreak/dist/module.mjs?`)},"./node_modules/unicode-properties/dist/module.mjs":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ $747425b437e121da$export$2e2bcd8739ae039),
/* harmony export */   getCategory: () => (/* binding */ $747425b437e121da$export$410364bbb673ddbc),
/* harmony export */   getCombiningClass: () => (/* binding */ $747425b437e121da$export$c03b919c6651ed55),
/* harmony export */   getEastAsianWidth: () => (/* binding */ $747425b437e121da$export$92f6187db8ca6d26),
/* harmony export */   getNumericValue: () => (/* binding */ $747425b437e121da$export$7d1258ebb7625a0d),
/* harmony export */   getScript: () => (/* binding */ $747425b437e121da$export$941569448d136665),
/* harmony export */   isAlphabetic: () => (/* binding */ $747425b437e121da$export$52c8ea63abd07594),
/* harmony export */   isBaseForm: () => (/* binding */ $747425b437e121da$export$a11bdcffe109e74b),
/* harmony export */   isDigit: () => (/* binding */ $747425b437e121da$export$727d9dbc4fbb948f),
/* harmony export */   isLowerCase: () => (/* binding */ $747425b437e121da$export$7b6804e8df61fcf5),
/* harmony export */   isMark: () => (/* binding */ $747425b437e121da$export$e33ad6871e762338),
/* harmony export */   isPunctuation: () => (/* binding */ $747425b437e121da$export$a5b49f4dc6a07d2c),
/* harmony export */   isTitleCase: () => (/* binding */ $747425b437e121da$export$de8b4ee23b2cf823),
/* harmony export */   isUpperCase: () => (/* binding */ $747425b437e121da$export$aebd617640818cda),
/* harmony export */   isWhiteSpace: () => (/* binding */ $747425b437e121da$export$3c52dd84024ae72c)
/* harmony export */ });
/* harmony import */ var base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js");
/* harmony import */ var unicode_trie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! unicode-trie */ "./node_modules/unicode-trie/index.js");



function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}


var $f4087201da764553$exports = {};
$f4087201da764553$exports = JSON.parse('{"categories":["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],"combiningClasses":["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],"scripts":["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Osage","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Hanifi_Rohingya","Old_Sogdian","Sogdian","Elymaic","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Newa","Tirhuta","Siddham","Modi","Takri","Ahom","Dogra","Warang_Citi","Nandinagari","Zanabazar_Square","Soyombo","Pau_Cin_Hau","Bhaiksuki","Marchen","Masaram_Gondi","Gunjala_Gondi","Makasar","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Medefaidrin","Miao","Tangut","Nushu","Duployan","SignWriting","Nyiakeng_Puachue_Hmong","Wancho","Mende_Kikakui","Adlam"],"eaw":["N","Na","A","W","H","F"]}');


const $747425b437e121da$var$trie = new (0, unicode_trie__WEBPACK_IMPORTED_MODULE_1__)((0, base64_js__WEBPACK_IMPORTED_MODULE_0__).toByteArray("AAARAAAAAADwfAEAZXl5ONRt+/5bPVFZimRfKoTQJNm37CGE7Iw0j3UsTWKsoyI7kwyyTiEUzSD7NiEzhWYijH0wMVkHE4Mx49fzfo+3nuP4/fdZjvv+XNd5n/d9nef1WZvmKhTxiZndzDQBSEYQqxqKwnsKvGQucFh+6t6cJ792ePQBZv5S9yXSwkyjf/P4T7mTNnIAv1dOVhMlR9lflbUL9JeJguqsjvG9NTj/wLb566VAURnLo2vvRi89S3gW/33ihh2eXpDn40BIW7REl/7coRKIhAFlAiOtbLDTt6mMb4GzMF1gNnvX/sBxtbsAIjfztCNcQjcNDtLThRvuXu5M5g/CBjaLBE4lJm4qy/oZD97+IJryApcXfgWYlkvWbhfXgujOJKVu8B+ozqTLbxyJ5kNiR75CxDqfBM9eOlDMmGeoZ0iQbbS5VUplIwI+ZNXEKQVJxlwqjhOY7w3XwPesbLK5JZE+Tt4X8q8km0dzInsPPzbscrjBMVjF5mOHSeRdJVgKUjLTHiHqXSPkep8N/zFk8167KLp75f6RndkvzdfB6Uz3MmqvRArzdCbs1/iRZjYPLLF3U8Qs+H+Rb8iK51a6NIV2V9+07uJsTGFWpPz8J++7iRu2B6eAKlK/kujrLthwaD/7a6J5w90TusnH1JMAc+gNrql4aspOUG/RrsxUKmPzhHgP4Bleru+6Vfc/MBjgXVx7who94nPn7MPFrnwQP7g0k0Dq0h2GSKO6fTZ8nLodN1SiOUj/5EL/Xo1DBvRm0wmrh3x6phcJ20/9CuMr5h8WPqXMSasLoLHoufTmE7mzYrs6B0dY7KjuCogKqsvxnxAwXWvd9Puc9PnE8DOHT2INHxRlIyVHrqZahtfV2E/A2PDdtA3ewlRHMtFIBKO/T4IozWTQZ+mb+gdKuk/ZHrqloucKdsOSJmlWTSntWjcxVMjUmroXLM10I6TwDLnBq4LP69TxgVeyGsd8yHvhF8ydPlrNRSNs9EP7WmeuSE7Lu10JbOuQcJw/63sDp68wB9iwP5AO+mBpV0R5VDDeyQUFCel1G+4KHBgEVFS0YK+m2sXLWLuGTlkVAd97WwKKdacjWElRCuDRauf33l/yVcDF6sVPKeTes99FC1NpNWcpieGSV/IbO8PCTy5pbUR1U8lxzf4T+y6fZMxOz3LshkQLeeDSd0WmUrQgajmbktrxsb2AZ0ACw2Vgni+gV/m+KvCRWLg08Clx7uhql+v9XySGcjjOHlsp8vBw/e8HS7dtiqF6T/XcSXuaMW66GF1g4q9YyBadHqy3Y5jin1c7yZos6BBr6dsomSHxiUHanYtcYQwnMMZhRhOnaYJeyJzaRuukyCUh48+e/BUvk/aEfDp8ag+jD64BHxNnQ5v/E7WRk7eLjGV13I3oqy45YNONi/1op1oDr7rPjkhPsTXgUpQtGDPlIs55KhQaic9kSGs/UrZ2QKQOflB8MTEQxRF9pullToWO7Eplan6mcMRFnUu2441yxi23x+KqKlr7RWWsi9ZXMWlr8vfP3llk1m2PRj0yudccxBuoa7VfIgRmnFPGX6Pm1WIfMm/Rm4n/xTn8IGqA0GWuqgu48pEUO0U9nN+ZdIvFpPb7VDPphIfRZxznlHeVFebkd9l+raXy9BpTMcIUIvBfgHEb6ndGo8VUkxpief14KjzFOcaANfgvFpvyY8lE8lE4raHizLpluPzMks1hx/e1Hok5yV0p7qQH7GaYeMzzZTFvRpv6k6iaJ4yNqzBvN8J7B430h2wFm1IBPcqbou33G7/NWPgopl4Mllla6e24L3TOTVNkza2zv3QKuDWTeDpClCEYgTQ+5vEBSQZs/rMF50+sm4jofTgWLqgX1x3TkrDEVaRqfY/xZizFZ3Y8/DFEFD31VSfBQ5raEB6nHnZh6ddehtclQJ8fBrldyIh99LNnV32HzKEej04hk6SYjdauCa4aYW0ru/QxvQRGzLKOAQszf3ixJypTW3WWL6BLSF2EMCMIw7OUvWBC6A/gDc2D1jvBapMCc7ztx6jYczwTKsRLL6dMNXb83HS8kdD0pTMMj161zbVHkU0mhSHo9SlBDDXdN6hDvRGizmohtIyR3ot8tF5iUG4GLNcXeGvBudSFrHu+bVZb9jirNVG+rQPI51A7Hu8/b0UeaIaZ4UgDO68PkYx3PE2HWpKapJ764Kxt5TFYpywMy4DLQqVRy11I7SOLhxUFmqiEK52NaijWArIfCg6qG8q5eSiwRCJb1R7GDJG74TrYgx/lVq7w9++Kh929xSJEaoSse5fUOQg9nMAnIZv+7fwVRcNv3gOHI46Vb5jYUC66PYHO6lS+TOmvEQjuYmx4RkffYGxqZIp/DPWNHAixbRBc+XKE3JEOgs4jIwu/dSAwhydruOGF39co91aTs85JJ3Z/LpXoF43hUwJsb/M1Chzdn8HX8vLXnqWUKvRhNLpfAF4PTFqva1sBQG0J+59HyYfmQ3oa4/sxZdapVLlo/fooxSXi/dOEQWIWq8E0FkttEyTFXR2aNMPINMIzZwCNEheYTVltsdaLkMyKoEUluPNAYCM2IG3br0DLy0fVNWKHtbSKbBjfiw7Lu06gQFalC7RC9BwRMSpLYDUo9pDtDfzwUiPJKLJ2LGcSphWBadOI/iJjNqUHV7ucG8yC6+iNM9QYElqBR7ECFXrcTgWQ3eG/tCWacT9bxIkfmxPmi3vOd36KxihAJA73vWNJ+Y9oapXNscVSVqS5g15xOWND/WuUCcA9YAAg6WFbjHamrblZ5c0L6Zx1X58ZittGcfDKU697QRSqW/g+RofNRyvrWMrBn44cPvkRe2HdTu/Cq01C5/riWPHZyXPKHuSDDdW8c1XPgd6ogvLh20qEIu8c19sqr4ufyHrwh37ZN5MkvY1dsGmEz9pUBTxWrvvhNyODyX2Q1k/fbX/T/vbHNcBrmjgDtvBdtZrVtiIg5iXQuzO/DEMvRX8Mi1zymSlt92BGILeKItjoShJXE/H7xwnf0Iewb8BFieJ9MflEBCQYEDm8eZniiEPfGoaYiiEdhQxHQNr2AuRdmbL9mcl18Kumh+HEZLp6z+j35ML9zTbUwahUZCyQQOgQrGfdfQtaR/OYJ/9dYXb2TWZFMijfCA8Nov4sa5FFDUe1T68h4q08WDE7JbbDiej4utRMR9ontevxlXv6LuJTXt1YEv8bDzEt683PuSsIN0afvu0rcBu9AbXZbkOG3K3AhtqQ28N23lXm7S3Yn6KXmAhBhz+GeorJJ4XxO/b3vZk2LXp42+QvsVxGSNVpfSctIFMTR1bD9t70i6sfNF3WKz/uKDEDCpzzztwhL45lsw89H2IpWN10sXHRlhDse9KCdpP5qNNpU84cTY+aiqswqR8XZ9ea0KbVRwRuOGQU3csAtV2fSbnq47U6es6rKlWLWhg3s/B9C9g+oTyp6RtIldR51OOkP5/6nSy6itUVPcMNOp4M/hDdKOz3uK6srbdxOrc2cJgr1Sg02oBxxSky6V7JaG+ziNwlfqnjnvh2/uq1lKfbp+qpwq/D/5OI5gkFl5CejKGxfc2YVJfGqc4E0x5e9PHK2ukbHNI7/RZV6LNe65apbTGjoCaQls0txPPbmQbCQn+/upCoXRZy9yzorWJvZ0KWcbXlBxU/d5I4ERUTxMuVWhSMmF677LNN7NnLwsmKawXkCgbrpcluOl0WChR1qhtSrxGXHu251dEItYhYX3snvn1gS2uXuzdTxCJjZtjsip0iT2sDC0qMS7Bk9su2NyXjFK5/f5ZoWwofg3DtTyjaFqspnOOTSh8xK/CKUFS57guVEkw9xoQuRCwwEO9Lu9z2vYxSa9NFV8DvSxv2C4WYLYF8Nrc4DzWkzNsk81JJOlZ/LYJrGCoj4MmZpnf3AXmzxT4rtl9jsqljEyedz468SGKdBiQzyz/qWKEhFg45ZczlZZ3KGL3l6sn+3TTa3zMVMhPa1obGp/z+fvY0QXTrJTf1XAT3EtQdUfYYlmWZyvPZ/6rWwU7UOQei7pVE0osgN94Iy+T1+omE6z4Rh2O20FjgBeK2y1mcoFiMDOJvuZPn5Moy9fmFH3wyfKvn4+TwfLvt/lHTTVnvrtoUWRBiQXhiNM8nE6ZoWeux/Z0b2unRcdUzdDpmL7CAgd1ToRXwgmHTZOgiGtVT+xr1QH9ObebRTT4NzL+XSpLuuWp62GqQvJVTPoZOeJCb6gIwd9XHMftQ+Kc08IKKdKQANSJ1a2gve3JdRhO0+tNiYzWAZfd7isoeBu67W7xuK8WX7nhJURld98Inb0t/dWOSau/kDvV4DJo/cImw9AO2Gvq0F2n0M7yIZKL8amMbjYld+qFls7hq8Acvq97K2PrCaomuUiesu7qNanGupEl6J/iem8lyr/NMnsTr6o41PO0yhQh3hPFN0wJP7S830je9iTBLzUNgYH+gUZpROo3rN2qgCI+6GewpX8w8CH+ro6QrWiStqmcMzVa3vEel+3/dDxMp0rDv1Q6wTMS3K64zTT6RWzK1y643im25Ja7X2ePCV2mTswd/4jshZPo4bLnerqIosq/hy2bKUAmVn9n4oun1+a0DIZ56UhVwmZHdUNpLa8gmPvxS1eNvCF1T0wo1wKPdCJi0qOrWz7oYRTzgTtkzEzZn308XSLwUog4OWGKJzCn/3FfF9iA32dZHSv30pRCM3KBY9WZoRhtdK/ChHk6DEQBsfV6tN2o1Cn0mLtPBfnkS+qy1L2xfFe9TQPtDE1Be44RTl82E9hPT2rS2+93LFbzhQQO3C/hD2jRFH3BWWbasAfuMhRJFcTri73eE835y016s22DjoFJ862WvLj69fu2TgSF3RHia9D5DSitlQAXYCnbdqjPkR287Lh6dCHDapos+eFDvcZPP2edPmTFxznJE/EBLoQQ0Qmn9EkZOyJmHxMbvKYb8o21ZHmv5YLqgsEPk9gWZwYQY9wLqGXuax/8QlV5qDaPbq9pLPT1yp+zOWKmraEy1OUJI7zdEcEmvBpbdwLrDCgEb2xX8S/nxZgjK4bRi+pbOmbh8bEeoPvU/L9ndx9kntlDALbdAvp0O8ZC3zSUnFg4cePsw7jxewWvL7HRSBLUn6J7vTH9uld5N76JFPgBCdXGF221oEJk++XfRwXplLSyrVO7HFWBEs99nTazKveW3HpbD4dH/YmdAl+lwbSt8BQWyTG7jAsACI7bPPUU9hI9XUHWqQOuezHzUjnx5Qqs6T1qNHfTTHleDtmqK7flA9a0gz2nycIpz1FHBuWxKNtUeTdqP29Fb3tv+tl5JyBqXoR+vCsdzZwZUhf6Lu8bvkB9yQP4x7GGegB0ym0Lpl03Q7e+C0cDsm9GSDepCDji7nUslLyYyluPfvLyKaDSX4xpR+nVYQjQQn5F8KbY1gbIVLiK1J3mW90zTyR1bqApX2BlWh7KG8LAY9/S9nWC0XXh9pZZo6xuir12T43rkaGfQssbQyIslA7uJnSHOV22NhlNtUo0czxPAsXhh8tIQYaTM4l/yAlZlydTcXhlG22Gs/n3BxKBd/3ZjYwg3NaUurVXhNB+afVnFfNr9TbC9ksNdvwpNfeHanyJ8M6GrIVfLlYAPv0ILe4dn0Z+BJSbJkN7eZY/c6+6ttDYcIDeUKIDXqUSE42Xdh5nRbuaObozjht0HJ5H1e+em+NJi/+8kQlyjCbJpPckwThZeIF9/u7lrVIKNeJLCN/TpPAeXxvd31/CUDWHK9MuP1V1TJgngzi4V0qzS3SW3Qy5UiGHqg02wQa5tsEl9s/X9nNMosgLlUgZSfCBj1DiypLfhr9/r0nR0XY2tmhDOcUS4E7cqa4EJBhzqvpbZa35Q5Iz5EqmhYiOGDAYk606Tv74+KGfPjKVuP15rIzgW0I7/niOu9el/sn2bRye0gV+GrePDRDMHjwO1lEdeXH8N+UTO3IoN18kpI3tPxz+fY+n2MGMSGFHAx/83tKeJOl+2i+f1O9v6FfEDBbqrw+lpM8Anav7zHNr7hE78nXUtPNodMbCnITWA7Ma/IHlZ50F9hWge/wzOvSbtqFVFtkS8Of2nssjZwbSFdU+VO8z6tCEc9UA9ACxT5zIUeSrkBB/v1krOpm7bVMrGxEKfI6LcnpB4D8bvn2hDKGqKrJaVAJuDaBEY3F7eXyqnFWlOoFV/8ZLspZiZd7orXLhd4mhHQgbuKbHjJWUzrnm0Dxw/LJLzXCkh7slMxKo8uxZIWZfdKHlfI7uj3LP6ARAuWdF7ZmZ7daOKqKGbz5LxOggTgS39oEioYmrqkCeUDvbxkBYKeHhcLmMN8dMF01ZMb32IpL/cH8R7VHQSI5I0YfL14g9d7P/6cjB1JXXxbozEDbsrPdmL8ph7QW10jio+v7YsqHKQ6xrBbOVtxU0/nFfzUGZwIBLwyUvg49ii+54nv9FyECBpURnQK4Ox6N7lw5fsjdd5l/2SwBcAHMJoyjO1Pifye2dagaOwCVMqdJWAo77pvBe0zdJcTWu5fdzPNfV2p1pc7/JKQ8zhKkwsOELUDhXygPJ5oR8Vpk2lsCen3D3QOQp2zdrSZHjVBstDF/wWO98rrkQ6/7zt/Drip7OHIug1lomNdmRaHRrjmqeodn22sesQQPgzimPOMqC60a5+i/UYh51uZm+ijWkkaI2xjrBO2558DZNZMiuDQlaVAvBy2wLn/bR3FrNzfnO/9oDztYqxZrr7JMIhqmrochbqmQnKowxW29bpqTaJu7kW1VotC72QkYX8OoDDdMDwV1kJRk3mufgJBzf+iwFRJ7XWQwO5ujVglgFgHtycWiMLx5N+6XU+TulLabWjOzoao03fniUW0xvIJNPbk7CQlFZd/RCOPvgQbLjh5ITE8NVJeKt3HGr6JTnFdIzcVOlEtwqbIIX0IM7saC+4N5047MTJ9+Wn11EhyEPIlwsHE5utCeXRjQzlrR+R1Cf/qDzcNbqLXdk3J7gQ39VUrrEkS/VMWjjg+t2oYrqB0tUZClcUF6+LBC3EQ7KnGIwm/qjZX4GKPtjTX1zQKV6nPAb2t/Rza5IqKRf8i2DFEhV/YSifX0YwsiF6TQnp48Gr65TFq0zUe6LGjiY7fq0LSGKL1VnC6ESI2yxvt3XqBx53B3gSlGFeJcPbUbonW1E9E9m4NfuwPh+t5QjRxX34lvBPVxwQd7aeTd+r9dw5CiP1pt8wMZoMdni7GapYdo6KPgeQKcmlFfq4UYhvV0IBgeiR3RnTMBaqDqpZrTRyLdsp4l0IXZTdErfH0sN3dqBG5vRIx3VgCYcHmmkqJ8Hyu3s9K9uBD1d8cZUEx3qYcF5vsqeRpF1GOg8emeWM2OmBlWPdZ6qAXwm3nENFyh+kvXk132PfWAlN0kb7yh4fz2T7VWUY/hEXX5DvxGABC03XRpyOG8t/u3Gh5tZdpsSV9AWaxJN7zwhVglgII1gV28tUViyqn4UMdIh5t+Ea2zo7PO48oba0TwQbiSZOH4YhD578kPF3reuaP7LujPMsjHmaDuId9XEaZBCJhbXJbRg5VCk3KJpryH/+8S3wdhR47pdFcmpZG2p0Bpjp/VbvalgIZMllYX5L31aMPdt1J7r/7wbixt0Mnz2ZvNGTARHPVD+2O1D8SGpWXlVnP2ekgon55YiinADDynyaXtZDXueVqbuTi8z8cHHK325pgqM+mWZwzHeEreMvhZopAScXM14SJHpGwZyRljMlDvcMm9FZ/1e9+r/puOnpXOtc9Iu2fmgBfEP9cGW1Fzb1rGlfJ08pACtq1ZW18bf2cevebzVeHbaA50G9qoUp39JWdPHbYkPCRXjt4gzlq3Cxge28Mky8MoS/+On72kc+ZI2xBtgJytpAQHQ1zrEddMIVyR5urX6yBNu8v5lKC8eLdGKTJtbgIZ3ZyTzSfWmx9f+cvcJe8yM39K/djkp2aUTE/9m2Lj5jg7b8vdRAer7DO3SyLNHs1CAm5x5iAdh2yGJYivArZbCBNY88Tw+w+C1Tbt7wK3zl2rzTHo/D8/gb3c3mYrnEIEipYqPUcdWjnTsSw471O3EUN7Gtg4NOAs9PJrxm03VuZKa5xwXAYCjt7Gs01Km6T2DhOYUMoFcCSu7Hk1p3yP1eG+M3v3Q5luAze6WwBnZIYO0TCucPWK+UJ36KoJ8Y+vpavhLO8g5ed704IjlQdfemrMu//EvPYXTQSGIPPfiagJS9nMqP5IvkxN9pvuJz7h8carPXTKMq8jnTeL0STan6dnLTAqwIswcIwWDR2KwbGddAVN8SYWRB7kfBfBRkSXzvHlIF8D6jo64kUzYk5o/n8oLjKqat0rdXvQ86MkwQGMnnlcasqPPT2+mVtUGb32KuH6cyZQenrRG11TArcAl27+nvOMBDe++EKHf4YdyGf7mznzOz33cFFGEcv329p4qG2hoaQ8ULiMyVz6ENcxhoqGnFIdupcn7GICQWuw3yO3W8S33mzCcMYJ8ywc7U7rmaQf/W5K63Gr4bVTpXOyOp4tbaPyIaatBNpXqlmQUTSZXjxPr19+73PSaT+QnI35YsWn6WpfJjRtK8vlJZoTSgjaRU39AGCkWOZtifJrnefCrqwTKDFmuWUCukEsYcRrMzCoit28wYpP7kSVjMD8WJYQiNc2blMjuqYegmf6SsfC1jqz8XzghMlOX+gn/MKZmgljszrmehEa4V98VreJDxYvHr3j7IeJB9/sBZV41BWT/AZAjuC5XorlIPnZgBAniBEhanp0/0+qZmEWDpu8ige1hUPIyTo6T6gDEcFhWSoduNh8YSu65KgMOGBw7VlNYzNIgwHtq9KP2yyTVysqX5v12sf7D+vQUdR2dRDvCV40rIInXSLWT/yrC6ExOQxBJwIDbeZcl3z1yR5Rj3l8IGpxspapnvBL+fwupA3b6fkFceID9wgiM1ILB0cHVdvo/R4xg8yqKXT8efl0GnGX1/27FUYeUW2L/GNRGGWVGp3i91oaJkb4rybENHre9a2P5viz/yqk8ngWUUS+Kv+fu+9BLFnfLiLXOFcIeBJLhnayCiuDRSqcx0Qu68gVsGYc6EHD500Fkt+gpDj6gvr884n8wZ5o6q7xtL5wA0beXQnffWYkZrs2NGIRgQbsc5NB302SVx+R4ROvmgZaR8wBcji128BMfJ9kcvJ4DC+bQ57kRmv5yxgU4ngZfn0/JNZ8JBwxjTqS+s9kjJFG1unGUGLwMiIuXUD9EFhNIJuyCEAmVZSIGKH4G6v1gRR1LyzQKH2ZqiI1DnHMoDEZspbDjTeaFIAbSvjSq3A+n46y9hhVM8wIpnARSXyzmOD96d9UXvFroSPgGw1dq2vdEqDq9fJN1EbL2WulNmHkFDvxSO9ZT/RX/Bw2gA/BrF90XrJACereVfbV/YXaKfp77Nmx5NjEIUlxojsy7iN7nBHSZigfsbFyVOX1ZTeCCxvqnRSExP4lk5ZeYlRu9caaa743TWNdchRIhEWwadsBIe245C8clpaZ4zrPsk+OwXzxWCvRRumyNSLW5KWaSJyJU95cwheK76gr7228spZ3hmTtLyrfM2QRFqZFMR8/Q6yWfVgwTdfX2Ry4w3+eAO/5VT5nFb5NlzXPvBEAWrNZ6Q3jbH0RF4vcbp+fDngf/ywpoyNQtjrfvcq93AVb1RDWRghvyqgI2BkMr1rwYi8gizZ0G9GmPpMeqPerAQ0dJbzx+KAFM4IBq6iSLpZHUroeyfd9o5o+4fR2EtsZBoJORQEA4SW0CmeXSnblx2e9QkCHIodyqV6+g5ETEpZsLqnd/Na60EKPX/tQpPEcO+COIBPcQdszDzSiHGyQFPly/7KciUh1u+mFfxTCHGv9nn2WqndGgeGjQ/kr02qmTBX7Hc1qiEvgiSz1Tz/sy7Es29wvn6FrDGPP7asXlhOaiHxOctPvTptFA1kHFUk8bME7SsTSnGbFbUrssxrq70LhoSh5OwvQna+w84XdXhZb2sloJ4ZsCg3j+PrjJL08/JBi5zGd6ud/ZxhmcGKLOXPcNunQq5ESW92iJvfsuRrNYtawWwSmNhPYoFj2QqWNF0ffLpGt/ad24RJ8vkb5sXkpyKXmvFG5Vcdzf/44k3PBL/ojJ52+kWGzOArnyp5f969oV3J2c4Li27Nkova9VwRNVKqN0V+gV+mTHitgkXV30aWd3A1RSildEleiNPA+5cp+3+T7X+xfHiRZXQ1s4FA9TxIcnveQs9JSZ5r5qNmgqlW4zMtZ6rYNvgmyVcywKtu8ZxnSbS5vXlBV+NXdIfi3+xzrnJ0TkFL+Un8v1PWOC2PPFCjVPq7qTH7mOpzOYj/b4h0ceT+eHgr97Jqhb1ziVfeANzfN8bFUhPKBi7hJBCukQnB0aGjFTYLJPXL26lQ2b80xrOD5cFWgA8hz3St0e69kwNnD3+nX3gy12FjrjO+ddRvvvfyV3SWbXcxqNHfmsb9u1TV+wHTb9B07/L2sB8WUHJ9eeNomDyysEWZ0deqEhH/oWI2oiEh526gvAK1Nx2kIhNvkYR+tPYHEa9j+nd1VBpQP1uzSjIDO+fDDB7uy029rRjDC5Sk6aKczyz1D5uA9Lu+Rrrapl8JXNL3VRllNQH2K1ZFxOpX8LprttfqQ56MbPM0IttUheXWD/mROOeFqGUbL+kUOVlXLTFX/525g4faLEFO4qWWdmOXMNvVjpIVTWt650HfQjX9oT3Dg5Au6+v1/Ci78La6ZOngYCFPT1AUwxQuZ0yt5xKdNXLaDTISMTeCj16XTryhM36K2mfGRIgot71voWs8tTpL/f1rvcwv3LSDf+/G8THCT7NpfHWcW+lsF/ol8q9Bi6MezNTqp0rpp/kJRiVfNrX/w27cRRTu8RIIqtUblBMkxy4jwAVqCjUJkiPBj2cAoVloG8B2/N5deLdMhDb7xs5nhd3dubJhuj8WbaFRyu1L678DHhhA+rMimNo4C1kGpp0tD/qnCfCFHejpf0LJX43OTr578PY0tnIIrlWyNYyuR/ie6j2xNb1OV6u0dOX/1Dtcd7+ya9W+rY2LmnyQMtk8SMLTon8RAdwOaN2tNg5zVnDKlmVeOxPV2vhHIo9QEPV7jc3f+zVDquiNg1OaHX3cZXJDRY5MJpo+VanAcmqp4oasYLG+wrXUL5vJU0kqk2hGEskhP+Jjigrz1l6QnEwp6n8PMVeJp70Ii6ppeaK9GhF6fJE00ceLyxv08tKiPat4QdxZFgSbQknnEiCLD8Qc1rjazVKM3r3gXnnMeONgdz/yFV1q+haaN+wnF3Fn4uYCI9XsKOuVwDD0LsCO/f0gj5cmxCFcr7sclIcefWjvore+3aSU474cyqDVxH7w1RX3CHsaqsMRX17ZLgjsDXws3kLm2XJdM3Ku383UXqaHqsywzPhx7NFir0Fqjym/w6cxD2U9ypa3dx7Z12w/fi3Jps8sqJ8f8Ah8aZAvkHXvIRyrsxK7rrFaNNdNvjI8+3Emri195DCNa858anj2Qdny6Czshkn4N2+1m+k5S8sunX3Ja7I+JutRzg1mc2e9Yc0Zv9PZn1SwhxIdU9sXwZRTd/J5FoUm0e+PYREeHg3oc2YYzGf2xfJxXExt4pT3RfDRHvMXLUmoXOy63xv5pLuhOEax0dRgSywZ/GH+YBXFgCeTU0hZ8SPEFsn8punp1Kurd1KgXxUZ+la3R5+4ePGR4ZF5UQtOa83+Vj8zh80dfzbhxWCeoJnQ4dkZJM4drzknZOOKx2n3WrvJnzFIS8p0xeic+M3ZRVXIp10tV2DyYKwRxLzulPwzHcLlYTxl4PF7v8l106Azr+6wBFejbq/3P72C/0j78cepY9990/d4eAurn2lqdGKLU8FffnMw7cY7pVeXJRMU73Oxwi2g2vh/+4gX8dvbjfojn/eLVhhYl8GthwCQ50KcZq4z2JeW5eeOnJWFQEnVxDoG459TaC4zXybECEoJ0V5q1tXrQbDMtUxeTV6Pdt1/zJuc7TJoV/9YZFWxUtCf6Ou3Vd/vR/vG0138hJQrHkNeoep5dLe+6umcSquKvMaFpm3EZHDBOvCi0XYyIFHMgX7Cqp3JVXlxJFwQfHSaIUEbI2u1lBVUdlNw4Qa9UsLPEK94Qiln3pyKxQVCeNlx8yd7EegVNQBkFLabKvnietYVB4IPZ1fSor82arbgYec8aSdFMaIluYTYuNx32SxfrjKUdPGq+UNp5YpydoEG3xVLixtmHO9zXxKAnHnPuH2fPGrjx0GcuCDEU+yXUtXh6nfUL+cykws1gJ5vkfYFaFBr9PdCXvVf35OJQxzUMmWjv0W6uGJK11uAGDqSpOwCf6rouSIjPVgw57cJCOQ4b9tkI/Y5WNon9Swe72aZryKo8d+HyHBEdWJKrkary0LIGczA4Irq353Wc0Zga3om7UQiAGCvIl8GGyaqz5zH+1gMP5phWUCpKtttWIyicz09vXg76GxkmiGSMQ06Z9X8BUwqOtauDbPIf4rpK/yYoeAHxJ9soXS9VDe1Aw+awOOxaN8foLrif0TXBvQ55dtRtulRq9emFDBxlQcqKCaD8NeTSE7FOHvcjf/+oKbbtRqz9gbofoc2EzQ3pL6W5JdfJzAWmOk8oeoECe90lVMruwl/ltM015P/zIPazqvdvFmLNVHMIZrwiQ2tIKtGh6PDVH+85ew3caqVt2BsDv5rOcu3G9srQWd7NmgtzCRUXLYknYRSwtH9oUtkqyN3CfP20xQ1faXQl4MEmjQehWR6GmGnkdpYNQYeIG408yAX7uCZmYUic9juOfb+Re28+OVOB+scYK4DaPcBe+5wmji9gymtkMpKo4UKqCz7yxzuN8VIlx9yNozpRJpNaWHtaZVEqP45n2JemTlYBSmNIK1FuSYAUQ1yBLnKxevrjayd+h2i8PjdB3YY6b0nr3JuOXGpPMyh4V2dslpR3DFEvgpsBLqhqLDOWP4yEvIL6f21PpA7/8B"));
const $747425b437e121da$var$log2 = Math.log2 || ((n)=>Math.log(n) / Math.LN2);
const $747425b437e121da$var$bits = (n)=>$747425b437e121da$var$log2(n) + 1 | 0;
// compute the number of bits stored for each field
const $747425b437e121da$var$CATEGORY_BITS = $747425b437e121da$var$bits((0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).categories.length - 1);
const $747425b437e121da$var$COMBINING_BITS = $747425b437e121da$var$bits((0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).combiningClasses.length - 1);
const $747425b437e121da$var$SCRIPT_BITS = $747425b437e121da$var$bits((0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).scripts.length - 1);
const $747425b437e121da$var$EAW_BITS = $747425b437e121da$var$bits((0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).eaw.length - 1);
const $747425b437e121da$var$NUMBER_BITS = 10;
// compute shift and mask values for each field
const $747425b437e121da$var$CATEGORY_SHIFT = $747425b437e121da$var$COMBINING_BITS + $747425b437e121da$var$SCRIPT_BITS + $747425b437e121da$var$EAW_BITS + $747425b437e121da$var$NUMBER_BITS;
const $747425b437e121da$var$COMBINING_SHIFT = $747425b437e121da$var$SCRIPT_BITS + $747425b437e121da$var$EAW_BITS + $747425b437e121da$var$NUMBER_BITS;
const $747425b437e121da$var$SCRIPT_SHIFT = $747425b437e121da$var$EAW_BITS + $747425b437e121da$var$NUMBER_BITS;
const $747425b437e121da$var$EAW_SHIFT = $747425b437e121da$var$NUMBER_BITS;
const $747425b437e121da$var$CATEGORY_MASK = (1 << $747425b437e121da$var$CATEGORY_BITS) - 1;
const $747425b437e121da$var$COMBINING_MASK = (1 << $747425b437e121da$var$COMBINING_BITS) - 1;
const $747425b437e121da$var$SCRIPT_MASK = (1 << $747425b437e121da$var$SCRIPT_BITS) - 1;
const $747425b437e121da$var$EAW_MASK = (1 << $747425b437e121da$var$EAW_BITS) - 1;
const $747425b437e121da$var$NUMBER_MASK = (1 << $747425b437e121da$var$NUMBER_BITS) - 1;
function $747425b437e121da$export$410364bbb673ddbc(codePoint) {
    const val = $747425b437e121da$var$trie.get(codePoint);
    return (0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).categories[val >> $747425b437e121da$var$CATEGORY_SHIFT & $747425b437e121da$var$CATEGORY_MASK];
}
function $747425b437e121da$export$c03b919c6651ed55(codePoint) {
    const val = $747425b437e121da$var$trie.get(codePoint);
    return (0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).combiningClasses[val >> $747425b437e121da$var$COMBINING_SHIFT & $747425b437e121da$var$COMBINING_MASK];
}
function $747425b437e121da$export$941569448d136665(codePoint) {
    const val = $747425b437e121da$var$trie.get(codePoint);
    return (0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).scripts[val >> $747425b437e121da$var$SCRIPT_SHIFT & $747425b437e121da$var$SCRIPT_MASK];
}
function $747425b437e121da$export$92f6187db8ca6d26(codePoint) {
    const val = $747425b437e121da$var$trie.get(codePoint);
    return (0, (/*@__PURE__*/$parcel$interopDefault($f4087201da764553$exports))).eaw[val >> $747425b437e121da$var$EAW_SHIFT & $747425b437e121da$var$EAW_MASK];
}
function $747425b437e121da$export$7d1258ebb7625a0d(codePoint) {
    let val = $747425b437e121da$var$trie.get(codePoint);
    let num = val & $747425b437e121da$var$NUMBER_MASK;
    if (num === 0) return null;
    else if (num <= 50) return num - 1;
    else if (num < 0x1e0) {
        const numerator = (num >> 4) - 12;
        const denominator = (num & 0xf) + 1;
        return numerator / denominator;
    } else if (num < 0x300) {
        val = (num >> 5) - 14;
        let exp = (num & 0x1f) + 2;
        while(exp > 0){
            val *= 10;
            exp--;
        }
        return val;
    } else {
        val = (num >> 2) - 0xbf;
        let exp = (num & 3) + 1;
        while(exp > 0){
            val *= 60;
            exp--;
        }
        return val;
    }
}
function $747425b437e121da$export$52c8ea63abd07594(codePoint) {
    const category = $747425b437e121da$export$410364bbb673ddbc(codePoint);
    return category === "Lu" || category === "Ll" || category === "Lt" || category === "Lm" || category === "Lo" || category === "Nl";
}
function $747425b437e121da$export$727d9dbc4fbb948f(codePoint) {
    return $747425b437e121da$export$410364bbb673ddbc(codePoint) === "Nd";
}
function $747425b437e121da$export$a5b49f4dc6a07d2c(codePoint) {
    const category = $747425b437e121da$export$410364bbb673ddbc(codePoint);
    return category === "Pc" || category === "Pd" || category === "Pe" || category === "Pf" || category === "Pi" || category === "Po" || category === "Ps";
}
function $747425b437e121da$export$7b6804e8df61fcf5(codePoint) {
    return $747425b437e121da$export$410364bbb673ddbc(codePoint) === "Ll";
}
function $747425b437e121da$export$aebd617640818cda(codePoint) {
    return $747425b437e121da$export$410364bbb673ddbc(codePoint) === "Lu";
}
function $747425b437e121da$export$de8b4ee23b2cf823(codePoint) {
    return $747425b437e121da$export$410364bbb673ddbc(codePoint) === "Lt";
}
function $747425b437e121da$export$3c52dd84024ae72c(codePoint) {
    const category = $747425b437e121da$export$410364bbb673ddbc(codePoint);
    return category === "Zs" || category === "Zl" || category === "Zp";
}
function $747425b437e121da$export$a11bdcffe109e74b(codePoint) {
    const category = $747425b437e121da$export$410364bbb673ddbc(codePoint);
    return category === "Nd" || category === "No" || category === "Nl" || category === "Lu" || category === "Ll" || category === "Lt" || category === "Lm" || category === "Lo" || category === "Me" || category === "Mc";
}
function $747425b437e121da$export$e33ad6871e762338(codePoint) {
    const category = $747425b437e121da$export$410364bbb673ddbc(codePoint);
    return category === "Mn" || category === "Me" || category === "Mc";
}
var // Backwards compatibility.
$747425b437e121da$export$2e2bcd8739ae039 = {
    getCategory: $747425b437e121da$export$410364bbb673ddbc,
    getCombiningClass: $747425b437e121da$export$c03b919c6651ed55,
    getScript: $747425b437e121da$export$941569448d136665,
    getEastAsianWidth: $747425b437e121da$export$92f6187db8ca6d26,
    getNumericValue: $747425b437e121da$export$7d1258ebb7625a0d,
    isAlphabetic: $747425b437e121da$export$52c8ea63abd07594,
    isDigit: $747425b437e121da$export$727d9dbc4fbb948f,
    isPunctuation: $747425b437e121da$export$a5b49f4dc6a07d2c,
    isLowerCase: $747425b437e121da$export$7b6804e8df61fcf5,
    isUpperCase: $747425b437e121da$export$aebd617640818cda,
    isTitleCase: $747425b437e121da$export$de8b4ee23b2cf823,
    isWhiteSpace: $747425b437e121da$export$3c52dd84024ae72c,
    isBaseForm: $747425b437e121da$export$a11bdcffe109e74b,
    isMark: $747425b437e121da$export$e33ad6871e762338
};



//# sourceMappingURL=module.mjs.map


//# sourceURL=webpack://cytoscape-pdf-export/./node_modules/unicode-properties/dist/module.mjs?`)}},__webpack_module_cache__={};function __webpack_require__(t){var e=__webpack_module_cache__[t];if(e!==void 0)return e.exports;var n=__webpack_module_cache__[t]={exports:{}};return __webpack_modules__[t].call(n.exports,n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return __webpack_require__.d(e,{a:e}),e},__webpack_require__.d=(t,e)=>{for(var n in e)__webpack_require__.o(e,n)&&!__webpack_require__.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},__webpack_require__.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch{if(typeof window=="object")return window}}(),__webpack_require__.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),__webpack_require__.r=t=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/pdf-export.js");module.exports=__webpack_exports__})()});var Fc=(t,e)=>e.id;function Fp(t,e){if(t&1){let n=Ye();j(0,"mat-chip-row",15),ge("removed",function(){let a=we(n).$implicit,i=ue();return Oe(i.removeTag(a))}),ie(1),j(2,"button",16)(3,"mat-icon"),ie(4,"cancel"),G()()()}if(t&2){let n=e.$implicit;Ke("removable",!0),ae(),sn(" ",n.name," "),ae(),W0("aria-label","remove "+n.name)}}function jp(t,e){if(t&1&&(j(0,"mat-option",13),ie(1),G()),t&2){let n=e.$implicit;Ke("value",n),ae(),sn(" ",n.name," ")}}function Yp(t,e){if(t&1&&(j(0,"mat-list-option",13),ie(1),G()),t&2){let n=e.$implicit;Ke("value",n),ae(),sn(" ",n.title," ")}}function zp(t,e){if(t&1){let n=Ye();j(0,"mat-selection-list",17),Xt("ngModelChange",function(a){we(n);let i=ue();return yt(i.selectedCollate,a)||(i.selectedCollate=a),Oe(a)}),ge("selectionChange",function(a){we(n);let i=ue();return Oe(i.onCollateSelect(a))}),nn(1,Yp,2,2,"mat-list-option",13,Fc),G(),j(3,"mat-paginator",18),ge("page",function(a){we(n);let i=ue();return Oe(i.handlePageEvent(a))}),G()}if(t&2){let n=ue();bt("ngModel",n.selectedCollate),Ke("multiple",!1),ae(),tn(n.collates),ae(2),Ke("length",n.totalCount)("pageSize",n.limit)}}function Vp(t,e){t&1&&(j(0,"p"),ie(1,"No collates could be found."),G())}var hu=(()=>{class t{constructor(n,r,a,i,o){this.snackBar=n,this.fb=r,this.router=a,this.collateService=i,this.dialog=o,this.collates=[],this.searchTags=[],this.selectedCollate=null,this.searchTerm="",this.limit=5,this.offset=0,this.totalCount=0,this.separatorKeysCodes=[13,188],this.form=this.fb.group({tag:[""]}),this.loading=!1}ngOnInit(){this.searchCollates(),this.filteredTags=this.form.controls.tag.valueChanges.pipe(Oo(""),wo(n=>n?n.length>=2:!1),Aa(n=>this.collateService.getCollateTags(n).pipe(Eo(r=>r.results))))}searchCollates(){this.loading=!0,this.collateService.getCollates(this.limit,this.offset,this.searchTerm,this.searchTags.map(n=>n.id)).subscribe({next:n=>{this.collates=n.results,this.totalCount=n.count,this.loading=!1},error:()=>{this.loading=!1,this.snackBar.open("Error loading collates","Dismiss")}})}onCollateSelect(n){this.selectedCollate=n.options[0].value,this.router.navigate([`/collate/view/${n.options[0].value.id}`]).then(r=>console.log(r))}openCreateCollateDialog(){this.dialog.open(su).afterClosed().subscribe(r=>{r&&this.collateService.createCollate(r.title,r.greeting).subscribe(a=>{this.router.navigate([`/collate/edit/${a.id}`]).then(i=>console.log(i))})})}handlePageEvent(n){this.limit=n.pageSize,this.offset=n.pageIndex*this.limit,this.searchCollates()}addTag(n){let r=n.option.value;r&&!this.searchTags.find(a=>a.id===r.id)&&this.searchTags.push(r),this.form.controls.tag.setValue(""),this.searchCollates()}removeTag(n){let r=this.searchTags.indexOf(n);r>=0&&this.searchTags.splice(r,1),this.searchCollates()}static{this.\u0275fac=function(r){return new(r||t)(Be(Ut),Be(Nn),Be(ka),Be(Zt),Be(Cr))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate"]],decls:33,vars:8,consts:[["chipGrid",""],["auto","matAutocomplete"],[1,"collate-container"],[1,"header-container",2,"display","flex","flex-direction","row","justify-content","center","align-items","center","height","200px"],[1,"header",2,"text-align","center","font-family","Roboto, Helvetica Neue, sans-serif"],[1,"search-box"],["mat-button","",2,"width","100%",3,"click"],["appearance","outlined",2,"width","500px"],[2,"width","100%"],["matInput","","placeholder","Search Collates",3,"ngModelChange","ngModel"],[3,"removable"],[3,"matChipInputFor","matChipInputSeparatorKeyCodes","formControl","matAutocomplete"],[3,"optionSelected"],[3,"value"],["mat-raised-button","","color","primary",3,"click"],[3,"removed","removable"],["matChipRemove",""],[3,"ngModelChange","selectionChange","ngModel","multiple"],[3,"page","length","pageSize"]],template:function(r,a){if(r&1){let i=Ye();j(0,"div",2)(1,"div",3)(2,"div",4)(3,"h1"),ie(4,"C|nder Collates"),G(),Ne(5,"br"),G()(),j(6,"div",5)(7,"div")(8,"button",6),ge("click",function(){return we(i),Oe(a.openCreateCollateDialog())}),j(9,"h3"),ie(10,"+ Create Collate From Projects"),G()()(),Ne(11,"hr"),j(12,"mat-card",7)(13,"mat-card-content")(14,"mat-form-field",8)(15,"input",9),Xt("ngModelChange",function(s){return we(i),yt(a.searchTerm,s)||(a.searchTerm=s),Oe(s)}),ge("ngModelChange",function(){return we(i),Oe(a.searchCollates())}),G()(),j(16,"mat-form-field",8)(17,"mat-label"),ie(18,"Search Tags"),G(),j(19,"mat-chip-grid",null,0),nn(21,Fp,5,3,"mat-chip-row",10,Fc),Ne(23,"input",11),G(),j(24,"mat-autocomplete",12,1),ge("optionSelected",function(s){return we(i),Oe(a.addTag(s))}),nn(26,jp,2,2,"mat-option",13,Fc),Oa(28,"async"),G()(),j(29,"button",14),ge("click",function(){return we(i),Oe(a.searchCollates())}),ie(30,"Search"),G(),We(31,zp,4,4)(32,Vp,2,0,"p"),G()()()()}if(r&2){let i=nt(20),o=nt(25);ae(15),bt("ngModel",a.searchTerm),ae(6),tn(a.searchTags),ae(2),Ke("matChipInputFor",i)("matChipInputSeparatorKeyCodes",a.separatorKeysCodes)("formControl",a.form.controls.tag)("matAutocomplete",o),ae(3),tn(Ta(28,6,a.filteredTags)),ae(5),je(a.collates.length>0?31:32)}},dependencies:[Mn,wr,Vn,An,Er,Jn,Lo,Io,lt,$a,Da,vn,Uo,ot,Fo,ou,iu,au,kt,Na,Ba,Gn,Q0,Ma],styles:[".collate-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;height:80vh}.search-box[_ngcontent-%COMP%]{width:500px}"]})}}return t})();var pu=(()=>{class t{constructor(){this.collate=null}static{this.\u0275fac=function(r){return new(r||t)}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-header"]],inputs:{collate:"collate"},decls:7,vars:2,consts:[[1,"header-container",2,"display","flex","flex-direction","row","justify-content","center","align-items","center","height","200px"],[1,"header",2,"text-align","center","font-family","Roboto, Helvetica Neue, sans-serif"],[2,"font-size","25px","font-family","'Roboto', 'Arial Narrow', sans-serif"]],template:function(r,a){r&1&&(j(0,"div",0)(1,"div",1)(2,"h1"),ie(3),G(),Ne(4,"br"),j(5,"div",2),ie(6),G()()()),r&2&&(ae(3),dn(a.collate==null?null:a.collate.title),ae(3),dn(a.collate==null?null:a.collate.greeting))},styles:["mat-card[_ngcontent-%COMP%]{margin:20px}@keyframes _ngcontent-%COMP%_fadeIn{0%{opacity:0}to{opacity:1}}.header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{opacity:0;animation:_ngcontent-%COMP%_fadeIn 2s ease-in-out forwards}"]})}}return t})();function Hp(t,e){if(t&1&&(j(0,"p"),ie(1),Ne(2,"br"),ie(3),G(),Ne(4,"mat-progress-bar",8)),t&2){let n=ue();ae(),sn("Elapsed Time: ",n.elapsedTime," seconds"),ae(2),sn(" ",n.progress," ")}}var ds=(()=>{class t{constructor(n,r,a,i,o){this.snackBar=n,this.ws=r,this.fb=a,this.web=i,this.sb=o,this.projects=[],this.loading=!1,this.searchStartTime=null,this.elapsedTime="0.00",this.progress="",this.form=this.fb.group({searchQuery:new Lt("",It.required),searchMode:new Lt("gene",It.required)}),this.searchResultID=new xn,this.ws.searchWSConnection?.subscribe(s=>{if(s&&s.type==="search_status")switch(s.status){case"complete":this.loading=!1,clearInterval(this.timerInterval);let l=this.calculateElapsedTime();this.progress="",this.showSnackBar(`Search complete in ${l} seconds`),this.searchResultID.emit(parseInt(s.id));break;case"in_progress":this.progress=`Current progress: ${s.current_progress}/${s.found_files}`;break;case"error":this.loading=!1,this.progress="Search error",this.showSnackBar("Search error");break}})}runSearch(){return Xn(this,null,function*(){if(this.form.invalid)return;this.loading=!0,this.progress="Current progress: search initiated",this.searchStartTime=new Date,this.elapsedTime="0.00",this.timerInterval=setInterval(()=>{this.elapsedTime=this.calculateElapsedTime().toFixed(2)},200);let n=[];if(this.projects.length>0){let r=yield this.web.getAnalysisGroupsFromProjects(this.projects).toPromise();if(r)for(let a of r)n.push(a.id)}if(this.form.value.searchQuery&&this.form.value.searchMode){let a=this.form.value.searchQuery.toUpperCase().split("OR").map(i=>`"${i.trim().replace(/'/g,"").replace(/"/g,"")}"`);this.web.createSearch(n,a.join(" OR "),this.web.searchSessionID,1e-9,1e-9,this.form.value.searchMode).subscribe({next:()=>{this.sb.open("Search queued","Dismiss",{duration:2e3})},error:()=>{this.loading=!1,clearInterval(this.timerInterval),this.showSnackBar("Search error")}})}})}showSnackBar(n){this.snackBar.open(n,"Close",{duration:3e3})}calculateElapsedTime(){return this.searchStartTime?(new Date().getTime()-this.searchStartTime.getTime())/1e3:0}static{this.\u0275fac=function(r){return new(r||t)(Be(Ut),Be(zo),Be(Nn),Be(Zn),Be(Ut))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-search"]],inputs:{projects:"projects"},outputs:{searchResultID:"searchResultID"},decls:22,vars:2,consts:[["appearance","outlined"],[2,"display","flex","gap","20px","align-items","center",3,"ngSubmit","formGroup"],[2,"width","500px"],["matInput","","placeholder","Search Query","formControlName","searchQuery"],["formControlName","searchMode"],["value","pi"],["value","gene"],["mat-icon-button","","color","primary","type","submit"],["mode","indeterminate"]],template:function(r,a){r&1&&(j(0,"mat-card",0)(1,"mat-card-content")(2,"form",1),ge("ngSubmit",function(){return a.runSearch()}),j(3,"mat-form-field",2),Ne(4,"input",3),G(),j(5,"mat-form-field")(6,"mat-label"),ie(7,"Search Mode"),G(),j(8,"mat-select",4)(9,"mat-option",5),ie(10,"Primary Ids"),G(),j(11,"mat-option",6),ie(12,"Gene Names"),G()()(),j(13,"button",7)(14,"mat-icon"),ie(15,"search"),G()()(),j(16,"p"),ie(17," For multiple search terms separate them with "),j(18,"b"),ie(19,"OR"),G(),ie(20,". "),G(),We(21,Hp,5,2),G()()),r&2&&(ae(2),Ke("formGroup",a.form),ae(19),je(a.loading?21:-1))},dependencies:[Jn,Gn,Hn,Vn,An,qn,st,ct,Mn,Jt,ot,$a,Da,kt,Or,lt,cu],encapsulation:2})}}return t})();var Jp=Ki(Up());Uc.plotlyjs=Jp;var mu=(()=>{class t{set searchTerm(n){n?this._searchTerm=n:this._searchTerm=""}get searchTerm(){return this._searchTerm}set renameCondition(n){n?this._renameCondition=n:this._renameCondition={}}get renameCondition(){return this._renameCondition}set data(n){this._data=n,this.graphLayout.title.text=n?.analysis_group?.name||"",this.graphLayout.yaxis.title=this.searchTerm||"",this.conditionA=n?.condition_A||"",this.conditionB=n?.condition_B||"",this.drawGraph()}get data(){return this._data}set expanded(n){this._expanded=n,this.data&&this.drawGraph()}get expanded(){return this._expanded}set colorMap(n){n&&(this._colorMap=n,this.data&&n&&this.drawGraph())}get colorMap(){return this._colorMap}constructor(n,r){this.graph=n,this.accounts=r,this._data=null,this._renameCondition={},this._searchTerm="",this._expanded=!1,this.graphData=[],this.graphLayout={title:{text:"",font:{size:16}},height:400,margin:{l:150,r:100,b:100,t:100},yaxis:{title:this.searchTerm,tickfont:{size:14}}},this.conditionA="",this.conditionB="",this.valueA=[],this.valueB=[],this.barSize=50,this.revision=0,this._colorMap={},this.currentColor=0,this.graph.redrawTrigger.subscribe(()=>{this.drawGraph()})}drawGraph(){this.loadPlotSettings(),this.graph.plotSettings.showTitle||(this.graphLayout.title.text="");let n=this.renameCondition[this.conditionA];n||(n=this.conditionA);let r=this.renameCondition[this.conditionB];r||(r=this.conditionB);let a=document.getElementsByTagName("body")[0],o=window.getComputedStyle(a).backgroundColor;this.accounts.userAccount.darkMode?(this.graphLayout.plot_bgcolor=o,this.graphLayout.paper_bgcolor=o,this.graphLayout.font={color:"white",size:14},this.graphLayout.xaxis.tickfont.color="white",this.graphLayout.yaxis.tickfont.color="white"):(this.graphLayout.plot_bgcolor="#FFFFFF",this.graphLayout.paper_bgcolor="#FFFFFF",this.graphLayout.font={color:"black",size:14});let s=0;if(this.data&&this.data.condition_A&&this.data.condition_B&&this.data.searched_data&&!this.expanded){this.conditionA=this.data.condition_A||"",this.conditionB=this.data.condition_B||"",this.valueA=this.data.searched_data.filter(p=>p.Condition===this.conditionA).map(p=>p.Value),this.valueB=this.data.searched_data.filter(p=>p.Condition===this.conditionB).map(p=>p.Value);let l=this.calculateMean(this.valueA),c=this.calculateMean(this.valueB);this.colorMap[this.conditionA]||(this.colorMap[this.conditionA]=this.graph.defaultColorList[this.currentColor],this.currentColor++);let u={x:[n],y:[l],type:"bar",mode:"markers",name:n,error_y:{type:"data",array:[this.calculateWhisker(this.valueA)],visible:!0},line:{color:"black"},marker:{color:this.colorMap[this.conditionA]},showlegend:!1},d=this.drawTransparentBoxPlot(this.valueA,n);this.colorMap[this.conditionB]||(this.colorMap[this.conditionB]=this.graph.defaultColorList[this.currentColor],this.currentColor++);let f={x:[r],y:[c],type:"bar",mode:"markers",name:r,error_y:{type:"data",array:[this.calculateWhisker(this.valueB)],visible:!0},line:{color:"black"},marker:{color:this.colorMap[this.conditionB]},showlegend:!1},h=this.drawTransparentBoxPlot(this.valueB,r);s=2,this.graphData=[u,d,f,h]}else if(this.data&&(this.expanded||this.data.condition_A==""||this.data.condition_B=="")){let l=Array.from(new Set(this.data.searched_data.map(h=>h.Condition))),c=l.map(h=>{let p=this.data.searched_data.filter(m=>m.Condition===h).map(m=>m.Value);return this.calculateMean(p)}),u=l.map(h=>{let p=this.data.searched_data.filter(m=>m.Condition===h).map(m=>m.Value);return this.calculateWhisker(p)}),d=l.map((h,p)=>{this.colorMap[h]||(this.colorMap[h]=this.graph.defaultColorList[this.currentColor],this.currentColor++,this.currentColor>=this.graph.defaultColorList.length&&(this.currentColor=0));let m=this.renameCondition[h];return m||(m=h),{x:[m],y:[c[p]],type:"bar",mode:"markers",name:m,error_y:{type:"data",array:[u[p]],visible:!0},line:{color:"black"},marker:{color:this.colorMap[h]},showlegend:!1}}),f=l.map((h,p)=>{let m=this.renameCondition[h];m||(m=h);let _=this.data.searched_data.filter(g=>g.Condition===h).map(g=>g.Value);return this.drawTransparentBoxPlot(_,m)});s=l.length,this.graphData=[...d,...f]}console.log(this.colorMap),this.graphLayout.width=this.graphLayout.margin.l+this.graphLayout.margin.r+this.barSize*s,this.revision++,console.log(this.graphData)}calculateMean(n){return n.reduce((a,i)=>a+i,0)/n.length}calculateWhisker(n){let r=this.calculateMean(n),a=n.reduce((i,o)=>i+Math.pow(o-r,2),0)/n.length;return Math.sqrt(a)}drawTransparentBoxPlot(n,r){return{x:r,y:n.filter(a=>!isNaN(a)),type:"box",boxpoints:"all",pointpos:0,jitter:.3,fillcolor:"rgba(255,255,255,0)",line:{color:"rgba(255,255,255,0)"},hoveron:"points",marker:{color:"#654949",opacity:.8},name:r,showlegend:!1}}loadPlotSettings(){this.graphLayout.height=this.graph.plotSettings.height,this.graphLayout.margin.l=this.graph.plotSettings.marginLeft,this.graphLayout.margin.r=this.graph.plotSettings.marginRight,this.graphLayout.margin.b=this.graph.plotSettings.marginBottom,this.graphLayout.margin.t=this.graph.plotSettings.marginTop,this.graphLayout.title.font.size=this.graph.plotSettings.titleTextSize,this.barSize=this.graph.plotSettings.barSize}static{this.\u0275fac=function(r){return new(r||t)(Be(ss),Be(Qt))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-bar-chart"]],inputs:{searchTerm:"searchTerm",renameCondition:"renameCondition",data:"data",expanded:"expanded",colorMap:"colorMap"},decls:1,vars:4,consts:[[3,"data","layout","revision","updateOnLayoutChange"]],template:function(r,a){r&1&&Ne(0,"plotly-plot",0),r&2&&Ke("data",a.graphData)("layout",a.graphLayout)("revision",a.revision)("updateOnLayoutChange",!0)},dependencies:[Uc,uu],encapsulation:2})}}return t})();var Zp=(t,e)=>e.id;function Qp(t,e){if(t&1){let n=Ye();j(0,"div",3)(1,"mat-slide-toggle",8),ge("change",function(){we(n);let a=ue(2);return Oe(a.expanded=!a.expanded)}),ie(2," Expand Bar Chart "),G(),j(3,"mat-slide-toggle",8),ge("change",function(){we(n);let a=ue(2);return Oe(a.viewDifferentialAnalysis=!a.viewDifferentialAnalysis)}),ie(4," View Differential Analysis Stats "),G()()}t&2&&(ae(),Ke("color","primary"),ae(2),Ke("color","primary"))}function em(t,e){if(t&1&&(j(0,"div"),Ne(1,"app-bar-chart",11),G()),t&2){let n=ue().$implicit,r=ue(3);ae(),Ke("searchTerm",n.gene_name)("expanded",r.expanded)("renameCondition",r.renameCondition)("colorMap",r.colorMap)("data",n)}}function nm(t,e){t&1&&(j(0,"div")(1,"p"),ie(2,"No data found for this search"),G()())}function tm(t,e){if(t&1&&(j(0,"div",9),We(1,em,2,5,"div")(2,nm,3,0,"div"),j(3,"div")(4,"button",10)(5,"mat-icon"),ie(6,"drag_handle"),G()(),j(7,"p"),ie(8),G()()()),t&2){let n=e.$implicit;ae(),je(n.searched_data.length>0?1:2),ae(3),Ke("matTooltip",n.analysis_group.name),ae(4),sn(" ",n.analysis_group.name," ")}}function rm(t,e){if(t&1&&nn(0,tm,9,3,"div",9,Zp),t&2){let n=ue(2);tn(n.searchResults)}}function am(t,e){t&1&&(j(0,"p"),ie(1,"No search results found in this project"),G())}function im(t,e){t&1&&(j(0,"th",24),ie(1," Primary ID "),G())}function om(t,e){if(t&1&&(j(0,"td",25),ie(1),G()),t&2){let n=e.$implicit;ae(),sn(" ",n.primary_id," ")}}function sm(t,e){t&1&&(j(0,"th",24),ie(1," UniProt ID "),G())}function cm(t,e){if(t&1&&(j(0,"td",25),ie(1),G()),t&2){let n=e.$implicit;ae(),sn(" ",n.uniprot_id," ")}}function lm(t,e){t&1&&(j(0,"th",24),ie(1," Gene Names "),G())}function um(t,e){if(t&1&&(j(0,"td",25),ie(1),G()),t&2){let n=e.$implicit;ae(),sn(" ",n.gene_name," ")}}function dm(t,e){t&1&&(j(0,"th",24),ie(1," log2FC "),G())}function fm(t,e){if(t&1&&(j(0,"td",25),ie(1),G()),t&2){let n=e.$implicit;ae(),sn(" ",n.log2_fc," ")}}function hm(t,e){t&1&&(j(0,"th",24),ie(1," -log10(p) "),G())}function pm(t,e){if(t&1&&(j(0,"td",25),ie(1),G()),t&2){let n=e.$implicit;ae(),sn(" ",n.log10_p," ")}}function mm(t,e){t&1&&(j(0,"th",24),ie(1," Condition A "),G())}function gm(t,e){if(t&1&&ie(0),t&2){let n=ue().$implicit,r=ue(3);sn(" ",r.renameCondition[n.condition_A]," ")}}function _m(t,e){if(t&1&&ie(0),t&2){let n=ue().$implicit;sn(" ",n.condition_A," ")}}function Pm(t,e){if(t&1&&(j(0,"td",25),We(1,gm,1,1)(2,_m,1,1),G()),t&2){let n=ue(3);ae(),je(n.renameCondition?1:2)}}function vm(t,e){t&1&&(j(0,"th",24),ie(1," Condition B "),G())}function bm(t,e){if(t&1&&ie(0),t&2){let n=ue().$implicit,r=ue(3);sn(" ",r.renameCondition[n.condition_B]," ")}}function ym(t,e){if(t&1&&ie(0),t&2){let n=ue().$implicit;sn(" ",n.condition_B," ")}}function Xm(t,e){if(t&1&&(j(0,"td",25),We(1,bm,1,1)(2,ym,1,1),G()),t&2){let n=ue(3);ae(),je(n.renameCondition?1:2)}}function Km(t,e){t&1&&(j(0,"th",24),ie(1," Comparison "),G())}function xm(t,e){if(t&1&&(j(0,"td",25),ie(1),G()),t&2){let n=e.$implicit;ae(),sn(" ",n.comparison_label," ")}}function Am(t,e){t&1&&Ne(0,"tr",26)}function Cm(t,e){t&1&&Ne(0,"tr",27)}function Em(t,e){if(t&1&&(j(0,"table",5),Yn(1,12),We(2,im,2,0,"th",13)(3,om,2,1,"td",14),zn(),Yn(4,15),We(5,sm,2,0,"th",13)(6,cm,2,1,"td",14),zn(),Yn(7,16),We(8,lm,2,0,"th",13)(9,um,2,1,"td",14),zn(),Yn(10,17),We(11,dm,2,0,"th",13)(12,fm,2,1,"td",14),zn(),Yn(13,18),We(14,hm,2,0,"th",13)(15,pm,2,1,"td",14),zn(),Yn(16,19),We(17,mm,2,0,"th",13)(18,Pm,3,1,"td",14),zn(),Yn(19,20),We(20,vm,2,0,"th",13)(21,Xm,3,1,"td",14),zn(),Yn(22,21),We(23,Km,2,0,"th",13)(24,xm,2,1,"td",14),zn(),We(25,Am,1,0,"tr",22)(26,Cm,1,0,"tr",23),G()),t&2){let n=ue(2);Ke("dataSource",n.searchResults),ae(25),Ke("matHeaderRowDef",n.searchResultDisplayColumns),ae(),Ke("matRowDefColumns",n.searchResultDisplayColumns)}}function wm(t,e){if(t&1){let n=Ye();j(0,"button",28),ge("click",function(){we(n);let a=ue(2);return Oe(a.deleteProject.emit(a.project))}),j(1,"mat-icon"),ie(2,"delete"),G()()}if(t&2){let n=ue(2);Wc("matTooltip","Delete Project ",n.project.name," from collate")}}function Om(t,e){if(t&1&&(j(0,"a",7)(1,"mat-icon"),ie(2,"link"),G()()),t&2){let n=ue(2);Wc("href","/#/project/",n.project.id,"",k0)}}function Tm(t,e){if(t&1){let n=Ye();j(0,"mat-card",0)(1,"mat-card-header")(2,"mat-card-title",1)(3,"span",2),ie(4),G()(),j(5,"mat-card-subtitle"),ie(6),G()(),j(7,"mat-card-content"),We(8,Qp,5,2,"div",3),j(9,"div",4),ge("cdkDropListDropped",function(a){we(n);let i=ue();return Oe(i.drop(a))}),We(10,rm,2,0)(11,am,2,0,"p"),G(),We(12,Em,27,3,"table",5),G(),j(13,"mat-card-actions"),We(14,wm,3,2,"button",6)(15,Om,3,2,"a",7),G()()}if(t&2){let n=ue();ae(4),dn(n.project.name),ae(2),dn(n.project.description),ae(2),je(n.searchResults.length>0?8:-1),ae(2),je(n.searchResults.length>0?10:11),ae(2),je(n.searchResults.length>0&&n.viewDifferentialAnalysis?12:-1),ae(2),je(n.accounts.loggedIn?14:-1),ae(),je(n.project?15:-1)}}var gu=(()=>{class t{set project(n){this._project=n}get project(){return this._project}set searchResults(n){this._searchResults=n,console.log(n)}get searchResults(){return this._searchResults}constructor(n){this.accounts=n,this._project=null,this.searchTerm="",this._searchResults=[],this.colorMap={},this.renameCondition={},this.deleteProject=new xn,this.searchResultsChange=new xn,this.searchResultDisplayColumns=["primary_id","uniprot_id","gene_name","condition_A","condition_B","log2_fc","log10_p","comparison_label"],this.expanded=!1,this.viewDifferentialAnalysis=!1}drop(n){let a=this._searchResults[n.previousIndex].analysis_group.id,i=this._searchResults.filter(o=>o.analysis_group.id===a);this._searchResults=this._searchResults.filter(o=>o.analysis_group.id!==a),this._searchResults.splice(n.currentIndex,0,...i),this.searchResultsChange.emit(this._searchResults)}static{this.\u0275fac=function(r){return new(r||t)(Be(Qt))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-project-card-viewer"]],inputs:{searchTerm:"searchTerm",project:"project",searchResults:"searchResults",colorMap:"colorMap",renameCondition:"renameCondition"},outputs:{deleteProject:"deleteProject",searchResultsChange:"searchResultsChange"},decls:1,vars:1,consts:[["appearance","outlined"],["cdkDragHandle",""],[2,"color","#ba0000"],[2,"display","flex","flex-direction","column","gap","20px"],["cdkDropList","",2,"display","flex","gap","20px","flex-wrap","wrap","justify-content","center",3,"cdkDropListDropped"],["mat-table","",1,"mat-elevation-z8",3,"dataSource"],["mat-icon-button","","color","primary",3,"matTooltip"],["target","_blank",3,"href"],[3,"change","color"],["cdkDrag",""],["mat-icon-button","","cdkDragHandle","",3,"matTooltip"],[3,"searchTerm","expanded","renameCondition","colorMap","data"],["matColumnDef","primary_id"],["mat-header-cell","",4,"matHeaderCellDef"],["mat-cell","",4,"matCellDef"],["matColumnDef","uniprot_id"],["matColumnDef","gene_name"],["matColumnDef","log2_fc"],["matColumnDef","log10_p"],["matColumnDef","condition_A"],["matColumnDef","condition_B"],["matColumnDef","comparison_label"],["mat-header-row","",4,"matHeaderRowDef"],["mat-row","",4,"matRowDef","matRowDefColumns"],["mat-header-cell",""],["mat-cell",""],["mat-header-row",""],["mat-row",""],["mat-icon-button","","color","primary",3,"click","matTooltip"]],template:function(r,a){r&1&&We(0,Tm,16,7,"mat-card",0),r&2&&je(a.project?0:-1)},dependencies:[z0,Y0,q0,Da,$a,cs,mu,V0,ot,Jt,Tr,Br,es,Go,Zo,Qo,rs,ns,as,ts,Ho,Jo,du,Wa],encapsulation:2})}}return t})();var Bm=(t,e)=>e.id,km=()=>[];function Dm(t,e){if(t&1){let n=Ye();j(0,"app-project-card-viewer",3),ge("deleteProject",function(a){we(n);let i=ue(2);return Oe(i.deleteProject.emit(a))}),G()}if(t&2){let n=ue().$implicit,r=ue();Ke("searchTerm",r.searchTerm)("colorMap",r.projectConditionColorMap==null?null:r.projectConditionColorMap[n.id])("project",n)("searchResults",r.filteredResults[n.id]||Wo(5,km))("renameCondition",r.renameCondition==null?null:r.renameCondition[n.id])}}function $m(t,e){if(t&1&&(j(0,"div",1),We(1,Dm,1,6,"app-project-card-viewer",2),G()),t&2){let n=e.$implicit;ae(),je(n&&n.id?1:-1)}}var hs=(()=>{class t{constructor(){this._searchTerm="",this.projects=[],this._filteredResults={},this.projectConditionColorMap={},this.renameCondition={},this.projectOrderChanged=new xn,this.deleteProject=new xn}set searchTerm(n){n?this._searchTerm=n:this._searchTerm=""}get searchTerm(){return this._searchTerm}set filteredResults(n){console.log(n),n?this._filteredResults=n:this._filteredResults={}}get filteredResults(){return this._filteredResults}drop(n){Qr(this.projects,n.previousIndex,n.currentIndex),this.projectOrderChanged.emit(this.projects)}static{this.\u0275fac=function(r){return new(r||t)}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-project-list"]],inputs:{searchTerm:"searchTerm",projects:"projects",filteredResults:"filteredResults",projectConditionColorMap:"projectConditionColorMap",renameCondition:"renameCondition"},outputs:{projectOrderChanged:"projectOrderChanged",deleteProject:"deleteProject"},decls:3,vars:0,consts:[["cdkDropList","",1,"project-list",3,"cdkDropListDropped"],[2,"margin","20px"],["cdkDrag","",3,"searchTerm","colorMap","project","searchResults","renameCondition"],["cdkDrag","",3,"deleteProject","searchTerm","colorMap","project","searchResults","renameCondition"]],template:function(r,a){r&1&&(j(0,"div",0),ge("cdkDropListDropped",function(o){return a.drop(o)}),nn(1,$m,2,1,"div",1,Bm),G()),r&2&&(ae(),tn(a.projects))},dependencies:[Br,gu,Tr],encapsulation:2})}}return t})();var _u=(t,e)=>e.id;function Sm(t,e){if(t&1){let n=Ye();j(0,"mat-chip",4),ge("removed",function(){let a=we(n).$implicit,i=ue(2);return Oe(i.removeTag(a))}),ie(1),j(2,"mat-icon",5),ie(3,"cancel"),G()()}if(t&2){let n=e.$implicit;ae(),sn(" ",n.name," ")}}function Wm(t,e){if(t&1){let n=Ye();j(0,"mat-chip-set",2),ge("cdkDropListDropped",function(a){we(n);let i=ue();return Oe(i.drop(a))}),nn(1,Sm,4,1,"mat-chip",3,_u),G()}if(t&2){let n=ue();ae(),tn(n.collageTags)}}function Nm(t,e){if(t&1&&(j(0,"mat-chip"),ie(1),G()),t&2){let n=e.$implicit;ae(),sn(" ",n.name," ")}}function Mm(t,e){if(t&1&&(j(0,"mat-chip-set"),nn(1,Nm,2,1,"mat-chip",null,_u),G()),t&2){let n=ue();ae(),tn(n.collageTags)}}var ps=(()=>{class t{constructor(n){this.accounts=n,this.collageTags=[],this.collageTagsChange=new xn}removeTag(n){this.collageTags=this.collageTags.filter(r=>r!==n),this.collageTagsChange.emit(this.collageTags)}drop(n){Qr(this.collageTags,n.previousIndex,n.currentIndex),this.collageTagsChange.emit(this.collageTags)}static{this.\u0275fac=function(r){return new(r||t)(Be(Qt))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-tags"]],inputs:{collageTags:"collageTags"},outputs:{collageTagsChange:"collageTagsChange"},decls:4,vars:1,consts:[[2,"display","flex","justify-content","center"],["cdkDropList",""],["cdkDropList","",3,"cdkDropListDropped"],["cdkDrag",""],["cdkDrag","",3,"removed"],["matChipRemove",""]],template:function(r,a){r&1&&(j(0,"div",0),We(1,Wm,3,0,"mat-chip-set",1)(2,Mm,3,0,"mat-chip-set"),G(),Ne(3,"div",0)),r&2&&(ae(),je(a.accounts.loggedIn?1:2))},dependencies:[Br,Yo,Fo,ot,jo,Tr],encapsulation:2})}}return t})();var vu=Ki(Pu());function Rm(t,e){t&1&&(j(0,"div",2),Ne(1,"div",5),G())}var bu=(()=>{class t{set url(n){this.config.data=n,this._url=n}constructor(n){this.dialogRef=n,this._url="",this.config={width:250,height:250,data:this.url,margin:5,dotsOptions:{color:"#780101",type:"dots"},backgroundOptions:{color:"#ffffff"},imageOptions:{crossOrigin:"anonymous",margin:0}}}ngAfterViewInit(){let n=new vu.default(this.config),r=document.getElementById("canvas");r&&n.append(r),this.qrCode=n}close(){this.dialogRef.close()}download(){this.qrCode&&this.qrCode.download({name:"qrcode",extension:"svg"}).then(()=>{})}static{this.\u0275fac=function(r){return new(r||t)(Be(On))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-qr-code-dialog"]],inputs:{url:"url"},decls:9,vars:1,consts:[["mat-dialog-title",""],["mat-dialog-content",""],[2,"display","flex","justify-content","center","align-items","center"],["mat-dialog-actions",""],["mat-button","",3,"click"],["id","canvas"]],template:function(r,a){r&1&&(j(0,"h1",0),ie(1,"Collate QR Code"),G(),j(2,"div",1),We(3,Rm,2,0,"div",2),G(),j(4,"div",3)(5,"button",4),ge("click",function(){return a.close()}),ie(6,"Close"),G(),j(7,"button",4),ge("click",function(){return a.download()}),ie(8,"Download"),G()()),r&2&&(ae(3),je(a.config.data&&a.config.data!==""?3:-1))},dependencies:[Tn,Bn,kn,vn],encapsulation:2})}}return t})();var yu=(t,e)=>e.id,Im=()=>({standalone:!0});function Lm(t,e){if(t&1){let n=Ye();j(0,"mat-checkbox",6),Xt("ngModelChange",function(a){let i=we(n).$implicit,o=ue(2).$implicit,s=ue();return yt(s.projectAnalysisGroupVisibilityMap[o.id][i.id],a)||(s.projectAnalysisGroupVisibilityMap[o.id][i.id]=a),Oe(a)}),ie(1),G()}if(t&2){let n=e.$implicit,r=ue(2).$implicit,a=ue();bt("ngModel",a.projectAnalysisGroupVisibilityMap[r.id][n.id]),Ke("ngModelOptions",Wo(3,Im)),ae(),sn(" ",n.name," ")}}function Um(t,e){if(t&1&&nn(0,Lm,2,4,"mat-checkbox",5,yu),t&2){let n=ue().$implicit,r=ue();tn(r.projectAnalysisGroupMap[n.id])}}function Fm(t,e){if(t&1&&(j(0,"h2"),ie(1),G(),We(2,Um,2,0)),t&2){let n=e.$implicit,r=ue();ae(),dn(n.name),ae(),je(r.projectAnalysisGroupMap[n.id]?2:-1)}}var ms=(()=>{class t{set projects(n){this._projects=n}get projects(){return this._projects}set projectAnalysisGroupMap(n){this._projectAnalysisGroupMap=n}get projectAnalysisGroupMap(){return this._projectAnalysisGroupMap}set projectAnalysisGroupVisibilityMap(n){this._projectAnalysisGroupVisibilityMap={};for(let r in n){this._projectAnalysisGroupVisibilityMap[r]={};for(let a in n[r])this._projectAnalysisGroupVisibilityMap[r][a]=n[r][a]}}get projectAnalysisGroupVisibilityMap(){return this._projectAnalysisGroupVisibilityMap}constructor(n){this.dialog=n,this._projects=[],this._projectAnalysisGroupMap={},this._projectAnalysisGroupVisibilityMap={}}close(){this.dialog.close()}save(){this.dialog.close(this.projectAnalysisGroupVisibilityMap)}static{this.\u0275fac=function(r){return new(r||t)(Be(On))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-project-analysis-group-visibility-dialog"]],inputs:{projects:"projects",projectAnalysisGroupMap:"projectAnalysisGroupMap",projectAnalysisGroupVisibilityMap:"projectAnalysisGroupVisibilityMap"},decls:11,vars:0,consts:[["mat-dialog-title",""],["mat-dialog-content",""],[2,"display","flex","flex-direction","column","gap","20px"],["mat-dialog-actions",""],["mat-button","",3,"click"],[3,"ngModel","ngModelOptions"],[3,"ngModelChange","ngModel","ngModelOptions"]],template:function(r,a){r&1&&(j(0,"h1",0),ie(1,"Analysis Group Visibility"),G(),j(2,"div",1)(3,"form",2),nn(4,Fm,3,2,null,null,yu),G()(),j(6,"div",3)(7,"button",4),ge("click",function(){return a.close()}),ie(8,"Cancel"),G(),j(9,"button",4),ge("click",function(){return a.save()}),ie(10,"Submit"),G()()),r&2&&(ae(4),tn(a.projects))},dependencies:[Tn,Bn,wr,Hn,An,qn,Er,Z0,Ua,kn,vn],encapsulation:2})}}return t})();function Un(t){"@babel/helpers - typeof";return Un=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Un(t)}function Yr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Xu(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function zr(t,e,n){return e&&Xu(t.prototype,e),n&&Xu(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function Ld(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Rn(t,e){return Ym(t)||Vm(t,e)||xl(t,e)||Hm()}function Ud(t){return jm(t)||zm(t)||xl(t)||qm()}function jm(t){if(Array.isArray(t))return sl(t)}function Ym(t){if(Array.isArray(t))return t}function zm(t){if(typeof Symbol<"u"&&t[Symbol.iterator]!=null||t["@@iterator"]!=null)return Array.from(t)}function Vm(t,e){var n=t==null?null:typeof Symbol<"u"&&t[Symbol.iterator]||t["@@iterator"];if(n!=null){var r=[],a=!0,i=!1,o,s;try{for(n=n.call(t);!(a=(o=n.next()).done)&&(r.push(o.value),!(e&&r.length===e));a=!0);}catch(l){i=!0,s=l}finally{try{!a&&n.return!=null&&n.return()}finally{if(i)throw s}}return r}}function xl(t,e){if(t){if(typeof t=="string")return sl(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);if(n==="Object"&&t.constructor&&(n=t.constructor.name),n==="Map"||n==="Set")return Array.from(t);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return sl(t,e)}}function sl(t,e){(e==null||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function qm(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Hm(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Ot(t,e){var n=typeof Symbol<"u"&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=xl(t))||e&&t&&typeof t.length=="number"){n&&(t=n);var r=0,a=function(){};return{s:a,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(l){throw l},f:a}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var i=!0,o=!1,s;return{s:function(){n=n.call(t)},n:function(){var l=n.next();return i=l.done,l},e:function(l){o=!0,s=l},f:function(){try{!i&&n.return!=null&&n.return()}finally{if(o)throw s}}}}var In=typeof window>"u"?null:window,Ku=In?In.navigator:null;In&&In.document;var Gm=Un(""),Fd=Un({}),Jm=Un(function(){}),Zm=typeof HTMLElement>"u"?"undefined":Un(HTMLElement),eo=function(e){return e&&e.instanceString&&wn(e.instanceString)?e.instanceString():null},ze=function(e){return e!=null&&Un(e)==Gm},wn=function(e){return e!=null&&Un(e)===Jm},_n=function(e){return!Tt(e)&&(Array.isArray?Array.isArray(e):e!=null&&e instanceof Array)},un=function(e){return e!=null&&Un(e)===Fd&&!_n(e)&&e.constructor===Object},Qm=function(e){return e!=null&&Un(e)===Fd},Se=function(e){return e!=null&&Un(e)===Un(1)&&!isNaN(e)},e1=function(e){return Se(e)&&Math.floor(e)===e},Rs=function(e){if(Zm!=="undefined")return e!=null&&e instanceof HTMLElement},Tt=function(e){return no(e)||jd(e)},no=function(e){return eo(e)==="collection"&&e._private.single},jd=function(e){return eo(e)==="collection"&&!e._private.single},Al=function(e){return eo(e)==="core"},Yd=function(e){return eo(e)==="stylesheet"},n1=function(e){return eo(e)==="event"},Rr=function(e){return e==null?!0:!!(e===""||e.match(/^\s+$/))},t1=function(e){return typeof HTMLElement>"u"?!1:e instanceof HTMLElement},r1=function(e){return un(e)&&Se(e.x1)&&Se(e.x2)&&Se(e.y1)&&Se(e.y2)},a1=function(e){return Qm(e)&&wn(e.then)},i1=function(){return Ku&&Ku.userAgent.match(/msie|trident|edge/i)},Fi=function(e,n){n||(n=function(){if(arguments.length===1)return arguments[0];if(arguments.length===0)return"undefined";for(var i=[],o=0;o<arguments.length;o++)i.push(arguments[o]);return i.join("$")});var r=function a(){var i=this,o=arguments,s,l=n.apply(i,o),c=a.cache;return(s=c[l])||(s=c[l]=e.apply(i,o)),s};return r.cache={},r},Cl=Fi(function(t){return t.replace(/([A-Z])/g,function(e){return"-"+e.toLowerCase()})}),Js=Fi(function(t){return t.replace(/(-\w)/g,function(e){return e[1].toUpperCase()})}),zd=Fi(function(t,e){return t+e[0].toUpperCase()+e.substring(1)},function(t,e){return t+"$"+e}),xu=function(e){return Rr(e)?e:e.charAt(0).toUpperCase()+e.substring(1)},Ln="(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))",o1="rgb[a]?\\(("+Ln+"[%]?)\\s*,\\s*("+Ln+"[%]?)\\s*,\\s*("+Ln+"[%]?)(?:\\s*,\\s*("+Ln+"))?\\)",s1="rgb[a]?\\((?:"+Ln+"[%]?)\\s*,\\s*(?:"+Ln+"[%]?)\\s*,\\s*(?:"+Ln+"[%]?)(?:\\s*,\\s*(?:"+Ln+"))?\\)",c1="hsl[a]?\\(("+Ln+")\\s*,\\s*("+Ln+"[%])\\s*,\\s*("+Ln+"[%])(?:\\s*,\\s*("+Ln+"))?\\)",l1="hsl[a]?\\((?:"+Ln+")\\s*,\\s*(?:"+Ln+"[%])\\s*,\\s*(?:"+Ln+"[%])(?:\\s*,\\s*(?:"+Ln+"))?\\)",u1="\\#[0-9a-fA-F]{3}",d1="\\#[0-9a-fA-F]{6}",Vd=function(e,n){return e<n?-1:e>n?1:0},f1=function(e,n){return-1*Vd(e,n)},Ve=Object.assign!=null?Object.assign.bind(Object):function(t){for(var e=arguments,n=1;n<e.length;n++){var r=e[n];if(r!=null)for(var a=Object.keys(r),i=0;i<a.length;i++){var o=a[i];t[o]=r[o]}}return t},h1=function(e){if(!(!(e.length===4||e.length===7)||e[0]!=="#")){var n=e.length===4,r,a,i,o=16;return n?(r=parseInt(e[1]+e[1],o),a=parseInt(e[2]+e[2],o),i=parseInt(e[3]+e[3],o)):(r=parseInt(e[1]+e[2],o),a=parseInt(e[3]+e[4],o),i=parseInt(e[5]+e[6],o)),[r,a,i]}},p1=function(e){var n,r,a,i,o,s,l,c;function u(p,m,_){return _<0&&(_+=1),_>1&&(_-=1),_<1/6?p+(m-p)*6*_:_<1/2?m:_<2/3?p+(m-p)*(2/3-_)*6:p}var d=new RegExp("^"+c1+"$").exec(e);if(d){if(r=parseInt(d[1]),r<0?r=(360- -1*r%360)%360:r>360&&(r=r%360),r/=360,a=parseFloat(d[2]),a<0||a>100||(a=a/100,i=parseFloat(d[3]),i<0||i>100)||(i=i/100,o=d[4],o!==void 0&&(o=parseFloat(o),o<0||o>1)))return;if(a===0)s=l=c=Math.round(i*255);else{var f=i<.5?i*(1+a):i+a-i*a,h=2*i-f;s=Math.round(255*u(h,f,r+1/3)),l=Math.round(255*u(h,f,r)),c=Math.round(255*u(h,f,r-1/3))}n=[s,l,c,o]}return n},m1=function(e){var n,r=new RegExp("^"+o1+"$").exec(e);if(r){n=[];for(var a=[],i=1;i<=3;i++){var o=r[i];if(o[o.length-1]==="%"&&(a[i]=!0),o=parseFloat(o),a[i]&&(o=o/100*255),o<0||o>255)return;n.push(Math.floor(o))}var s=a[1]||a[2]||a[3],l=a[1]&&a[2]&&a[3];if(s&&!l)return;var c=r[4];if(c!==void 0){if(c=parseFloat(c),c<0||c>1)return;n.push(c)}}return n},g1=function(e){return _1[e.toLowerCase()]},qd=function(e){return(_n(e)?e:null)||g1(e)||h1(e)||m1(e)||p1(e)},_1={transparent:[0,0,0,0],aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],grey:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},Hd=function(e){for(var n=e.map,r=e.keys,a=r.length,i=0;i<a;i++){var o=r[i];if(un(o))throw Error("Tried to set map with object key");i<r.length-1?(n[o]==null&&(n[o]={}),n=n[o]):n[o]=e.value}},Gd=function(e){for(var n=e.map,r=e.keys,a=r.length,i=0;i<a;i++){var o=r[i];if(un(o))throw Error("Tried to get map with object key");if(n=n[o],n==null)return n}return n};function P1(t){var e=typeof t;return t!=null&&(e=="object"||e=="function")}var sa=P1,$i=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function v1(t,e){return e={exports:{}},t(e,e.exports),e.exports}var b1=typeof $i=="object"&&$i&&$i.Object===Object&&$i,y1=b1,X1=typeof self=="object"&&self&&self.Object===Object&&self,K1=y1||X1||Function("return this")(),Zs=K1,x1=function(){return Zs.Date.now()},Yc=x1,A1=/\s/;function C1(t){for(var e=t.length;e--&&A1.test(t.charAt(e)););return e}var E1=C1,w1=/^\s+/;function O1(t){return t&&t.slice(0,E1(t)+1).replace(w1,"")}var T1=O1,B1=Zs.Symbol,ni=B1,Jd=Object.prototype,k1=Jd.hasOwnProperty,D1=Jd.toString,Ei=ni?ni.toStringTag:void 0;function $1(t){var e=k1.call(t,Ei),n=t[Ei];try{t[Ei]=void 0;var r=!0}catch{}var a=D1.call(t);return r&&(e?t[Ei]=n:delete t[Ei]),a}var S1=$1,W1=Object.prototype,N1=W1.toString;function M1(t){return N1.call(t)}var R1=M1,I1="[object Null]",L1="[object Undefined]",Au=ni?ni.toStringTag:void 0;function U1(t){return t==null?t===void 0?L1:I1:Au&&Au in Object(t)?S1(t):R1(t)}var Zd=U1;function F1(t){return t!=null&&typeof t=="object"}var j1=F1,Y1="[object Symbol]";function z1(t){return typeof t=="symbol"||j1(t)&&Zd(t)==Y1}var to=z1,Cu=NaN,V1=/^[-+]0x[0-9a-f]+$/i,q1=/^0b[01]+$/i,H1=/^0o[0-7]+$/i,G1=parseInt;function J1(t){if(typeof t=="number")return t;if(to(t))return Cu;if(sa(t)){var e=typeof t.valueOf=="function"?t.valueOf():t;t=sa(e)?e+"":e}if(typeof t!="string")return t===0?t:+t;t=T1(t);var n=q1.test(t);return n||H1.test(t)?G1(t.slice(2),n?2:8):V1.test(t)?Cu:+t}var Eu=J1,Z1="Expected a function",Q1=Math.max,eg=Math.min;function ng(t,e,n){var r,a,i,o,s,l,c=0,u=!1,d=!1,f=!0;if(typeof t!="function")throw new TypeError(Z1);e=Eu(e)||0,sa(n)&&(u=!!n.leading,d="maxWait"in n,i=d?Q1(Eu(n.maxWait)||0,e):i,f="trailing"in n?!!n.trailing:f);function h(T){var B=r,D=a;return r=a=void 0,c=T,o=t.apply(D,B),o}function p(T){return c=T,s=setTimeout(g,e),u?h(T):o}function m(T){var B=T-l,D=T-c,k=e-B;return d?eg(k,i-D):k}function _(T){var B=T-l,D=T-c;return l===void 0||B>=e||B<0||d&&D>=i}function g(){var T=Yc();if(_(T))return P(T);s=setTimeout(g,m(T))}function P(T){return s=void 0,f&&r?h(T):(r=a=void 0,o)}function y(){s!==void 0&&clearTimeout(s),c=0,r=l=a=s=void 0}function C(){return s===void 0?o:P(Yc())}function E(){var T=Yc(),B=_(T);if(r=arguments,a=this,l=T,B){if(s===void 0)return p(l);if(d)return clearTimeout(s),s=setTimeout(g,e),h(l)}return s===void 0&&(s=setTimeout(g,e)),o}return E.cancel=y,E.flush=C,E}var ro=ng,zc=In?In.performance:null,Qd=zc&&zc.now?function(){return zc.now()}:function(){return Date.now()},tg=function(){if(In){if(In.requestAnimationFrame)return function(t){In.requestAnimationFrame(t)};if(In.mozRequestAnimationFrame)return function(t){In.mozRequestAnimationFrame(t)};if(In.webkitRequestAnimationFrame)return function(t){In.webkitRequestAnimationFrame(t)};if(In.msRequestAnimationFrame)return function(t){In.msRequestAnimationFrame(t)}}return function(t){t&&setTimeout(function(){t(Qd())},1e3/60)}}(),Is=function(e){return tg(e)},hr=Qd,qa=9261,ef=65599,Si=5381,nf=function(e){for(var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:qa,r=n,a;a=e.next(),!a.done;)r=r*ef+a.value|0;return r},ji=function(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:qa;return n*ef+e|0},Yi=function(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Si;return(n<<5)+n+e|0},rg=function(e,n){return e*2097152+n},Dr=function(e){return e[0]*2097152+e[1]},gs=function(e,n){return[ji(e[0],n[0]),Yi(e[1],n[1])]},ag=function(e,n){var r={value:0,done:!1},a=0,i=e.length,o={next:function(){return a<i?r.value=e[a++]:r.done=!0,r}};return nf(o,n)},Ir=function(e,n){var r={value:0,done:!1},a=0,i=e.length,o={next:function(){return a<i?r.value=e.charCodeAt(a++):r.done=!0,r}};return nf(o,n)},tf=function(){return ig(arguments)},ig=function(e){for(var n,r=0;r<e.length;r++){var a=e[r];r===0?n=Ir(a):n=Ir(a,n)}return n},wu=!0,og=console.warn!=null,sg=console.trace!=null,El=Number.MAX_SAFE_INTEGER||9007199254740991,rf=function(){return!0},Ls=function(){return!1},Ou=function(){return 0},wl=function(){},En=function(e){throw new Error(e)},af=function(e){if(e!==void 0)wu=!!e;else return wu},pn=function(e){af()&&(og?console.warn(e):(console.log(e),sg&&console.trace()))},cg=function(e){return Ve({},e)},tr=function(e){return e==null?e:_n(e)?e.slice():un(e)?cg(e):e},lg=function(e){return e.slice()},of=function(e,n){for(n=e="";e++<36;n+=e*51&52?(e^15?8^Math.random()*(e^20?16:4):4).toString(16):"-");return n},ug={},sf=function(){return ug},et=function(e){var n=Object.keys(e);return function(r){for(var a={},i=0;i<n.length;i++){var o=n[i],s=r?.[o];a[o]=s===void 0?e[o]:s}return a}},Lr=function(e,n,r){for(var a=e.length-1;a>=0&&!(e[a]===n&&(e.splice(a,1),r));a--);},Ol=function(e){e.splice(0,e.length)},dg=function(e,n){for(var r=0;r<n.length;r++){var a=n[r];e.push(a)}},jt=function(e,n,r){return r&&(n=zd(r,n)),e[n]},Sr=function(e,n,r,a){r&&(n=zd(r,n)),e[n]=a},fg=function(){function t(){Yr(this,t),this._obj={}}return zr(t,[{key:"set",value:function(n,r){return this._obj[n]=r,this}},{key:"delete",value:function(n){return this._obj[n]=void 0,this}},{key:"clear",value:function(){this._obj={}}},{key:"has",value:function(n){return this._obj[n]!==void 0}},{key:"get",value:function(n){return this._obj[n]}}]),t}(),rr=typeof Map<"u"?Map:fg,hg="undefined",pg=function(){function t(e){if(Yr(this,t),this._obj=Object.create(null),this.size=0,e!=null){var n;e.instanceString!=null&&e.instanceString()===this.instanceString()?n=e.toArray():n=e;for(var r=0;r<n.length;r++)this.add(n[r])}}return zr(t,[{key:"instanceString",value:function(){return"set"}},{key:"add",value:function(n){var r=this._obj;r[n]!==1&&(r[n]=1,this.size++)}},{key:"delete",value:function(n){var r=this._obj;r[n]===1&&(r[n]=0,this.size--)}},{key:"clear",value:function(){this._obj=Object.create(null)}},{key:"has",value:function(n){return this._obj[n]===1}},{key:"toArray",value:function(){var n=this;return Object.keys(this._obj).filter(function(r){return n.has(r)})}},{key:"forEach",value:function(n,r){return this.toArray().forEach(n,r)}}]),t}(),ii=(typeof Set>"u"?"undefined":Un(Set))!==hg?Set:pg,Qs=function(e,n){var r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;if(e===void 0||n===void 0||!Al(e)){En("An element must have a core reference and parameters set");return}var a=n.group;if(a==null&&(n.data&&n.data.source!=null&&n.data.target!=null?a="edges":a="nodes"),a!=="nodes"&&a!=="edges"){En("An element must be of type `nodes` or `edges`; you specified `"+a+"`");return}this.length=1,this[0]=this;var i=this._private={cy:e,single:!0,data:n.data||{},position:n.position||{x:0,y:0},autoWidth:void 0,autoHeight:void 0,autoPadding:void 0,compoundBoundsClean:!1,listeners:[],group:a,style:{},rstyle:{},styleCxts:[],styleKeys:{},removed:!0,selected:!!n.selected,selectable:n.selectable===void 0?!0:!!n.selectable,locked:!!n.locked,grabbed:!1,grabbable:n.grabbable===void 0?!0:!!n.grabbable,pannable:n.pannable===void 0?a==="edges":!!n.pannable,active:!1,classes:new ii,animation:{current:[],queue:[]},rscratch:{},scratch:n.scratch||{},edges:[],children:[],parent:n.parent&&n.parent.isNode()?n.parent:null,traversalCache:{},backgrounding:!1,bbCache:null,bbCacheShift:{x:0,y:0},bodyBounds:null,overlayBounds:null,labelBounds:{all:null,source:null,target:null,main:null},arrowBounds:{source:null,target:null,"mid-source":null,"mid-target":null}};if(i.position.x==null&&(i.position.x=0),i.position.y==null&&(i.position.y=0),n.renderedPosition){var o=n.renderedPosition,s=e.pan(),l=e.zoom();i.position={x:(o.x-s.x)/l,y:(o.y-s.y)/l}}var c=[];_n(n.classes)?c=n.classes:ze(n.classes)&&(c=n.classes.split(/\s+/));for(var u=0,d=c.length;u<d;u++){var f=c[u];!f||f===""||i.classes.add(f)}this.createEmitter();var h=n.style||n.css;h&&(pn("Setting a `style` bypass at element creation should be done only when absolutely necessary.  Try to use the stylesheet instead."),this.style(h)),(r===void 0||r)&&this.restore()},Tu=function(e){return e={bfs:e.bfs||!e.dfs,dfs:e.dfs||!e.bfs},function(r,a,i){var o;un(r)&&!Tt(r)&&(o=r,r=o.roots||o.root,a=o.visit,i=o.directed),i=arguments.length===2&&!wn(a)?a:i,a=wn(a)?a:function(){};for(var s=this._private.cy,l=r=ze(r)?this.filter(r):r,c=[],u=[],d={},f={},h={},p=0,m,_=this.byGroup(),g=_.nodes,P=_.edges,y=0;y<l.length;y++){var C=l[y],E=C.id();C.isNode()&&(c.unshift(C),e.bfs&&(h[E]=!0,u.push(C)),f[E]=0)}for(var T=function(){var x=e.bfs?c.shift():c.pop(),K=x.id();if(e.dfs){if(h[K])return"continue";h[K]=!0,u.push(x)}var X=f[K],v=d[K],A=v!=null?v.source():null,w=v!=null?v.target():null,O=v==null?void 0:x.same(A)?w[0]:A[0],N=void 0;if(N=a(x,v,O,p++,X),N===!0)return m=x,"break";if(N===!1)return"break";for(var S=x.connectedEdges().filter(function(Q){return(!i||Q.source().same(x))&&P.has(Q)}),I=0;I<S.length;I++){var q=S[I],Y=q.connectedNodes().filter(function(Q){return!Q.same(x)&&g.has(Q)}),ee=Y.id();Y.length!==0&&!h[ee]&&(Y=Y[0],c.push(Y),e.bfs&&(h[ee]=!0,u.push(Y)),d[ee]=q,f[ee]=f[K]+1)}};c.length!==0;){var B=T();if(B!=="continue"&&B==="break")break}for(var D=s.collection(),k=0;k<u.length;k++){var $=u[k],M=d[$.id()];M!=null&&D.push(M),D.push($)}return{path:s.collection(D),found:s.collection(m)}}},zi={breadthFirstSearch:Tu({bfs:!0}),depthFirstSearch:Tu({dfs:!0})};zi.bfs=zi.breadthFirstSearch;zi.dfs=zi.depthFirstSearch;var mg=v1(function(t,e){(function(){var n,r,a,i,o,s,l,c,u,d,f,h,p,m,_;a=Math.floor,d=Math.min,r=function(g,P){return g<P?-1:g>P?1:0},u=function(g,P,y,C,E){var T;if(y==null&&(y=0),E==null&&(E=r),y<0)throw new Error("lo must be non-negative");for(C==null&&(C=g.length);y<C;)T=a((y+C)/2),E(P,g[T])<0?C=T:y=T+1;return[].splice.apply(g,[y,y-y].concat(P)),P},s=function(g,P,y){return y==null&&(y=r),g.push(P),m(g,0,g.length-1,y)},o=function(g,P){var y,C;return P==null&&(P=r),y=g.pop(),g.length?(C=g[0],g[0]=y,_(g,0,P)):C=y,C},c=function(g,P,y){var C;return y==null&&(y=r),C=g[0],g[0]=P,_(g,0,y),C},l=function(g,P,y){var C;return y==null&&(y=r),g.length&&y(g[0],P)<0&&(C=[g[0],P],P=C[0],g[0]=C[1],_(g,0,y)),P},i=function(g,P){var y,C,E,T,B,D;for(P==null&&(P=r),T=function(){D=[];for(var k=0,$=a(g.length/2);0<=$?k<$:k>$;0<=$?k++:k--)D.push(k);return D}.apply(this).reverse(),B=[],C=0,E=T.length;C<E;C++)y=T[C],B.push(_(g,y,P));return B},p=function(g,P,y){var C;if(y==null&&(y=r),C=g.indexOf(P),C!==-1)return m(g,0,C,y),_(g,C,y)},f=function(g,P,y){var C,E,T,B,D;if(y==null&&(y=r),E=g.slice(0,P),!E.length)return E;for(i(E,y),D=g.slice(P),T=0,B=D.length;T<B;T++)C=D[T],l(E,C,y);return E.sort(y).reverse()},h=function(g,P,y){var C,E,T,B,D,k,$,M,b;if(y==null&&(y=r),P*10<=g.length){if(T=g.slice(0,P).sort(y),!T.length)return T;for(E=T[T.length-1],$=g.slice(P),B=0,k=$.length;B<k;B++)C=$[B],y(C,E)<0&&(u(T,C,0,null,y),T.pop(),E=T[T.length-1]);return T}for(i(g,y),b=[],D=0,M=d(P,g.length);0<=M?D<M:D>M;0<=M?++D:--D)b.push(o(g,y));return b},m=function(g,P,y,C){var E,T,B;for(C==null&&(C=r),E=g[y];y>P;){if(B=y-1>>1,T=g[B],C(E,T)<0){g[y]=T,y=B;continue}break}return g[y]=E},_=function(g,P,y){var C,E,T,B,D;for(y==null&&(y=r),E=g.length,D=P,T=g[P],C=2*P+1;C<E;)B=C+1,B<E&&!(y(g[C],g[B])<0)&&(C=B),g[P]=g[C],P=C,C=2*P+1;return g[P]=T,m(g,D,P,y)},n=function(){g.push=s,g.pop=o,g.replace=c,g.pushpop=l,g.heapify=i,g.updateItem=p,g.nlargest=f,g.nsmallest=h;function g(P){this.cmp=P??r,this.nodes=[]}return g.prototype.push=function(P){return s(this.nodes,P,this.cmp)},g.prototype.pop=function(){return o(this.nodes,this.cmp)},g.prototype.peek=function(){return this.nodes[0]},g.prototype.contains=function(P){return this.nodes.indexOf(P)!==-1},g.prototype.replace=function(P){return c(this.nodes,P,this.cmp)},g.prototype.pushpop=function(P){return l(this.nodes,P,this.cmp)},g.prototype.heapify=function(){return i(this.nodes,this.cmp)},g.prototype.updateItem=function(P){return p(this.nodes,P,this.cmp)},g.prototype.clear=function(){return this.nodes=[]},g.prototype.empty=function(){return this.nodes.length===0},g.prototype.size=function(){return this.nodes.length},g.prototype.clone=function(){var P;return P=new g,P.nodes=this.nodes.slice(0),P},g.prototype.toArray=function(){return this.nodes.slice(0)},g.prototype.insert=g.prototype.push,g.prototype.top=g.prototype.peek,g.prototype.front=g.prototype.peek,g.prototype.has=g.prototype.contains,g.prototype.copy=g.prototype.clone,g}(),function(g,P){return t.exports=P()}(this,function(){return n})}).call($i)}),ao=mg,gg=et({root:null,weight:function(e){return 1},directed:!1}),_g={dijkstra:function(e){if(!un(e)){var n=arguments;e={root:n[0],weight:n[1],directed:n[2]}}var r=gg(e),a=r.root,i=r.weight,o=r.directed,s=this,l=i,c=ze(a)?this.filter(a)[0]:a[0],u={},d={},f={},h=this.byGroup(),p=h.nodes,m=h.edges;m.unmergeBy(function(X){return X.isLoop()});for(var _=function(v){return u[v.id()]},g=function(v,A){u[v.id()]=A,P.updateItem(v)},P=new ao(function(X,v){return _(X)-_(v)}),y=0;y<p.length;y++){var C=p[y];u[C.id()]=C.same(c)?0:1/0,P.push(C)}for(var E=function(v,A){for(var w=(o?v.edgesTo(A):v.edgesWith(A)).intersect(m),O=1/0,N,S=0;S<w.length;S++){var I=w[S],q=l(I);(q<O||!N)&&(O=q,N=I)}return{edge:N,dist:O}};P.size()>0;){var T=P.pop(),B=_(T),D=T.id();if(f[D]=B,B!==1/0)for(var k=T.neighborhood().intersect(p),$=0;$<k.length;$++){var M=k[$],b=M.id(),x=E(T,M),K=B+x.dist;K<_(M)&&(g(M,K),d[b]={node:T,edge:x.edge})}}return{distanceTo:function(v){var A=ze(v)?p.filter(v)[0]:v[0];return f[A.id()]},pathTo:function(v){var A=ze(v)?p.filter(v)[0]:v[0],w=[],O=A,N=O.id();if(A.length>0)for(w.unshift(A);d[N];){var S=d[N];w.unshift(S.edge),w.unshift(S.node),O=S.node,N=O.id()}return s.spawn(w)}}}},Pg={kruskal:function(e){e=e||function(y){return 1};for(var n=this.byGroup(),r=n.nodes,a=n.edges,i=r.length,o=new Array(i),s=r,l=function(C){for(var E=0;E<o.length;E++){var T=o[E];if(T.has(C))return E}},c=0;c<i;c++)o[c]=this.spawn(r[c]);for(var u=a.sort(function(y,C){return e(y)-e(C)}),d=0;d<u.length;d++){var f=u[d],h=f.source()[0],p=f.target()[0],m=l(h),_=l(p),g=o[m],P=o[_];m!==_&&(s.merge(f),g.merge(P),o.splice(_,1))}return s}},vg=et({root:null,goal:null,weight:function(e){return 1},heuristic:function(e){return 0},directed:!1}),bg={aStar:function(e){var n=this.cy(),r=vg(e),a=r.root,i=r.goal,o=r.heuristic,s=r.directed,l=r.weight;a=n.collection(a)[0],i=n.collection(i)[0];var c=a.id(),u=i.id(),d={},f={},h={},p=new ao(function(N,S){return f[N.id()]-f[S.id()]}),m=new ii,_={},g={},P=function(S,I){p.push(S),m.add(I)},y,C,E=function(){y=p.pop(),C=y.id(),m.delete(C)},T=function(S){return m.has(S)};P(a,c),d[c]=0,f[c]=o(a);for(var B=0;p.size()>0;){if(E(),B++,C===u){for(var D=[],k=i,$=u,M=g[$];D.unshift(k),M!=null&&D.unshift(M),k=_[$],k!=null;)$=k.id(),M=g[$];return{found:!0,distance:d[C],path:this.spawn(D),steps:B}}h[C]=!0;for(var b=y._private.edges,x=0;x<b.length;x++){var K=b[x];if(this.hasElementWithId(K.id())&&!(s&&K.data("source")!==C)){var X=K.source(),v=K.target(),A=X.id()!==C?X:v,w=A.id();if(this.hasElementWithId(w)&&!h[w]){var O=d[C]+l(K);if(!T(w)){d[w]=O,f[w]=O+o(A),P(A,w),_[w]=y,g[w]=K;continue}O<d[w]&&(d[w]=O,f[w]=O+o(A),_[w]=y,g[w]=K)}}}}return{found:!1,distance:void 0,path:void 0,steps:B}}},yg=et({weight:function(e){return 1},directed:!1}),Xg={floydWarshall:function(e){for(var n=this.cy(),r=yg(e),a=r.weight,i=r.directed,o=a,s=this.byGroup(),l=s.nodes,c=s.edges,u=l.length,d=u*u,f=function(q){return l.indexOf(q)},h=function(q){return l[q]},p=new Array(d),m=0;m<d;m++){var _=m%u,g=(m-_)/u;g===_?p[m]=0:p[m]=1/0}for(var P=new Array(d),y=new Array(d),C=0;C<c.length;C++){var E=c[C],T=E.source()[0],B=E.target()[0];if(T!==B){var D=f(T),k=f(B),$=D*u+k,M=o(E);if(p[$]>M&&(p[$]=M,P[$]=k,y[$]=E),!i){var b=k*u+D;!i&&p[b]>M&&(p[b]=M,P[b]=D,y[b]=E)}}}for(var x=0;x<u;x++)for(var K=0;K<u;K++)for(var X=K*u+x,v=0;v<u;v++){var A=K*u+v,w=x*u+v;p[X]+p[w]<p[A]&&(p[A]=p[X]+p[w],P[A]=P[X])}var O=function(q){return(ze(q)?n.filter(q):q)[0]},N=function(q){return f(O(q))},S={distance:function(q,Y){var ee=N(q),Q=N(Y);return p[ee*u+Q]},path:function(q,Y){var ee=N(q),Q=N(Y),U=h(ee);if(ee===Q)return U.collection();if(P[ee*u+Q]==null)return n.collection();var J=n.collection(),F=ee,W;for(J.merge(U);ee!==Q;)F=ee,ee=P[ee*u+Q],W=y[F*u+ee],J.merge(W),J.merge(h(ee));return J}};return S}},Kg=et({weight:function(e){return 1},directed:!1,root:null}),xg={bellmanFord:function(e){var n=this,r=Kg(e),a=r.weight,i=r.directed,o=r.root,s=a,l=this,c=this.cy(),u=this.byGroup(),d=u.edges,f=u.nodes,h=f.length,p=new rr,m=!1,_=[];o=c.collection(o)[0],d.unmergeBy(function(he){return he.isLoop()});for(var g=d.length,P=function(le){var de=p.get(le.id());return de||(de={},p.set(le.id(),de)),de},y=function(le){return(ze(le)?c.$(le):le)[0]},C=function(le){return P(y(le)).dist},E=function(le){for(var de=arguments.length>1&&arguments[1]!==void 0?arguments[1]:o,Pe=y(le),Ce=[],Xe=Pe;;){if(Xe==null)return n.spawn();var ve=P(Xe),xe=ve.edge,ye=ve.pred;if(Ce.unshift(Xe[0]),Xe.same(de)&&Ce.length>0)break;xe!=null&&Ce.unshift(xe),Xe=ye}return l.spawn(Ce)},T=0;T<h;T++){var B=f[T],D=P(B);B.same(o)?D.dist=0:D.dist=1/0,D.pred=null,D.edge=null}for(var k=!1,$=function(le,de,Pe,Ce,Xe,ve){var xe=Ce.dist+ve;xe<Xe.dist&&!Pe.same(Ce.edge)&&(Xe.dist=xe,Xe.pred=le,Xe.edge=Pe,k=!0)},M=1;M<h;M++){k=!1;for(var b=0;b<g;b++){var x=d[b],K=x.source(),X=x.target(),v=s(x),A=P(K),w=P(X);$(K,X,x,A,w,v),i||$(X,K,x,w,A,v)}if(!k)break}if(k)for(var O=[],N=0;N<g;N++){var S=d[N],I=S.source(),q=S.target(),Y=s(S),ee=P(I).dist,Q=P(q).dist;if(ee+Y<Q||!i&&Q+Y<ee)if(m||(pn("Graph contains a negative weight cycle for Bellman-Ford"),m=!0),e.findNegativeWeightCycles!==!1){var U=[];ee+Y<Q&&U.push(I),!i&&Q+Y<ee&&U.push(q);for(var J=U.length,F=0;F<J;F++){var W=U[F],L=[W];L.push(P(W).edge);for(var z=P(W).pred;L.indexOf(z)===-1;)L.push(z),L.push(P(z).edge),z=P(z).pred;L=L.slice(L.indexOf(z));for(var ne=L[0].id(),H=0,_e=2;_e<L.length;_e+=2)L[_e].id()<ne&&(ne=L[_e].id(),H=_e);L=L.slice(H).concat(L.slice(0,H)),L.push(L[0]);var Ae=L.map(function(he){return he.id()}).join(",");O.indexOf(Ae)===-1&&(_.push(l.spawn(L)),O.push(Ae))}}else break}return{distanceTo:C,pathTo:E,hasNegativeWeightCycle:m,negativeWeightCycles:_}}},Ag=Math.sqrt(2),Cg=function(e,n,r){r.length===0&&En("Karger-Stein must be run on a connected (sub)graph");for(var a=r[e],i=a[1],o=a[2],s=n[i],l=n[o],c=r,u=c.length-1;u>=0;u--){var d=c[u],f=d[1],h=d[2];(n[f]===s&&n[h]===l||n[f]===l&&n[h]===s)&&c.splice(u,1)}for(var p=0;p<c.length;p++){var m=c[p];m[1]===l?(c[p]=m.slice(),c[p][1]=s):m[2]===l&&(c[p]=m.slice(),c[p][2]=s)}for(var _=0;_<n.length;_++)n[_]===l&&(n[_]=s);return c},Vc=function(e,n,r,a){for(;r>a;){var i=Math.floor(Math.random()*n.length);n=Cg(i,e,n),r--}return n},Eg={kargerStein:function(){var e=this,n=this.byGroup(),r=n.nodes,a=n.edges;a.unmergeBy(function(w){return w.isLoop()});var i=r.length,o=a.length,s=Math.ceil(Math.pow(Math.log(i)/Math.LN2,2)),l=Math.floor(i/Ag);if(i<2){En("At least 2 nodes are required for Karger-Stein algorithm");return}for(var c=[],u=0;u<o;u++){var d=a[u];c.push([u,r.indexOf(d.source()),r.indexOf(d.target())])}for(var f=1/0,h=[],p=new Array(i),m=new Array(i),_=new Array(i),g=function(O,N){for(var S=0;S<i;S++)N[S]=O[S]},P=0;P<=s;P++){for(var y=0;y<i;y++)m[y]=y;var C=Vc(m,c.slice(),i,l),E=C.slice();g(m,_);var T=Vc(m,C,l,2),B=Vc(_,E,l,2);T.length<=B.length&&T.length<f?(f=T.length,h=T,g(m,p)):B.length<=T.length&&B.length<f&&(f=B.length,h=B,g(_,p))}for(var D=this.spawn(h.map(function(w){return a[w[0]]})),k=this.spawn(),$=this.spawn(),M=p[0],b=0;b<p.length;b++){var x=p[b],K=r[b];x===M?k.merge(K):$.merge(K)}var X=function(O){var N=e.spawn();return O.forEach(function(S){N.merge(S),S.connectedEdges().forEach(function(I){e.contains(I)&&!D.contains(I)&&N.merge(I)})}),N},v=[X(k),X($)],A={cut:D,components:v,partition1:k,partition2:$};return A}},wg=function(e){return{x:e.x,y:e.y}},ec=function(e,n,r){return{x:e.x*n+r.x,y:e.y*n+r.y}},cf=function(e,n,r){return{x:(e.x-r.x)/n,y:(e.y-r.y)/n}},Ha=function(e){return{x:e[0],y:e[1]}},Og=function(e){for(var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:e.length,a=1/0,i=n;i<r;i++){var o=e[i];isFinite(o)&&(a=Math.min(o,a))}return a},Tg=function(e){for(var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:e.length,a=-1/0,i=n;i<r;i++){var o=e[i];isFinite(o)&&(a=Math.max(o,a))}return a},Bg=function(e){for(var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:e.length,a=0,i=0,o=n;o<r;o++){var s=e[o];isFinite(s)&&(a+=s,i++)}return a/i},kg=function(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:e.length,a=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,i=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!0,o=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!0;a?e=e.slice(n,r):(r<e.length&&e.splice(r,e.length-r),n>0&&e.splice(0,n));for(var s=0,l=e.length-1;l>=0;l--){var c=e[l];o?isFinite(c)||(e[l]=-1/0,s++):e.splice(l,1)}i&&e.sort(function(f,h){return f-h});var u=e.length,d=Math.floor(u/2);return u%2!==0?e[d+1+s]:(e[d-1+s]+e[d+s])/2},Dg=function(e){return Math.PI*e/180},_s=function(e,n){return Math.atan2(n,e)-Math.PI/2},Tl=Math.log2||function(t){return Math.log(t)/Math.log(2)},lf=function(e){return e>0?1:e<0?-1:0},ca=function(e,n){return Math.sqrt(ta(e,n))},ta=function(e,n){var r=n.x-e.x,a=n.y-e.y;return r*r+a*a},$g=function(e){for(var n=e.length,r=0,a=0;a<n;a++)r+=e[a];for(var i=0;i<n;i++)e[i]=e[i]/r;return e},Qn=function(e,n,r,a){return(1-a)*(1-a)*e+2*(1-a)*a*n+a*a*r},Ja=function(e,n,r,a){return{x:Qn(e.x,n.x,r.x,a),y:Qn(e.y,n.y,r.y,a)}},Sg=function(e,n,r,a){var i={x:n.x-e.x,y:n.y-e.y},o=ca(e,n),s={x:i.x/o,y:i.y/o};return r=r??0,a=a??r*o,{x:e.x+s.x*a,y:e.y+s.y*a}},Vi=function(e,n,r){return Math.max(e,Math.min(r,n))},At=function(e){if(e==null)return{x1:1/0,y1:1/0,x2:-1/0,y2:-1/0,w:0,h:0};if(e.x1!=null&&e.y1!=null){if(e.x2!=null&&e.y2!=null&&e.x2>=e.x1&&e.y2>=e.y1)return{x1:e.x1,y1:e.y1,x2:e.x2,y2:e.y2,w:e.x2-e.x1,h:e.y2-e.y1};if(e.w!=null&&e.h!=null&&e.w>=0&&e.h>=0)return{x1:e.x1,y1:e.y1,x2:e.x1+e.w,y2:e.y1+e.h,w:e.w,h:e.h}}},Wg=function(e){return{x1:e.x1,x2:e.x2,w:e.w,y1:e.y1,y2:e.y2,h:e.h}},Ng=function(e){e.x1=1/0,e.y1=1/0,e.x2=-1/0,e.y2=-1/0,e.w=0,e.h=0},Mg=function(e,n,r){return{x1:e.x1+n,x2:e.x2+n,y1:e.y1+r,y2:e.y2+r,w:e.w,h:e.h}},uf=function(e,n){e.x1=Math.min(e.x1,n.x1),e.x2=Math.max(e.x2,n.x2),e.w=e.x2-e.x1,e.y1=Math.min(e.y1,n.y1),e.y2=Math.max(e.y2,n.y2),e.h=e.y2-e.y1},Rg=function(e,n,r){e.x1=Math.min(e.x1,n),e.x2=Math.max(e.x2,n),e.w=e.x2-e.x1,e.y1=Math.min(e.y1,r),e.y2=Math.max(e.y2,r),e.h=e.y2-e.y1},Ts=function(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return e.x1-=n,e.x2+=n,e.y1-=n,e.y2+=n,e.w=e.x2-e.x1,e.h=e.y2-e.y1,e},Bs=function(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[0],r,a,i,o;if(n.length===1)r=a=i=o=n[0];else if(n.length===2)r=i=n[0],o=a=n[1];else if(n.length===4){var s=Rn(n,4);r=s[0],a=s[1],i=s[2],o=s[3]}return e.x1-=o,e.x2+=a,e.y1-=r,e.y2+=i,e.w=e.x2-e.x1,e.h=e.y2-e.y1,e},Bu=function(e,n){e.x1=n.x1,e.y1=n.y1,e.x2=n.x2,e.y2=n.y2,e.w=e.x2-e.x1,e.h=e.y2-e.y1},Bl=function(e,n){return!(e.x1>n.x2||n.x1>e.x2||e.x2<n.x1||n.x2<e.x1||e.y2<n.y1||n.y2<e.y1||e.y1>n.y2||n.y1>e.y2)},ti=function(e,n,r){return e.x1<=n&&n<=e.x2&&e.y1<=r&&r<=e.y2},Ig=function(e,n){return ti(e,n.x,n.y)},df=function(e,n){return ti(e,n.x1,n.y1)&&ti(e,n.x2,n.y2)},ff=function(e,n,r,a,i,o,s){var l=arguments.length>7&&arguments[7]!==void 0?arguments[7]:"auto",c=l==="auto"?la(i,o):l,u=i/2,d=o/2;c=Math.min(c,u,d);var f=c!==u,h=c!==d,p;if(f){var m=r-u+c-s,_=a-d-s,g=r+u-c+s,P=_;if(p=Wr(e,n,r,a,m,_,g,P,!1),p.length>0)return p}if(h){var y=r+u+s,C=a-d+c-s,E=y,T=a+d-c+s;if(p=Wr(e,n,r,a,y,C,E,T,!1),p.length>0)return p}if(f){var B=r-u+c-s,D=a+d+s,k=r+u-c+s,$=D;if(p=Wr(e,n,r,a,B,D,k,$,!1),p.length>0)return p}if(h){var M=r-u-s,b=a-d+c-s,x=M,K=a+d-c+s;if(p=Wr(e,n,r,a,M,b,x,K,!1),p.length>0)return p}var X;{var v=r-u+c,A=a-d+c;if(X=Wi(e,n,r,a,v,A,c+s),X.length>0&&X[0]<=v&&X[1]<=A)return[X[0],X[1]]}{var w=r+u-c,O=a-d+c;if(X=Wi(e,n,r,a,w,O,c+s),X.length>0&&X[0]>=w&&X[1]<=O)return[X[0],X[1]]}{var N=r+u-c,S=a+d-c;if(X=Wi(e,n,r,a,N,S,c+s),X.length>0&&X[0]>=N&&X[1]>=S)return[X[0],X[1]]}{var I=r-u+c,q=a+d-c;if(X=Wi(e,n,r,a,I,q,c+s),X.length>0&&X[0]<=I&&X[1]>=q)return[X[0],X[1]]}return[]},Lg=function(e,n,r,a,i,o,s){var l=s,c=Math.min(r,i),u=Math.max(r,i),d=Math.min(a,o),f=Math.max(a,o);return c-l<=e&&e<=u+l&&d-l<=n&&n<=f+l},Ug=function(e,n,r,a,i,o,s,l,c){var u={x1:Math.min(r,s,i)-c,x2:Math.max(r,s,i)+c,y1:Math.min(a,l,o)-c,y2:Math.max(a,l,o)+c};return!(e<u.x1||e>u.x2||n<u.y1||n>u.y2)},Fg=function(e,n,r,a){r-=a;var i=n*n-4*e*r;if(i<0)return[];var o=Math.sqrt(i),s=2*e,l=(-n+o)/s,c=(-n-o)/s;return[l,c]},jg=function(e,n,r,a,i){var o=1e-5;e===0&&(e=o),n/=e,r/=e,a/=e;var s,l,c,u,d,f,h,p;if(l=(3*r-n*n)/9,c=-(27*a)+n*(9*r-2*(n*n)),c/=54,s=l*l*l+c*c,i[1]=0,h=n/3,s>0){d=c+Math.sqrt(s),d=d<0?-Math.pow(-d,1/3):Math.pow(d,1/3),f=c-Math.sqrt(s),f=f<0?-Math.pow(-f,1/3):Math.pow(f,1/3),i[0]=-h+d+f,h+=(d+f)/2,i[4]=i[2]=-h,h=Math.sqrt(3)*(-f+d)/2,i[3]=h,i[5]=-h;return}if(i[5]=i[3]=0,s===0){p=c<0?-Math.pow(-c,1/3):Math.pow(c,1/3),i[0]=-h+2*p,i[4]=i[2]=-(p+h);return}l=-l,u=l*l*l,u=Math.acos(c/Math.sqrt(u)),p=2*Math.sqrt(l),i[0]=-h+p*Math.cos(u/3),i[2]=-h+p*Math.cos((u+2*Math.PI)/3),i[4]=-h+p*Math.cos((u+4*Math.PI)/3)},Yg=function(e,n,r,a,i,o,s,l){var c=1*r*r-4*r*i+2*r*s+4*i*i-4*i*s+s*s+a*a-4*a*o+2*a*l+4*o*o-4*o*l+l*l,u=1*9*r*i-3*r*r-3*r*s-6*i*i+3*i*s+9*a*o-3*a*a-3*a*l-6*o*o+3*o*l,d=1*3*r*r-6*r*i+r*s-r*e+2*i*i+2*i*e-s*e+3*a*a-6*a*o+a*l-a*n+2*o*o+2*o*n-l*n,f=1*r*i-r*r+r*e-i*e+a*o-a*a+a*n-o*n,h=[];jg(c,u,d,f,h);for(var p=1e-7,m=[],_=0;_<6;_+=2)Math.abs(h[_+1])<p&&h[_]>=0&&h[_]<=1&&m.push(h[_]);m.push(1),m.push(0);for(var g=-1,P,y,C,E=0;E<m.length;E++)P=Math.pow(1-m[E],2)*r+2*(1-m[E])*m[E]*i+m[E]*m[E]*s,y=Math.pow(1-m[E],2)*a+2*(1-m[E])*m[E]*o+m[E]*m[E]*l,C=Math.pow(P-e,2)+Math.pow(y-n,2),g>=0?C<g&&(g=C):g=C;return g},zg=function(e,n,r,a,i,o){var s=[e-r,n-a],l=[i-r,o-a],c=l[0]*l[0]+l[1]*l[1],u=s[0]*s[0]+s[1]*s[1],d=s[0]*l[0]+s[1]*l[1],f=d*d/c;return d<0?u:f>c?(e-i)*(e-i)+(n-o)*(n-o):u-f},xt=function(e,n,r){for(var a,i,o,s,l,c=0,u=0;u<r.length/2;u++)if(a=r[u*2],i=r[u*2+1],u+1<r.length/2?(o=r[(u+1)*2],s=r[(u+1)*2+1]):(o=r[(u+1-r.length/2)*2],s=r[(u+1-r.length/2)*2+1]),!(a==e&&o==e))if(a>=e&&e>=o||a<=e&&e<=o)l=(e-a)/(o-a)*(s-i)+i,l>n&&c++;else continue;return c%2!==0},pr=function(e,n,r,a,i,o,s,l,c){var u=new Array(r.length),d;l[0]!=null?(d=Math.atan(l[1]/l[0]),l[0]<0?d=d+Math.PI/2:d=-d-Math.PI/2):d=l;for(var f=Math.cos(-d),h=Math.sin(-d),p=0;p<u.length/2;p++)u[p*2]=o/2*(r[p*2]*f-r[p*2+1]*h),u[p*2+1]=s/2*(r[p*2+1]*f+r[p*2]*h),u[p*2]+=a,u[p*2+1]+=i;var m;if(c>0){var _=Fs(u,-c);m=Us(_)}else m=u;return xt(e,n,m)},Vg=function(e,n,r,a,i,o,s,l){for(var c=new Array(r.length*2),u=0;u<l.length;u++){var d=l[u];c[u*4+0]=d.startX,c[u*4+1]=d.startY,c[u*4+2]=d.stopX,c[u*4+3]=d.stopY;var f=Math.pow(d.cx-e,2)+Math.pow(d.cy-n,2);if(f<=Math.pow(d.radius,2))return!0}return xt(e,n,c)},Us=function(e){for(var n=new Array(e.length/2),r,a,i,o,s,l,c,u,d=0;d<e.length/4;d++){r=e[d*4],a=e[d*4+1],i=e[d*4+2],o=e[d*4+3],d<e.length/4-1?(s=e[(d+1)*4],l=e[(d+1)*4+1],c=e[(d+1)*4+2],u=e[(d+1)*4+3]):(s=e[0],l=e[1],c=e[2],u=e[3]);var f=Wr(r,a,i,o,s,l,c,u,!0);n[d*2]=f[0],n[d*2+1]=f[1]}return n},Fs=function(e,n){for(var r=new Array(e.length*2),a,i,o,s,l=0;l<e.length/2;l++){a=e[l*2],i=e[l*2+1],l<e.length/2-1?(o=e[(l+1)*2],s=e[(l+1)*2+1]):(o=e[0],s=e[1]);var c=s-i,u=-(o-a),d=Math.sqrt(c*c+u*u),f=c/d,h=u/d;r[l*4]=a+f*n,r[l*4+1]=i+h*n,r[l*4+2]=o+f*n,r[l*4+3]=s+h*n}return r},qg=function(e,n,r,a,i,o){var s=r-e,l=a-n;s/=i,l/=o;var c=Math.sqrt(s*s+l*l),u=c-1;if(u<0)return[];var d=u/c;return[(r-e)*d+e,(a-n)*d+n]},oa=function(e,n,r,a,i,o,s){return e-=i,n-=o,e/=r/2+s,n/=a/2+s,e*e+n*n<=1},Wi=function(e,n,r,a,i,o,s){var l=[r-e,a-n],c=[e-i,n-o],u=l[0]*l[0]+l[1]*l[1],d=2*(c[0]*l[0]+c[1]*l[1]),f=c[0]*c[0]+c[1]*c[1]-s*s,h=d*d-4*u*f;if(h<0)return[];var p=(-d+Math.sqrt(h))/(2*u),m=(-d-Math.sqrt(h))/(2*u),_=Math.min(p,m),g=Math.max(p,m),P=[];if(_>=0&&_<=1&&P.push(_),g>=0&&g<=1&&P.push(g),P.length===0)return[];var y=P[0]*l[0]+e,C=P[0]*l[1]+n;if(P.length>1){if(P[0]==P[1])return[y,C];var E=P[1]*l[0]+e,T=P[1]*l[1]+n;return[y,C,E,T]}else return[y,C]},qc=function(e,n,r){return n<=e&&e<=r||r<=e&&e<=n?e:e<=n&&n<=r||r<=n&&n<=e?n:r},Wr=function(e,n,r,a,i,o,s,l,c){var u=e-i,d=r-e,f=s-i,h=n-o,p=a-n,m=l-o,_=f*h-m*u,g=d*h-p*u,P=m*d-f*p;if(P!==0){var y=_/P,C=g/P,E=.001,T=0-E,B=1+E;return T<=y&&y<=B&&T<=C&&C<=B?[e+y*d,n+y*p]:c?[e+y*d,n+y*p]:[]}else return _===0||g===0?qc(e,r,s)===s?[s,l]:qc(e,r,i)===i?[i,o]:qc(i,s,r)===r?[r,a]:[]:[]},qi=function(e,n,r,a,i,o,s,l){var c=[],u,d=new Array(r.length),f=!0;o==null&&(f=!1);var h;if(f){for(var p=0;p<d.length/2;p++)d[p*2]=r[p*2]*o+a,d[p*2+1]=r[p*2+1]*s+i;if(l>0){var m=Fs(d,-l);h=Us(m)}else h=d}else h=r;for(var _,g,P,y,C=0;C<h.length/2;C++)_=h[C*2],g=h[C*2+1],C<h.length/2-1?(P=h[(C+1)*2],y=h[(C+1)*2+1]):(P=h[0],y=h[1]),u=Wr(e,n,a,i,_,g,P,y),u.length!==0&&c.push(u[0],u[1]);return c},Hg=function(e,n,r,a,i,o,s,l,c){var u=[],d,f=new Array(r.length*2);c.forEach(function(P,y){y===0?(f[f.length-2]=P.startX,f[f.length-1]=P.startY):(f[y*4-2]=P.startX,f[y*4-1]=P.startY),f[y*4]=P.stopX,f[y*4+1]=P.stopY,d=Wi(e,n,a,i,P.cx,P.cy,P.radius),d.length!==0&&u.push(d[0],d[1])});for(var h=0;h<f.length/4;h++)d=Wr(e,n,a,i,f[h*4],f[h*4+1],f[h*4+2],f[h*4+3],!1),d.length!==0&&u.push(d[0],d[1]);if(u.length>2){for(var p=[u[0],u[1]],m=Math.pow(p[0]-e,2)+Math.pow(p[1]-n,2),_=1;_<u.length/2;_++){var g=Math.pow(u[_*2]-e,2)+Math.pow(u[_*2+1]-n,2);g<=m&&(p[0]=u[_*2],p[1]=u[_*2+1],m=g)}return p}return u},Ps=function(e,n,r){var a=[e[0]-n[0],e[1]-n[1]],i=Math.sqrt(a[0]*a[0]+a[1]*a[1]),o=(i-r)/i;return o<0&&(o=1e-5),[n[0]+o*a[0],n[1]+o*a[1]]},gt=function(e,n){var r=cl(e,n);return r=hf(r),r},hf=function(e){for(var n,r,a=e.length/2,i=1/0,o=1/0,s=-1/0,l=-1/0,c=0;c<a;c++)n=e[2*c],r=e[2*c+1],i=Math.min(i,n),s=Math.max(s,n),o=Math.min(o,r),l=Math.max(l,r);for(var u=2/(s-i),d=2/(l-o),f=0;f<a;f++)n=e[2*f]=e[2*f]*u,r=e[2*f+1]=e[2*f+1]*d,i=Math.min(i,n),s=Math.max(s,n),o=Math.min(o,r),l=Math.max(l,r);if(o<-1)for(var h=0;h<a;h++)r=e[2*h+1]=e[2*h+1]+(-1-o);return e},cl=function(e,n){var r=1/e*2*Math.PI,a=e%2===0?Math.PI/2+r/2:Math.PI/2;a+=n;for(var i=new Array(e*2),o,s=0;s<e;s++)o=s*r+a,i[2*s]=Math.cos(o),i[2*s+1]=Math.sin(-o);return i},la=function(e,n){return Math.min(e/4,n/4,8)},pf=function(e,n){return Math.min(e/10,n/10,8)},kl=function(){return 8},Gg=function(e,n,r){return[e-2*n+r,2*(n-e),e]},ll=function(e,n){return{heightOffset:Math.min(15,.05*n),widthOffset:Math.min(100,.25*e),ctrlPtOffsetPct:.05}},Jg=et({dampingFactor:.8,precision:1e-6,iterations:200,weight:function(e){return 1}}),Zg={pageRank:function(e){for(var n=Jg(e),r=n.dampingFactor,a=n.precision,i=n.iterations,o=n.weight,s=this._private.cy,l=this.byGroup(),c=l.nodes,u=l.edges,d=c.length,f=d*d,h=u.length,p=new Array(f),m=new Array(d),_=(1-r)/d,g=0;g<d;g++){for(var P=0;P<d;P++){var y=g*d+P;p[y]=0}m[g]=0}for(var C=0;C<h;C++){var E=u[C],T=E.data("source"),B=E.data("target");if(T!==B){var D=c.indexOfId(T),k=c.indexOfId(B),$=o(E),M=k*d+D;p[M]+=$,m[D]+=$}}for(var b=1/d+_,x=0;x<d;x++)if(m[x]===0)for(var K=0;K<d;K++){var X=K*d+x;p[X]=b}else for(var v=0;v<d;v++){var A=v*d+x;p[A]=p[A]/m[x]+_}for(var w=new Array(d),O=new Array(d),N,S=0;S<d;S++)w[S]=1;for(var I=0;I<i;I++){for(var q=0;q<d;q++)O[q]=0;for(var Y=0;Y<d;Y++)for(var ee=0;ee<d;ee++){var Q=Y*d+ee;O[Y]+=p[Q]*w[ee]}$g(O),N=w,w=O,O=N;for(var U=0,J=0;J<d;J++){var F=N[J]-w[J];U+=F*F}if(U<a)break}var W={rank:function(z){return z=s.collection(z)[0],w[c.indexOf(z)]}};return W}},ku=et({root:null,weight:function(e){return 1},directed:!1,alpha:0}),Za={degreeCentralityNormalized:function(e){e=ku(e);var n=this.cy(),r=this.nodes(),a=r.length;if(e.directed){for(var u={},d={},f=0,h=0,p=0;p<a;p++){var m=r[p],_=m.id();e.root=m;var g=this.degreeCentrality(e);f<g.indegree&&(f=g.indegree),h<g.outdegree&&(h=g.outdegree),u[_]=g.indegree,d[_]=g.outdegree}return{indegree:function(y){return f==0?0:(ze(y)&&(y=n.filter(y)),u[y.id()]/f)},outdegree:function(y){return h===0?0:(ze(y)&&(y=n.filter(y)),d[y.id()]/h)}}}else{for(var i={},o=0,s=0;s<a;s++){var l=r[s];e.root=l;var c=this.degreeCentrality(e);o<c.degree&&(o=c.degree),i[l.id()]=c.degree}return{degree:function(y){return o===0?0:(ze(y)&&(y=n.filter(y)),i[y.id()]/o)}}}},degreeCentrality:function(e){e=ku(e);var n=this.cy(),r=this,a=e,i=a.root,o=a.weight,s=a.directed,l=a.alpha;if(i=n.collection(i)[0],s){for(var h=i.connectedEdges(),p=h.filter(function(T){return T.target().same(i)&&r.has(T)}),m=h.filter(function(T){return T.source().same(i)&&r.has(T)}),_=p.length,g=m.length,P=0,y=0,C=0;C<p.length;C++)P+=o(p[C]);for(var E=0;E<m.length;E++)y+=o(m[E]);return{indegree:Math.pow(_,1-l)*Math.pow(P,l),outdegree:Math.pow(g,1-l)*Math.pow(y,l)}}else{for(var c=i.connectedEdges().intersection(r),u=c.length,d=0,f=0;f<c.length;f++)d+=o(c[f]);return{degree:Math.pow(u,1-l)*Math.pow(d,l)}}}};Za.dc=Za.degreeCentrality;Za.dcn=Za.degreeCentralityNormalised=Za.degreeCentralityNormalized;var Du=et({harmonic:!0,weight:function(){return 1},directed:!1,root:null}),Qa={closenessCentralityNormalized:function(e){for(var n=Du(e),r=n.harmonic,a=n.weight,i=n.directed,o=this.cy(),s={},l=0,c=this.nodes(),u=this.floydWarshall({weight:a,directed:i}),d=0;d<c.length;d++){for(var f=0,h=c[d],p=0;p<c.length;p++)if(d!==p){var m=u.distance(h,c[p]);r?f+=1/m:f+=m}r||(f=1/f),l<f&&(l=f),s[h.id()]=f}return{closeness:function(g){return l==0?0:(ze(g)?g=o.filter(g)[0].id():g=g.id(),s[g]/l)}}},closenessCentrality:function(e){var n=Du(e),r=n.root,a=n.weight,i=n.directed,o=n.harmonic;r=this.filter(r)[0];for(var s=this.dijkstra({root:r,weight:a,directed:i}),l=0,c=this.nodes(),u=0;u<c.length;u++){var d=c[u];if(!d.same(r)){var f=s.distanceTo(d);o?l+=1/f:l+=f}}return o?l:1/l}};Qa.cc=Qa.closenessCentrality;Qa.ccn=Qa.closenessCentralityNormalised=Qa.closenessCentralityNormalized;var Qg=et({weight:null,directed:!1}),ul={betweennessCentrality:function(e){for(var n=Qg(e),r=n.directed,a=n.weight,i=a!=null,o=this.cy(),s=this.nodes(),l={},c={},u=0,d={set:function(y,C){c[y]=C,C>u&&(u=C)},get:function(y){return c[y]}},f=0;f<s.length;f++){var h=s[f],p=h.id();r?l[p]=h.outgoers().nodes():l[p]=h.openNeighborhood().nodes(),d.set(p,0)}for(var m=function(y){for(var C=s[y].id(),E=[],T={},B={},D={},k=new ao(function(ee,Q){return D[ee]-D[Q]}),$=0;$<s.length;$++){var M=s[$].id();T[M]=[],B[M]=0,D[M]=1/0}for(B[C]=1,D[C]=0,k.push(C);!k.empty();){var b=k.pop();if(E.push(b),i)for(var x=0;x<l[b].length;x++){var K=l[b][x],X=o.getElementById(b),v=void 0;X.edgesTo(K).length>0?v=X.edgesTo(K)[0]:v=K.edgesTo(X)[0];var A=a(v);K=K.id(),D[K]>D[b]+A&&(D[K]=D[b]+A,k.nodes.indexOf(K)<0?k.push(K):k.updateItem(K),B[K]=0,T[K]=[]),D[K]==D[b]+A&&(B[K]=B[K]+B[b],T[K].push(b))}else for(var w=0;w<l[b].length;w++){var O=l[b][w].id();D[O]==1/0&&(k.push(O),D[O]=D[b]+1),D[O]==D[b]+1&&(B[O]=B[O]+B[b],T[O].push(b))}}for(var N={},S=0;S<s.length;S++)N[s[S].id()]=0;for(;E.length>0;){for(var I=E.pop(),q=0;q<T[I].length;q++){var Y=T[I][q];N[Y]=N[Y]+B[Y]/B[I]*(1+N[I])}I!=s[y].id()&&d.set(I,d.get(I)+N[I])}},_=0;_<s.length;_++)m(_);var g={betweenness:function(y){var C=o.collection(y).id();return d.get(C)},betweennessNormalized:function(y){if(u==0)return 0;var C=o.collection(y).id();return d.get(C)/u}};return g.betweennessNormalised=g.betweennessNormalized,g}};ul.bc=ul.betweennessCentrality;var e_=et({expandFactor:2,inflateFactor:2,multFactor:1,maxIterations:20,attributes:[function(t){return 1}]}),n_=function(e){return e_(e)},t_=function(e,n){for(var r=0,a=0;a<n.length;a++)r+=n[a](e);return r},r_=function(e,n,r){for(var a=0;a<n;a++)e[a*n+a]=r},mf=function(e,n){for(var r,a=0;a<n;a++){r=0;for(var i=0;i<n;i++)r+=e[i*n+a];for(var o=0;o<n;o++)e[o*n+a]=e[o*n+a]/r}},a_=function(e,n,r){for(var a=new Array(r*r),i=0;i<r;i++){for(var o=0;o<r;o++)a[i*r+o]=0;for(var s=0;s<r;s++)for(var l=0;l<r;l++)a[i*r+l]+=e[i*r+s]*n[s*r+l]}return a},i_=function(e,n,r){for(var a=e.slice(0),i=1;i<r;i++)e=a_(e,a,n);return e},o_=function(e,n,r){for(var a=new Array(n*n),i=0;i<n*n;i++)a[i]=Math.pow(e[i],r);return mf(a,n),a},s_=function(e,n,r,a){for(var i=0;i<r;i++){var o=Math.round(e[i]*Math.pow(10,a))/Math.pow(10,a),s=Math.round(n[i]*Math.pow(10,a))/Math.pow(10,a);if(o!==s)return!1}return!0},c_=function(e,n,r,a){for(var i=[],o=0;o<n;o++){for(var s=[],l=0;l<n;l++)Math.round(e[o*n+l]*1e3)/1e3>0&&s.push(r[l]);s.length!==0&&i.push(a.collection(s))}return i},l_=function(e,n){for(var r=0;r<e.length;r++)if(!n[r]||e[r].id()!==n[r].id())return!1;return!0},u_=function(e){for(var n=0;n<e.length;n++)for(var r=0;r<e.length;r++)n!=r&&l_(e[n],e[r])&&e.splice(r,1);return e},$u=function(e){for(var n=this.nodes(),r=this.edges(),a=this.cy(),i=n_(e),o={},s=0;s<n.length;s++)o[n[s].id()]=s;for(var l=n.length,c=l*l,u=new Array(c),d,f=0;f<c;f++)u[f]=0;for(var h=0;h<r.length;h++){var p=r[h],m=o[p.source().id()],_=o[p.target().id()],g=t_(p,i.attributes);u[m*l+_]+=g,u[_*l+m]+=g}r_(u,l,i.multFactor),mf(u,l);for(var P=!0,y=0;P&&y<i.maxIterations;)P=!1,d=i_(u,l,i.expandFactor),u=o_(d,l,i.inflateFactor),s_(u,d,c,4)||(P=!0),y++;var C=c_(u,l,n,a);return C=u_(C),C},d_={markovClustering:$u,mcl:$u},f_=function(e){return e},gf=function(e,n){return Math.abs(n-e)},Su=function(e,n,r){return e+gf(n,r)},Wu=function(e,n,r){return e+Math.pow(r-n,2)},h_=function(e){return Math.sqrt(e)},p_=function(e,n,r){return Math.max(e,gf(n,r))},wi=function(e,n,r,a,i){for(var o=arguments.length>5&&arguments[5]!==void 0?arguments[5]:f_,s=a,l,c,u=0;u<e;u++)l=n(u),c=r(u),s=i(s,l,c);return o(s)},ri={euclidean:function(e,n,r){return e>=2?wi(e,n,r,0,Wu,h_):wi(e,n,r,0,Su)},squaredEuclidean:function(e,n,r){return wi(e,n,r,0,Wu)},manhattan:function(e,n,r){return wi(e,n,r,0,Su)},max:function(e,n,r){return wi(e,n,r,-1/0,p_)}};ri["squared-euclidean"]=ri.squaredEuclidean;ri.squaredeuclidean=ri.squaredEuclidean;function nc(t,e,n,r,a,i){var o;return wn(t)?o=t:o=ri[t]||ri.euclidean,e===0&&wn(t)?o(a,i):o(e,n,r,a,i)}var m_=et({k:2,m:2,sensitivityThreshold:1e-4,distance:"euclidean",maxIterations:10,attributes:[],testMode:!1,testCentroids:null}),Dl=function(e){return m_(e)},js=function(e,n,r,a,i){var o=i!=="kMedoids",s=o?function(d){return r[d]}:function(d){return a[d](r)},l=function(f){return a[f](n)},c=r,u=n;return nc(e,a.length,s,l,c,u)},Hc=function(e,n,r){for(var a=r.length,i=new Array(a),o=new Array(a),s=new Array(n),l=null,c=0;c<a;c++)i[c]=e.min(r[c]).value,o[c]=e.max(r[c]).value;for(var u=0;u<n;u++){l=[];for(var d=0;d<a;d++)l[d]=Math.random()*(o[d]-i[d])+i[d];s[u]=l}return s},_f=function(e,n,r,a,i){for(var o=1/0,s=0,l=0;l<n.length;l++){var c=js(r,e,n[l],a,i);c<o&&(o=c,s=l)}return s},Pf=function(e,n,r){for(var a=[],i=null,o=0;o<n.length;o++)i=n[o],r[i.id()]===e&&a.push(i);return a},g_=function(e,n,r){return Math.abs(n-e)<=r},__=function(e,n,r){for(var a=0;a<e.length;a++)for(var i=0;i<e[a].length;i++){var o=Math.abs(e[a][i]-n[a][i]);if(o>r)return!1}return!0},P_=function(e,n,r){for(var a=0;a<r;a++)if(e===n[a])return!0;return!1},Nu=function(e,n){var r=new Array(n);if(e.length<50)for(var a=0;a<n;a++){for(var i=e[Math.floor(Math.random()*e.length)];P_(i,r,a);)i=e[Math.floor(Math.random()*e.length)];r[a]=i}else for(var o=0;o<n;o++)r[o]=e[Math.floor(Math.random()*e.length)];return r},Mu=function(e,n,r){for(var a=0,i=0;i<n.length;i++)a+=js("manhattan",n[i],e,r,"kMedoids");return a},v_=function(e){var n=this.cy(),r=this.nodes(),a=null,i=Dl(e),o=new Array(i.k),s={},l;i.testMode?typeof i.testCentroids=="number"?(i.testCentroids,l=Hc(r,i.k,i.attributes)):Un(i.testCentroids)==="object"?l=i.testCentroids:l=Hc(r,i.k,i.attributes):l=Hc(r,i.k,i.attributes);for(var c=!0,u=0;c&&u<i.maxIterations;){for(var d=0;d<r.length;d++)a=r[d],s[a.id()]=_f(a,l,i.distance,i.attributes,"kMeans");c=!1;for(var f=0;f<i.k;f++){var h=Pf(f,r,s);if(h.length!==0){for(var p=i.attributes.length,m=l[f],_=new Array(p),g=new Array(p),P=0;P<p;P++){g[P]=0;for(var y=0;y<h.length;y++)a=h[y],g[P]+=i.attributes[P](a);_[P]=g[P]/h.length,g_(_[P],m[P],i.sensitivityThreshold)||(c=!0)}l[f]=_,o[f]=n.collection(h)}}u++}return o},b_=function(e){var n=this.cy(),r=this.nodes(),a=null,i=Dl(e),o=new Array(i.k),s,l={},c,u=new Array(i.k);i.testMode?typeof i.testCentroids=="number"||(Un(i.testCentroids)==="object"?s=i.testCentroids:s=Nu(r,i.k)):s=Nu(r,i.k);for(var d=!0,f=0;d&&f<i.maxIterations;){for(var h=0;h<r.length;h++)a=r[h],l[a.id()]=_f(a,s,i.distance,i.attributes,"kMedoids");d=!1;for(var p=0;p<s.length;p++){var m=Pf(p,r,l);if(m.length!==0){u[p]=Mu(s[p],m,i.attributes);for(var _=0;_<m.length;_++)c=Mu(m[_],m,i.attributes),c<u[p]&&(u[p]=c,s[p]=m[_],d=!0);o[p]=n.collection(m)}}f++}return o},y_=function(e,n,r,a,i){for(var o,s,l=0;l<n.length;l++)for(var c=0;c<e.length;c++)a[l][c]=Math.pow(r[l][c],i.m);for(var u=0;u<e.length;u++)for(var d=0;d<i.attributes.length;d++){o=0,s=0;for(var f=0;f<n.length;f++)o+=a[f][u]*i.attributes[d](n[f]),s+=a[f][u];e[u][d]=o/s}},X_=function(e,n,r,a,i){for(var o=0;o<e.length;o++)n[o]=e[o].slice();for(var s,l,c,u=2/(i.m-1),d=0;d<r.length;d++)for(var f=0;f<a.length;f++){s=0;for(var h=0;h<r.length;h++)l=js(i.distance,a[f],r[d],i.attributes,"cmeans"),c=js(i.distance,a[f],r[h],i.attributes,"cmeans"),s+=Math.pow(l/c,u);e[f][d]=1/s}},K_=function(e,n,r,a){for(var i=new Array(r.k),o=0;o<i.length;o++)i[o]=[];for(var s,l,c=0;c<n.length;c++){s=-1/0,l=-1;for(var u=0;u<n[0].length;u++)n[c][u]>s&&(s=n[c][u],l=u);i[l].push(e[c])}for(var d=0;d<i.length;d++)i[d]=a.collection(i[d]);return i},Ru=function(e){var n=this.cy(),r=this.nodes(),a=Dl(e),i,o,s,l,c;l=new Array(r.length);for(var u=0;u<r.length;u++)l[u]=new Array(a.k);s=new Array(r.length);for(var d=0;d<r.length;d++)s[d]=new Array(a.k);for(var f=0;f<r.length;f++){for(var h=0,p=0;p<a.k;p++)s[f][p]=Math.random(),h+=s[f][p];for(var m=0;m<a.k;m++)s[f][m]=s[f][m]/h}o=new Array(a.k);for(var _=0;_<a.k;_++)o[_]=new Array(a.attributes.length);c=new Array(r.length);for(var g=0;g<r.length;g++)c[g]=new Array(a.k);for(var P=!0,y=0;P&&y<a.maxIterations;)P=!1,y_(o,r,s,c,a),X_(s,l,o,r,a),__(s,l,a.sensitivityThreshold)||(P=!0),y++;return i=K_(r,s,a,n),{clusters:i,degreeOfMembership:s}},x_={kMeans:v_,kMedoids:b_,fuzzyCMeans:Ru,fcm:Ru},A_=et({distance:"euclidean",linkage:"min",mode:"threshold",threshold:1/0,addDendrogram:!1,dendrogramDepth:0,attributes:[]}),C_={single:"min",complete:"max"},E_=function(e){var n=A_(e),r=C_[n.linkage];return r!=null&&(n.linkage=r),n},Iu=function(e,n,r,a,i){for(var o=0,s=1/0,l,c=i.attributes,u=function(k,$){return nc(i.distance,c.length,function(M){return c[M](k)},function(M){return c[M]($)},k,$)},d=0;d<e.length;d++){var f=e[d].key,h=r[f][a[f]];h<s&&(o=f,s=h)}if(i.mode==="threshold"&&s>=i.threshold||i.mode==="dendrogram"&&e.length===1)return!1;var p=n[o],m=n[a[o]],_;i.mode==="dendrogram"?_={left:p,right:m,key:p.key}:_={value:p.value.concat(m.value),key:p.key},e[p.index]=_,e.splice(m.index,1),n[p.key]=_;for(var g=0;g<e.length;g++){var P=e[g];p.key===P.key?l=1/0:i.linkage==="min"?(l=r[p.key][P.key],r[p.key][P.key]>r[m.key][P.key]&&(l=r[m.key][P.key])):i.linkage==="max"?(l=r[p.key][P.key],r[p.key][P.key]<r[m.key][P.key]&&(l=r[m.key][P.key])):i.linkage==="mean"?l=(r[p.key][P.key]*p.size+r[m.key][P.key]*m.size)/(p.size+m.size):i.mode==="dendrogram"?l=u(P.value,p.value):l=u(P.value[0],p.value[0]),r[p.key][P.key]=r[P.key][p.key]=l}for(var y=0;y<e.length;y++){var C=e[y].key;if(a[C]===p.key||a[C]===m.key){for(var E=C,T=0;T<e.length;T++){var B=e[T].key;r[C][B]<r[C][E]&&(E=B)}a[C]=E}e[y].index=y}return p.key=m.key=p.index=m.index=null,!0},vs=function t(e,n,r){e&&(e.value?n.push(e.value):(e.left&&t(e.left,n),e.right&&t(e.right,n)))},w_=function t(e,n){if(!e)return"";if(e.left&&e.right){var r=t(e.left,n),a=t(e.right,n),i=n.add({group:"nodes",data:{id:r+","+a}});return n.add({group:"edges",data:{source:r,target:i.id()}}),n.add({group:"edges",data:{source:a,target:i.id()}}),i.id()}else if(e.value)return e.value.id()},O_=function t(e,n,r){if(!e)return[];var a=[],i=[],o=[];return n===0?(e.left&&vs(e.left,a),e.right&&vs(e.right,i),o=a.concat(i),[r.collection(o)]):n===1?e.value?[r.collection(e.value)]:(e.left&&vs(e.left,a),e.right&&vs(e.right,i),[r.collection(a),r.collection(i)]):e.value?[r.collection(e.value)]:(e.left&&(a=t(e.left,n-1,r)),e.right&&(i=t(e.right,n-1,r)),a.concat(i))},Lu=function(e){for(var n=this.cy(),r=this.nodes(),a=E_(e),i=a.attributes,o=function(y,C){return nc(a.distance,i.length,function(E){return i[E](y)},function(E){return i[E](C)},y,C)},s=[],l=[],c=[],u=[],d=0;d<r.length;d++){var f={value:a.mode==="dendrogram"?r[d]:[r[d]],key:d,index:d};s[d]=f,u[d]=f,l[d]=[],c[d]=0}for(var h=0;h<s.length;h++)for(var p=0;p<=h;p++){var m=void 0;a.mode==="dendrogram"?m=h===p?1/0:o(s[h].value,s[p].value):m=h===p?1/0:o(s[h].value[0],s[p].value[0]),l[h][p]=m,l[p][h]=m,m<l[h][c[h]]&&(c[h]=p)}for(var _=Iu(s,u,l,c,a);_;)_=Iu(s,u,l,c,a);var g;return a.mode==="dendrogram"?(g=O_(s[0],a.dendrogramDepth,n),a.addDendrogram&&w_(s[0],n)):(g=new Array(s.length),s.forEach(function(P,y){P.key=P.index=null,g[y]=n.collection(P.value)})),g},T_={hierarchicalClustering:Lu,hca:Lu},B_=et({distance:"euclidean",preference:"median",damping:.8,maxIterations:1e3,minIterations:100,attributes:[]}),k_=function(e){var n=e.damping,r=e.preference;.5<=n&&n<1||En("Damping must range on [0.5, 1).  Got: ".concat(n));var a=["median","mean","min","max"];return a.some(function(i){return i===r})||Se(r)||En("Preference must be one of [".concat(a.map(function(i){return"'".concat(i,"'")}).join(", "),"] or a number.  Got: ").concat(r)),B_(e)},D_=function(e,n,r,a){var i=function(s,l){return a[l](s)};return-nc(e,a.length,function(o){return i(n,o)},function(o){return i(r,o)},n,r)},$_=function(e,n){var r=null;return n==="median"?r=kg(e):n==="mean"?r=Bg(e):n==="min"?r=Og(e):n==="max"?r=Tg(e):r=n,r},S_=function(e,n,r){for(var a=[],i=0;i<e;i++)n[i*e+i]+r[i*e+i]>0&&a.push(i);return a},Uu=function(e,n,r){for(var a=[],i=0;i<e;i++){for(var o=-1,s=-1/0,l=0;l<r.length;l++){var c=r[l];n[i*e+c]>s&&(o=c,s=n[i*e+c])}o>0&&a.push(o)}for(var u=0;u<r.length;u++)a[r[u]]=r[u];return a},W_=function(e,n,r){for(var a=Uu(e,n,r),i=0;i<r.length;i++){for(var o=[],s=0;s<a.length;s++)a[s]===r[i]&&o.push(s);for(var l=-1,c=-1/0,u=0;u<o.length;u++){for(var d=0,f=0;f<o.length;f++)d+=n[o[f]*e+o[u]];d>c&&(l=u,c=d)}r[i]=o[l]}return a=Uu(e,n,r),a},Fu=function(e){for(var n=this.cy(),r=this.nodes(),a=k_(e),i={},o=0;o<r.length;o++)i[r[o].id()]=o;var s,l,c,u,d,f;s=r.length,l=s*s,c=new Array(l);for(var h=0;h<l;h++)c[h]=-1/0;for(var p=0;p<s;p++)for(var m=0;m<s;m++)p!==m&&(c[p*s+m]=D_(a.distance,r[p],r[m],a.attributes));u=$_(c,a.preference);for(var _=0;_<s;_++)c[_*s+_]=u;d=new Array(l);for(var g=0;g<l;g++)d[g]=0;f=new Array(l);for(var P=0;P<l;P++)f[P]=0;for(var y=new Array(s),C=new Array(s),E=new Array(s),T=0;T<s;T++)y[T]=0,C[T]=0,E[T]=0;for(var B=new Array(s*a.minIterations),D=0;D<B.length;D++)B[D]=0;var k;for(k=0;k<a.maxIterations;k++){for(var $=0;$<s;$++){for(var M=-1/0,b=-1/0,x=-1,K=0,X=0;X<s;X++)y[X]=d[$*s+X],K=f[$*s+X]+c[$*s+X],K>=M?(b=M,M=K,x=X):K>b&&(b=K);for(var v=0;v<s;v++)d[$*s+v]=(1-a.damping)*(c[$*s+v]-M)+a.damping*y[v];d[$*s+x]=(1-a.damping)*(c[$*s+x]-b)+a.damping*y[x]}for(var A=0;A<s;A++){for(var w=0,O=0;O<s;O++)y[O]=f[O*s+A],C[O]=Math.max(0,d[O*s+A]),w+=C[O];w-=C[A],C[A]=d[A*s+A],w+=C[A];for(var N=0;N<s;N++)f[N*s+A]=(1-a.damping)*Math.min(0,w-C[N])+a.damping*y[N];f[A*s+A]=(1-a.damping)*(w-C[A])+a.damping*y[A]}for(var S=0,I=0;I<s;I++){var q=f[I*s+I]+d[I*s+I]>0?1:0;B[k%a.minIterations*s+I]=q,S+=q}if(S>0&&(k>=a.minIterations-1||k==a.maxIterations-1)){for(var Y=0,ee=0;ee<s;ee++){E[ee]=0;for(var Q=0;Q<a.minIterations;Q++)E[ee]+=B[Q*s+ee];(E[ee]===0||E[ee]===a.minIterations)&&Y++}if(Y===s)break}}for(var U=S_(s,d,f),J=W_(s,c,U),F={},W=0;W<U.length;W++)F[U[W]]=[];for(var L=0;L<r.length;L++){var z=i[r[L].id()],ne=J[z];ne!=null&&F[ne].push(r[L])}for(var H=new Array(U.length),_e=0;_e<U.length;_e++)H[_e]=n.collection(F[U[_e]]);return H},N_={affinityPropagation:Fu,ap:Fu},M_=et({root:void 0,directed:!1}),R_={hierholzer:function(e){if(!un(e)){var n=arguments;e={root:n[0],directed:n[1]}}var r=M_(e),a=r.root,i=r.directed,o=this,s=!1,l,c,u;a&&(u=ze(a)?this.filter(a)[0].id():a[0].id());var d={},f={};i?o.forEach(function(P){var y=P.id();if(P.isNode()){var C=P.indegree(!0),E=P.outdegree(!0),T=C-E,B=E-C;T==1?l?s=!0:l=y:B==1?c?s=!0:c=y:(B>1||T>1)&&(s=!0),d[y]=[],P.outgoers().forEach(function(D){D.isEdge()&&d[y].push(D.id())})}else f[y]=[void 0,P.target().id()]}):o.forEach(function(P){var y=P.id();if(P.isNode()){var C=P.degree(!0);C%2&&(l?c?s=!0:c=y:l=y),d[y]=[],P.connectedEdges().forEach(function(E){return d[y].push(E.id())})}else f[y]=[P.source().id(),P.target().id()]});var h={found:!1,trail:void 0};if(s)return h;if(c&&l)if(i){if(u&&c!=u)return h;u=c}else{if(u&&c!=u&&l!=u)return h;u||(u=c)}else u||(u=o[0].id());var p=function(y){for(var C=y,E=[y],T,B,D;d[C].length;)T=d[C].shift(),B=f[T][0],D=f[T][1],C!=D?(d[D]=d[D].filter(function(k){return k!=T}),C=D):!i&&C!=B&&(d[B]=d[B].filter(function(k){return k!=T}),C=B),E.unshift(T),E.unshift(C);return E},m=[],_=[];for(_=p(u);_.length!=1;)d[_[0]].length==0?(m.unshift(o.getElementById(_.shift())),m.unshift(o.getElementById(_.shift()))):_=p(_.shift()).concat(_);m.unshift(o.getElementById(_.shift()));for(var g in d)if(d[g].length)return h;return h.found=!0,h.trail=this.spawn(m,!0),h}},bs=function(){var e=this,n={},r=0,a=0,i=[],o=[],s={},l=function(f,h){for(var p=o.length-1,m=[],_=e.spawn();o[p].x!=f||o[p].y!=h;)m.push(o.pop().edge),p--;m.push(o.pop().edge),m.forEach(function(g){var P=g.connectedNodes().intersection(e);_.merge(g),P.forEach(function(y){var C=y.id(),E=y.connectedEdges().intersection(e);_.merge(y),n[C].cutVertex?_.merge(E.filter(function(T){return T.isLoop()})):_.merge(E)})}),i.push(_)},c=function d(f,h,p){f===p&&(a+=1),n[h]={id:r,low:r++,cutVertex:!1};var m=e.getElementById(h).connectedEdges().intersection(e);if(m.size()===0)i.push(e.spawn(e.getElementById(h)));else{var _,g,P,y;m.forEach(function(C){_=C.source().id(),g=C.target().id(),P=_===h?g:_,P!==p&&(y=C.id(),s[y]||(s[y]=!0,o.push({x:h,y:P,edge:C})),P in n?n[h].low=Math.min(n[h].low,n[P].id):(d(f,P,h),n[h].low=Math.min(n[h].low,n[P].low),n[h].id<=n[P].low&&(n[h].cutVertex=!0,l(h,P))))})}};e.forEach(function(d){if(d.isNode()){var f=d.id();f in n||(a=0,c(f,f),n[f].cutVertex=a>1)}});var u=Object.keys(n).filter(function(d){return n[d].cutVertex}).map(function(d){return e.getElementById(d)});return{cut:e.spawn(u),components:i}},I_={hopcroftTarjanBiconnected:bs,htbc:bs,htb:bs,hopcroftTarjanBiconnectedComponents:bs},ys=function(){var e=this,n={},r=0,a=[],i=[],o=e.spawn(e),s=function l(c){i.push(c),n[c]={index:r,low:r++,explored:!1};var u=e.getElementById(c).connectedEdges().intersection(e);if(u.forEach(function(m){var _=m.target().id();_!==c&&(_ in n||l(_),n[_].explored||(n[c].low=Math.min(n[c].low,n[_].low)))}),n[c].index===n[c].low){for(var d=e.spawn();;){var f=i.pop();if(d.merge(e.getElementById(f)),n[f].low=n[c].index,n[f].explored=!0,f===c)break}var h=d.edgesWith(d),p=d.merge(h);a.push(p),o=o.difference(p)}};return e.forEach(function(l){if(l.isNode()){var c=l.id();c in n||s(c)}}),{cut:o,components:a}},L_={tarjanStronglyConnected:ys,tsc:ys,tscc:ys,tarjanStronglyConnectedComponents:ys},vf={};[zi,_g,Pg,bg,Xg,xg,Eg,Zg,Za,Qa,ul,d_,x_,T_,N_,R_,I_,L_].forEach(function(t){Ve(vf,t)});var bf=0,yf=1,Xf=2,mr=function t(e){if(!(this instanceof t))return new t(e);this.id="Thenable/1.0.7",this.state=bf,this.fulfillValue=void 0,this.rejectReason=void 0,this.onFulfilled=[],this.onRejected=[],this.proxy={then:this.then.bind(this)},typeof e=="function"&&e.call(this,this.fulfill.bind(this),this.reject.bind(this))};mr.prototype={fulfill:function(e){return ju(this,yf,"fulfillValue",e)},reject:function(e){return ju(this,Xf,"rejectReason",e)},then:function(e,n){var r=this,a=new mr;return r.onFulfilled.push(zu(e,a,"fulfill")),r.onRejected.push(zu(n,a,"reject")),Kf(r),a.proxy}};var ju=function(e,n,r,a){return e.state===bf&&(e.state=n,e[r]=a,Kf(e)),e},Kf=function(e){e.state===yf?Yu(e,"onFulfilled",e.fulfillValue):e.state===Xf&&Yu(e,"onRejected",e.rejectReason)},Yu=function(e,n,r){if(e[n].length!==0){var a=e[n];e[n]=[];var i=function(){for(var s=0;s<a.length;s++)a[s](r)};typeof setImmediate=="function"?setImmediate(i):setTimeout(i,0)}},zu=function(e,n,r){return function(a){if(typeof e!="function")n[r].call(n,a);else{var i;try{i=e(a)}catch(o){n.reject(o);return}U_(n,i)}}},U_=function t(e,n){if(e===n||e.proxy===n){e.reject(new TypeError("cannot resolve promise with itself"));return}var r;if(Un(n)==="object"&&n!==null||typeof n=="function")try{r=n.then}catch(i){e.reject(i);return}if(typeof r=="function"){var a=!1;try{r.call(n,function(i){a||(a=!0,i===n?e.reject(new TypeError("circular thenable chain")):t(e,i))},function(i){a||(a=!0,e.reject(i))})}catch(i){a||e.reject(i)}return}e.fulfill(n)};mr.all=function(t){return new mr(function(e,n){for(var r=new Array(t.length),a=0,i=function(l,c){r[l]=c,a++,a===t.length&&e(r)},o=0;o<t.length;o++)(function(s){var l=t[s],c=l!=null&&l.then!=null;if(c)l.then(function(d){i(s,d)},function(d){n(d)});else{var u=l;i(s,u)}})(o)})};mr.resolve=function(t){return new mr(function(e,n){e(t)})};mr.reject=function(t){return new mr(function(e,n){n(t)})};var oi=typeof Promise<"u"?Promise:mr,dl=function(e,n,r){var a=Al(e),i=!a,o=this._private=Ve({duration:1e3},n,r);if(o.target=e,o.style=o.style||o.css,o.started=!1,o.playing=!1,o.hooked=!1,o.applying=!1,o.progress=0,o.completes=[],o.frames=[],o.complete&&wn(o.complete)&&o.completes.push(o.complete),i){var s=e.position();o.startPosition=o.startPosition||{x:s.x,y:s.y},o.startStyle=o.startStyle||e.cy().style().getAnimationStartStyle(e,o.style)}if(a){var l=e.pan();o.startPan={x:l.x,y:l.y},o.startZoom=e.zoom()}this.length=1,this[0]=this},ua=dl.prototype;Ve(ua,{instanceString:function(){return"animation"},hook:function(){var e=this._private;if(!e.hooked){var n,r=e.target._private.animation;e.queue?n=r.queue:n=r.current,n.push(this),Tt(e.target)&&e.target.cy().addToAnimationPool(e.target),e.hooked=!0}return this},play:function(){var e=this._private;return e.progress===1&&(e.progress=0),e.playing=!0,e.started=!1,e.stopped=!1,this.hook(),this},playing:function(){return this._private.playing},apply:function(){var e=this._private;return e.applying=!0,e.started=!1,e.stopped=!1,this.hook(),this},applying:function(){return this._private.applying},pause:function(){var e=this._private;return e.playing=!1,e.started=!1,this},stop:function(){var e=this._private;return e.playing=!1,e.started=!1,e.stopped=!0,this},rewind:function(){return this.progress(0)},fastforward:function(){return this.progress(1)},time:function(e){var n=this._private;return e===void 0?n.progress*n.duration:this.progress(e/n.duration)},progress:function(e){var n=this._private,r=n.playing;return e===void 0?n.progress:(r&&this.pause(),n.progress=e,n.started=!1,r&&this.play(),this)},completed:function(){return this._private.progress===1},reverse:function(){var e=this._private,n=e.playing;n&&this.pause(),e.progress=1-e.progress,e.started=!1;var r=function(c,u){var d=e[c];d!=null&&(e[c]=e[u],e[u]=d)};if(r("zoom","startZoom"),r("pan","startPan"),r("position","startPosition"),e.style)for(var a=0;a<e.style.length;a++){var i=e.style[a],o=i.name,s=e.startStyle[o];e.startStyle[o]=i,e.style[a]=s}return n&&this.play(),this},promise:function(e){var n=this._private,r;switch(e){case"frame":r=n.frames;break;default:case"complete":case"completed":r=n.completes}return new oi(function(a,i){r.push(function(){a()})})}});ua.complete=ua.completed;ua.run=ua.play;ua.running=ua.playing;var F_={animated:function(){return function(){var n=this,r=n.length!==void 0,a=r?n:[n],i=this._private.cy||this;if(!i.styleEnabled())return!1;var o=a[0];if(o)return o._private.animation.current.length>0}},clearQueue:function(){return function(){var n=this,r=n.length!==void 0,a=r?n:[n],i=this._private.cy||this;if(!i.styleEnabled())return this;for(var o=0;o<a.length;o++){var s=a[o];s._private.animation.queue=[]}return this}},delay:function(){return function(n,r){var a=this._private.cy||this;return a.styleEnabled()?this.animate({delay:n,duration:n,complete:r}):this}},delayAnimation:function(){return function(n,r){var a=this._private.cy||this;return a.styleEnabled()?this.animation({delay:n,duration:n,complete:r}):this}},animation:function(){return function(n,r){var a=this,i=a.length!==void 0,o=i?a:[a],s=this._private.cy||this,l=!i,c=!l;if(!s.styleEnabled())return this;var u=s.style();n=Ve({},n,r);var d=Object.keys(n).length===0;if(d)return new dl(o[0],n);switch(n.duration===void 0&&(n.duration=400),n.duration){case"slow":n.duration=600;break;case"fast":n.duration=200;break}if(c&&(n.style=u.getPropsList(n.style||n.css),n.css=void 0),c&&n.renderedPosition!=null){var f=n.renderedPosition,h=s.pan(),p=s.zoom();n.position=cf(f,p,h)}if(l&&n.panBy!=null){var m=n.panBy,_=s.pan();n.pan={x:_.x+m.x,y:_.y+m.y}}var g=n.center||n.centre;if(l&&g!=null){var P=s.getCenterPan(g.eles,n.zoom);P!=null&&(n.pan=P)}if(l&&n.fit!=null){var y=n.fit,C=s.getFitViewport(y.eles||y.boundingBox,y.padding);C!=null&&(n.pan=C.pan,n.zoom=C.zoom)}if(l&&un(n.zoom)){var E=s.getZoomedViewport(n.zoom);E!=null?(E.zoomed&&(n.zoom=E.zoom),E.panned&&(n.pan=E.pan)):n.zoom=null}return new dl(o[0],n)}},animate:function(){return function(n,r){var a=this,i=a.length!==void 0,o=i?a:[a],s=this._private.cy||this;if(!s.styleEnabled())return this;r&&(n=Ve({},n,r));for(var l=0;l<o.length;l++){var c=o[l],u=c.animated()&&(n.queue===void 0||n.queue),d=c.animation(n,u?{queue:!0}:void 0);d.play()}return this}},stop:function(){return function(n,r){var a=this,i=a.length!==void 0,o=i?a:[a],s=this._private.cy||this;if(!s.styleEnabled())return this;for(var l=0;l<o.length;l++){for(var c=o[l],u=c._private,d=u.animation.current,f=0;f<d.length;f++){var h=d[f],p=h._private;r&&(p.duration=0)}n&&(u.animation.queue=[]),r||(u.animation.current=[])}return s.notify("draw"),this}}},j_=Array.isArray,tc=j_,Y_=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,z_=/^\w*$/;function V_(t,e){if(tc(t))return!1;var n=typeof t;return n=="number"||n=="symbol"||n=="boolean"||t==null||to(t)?!0:z_.test(t)||!Y_.test(t)||e!=null&&t in Object(e)}var q_=V_,H_="[object AsyncFunction]",G_="[object Function]",J_="[object GeneratorFunction]",Z_="[object Proxy]";function Q_(t){if(!sa(t))return!1;var e=Zd(t);return e==G_||e==J_||e==H_||e==Z_}var eP=Q_,nP=Zs["__core-js_shared__"],Gc=nP,Vu=function(){var t=/[^.]+$/.exec(Gc&&Gc.keys&&Gc.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}();function tP(t){return!!Vu&&Vu in t}var rP=tP,aP=Function.prototype,iP=aP.toString;function oP(t){if(t!=null){try{return iP.call(t)}catch{}try{return t+""}catch{}}return""}var sP=oP,cP=/[\\^$.*+?()[\]{}|]/g,lP=/^\[object .+?Constructor\]$/,uP=Function.prototype,dP=Object.prototype,fP=uP.toString,hP=dP.hasOwnProperty,pP=RegExp("^"+fP.call(hP).replace(cP,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function mP(t){if(!sa(t)||rP(t))return!1;var e=eP(t)?pP:lP;return e.test(sP(t))}var gP=mP;function _P(t,e){return t?.[e]}var PP=_P;function vP(t,e){var n=PP(t,e);return gP(n)?n:void 0}var $l=vP,bP=$l(Object,"create"),Hi=bP;function yP(){this.__data__=Hi?Hi(null):{},this.size=0}var XP=yP;function KP(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e}var xP=KP,AP="__lodash_hash_undefined__",CP=Object.prototype,EP=CP.hasOwnProperty;function wP(t){var e=this.__data__;if(Hi){var n=e[t];return n===AP?void 0:n}return EP.call(e,t)?e[t]:void 0}var OP=wP,TP=Object.prototype,BP=TP.hasOwnProperty;function kP(t){var e=this.__data__;return Hi?e[t]!==void 0:BP.call(e,t)}var DP=kP,$P="__lodash_hash_undefined__";function SP(t,e){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=Hi&&e===void 0?$P:e,this}var WP=SP;function si(t){var e=-1,n=t==null?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}si.prototype.clear=XP;si.prototype.delete=xP;si.prototype.get=OP;si.prototype.has=DP;si.prototype.set=WP;var qu=si;function NP(){this.__data__=[],this.size=0}var MP=NP;function RP(t,e){return t===e||t!==t&&e!==e}var xf=RP;function IP(t,e){for(var n=t.length;n--;)if(xf(t[n][0],e))return n;return-1}var rc=IP,LP=Array.prototype,UP=LP.splice;function FP(t){var e=this.__data__,n=rc(e,t);if(n<0)return!1;var r=e.length-1;return n==r?e.pop():UP.call(e,n,1),--this.size,!0}var jP=FP;function YP(t){var e=this.__data__,n=rc(e,t);return n<0?void 0:e[n][1]}var zP=YP;function VP(t){return rc(this.__data__,t)>-1}var qP=VP;function HP(t,e){var n=this.__data__,r=rc(n,t);return r<0?(++this.size,n.push([t,e])):n[r][1]=e,this}var GP=HP;function ci(t){var e=-1,n=t==null?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}ci.prototype.clear=MP;ci.prototype.delete=jP;ci.prototype.get=zP;ci.prototype.has=qP;ci.prototype.set=GP;var JP=ci,ZP=$l(Zs,"Map"),QP=ZP;function ev(){this.size=0,this.__data__={hash:new qu,map:new(QP||JP),string:new qu}}var nv=ev;function tv(t){var e=typeof t;return e=="string"||e=="number"||e=="symbol"||e=="boolean"?t!=="__proto__":t===null}var rv=tv;function av(t,e){var n=t.__data__;return rv(e)?n[typeof e=="string"?"string":"hash"]:n.map}var ac=av;function iv(t){var e=ac(this,t).delete(t);return this.size-=e?1:0,e}var ov=iv;function sv(t){return ac(this,t).get(t)}var cv=sv;function lv(t){return ac(this,t).has(t)}var uv=lv;function dv(t,e){var n=ac(this,t),r=n.size;return n.set(t,e),this.size+=n.size==r?0:1,this}var fv=dv;function li(t){var e=-1,n=t==null?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}li.prototype.clear=nv;li.prototype.delete=ov;li.prototype.get=cv;li.prototype.has=uv;li.prototype.set=fv;var Af=li,hv="Expected a function";function Sl(t,e){if(typeof t!="function"||e!=null&&typeof e!="function")throw new TypeError(hv);var n=function(){var r=arguments,a=e?e.apply(this,r):r[0],i=n.cache;if(i.has(a))return i.get(a);var o=t.apply(this,r);return n.cache=i.set(a,o)||i,o};return n.cache=new(Sl.Cache||Af),n}Sl.Cache=Af;var pv=Sl,mv=500;function gv(t){var e=pv(t,function(r){return n.size===mv&&n.clear(),r}),n=e.cache;return e}var _v=gv,Pv=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,vv=/\\(\\)?/g,bv=_v(function(t){var e=[];return t.charCodeAt(0)===46&&e.push(""),t.replace(Pv,function(n,r,a,i){e.push(a?i.replace(vv,"$1"):r||n)}),e}),Cf=bv;function yv(t,e){for(var n=-1,r=t==null?0:t.length,a=Array(r);++n<r;)a[n]=e(t[n],n,t);return a}var Ef=yv,Xv=1/0,Hu=ni?ni.prototype:void 0,Gu=Hu?Hu.toString:void 0;function wf(t){if(typeof t=="string")return t;if(tc(t))return Ef(t,wf)+"";if(to(t))return Gu?Gu.call(t):"";var e=t+"";return e=="0"&&1/t==-Xv?"-0":e}var Kv=wf;function xv(t){return t==null?"":Kv(t)}var Of=xv;function Av(t,e){return tc(t)?t:q_(t,e)?[t]:Cf(Of(t))}var Tf=Av,Cv=1/0;function Ev(t){if(typeof t=="string"||to(t))return t;var e=t+"";return e=="0"&&1/t==-Cv?"-0":e}var Wl=Ev;function wv(t,e){e=Tf(e,t);for(var n=0,r=e.length;t!=null&&n<r;)t=t[Wl(e[n++])];return n&&n==r?t:void 0}var Ov=wv;function Tv(t,e,n){var r=t==null?void 0:Ov(t,e);return r===void 0?n:r}var Bv=Tv,kv=function(){try{var t=$l(Object,"defineProperty");return t({},"",{}),t}catch{}}(),Ju=kv;function Dv(t,e,n){e=="__proto__"&&Ju?Ju(t,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[e]=n}var $v=Dv,Sv=Object.prototype,Wv=Sv.hasOwnProperty;function Nv(t,e,n){var r=t[e];(!(Wv.call(t,e)&&xf(r,n))||n===void 0&&!(e in t))&&$v(t,e,n)}var Mv=Nv,Rv=9007199254740991,Iv=/^(?:0|[1-9]\d*)$/;function Lv(t,e){var n=typeof t;return e=e??Rv,!!e&&(n=="number"||n!="symbol"&&Iv.test(t))&&t>-1&&t%1==0&&t<e}var Uv=Lv;function Fv(t,e,n,r){if(!sa(t))return t;e=Tf(e,t);for(var a=-1,i=e.length,o=i-1,s=t;s!=null&&++a<i;){var l=Wl(e[a]),c=n;if(l==="__proto__"||l==="constructor"||l==="prototype")return t;if(a!=o){var u=s[l];c=r?r(u,l,s):void 0,c===void 0&&(c=sa(u)?u:Uv(e[a+1])?[]:{})}Mv(s,l,c),s=s[l]}return t}var jv=Fv;function Yv(t,e,n){return t==null?t:jv(t,e,n)}var zv=Yv;function Vv(t,e){var n=-1,r=t.length;for(e||(e=Array(r));++n<r;)e[n]=t[n];return e}var qv=Vv;function Hv(t){return tc(t)?Ef(t,Wl):to(t)?[t]:qv(Cf(Of(t)))}var Gv=Hv,Jv={data:function(e){var n={field:"data",bindingEvent:"data",allowBinding:!1,allowSetting:!1,allowGetting:!1,settingEvent:"data",settingTriggersEvent:!1,triggerFnName:"trigger",immutableKeys:{},updateStyle:!1,beforeGet:function(a){},beforeSet:function(a,i){},onSet:function(a){},canSet:function(a){return!0}};return e=Ve({},n,e),function(a,i){var o=e,s=this,l=s.length!==void 0,c=l?s:[s],u=l?s[0]:s;if(ze(a)){var d=a.indexOf(".")!==-1,f=d&&Gv(a);if(o.allowGetting&&i===void 0){var h;return u&&(o.beforeGet(u),f&&u._private[o.field][a]===void 0?h=Bv(u._private[o.field],f):h=u._private[o.field][a]),h}else if(o.allowSetting&&i!==void 0){var p=!o.immutableKeys[a];if(p){var m=Ld({},a,i);o.beforeSet(s,m);for(var _=0,g=c.length;_<g;_++){var P=c[_];o.canSet(P)&&(f&&u._private[o.field][a]===void 0?zv(P._private[o.field],f,i):P._private[o.field][a]=i)}o.updateStyle&&s.updateStyle(),o.onSet(s),o.settingTriggersEvent&&s[o.triggerFnName](o.settingEvent)}}}else if(o.allowSetting&&un(a)){var y=a,C,E,T=Object.keys(y);o.beforeSet(s,y);for(var B=0;B<T.length;B++){C=T[B],E=y[C];var D=!o.immutableKeys[C];if(D)for(var k=0;k<c.length;k++){var $=c[k];o.canSet($)&&($._private[o.field][C]=E)}}o.updateStyle&&s.updateStyle(),o.onSet(s),o.settingTriggersEvent&&s[o.triggerFnName](o.settingEvent)}else if(o.allowBinding&&wn(a)){var M=a;s.on(o.bindingEvent,M)}else if(o.allowGetting&&a===void 0){var b;return u&&(o.beforeGet(u),b=u._private[o.field]),b}return s}},removeData:function(e){var n={field:"data",event:"data",triggerFnName:"trigger",triggerEvent:!1,immutableKeys:{}};return e=Ve({},n,e),function(a){var i=e,o=this,s=o.length!==void 0,l=s?o:[o];if(ze(a)){for(var c=a.split(/\s+/),u=c.length,d=0;d<u;d++){var f=c[d];if(!Rr(f)){var h=!i.immutableKeys[f];if(h)for(var p=0,m=l.length;p<m;p++)l[p]._private[i.field][f]=void 0}}i.triggerEvent&&o[i.triggerFnName](i.event)}else if(a===void 0){for(var _=0,g=l.length;_<g;_++)for(var P=l[_]._private[i.field],y=Object.keys(P),C=0;C<y.length;C++){var E=y[C],T=!i.immutableKeys[E];T&&(P[E]=void 0)}i.triggerEvent&&o[i.triggerFnName](i.event)}return o}}},Zv={eventAliasesOn:function(e){var n=e;n.addListener=n.listen=n.bind=n.on,n.unlisten=n.unbind=n.off=n.removeListener,n.trigger=n.emit,n.pon=n.promiseOn=function(r,a){var i=this,o=Array.prototype.slice.call(arguments,0);return new oi(function(s,l){var c=function(h){i.off.apply(i,d),s(h)},u=o.concat([c]),d=u.concat([]);i.on.apply(i,u)})}}},hn={};[F_,Jv,Zv].forEach(function(t){Ve(hn,t)});var Qv={animate:hn.animate(),animation:hn.animation(),animated:hn.animated(),clearQueue:hn.clearQueue(),delay:hn.delay(),delayAnimation:hn.delayAnimation(),stop:hn.stop()},ks={classes:function(e){var n=this;if(e===void 0){var r=[];return n[0]._private.classes.forEach(function(p){return r.push(p)}),r}else _n(e)||(e=(e||"").match(/\S+/g)||[]);for(var a=[],i=new ii(e),o=0;o<n.length;o++){for(var s=n[o],l=s._private,c=l.classes,u=!1,d=0;d<e.length;d++){var f=e[d],h=c.has(f);if(!h){u=!0;break}}u||(u=c.size!==e.length),u&&(l.classes=i,a.push(s))}return a.length>0&&this.spawn(a).updateStyle().emit("class"),n},addClass:function(e){return this.toggleClass(e,!0)},hasClass:function(e){var n=this[0];return n!=null&&n._private.classes.has(e)},toggleClass:function(e,n){_n(e)||(e=e.match(/\S+/g)||[]);for(var r=this,a=n===void 0,i=[],o=0,s=r.length;o<s;o++)for(var l=r[o],c=l._private.classes,u=!1,d=0;d<e.length;d++){var f=e[d],h=c.has(f),p=!1;n||a&&!h?(c.add(f),p=!0):(!n||a&&h)&&(c.delete(f),p=!0),!u&&p&&(i.push(l),u=!0)}return i.length>0&&this.spawn(i).updateStyle().emit("class"),r},removeClass:function(e){return this.toggleClass(e,!1)},flashClass:function(e,n){var r=this;if(n==null)n=250;else if(n===0)return r;return r.addClass(e),setTimeout(function(){r.removeClass(e)},n),r}};ks.className=ks.classNames=ks.classes;var ln={metaChar:"[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\`\\{\\|\\}\\~]",comparatorOp:"=|\\!=|>|>=|<|<=|\\$=|\\^=|\\*=",boolOp:"\\?|\\!|\\^",string:`"(?:\\\\"|[^"])*"|'(?:\\\\'|[^'])*'`,number:Ln,meta:"degree|indegree|outdegree",separator:"\\s*,\\s*",descendant:"\\s+",child:"\\s+>\\s+",subject:"\\$",group:"node|edge|\\*",directedEdge:"\\s+->\\s+",undirectedEdge:"\\s+<->\\s+"};ln.variable="(?:[\\w-.]|(?:\\\\"+ln.metaChar+"))+";ln.className="(?:[\\w-]|(?:\\\\"+ln.metaChar+"))+";ln.value=ln.string+"|"+ln.number;ln.id=ln.variable;(function(){var t,e,n;for(t=ln.comparatorOp.split("|"),n=0;n<t.length;n++)e=t[n],ln.comparatorOp+="|@"+e;for(t=ln.comparatorOp.split("|"),n=0;n<t.length;n++)e=t[n],!(e.indexOf("!")>=0)&&e!=="="&&(ln.comparatorOp+="|\\!"+e)})();var mn=function(){return{checks:[]}},Ue={GROUP:0,COLLECTION:1,FILTER:2,DATA_COMPARE:3,DATA_EXIST:4,DATA_BOOL:5,META_COMPARE:6,STATE:7,ID:8,CLASS:9,UNDIRECTED_EDGE:10,DIRECTED_EDGE:11,NODE_SOURCE:12,NODE_TARGET:13,NODE_NEIGHBOR:14,CHILD:15,DESCENDANT:16,PARENT:17,ANCESTOR:18,COMPOUND_SPLIT:19,TRUE:20},fl=[{selector:":selected",matches:function(e){return e.selected()}},{selector:":unselected",matches:function(e){return!e.selected()}},{selector:":selectable",matches:function(e){return e.selectable()}},{selector:":unselectable",matches:function(e){return!e.selectable()}},{selector:":locked",matches:function(e){return e.locked()}},{selector:":unlocked",matches:function(e){return!e.locked()}},{selector:":visible",matches:function(e){return e.visible()}},{selector:":hidden",matches:function(e){return!e.visible()}},{selector:":transparent",matches:function(e){return e.transparent()}},{selector:":grabbed",matches:function(e){return e.grabbed()}},{selector:":free",matches:function(e){return!e.grabbed()}},{selector:":removed",matches:function(e){return e.removed()}},{selector:":inside",matches:function(e){return!e.removed()}},{selector:":grabbable",matches:function(e){return e.grabbable()}},{selector:":ungrabbable",matches:function(e){return!e.grabbable()}},{selector:":animated",matches:function(e){return e.animated()}},{selector:":unanimated",matches:function(e){return!e.animated()}},{selector:":parent",matches:function(e){return e.isParent()}},{selector:":childless",matches:function(e){return e.isChildless()}},{selector:":child",matches:function(e){return e.isChild()}},{selector:":orphan",matches:function(e){return e.isOrphan()}},{selector:":nonorphan",matches:function(e){return e.isChild()}},{selector:":compound",matches:function(e){return e.isNode()?e.isParent():e.source().isParent()||e.target().isParent()}},{selector:":loop",matches:function(e){return e.isLoop()}},{selector:":simple",matches:function(e){return e.isSimple()}},{selector:":active",matches:function(e){return e.active()}},{selector:":inactive",matches:function(e){return!e.active()}},{selector:":backgrounding",matches:function(e){return e.backgrounding()}},{selector:":nonbackgrounding",matches:function(e){return!e.backgrounding()}}].sort(function(t,e){return f1(t.selector,e.selector)}),e2=function(){for(var t={},e,n=0;n<fl.length;n++)e=fl[n],t[e.selector]=e.matches;return t}(),n2=function(e,n){return e2[e](n)},t2="("+fl.map(function(t){return t.selector}).join("|")+")",Fa=function(e){return e.replace(new RegExp("\\\\("+ln.metaChar+")","g"),function(n,r){return r})},$r=function(e,n,r){e[e.length-1]=r},hl=[{name:"group",query:!0,regex:"("+ln.group+")",populate:function(e,n,r){var a=Rn(r,1),i=a[0];n.checks.push({type:Ue.GROUP,value:i==="*"?i:i+"s"})}},{name:"state",query:!0,regex:t2,populate:function(e,n,r){var a=Rn(r,1),i=a[0];n.checks.push({type:Ue.STATE,value:i})}},{name:"id",query:!0,regex:"\\#("+ln.id+")",populate:function(e,n,r){var a=Rn(r,1),i=a[0];n.checks.push({type:Ue.ID,value:Fa(i)})}},{name:"className",query:!0,regex:"\\.("+ln.className+")",populate:function(e,n,r){var a=Rn(r,1),i=a[0];n.checks.push({type:Ue.CLASS,value:Fa(i)})}},{name:"dataExists",query:!0,regex:"\\[\\s*("+ln.variable+")\\s*\\]",populate:function(e,n,r){var a=Rn(r,1),i=a[0];n.checks.push({type:Ue.DATA_EXIST,field:Fa(i)})}},{name:"dataCompare",query:!0,regex:"\\[\\s*("+ln.variable+")\\s*("+ln.comparatorOp+")\\s*("+ln.value+")\\s*\\]",populate:function(e,n,r){var a=Rn(r,3),i=a[0],o=a[1],s=a[2],l=new RegExp("^"+ln.string+"$").exec(s)!=null;l?s=s.substring(1,s.length-1):s=parseFloat(s),n.checks.push({type:Ue.DATA_COMPARE,field:Fa(i),operator:o,value:s})}},{name:"dataBool",query:!0,regex:"\\[\\s*("+ln.boolOp+")\\s*("+ln.variable+")\\s*\\]",populate:function(e,n,r){var a=Rn(r,2),i=a[0],o=a[1];n.checks.push({type:Ue.DATA_BOOL,field:Fa(o),operator:i})}},{name:"metaCompare",query:!0,regex:"\\[\\[\\s*("+ln.meta+")\\s*("+ln.comparatorOp+")\\s*("+ln.number+")\\s*\\]\\]",populate:function(e,n,r){var a=Rn(r,3),i=a[0],o=a[1],s=a[2];n.checks.push({type:Ue.META_COMPARE,field:Fa(i),operator:o,value:parseFloat(s)})}},{name:"nextQuery",separator:!0,regex:ln.separator,populate:function(e,n){var r=e.currentSubject,a=e.edgeCount,i=e.compoundCount,o=e[e.length-1];r!=null&&(o.subject=r,e.currentSubject=null),o.edgeCount=a,o.compoundCount=i,e.edgeCount=0,e.compoundCount=0;var s=e[e.length++]=mn();return s}},{name:"directedEdge",separator:!0,regex:ln.directedEdge,populate:function(e,n){if(e.currentSubject==null){var r=mn(),a=n,i=mn();return r.checks.push({type:Ue.DIRECTED_EDGE,source:a,target:i}),$r(e,n,r),e.edgeCount++,i}else{var o=mn(),s=n,l=mn();return o.checks.push({type:Ue.NODE_SOURCE,source:s,target:l}),$r(e,n,o),e.edgeCount++,l}}},{name:"undirectedEdge",separator:!0,regex:ln.undirectedEdge,populate:function(e,n){if(e.currentSubject==null){var r=mn(),a=n,i=mn();return r.checks.push({type:Ue.UNDIRECTED_EDGE,nodes:[a,i]}),$r(e,n,r),e.edgeCount++,i}else{var o=mn(),s=n,l=mn();return o.checks.push({type:Ue.NODE_NEIGHBOR,node:s,neighbor:l}),$r(e,n,o),l}}},{name:"child",separator:!0,regex:ln.child,populate:function(e,n){if(e.currentSubject==null){var r=mn(),a=mn(),i=e[e.length-1];return r.checks.push({type:Ue.CHILD,parent:i,child:a}),$r(e,n,r),e.compoundCount++,a}else if(e.currentSubject===n){var o=mn(),s=e[e.length-1],l=mn(),c=mn(),u=mn(),d=mn();return o.checks.push({type:Ue.COMPOUND_SPLIT,left:s,right:l,subject:c}),c.checks=n.checks,n.checks=[{type:Ue.TRUE}],d.checks.push({type:Ue.TRUE}),l.checks.push({type:Ue.PARENT,parent:d,child:u}),$r(e,s,o),e.currentSubject=c,e.compoundCount++,u}else{var f=mn(),h=mn(),p=[{type:Ue.PARENT,parent:f,child:h}];return f.checks=n.checks,n.checks=p,e.compoundCount++,h}}},{name:"descendant",separator:!0,regex:ln.descendant,populate:function(e,n){if(e.currentSubject==null){var r=mn(),a=mn(),i=e[e.length-1];return r.checks.push({type:Ue.DESCENDANT,ancestor:i,descendant:a}),$r(e,n,r),e.compoundCount++,a}else if(e.currentSubject===n){var o=mn(),s=e[e.length-1],l=mn(),c=mn(),u=mn(),d=mn();return o.checks.push({type:Ue.COMPOUND_SPLIT,left:s,right:l,subject:c}),c.checks=n.checks,n.checks=[{type:Ue.TRUE}],d.checks.push({type:Ue.TRUE}),l.checks.push({type:Ue.ANCESTOR,ancestor:d,descendant:u}),$r(e,s,o),e.currentSubject=c,e.compoundCount++,u}else{var f=mn(),h=mn(),p=[{type:Ue.ANCESTOR,ancestor:f,descendant:h}];return f.checks=n.checks,n.checks=p,e.compoundCount++,h}}},{name:"subject",modifier:!0,regex:ln.subject,populate:function(e,n){if(e.currentSubject!=null&&e.currentSubject!==n)return pn("Redefinition of subject in selector `"+e.toString()+"`"),!1;e.currentSubject=n;var r=e[e.length-1],a=r.checks[0],i=a==null?null:a.type;i===Ue.DIRECTED_EDGE?a.type=Ue.NODE_TARGET:i===Ue.UNDIRECTED_EDGE&&(a.type=Ue.NODE_NEIGHBOR,a.node=a.nodes[1],a.neighbor=a.nodes[0],a.nodes=null)}}];hl.forEach(function(t){return t.regexObj=new RegExp("^"+t.regex)});var r2=function(e){for(var n,r,a,i=0;i<hl.length;i++){var o=hl[i],s=o.name,l=e.match(o.regexObj);if(l!=null){r=l,n=o,a=s;var c=l[0];e=e.substring(c.length);break}}return{expr:n,match:r,name:a,remaining:e}},a2=function(e){var n=e.match(/^\s+/);if(n){var r=n[0];e=e.substring(r.length)}return e},i2=function(e){var n=this,r=n.inputText=e,a=n[0]=mn();for(n.length=1,r=a2(r);;){var i=r2(r);if(i.expr==null)return pn("The selector `"+e+"`is invalid"),!1;var o=i.match.slice(1),s=i.expr.populate(n,a,o);if(s===!1)return!1;if(s!=null&&(a=s),r=i.remaining,r.match(/^\s*$/))break}var l=n[n.length-1];n.currentSubject!=null&&(l.subject=n.currentSubject),l.edgeCount=n.edgeCount,l.compoundCount=n.compoundCount;for(var c=0;c<n.length;c++){var u=n[c];if(u.compoundCount>0&&u.edgeCount>0)return pn("The selector `"+e+"` is invalid because it uses both a compound selector and an edge selector"),!1;if(u.edgeCount>1)return pn("The selector `"+e+"` is invalid because it uses multiple edge selectors"),!1;u.edgeCount===1&&pn("The selector `"+e+"` is deprecated.  Edge selectors do not take effect on changes to source and target nodes after an edge is added, for performance reasons.  Use a class or data selector on edges instead, updating the class or data of an edge when your app detects a change in source or target nodes.")}return!0},o2=function(){if(this.toStringCache!=null)return this.toStringCache;for(var e=function(u){return u??""},n=function(u){return ze(u)?'"'+u+'"':e(u)},r=function(u){return" "+u+" "},a=function(u,d){var f=u.type,h=u.value;switch(f){case Ue.GROUP:{var p=e(h);return p.substring(0,p.length-1)}case Ue.DATA_COMPARE:{var m=u.field,_=u.operator;return"["+m+r(e(_))+n(h)+"]"}case Ue.DATA_BOOL:{var g=u.operator,P=u.field;return"["+e(g)+P+"]"}case Ue.DATA_EXIST:{var y=u.field;return"["+y+"]"}case Ue.META_COMPARE:{var C=u.operator,E=u.field;return"[["+E+r(e(C))+n(h)+"]]"}case Ue.STATE:return h;case Ue.ID:return"#"+h;case Ue.CLASS:return"."+h;case Ue.PARENT:case Ue.CHILD:return i(u.parent,d)+r(">")+i(u.child,d);case Ue.ANCESTOR:case Ue.DESCENDANT:return i(u.ancestor,d)+" "+i(u.descendant,d);case Ue.COMPOUND_SPLIT:{var T=i(u.left,d),B=i(u.subject,d),D=i(u.right,d);return T+(T.length>0?" ":"")+B+D}case Ue.TRUE:return""}},i=function(u,d){return u.checks.reduce(function(f,h,p){return f+(d===u&&p===0?"$":"")+a(h,d)},"")},o="",s=0;s<this.length;s++){var l=this[s];o+=i(l,l.subject),this.length>1&&s<this.length-1&&(o+=", ")}return this.toStringCache=o,o},s2={parse:i2,toString:o2},Bf=function(e,n,r){var a,i=ze(e),o=Se(e),s=ze(r),l,c,u=!1,d=!1,f=!1;switch(n.indexOf("!")>=0&&(n=n.replace("!",""),d=!0),n.indexOf("@")>=0&&(n=n.replace("@",""),u=!0),(i||s||u)&&(l=!i&&!o?"":""+e,c=""+r),u&&(e=l=l.toLowerCase(),r=c=c.toLowerCase()),n){case"*=":a=l.indexOf(c)>=0;break;case"$=":a=l.indexOf(c,l.length-c.length)>=0;break;case"^=":a=l.indexOf(c)===0;break;case"=":a=e===r;break;case">":f=!0,a=e>r;break;case">=":f=!0,a=e>=r;break;case"<":f=!0,a=e<r;break;case"<=":f=!0,a=e<=r;break;default:a=!1;break}return d&&(e!=null||!f)&&(a=!a),a},c2=function(e,n){switch(n){case"?":return!!e;case"!":return!e;case"^":return e===void 0}},l2=function(e){return e!==void 0},Nl=function(e,n){return e.data(n)},u2=function(e,n){return e[n]()},Dn=[],Kn=function(e,n){return e.checks.every(function(r){return Dn[r.type](r,n)})};Dn[Ue.GROUP]=function(t,e){var n=t.value;return n==="*"||n===e.group()};Dn[Ue.STATE]=function(t,e){var n=t.value;return n2(n,e)};Dn[Ue.ID]=function(t,e){var n=t.value;return e.id()===n};Dn[Ue.CLASS]=function(t,e){var n=t.value;return e.hasClass(n)};Dn[Ue.META_COMPARE]=function(t,e){var n=t.field,r=t.operator,a=t.value;return Bf(u2(e,n),r,a)};Dn[Ue.DATA_COMPARE]=function(t,e){var n=t.field,r=t.operator,a=t.value;return Bf(Nl(e,n),r,a)};Dn[Ue.DATA_BOOL]=function(t,e){var n=t.field,r=t.operator;return c2(Nl(e,n),r)};Dn[Ue.DATA_EXIST]=function(t,e){var n=t.field;return t.operator,l2(Nl(e,n))};Dn[Ue.UNDIRECTED_EDGE]=function(t,e){var n=t.nodes[0],r=t.nodes[1],a=e.source(),i=e.target();return Kn(n,a)&&Kn(r,i)||Kn(r,a)&&Kn(n,i)};Dn[Ue.NODE_NEIGHBOR]=function(t,e){return Kn(t.node,e)&&e.neighborhood().some(function(n){return n.isNode()&&Kn(t.neighbor,n)})};Dn[Ue.DIRECTED_EDGE]=function(t,e){return Kn(t.source,e.source())&&Kn(t.target,e.target())};Dn[Ue.NODE_SOURCE]=function(t,e){return Kn(t.source,e)&&e.outgoers().some(function(n){return n.isNode()&&Kn(t.target,n)})};Dn[Ue.NODE_TARGET]=function(t,e){return Kn(t.target,e)&&e.incomers().some(function(n){return n.isNode()&&Kn(t.source,n)})};Dn[Ue.CHILD]=function(t,e){return Kn(t.child,e)&&Kn(t.parent,e.parent())};Dn[Ue.PARENT]=function(t,e){return Kn(t.parent,e)&&e.children().some(function(n){return Kn(t.child,n)})};Dn[Ue.DESCENDANT]=function(t,e){return Kn(t.descendant,e)&&e.ancestors().some(function(n){return Kn(t.ancestor,n)})};Dn[Ue.ANCESTOR]=function(t,e){return Kn(t.ancestor,e)&&e.descendants().some(function(n){return Kn(t.descendant,n)})};Dn[Ue.COMPOUND_SPLIT]=function(t,e){return Kn(t.subject,e)&&Kn(t.left,e)&&Kn(t.right,e)};Dn[Ue.TRUE]=function(){return!0};Dn[Ue.COLLECTION]=function(t,e){var n=t.value;return n.has(e)};Dn[Ue.FILTER]=function(t,e){var n=t.value;return n(e)};var d2=function(e){var n=this;if(n.length===1&&n[0].checks.length===1&&n[0].checks[0].type===Ue.ID)return e.getElementById(n[0].checks[0].value).collection();var r=function(i){for(var o=0;o<n.length;o++){var s=n[o];if(Kn(s,i))return!0}return!1};return n.text()==null&&(r=function(){return!0}),e.filter(r)},f2=function(e){for(var n=this,r=0;r<n.length;r++){var a=n[r];if(Kn(a,e))return!0}return!1},h2={matches:f2,filter:d2},Ur=function(e){this.inputText=e,this.currentSubject=null,this.compoundCount=0,this.edgeCount=0,this.length=0,e==null||ze(e)&&e.match(/^\s*$/)||(Tt(e)?this.addQuery({checks:[{type:Ue.COLLECTION,value:e.collection()}]}):wn(e)?this.addQuery({checks:[{type:Ue.FILTER,value:e}]}):ze(e)?this.parse(e)||(this.invalid=!0):En("A selector must be created from a string; found "))},Fr=Ur.prototype;[s2,h2].forEach(function(t){return Ve(Fr,t)});Fr.text=function(){return this.inputText};Fr.size=function(){return this.length};Fr.eq=function(t){return this[t]};Fr.sameText=function(t){return!this.invalid&&!t.invalid&&this.text()===t.text()};Fr.addQuery=function(t){this[this.length++]=t};Fr.selector=Fr.toString;var Nr={allAre:function(e){var n=new Ur(e);return this.every(function(r){return n.matches(r)})},is:function(e){var n=new Ur(e);return this.some(function(r){return n.matches(r)})},some:function(e,n){for(var r=0;r<this.length;r++){var a=n?e.apply(n,[this[r],r,this]):e(this[r],r,this);if(a)return!0}return!1},every:function(e,n){for(var r=0;r<this.length;r++){var a=n?e.apply(n,[this[r],r,this]):e(this[r],r,this);if(!a)return!1}return!0},same:function(e){if(this===e)return!0;e=this.cy().collection(e);var n=this.length,r=e.length;return n!==r?!1:n===1?this[0]===e[0]:this.every(function(a){return e.hasElementWithId(a.id())})},anySame:function(e){return e=this.cy().collection(e),this.some(function(n){return e.hasElementWithId(n.id())})},allAreNeighbors:function(e){e=this.cy().collection(e);var n=this.neighborhood();return e.every(function(r){return n.hasElementWithId(r.id())})},contains:function(e){e=this.cy().collection(e);var n=this;return e.every(function(r){return n.hasElementWithId(r.id())})}};Nr.allAreNeighbours=Nr.allAreNeighbors;Nr.has=Nr.contains;Nr.equal=Nr.equals=Nr.same;var Wt=function(e,n){return function(a,i,o,s){var l=a,c=this,u;if(l==null?u="":Tt(l)&&l.length===1&&(u=l.id()),c.length===1&&u){var d=c[0]._private,f=d.traversalCache=d.traversalCache||{},h=f[n]=f[n]||[],p=Ir(u),m=h[p];return m||(h[p]=e.call(c,a,i,o,s))}else return e.call(c,a,i,o,s)}},ai={parent:function(e){var n=[];if(this.length===1){var r=this[0]._private.parent;if(r)return r}for(var a=0;a<this.length;a++){var i=this[a],o=i._private.parent;o&&n.push(o)}return this.spawn(n,!0).filter(e)},parents:function(e){for(var n=[],r=this.parent();r.nonempty();){for(var a=0;a<r.length;a++){var i=r[a];n.push(i)}r=r.parent()}return this.spawn(n,!0).filter(e)},commonAncestors:function(e){for(var n,r=0;r<this.length;r++){var a=this[r],i=a.parents();n=n||i,n=n.intersect(i)}return n.filter(e)},orphans:function(e){return this.stdFilter(function(n){return n.isOrphan()}).filter(e)},nonorphans:function(e){return this.stdFilter(function(n){return n.isChild()}).filter(e)},children:Wt(function(t){for(var e=[],n=0;n<this.length;n++)for(var r=this[n],a=r._private.children,i=0;i<a.length;i++)e.push(a[i]);return this.spawn(e,!0).filter(t)},"children"),siblings:function(e){return this.parent().children().not(this).filter(e)},isParent:function(){var e=this[0];if(e)return e.isNode()&&e._private.children.length!==0},isChildless:function(){var e=this[0];if(e)return e.isNode()&&e._private.children.length===0},isChild:function(){var e=this[0];if(e)return e.isNode()&&e._private.parent!=null},isOrphan:function(){var e=this[0];if(e)return e.isNode()&&e._private.parent==null},descendants:function(e){var n=[];function r(a){for(var i=0;i<a.length;i++){var o=a[i];n.push(o),o.children().nonempty()&&r(o.children())}}return r(this.children()),this.spawn(n,!0).filter(e)}};function Ml(t,e,n,r){for(var a=[],i=new ii,o=t.cy(),s=o.hasCompoundNodes(),l=0;l<t.length;l++){var c=t[l];n?a.push(c):s&&r(a,i,c)}for(;a.length>0;){var u=a.shift();e(u),i.add(u.id()),s&&r(a,i,u)}return t}function kf(t,e,n){if(n.isParent())for(var r=n._private.children,a=0;a<r.length;a++){var i=r[a];e.has(i.id())||t.push(i)}}ai.forEachDown=function(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return Ml(this,t,e,kf)};function Df(t,e,n){if(n.isChild()){var r=n._private.parent;e.has(r.id())||t.push(r)}}ai.forEachUp=function(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return Ml(this,t,e,Df)};function p2(t,e,n){Df(t,e,n),kf(t,e,n)}ai.forEachUpAndDown=function(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return Ml(this,t,e,p2)};ai.ancestors=ai.parents;var Gi,$f;Gi=$f={data:hn.data({field:"data",bindingEvent:"data",allowBinding:!0,allowSetting:!0,settingEvent:"data",settingTriggersEvent:!0,triggerFnName:"trigger",allowGetting:!0,immutableKeys:{id:!0,source:!0,target:!0,parent:!0},updateStyle:!0}),removeData:hn.removeData({field:"data",event:"data",triggerFnName:"trigger",triggerEvent:!0,immutableKeys:{id:!0,source:!0,target:!0,parent:!0},updateStyle:!0}),scratch:hn.data({field:"scratch",bindingEvent:"scratch",allowBinding:!0,allowSetting:!0,settingEvent:"scratch",settingTriggersEvent:!0,triggerFnName:"trigger",allowGetting:!0,updateStyle:!0}),removeScratch:hn.removeData({field:"scratch",event:"scratch",triggerFnName:"trigger",triggerEvent:!0,updateStyle:!0}),rscratch:hn.data({field:"rscratch",allowBinding:!1,allowSetting:!0,settingTriggersEvent:!1,allowGetting:!0}),removeRscratch:hn.removeData({field:"rscratch",triggerEvent:!1}),id:function(){var e=this[0];if(e)return e._private.data.id}};Gi.attr=Gi.data;Gi.removeAttr=Gi.removeData;var m2=$f,ic={};function Jc(t){return function(e){var n=this;if(e===void 0&&(e=!0),n.length!==0)if(n.isNode()&&!n.removed()){for(var r=0,a=n[0],i=a._private.edges,o=0;o<i.length;o++){var s=i[o];!e&&s.isLoop()||(r+=t(a,s))}return r}else return}}Ve(ic,{degree:Jc(function(t,e){return e.source().same(e.target())?2:1}),indegree:Jc(function(t,e){return e.target().same(t)?1:0}),outdegree:Jc(function(t,e){return e.source().same(t)?1:0})});function ja(t,e){return function(n){for(var r,a=this.nodes(),i=0;i<a.length;i++){var o=a[i],s=o[t](n);s!==void 0&&(r===void 0||e(s,r))&&(r=s)}return r}}Ve(ic,{minDegree:ja("degree",function(t,e){return t<e}),maxDegree:ja("degree",function(t,e){return t>e}),minIndegree:ja("indegree",function(t,e){return t<e}),maxIndegree:ja("indegree",function(t,e){return t>e}),minOutdegree:ja("outdegree",function(t,e){return t<e}),maxOutdegree:ja("outdegree",function(t,e){return t>e})});Ve(ic,{totalDegree:function(e){for(var n=0,r=this.nodes(),a=0;a<r.length;a++)n+=r[a].degree(e);return n}});var Yt,Sf,Wf=function(e,n,r){for(var a=0;a<e.length;a++){var i=e[a];if(!i.locked()){var o=i._private.position,s={x:n.x!=null?n.x-o.x:0,y:n.y!=null?n.y-o.y:0};i.isParent()&&!(s.x===0&&s.y===0)&&i.children().shift(s,r),i.dirtyBoundingBoxCache()}}},Zu={field:"position",bindingEvent:"position",allowBinding:!0,allowSetting:!0,settingEvent:"position",settingTriggersEvent:!0,triggerFnName:"emitAndNotify",allowGetting:!0,validKeys:["x","y"],beforeGet:function(e){e.updateCompoundBounds()},beforeSet:function(e,n){Wf(e,n,!1)},onSet:function(e){e.dirtyCompoundBoundsCache()},canSet:function(e){return!e.locked()}};Yt=Sf={position:hn.data(Zu),silentPosition:hn.data(Ve({},Zu,{allowBinding:!1,allowSetting:!0,settingTriggersEvent:!1,allowGetting:!1,beforeSet:function(e,n){Wf(e,n,!0)},onSet:function(e){e.dirtyCompoundBoundsCache()}})),positions:function(e,n){if(un(e))n?this.silentPosition(e):this.position(e);else if(wn(e)){var r=e,a=this.cy();a.startBatch();for(var i=0;i<this.length;i++){var o=this[i],s=void 0;(s=r(o,i))&&(n?o.silentPosition(s):o.position(s))}a.endBatch()}return this},silentPositions:function(e){return this.positions(e,!0)},shift:function(e,n,r){var a;if(un(e)?(a={x:Se(e.x)?e.x:0,y:Se(e.y)?e.y:0},r=n):ze(e)&&Se(n)&&(a={x:0,y:0},a[e]=n),a!=null){var i=this.cy();i.startBatch();for(var o=0;o<this.length;o++){var s=this[o];if(!(i.hasCompoundNodes()&&s.isChild()&&s.ancestors().anySame(this))){var l=s.position(),c={x:l.x+a.x,y:l.y+a.y};r?s.silentPosition(c):s.position(c)}}i.endBatch()}return this},silentShift:function(e,n){return un(e)?this.shift(e,!0):ze(e)&&Se(n)&&this.shift(e,n,!0),this},renderedPosition:function(e,n){var r=this[0],a=this.cy(),i=a.zoom(),o=a.pan(),s=un(e)?e:void 0,l=s!==void 0||n!==void 0&&ze(e);if(r&&r.isNode())if(l)for(var c=0;c<this.length;c++){var u=this[c];n!==void 0?u.position(e,(n-o[e])/i):s!==void 0&&u.position(cf(s,i,o))}else{var d=r.position();return s=ec(d,i,o),e===void 0?s:s[e]}else if(!l)return;return this},relativePosition:function(e,n){var r=this[0],a=this.cy(),i=un(e)?e:void 0,o=i!==void 0||n!==void 0&&ze(e),s=a.hasCompoundNodes();if(r&&r.isNode())if(o)for(var l=0;l<this.length;l++){var c=this[l],u=s?c.parent():null,d=u&&u.length>0,f=d;d&&(u=u[0]);var h=f?u.position():{x:0,y:0};n!==void 0?c.position(e,n+h[e]):i!==void 0&&c.position({x:i.x+h.x,y:i.y+h.y})}else{var p=r.position(),m=s?r.parent():null,_=m&&m.length>0,g=_;_&&(m=m[0]);var P=g?m.position():{x:0,y:0};return i={x:p.x-P.x,y:p.y-P.y},e===void 0?i:i[e]}else if(!o)return;return this}};Yt.modelPosition=Yt.point=Yt.position;Yt.modelPositions=Yt.points=Yt.positions;Yt.renderedPoint=Yt.renderedPosition;Yt.relativePoint=Yt.relativePosition;var g2=Sf,ei,Vr;ei=Vr={};Vr.renderedBoundingBox=function(t){var e=this.boundingBox(t),n=this.cy(),r=n.zoom(),a=n.pan(),i=e.x1*r+a.x,o=e.x2*r+a.x,s=e.y1*r+a.y,l=e.y2*r+a.y;return{x1:i,x2:o,y1:s,y2:l,w:o-i,h:l-s}};Vr.dirtyCompoundBoundsCache=function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,e=this.cy();return!e.styleEnabled()||!e.hasCompoundNodes()?this:(this.forEachUp(function(n){if(n.isParent()){var r=n._private;r.compoundBoundsClean=!1,r.bbCache=null,t||n.emitAndNotify("bounds")}}),this)};Vr.updateCompoundBounds=function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,e=this.cy();if(!e.styleEnabled()||!e.hasCompoundNodes())return this;if(!t&&e.batching())return this;function n(o){if(!o.isParent())return;var s=o._private,l=o.children(),c=o.pstyle("compound-sizing-wrt-labels").value==="include",u={width:{val:o.pstyle("min-width").pfValue,left:o.pstyle("min-width-bias-left"),right:o.pstyle("min-width-bias-right")},height:{val:o.pstyle("min-height").pfValue,top:o.pstyle("min-height-bias-top"),bottom:o.pstyle("min-height-bias-bottom")}},d=l.boundingBox({includeLabels:c,includeOverlays:!1,useCache:!1}),f=s.position;(d.w===0||d.h===0)&&(d={w:o.pstyle("width").pfValue,h:o.pstyle("height").pfValue},d.x1=f.x-d.w/2,d.x2=f.x+d.w/2,d.y1=f.y-d.h/2,d.y2=f.y+d.h/2);function h(k,$,M){var b=0,x=0,K=$+M;return k>0&&K>0&&(b=$/K*k,x=M/K*k),{biasDiff:b,biasComplementDiff:x}}function p(k,$,M,b){if(M.units==="%")switch(b){case"width":return k>0?M.pfValue*k:0;case"height":return $>0?M.pfValue*$:0;case"average":return k>0&&$>0?M.pfValue*(k+$)/2:0;case"min":return k>0&&$>0?k>$?M.pfValue*$:M.pfValue*k:0;case"max":return k>0&&$>0?k>$?M.pfValue*k:M.pfValue*$:0;default:return 0}else return M.units==="px"?M.pfValue:0}var m=u.width.left.value;u.width.left.units==="px"&&u.width.val>0&&(m=m*100/u.width.val);var _=u.width.right.value;u.width.right.units==="px"&&u.width.val>0&&(_=_*100/u.width.val);var g=u.height.top.value;u.height.top.units==="px"&&u.height.val>0&&(g=g*100/u.height.val);var P=u.height.bottom.value;u.height.bottom.units==="px"&&u.height.val>0&&(P=P*100/u.height.val);var y=h(u.width.val-d.w,m,_),C=y.biasDiff,E=y.biasComplementDiff,T=h(u.height.val-d.h,g,P),B=T.biasDiff,D=T.biasComplementDiff;s.autoPadding=p(d.w,d.h,o.pstyle("padding"),o.pstyle("padding-relative-to").value),s.autoWidth=Math.max(d.w,u.width.val),f.x=(-C+d.x1+d.x2+E)/2,s.autoHeight=Math.max(d.h,u.height.val),f.y=(-B+d.y1+d.y2+D)/2}for(var r=0;r<this.length;r++){var a=this[r],i=a._private;(!i.compoundBoundsClean||t)&&(n(a),e.batching()||(i.compoundBoundsClean=!0))}return this};var St=function(e){return e===1/0||e===-1/0?0:e},Ft=function(e,n,r,a,i){a-n===0||i-r===0||n==null||r==null||a==null||i==null||(e.x1=n<e.x1?n:e.x1,e.x2=a>e.x2?a:e.x2,e.y1=r<e.y1?r:e.y1,e.y2=i>e.y2?i:e.y2,e.w=e.x2-e.x1,e.h=e.y2-e.y1)},ra=function(e,n){return n==null?e:Ft(e,n.x1,n.y1,n.x2,n.y2)},Oi=function(e,n,r){return jt(e,n,r)},Xs=function(e,n,r){if(!n.cy().headless()){var a=n._private,i=a.rstyle,o=i.arrowWidth/2,s=n.pstyle(r+"-arrow-shape").value,l,c;if(s!=="none"){r==="source"?(l=i.srcX,c=i.srcY):r==="target"?(l=i.tgtX,c=i.tgtY):(l=i.midX,c=i.midY);var u=a.arrowBounds=a.arrowBounds||{},d=u[r]=u[r]||{};d.x1=l-o,d.y1=c-o,d.x2=l+o,d.y2=c+o,d.w=d.x2-d.x1,d.h=d.y2-d.y1,Ts(d,1),Ft(e,d.x1,d.y1,d.x2,d.y2)}}},Zc=function(e,n,r){if(!n.cy().headless()){var a;r?a=r+"-":a="";var i=n._private,o=i.rstyle,s=n.pstyle(a+"label").strValue;if(s){var l=n.pstyle("text-halign"),c=n.pstyle("text-valign"),u=Oi(o,"labelWidth",r),d=Oi(o,"labelHeight",r),f=Oi(o,"labelX",r),h=Oi(o,"labelY",r),p=n.pstyle(a+"text-margin-x").pfValue,m=n.pstyle(a+"text-margin-y").pfValue,_=n.isEdge(),g=n.pstyle(a+"text-rotation"),P=n.pstyle("text-outline-width").pfValue,y=n.pstyle("text-border-width").pfValue,C=y/2,E=n.pstyle("text-background-padding").pfValue,T=2,B=d,D=u,k=D/2,$=B/2,M,b,x,K;if(_)M=f-k,b=f+k,x=h-$,K=h+$;else{switch(l.value){case"left":M=f-D,b=f;break;case"center":M=f-k,b=f+k;break;case"right":M=f,b=f+D;break}switch(c.value){case"top":x=h-B,K=h;break;case"center":x=h-$,K=h+$;break;case"bottom":x=h,K=h+B;break}}var X=p-Math.max(P,C)-E-T,v=p+Math.max(P,C)+E+T,A=m-Math.max(P,C)-E-T,w=m+Math.max(P,C)+E+T;M+=X,b+=v,x+=A,K+=w;var O=r||"main",N=i.labelBounds,S=N[O]=N[O]||{};S.x1=M,S.y1=x,S.x2=b,S.y2=K,S.w=b-M,S.h=K-x,S.leftPad=X,S.rightPad=v,S.topPad=A,S.botPad=w;var I=_&&g.strValue==="autorotate",q=g.pfValue!=null&&g.pfValue!==0;if(I||q){var Y=I?Oi(i.rstyle,"labelAngle",r):g.pfValue,ee=Math.cos(Y),Q=Math.sin(Y),U=(M+b)/2,J=(x+K)/2;if(!_){switch(l.value){case"left":U=b;break;case"right":U=M;break}switch(c.value){case"top":J=K;break;case"bottom":J=x;break}}var F=function(he,le){return he=he-U,le=le-J,{x:he*ee-le*Q+U,y:he*Q+le*ee+J}},W=F(M,x),L=F(M,K),z=F(b,x),ne=F(b,K);M=Math.min(W.x,L.x,z.x,ne.x),b=Math.max(W.x,L.x,z.x,ne.x),x=Math.min(W.y,L.y,z.y,ne.y),K=Math.max(W.y,L.y,z.y,ne.y)}var H=O+"Rot",_e=N[H]=N[H]||{};_e.x1=M,_e.y1=x,_e.x2=b,_e.y2=K,_e.w=b-M,_e.h=K-x,Ft(e,M,x,b,K),Ft(i.labelBounds.all,M,x,b,K)}return e}},_2=function(e,n){if(!n.cy().headless()){var r=n.pstyle("outline-opacity").value,a=n.pstyle("outline-width").value;if(r>0&&a>0){var i=n.pstyle("outline-offset").value,o=n.pstyle("shape").value,s=a+i,l=(e.w+s*2)/e.w,c=(e.h+s*2)/e.h,u=0,d=0;["diamond","pentagon","round-triangle"].includes(o)?(l=(e.w+s*2.4)/e.w,d=-s/3.6):["concave-hexagon","rhomboid","right-rhomboid"].includes(o)?l=(e.w+s*2.4)/e.w:o==="star"?(l=(e.w+s*2.8)/e.w,c=(e.h+s*2.6)/e.h,d=-s/3.8):o==="triangle"?(l=(e.w+s*2.8)/e.w,c=(e.h+s*2.4)/e.h,d=-s/1.4):o==="vee"&&(l=(e.w+s*4.4)/e.w,c=(e.h+s*3.8)/e.h,d=-s*.5);var f=e.h*c-e.h,h=e.w*l-e.w;if(Bs(e,[Math.ceil(f/2),Math.ceil(h/2)]),u!=0||d!==0){var p=Mg(e,u,d);uf(e,p)}}}},P2=function(e,n){var r=e._private.cy,a=r.styleEnabled(),i=r.headless(),o=At(),s=e._private,l=e.isNode(),c=e.isEdge(),u,d,f,h,p,m,_=s.rstyle,g=l&&a?e.pstyle("bounds-expansion").pfValue:[0],P=function(Ae){return Ae.pstyle("display").value!=="none"},y=!a||P(e)&&(!c||P(e.source())&&P(e.target()));if(y){var C=0,E=0;a&&n.includeOverlays&&(C=e.pstyle("overlay-opacity").value,C!==0&&(E=e.pstyle("overlay-padding").value));var T=0,B=0;a&&n.includeUnderlays&&(T=e.pstyle("underlay-opacity").value,T!==0&&(B=e.pstyle("underlay-padding").value));var D=Math.max(E,B),k=0,$=0;if(a&&(k=e.pstyle("width").pfValue,$=k/2),l&&n.includeNodes){var M=e.position();p=M.x,m=M.y;var b=e.outerWidth(),x=b/2,K=e.outerHeight(),X=K/2;u=p-x,d=p+x,f=m-X,h=m+X,Ft(o,u,f,d,h),a&&n.includeOutlines&&_2(o,e)}else if(c&&n.includeEdges)if(a&&!i){var v=e.pstyle("curve-style").strValue;if(u=Math.min(_.srcX,_.midX,_.tgtX),d=Math.max(_.srcX,_.midX,_.tgtX),f=Math.min(_.srcY,_.midY,_.tgtY),h=Math.max(_.srcY,_.midY,_.tgtY),u-=$,d+=$,f-=$,h+=$,Ft(o,u,f,d,h),v==="haystack"){var A=_.haystackPts;if(A&&A.length===2){if(u=A[0].x,f=A[0].y,d=A[1].x,h=A[1].y,u>d){var w=u;u=d,d=w}if(f>h){var O=f;f=h,h=O}Ft(o,u-$,f-$,d+$,h+$)}}else if(v==="bezier"||v==="unbundled-bezier"||v.endsWith("segments")||v.endsWith("taxi")){var N;switch(v){case"bezier":case"unbundled-bezier":N=_.bezierPts;break;case"segments":case"taxi":case"round-segments":case"round-taxi":N=_.linePts;break}if(N!=null)for(var S=0;S<N.length;S++){var I=N[S];u=I.x-$,d=I.x+$,f=I.y-$,h=I.y+$,Ft(o,u,f,d,h)}}}else{var q=e.source(),Y=q.position(),ee=e.target(),Q=ee.position();if(u=Y.x,d=Q.x,f=Y.y,h=Q.y,u>d){var U=u;u=d,d=U}if(f>h){var J=f;f=h,h=J}u-=$,d+=$,f-=$,h+=$,Ft(o,u,f,d,h)}if(a&&n.includeEdges&&c&&(Xs(o,e,"mid-source"),Xs(o,e,"mid-target"),Xs(o,e,"source"),Xs(o,e,"target")),a){var F=e.pstyle("ghost").value==="yes";if(F){var W=e.pstyle("ghost-offset-x").pfValue,L=e.pstyle("ghost-offset-y").pfValue;Ft(o,o.x1+W,o.y1+L,o.x2+W,o.y2+L)}}var z=s.bodyBounds=s.bodyBounds||{};Bu(z,o),Bs(z,g),Ts(z,1),a&&(u=o.x1,d=o.x2,f=o.y1,h=o.y2,Ft(o,u-D,f-D,d+D,h+D));var ne=s.overlayBounds=s.overlayBounds||{};Bu(ne,o),Bs(ne,g),Ts(ne,1);var H=s.labelBounds=s.labelBounds||{};H.all!=null?Ng(H.all):H.all=At(),a&&n.includeLabels&&(n.includeMainLabels&&Zc(o,e,null),c&&(n.includeSourceLabels&&Zc(o,e,"source"),n.includeTargetLabels&&Zc(o,e,"target")))}return o.x1=St(o.x1),o.y1=St(o.y1),o.x2=St(o.x2),o.y2=St(o.y2),o.w=St(o.x2-o.x1),o.h=St(o.y2-o.y1),o.w>0&&o.h>0&&y&&(Bs(o,g),Ts(o,1)),o},Nf=function(e){var n=0,r=function(o){return(o?1:0)<<n++},a=0;return a+=r(e.incudeNodes),a+=r(e.includeEdges),a+=r(e.includeLabels),a+=r(e.includeMainLabels),a+=r(e.includeSourceLabels),a+=r(e.includeTargetLabels),a+=r(e.includeOverlays),a+=r(e.includeOutlines),a},Mf=function(e){if(e.isEdge()){var n=e.source().position(),r=e.target().position(),a=function(o){return Math.round(o)};return ag([a(n.x),a(n.y),a(r.x),a(r.y)])}else return 0},Qu=function(e,n){var r=e._private,a,i=e.isEdge(),o=n==null?ed:Nf(n),s=o===ed,l=Mf(e),c=r.bbCachePosKey===l,u=n.useCache&&c,d=function(m){return m._private.bbCache==null||m._private.styleDirty},f=!u||d(e)||i&&(d(e.source())||d(e.target()));if(f?(c||e.recalculateRenderedStyle(u),a=P2(e,Ji),r.bbCache=a,r.bbCachePosKey=l):a=r.bbCache,!s){var h=e.isNode();a=At(),(n.includeNodes&&h||n.includeEdges&&!h)&&(n.includeOverlays?ra(a,r.overlayBounds):ra(a,r.bodyBounds)),n.includeLabels&&(n.includeMainLabels&&(!i||n.includeSourceLabels&&n.includeTargetLabels)?ra(a,r.labelBounds.all):(n.includeMainLabels&&ra(a,r.labelBounds.mainRot),n.includeSourceLabels&&ra(a,r.labelBounds.sourceRot),n.includeTargetLabels&&ra(a,r.labelBounds.targetRot))),a.w=a.x2-a.x1,a.h=a.y2-a.y1}return a},Ji={includeNodes:!0,includeEdges:!0,includeLabels:!0,includeMainLabels:!0,includeSourceLabels:!0,includeTargetLabels:!0,includeOverlays:!0,includeUnderlays:!0,includeOutlines:!0,useCache:!0},ed=Nf(Ji),nd=et(Ji);Vr.boundingBox=function(t){var e;if(this.length===1&&this[0]._private.bbCache!=null&&!this[0]._private.styleDirty&&(t===void 0||t.useCache===void 0||t.useCache===!0))t===void 0?t=Ji:t=nd(t),e=Qu(this[0],t);else{e=At(),t=t||Ji;var n=nd(t),r=this,a=r.cy(),i=a.styleEnabled();if(i)for(var o=0;o<r.length;o++){var s=r[o],l=s._private,c=Mf(s),u=l.bbCachePosKey===c,d=n.useCache&&u&&!l.styleDirty;s.recalculateRenderedStyle(d)}this.updateCompoundBounds(!t.useCache);for(var f=0;f<r.length;f++){var h=r[f];ra(e,Qu(h,n))}}return e.x1=St(e.x1),e.y1=St(e.y1),e.x2=St(e.x2),e.y2=St(e.y2),e.w=St(e.x2-e.x1),e.h=St(e.y2-e.y1),e};Vr.dirtyBoundingBoxCache=function(){for(var t=0;t<this.length;t++){var e=this[t]._private;e.bbCache=null,e.bbCachePosKey=null,e.bodyBounds=null,e.overlayBounds=null,e.labelBounds.all=null,e.labelBounds.source=null,e.labelBounds.target=null,e.labelBounds.main=null,e.labelBounds.sourceRot=null,e.labelBounds.targetRot=null,e.labelBounds.mainRot=null,e.arrowBounds.source=null,e.arrowBounds.target=null,e.arrowBounds["mid-source"]=null,e.arrowBounds["mid-target"]=null}return this.emitAndNotify("bounds"),this};Vr.boundingBoxAt=function(t){var e=this.nodes(),n=this.cy(),r=n.hasCompoundNodes(),a=n.collection();if(r&&(a=e.filter(function(c){return c.isParent()}),e=e.not(a)),un(t)){var i=t;t=function(){return i}}var o=function(u,d){return u._private.bbAtOldPos=t(u,d)},s=function(u){return u._private.bbAtOldPos};n.startBatch(),e.forEach(o).silentPositions(t),r&&(a.dirtyCompoundBoundsCache(),a.dirtyBoundingBoxCache(),a.updateCompoundBounds(!0));var l=Wg(this.boundingBox({useCache:!1}));return e.silentPositions(s),r&&(a.dirtyCompoundBoundsCache(),a.dirtyBoundingBoxCache(),a.updateCompoundBounds(!0)),n.endBatch(),l};ei.boundingbox=ei.bb=ei.boundingBox;ei.renderedBoundingbox=ei.renderedBoundingBox;var v2=Vr,Ni,io;Ni=io={};var Rf=function(e){e.uppercaseName=xu(e.name),e.autoName="auto"+e.uppercaseName,e.labelName="label"+e.uppercaseName,e.outerName="outer"+e.uppercaseName,e.uppercaseOuterName=xu(e.outerName),Ni[e.name]=function(){var r=this[0],a=r._private,i=a.cy,o=i._private.styleEnabled;if(r)if(o){if(r.isParent())return r.updateCompoundBounds(),a[e.autoName]||0;var s=r.pstyle(e.name);switch(s.strValue){case"label":return r.recalculateRenderedStyle(),a.rstyle[e.labelName]||0;default:return s.pfValue}}else return 1},Ni["outer"+e.uppercaseName]=function(){var r=this[0],a=r._private,i=a.cy,o=i._private.styleEnabled;if(r)if(o){var s=r[e.name](),l=r.pstyle("border-width").pfValue,c=2*r.padding();return s+l+c}else return 1},Ni["rendered"+e.uppercaseName]=function(){var r=this[0];if(r){var a=r[e.name]();return a*this.cy().zoom()}},Ni["rendered"+e.uppercaseOuterName]=function(){var r=this[0];if(r){var a=r[e.outerName]();return a*this.cy().zoom()}}};Rf({name:"width"});Rf({name:"height"});io.padding=function(){var t=this[0],e=t._private;return t.isParent()?(t.updateCompoundBounds(),e.autoPadding!==void 0?e.autoPadding:t.pstyle("padding").pfValue):t.pstyle("padding").pfValue};io.paddedHeight=function(){var t=this[0];return t.height()+2*t.padding()};io.paddedWidth=function(){var t=this[0];return t.width()+2*t.padding()};var b2=io,y2=function(e,n){if(e.isEdge())return n(e)},X2=function(e,n){if(e.isEdge()){var r=e.cy();return ec(n(e),r.zoom(),r.pan())}},K2=function(e,n){if(e.isEdge()){var r=e.cy(),a=r.pan(),i=r.zoom();return n(e).map(function(o){return ec(o,i,a)})}},x2=function(e){return e.renderer().getControlPoints(e)},A2=function(e){return e.renderer().getSegmentPoints(e)},C2=function(e){return e.renderer().getSourceEndpoint(e)},E2=function(e){return e.renderer().getTargetEndpoint(e)},w2=function(e){return e.renderer().getEdgeMidpoint(e)},td={controlPoints:{get:x2,mult:!0},segmentPoints:{get:A2,mult:!0},sourceEndpoint:{get:C2},targetEndpoint:{get:E2},midpoint:{get:w2}},O2=function(e){return"rendered"+e[0].toUpperCase()+e.substr(1)},T2=Object.keys(td).reduce(function(t,e){var n=td[e],r=O2(e);return t[e]=function(){return y2(this,n.get)},n.mult?t[r]=function(){return K2(this,n.get)}:t[r]=function(){return X2(this,n.get)},t},{}),B2=Ve({},g2,v2,b2,T2);var If=function(e,n){this.recycle(e,n)};function Ti(){return!1}function Ks(){return!0}If.prototype={instanceString:function(){return"event"},recycle:function(e,n){if(this.isImmediatePropagationStopped=this.isPropagationStopped=this.isDefaultPrevented=Ti,e!=null&&e.preventDefault?(this.type=e.type,this.isDefaultPrevented=e.defaultPrevented?Ks:Ti):e!=null&&e.type?n=e:this.type=e,n!=null&&(this.originalEvent=n.originalEvent,this.type=n.type!=null?n.type:this.type,this.cy=n.cy,this.target=n.target,this.position=n.position,this.renderedPosition=n.renderedPosition,this.namespace=n.namespace,this.layout=n.layout),this.cy!=null&&this.position!=null&&this.renderedPosition==null){var r=this.position,a=this.cy.zoom(),i=this.cy.pan();this.renderedPosition={x:r.x*a+i.x,y:r.y*a+i.y}}this.timeStamp=e&&e.timeStamp||Date.now()},preventDefault:function(){this.isDefaultPrevented=Ks;var e=this.originalEvent;e&&e.preventDefault&&e.preventDefault()},stopPropagation:function(){this.isPropagationStopped=Ks;var e=this.originalEvent;e&&e.stopPropagation&&e.stopPropagation()},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=Ks,this.stopPropagation()},isDefaultPrevented:Ti,isPropagationStopped:Ti,isImmediatePropagationStopped:Ti};var Lf=/^([^.]+)(\.(?:[^.]+))?$/,k2=".*",Uf={qualifierCompare:function(e,n){return e===n},eventMatches:function(){return!0},addEventFields:function(){},callbackContext:function(e){return e},beforeEmit:function(){},afterEmit:function(){},bubble:function(){return!1},parent:function(){return null},context:null},rd=Object.keys(Uf),D2={};function oc(){for(var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:D2,e=arguments.length>1?arguments[1]:void 0,n=0;n<rd.length;n++){var r=rd[n];this[r]=t[r]||Uf[r]}this.context=e||this.context,this.listeners=[],this.emitting=0}var jr=oc.prototype,Ff=function(e,n,r,a,i,o,s){wn(a)&&(i=a,a=null),s&&(o==null?o=s:o=Ve({},o,s));for(var l=_n(r)?r:r.split(/\s+/),c=0;c<l.length;c++){var u=l[c];if(!Rr(u)){var d=u.match(Lf);if(d){var f=d[1],h=d[2]?d[2]:null,p=n(e,u,f,h,a,i,o);if(p===!1)break}}}},ad=function(e,n){return e.addEventFields(e.context,n),new If(n.type,n)},$2=function(e,n,r){if(n1(r)){n(e,r);return}else if(un(r)){n(e,ad(e,r));return}for(var a=_n(r)?r:r.split(/\s+/),i=0;i<a.length;i++){var o=a[i];if(!Rr(o)){var s=o.match(Lf);if(s){var l=s[1],c=s[2]?s[2]:null,u=ad(e,{type:l,namespace:c,target:e.context});n(e,u)}}}};jr.on=jr.addListener=function(t,e,n,r,a){return Ff(this,function(i,o,s,l,c,u,d){wn(u)&&i.listeners.push({event:o,callback:u,type:s,namespace:l,qualifier:c,conf:d})},t,e,n,r,a),this};jr.one=function(t,e,n,r){return this.on(t,e,n,r,{one:!0})};jr.removeListener=jr.off=function(t,e,n,r){var a=this;this.emitting!==0&&(this.listeners=lg(this.listeners));for(var i=this.listeners,o=function(c){var u=i[c];Ff(a,function(d,f,h,p,m,_){if((u.type===h||t==="*")&&(!p&&u.namespace!==".*"||u.namespace===p)&&(!m||d.qualifierCompare(u.qualifier,m))&&(!_||u.callback===_))return i.splice(c,1),!1},t,e,n,r)},s=i.length-1;s>=0;s--)o(s);return this};jr.removeAllListeners=function(){return this.removeListener("*")};jr.emit=jr.trigger=function(t,e,n){var r=this.listeners,a=r.length;return this.emitting++,_n(e)||(e=[e]),$2(this,function(i,o){n!=null&&(r=[{event:o.event,type:o.type,namespace:o.namespace,callback:n}],a=r.length);for(var s=function(u){var d=r[u];if(d.type===o.type&&(!d.namespace||d.namespace===o.namespace||d.namespace===k2)&&i.eventMatches(i.context,d,o)){var f=[o];e!=null&&dg(f,e),i.beforeEmit(i.context,d,o),d.conf&&d.conf.one&&(i.listeners=i.listeners.filter(function(m){return m!==d}));var h=i.callbackContext(i.context,d,o),p=d.callback.apply(h,f);i.afterEmit(i.context,d,o),p===!1&&(o.stopPropagation(),o.preventDefault())}},l=0;l<a;l++)s(l);i.bubble(i.context)&&!o.isPropagationStopped()&&i.parent(i.context).emit(o,e)},t),this.emitting--,this};var S2={qualifierCompare:function(e,n){return e==null||n==null?e==null&&n==null:e.sameText(n)},eventMatches:function(e,n,r){var a=n.qualifier;return a!=null?e!==r.target&&no(r.target)&&a.matches(r.target):!0},addEventFields:function(e,n){n.cy=e.cy(),n.target=e},callbackContext:function(e,n,r){return n.qualifier!=null?r.target:e},beforeEmit:function(e,n){n.conf&&n.conf.once&&n.conf.onceCollection.removeListener(n.event,n.qualifier,n.callback)},bubble:function(){return!0},parent:function(e){return e.isChild()?e.parent():e.cy()}},xs=function(e){return ze(e)?new Ur(e):e},jf={createEmitter:function(){for(var e=0;e<this.length;e++){var n=this[e],r=n._private;r.emitter||(r.emitter=new oc(S2,n))}return this},emitter:function(){return this._private.emitter},on:function(e,n,r){for(var a=xs(n),i=0;i<this.length;i++){var o=this[i];o.emitter().on(e,a,r)}return this},removeListener:function(e,n,r){for(var a=xs(n),i=0;i<this.length;i++){var o=this[i];o.emitter().removeListener(e,a,r)}return this},removeAllListeners:function(){for(var e=0;e<this.length;e++){var n=this[e];n.emitter().removeAllListeners()}return this},one:function(e,n,r){for(var a=xs(n),i=0;i<this.length;i++){var o=this[i];o.emitter().one(e,a,r)}return this},once:function(e,n,r){for(var a=xs(n),i=0;i<this.length;i++){var o=this[i];o.emitter().on(e,a,r,{once:!0,onceCollection:this})}},emit:function(e,n){for(var r=0;r<this.length;r++){var a=this[r];a.emitter().emit(e,n)}return this},emitAndNotify:function(e,n){if(this.length!==0)return this.cy().notify(e,this),this.emit(e,n),this}};hn.eventAliasesOn(jf);var Yf={nodes:function(e){return this.filter(function(n){return n.isNode()}).filter(e)},edges:function(e){return this.filter(function(n){return n.isEdge()}).filter(e)},byGroup:function(){for(var e=this.spawn(),n=this.spawn(),r=0;r<this.length;r++){var a=this[r];a.isNode()?e.push(a):n.push(a)}return{nodes:e,edges:n}},filter:function(e,n){if(e===void 0)return this;if(ze(e)||Tt(e))return new Ur(e).filter(this);if(wn(e)){for(var r=this.spawn(),a=this,i=0;i<a.length;i++){var o=a[i],s=n?e.apply(n,[o,i,a]):e(o,i,a);s&&r.push(o)}return r}return this.spawn()},not:function(e){if(e){ze(e)&&(e=this.filter(e));for(var n=this.spawn(),r=0;r<this.length;r++){var a=this[r],i=e.has(a);i||n.push(a)}return n}else return this},absoluteComplement:function(){var e=this.cy();return e.mutableElements().not(this)},intersect:function(e){if(ze(e)){var n=e;return this.filter(n)}for(var r=this.spawn(),a=this,i=e,o=this.length<e.length,s=o?a:i,l=o?i:a,c=0;c<s.length;c++){var u=s[c];l.has(u)&&r.push(u)}return r},xor:function(e){var n=this._private.cy;ze(e)&&(e=n.$(e));var r=this.spawn(),a=this,i=e,o=function(l,c){for(var u=0;u<l.length;u++){var d=l[u],f=d._private.data.id,h=c.hasElementWithId(f);h||r.push(d)}};return o(a,i),o(i,a),r},diff:function(e){var n=this._private.cy;ze(e)&&(e=n.$(e));var r=this.spawn(),a=this.spawn(),i=this.spawn(),o=this,s=e,l=function(u,d,f){for(var h=0;h<u.length;h++){var p=u[h],m=p._private.data.id,_=d.hasElementWithId(m);_?i.merge(p):f.push(p)}};return l(o,s,r),l(s,o,a),{left:r,right:a,both:i}},add:function(e){var n=this._private.cy;if(!e)return this;if(ze(e)){var r=e;e=n.mutableElements().filter(r)}for(var a=this.spawnSelf(),i=0;i<e.length;i++){var o=e[i],s=!this.has(o);s&&a.push(o)}return a},merge:function(e){var n=this._private,r=n.cy;if(!e)return this;if(e&&ze(e)){var a=e;e=r.mutableElements().filter(a)}for(var i=n.map,o=0;o<e.length;o++){var s=e[o],l=s._private.data.id,c=!i.has(l);if(c){var u=this.length++;this[u]=s,i.set(l,{ele:s,index:u})}}return this},unmergeAt:function(e){var n=this[e],r=n.id(),a=this._private,i=a.map;this[e]=void 0,i.delete(r);var o=e===this.length-1;if(this.length>1&&!o){var s=this.length-1,l=this[s],c=l._private.data.id;this[s]=void 0,this[e]=l,i.set(c,{ele:l,index:e})}return this.length--,this},unmergeOne:function(e){e=e[0];var n=this._private,r=e._private.data.id,a=n.map,i=a.get(r);if(!i)return this;var o=i.index;return this.unmergeAt(o),this},unmerge:function(e){var n=this._private.cy;if(!e)return this;if(e&&ze(e)){var r=e;e=n.mutableElements().filter(r)}for(var a=0;a<e.length;a++)this.unmergeOne(e[a]);return this},unmergeBy:function(e){for(var n=this.length-1;n>=0;n--){var r=this[n];e(r)&&this.unmergeAt(n)}return this},map:function(e,n){for(var r=[],a=this,i=0;i<a.length;i++){var o=a[i],s=n?e.apply(n,[o,i,a]):e(o,i,a);r.push(s)}return r},reduce:function(e,n){for(var r=n,a=this,i=0;i<a.length;i++)r=e(r,a[i],i,a);return r},max:function(e,n){for(var r=-1/0,a,i=this,o=0;o<i.length;o++){var s=i[o],l=n?e.apply(n,[s,o,i]):e(s,o,i);l>r&&(r=l,a=s)}return{value:r,ele:a}},min:function(e,n){for(var r=1/0,a,i=this,o=0;o<i.length;o++){var s=i[o],l=n?e.apply(n,[s,o,i]):e(s,o,i);l<r&&(r=l,a=s)}return{value:r,ele:a}}},fn=Yf;fn.u=fn["|"]=fn["+"]=fn.union=fn.or=fn.add;fn["\\"]=fn["!"]=fn["-"]=fn.difference=fn.relativeComplement=fn.subtract=fn.not;fn.n=fn["&"]=fn["."]=fn.and=fn.intersection=fn.intersect;fn["^"]=fn["(+)"]=fn["(-)"]=fn.symmetricDifference=fn.symdiff=fn.xor;fn.fnFilter=fn.filterFn=fn.stdFilter=fn.filter;fn.complement=fn.abscomp=fn.absoluteComplement;var W2={isNode:function(){return this.group()==="nodes"},isEdge:function(){return this.group()==="edges"},isLoop:function(){return this.isEdge()&&this.source()[0]===this.target()[0]},isSimple:function(){return this.isEdge()&&this.source()[0]!==this.target()[0]},group:function(){var e=this[0];if(e)return e._private.group}},zf=function(e,n){var r=e.cy(),a=r.hasCompoundNodes();function i(u){var d=u.pstyle("z-compound-depth");return d.value==="auto"?a?u.zDepth():0:d.value==="bottom"?-1:d.value==="top"?El:0}var o=i(e)-i(n);if(o!==0)return o;function s(u){var d=u.pstyle("z-index-compare");return d.value==="auto"&&u.isNode()?1:0}var l=s(e)-s(n);if(l!==0)return l;var c=e.pstyle("z-index").value-n.pstyle("z-index").value;return c!==0?c:e.poolIndex()-n.poolIndex()},Ys={forEach:function(e,n){if(wn(e))for(var r=this.length,a=0;a<r;a++){var i=this[a],o=n?e.apply(n,[i,a,this]):e(i,a,this);if(o===!1)break}return this},toArray:function(){for(var e=[],n=0;n<this.length;n++)e.push(this[n]);return e},slice:function(e,n){var r=[],a=this.length;n==null&&(n=a),e==null&&(e=0),e<0&&(e=a+e),n<0&&(n=a+n);for(var i=e;i>=0&&i<n&&i<a;i++)r.push(this[i]);return this.spawn(r)},size:function(){return this.length},eq:function(e){return this[e]||this.spawn()},first:function(){return this[0]||this.spawn()},last:function(){return this[this.length-1]||this.spawn()},empty:function(){return this.length===0},nonempty:function(){return!this.empty()},sort:function(e){if(!wn(e))return this;var n=this.toArray().sort(e);return this.spawn(n)},sortByZIndex:function(){return this.sort(zf)},zDepth:function(){var e=this[0];if(e){var n=e._private,r=n.group;if(r==="nodes"){var a=n.data.parent?e.parents().size():0;return e.isParent()?a:El-1}else{var i=n.source,o=n.target,s=i.zDepth(),l=o.zDepth();return Math.max(s,l,0)}}}};Ys.each=Ys.forEach;var N2=function(){var e="undefined",n=(typeof Symbol>"u"?"undefined":Un(Symbol))!=e&&Un(Symbol.iterator)!=e;n&&(Ys[Symbol.iterator]=function(){var r=this,a={value:void 0,done:!1},i=0,o=this.length;return Ld({next:function(){return i<o?a.value=r[i++]:(a.value=void 0,a.done=!0),a}},Symbol.iterator,function(){return this})})};N2();var M2=et({nodeDimensionsIncludeLabels:!1}),Ds={layoutDimensions:function(e){e=M2(e);var n;if(!this.takesUpSpace())n={w:0,h:0};else if(e.nodeDimensionsIncludeLabels){var r=this.boundingBox();n={w:r.w,h:r.h}}else n={w:this.outerWidth(),h:this.outerHeight()};return(n.w===0||n.h===0)&&(n.w=n.h=1),n},layoutPositions:function(e,n,r){var a=this.nodes().filter(function(E){return!E.isParent()}),i=this.cy(),o=n.eles,s=function(T){return T.id()},l=Fi(r,s);e.emit({type:"layoutstart",layout:e}),e.animations=[];var c=function(T,B,D){var k={x:B.x1+B.w/2,y:B.y1+B.h/2},$={x:(D.x-k.x)*T,y:(D.y-k.y)*T};return{x:k.x+$.x,y:k.y+$.y}},u=n.spacingFactor&&n.spacingFactor!==1,d=function(){if(!u)return null;for(var T=At(),B=0;B<a.length;B++){var D=a[B],k=l(D,B);Rg(T,k.x,k.y)}return T},f=d(),h=Fi(function(E,T){var B=l(E,T);if(u){var D=Math.abs(n.spacingFactor);B=c(D,f,B)}return n.transform!=null&&(B=n.transform(E,B)),B},s);if(n.animate){for(var p=0;p<a.length;p++){var m=a[p],_=h(m,p),g=n.animateFilter==null||n.animateFilter(m,p);if(g){var P=m.animation({position:_,duration:n.animationDuration,easing:n.animationEasing});e.animations.push(P)}else m.position(_)}if(n.fit){var y=i.animation({fit:{boundingBox:o.boundingBoxAt(h),padding:n.padding},duration:n.animationDuration,easing:n.animationEasing});e.animations.push(y)}else if(n.zoom!==void 0&&n.pan!==void 0){var C=i.animation({zoom:n.zoom,pan:n.pan,duration:n.animationDuration,easing:n.animationEasing});e.animations.push(C)}e.animations.forEach(function(E){return E.play()}),e.one("layoutready",n.ready),e.emit({type:"layoutready",layout:e}),oi.all(e.animations.map(function(E){return E.promise()})).then(function(){e.one("layoutstop",n.stop),e.emit({type:"layoutstop",layout:e})})}else a.positions(h),n.fit&&i.fit(n.eles,n.padding),n.zoom!=null&&i.zoom(n.zoom),n.pan&&i.pan(n.pan),e.one("layoutready",n.ready),e.emit({type:"layoutready",layout:e}),e.one("layoutstop",n.stop),e.emit({type:"layoutstop",layout:e});return this},layout:function(e){var n=this.cy();return n.makeLayout(Ve({},e,{eles:this}))}};Ds.createLayout=Ds.makeLayout=Ds.layout;function Vf(t,e,n){var r=n._private,a=r.styleCache=r.styleCache||[],i;return(i=a[t])!=null||(i=a[t]=e(n)),i}function sc(t,e){return t=Ir(t),function(r){return Vf(t,e,r)}}function cc(t,e){t=Ir(t);var n=function(a){return e.call(a)};return function(){var a=this[0];if(a)return Vf(t,n,a)}}var rt={recalculateRenderedStyle:function(e){var n=this.cy(),r=n.renderer(),a=n.styleEnabled();return r&&a&&r.recalculateRenderedStyle(this,e),this},dirtyStyleCache:function(){var e=this.cy(),n=function(i){return i._private.styleCache=null};if(e.hasCompoundNodes()){var r;r=this.spawnSelf().merge(this.descendants()).merge(this.parents()),r.merge(r.connectedEdges()),r.forEach(n)}else this.forEach(function(a){n(a),a.connectedEdges().forEach(n)});return this},updateStyle:function(e){var n=this._private.cy;if(!n.styleEnabled())return this;if(n.batching()){var r=n._private.batchStyleEles;return r.merge(this),this}var a=n.hasCompoundNodes(),i=this;e=!!(e||e===void 0),a&&(i=this.spawnSelf().merge(this.descendants()).merge(this.parents()));var o=i;return e?o.emitAndNotify("style"):o.emit("style"),i.forEach(function(s){return s._private.styleDirty=!0}),this},cleanStyle:function(){var e=this.cy();if(e.styleEnabled())for(var n=0;n<this.length;n++){var r=this[n];r._private.styleDirty&&(r._private.styleDirty=!1,e.style().apply(r))}},parsedStyle:function(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0,r=this[0],a=r.cy();if(a.styleEnabled()&&r){r._private.styleDirty&&(r._private.styleDirty=!1,a.style().apply(r));var i=r._private.style[e];return i??(n?a.style().getDefaultProperty(e):null)}},numericStyle:function(e){var n=this[0];if(n.cy().styleEnabled()&&n){var r=n.pstyle(e);return r.pfValue!==void 0?r.pfValue:r.value}},numericStyleUnits:function(e){var n=this[0];if(n.cy().styleEnabled()&&n)return n.pstyle(e).units},renderedStyle:function(e){var n=this.cy();if(!n.styleEnabled())return this;var r=this[0];if(r)return n.style().getRenderedStyle(r,e)},style:function(e,n){var r=this.cy();if(!r.styleEnabled())return this;var a=!1,i=r.style();if(un(e)){var o=e;i.applyBypass(this,o,a),this.emitAndNotify("style")}else if(ze(e))if(n===void 0){var s=this[0];return s?i.getStylePropertyValue(s,e):void 0}else i.applyBypass(this,e,n,a),this.emitAndNotify("style");else if(e===void 0){var l=this[0];return l?i.getRawStyle(l):void 0}return this},removeStyle:function(e){var n=this.cy();if(!n.styleEnabled())return this;var r=!1,a=n.style(),i=this;if(e===void 0)for(var o=0;o<i.length;o++){var s=i[o];a.removeAllBypasses(s,r)}else{e=e.split(/\s+/);for(var l=0;l<i.length;l++){var c=i[l];a.removeBypasses(c,e,r)}}return this.emitAndNotify("style"),this},show:function(){return this.css("display","element"),this},hide:function(){return this.css("display","none"),this},effectiveOpacity:function(){var e=this.cy();if(!e.styleEnabled())return 1;var n=e.hasCompoundNodes(),r=this[0];if(r){var a=r._private,i=r.pstyle("opacity").value;if(!n)return i;var o=a.data.parent?r.parents():null;if(o)for(var s=0;s<o.length;s++){var l=o[s],c=l.pstyle("opacity").value;i=c*i}return i}},transparent:function(){var e=this.cy();if(!e.styleEnabled())return!1;var n=this[0],r=n.cy().hasCompoundNodes();if(n)return r?n.effectiveOpacity()===0:n.pstyle("opacity").value===0},backgrounding:function(){var e=this.cy();if(!e.styleEnabled())return!1;var n=this[0];return!!n._private.backgrounding}};function Qc(t,e){var n=t._private,r=n.data.parent?t.parents():null;if(r)for(var a=0;a<r.length;a++){var i=r[a];if(!e(i))return!1}return!0}function Rl(t){var e=t.ok,n=t.edgeOkViaNode||t.ok,r=t.parentOk||t.ok;return function(){var a=this.cy();if(!a.styleEnabled())return!0;var i=this[0],o=a.hasCompoundNodes();if(i){var s=i._private;if(!e(i))return!1;if(i.isNode())return!o||Qc(i,r);var l=s.source,c=s.target;return n(l)&&(!o||Qc(l,n))&&(l===c||n(c)&&(!o||Qc(c,n)))}}}var ui=sc("eleTakesUpSpace",function(t){return t.pstyle("display").value==="element"&&t.width()!==0&&(t.isNode()?t.height()!==0:!0)});rt.takesUpSpace=cc("takesUpSpace",Rl({ok:ui}));var R2=sc("eleInteractive",function(t){return t.pstyle("events").value==="yes"&&t.pstyle("visibility").value==="visible"&&ui(t)}),I2=sc("parentInteractive",function(t){return t.pstyle("visibility").value==="visible"&&ui(t)});rt.interactive=cc("interactive",Rl({ok:R2,parentOk:I2,edgeOkViaNode:ui}));rt.noninteractive=function(){var t=this[0];if(t)return!t.interactive()};var L2=sc("eleVisible",function(t){return t.pstyle("visibility").value==="visible"&&t.pstyle("opacity").pfValue!==0&&ui(t)}),U2=ui;rt.visible=cc("visible",Rl({ok:L2,edgeOkViaNode:U2}));rt.hidden=function(){var t=this[0];if(t)return!t.visible()};rt.isBundledBezier=cc("isBundledBezier",function(){return this.cy().styleEnabled()?!this.removed()&&this.pstyle("curve-style").value==="bezier"&&this.takesUpSpace():!1});rt.bypass=rt.css=rt.style;rt.renderedCss=rt.renderedStyle;rt.removeBypass=rt.removeCss=rt.removeStyle;rt.pstyle=rt.parsedStyle;var Mr={};function id(t){return function(){var e=arguments,n=[];if(e.length===2){var r=e[0],a=e[1];this.on(t.event,r,a)}else if(e.length===1&&wn(e[0])){var i=e[0];this.on(t.event,i)}else if(e.length===0||e.length===1&&_n(e[0])){for(var o=e.length===1?e[0]:null,s=0;s<this.length;s++){var l=this[s],c=!t.ableField||l._private[t.ableField],u=l._private[t.field]!=t.value;if(t.overrideAble){var d=t.overrideAble(l);if(d!==void 0&&(c=d,!d))return this}c&&(l._private[t.field]=t.value,u&&n.push(l))}var f=this.spawn(n);f.updateStyle(),f.emit(t.event),o&&f.emit(o)}return this}}function di(t){Mr[t.field]=function(){var e=this[0];if(e){if(t.overrideField){var n=t.overrideField(e);if(n!==void 0)return n}return e._private[t.field]}},Mr[t.on]=id({event:t.on,field:t.field,ableField:t.ableField,overrideAble:t.overrideAble,value:!0}),Mr[t.off]=id({event:t.off,field:t.field,ableField:t.ableField,overrideAble:t.overrideAble,value:!1})}di({field:"locked",overrideField:function(e){return e.cy().autolock()?!0:void 0},on:"lock",off:"unlock"});di({field:"grabbable",overrideField:function(e){return e.cy().autoungrabify()||e.pannable()?!1:void 0},on:"grabify",off:"ungrabify"});di({field:"selected",ableField:"selectable",overrideAble:function(e){return e.cy().autounselectify()?!1:void 0},on:"select",off:"unselect"});di({field:"selectable",overrideField:function(e){return e.cy().autounselectify()?!1:void 0},on:"selectify",off:"unselectify"});Mr.deselect=Mr.unselect;Mr.grabbed=function(){var t=this[0];if(t)return t._private.grabbed};di({field:"active",on:"activate",off:"unactivate"});di({field:"pannable",on:"panify",off:"unpanify"});Mr.inactive=function(){var t=this[0];if(t)return!t._private.active};var dt={},od=function(e){return function(r){for(var a=this,i=[],o=0;o<a.length;o++){var s=a[o];if(s.isNode()){for(var l=!1,c=s.connectedEdges(),u=0;u<c.length;u++){var d=c[u],f=d.source(),h=d.target();if(e.noIncomingEdges&&h===s&&f!==s||e.noOutgoingEdges&&f===s&&h!==s){l=!0;break}}l||i.push(s)}}return this.spawn(i,!0).filter(r)}},sd=function(e){return function(n){for(var r=this,a=[],i=0;i<r.length;i++){var o=r[i];if(o.isNode())for(var s=o.connectedEdges(),l=0;l<s.length;l++){var c=s[l],u=c.source(),d=c.target();e.outgoing&&u===o?(a.push(c),a.push(d)):e.incoming&&d===o&&(a.push(c),a.push(u))}}return this.spawn(a,!0).filter(n)}},cd=function(e){return function(n){for(var r=this,a=[],i={};;){var o=e.outgoing?r.outgoers():r.incomers();if(o.length===0)break;for(var s=!1,l=0;l<o.length;l++){var c=o[l],u=c.id();i[u]||(i[u]=!0,a.push(c),s=!0)}if(!s)break;r=o}return this.spawn(a,!0).filter(n)}};dt.clearTraversalCache=function(){for(var t=0;t<this.length;t++)this[t]._private.traversalCache=null};Ve(dt,{roots:od({noIncomingEdges:!0}),leaves:od({noOutgoingEdges:!0}),outgoers:Wt(sd({outgoing:!0}),"outgoers"),successors:cd({outgoing:!0}),incomers:Wt(sd({incoming:!0}),"incomers"),predecessors:cd({incoming:!0})});Ve(dt,{neighborhood:Wt(function(t){for(var e=[],n=this.nodes(),r=0;r<n.length;r++)for(var a=n[r],i=a.connectedEdges(),o=0;o<i.length;o++){var s=i[o],l=s.source(),c=s.target(),u=a===l?c:l;u.length>0&&e.push(u[0]),e.push(s[0])}return this.spawn(e,!0).filter(t)},"neighborhood"),closedNeighborhood:function(e){return this.neighborhood().add(this).filter(e)},openNeighborhood:function(e){return this.neighborhood(e)}});dt.neighbourhood=dt.neighborhood;dt.closedNeighbourhood=dt.closedNeighborhood;dt.openNeighbourhood=dt.openNeighborhood;Ve(dt,{source:Wt(function(e){var n=this[0],r;return n&&(r=n._private.source||n.cy().collection()),r&&e?r.filter(e):r},"source"),target:Wt(function(e){var n=this[0],r;return n&&(r=n._private.target||n.cy().collection()),r&&e?r.filter(e):r},"target"),sources:ld({attr:"source"}),targets:ld({attr:"target"})});function ld(t){return function(n){for(var r=[],a=0;a<this.length;a++){var i=this[a],o=i._private[t.attr];o&&r.push(o)}return this.spawn(r,!0).filter(n)}}Ve(dt,{edgesWith:Wt(ud(),"edgesWith"),edgesTo:Wt(ud({thisIsSrc:!0}),"edgesTo")});function ud(t){return function(n){var r=[],a=this._private.cy,i=t||{};ze(n)&&(n=a.$(n));for(var o=0;o<n.length;o++)for(var s=n[o]._private.edges,l=0;l<s.length;l++){var c=s[l],u=c._private.data,d=this.hasElementWithId(u.source)&&n.hasElementWithId(u.target),f=n.hasElementWithId(u.source)&&this.hasElementWithId(u.target),h=d||f;h&&((i.thisIsSrc||i.thisIsTgt)&&(i.thisIsSrc&&!d||i.thisIsTgt&&!f)||r.push(c))}return this.spawn(r,!0)}}Ve(dt,{connectedEdges:Wt(function(t){for(var e=[],n=this,r=0;r<n.length;r++){var a=n[r];if(a.isNode())for(var i=a._private.edges,o=0;o<i.length;o++){var s=i[o];e.push(s)}}return this.spawn(e,!0).filter(t)},"connectedEdges"),connectedNodes:Wt(function(t){for(var e=[],n=this,r=0;r<n.length;r++){var a=n[r];a.isEdge()&&(e.push(a.source()[0]),e.push(a.target()[0]))}return this.spawn(e,!0).filter(t)},"connectedNodes"),parallelEdges:Wt(dd(),"parallelEdges"),codirectedEdges:Wt(dd({codirected:!0}),"codirectedEdges")});function dd(t){var e={codirected:!1};return t=Ve({},e,t),function(r){for(var a=[],i=this.edges(),o=t,s=0;s<i.length;s++)for(var l=i[s],c=l._private,u=c.source,d=u._private.data.id,f=c.data.target,h=u._private.edges,p=0;p<h.length;p++){var m=h[p],_=m._private.data,g=_.target,P=_.source,y=g===f&&P===d,C=d===g&&f===P;(o.codirected&&y||!o.codirected&&(y||C))&&a.push(m)}return this.spawn(a,!0).filter(r)}}Ve(dt,{components:function(e){var n=this,r=n.cy(),a=r.collection(),i=e==null?n.nodes():e.nodes(),o=[];e!=null&&i.empty()&&(i=e.sources());var s=function(u,d){a.merge(u),i.unmerge(u),d.merge(u)};if(i.empty())return n.spawn();var l=function(){var u=r.collection();o.push(u);var d=i[0];s(d,u),n.bfs({directed:!1,roots:d,visit:function(h){return s(h,u)}}),u.forEach(function(f){f.connectedEdges().forEach(function(h){n.has(h)&&u.has(h.source())&&u.has(h.target())&&u.merge(h)})})};do l();while(i.length>0);return o},component:function(){var e=this[0];return e.cy().mutableElements().components(e)[0]}});dt.componentsOf=dt.components;var at=function(e,n){var r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,a=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(e===void 0){En("A collection must have a reference to the core");return}var i=new rr,o=!1;if(!n)n=[];else if(n.length>0&&un(n[0])&&!no(n[0])){o=!0;for(var s=[],l=new ii,c=0,u=n.length;c<u;c++){var d=n[c];d.data==null&&(d.data={});var f=d.data;if(f.id==null)f.id=of();else if(e.hasElementWithId(f.id)||l.has(f.id))continue;var h=new Qs(e,d,!1);s.push(h),l.add(f.id)}n=s}this.length=0;for(var p=0,m=n.length;p<m;p++){var _=n[p][0];if(_!=null){var g=_._private.data.id;(!r||!i.has(g))&&(r&&i.set(g,{index:this.length,ele:_}),this[this.length]=_,this.length++)}}this._private={eles:this,cy:e,get map(){return this.lazyMap==null&&this.rebuildMap(),this.lazyMap},set map(P){this.lazyMap=P},rebuildMap:function(){for(var y=this.lazyMap=new rr,C=this.eles,E=0;E<C.length;E++){var T=C[E];y.set(T.id(),{index:E,ele:T})}}},r&&(this._private.map=i),o&&!a&&this.restore()},yn=Qs.prototype=at.prototype=Object.create(Array.prototype);yn.instanceString=function(){return"collection"};yn.spawn=function(t,e){return new at(this.cy(),t,e)};yn.spawnSelf=function(){return this.spawn(this)};yn.cy=function(){return this._private.cy};yn.renderer=function(){return this._private.cy.renderer()};yn.element=function(){return this[0]};yn.collection=function(){return jd(this)?this:new at(this._private.cy,[this])};yn.unique=function(){return new at(this._private.cy,this,!0)};yn.hasElementWithId=function(t){return t=""+t,this._private.map.has(t)};yn.getElementById=function(t){t=""+t;var e=this._private.cy,n=this._private.map.get(t);return n?n.ele:new at(e)};yn.$id=yn.getElementById;yn.poolIndex=function(){var t=this._private.cy,e=t._private.elements,n=this[0]._private.data.id;return e._private.map.get(n).index};yn.indexOf=function(t){var e=t[0]._private.data.id;return this._private.map.get(e).index};yn.indexOfId=function(t){return t=""+t,this._private.map.get(t).index};yn.json=function(t){var e=this.element(),n=this.cy();if(e==null&&t)return this;if(e!=null){var r=e._private;if(un(t)){if(n.startBatch(),t.data){e.data(t.data);var a=r.data;if(e.isEdge()){var i=!1,o={},s=t.data.source,l=t.data.target;s!=null&&s!=a.source&&(o.source=""+s,i=!0),l!=null&&l!=a.target&&(o.target=""+l,i=!0),i&&(e=e.move(o))}else{var c="parent"in t.data,u=t.data.parent;c&&(u!=null||a.parent!=null)&&u!=a.parent&&(u===void 0&&(u=null),u!=null&&(u=""+u),e=e.move({parent:u}))}}t.position&&e.position(t.position);var d=function(m,_,g){var P=t[m];P!=null&&P!==r[m]&&(P?e[_]():e[g]())};return d("removed","remove","restore"),d("selected","select","unselect"),d("selectable","selectify","unselectify"),d("locked","lock","unlock"),d("grabbable","grabify","ungrabify"),d("pannable","panify","unpanify"),t.classes!=null&&e.classes(t.classes),n.endBatch(),this}else if(t===void 0){var f={data:tr(r.data),position:tr(r.position),group:r.group,removed:r.removed,selected:r.selected,selectable:r.selectable,locked:r.locked,grabbable:r.grabbable,pannable:r.pannable,classes:null};f.classes="";var h=0;return r.classes.forEach(function(p){return f.classes+=h++===0?p:" "+p}),f}}};yn.jsons=function(){for(var t=[],e=0;e<this.length;e++){var n=this[e],r=n.json();t.push(r)}return t};yn.clone=function(){for(var t=this.cy(),e=[],n=0;n<this.length;n++){var r=this[n],a=r.json(),i=new Qs(t,a,!1);e.push(i)}return new at(t,e)};yn.copy=yn.clone;yn.restore=function(){for(var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0,n=this,r=n.cy(),a=r._private,i=[],o=[],s,l=0,c=n.length;l<c;l++){var u=n[l];e&&!u.removed()||(u.isNode()?i.push(u):o.push(u))}s=i.concat(o);var d,f=function(){s.splice(d,1),d--};for(d=0;d<s.length;d++){var h=s[d],p=h._private,m=p.data;if(h.clearTraversalCache(),!(!e&&!p.removed)){if(m.id===void 0)m.id=of();else if(Se(m.id))m.id=""+m.id;else if(Rr(m.id)||!ze(m.id)){En("Can not create element with invalid string ID `"+m.id+"`"),f();continue}else if(r.hasElementWithId(m.id)){En("Can not create second element with ID `"+m.id+"`"),f();continue}}var _=m.id;if(h.isNode()){var g=p.position;g.x==null&&(g.x=0),g.y==null&&(g.y=0)}if(h.isEdge()){for(var P=h,y=["source","target"],C=y.length,E=!1,T=0;T<C;T++){var B=y[T],D=m[B];Se(D)&&(D=m[B]=""+m[B]),D==null||D===""?(En("Can not create edge `"+_+"` with unspecified "+B),E=!0):r.hasElementWithId(D)||(En("Can not create edge `"+_+"` with nonexistant "+B+" `"+D+"`"),E=!0)}if(E){f();continue}var k=r.getElementById(m.source),$=r.getElementById(m.target);k.same($)?k._private.edges.push(P):(k._private.edges.push(P),$._private.edges.push(P)),P._private.source=k,P._private.target=$}p.map=new rr,p.map.set(_,{ele:h,index:0}),p.removed=!1,e&&r.addToPool(h)}for(var M=0;M<i.length;M++){var b=i[M],x=b._private.data;Se(x.parent)&&(x.parent=""+x.parent);var K=x.parent,X=K!=null;if(X||b._private.parent){var v=b._private.parent?r.collection().merge(b._private.parent):r.getElementById(K);if(v.empty())x.parent=void 0;else if(v[0].removed())pn("Node added with missing parent, reference to parent removed"),x.parent=void 0,b._private.parent=null;else{for(var A=!1,w=v;!w.empty();){if(b.same(w)){A=!0,x.parent=void 0;break}w=w.parent()}A||(v[0]._private.children.push(b),b._private.parent=v[0],a.hasCompoundNodes=!0)}}}if(s.length>0){for(var O=s.length===n.length?n:new at(r,s),N=0;N<O.length;N++){var S=O[N];S.isNode()||(S.parallelEdges().clearTraversalCache(),S.source().clearTraversalCache(),S.target().clearTraversalCache())}var I;a.hasCompoundNodes?I=r.collection().merge(O).merge(O.connectedNodes()).merge(O.parent()):I=O,I.dirtyCompoundBoundsCache().dirtyBoundingBoxCache().updateStyle(t),t?O.emitAndNotify("add"):e&&O.emit("add")}return n};yn.removed=function(){var t=this[0];return t&&t._private.removed};yn.inside=function(){var t=this[0];return t&&!t._private.removed};yn.remove=function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0,n=this,r=[],a={},i=n._private.cy;function o(K){for(var X=K._private.edges,v=0;v<X.length;v++)l(X[v])}function s(K){for(var X=K._private.children,v=0;v<X.length;v++)l(X[v])}function l(K){var X=a[K.id()];e&&K.removed()||X||(a[K.id()]=!0,K.isNode()?(r.push(K),o(K),s(K)):r.unshift(K))}for(var c=0,u=n.length;c<u;c++){var d=n[c];l(d)}function f(K,X){var v=K._private.edges;Lr(v,X),K.clearTraversalCache()}function h(K){K.clearTraversalCache()}var p=[];p.ids={};function m(K,X){X=X[0],K=K[0];var v=K._private.children,A=K.id();Lr(v,X),X._private.parent=null,p.ids[A]||(p.ids[A]=!0,p.push(K))}n.dirtyCompoundBoundsCache(),e&&i.removeFromPool(r);for(var _=0;_<r.length;_++){var g=r[_];if(g.isEdge()){var P=g.source()[0],y=g.target()[0];f(P,g),f(y,g);for(var C=g.parallelEdges(),E=0;E<C.length;E++){var T=C[E];h(T),T.isBundledBezier()&&T.dirtyBoundingBoxCache()}}else{var B=g.parent();B.length!==0&&m(B,g)}e&&(g._private.removed=!0)}var D=i._private.elements;i._private.hasCompoundNodes=!1;for(var k=0;k<D.length;k++){var $=D[k];if($.isParent()){i._private.hasCompoundNodes=!0;break}}var M=new at(this.cy(),r);M.size()>0&&(t?M.emitAndNotify("remove"):e&&M.emit("remove"));for(var b=0;b<p.length;b++){var x=p[b];(!e||!x.removed())&&x.updateStyle()}return M};yn.move=function(t){var e=this._private.cy,n=this,r=!1,a=!1,i=function(p){return p==null?p:""+p};if(t.source!==void 0||t.target!==void 0){var o=i(t.source),s=i(t.target),l=o!=null&&e.hasElementWithId(o),c=s!=null&&e.hasElementWithId(s);(l||c)&&(e.batch(function(){n.remove(r,a),n.emitAndNotify("moveout");for(var h=0;h<n.length;h++){var p=n[h],m=p._private.data;p.isEdge()&&(l&&(m.source=o),c&&(m.target=s))}n.restore(r,a)}),n.emitAndNotify("move"))}else if(t.parent!==void 0){var u=i(t.parent),d=u===null||e.hasElementWithId(u);if(d){var f=u===null?void 0:u;e.batch(function(){var h=n.remove(r,a);h.emitAndNotify("moveout");for(var p=0;p<n.length;p++){var m=n[p],_=m._private.data;m.isNode()&&(_.parent=f)}h.restore(r,a)}),n.emitAndNotify("move")}}return this};[vf,Qv,ks,Nr,ai,m2,ic,B2,jf,Yf,W2,Ys,Ds,rt,Mr,dt].forEach(function(t){Ve(yn,t)});var F2={add:function(e){var n,r=this;if(Tt(e)){var a=e;if(a._private.cy===r)n=a.restore();else{for(var i=[],o=0;o<a.length;o++){var s=a[o];i.push(s.json())}n=new at(r,i)}}else if(_n(e)){var l=e;n=new at(r,l)}else if(un(e)&&(_n(e.nodes)||_n(e.edges))){for(var c=e,u=[],d=["nodes","edges"],f=0,h=d.length;f<h;f++){var p=d[f],m=c[p];if(_n(m))for(var _=0,g=m.length;_<g;_++){var P=Ve({group:p},m[_]);u.push(P)}}n=new at(r,u)}else{var y=e;n=new Qs(r,y).collection()}return n},remove:function(e){if(!Tt(e)){if(ze(e)){var n=e;e=this.$(n)}}return e.remove()}};function j2(t,e,n,r){var a=4,i=.001,o=1e-7,s=10,l=11,c=1/(l-1),u=typeof Float32Array<"u";if(arguments.length!==4)return!1;for(var d=0;d<4;++d)if(typeof arguments[d]!="number"||isNaN(arguments[d])||!isFinite(arguments[d]))return!1;t=Math.min(t,1),n=Math.min(n,1),t=Math.max(t,0),n=Math.max(n,0);var f=u?new Float32Array(l):new Array(l);function h($,M){return 1-3*M+3*$}function p($,M){return 3*M-6*$}function m($){return 3*$}function _($,M,b){return((h(M,b)*$+p(M,b))*$+m(M))*$}function g($,M,b){return 3*h(M,b)*$*$+2*p(M,b)*$+m(M)}function P($,M){for(var b=0;b<a;++b){var x=g(M,t,n);if(x===0)return M;var K=_(M,t,n)-$;M-=K/x}return M}function y(){for(var $=0;$<l;++$)f[$]=_($*c,t,n)}function C($,M,b){var x,K,X=0;do K=M+(b-M)/2,x=_(K,t,n)-$,x>0?b=K:M=K;while(Math.abs(x)>o&&++X<s);return K}function E($){for(var M=0,b=1,x=l-1;b!==x&&f[b]<=$;++b)M+=c;--b;var K=($-f[b])/(f[b+1]-f[b]),X=M+K*c,v=g(X,t,n);return v>=i?P($,X):v===0?X:C($,M,M+c)}var T=!1;function B(){T=!0,(t!==e||n!==r)&&y()}var D=function(M){return T||B(),t===e&&n===r?M:M===0?0:M===1?1:_(E(M),e,r)};D.getControlPoints=function(){return[{x:t,y:e},{x:n,y:r}]};var k="generateBezier("+[t,e,n,r]+")";return D.toString=function(){return k},D}var Y2=function(){function t(r){return-r.tension*r.x-r.friction*r.v}function e(r,a,i){var o={x:r.x+i.dx*a,v:r.v+i.dv*a,tension:r.tension,friction:r.friction};return{dx:o.v,dv:t(o)}}function n(r,a){var i={dx:r.v,dv:t(r)},o=e(r,a*.5,i),s=e(r,a*.5,o),l=e(r,a,s),c=1/6*(i.dx+2*(o.dx+s.dx)+l.dx),u=1/6*(i.dv+2*(o.dv+s.dv)+l.dv);return r.x=r.x+c*a,r.v=r.v+u*a,r}return function r(a,i,o){var s={x:-1,v:0,tension:null,friction:null},l=[0],c=0,u=1/1e4,d=16/1e3,f,h,p;for(a=parseFloat(a)||500,i=parseFloat(i)||20,o=o||null,s.tension=a,s.friction=i,f=o!==null,f?(c=r(a,i),h=c/o*d):h=d;p=n(p||s,h),l.push(1+p.x),c+=16,Math.abs(p.x)>u&&Math.abs(p.v)>u;);return f?function(m){return l[m*(l.length-1)|0]}:c}}(),bn=function(e,n,r,a){var i=j2(e,n,r,a);return function(o,s,l){return o+(s-o)*i(l)}},$s={linear:function(e,n,r){return e+(n-e)*r},ease:bn(.25,.1,.25,1),"ease-in":bn(.42,0,1,1),"ease-out":bn(0,0,.58,1),"ease-in-out":bn(.42,0,.58,1),"ease-in-sine":bn(.47,0,.745,.715),"ease-out-sine":bn(.39,.575,.565,1),"ease-in-out-sine":bn(.445,.05,.55,.95),"ease-in-quad":bn(.55,.085,.68,.53),"ease-out-quad":bn(.25,.46,.45,.94),"ease-in-out-quad":bn(.455,.03,.515,.955),"ease-in-cubic":bn(.55,.055,.675,.19),"ease-out-cubic":bn(.215,.61,.355,1),"ease-in-out-cubic":bn(.645,.045,.355,1),"ease-in-quart":bn(.895,.03,.685,.22),"ease-out-quart":bn(.165,.84,.44,1),"ease-in-out-quart":bn(.77,0,.175,1),"ease-in-quint":bn(.755,.05,.855,.06),"ease-out-quint":bn(.23,1,.32,1),"ease-in-out-quint":bn(.86,0,.07,1),"ease-in-expo":bn(.95,.05,.795,.035),"ease-out-expo":bn(.19,1,.22,1),"ease-in-out-expo":bn(1,0,0,1),"ease-in-circ":bn(.6,.04,.98,.335),"ease-out-circ":bn(.075,.82,.165,1),"ease-in-out-circ":bn(.785,.135,.15,.86),spring:function(e,n,r){if(r===0)return $s.linear;var a=Y2(e,n,r);return function(i,o,s){return i+(o-i)*a(s)}},"cubic-bezier":bn};function fd(t,e,n,r,a){if(r===1||e===n)return n;var i=a(e,n,r);return t==null||((t.roundValue||t.color)&&(i=Math.round(i)),t.min!==void 0&&(i=Math.max(i,t.min)),t.max!==void 0&&(i=Math.min(i,t.max))),i}function hd(t,e){return t.pfValue!=null||t.value!=null?t.pfValue!=null&&(e==null||e.type.units!=="%")?t.pfValue:t.value:t}function Ya(t,e,n,r,a){var i=a!=null?a.type:null;n<0?n=0:n>1&&(n=1);var o=hd(t,a),s=hd(e,a);if(Se(o)&&Se(s))return fd(i,o,s,n,r);if(_n(o)&&_n(s)){for(var l=[],c=0;c<s.length;c++){var u=o[c],d=s[c];if(u!=null&&d!=null){var f=fd(i,u,d,n,r);l.push(f)}else l.push(d)}return l}}function z2(t,e,n,r){var a=!r,i=t._private,o=e._private,s=o.easing,l=o.startTime,c=r?t:t.cy(),u=c.style();if(!o.easingImpl)if(s==null)o.easingImpl=$s.linear;else{var d;if(ze(s)){var f=u.parse("transition-timing-function",s);d=f.value}else d=s;var h,p;ze(d)?(h=d,p=[]):(h=d[1],p=d.slice(2).map(function(O){return+O})),p.length>0?(h==="spring"&&p.push(o.duration),o.easingImpl=$s[h].apply(null,p)):o.easingImpl=$s[h]}var m=o.easingImpl,_;if(o.duration===0?_=1:_=(n-l)/o.duration,o.applying&&(_=o.progress),_<0?_=0:_>1&&(_=1),o.delay==null){var g=o.startPosition,P=o.position;if(P&&a&&!t.locked()){var y={};Bi(g.x,P.x)&&(y.x=Ya(g.x,P.x,_,m)),Bi(g.y,P.y)&&(y.y=Ya(g.y,P.y,_,m)),t.position(y)}var C=o.startPan,E=o.pan,T=i.pan,B=E!=null&&r;B&&(Bi(C.x,E.x)&&(T.x=Ya(C.x,E.x,_,m)),Bi(C.y,E.y)&&(T.y=Ya(C.y,E.y,_,m)),t.emit("pan"));var D=o.startZoom,k=o.zoom,$=k!=null&&r;$&&(Bi(D,k)&&(i.zoom=Vi(i.minZoom,Ya(D,k,_,m),i.maxZoom)),t.emit("zoom")),(B||$)&&t.emit("viewport");var M=o.style;if(M&&M.length>0&&a){for(var b=0;b<M.length;b++){var x=M[b],K=x.name,X=x,v=o.startStyle[K],A=u.properties[v.name],w=Ya(v,X,_,m,A);u.overrideBypass(t,K,w)}t.emit("style")}}return o.progress=_,_}function Bi(t,e){return t==null||e==null?!1:Se(t)&&Se(e)?!0:!!(t&&e)}function V2(t,e,n,r){var a=e._private;a.started=!0,a.startTime=n-a.progress*a.duration}function pd(t,e){var n=e._private.aniEles,r=[];function a(u,d){var f=u._private,h=f.animation.current,p=f.animation.queue,m=!1;if(h.length===0){var _=p.shift();_&&h.push(_)}for(var g=function(T){for(var B=T.length-1;B>=0;B--){var D=T[B];D()}T.splice(0,T.length)},P=h.length-1;P>=0;P--){var y=h[P],C=y._private;if(C.stopped){h.splice(P,1),C.hooked=!1,C.playing=!1,C.started=!1,g(C.frames);continue}!C.playing&&!C.applying||(C.playing&&C.applying&&(C.applying=!1),C.started||V2(u,y,t),z2(u,y,t,d),C.applying&&(C.applying=!1),g(C.frames),C.step!=null&&C.step(t),y.completed()&&(h.splice(P,1),C.hooked=!1,C.playing=!1,C.started=!1,g(C.completes)),m=!0)}return!d&&h.length===0&&p.length===0&&r.push(u),m}for(var i=!1,o=0;o<n.length;o++){var s=n[o],l=a(s);i=i||l}var c=a(e,!0);(i||c)&&(n.length>0?e.notify("draw",n):e.notify("draw")),n.unmerge(r),e.emit("step")}var q2={animate:hn.animate(),animation:hn.animation(),animated:hn.animated(),clearQueue:hn.clearQueue(),delay:hn.delay(),delayAnimation:hn.delayAnimation(),stop:hn.stop(),addToAnimationPool:function(e){var n=this;n.styleEnabled()&&n._private.aniEles.merge(e)},stopAnimationLoop:function(){this._private.animationsRunning=!1},startAnimationLoop:function(){var e=this;if(e._private.animationsRunning=!0,!e.styleEnabled())return;function n(){e._private.animationsRunning&&Is(function(i){pd(i,e),n()})}var r=e.renderer();r&&r.beforeRender?r.beforeRender(function(i,o){pd(o,e)},r.beforeRenderPriorities.animations):n()}},H2={qualifierCompare:function(e,n){return e==null||n==null?e==null&&n==null:e.sameText(n)},eventMatches:function(e,n,r){var a=n.qualifier;return a!=null?e!==r.target&&no(r.target)&&a.matches(r.target):!0},addEventFields:function(e,n){n.cy=e,n.target=e},callbackContext:function(e,n,r){return n.qualifier!=null?r.target:e}},As=function(e){return ze(e)?new Ur(e):e},qf={createEmitter:function(){var e=this._private;return e.emitter||(e.emitter=new oc(H2,this)),this},emitter:function(){return this._private.emitter},on:function(e,n,r){return this.emitter().on(e,As(n),r),this},removeListener:function(e,n,r){return this.emitter().removeListener(e,As(n),r),this},removeAllListeners:function(){return this.emitter().removeAllListeners(),this},one:function(e,n,r){return this.emitter().one(e,As(n),r),this},once:function(e,n,r){return this.emitter().one(e,As(n),r),this},emit:function(e,n){return this.emitter().emit(e,n),this},emitAndNotify:function(e,n){return this.emit(e),this.notify(e,n),this}};hn.eventAliasesOn(qf);var pl={png:function(e){var n=this._private.renderer;return e=e||{},n.png(e)},jpg:function(e){var n=this._private.renderer;return e=e||{},e.bg=e.bg||"#fff",n.jpg(e)}};pl.jpeg=pl.jpg;var Ss={layout:function(e){var n=this;if(e==null){En("Layout options must be specified to make a layout");return}if(e.name==null){En("A `name` must be specified to make a layout");return}var r=e.name,a=n.extension("layout",r);if(a==null){En("No such layout `"+r+"` found.  Did you forget to import it and `cytoscape.use()` it?");return}var i;ze(e.eles)?i=n.$(e.eles):i=e.eles!=null?e.eles:n.$();var o=new a(Ve({},e,{cy:n,eles:i}));return o}};Ss.createLayout=Ss.makeLayout=Ss.layout;var G2={notify:function(e,n){var r=this._private;if(this.batching()){r.batchNotifications=r.batchNotifications||{};var a=r.batchNotifications[e]=r.batchNotifications[e]||this.collection();n!=null&&a.merge(n);return}if(r.notificationsEnabled){var i=this.renderer();this.destroyed()||!i||i.notify(e,n)}},notifications:function(e){var n=this._private;return e===void 0?n.notificationsEnabled:(n.notificationsEnabled=!!e,this)},noNotifications:function(e){this.notifications(!1),e(),this.notifications(!0)},batching:function(){return this._private.batchCount>0},startBatch:function(){var e=this._private;return e.batchCount==null&&(e.batchCount=0),e.batchCount===0&&(e.batchStyleEles=this.collection(),e.batchNotifications={}),e.batchCount++,this},endBatch:function(){var e=this._private;if(e.batchCount===0)return this;if(e.batchCount--,e.batchCount===0){e.batchStyleEles.updateStyle();var n=this.renderer();Object.keys(e.batchNotifications).forEach(function(r){var a=e.batchNotifications[r];a.empty()?n.notify(r):n.notify(r,a)})}return this},batch:function(e){return this.startBatch(),e(),this.endBatch(),this},batchData:function(e){var n=this;return this.batch(function(){for(var r=Object.keys(e),a=0;a<r.length;a++){var i=r[a],o=e[i],s=n.getElementById(i);s.data(o)}})}},J2=et({hideEdgesOnViewport:!1,textureOnViewport:!1,motionBlur:!1,motionBlurOpacity:.05,pixelRatio:void 0,desktopTapThreshold:4,touchTapThreshold:8,wheelSensitivity:1,debug:!1,showFps:!1,webgl:!1,webglDebug:!1,webglDebugShowAtlases:!1,webglTexSize:2048,webglTexRows:12,webglBatchSize:2048,webglTexPerBatch:14,webglBgColor:[255,255,255]}),ml={renderTo:function(e,n,r,a){var i=this._private.renderer;return i.renderTo(e,n,r,a),this},renderer:function(){return this._private.renderer},forceRender:function(){return this.notify("draw"),this},resize:function(){return this.invalidateSize(),this.emitAndNotify("resize"),this},initRenderer:function(e){var n=this,r=n.extension("renderer",e.name);if(r==null){En("Can not initialise: No such renderer `".concat(e.name,"` found. Did you forget to import it and `cytoscape.use()` it?"));return}e.wheelSensitivity!==void 0&&pn("You have set a custom wheel sensitivity.  This will make your app zoom unnaturally when using mainstream mice.  You should change this value from the default only if you can guarantee that all your users will use the same hardware and OS configuration as your current machine.");var a=J2(e);a.cy=n,n._private.renderer=new r(a),this.notify("init")},destroyRenderer:function(){var e=this;e.notify("destroy");var n=e.container();if(n)for(n._cyreg=null;n.childNodes.length>0;)n.removeChild(n.childNodes[0]);e._private.renderer=null,e.mutableElements().forEach(function(r){var a=r._private;a.rscratch={},a.rstyle={},a.animation.current=[],a.animation.queue=[]})},onRender:function(e){return this.on("render",e)},offRender:function(e){return this.off("render",e)}};ml.invalidateDimensions=ml.resize;var Ws={collection:function(e,n){return ze(e)?this.$(e):Tt(e)?e.collection():_n(e)?(n||(n={}),new at(this,e,n.unique,n.removed)):new at(this)},nodes:function(e){var n=this.$(function(r){return r.isNode()});return e?n.filter(e):n},edges:function(e){var n=this.$(function(r){return r.isEdge()});return e?n.filter(e):n},$:function(e){var n=this._private.elements;return e?n.filter(e):n.spawnSelf()},mutableElements:function(){return this._private.elements}};Ws.elements=Ws.filter=Ws.$;var ht={},Ri="t",Z2="f";ht.apply=function(t){for(var e=this,n=e._private,r=n.cy,a=r.collection(),i=0;i<t.length;i++){var o=t[i],s=e.getContextMeta(o);if(!s.empty){var l=e.getContextStyle(s),c=e.applyContextStyle(s,l,o);o._private.appliedInitStyle?e.updateTransitions(o,c.diffProps):o._private.appliedInitStyle=!0;var u=e.updateStyleHints(o);u&&a.push(o)}}return a};ht.getPropertiesDiff=function(t,e){var n=this,r=n._private.propDiffs=n._private.propDiffs||{},a=t+"-"+e,i=r[a];if(i)return i;for(var o=[],s={},l=0;l<n.length;l++){var c=n[l],u=t[l]===Ri,d=e[l]===Ri,f=u!==d,h=c.mappedProperties.length>0;if(f||d&&h){var p=void 0;f&&h||f?p=c.properties:h&&(p=c.mappedProperties);for(var m=0;m<p.length;m++){for(var _=p[m],g=_.name,P=!1,y=l+1;y<n.length;y++){var C=n[y],E=e[y]===Ri;if(E&&(P=C.properties[_.name]!=null,P))break}!s[g]&&!P&&(s[g]=!0,o.push(g))}}}return r[a]=o,o};ht.getContextMeta=function(t){for(var e=this,n="",r,a=t._private.styleCxtKey||"",i=0;i<e.length;i++){var o=e[i],s=o.selector&&o.selector.matches(t);s?n+=Ri:n+=Z2}return r=e.getPropertiesDiff(a,n),t._private.styleCxtKey=n,{key:n,diffPropNames:r,empty:r.length===0}};ht.getContextStyle=function(t){var e=t.key,n=this,r=this._private.contextStyles=this._private.contextStyles||{};if(r[e])return r[e];for(var a={_private:{key:e}},i=0;i<n.length;i++){var o=n[i],s=e[i]===Ri;if(s)for(var l=0;l<o.properties.length;l++){var c=o.properties[l];a[c.name]=c}}return r[e]=a,a};ht.applyContextStyle=function(t,e,n){for(var r=this,a=t.diffPropNames,i={},o=r.types,s=0;s<a.length;s++){var l=a[s],c=e[l],u=n.pstyle(l);if(!c)if(u)u.bypass?c={name:l,deleteBypassed:!0}:c={name:l,delete:!0};else continue;if(u!==c){if(c.mapped===o.fn&&u!=null&&u.mapping!=null&&u.mapping.value===c.value){var d=u.mapping,f=d.fnValue=c.value(n);if(f===d.prevFnValue)continue}var h=i[l]={prev:u};r.applyParsedProperty(n,c),h.next=n.pstyle(l),h.next&&h.next.bypass&&(h.next=h.next.bypassed)}}return{diffProps:i}};ht.updateStyleHints=function(t){var e=t._private,n=this,r=n.propertyGroupNames,a=n.propertyGroupKeys,i=function(L,z,ne){return n.getPropertiesHash(L,z,ne)},o=e.styleKey;if(t.removed())return!1;var s=e.group==="nodes",l=t._private.style;r=Object.keys(l);for(var c=0;c<a.length;c++){var u=a[c];e.styleKeys[u]=[qa,Si]}for(var d=function(L,z){return e.styleKeys[z][0]=ji(L,e.styleKeys[z][0])},f=function(L,z){return e.styleKeys[z][1]=Yi(L,e.styleKeys[z][1])},h=function(L,z){d(L,z),f(L,z)},p=function(L,z){for(var ne=0;ne<L.length;ne++){var H=L.charCodeAt(ne);d(H,z),f(H,z)}},m=2e9,_=function(L){return-128<L&&L<128&&Math.floor(L)!==L?m-(L*1024|0):L},g=0;g<r.length;g++){var P=r[g],y=l[P];if(y!=null){var C=this.properties[P],E=C.type,T=C.groupKey,B=void 0;C.hashOverride!=null?B=C.hashOverride(t,y):y.pfValue!=null&&(B=y.pfValue);var D=C.enums==null?y.value:null,k=B!=null,$=D!=null,M=k||$,b=y.units;if(E.number&&M&&!E.multiple){var x=k?B:D;h(_(x),T),!k&&b!=null&&p(b,T)}else p(y.strValue,T)}}for(var K=[qa,Si],X=0;X<a.length;X++){var v=a[X],A=e.styleKeys[v];K[0]=ji(A[0],K[0]),K[1]=Yi(A[1],K[1])}e.styleKey=rg(K[0],K[1]);var w=e.styleKeys;e.labelDimsKey=Dr(w.labelDimensions);var O=i(t,["label"],w.labelDimensions);if(e.labelKey=Dr(O),e.labelStyleKey=Dr(gs(w.commonLabel,O)),!s){var N=i(t,["source-label"],w.labelDimensions);e.sourceLabelKey=Dr(N),e.sourceLabelStyleKey=Dr(gs(w.commonLabel,N));var S=i(t,["target-label"],w.labelDimensions);e.targetLabelKey=Dr(S),e.targetLabelStyleKey=Dr(gs(w.commonLabel,S))}if(s){var I=e.styleKeys,q=I.nodeBody,Y=I.nodeBorder,ee=I.nodeOutline,Q=I.backgroundImage,U=I.compound,J=I.pie,F=[q,Y,ee,Q,U,J].filter(function(W){return W!=null}).reduce(gs,[qa,Si]);e.nodeKey=Dr(F),e.hasPie=J!=null&&J[0]!==qa&&J[1]!==Si}return o!==e.styleKey};ht.clearStyleHints=function(t){var e=t._private;e.styleCxtKey="",e.styleKeys={},e.styleKey=null,e.labelKey=null,e.labelStyleKey=null,e.sourceLabelKey=null,e.sourceLabelStyleKey=null,e.targetLabelKey=null,e.targetLabelStyleKey=null,e.nodeKey=null,e.hasPie=null};ht.applyParsedProperty=function(t,e){var n=this,r=e,a=t._private.style,i,o=n.types,s=n.properties[r.name].type,l=r.bypass,c=a[r.name],u=c&&c.bypass,d=t._private,f="mapping",h=function(q){return q==null?null:q.pfValue!=null?q.pfValue:q.value},p=function(){var q=h(c),Y=h(r);n.checkTriggers(t,r.name,q,Y)};if(e.name==="curve-style"&&t.isEdge()&&(e.value!=="bezier"&&t.isLoop()||e.value==="haystack"&&(t.source().isParent()||t.target().isParent()))&&(r=e=this.parse(e.name,"bezier",l)),r.delete)return a[r.name]=void 0,p(),!0;if(r.deleteBypassed)return c?c.bypass?(c.bypassed=void 0,p(),!0):!1:(p(),!0);if(r.deleteBypass)return c?c.bypass?(a[r.name]=c.bypassed,p(),!0):!1:(p(),!0);var m=function(){pn("Do not assign mappings to elements without corresponding data (i.e. ele `"+t.id()+"` has no mapping for property `"+r.name+"` with data field `"+r.field+"`); try a `["+r.field+"]` selector to limit scope to elements with `"+r.field+"` defined")};switch(r.mapped){case o.mapData:{for(var _=r.field.split("."),g=d.data,P=0;P<_.length&&g;P++){var y=_[P];g=g[y]}if(g==null)return m(),!1;var C;if(Se(g)){var E=r.fieldMax-r.fieldMin;E===0?C=0:C=(g-r.fieldMin)/E}else return pn("Do not use continuous mappers without specifying numeric data (i.e. `"+r.field+": "+g+"` for `"+t.id()+"` is non-numeric)"),!1;if(C<0?C=0:C>1&&(C=1),s.color){var T=r.valueMin[0],B=r.valueMax[0],D=r.valueMin[1],k=r.valueMax[1],$=r.valueMin[2],M=r.valueMax[2],b=r.valueMin[3]==null?1:r.valueMin[3],x=r.valueMax[3]==null?1:r.valueMax[3],K=[Math.round(T+(B-T)*C),Math.round(D+(k-D)*C),Math.round($+(M-$)*C),Math.round(b+(x-b)*C)];i={bypass:r.bypass,name:r.name,value:K,strValue:"rgb("+K[0]+", "+K[1]+", "+K[2]+")"}}else if(s.number){var X=r.valueMin+(r.valueMax-r.valueMin)*C;i=this.parse(r.name,X,r.bypass,f)}else return!1;if(!i)return m(),!1;i.mapping=r,r=i;break}case o.data:{for(var v=r.field.split("."),A=d.data,w=0;w<v.length&&A;w++){var O=v[w];A=A[O]}if(A!=null&&(i=this.parse(r.name,A,r.bypass,f)),!i)return m(),!1;i.mapping=r,r=i;break}case o.fn:{var N=r.value,S=r.fnValue!=null?r.fnValue:N(t);if(r.prevFnValue=S,S==null)return pn("Custom function mappers may not return null (i.e. `"+r.name+"` for ele `"+t.id()+"` is null)"),!1;if(i=this.parse(r.name,S,r.bypass,f),!i)return pn("Custom function mappers may not return invalid values for the property type (i.e. `"+r.name+"` for ele `"+t.id()+"` is invalid)"),!1;i.mapping=tr(r),r=i;break}case void 0:break;default:return!1}return l?(u?r.bypassed=c.bypassed:r.bypassed=c,a[r.name]=r):u?c.bypassed=r:a[r.name]=r,p(),!0};ht.cleanElements=function(t,e){for(var n=0;n<t.length;n++){var r=t[n];if(this.clearStyleHints(r),r.dirtyCompoundBoundsCache(),r.dirtyBoundingBoxCache(),!e)r._private.style={};else for(var a=r._private.style,i=Object.keys(a),o=0;o<i.length;o++){var s=i[o],l=a[s];l!=null&&(l.bypass?l.bypassed=null:a[s]=null)}}};ht.update=function(){var t=this._private.cy,e=t.mutableElements();e.updateStyle()};ht.updateTransitions=function(t,e){var n=this,r=t._private,a=t.pstyle("transition-property").value,i=t.pstyle("transition-duration").pfValue,o=t.pstyle("transition-delay").pfValue;if(a.length>0&&i>0){for(var s={},l=!1,c=0;c<a.length;c++){var u=a[c],d=t.pstyle(u),f=e[u];if(f){var h=f.prev,p=h,m=f.next!=null?f.next:d,_=!1,g=void 0,P=1e-6;p&&(Se(p.pfValue)&&Se(m.pfValue)?(_=m.pfValue-p.pfValue,g=p.pfValue+P*_):Se(p.value)&&Se(m.value)?(_=m.value-p.value,g=p.value+P*_):_n(p.value)&&_n(m.value)&&(_=p.value[0]!==m.value[0]||p.value[1]!==m.value[1]||p.value[2]!==m.value[2],g=p.strValue),_&&(s[u]=m.strValue,this.applyBypass(t,u,g),l=!0))}}if(!l)return;r.transitioning=!0,new oi(function(y){o>0?t.delayAnimation(o).play().promise().then(y):y()}).then(function(){return t.animation({style:s,duration:i,easing:t.pstyle("transition-timing-function").value,queue:!1}).play().promise()}).then(function(){n.removeBypasses(t,a),t.emitAndNotify("style"),r.transitioning=!1})}else r.transitioning&&(this.removeBypasses(t,a),t.emitAndNotify("style"),r.transitioning=!1)};ht.checkTrigger=function(t,e,n,r,a,i){var o=this.properties[e],s=a(o);s!=null&&s(n,r)&&i(o)};ht.checkZOrderTrigger=function(t,e,n,r){var a=this;this.checkTrigger(t,e,n,r,function(i){return i.triggersZOrder},function(){a._private.cy.notify("zorder",t)})};ht.checkBoundsTrigger=function(t,e,n,r){this.checkTrigger(t,e,n,r,function(a){return a.triggersBounds},function(a){t.dirtyCompoundBoundsCache(),t.dirtyBoundingBoxCache(),a.triggersBoundsOfParallelBeziers&&e==="curve-style"&&(n==="bezier"||r==="bezier")&&t.parallelEdges().forEach(function(i){i.dirtyBoundingBoxCache()}),a.triggersBoundsOfConnectedEdges&&e==="display"&&(n==="none"||r==="none")&&t.connectedEdges().forEach(function(i){i.dirtyBoundingBoxCache()})})};ht.checkTriggers=function(t,e,n,r){t.dirtyStyleCache(),this.checkZOrderTrigger(t,e,n,r),this.checkBoundsTrigger(t,e,n,r)};var oo={};oo.applyBypass=function(t,e,n,r){var a=this,i=[],o=!0;if(e==="*"||e==="**"){if(n!==void 0)for(var s=0;s<a.properties.length;s++){var l=a.properties[s],c=l.name,u=this.parse(c,n,!0);u&&i.push(u)}}else if(ze(e)){var d=this.parse(e,n,!0);d&&i.push(d)}else if(un(e)){var f=e;r=n;for(var h=Object.keys(f),p=0;p<h.length;p++){var m=h[p],_=f[m];if(_===void 0&&(_=f[Js(m)]),_!==void 0){var g=this.parse(m,_,!0);g&&i.push(g)}}}else return!1;if(i.length===0)return!1;for(var P=!1,y=0;y<t.length;y++){for(var C=t[y],E={},T=void 0,B=0;B<i.length;B++){var D=i[B];if(r){var k=C.pstyle(D.name);T=E[D.name]={prev:k}}P=this.applyParsedProperty(C,tr(D))||P,r&&(T.next=C.pstyle(D.name))}P&&this.updateStyleHints(C),r&&this.updateTransitions(C,E,o)}return P};oo.overrideBypass=function(t,e,n){e=Cl(e);for(var r=0;r<t.length;r++){var a=t[r],i=a._private.style[e],o=this.properties[e].type,s=o.color,l=o.mutiple,c=i?i.pfValue!=null?i.pfValue:i.value:null;!i||!i.bypass?this.applyBypass(a,e,n):(i.value=n,i.pfValue!=null&&(i.pfValue=n),s?i.strValue="rgb("+n.join(",")+")":l?i.strValue=n.join(" "):i.strValue=""+n,this.updateStyleHints(a)),this.checkTriggers(a,e,c,n)}};oo.removeAllBypasses=function(t,e){return this.removeBypasses(t,this.propertyNames,e)};oo.removeBypasses=function(t,e,n){for(var r=!0,a=0;a<t.length;a++){for(var i=t[a],o={},s=0;s<e.length;s++){var l=e[s],c=this.properties[l],u=i.pstyle(c.name);if(!(!u||!u.bypass)){var d="",f=this.parse(l,d,!0),h=o[c.name]={prev:u};this.applyParsedProperty(i,f),h.next=i.pstyle(c.name)}}this.updateStyleHints(i),n&&this.updateTransitions(i,o,r)}};var Il={};Il.getEmSizeInPixels=function(){var t=this.containerCss("font-size");return t!=null?parseFloat(t):1};Il.containerCss=function(t){var e=this._private.cy,n=e.container(),r=e.window();if(r&&n&&r.getComputedStyle)return r.getComputedStyle(n).getPropertyValue(t)};var ar={};ar.getRenderedStyle=function(t,e){return e?this.getStylePropertyValue(t,e,!0):this.getRawStyle(t,!0)};ar.getRawStyle=function(t,e){var n=this;if(t=t[0],t){for(var r={},a=0;a<n.properties.length;a++){var i=n.properties[a],o=n.getStylePropertyValue(t,i.name,e);o!=null&&(r[i.name]=o,r[Js(i.name)]=o)}return r}};ar.getIndexedStyle=function(t,e,n,r){var a=t.pstyle(e)[n][r];return a??t.cy().style().getDefaultProperty(e)[n][0]};ar.getStylePropertyValue=function(t,e,n){var r=this;if(t=t[0],t){var a=r.properties[e];a.alias&&(a=a.pointsTo);var i=a.type,o=t.pstyle(a.name);if(o){var s=o.value,l=o.units,c=o.strValue;if(n&&i.number&&s!=null&&Se(s)){var u=t.cy().zoom(),d=function(_){return _*u},f=function(_,g){return d(_)+g},h=_n(s),p=h?l.every(function(m){return m!=null}):l!=null;return p?h?s.map(function(m,_){return f(m,l[_])}).join(" "):f(s,l):h?s.map(function(m){return ze(m)?m:""+d(m)}).join(" "):""+d(s)}else if(c!=null)return c}return null}};ar.getAnimationStartStyle=function(t,e){for(var n={},r=0;r<e.length;r++){var a=e[r],i=a.name,o=t.pstyle(i);o!==void 0&&(un(o)?o=this.parse(i,o.strValue):o=this.parse(i,o)),o&&(n[i]=o)}return n};ar.getPropsList=function(t){var e=this,n=[],r=t,a=e.properties;if(r)for(var i=Object.keys(r),o=0;o<i.length;o++){var s=i[o],l=r[s],c=a[s]||a[Cl(s)],u=this.parse(c.name,l);u&&n.push(u)}return n};ar.getNonDefaultPropertiesHash=function(t,e,n){var r=n.slice(),a,i,o,s,l,c;for(l=0;l<e.length;l++)if(a=e[l],i=t.pstyle(a,!1),i!=null)if(i.pfValue!=null)r[0]=ji(s,r[0]),r[1]=Yi(s,r[1]);else for(o=i.strValue,c=0;c<o.length;c++)s=o.charCodeAt(c),r[0]=ji(s,r[0]),r[1]=Yi(s,r[1]);return r};ar.getPropertiesHash=ar.getNonDefaultPropertiesHash;var lc={};lc.appendFromJson=function(t){for(var e=this,n=0;n<t.length;n++){var r=t[n],a=r.selector,i=r.style||r.css,o=Object.keys(i);e.selector(a);for(var s=0;s<o.length;s++){var l=o[s],c=i[l];e.css(l,c)}}return e};lc.fromJson=function(t){var e=this;return e.resetToDefault(),e.appendFromJson(t),e};lc.json=function(){for(var t=[],e=this.defaultLength;e<this.length;e++){for(var n=this[e],r=n.selector,a=n.properties,i={},o=0;o<a.length;o++){var s=a[o];i[s.name]=s.strValue}t.push({selector:r?r.toString():"core",style:i})}return t};var Ll={};Ll.appendFromString=function(t){var e=this,n=this,r=""+t,a,i,o;r=r.replace(/[/][*](\s|.)+?[*][/]/g,"");function s(){r.length>a.length?r=r.substr(a.length):r=""}function l(){i.length>o.length?i=i.substr(o.length):i=""}for(;;){var c=r.match(/^\s*$/);if(c)break;var u=r.match(/^\s*((?:.|\s)+?)\s*\{((?:.|\s)+?)\}/);if(!u){pn("Halting stylesheet parsing: String stylesheet contains more to parse but no selector and block found in: "+r);break}a=u[0];var d=u[1];if(d!=="core"){var f=new Ur(d);if(f.invalid){pn("Skipping parsing of block: Invalid selector found in string stylesheet: "+d),s();continue}}var h=u[2],p=!1;i=h;for(var m=[];;){var _=i.match(/^\s*$/);if(_)break;var g=i.match(/^\s*(.+?)\s*:\s*(.+?)(?:\s*;|\s*$)/);if(!g){pn("Skipping parsing of block: Invalid formatting of style property and value definitions found in:"+h),p=!0;break}o=g[0];var P=g[1],y=g[2],C=e.properties[P];if(!C){pn("Skipping property: Invalid property name in: "+o),l();continue}var E=n.parse(P,y);if(!E){pn("Skipping property: Invalid property definition in: "+o),l();continue}m.push({name:P,val:y}),l()}if(p){s();break}n.selector(d);for(var T=0;T<m.length;T++){var B=m[T];n.css(B.name,B.val)}s()}return n};Ll.fromString=function(t){var e=this;return e.resetToDefault(),e.appendFromString(t),e};var tt={};(function(){var t=Ln,e=s1,n=l1,r=u1,a=d1,i=function(F){return"^"+F+"\\s*\\(\\s*([\\w\\.]+)\\s*\\)$"},o=function(F){var W=t+"|\\w+|"+e+"|"+n+"|"+r+"|"+a;return"^"+F+"\\s*\\(([\\w\\.]+)\\s*\\,\\s*("+t+")\\s*\\,\\s*("+t+")\\s*,\\s*("+W+")\\s*\\,\\s*("+W+")\\)$"},s=[`^url\\s*\\(\\s*['"]?(.+?)['"]?\\s*\\)$`,"^(none)$","^(.+)$"];tt.types={time:{number:!0,min:0,units:"s|ms",implicitUnits:"ms"},percent:{number:!0,min:0,max:100,units:"%",implicitUnits:"%"},percentages:{number:!0,min:0,max:100,units:"%",implicitUnits:"%",multiple:!0},zeroOneNumber:{number:!0,min:0,max:1,unitless:!0},zeroOneNumbers:{number:!0,min:0,max:1,unitless:!0,multiple:!0},nOneOneNumber:{number:!0,min:-1,max:1,unitless:!0},nonNegativeInt:{number:!0,min:0,integer:!0,unitless:!0},nonNegativeNumber:{number:!0,min:0,unitless:!0},position:{enums:["parent","origin"]},nodeSize:{number:!0,min:0,enums:["label"]},number:{number:!0,unitless:!0},numbers:{number:!0,unitless:!0,multiple:!0},positiveNumber:{number:!0,unitless:!0,min:0,strictMin:!0},size:{number:!0,min:0},bidirectionalSize:{number:!0},bidirectionalSizeMaybePercent:{number:!0,allowPercent:!0},bidirectionalSizes:{number:!0,multiple:!0},sizeMaybePercent:{number:!0,min:0,allowPercent:!0},axisDirection:{enums:["horizontal","leftward","rightward","vertical","upward","downward","auto"]},paddingRelativeTo:{enums:["width","height","average","min","max"]},bgWH:{number:!0,min:0,allowPercent:!0,enums:["auto"],multiple:!0},bgPos:{number:!0,allowPercent:!0,multiple:!0},bgRelativeTo:{enums:["inner","include-padding"],multiple:!0},bgRepeat:{enums:["repeat","repeat-x","repeat-y","no-repeat"],multiple:!0},bgFit:{enums:["none","contain","cover"],multiple:!0},bgCrossOrigin:{enums:["anonymous","use-credentials","null"],multiple:!0},bgClip:{enums:["none","node"],multiple:!0},bgContainment:{enums:["inside","over"],multiple:!0},color:{color:!0},colors:{color:!0,multiple:!0},fill:{enums:["solid","linear-gradient","radial-gradient"]},bool:{enums:["yes","no"]},bools:{enums:["yes","no"],multiple:!0},lineStyle:{enums:["solid","dotted","dashed"]},lineCap:{enums:["butt","round","square"]},linePosition:{enums:["center","inside","outside"]},lineJoin:{enums:["round","bevel","miter"]},borderStyle:{enums:["solid","dotted","dashed","double"]},curveStyle:{enums:["bezier","unbundled-bezier","haystack","segments","straight","straight-triangle","taxi","round-segments","round-taxi"]},radiusType:{enums:["arc-radius","influence-radius"],multiple:!0},fontFamily:{regex:'^([\\w- \\"]+(?:\\s*,\\s*[\\w- \\"]+)*)$'},fontStyle:{enums:["italic","normal","oblique"]},fontWeight:{enums:["normal","bold","bolder","lighter","100","200","300","400","500","600","800","900",100,200,300,400,500,600,700,800,900]},textDecoration:{enums:["none","underline","overline","line-through"]},textTransform:{enums:["none","uppercase","lowercase"]},textWrap:{enums:["none","wrap","ellipsis"]},textOverflowWrap:{enums:["whitespace","anywhere"]},textBackgroundShape:{enums:["rectangle","roundrectangle","round-rectangle"]},nodeShape:{enums:["rectangle","roundrectangle","round-rectangle","cutrectangle","cut-rectangle","bottomroundrectangle","bottom-round-rectangle","barrel","ellipse","triangle","round-triangle","square","pentagon","round-pentagon","hexagon","round-hexagon","concavehexagon","concave-hexagon","heptagon","round-heptagon","octagon","round-octagon","tag","round-tag","star","diamond","round-diamond","vee","rhomboid","right-rhomboid","polygon"]},overlayShape:{enums:["roundrectangle","round-rectangle","ellipse"]},cornerRadius:{number:!0,min:0,units:"px|em",implicitUnits:"px",enums:["auto"]},compoundIncludeLabels:{enums:["include","exclude"]},arrowShape:{enums:["tee","triangle","triangle-tee","circle-triangle","triangle-cross","triangle-backcurve","vee","square","circle","diamond","chevron","none"]},arrowFill:{enums:["filled","hollow"]},arrowWidth:{number:!0,units:"%|px|em",implicitUnits:"px",enums:["match-line"]},display:{enums:["element","none"]},visibility:{enums:["hidden","visible"]},zCompoundDepth:{enums:["bottom","orphan","auto","top"]},zIndexCompare:{enums:["auto","manual"]},valign:{enums:["top","center","bottom"]},halign:{enums:["left","center","right"]},justification:{enums:["left","center","right","auto"]},text:{string:!0},data:{mapping:!0,regex:i("data")},layoutData:{mapping:!0,regex:i("layoutData")},scratch:{mapping:!0,regex:i("scratch")},mapData:{mapping:!0,regex:o("mapData")},mapLayoutData:{mapping:!0,regex:o("mapLayoutData")},mapScratch:{mapping:!0,regex:o("mapScratch")},fn:{mapping:!0,fn:!0},url:{regexes:s,singleRegexMatchValue:!0},urls:{regexes:s,singleRegexMatchValue:!0,multiple:!0},propList:{propList:!0},angle:{number:!0,units:"deg|rad",implicitUnits:"rad"},textRotation:{number:!0,units:"deg|rad",implicitUnits:"rad",enums:["none","autorotate"]},polygonPointList:{number:!0,multiple:!0,evenMultiple:!0,min:-1,max:1,unitless:!0},edgeDistances:{enums:["intersection","node-position","endpoints"]},edgeEndpoint:{number:!0,multiple:!0,units:"%|px|em|deg|rad",implicitUnits:"px",enums:["inside-to-node","outside-to-node","outside-to-node-or-label","outside-to-line","outside-to-line-or-label"],singleEnum:!0,validate:function(F,W){switch(F.length){case 2:return W[0]!=="deg"&&W[0]!=="rad"&&W[1]!=="deg"&&W[1]!=="rad";case 1:return ze(F[0])||W[0]==="deg"||W[0]==="rad";default:return!1}}},easing:{regexes:["^(spring)\\s*\\(\\s*("+t+")\\s*,\\s*("+t+")\\s*\\)$","^(cubic-bezier)\\s*\\(\\s*("+t+")\\s*,\\s*("+t+")\\s*,\\s*("+t+")\\s*,\\s*("+t+")\\s*\\)$"],enums:["linear","ease","ease-in","ease-out","ease-in-out","ease-in-sine","ease-out-sine","ease-in-out-sine","ease-in-quad","ease-out-quad","ease-in-out-quad","ease-in-cubic","ease-out-cubic","ease-in-out-cubic","ease-in-quart","ease-out-quart","ease-in-out-quart","ease-in-quint","ease-out-quint","ease-in-out-quint","ease-in-expo","ease-out-expo","ease-in-out-expo","ease-in-circ","ease-out-circ","ease-in-out-circ"]},gradientDirection:{enums:["to-bottom","to-top","to-left","to-right","to-bottom-right","to-bottom-left","to-top-right","to-top-left","to-right-bottom","to-left-bottom","to-right-top","to-left-top"]},boundsExpansion:{number:!0,multiple:!0,min:0,validate:function(F){var W=F.length;return W===1||W===2||W===4}}};var l={zeroNonZero:function(F,W){return(F==null||W==null)&&F!==W||F==0&&W!=0?!0:F!=0&&W==0},any:function(F,W){return F!=W},emptyNonEmpty:function(F,W){var L=Rr(F),z=Rr(W);return L&&!z||!L&&z}},c=tt.types,u=[{name:"label",type:c.text,triggersBounds:l.any,triggersZOrder:l.emptyNonEmpty},{name:"text-rotation",type:c.textRotation,triggersBounds:l.any},{name:"text-margin-x",type:c.bidirectionalSize,triggersBounds:l.any},{name:"text-margin-y",type:c.bidirectionalSize,triggersBounds:l.any}],d=[{name:"source-label",type:c.text,triggersBounds:l.any},{name:"source-text-rotation",type:c.textRotation,triggersBounds:l.any},{name:"source-text-margin-x",type:c.bidirectionalSize,triggersBounds:l.any},{name:"source-text-margin-y",type:c.bidirectionalSize,triggersBounds:l.any},{name:"source-text-offset",type:c.size,triggersBounds:l.any}],f=[{name:"target-label",type:c.text,triggersBounds:l.any},{name:"target-text-rotation",type:c.textRotation,triggersBounds:l.any},{name:"target-text-margin-x",type:c.bidirectionalSize,triggersBounds:l.any},{name:"target-text-margin-y",type:c.bidirectionalSize,triggersBounds:l.any},{name:"target-text-offset",type:c.size,triggersBounds:l.any}],h=[{name:"font-family",type:c.fontFamily,triggersBounds:l.any},{name:"font-style",type:c.fontStyle,triggersBounds:l.any},{name:"font-weight",type:c.fontWeight,triggersBounds:l.any},{name:"font-size",type:c.size,triggersBounds:l.any},{name:"text-transform",type:c.textTransform,triggersBounds:l.any},{name:"text-wrap",type:c.textWrap,triggersBounds:l.any},{name:"text-overflow-wrap",type:c.textOverflowWrap,triggersBounds:l.any},{name:"text-max-width",type:c.size,triggersBounds:l.any},{name:"text-outline-width",type:c.size,triggersBounds:l.any},{name:"line-height",type:c.positiveNumber,triggersBounds:l.any}],p=[{name:"text-valign",type:c.valign,triggersBounds:l.any},{name:"text-halign",type:c.halign,triggersBounds:l.any},{name:"color",type:c.color},{name:"text-outline-color",type:c.color},{name:"text-outline-opacity",type:c.zeroOneNumber},{name:"text-background-color",type:c.color},{name:"text-background-opacity",type:c.zeroOneNumber},{name:"text-background-padding",type:c.size,triggersBounds:l.any},{name:"text-border-opacity",type:c.zeroOneNumber},{name:"text-border-color",type:c.color},{name:"text-border-width",type:c.size,triggersBounds:l.any},{name:"text-border-style",type:c.borderStyle,triggersBounds:l.any},{name:"text-background-shape",type:c.textBackgroundShape,triggersBounds:l.any},{name:"text-justification",type:c.justification}],m=[{name:"events",type:c.bool,triggersZOrder:l.any},{name:"text-events",type:c.bool,triggersZOrder:l.any}],_=[{name:"display",type:c.display,triggersZOrder:l.any,triggersBounds:l.any,triggersBoundsOfConnectedEdges:!0},{name:"visibility",type:c.visibility,triggersZOrder:l.any},{name:"opacity",type:c.zeroOneNumber,triggersZOrder:l.zeroNonZero},{name:"text-opacity",type:c.zeroOneNumber},{name:"min-zoomed-font-size",type:c.size},{name:"z-compound-depth",type:c.zCompoundDepth,triggersZOrder:l.any},{name:"z-index-compare",type:c.zIndexCompare,triggersZOrder:l.any},{name:"z-index",type:c.number,triggersZOrder:l.any}],g=[{name:"overlay-padding",type:c.size,triggersBounds:l.any},{name:"overlay-color",type:c.color},{name:"overlay-opacity",type:c.zeroOneNumber,triggersBounds:l.zeroNonZero},{name:"overlay-shape",type:c.overlayShape,triggersBounds:l.any},{name:"overlay-corner-radius",type:c.cornerRadius}],P=[{name:"underlay-padding",type:c.size,triggersBounds:l.any},{name:"underlay-color",type:c.color},{name:"underlay-opacity",type:c.zeroOneNumber,triggersBounds:l.zeroNonZero},{name:"underlay-shape",type:c.overlayShape,triggersBounds:l.any},{name:"underlay-corner-radius",type:c.cornerRadius}],y=[{name:"transition-property",type:c.propList},{name:"transition-duration",type:c.time},{name:"transition-delay",type:c.time},{name:"transition-timing-function",type:c.easing}],C=function(F,W){return W.value==="label"?-F.poolIndex():W.pfValue},E=[{name:"height",type:c.nodeSize,triggersBounds:l.any,hashOverride:C},{name:"width",type:c.nodeSize,triggersBounds:l.any,hashOverride:C},{name:"shape",type:c.nodeShape,triggersBounds:l.any},{name:"shape-polygon-points",type:c.polygonPointList,triggersBounds:l.any},{name:"corner-radius",type:c.cornerRadius},{name:"background-color",type:c.color},{name:"background-fill",type:c.fill},{name:"background-opacity",type:c.zeroOneNumber},{name:"background-blacken",type:c.nOneOneNumber},{name:"background-gradient-stop-colors",type:c.colors},{name:"background-gradient-stop-positions",type:c.percentages},{name:"background-gradient-direction",type:c.gradientDirection},{name:"padding",type:c.sizeMaybePercent,triggersBounds:l.any},{name:"padding-relative-to",type:c.paddingRelativeTo,triggersBounds:l.any},{name:"bounds-expansion",type:c.boundsExpansion,triggersBounds:l.any}],T=[{name:"border-color",type:c.color},{name:"border-opacity",type:c.zeroOneNumber},{name:"border-width",type:c.size,triggersBounds:l.any},{name:"border-style",type:c.borderStyle},{name:"border-cap",type:c.lineCap},{name:"border-join",type:c.lineJoin},{name:"border-dash-pattern",type:c.numbers},{name:"border-dash-offset",type:c.number},{name:"border-position",type:c.linePosition}],B=[{name:"outline-color",type:c.color},{name:"outline-opacity",type:c.zeroOneNumber},{name:"outline-width",type:c.size,triggersBounds:l.any},{name:"outline-style",type:c.borderStyle},{name:"outline-offset",type:c.size,triggersBounds:l.any}],D=[{name:"background-image",type:c.urls},{name:"background-image-crossorigin",type:c.bgCrossOrigin},{name:"background-image-opacity",type:c.zeroOneNumbers},{name:"background-image-containment",type:c.bgContainment},{name:"background-image-smoothing",type:c.bools},{name:"background-position-x",type:c.bgPos},{name:"background-position-y",type:c.bgPos},{name:"background-width-relative-to",type:c.bgRelativeTo},{name:"background-height-relative-to",type:c.bgRelativeTo},{name:"background-repeat",type:c.bgRepeat},{name:"background-fit",type:c.bgFit},{name:"background-clip",type:c.bgClip},{name:"background-width",type:c.bgWH},{name:"background-height",type:c.bgWH},{name:"background-offset-x",type:c.bgPos},{name:"background-offset-y",type:c.bgPos}],k=[{name:"position",type:c.position,triggersBounds:l.any},{name:"compound-sizing-wrt-labels",type:c.compoundIncludeLabels,triggersBounds:l.any},{name:"min-width",type:c.size,triggersBounds:l.any},{name:"min-width-bias-left",type:c.sizeMaybePercent,triggersBounds:l.any},{name:"min-width-bias-right",type:c.sizeMaybePercent,triggersBounds:l.any},{name:"min-height",type:c.size,triggersBounds:l.any},{name:"min-height-bias-top",type:c.sizeMaybePercent,triggersBounds:l.any},{name:"min-height-bias-bottom",type:c.sizeMaybePercent,triggersBounds:l.any}],$=[{name:"line-style",type:c.lineStyle},{name:"line-color",type:c.color},{name:"line-fill",type:c.fill},{name:"line-cap",type:c.lineCap},{name:"line-opacity",type:c.zeroOneNumber},{name:"line-dash-pattern",type:c.numbers},{name:"line-dash-offset",type:c.number},{name:"line-outline-width",type:c.size},{name:"line-outline-color",type:c.color},{name:"line-gradient-stop-colors",type:c.colors},{name:"line-gradient-stop-positions",type:c.percentages},{name:"curve-style",type:c.curveStyle,triggersBounds:l.any,triggersBoundsOfParallelBeziers:!0},{name:"haystack-radius",type:c.zeroOneNumber,triggersBounds:l.any},{name:"source-endpoint",type:c.edgeEndpoint,triggersBounds:l.any},{name:"target-endpoint",type:c.edgeEndpoint,triggersBounds:l.any},{name:"control-point-step-size",type:c.size,triggersBounds:l.any},{name:"control-point-distances",type:c.bidirectionalSizes,triggersBounds:l.any},{name:"control-point-weights",type:c.numbers,triggersBounds:l.any},{name:"segment-distances",type:c.bidirectionalSizes,triggersBounds:l.any},{name:"segment-weights",type:c.numbers,triggersBounds:l.any},{name:"segment-radii",type:c.numbers,triggersBounds:l.any},{name:"radius-type",type:c.radiusType,triggersBounds:l.any},{name:"taxi-turn",type:c.bidirectionalSizeMaybePercent,triggersBounds:l.any},{name:"taxi-turn-min-distance",type:c.size,triggersBounds:l.any},{name:"taxi-direction",type:c.axisDirection,triggersBounds:l.any},{name:"taxi-radius",type:c.number,triggersBounds:l.any},{name:"edge-distances",type:c.edgeDistances,triggersBounds:l.any},{name:"arrow-scale",type:c.positiveNumber,triggersBounds:l.any},{name:"loop-direction",type:c.angle,triggersBounds:l.any},{name:"loop-sweep",type:c.angle,triggersBounds:l.any},{name:"source-distance-from-node",type:c.size,triggersBounds:l.any},{name:"target-distance-from-node",type:c.size,triggersBounds:l.any}],M=[{name:"ghost",type:c.bool,triggersBounds:l.any},{name:"ghost-offset-x",type:c.bidirectionalSize,triggersBounds:l.any},{name:"ghost-offset-y",type:c.bidirectionalSize,triggersBounds:l.any},{name:"ghost-opacity",type:c.zeroOneNumber}],b=[{name:"selection-box-color",type:c.color},{name:"selection-box-opacity",type:c.zeroOneNumber},{name:"selection-box-border-color",type:c.color},{name:"selection-box-border-width",type:c.size},{name:"active-bg-color",type:c.color},{name:"active-bg-opacity",type:c.zeroOneNumber},{name:"active-bg-size",type:c.size},{name:"outside-texture-bg-color",type:c.color},{name:"outside-texture-bg-opacity",type:c.zeroOneNumber}],x=[];tt.pieBackgroundN=16,x.push({name:"pie-size",type:c.sizeMaybePercent});for(var K=1;K<=tt.pieBackgroundN;K++)x.push({name:"pie-"+K+"-background-color",type:c.color}),x.push({name:"pie-"+K+"-background-size",type:c.percent}),x.push({name:"pie-"+K+"-background-opacity",type:c.zeroOneNumber});var X=[],v=tt.arrowPrefixes=["source","mid-source","target","mid-target"];[{name:"arrow-shape",type:c.arrowShape,triggersBounds:l.any},{name:"arrow-color",type:c.color},{name:"arrow-fill",type:c.arrowFill},{name:"arrow-width",type:c.arrowWidth}].forEach(function(J){v.forEach(function(F){var W=F+"-"+J.name,L=J.type,z=J.triggersBounds;X.push({name:W,type:L,triggersBounds:z})})},{});var A=tt.properties=[].concat(m,y,_,g,P,M,p,h,u,d,f,E,T,B,D,x,k,$,X,b),w=tt.propertyGroups={behavior:m,transition:y,visibility:_,overlay:g,underlay:P,ghost:M,commonLabel:p,labelDimensions:h,mainLabel:u,sourceLabel:d,targetLabel:f,nodeBody:E,nodeBorder:T,nodeOutline:B,backgroundImage:D,pie:x,compound:k,edgeLine:$,edgeArrow:X,core:b},O=tt.propertyGroupNames={},N=tt.propertyGroupKeys=Object.keys(w);N.forEach(function(J){O[J]=w[J].map(function(F){return F.name}),w[J].forEach(function(F){return F.groupKey=J})});var S=tt.aliases=[{name:"content",pointsTo:"label"},{name:"control-point-distance",pointsTo:"control-point-distances"},{name:"control-point-weight",pointsTo:"control-point-weights"},{name:"segment-distance",pointsTo:"segment-distances"},{name:"segment-weight",pointsTo:"segment-weights"},{name:"segment-radius",pointsTo:"segment-radii"},{name:"edge-text-rotation",pointsTo:"text-rotation"},{name:"padding-left",pointsTo:"padding"},{name:"padding-right",pointsTo:"padding"},{name:"padding-top",pointsTo:"padding"},{name:"padding-bottom",pointsTo:"padding"}];tt.propertyNames=A.map(function(J){return J.name});for(var I=0;I<A.length;I++){var q=A[I];A[q.name]=q}for(var Y=0;Y<S.length;Y++){var ee=S[Y],Q=A[ee.pointsTo],U={name:ee.name,alias:!0,pointsTo:Q};A.push(U),A[ee.name]=U}})();tt.getDefaultProperty=function(t){return this.getDefaultProperties()[t]};tt.getDefaultProperties=function(){var t=this._private;if(t.defaultProperties!=null)return t.defaultProperties;for(var e=Ve({"selection-box-color":"#ddd","selection-box-opacity":.65,"selection-box-border-color":"#aaa","selection-box-border-width":1,"active-bg-color":"black","active-bg-opacity":.15,"active-bg-size":30,"outside-texture-bg-color":"#000","outside-texture-bg-opacity":.125,events:"yes","text-events":"no","text-valign":"top","text-halign":"center","text-justification":"auto","line-height":1,color:"#000","text-outline-color":"#000","text-outline-width":0,"text-outline-opacity":1,"text-opacity":1,"text-decoration":"none","text-transform":"none","text-wrap":"none","text-overflow-wrap":"whitespace","text-max-width":9999,"text-background-color":"#000","text-background-opacity":0,"text-background-shape":"rectangle","text-background-padding":0,"text-border-opacity":0,"text-border-width":0,"text-border-style":"solid","text-border-color":"#000","font-family":"Helvetica Neue, Helvetica, sans-serif","font-style":"normal","font-weight":"normal","font-size":16,"min-zoomed-font-size":0,"text-rotation":"none","source-text-rotation":"none","target-text-rotation":"none",visibility:"visible",display:"element",opacity:1,"z-compound-depth":"auto","z-index-compare":"auto","z-index":0,label:"","text-margin-x":0,"text-margin-y":0,"source-label":"","source-text-offset":0,"source-text-margin-x":0,"source-text-margin-y":0,"target-label":"","target-text-offset":0,"target-text-margin-x":0,"target-text-margin-y":0,"overlay-opacity":0,"overlay-color":"#000","overlay-padding":10,"overlay-shape":"round-rectangle","overlay-corner-radius":"auto","underlay-opacity":0,"underlay-color":"#000","underlay-padding":10,"underlay-shape":"round-rectangle","underlay-corner-radius":"auto","transition-property":"none","transition-duration":0,"transition-delay":0,"transition-timing-function":"linear","background-blacken":0,"background-color":"#999","background-fill":"solid","background-opacity":1,"background-image":"none","background-image-crossorigin":"anonymous","background-image-opacity":1,"background-image-containment":"inside","background-image-smoothing":"yes","background-position-x":"50%","background-position-y":"50%","background-offset-x":0,"background-offset-y":0,"background-width-relative-to":"include-padding","background-height-relative-to":"include-padding","background-repeat":"no-repeat","background-fit":"none","background-clip":"node","background-width":"auto","background-height":"auto","border-color":"#000","border-opacity":1,"border-width":0,"border-style":"solid","border-dash-pattern":[4,2],"border-dash-offset":0,"border-cap":"butt","border-join":"miter","border-position":"center","outline-color":"#999","outline-opacity":1,"outline-width":0,"outline-offset":0,"outline-style":"solid",height:30,width:30,shape:"ellipse","shape-polygon-points":"-1, -1,   1, -1,   1, 1,   -1, 1","corner-radius":"auto","bounds-expansion":0,"background-gradient-direction":"to-bottom","background-gradient-stop-colors":"#999","background-gradient-stop-positions":"0%",ghost:"no","ghost-offset-y":0,"ghost-offset-x":0,"ghost-opacity":0,padding:0,"padding-relative-to":"width",position:"origin","compound-sizing-wrt-labels":"include","min-width":0,"min-width-bias-left":0,"min-width-bias-right":0,"min-height":0,"min-height-bias-top":0,"min-height-bias-bottom":0},{"pie-size":"100%"},[{name:"pie-{{i}}-background-color",value:"black"},{name:"pie-{{i}}-background-size",value:"0%"},{name:"pie-{{i}}-background-opacity",value:1}].reduce(function(l,c){for(var u=1;u<=tt.pieBackgroundN;u++){var d=c.name.replace("{{i}}",u),f=c.value;l[d]=f}return l},{}),{"line-style":"solid","line-color":"#999","line-fill":"solid","line-cap":"butt","line-opacity":1,"line-outline-width":0,"line-outline-color":"#000","line-gradient-stop-colors":"#999","line-gradient-stop-positions":"0%","control-point-step-size":40,"control-point-weights":.5,"segment-weights":.5,"segment-distances":20,"segment-radii":15,"radius-type":"arc-radius","taxi-turn":"50%","taxi-radius":15,"taxi-turn-min-distance":10,"taxi-direction":"auto","edge-distances":"intersection","curve-style":"haystack","haystack-radius":0,"arrow-scale":1,"loop-direction":"-45deg","loop-sweep":"-90deg","source-distance-from-node":0,"target-distance-from-node":0,"source-endpoint":"outside-to-node","target-endpoint":"outside-to-node","line-dash-pattern":[6,3],"line-dash-offset":0},[{name:"arrow-shape",value:"none"},{name:"arrow-color",value:"#999"},{name:"arrow-fill",value:"filled"},{name:"arrow-width",value:1}].reduce(function(l,c){return tt.arrowPrefixes.forEach(function(u){var d=u+"-"+c.name,f=c.value;l[d]=f}),l},{})),n={},r=0;r<this.properties.length;r++){var a=this.properties[r];if(!a.pointsTo){var i=a.name,o=e[i],s=this.parse(i,o);n[i]=s}}return t.defaultProperties=n,t.defaultProperties};tt.addDefaultStylesheet=function(){this.selector(":parent").css({shape:"rectangle",padding:10,"background-color":"#eee","border-color":"#ccc","border-width":1}).selector("edge").css({width:3}).selector(":loop").css({"curve-style":"bezier"}).selector("edge:compound").css({"curve-style":"bezier","source-endpoint":"outside-to-line","target-endpoint":"outside-to-line"}).selector(":selected").css({"background-color":"#0169D9","line-color":"#0169D9","source-arrow-color":"#0169D9","target-arrow-color":"#0169D9","mid-source-arrow-color":"#0169D9","mid-target-arrow-color":"#0169D9"}).selector(":parent:selected").css({"background-color":"#CCE1F9","border-color":"#aec8e5"}).selector(":active").css({"overlay-color":"black","overlay-padding":10,"overlay-opacity":.25}),this.defaultLength=this.length};var uc={};uc.parse=function(t,e,n,r){var a=this;if(wn(e))return a.parseImplWarn(t,e,n,r);var i=r==="mapping"||r===!0||r===!1||r==null?"dontcare":r,o=n?"t":"f",s=""+e,l=tf(t,s,o,i),c=a.propCache=a.propCache||[],u;return(u=c[l])||(u=c[l]=a.parseImplWarn(t,e,n,r)),(n||r==="mapping")&&(u=tr(u),u&&(u.value=tr(u.value))),u};uc.parseImplWarn=function(t,e,n,r){var a=this.parseImpl(t,e,n,r);return!a&&e!=null&&pn("The style property `".concat(t,": ").concat(e,"` is invalid")),a&&(a.name==="width"||a.name==="height")&&e==="label"&&pn("The style value of `label` is deprecated for `"+a.name+"`"),a};uc.parseImpl=function(t,e,n,r){var a=this;t=Cl(t);var i=a.properties[t],o=e,s=a.types;if(!i||e===void 0)return null;i.alias&&(i=i.pointsTo,t=i.name);var l=ze(e);l&&(e=e.trim());var c=i.type;if(!c)return null;if(n&&(e===""||e===null))return{name:t,value:e,bypass:!0,deleteBypass:!0};if(wn(e))return{name:t,value:e,strValue:"fn",mapped:s.fn,bypass:n};var u,d;if(!(!l||r||e.length<7||e[1]!=="a")){if(e.length>=7&&e[0]==="d"&&(u=new RegExp(s.data.regex).exec(e))){if(n)return!1;var f=s.data;return{name:t,value:u,strValue:""+e,mapped:f,field:u[1],bypass:n}}else if(e.length>=10&&e[0]==="m"&&(d=new RegExp(s.mapData.regex).exec(e))){if(n||c.multiple)return!1;var h=s.mapData;if(!(c.color||c.number))return!1;var p=this.parse(t,d[4]);if(!p||p.mapped)return!1;var m=this.parse(t,d[5]);if(!m||m.mapped)return!1;if(p.pfValue===m.pfValue||p.strValue===m.strValue)return pn("`"+t+": "+e+"` is not a valid mapper because the output range is zero; converting to `"+t+": "+p.strValue+"`"),this.parse(t,p.strValue);if(c.color){var _=p.value,g=m.value,P=_[0]===g[0]&&_[1]===g[1]&&_[2]===g[2]&&(_[3]===g[3]||(_[3]==null||_[3]===1)&&(g[3]==null||g[3]===1));if(P)return!1}return{name:t,value:d,strValue:""+e,mapped:h,field:d[1],fieldMin:parseFloat(d[2]),fieldMax:parseFloat(d[3]),valueMin:p.value,valueMax:m.value,bypass:n}}}if(c.multiple&&r!=="multiple"){var y;if(l?y=e.split(/\s+/):_n(e)?y=e:y=[e],c.evenMultiple&&y.length%2!==0)return null;for(var C=[],E=[],T=[],B="",D=!1,k=0;k<y.length;k++){var $=a.parse(t,y[k],n,"multiple");D=D||ze($.value),C.push($.value),T.push($.pfValue!=null?$.pfValue:$.value),E.push($.units),B+=(k>0?" ":"")+$.strValue}return c.validate&&!c.validate(C,E)?null:c.singleEnum&&D?C.length===1&&ze(C[0])?{name:t,value:C[0],strValue:C[0],bypass:n}:null:{name:t,value:C,pfValue:T,strValue:B,bypass:n,units:E}}var M=function(){for(var F=0;F<c.enums.length;F++){var W=c.enums[F];if(W===e)return{name:t,value:e,strValue:""+e,bypass:n}}return null};if(c.number){var b,x="px";if(c.units&&(b=c.units),c.implicitUnits&&(x=c.implicitUnits),!c.unitless)if(l){var K="px|em"+(c.allowPercent?"|\\%":"");b&&(K=b);var X=e.match("^("+Ln+")("+K+")?$");X&&(e=X[1],b=X[2]||x)}else(!b||c.implicitUnits)&&(b=x);if(e=parseFloat(e),isNaN(e)&&c.enums===void 0)return null;if(isNaN(e)&&c.enums!==void 0)return e=o,M();if(c.integer&&!e1(e)||c.min!==void 0&&(e<c.min||c.strictMin&&e===c.min)||c.max!==void 0&&(e>c.max||c.strictMax&&e===c.max))return null;var v={name:t,value:e,strValue:""+e+(b||""),units:b,bypass:n};return c.unitless||b!=="px"&&b!=="em"?v.pfValue=e:v.pfValue=b==="px"||!b?e:this.getEmSizeInPixels()*e,(b==="ms"||b==="s")&&(v.pfValue=b==="ms"?e:1e3*e),(b==="deg"||b==="rad")&&(v.pfValue=b==="rad"?e:Dg(e)),b==="%"&&(v.pfValue=e/100),v}else if(c.propList){var A=[],w=""+e;if(w!=="none"){for(var O=w.split(/\s*,\s*|\s+/),N=0;N<O.length;N++){var S=O[N].trim();a.properties[S]?A.push(S):pn("`"+S+"` is not a valid property name")}if(A.length===0)return null}return{name:t,value:A,strValue:A.length===0?"none":A.join(" "),bypass:n}}else if(c.color){var I=qd(e);return I?{name:t,value:I,pfValue:I,strValue:"rgb("+I[0]+","+I[1]+","+I[2]+")",bypass:n}:null}else if(c.regex||c.regexes){if(c.enums){var q=M();if(q)return q}for(var Y=c.regexes?c.regexes:[c.regex],ee=0;ee<Y.length;ee++){var Q=new RegExp(Y[ee]),U=Q.exec(e);if(U)return{name:t,value:c.singleRegexMatchValue?U[1]:U,strValue:""+e,bypass:n}}return null}else return c.string?{name:t,value:""+e,strValue:""+e,bypass:n}:c.enums?M():null};var ut=function t(e){if(!(this instanceof t))return new t(e);if(!Al(e)){En("A style must have a core reference");return}this._private={cy:e,coreStyle:{}},this.length=0,this.resetToDefault()},ft=ut.prototype;ft.instanceString=function(){return"style"};ft.clear=function(){for(var t=this._private,e=t.cy,n=e.elements(),r=0;r<this.length;r++)this[r]=void 0;return this.length=0,t.contextStyles={},t.propDiffs={},this.cleanElements(n,!0),n.forEach(function(a){var i=a[0]._private;i.styleDirty=!0,i.appliedInitStyle=!1}),this};ft.resetToDefault=function(){return this.clear(),this.addDefaultStylesheet(),this};ft.core=function(t){return this._private.coreStyle[t]||this.getDefaultProperty(t)};ft.selector=function(t){var e=t==="core"?null:new Ur(t),n=this.length++;return this[n]={selector:e,properties:[],mappedProperties:[],index:n},this};ft.css=function(){var t=this,e=arguments;if(e.length===1)for(var n=e[0],r=0;r<t.properties.length;r++){var a=t.properties[r],i=n[a.name];i===void 0&&(i=n[Js(a.name)]),i!==void 0&&this.cssRule(a.name,i)}else e.length===2&&this.cssRule(e[0],e[1]);return this};ft.style=ft.css;ft.cssRule=function(t,e){var n=this.parse(t,e);if(n){var r=this.length-1;this[r].properties.push(n),this[r].properties[n.name]=n,n.name.match(/pie-(\d+)-background-size/)&&n.value&&(this._private.hasPie=!0),n.mapped&&this[r].mappedProperties.push(n);var a=!this[r].selector;a&&(this._private.coreStyle[n.name]=n)}return this};ft.append=function(t){return Yd(t)?t.appendToStyle(this):_n(t)?this.appendFromJson(t):ze(t)&&this.appendFromString(t),this};ut.fromJson=function(t,e){var n=new ut(t);return n.fromJson(e),n};ut.fromString=function(t,e){return new ut(t).fromString(e)};[ht,oo,Il,ar,lc,Ll,tt,uc].forEach(function(t){Ve(ft,t)});ut.types=ft.types;ut.properties=ft.properties;ut.propertyGroups=ft.propertyGroups;ut.propertyGroupNames=ft.propertyGroupNames;ut.propertyGroupKeys=ft.propertyGroupKeys;var Q2={style:function(e){if(e){var n=this.setStyle(e);n.update()}return this._private.style},setStyle:function(e){var n=this._private;return Yd(e)?n.style=e.generateStyle(this):_n(e)?n.style=ut.fromJson(this,e):ze(e)?n.style=ut.fromString(this,e):n.style=ut(this),n.style},updateStyle:function(){this.mutableElements().updateStyle()}},eb="single",da={autolock:function(e){if(e!==void 0)this._private.autolock=!!e;else return this._private.autolock;return this},autoungrabify:function(e){if(e!==void 0)this._private.autoungrabify=!!e;else return this._private.autoungrabify;return this},autounselectify:function(e){if(e!==void 0)this._private.autounselectify=!!e;else return this._private.autounselectify;return this},selectionType:function(e){var n=this._private;if(n.selectionType==null&&(n.selectionType=eb),e!==void 0)(e==="additive"||e==="single")&&(n.selectionType=e);else return n.selectionType;return this},panningEnabled:function(e){if(e!==void 0)this._private.panningEnabled=!!e;else return this._private.panningEnabled;return this},userPanningEnabled:function(e){if(e!==void 0)this._private.userPanningEnabled=!!e;else return this._private.userPanningEnabled;return this},zoomingEnabled:function(e){if(e!==void 0)this._private.zoomingEnabled=!!e;else return this._private.zoomingEnabled;return this},userZoomingEnabled:function(e){if(e!==void 0)this._private.userZoomingEnabled=!!e;else return this._private.userZoomingEnabled;return this},boxSelectionEnabled:function(e){if(e!==void 0)this._private.boxSelectionEnabled=!!e;else return this._private.boxSelectionEnabled;return this},pan:function(){var e=arguments,n=this._private.pan,r,a,i,o,s;switch(e.length){case 0:return n;case 1:if(ze(e[0]))return r=e[0],n[r];if(un(e[0])){if(!this._private.panningEnabled)return this;i=e[0],o=i.x,s=i.y,Se(o)&&(n.x=o),Se(s)&&(n.y=s),this.emit("pan viewport")}break;case 2:if(!this._private.panningEnabled)return this;r=e[0],a=e[1],(r==="x"||r==="y")&&Se(a)&&(n[r]=a),this.emit("pan viewport");break}return this.notify("viewport"),this},panBy:function(e,n){var r=arguments,a=this._private.pan,i,o,s,l,c;if(!this._private.panningEnabled)return this;switch(r.length){case 1:un(e)&&(s=r[0],l=s.x,c=s.y,Se(l)&&(a.x+=l),Se(c)&&(a.y+=c),this.emit("pan viewport"));break;case 2:i=e,o=n,(i==="x"||i==="y")&&Se(o)&&(a[i]+=o),this.emit("pan viewport");break}return this.notify("viewport"),this},gc:function(){this.notify("gc")},fit:function(e,n){var r=this.getFitViewport(e,n);if(r){var a=this._private;a.zoom=r.zoom,a.pan=r.pan,this.emit("pan zoom viewport"),this.notify("viewport")}return this},getFitViewport:function(e,n){if(Se(e)&&n===void 0&&(n=e,e=void 0),!(!this._private.panningEnabled||!this._private.zoomingEnabled)){var r;if(ze(e)){var a=e;e=this.$(a)}else if(r1(e)){var i=e;r={x1:i.x1,y1:i.y1,x2:i.x2,y2:i.y2},r.w=r.x2-r.x1,r.h=r.y2-r.y1}else Tt(e)||(e=this.mutableElements());if(!(Tt(e)&&e.empty())){r=r||e.boundingBox();var o=this.width(),s=this.height(),l;if(n=Se(n)?n:0,!isNaN(o)&&!isNaN(s)&&o>0&&s>0&&!isNaN(r.w)&&!isNaN(r.h)&&r.w>0&&r.h>0){l=Math.min((o-2*n)/r.w,(s-2*n)/r.h),l=l>this._private.maxZoom?this._private.maxZoom:l,l=l<this._private.minZoom?this._private.minZoom:l;var c={x:(o-l*(r.x1+r.x2))/2,y:(s-l*(r.y1+r.y2))/2};return{zoom:l,pan:c}}}}},zoomRange:function(e,n){var r=this._private;if(n==null){var a=e;e=a.min,n=a.max}return Se(e)&&Se(n)&&e<=n?(r.minZoom=e,r.maxZoom=n):Se(e)&&n===void 0&&e<=r.maxZoom?r.minZoom=e:Se(n)&&e===void 0&&n>=r.minZoom&&(r.maxZoom=n),this},minZoom:function(e){return e===void 0?this._private.minZoom:this.zoomRange({min:e})},maxZoom:function(e){return e===void 0?this._private.maxZoom:this.zoomRange({max:e})},getZoomedViewport:function(e){var n=this._private,r=n.pan,a=n.zoom,i,o,s=!1;if(n.zoomingEnabled||(s=!0),Se(e)?o=e:un(e)&&(o=e.level,e.position!=null?i=ec(e.position,a,r):e.renderedPosition!=null&&(i=e.renderedPosition),i!=null&&!n.panningEnabled&&(s=!0)),o=o>n.maxZoom?n.maxZoom:o,o=o<n.minZoom?n.minZoom:o,s||!Se(o)||o===a||i!=null&&(!Se(i.x)||!Se(i.y)))return null;if(i!=null){var l=r,c=a,u=o,d={x:-u/c*(i.x-l.x)+i.x,y:-u/c*(i.y-l.y)+i.y};return{zoomed:!0,panned:!0,zoom:u,pan:d}}else return{zoomed:!0,panned:!1,zoom:o,pan:r}},zoom:function(e){if(e===void 0)return this._private.zoom;var n=this.getZoomedViewport(e),r=this._private;return n==null||!n.zoomed?this:(r.zoom=n.zoom,n.panned&&(r.pan.x=n.pan.x,r.pan.y=n.pan.y),this.emit("zoom"+(n.panned?" pan":"")+" viewport"),this.notify("viewport"),this)},viewport:function(e){var n=this._private,r=!0,a=!0,i=[],o=!1,s=!1;if(!e)return this;if(Se(e.zoom)||(r=!1),un(e.pan)||(a=!1),!r&&!a)return this;if(r){var l=e.zoom;l<n.minZoom||l>n.maxZoom||!n.zoomingEnabled?o=!0:(n.zoom=l,i.push("zoom"))}if(a&&(!o||!e.cancelOnFailedZoom)&&n.panningEnabled){var c=e.pan;Se(c.x)&&(n.pan.x=c.x,s=!1),Se(c.y)&&(n.pan.y=c.y,s=!1),s||i.push("pan")}return i.length>0&&(i.push("viewport"),this.emit(i.join(" ")),this.notify("viewport")),this},center:function(e){var n=this.getCenterPan(e);return n&&(this._private.pan=n,this.emit("pan viewport"),this.notify("viewport")),this},getCenterPan:function(e,n){if(this._private.panningEnabled){if(ze(e)){var r=e;e=this.mutableElements().filter(r)}else Tt(e)||(e=this.mutableElements());if(e.length!==0){var a=e.boundingBox(),i=this.width(),o=this.height();n=n===void 0?this._private.zoom:n;var s={x:(i-n*(a.x1+a.x2))/2,y:(o-n*(a.y1+a.y2))/2};return s}}},reset:function(){return!this._private.panningEnabled||!this._private.zoomingEnabled?this:(this.viewport({pan:{x:0,y:0},zoom:1}),this)},invalidateSize:function(){this._private.sizeCache=null},size:function(){var e=this._private,n=e.container,r=this;return e.sizeCache=e.sizeCache||(n?function(){var a=r.window().getComputedStyle(n),i=function(s){return parseFloat(a.getPropertyValue(s))};return{width:n.clientWidth-i("padding-left")-i("padding-right"),height:n.clientHeight-i("padding-top")-i("padding-bottom")}}():{width:1,height:1})},width:function(){return this.size().width},height:function(){return this.size().height},extent:function(){var e=this._private.pan,n=this._private.zoom,r=this.renderedExtent(),a={x1:(r.x1-e.x)/n,x2:(r.x2-e.x)/n,y1:(r.y1-e.y)/n,y2:(r.y2-e.y)/n};return a.w=a.x2-a.x1,a.h=a.y2-a.y1,a},renderedExtent:function(){var e=this.width(),n=this.height();return{x1:0,y1:0,x2:e,y2:n,w:e,h:n}},multiClickDebounceTime:function(e){if(e)this._private.multiClickDebounceTime=e;else return this._private.multiClickDebounceTime;return this}};da.centre=da.center;da.autolockNodes=da.autolock;da.autoungrabifyNodes=da.autoungrabify;var Zi={data:hn.data({field:"data",bindingEvent:"data",allowBinding:!0,allowSetting:!0,settingEvent:"data",settingTriggersEvent:!0,triggerFnName:"trigger",allowGetting:!0,updateStyle:!0}),removeData:hn.removeData({field:"data",event:"data",triggerFnName:"trigger",triggerEvent:!0,updateStyle:!0}),scratch:hn.data({field:"scratch",bindingEvent:"scratch",allowBinding:!0,allowSetting:!0,settingEvent:"scratch",settingTriggersEvent:!0,triggerFnName:"trigger",allowGetting:!0,updateStyle:!0}),removeScratch:hn.removeData({field:"scratch",event:"scratch",triggerFnName:"trigger",triggerEvent:!0,updateStyle:!0})};Zi.attr=Zi.data;Zi.removeAttr=Zi.removeData;var Qi=function(e){var n=this;e=Ve({},e);var r=e.container;r&&!Rs(r)&&Rs(r[0])&&(r=r[0]);var a=r?r._cyreg:null;a=a||{},a&&a.cy&&(a.cy.destroy(),a={});var i=a.readies=a.readies||[];r&&(r._cyreg=a),a.cy=n;var o=In!==void 0&&r!==void 0&&!e.headless,s=e;s.layout=Ve({name:o?"grid":"null"},s.layout),s.renderer=Ve({name:o?"canvas":"null"},s.renderer);var l=function(p,m,_){return m!==void 0?m:_!==void 0?_:p},c=this._private={container:r,ready:!1,options:s,elements:new at(this),listeners:[],aniEles:new at(this),data:s.data||{},scratch:{},layout:null,renderer:null,destroyed:!1,notificationsEnabled:!0,minZoom:1e-50,maxZoom:1e50,zoomingEnabled:l(!0,s.zoomingEnabled),userZoomingEnabled:l(!0,s.userZoomingEnabled),panningEnabled:l(!0,s.panningEnabled),userPanningEnabled:l(!0,s.userPanningEnabled),boxSelectionEnabled:l(!0,s.boxSelectionEnabled),autolock:l(!1,s.autolock,s.autolockNodes),autoungrabify:l(!1,s.autoungrabify,s.autoungrabifyNodes),autounselectify:l(!1,s.autounselectify),styleEnabled:s.styleEnabled===void 0?o:s.styleEnabled,zoom:Se(s.zoom)?s.zoom:1,pan:{x:un(s.pan)&&Se(s.pan.x)?s.pan.x:0,y:un(s.pan)&&Se(s.pan.y)?s.pan.y:0},animation:{current:[],queue:[]},hasCompoundNodes:!1,multiClickDebounceTime:l(250,s.multiClickDebounceTime)};this.createEmitter(),this.selectionType(s.selectionType),this.zoomRange({min:s.minZoom,max:s.maxZoom});var u=function(p,m){var _=p.some(a1);if(_)return oi.all(p).then(m);m(p)};c.styleEnabled&&n.setStyle([]);var d=Ve({},s,s.renderer);n.initRenderer(d);var f=function(p,m,_){n.notifications(!1);var g=n.mutableElements();g.length>0&&g.remove(),p!=null&&(un(p)||_n(p))&&n.add(p),n.one("layoutready",function(y){n.notifications(!0),n.emit(y),n.one("load",m),n.emitAndNotify("load")}).one("layoutstop",function(){n.one("done",_),n.emit("done")});var P=Ve({},n._private.options.layout);P.eles=n.elements(),n.layout(P).run()};u([s.style,s.elements],function(h){var p=h[0],m=h[1];c.styleEnabled&&n.style().append(p),f(m,function(){n.startAnimationLoop(),c.ready=!0,wn(s.ready)&&n.on("ready",s.ready);for(var _=0;_<i.length;_++){var g=i[_];n.on("ready",g)}a&&(a.readies=[]),n.emit("ready")},s.done)})},zs=Qi.prototype;Ve(zs,{instanceString:function(){return"core"},isReady:function(){return this._private.ready},destroyed:function(){return this._private.destroyed},ready:function(e){return this.isReady()?this.emitter().emit("ready",[],e):this.on("ready",e),this},destroy:function(){var e=this;if(!e.destroyed())return e.stopAnimationLoop(),e.destroyRenderer(),this.emit("destroy"),e._private.destroyed=!0,e},hasElementWithId:function(e){return this._private.elements.hasElementWithId(e)},getElementById:function(e){return this._private.elements.getElementById(e)},hasCompoundNodes:function(){return this._private.hasCompoundNodes},headless:function(){return this._private.renderer.isHeadless()},styleEnabled:function(){return this._private.styleEnabled},addToPool:function(e){return this._private.elements.merge(e),this},removeFromPool:function(e){return this._private.elements.unmerge(e),this},container:function(){return this._private.container||null},window:function(){var e=this._private.container;if(e==null)return In;var n=this._private.container.ownerDocument;return n===void 0||n==null?In:n.defaultView||In},mount:function(e){if(e!=null){var n=this,r=n._private,a=r.options;return!Rs(e)&&Rs(e[0])&&(e=e[0]),n.stopAnimationLoop(),n.destroyRenderer(),r.container=e,r.styleEnabled=!0,n.invalidateSize(),n.initRenderer(Ve({},a,a.renderer,{name:a.renderer.name==="null"?"canvas":a.renderer.name})),n.startAnimationLoop(),n.style(a.style),n.emit("mount"),n}},unmount:function(){var e=this;return e.stopAnimationLoop(),e.destroyRenderer(),e.initRenderer({name:"null"}),e.emit("unmount"),e},options:function(){return tr(this._private.options)},json:function(e){var n=this,r=n._private,a=n.mutableElements(),i=function(C){return n.getElementById(C.id())};if(un(e)){if(n.startBatch(),e.elements){var o={},s=function(C,E){for(var T=[],B=[],D=0;D<C.length;D++){var k=C[D];if(!k.data.id){pn("cy.json() cannot handle elements without an ID attribute");continue}var $=""+k.data.id,M=n.getElementById($);o[$]=!0,M.length!==0?B.push({ele:M,json:k}):(E&&(k.group=E),T.push(k))}n.add(T);for(var b=0;b<B.length;b++){var x=B[b],K=x.ele,X=x.json;K.json(X)}};if(_n(e.elements))s(e.elements);else for(var l=["nodes","edges"],c=0;c<l.length;c++){var u=l[c],d=e.elements[u];_n(d)&&s(d,u)}var f=n.collection();a.filter(function(y){return!o[y.id()]}).forEach(function(y){y.isParent()?f.merge(y):y.remove()}),f.forEach(function(y){return y.children().move({parent:null})}),f.forEach(function(y){return i(y).remove()})}e.style&&n.style(e.style),e.zoom!=null&&e.zoom!==r.zoom&&n.zoom(e.zoom),e.pan&&(e.pan.x!==r.pan.x||e.pan.y!==r.pan.y)&&n.pan(e.pan),e.data&&n.data(e.data);for(var h=["minZoom","maxZoom","zoomingEnabled","userZoomingEnabled","panningEnabled","userPanningEnabled","boxSelectionEnabled","autolock","autoungrabify","autounselectify","multiClickDebounceTime"],p=0;p<h.length;p++){var m=h[p];e[m]!=null&&n[m](e[m])}return n.endBatch(),this}else{var _=!!e,g={};_?g.elements=this.elements().map(function(y){return y.json()}):(g.elements={},a.forEach(function(y){var C=y.group();g.elements[C]||(g.elements[C]=[]),g.elements[C].push(y.json())})),this._private.styleEnabled&&(g.style=n.style().json()),g.data=tr(n.data());var P=r.options;return g.zoomingEnabled=r.zoomingEnabled,g.userZoomingEnabled=r.userZoomingEnabled,g.zoom=r.zoom,g.minZoom=r.minZoom,g.maxZoom=r.maxZoom,g.panningEnabled=r.panningEnabled,g.userPanningEnabled=r.userPanningEnabled,g.pan=tr(r.pan),g.boxSelectionEnabled=r.boxSelectionEnabled,g.renderer=tr(P.renderer),g.hideEdgesOnViewport=P.hideEdgesOnViewport,g.textureOnViewport=P.textureOnViewport,g.wheelSensitivity=P.wheelSensitivity,g.motionBlur=P.motionBlur,g.multiClickDebounceTime=P.multiClickDebounceTime,g}}});zs.$id=zs.getElementById;[F2,q2,qf,pl,Ss,G2,ml,Ws,Q2,da,Zi].forEach(function(t){Ve(zs,t)});var nb={fit:!0,directed:!1,padding:30,circle:!1,grid:!1,spacingFactor:1.75,boundingBox:void 0,avoidOverlap:!0,nodeDimensionsIncludeLabels:!1,roots:void 0,depthSort:void 0,animate:!1,animationDuration:500,animationEasing:void 0,animateFilter:function(e,n){return!0},ready:void 0,stop:void 0,transform:function(e,n){return n}},tb={maximal:!1,acyclic:!1},za=function(e){return e.scratch("breadthfirst")},md=function(e,n){return e.scratch("breadthfirst",n)};function Hf(t){this.options=Ve({},nb,tb,t)}Hf.prototype.run=function(){var t=this.options,e=t.cy,n=t.eles,r=n.nodes().filter(function(le){return le.isChildless()}),a=n,i=t.directed,o=t.acyclic||t.maximal||t.maximalAdjustments>0,s=!!t.boundingBox,l=e.extent(),c=At(s?t.boundingBox:{x1:l.x1,y1:l.y1,w:l.w,h:l.h}),u;if(Tt(t.roots))u=t.roots;else if(_n(t.roots)){for(var d=[],f=0;f<t.roots.length;f++){var h=t.roots[f],p=e.getElementById(h);d.push(p)}u=e.collection(d)}else if(ze(t.roots))u=e.$(t.roots);else if(i)u=r.roots();else{var m=n.components();u=e.collection();for(var _=function(de){var Pe=m[de],Ce=Pe.maxDegree(!1),Xe=Pe.filter(function(ve){return ve.degree(!1)===Ce});u=u.add(Xe)},g=0;g<m.length;g++)_(g)}var P=[],y={},C=function(de,Pe){P[Pe]==null&&(P[Pe]=[]);var Ce=P[Pe].length;P[Pe].push(de),md(de,{index:Ce,depth:Pe})},E=function(de,Pe){var Ce=za(de),Xe=Ce.depth,ve=Ce.index;P[Xe][ve]=null,de.isChildless()&&C(de,Pe)};a.bfs({roots:u,directed:t.directed,visit:function(de,Pe,Ce,Xe,ve){var xe=de[0],ye=xe.id();xe.isChildless()&&C(xe,ve),y[ye]=!0}});for(var T=[],B=0;B<r.length;B++){var D=r[B];y[D.id()]||T.push(D)}var k=function(de){for(var Pe=P[de],Ce=0;Ce<Pe.length;Ce++){var Xe=Pe[Ce];if(Xe==null){Pe.splice(Ce,1),Ce--;continue}md(Xe,{depth:de,index:Ce})}},$=function(de,Pe){for(var Ce=za(de),Xe=de.incomers().filter(function(ce){return ce.isNode()&&n.has(ce)}),ve=-1,xe=de.id(),ye=0;ye<Xe.length;ye++){var fe=Xe[ye],R=za(fe);ve=Math.max(ve,R.depth)}if(Ce.depth<=ve){if(!t.acyclic&&Pe[xe])return null;var te=ve+1;return E(de,te),Pe[xe]=te,!0}return!1};if(i&&o){var M=[],b={},x=function(de){return M.push(de)},K=function(){return M.shift()};for(r.forEach(function(le){return M.push(le)});M.length>0;){var X=K(),v=$(X,b);if(v)X.outgoers().filter(function(le){return le.isNode()&&n.has(le)}).forEach(x);else if(v===null){pn("Detected double maximal shift for node `"+X.id()+"`.  Bailing maximal adjustment due to cycle.  Use `options.maximal: true` only on DAGs.");break}}}var A=0;if(t.avoidOverlap)for(var w=0;w<r.length;w++){var O=r[w],N=O.layoutDimensions(t),S=N.w,I=N.h;A=Math.max(A,S,I)}var q={},Y=function(de){if(q[de.id()])return q[de.id()];for(var Pe=za(de).depth,Ce=de.neighborhood(),Xe=0,ve=0,xe=0;xe<Ce.length;xe++){var ye=Ce[xe];if(!(ye.isEdge()||ye.isParent()||!r.has(ye))){var fe=za(ye);if(fe!=null){var R=fe.index,te=fe.depth;if(!(R==null||te==null)){var ce=P[te].length;te<Pe&&(Xe+=R/ce,ve++)}}}}return ve=Math.max(1,ve),Xe=Xe/ve,ve===0&&(Xe=0),q[de.id()]=Xe,Xe},ee=function(de,Pe){var Ce=Y(de),Xe=Y(Pe),ve=Ce-Xe;return ve===0?Vd(de.id(),Pe.id()):ve};t.depthSort!==void 0&&(ee=t.depthSort);for(var Q=P.length,U=0;U<Q;U++)P[U].sort(ee),k(U);for(var J=[],F=0;F<T.length;F++)J.push(T[F]);var W=function(){for(var de=0;de<Q;de++)k(de)};J.length&&(P.unshift(J),Q=P.length,W());for(var L=0,z=0;z<Q;z++)L=Math.max(P[z].length,L);var ne={x:c.x1+c.w/2,y:c.y1+c.h/2},H=r.reduce(function(le,de){return function(Pe){return{w:le.w===-1?Pe.w:(le.w+Pe.w)/2,h:le.h===-1?Pe.h:(le.h+Pe.h)/2}}(de.boundingBox({includeLabels:t.nodeDimensionsIncludeLabels}))},{w:-1,h:-1}),_e=Math.max(Q===1?0:s?(c.h-t.padding*2-H.h)/(Q-1):(c.h-t.padding*2-H.h)/(Q+1),A),Ae=P.reduce(function(le,de){return Math.max(le,de.length)},0),he=function(de){var Pe=za(de),Ce=Pe.depth,Xe=Pe.index;if(t.circle){var ve=Math.min(c.w/2/Q,c.h/2/Q);ve=Math.max(ve,A);var xe=ve*Ce+ve-(Q>0&&P[0].length<=3?ve/2:0),ye=2*Math.PI/P[Ce].length*Xe;return Ce===0&&P[0].length===1&&(xe=1),{x:ne.x+xe*Math.cos(ye),y:ne.y+xe*Math.sin(ye)}}else{var fe=P[Ce].length,R=Math.max(fe===1?0:s?(c.w-t.padding*2-H.w)/((t.grid?Ae:fe)-1):(c.w-t.padding*2-H.w)/((t.grid?Ae:fe)+1),A),te={x:ne.x+(Xe+1-(fe+1)/2)*R,y:ne.y+(Ce+1-(Q+1)/2)*_e};return te}};return n.nodes().layoutPositions(this,t,he),this};var rb={fit:!0,padding:30,boundingBox:void 0,avoidOverlap:!0,nodeDimensionsIncludeLabels:!1,spacingFactor:void 0,radius:void 0,startAngle:3/2*Math.PI,sweep:void 0,clockwise:!0,sort:void 0,animate:!1,animationDuration:500,animationEasing:void 0,animateFilter:function(e,n){return!0},ready:void 0,stop:void 0,transform:function(e,n){return n}};function Gf(t){this.options=Ve({},rb,t)}Gf.prototype.run=function(){var t=this.options,e=t,n=t.cy,r=e.eles,a=e.counterclockwise!==void 0?!e.counterclockwise:e.clockwise,i=r.nodes().not(":parent");e.sort&&(i=i.sort(e.sort));for(var o=At(e.boundingBox?e.boundingBox:{x1:0,y1:0,w:n.width(),h:n.height()}),s={x:o.x1+o.w/2,y:o.y1+o.h/2},l=e.sweep===void 0?2*Math.PI-2*Math.PI/i.length:e.sweep,c=l/Math.max(1,i.length-1),u,d=0,f=0;f<i.length;f++){var h=i[f],p=h.layoutDimensions(e),m=p.w,_=p.h;d=Math.max(d,m,_)}if(Se(e.radius)?u=e.radius:i.length<=1?u=0:u=Math.min(o.h,o.w)/2-d,i.length>1&&e.avoidOverlap){d*=1.75;var g=Math.cos(c)-Math.cos(0),P=Math.sin(c)-Math.sin(0),y=Math.sqrt(d*d/(g*g+P*P));u=Math.max(y,u)}var C=function(T,B){var D=e.startAngle+B*c*(a?1:-1),k=u*Math.cos(D),$=u*Math.sin(D),M={x:s.x+k,y:s.y+$};return M};return r.nodes().layoutPositions(this,e,C),this};var ab={fit:!0,padding:30,startAngle:3/2*Math.PI,sweep:void 0,clockwise:!0,equidistant:!1,minNodeSpacing:10,boundingBox:void 0,avoidOverlap:!0,nodeDimensionsIncludeLabels:!1,height:void 0,width:void 0,spacingFactor:void 0,concentric:function(e){return e.degree()},levelWidth:function(e){return e.maxDegree()/4},animate:!1,animationDuration:500,animationEasing:void 0,animateFilter:function(e,n){return!0},ready:void 0,stop:void 0,transform:function(e,n){return n}};function Jf(t){this.options=Ve({},ab,t)}Jf.prototype.run=function(){for(var t=this.options,e=t,n=e.counterclockwise!==void 0?!e.counterclockwise:e.clockwise,r=t.cy,a=e.eles,i=a.nodes().not(":parent"),o=At(e.boundingBox?e.boundingBox:{x1:0,y1:0,w:r.width(),h:r.height()}),s={x:o.x1+o.w/2,y:o.y1+o.h/2},l=[],c=0,u=0;u<i.length;u++){var d=i[u],f=void 0;f=e.concentric(d),l.push({value:f,node:d}),d._private.scratch.concentric=f}i.updateStyle();for(var h=0;h<i.length;h++){var p=i[h],m=p.layoutDimensions(e);c=Math.max(c,m.w,m.h)}l.sort(function(H,_e){return _e.value-H.value});for(var _=e.levelWidth(i),g=[[]],P=g[0],y=0;y<l.length;y++){var C=l[y];if(P.length>0){var E=Math.abs(P[0].value-C.value);E>=_&&(P=[],g.push(P))}P.push(C)}var T=c+e.minNodeSpacing;if(!e.avoidOverlap){var B=g.length>0&&g[0].length>1,D=Math.min(o.w,o.h)/2-T,k=D/(g.length+B?1:0);T=Math.min(T,k)}for(var $=0,M=0;M<g.length;M++){var b=g[M],x=e.sweep===void 0?2*Math.PI-2*Math.PI/b.length:e.sweep,K=b.dTheta=x/Math.max(1,b.length-1);if(b.length>1&&e.avoidOverlap){var X=Math.cos(K)-Math.cos(0),v=Math.sin(K)-Math.sin(0),A=Math.sqrt(T*T/(X*X+v*v));$=Math.max(A,$)}b.r=$,$+=T}if(e.equidistant){for(var w=0,O=0,N=0;N<g.length;N++){var S=g[N],I=S.r-O;w=Math.max(w,I)}O=0;for(var q=0;q<g.length;q++){var Y=g[q];q===0&&(O=Y.r),Y.r=O,O+=w}}for(var ee={},Q=0;Q<g.length;Q++)for(var U=g[Q],J=U.dTheta,F=U.r,W=0;W<U.length;W++){var L=U[W],z=e.startAngle+(n?1:-1)*J*W,ne={x:s.x+F*Math.cos(z),y:s.y+F*Math.sin(z)};ee[L.node.id()]=ne}return a.nodes().layoutPositions(this,e,function(H){var _e=H.id();return ee[_e]}),this};var el,ib={ready:function(){},stop:function(){},animate:!0,animationEasing:void 0,animationDuration:void 0,animateFilter:function(e,n){return!0},animationThreshold:250,refresh:20,fit:!0,padding:30,boundingBox:void 0,nodeDimensionsIncludeLabels:!1,randomize:!1,componentSpacing:40,nodeRepulsion:function(e){return 2048},nodeOverlap:4,idealEdgeLength:function(e){return 32},edgeElasticity:function(e){return 32},nestingFactor:1.2,gravity:1,numIter:1e3,initialTemp:1e3,coolingFactor:.99,minTemp:1};function dc(t){this.options=Ve({},ib,t),this.options.layout=this;var e=this.options.eles.nodes(),n=this.options.eles.edges(),r=n.filter(function(a){var i=a.source().data("id"),o=a.target().data("id"),s=e.some(function(c){return c.data("id")===i}),l=e.some(function(c){return c.data("id")===o});return!s||!l});this.options.eles=this.options.eles.not(r)}dc.prototype.run=function(){var t=this.options,e=t.cy,n=this;n.stopped=!1,(t.animate===!0||t.animate===!1)&&n.emit({type:"layoutstart",layout:n}),t.debug===!0?el=!0:el=!1;var r=ob(e,n,t);el&&lb(r),t.randomize&&ub(r);var a=hr(),i=function(){db(r,e,t),t.fit===!0&&e.fit(t.padding)},o=function(f){return!(n.stopped||f>=t.numIter||(fb(r,t),r.temperature=r.temperature*t.coolingFactor,r.temperature<t.minTemp))},s=function(){if(t.animate===!0||t.animate===!1)i(),n.one("layoutstop",t.stop),n.emit({type:"layoutstop",layout:n});else{var f=t.eles.nodes(),h=Zf(r,t,f);f.layoutPositions(n,t,h)}},l=0,c=!0;if(t.animate===!0){var u=function d(){for(var f=0;c&&f<t.refresh;)c=o(l),l++,f++;if(!c)_d(r,t),s();else{var h=hr();h-a>=t.animationThreshold&&i(),Is(d)}};u()}else{for(;c;)c=o(l),l++;_d(r,t),s()}return this};dc.prototype.stop=function(){return this.stopped=!0,this.thread&&this.thread.stop(),this.emit("layoutstop"),this};dc.prototype.destroy=function(){return this.thread&&this.thread.stop(),this};var ob=function(e,n,r){for(var a=r.eles.edges(),i=r.eles.nodes(),o=At(r.boundingBox?r.boundingBox:{x1:0,y1:0,w:e.width(),h:e.height()}),s={isCompound:e.hasCompoundNodes(),layoutNodes:[],idToIndex:{},nodeSize:i.size(),graphSet:[],indexToGraph:[],layoutEdges:[],edgeSize:a.size(),temperature:r.initialTemp,clientWidth:o.w,clientHeight:o.h,boundingBox:o},l=r.eles.components(),c={},u=0;u<l.length;u++)for(var d=l[u],f=0;f<d.length;f++){var h=d[f];c[h.id()]=u}for(var u=0;u<s.nodeSize;u++){var p=i[u],m=p.layoutDimensions(r),_={};_.isLocked=p.locked(),_.id=p.data("id"),_.parentId=p.data("parent"),_.cmptId=c[p.id()],_.children=[],_.positionX=p.position("x"),_.positionY=p.position("y"),_.offsetX=0,_.offsetY=0,_.height=m.w,_.width=m.h,_.maxX=_.positionX+_.width/2,_.minX=_.positionX-_.width/2,_.maxY=_.positionY+_.height/2,_.minY=_.positionY-_.height/2,_.padLeft=parseFloat(p.style("padding")),_.padRight=parseFloat(p.style("padding")),_.padTop=parseFloat(p.style("padding")),_.padBottom=parseFloat(p.style("padding")),_.nodeRepulsion=wn(r.nodeRepulsion)?r.nodeRepulsion(p):r.nodeRepulsion,s.layoutNodes.push(_),s.idToIndex[_.id]=u}for(var g=[],P=0,y=-1,C=[],u=0;u<s.nodeSize;u++){var p=s.layoutNodes[u],E=p.parentId;E!=null?s.layoutNodes[s.idToIndex[E]].children.push(p.id):(g[++y]=p.id,C.push(p.id))}for(s.graphSet.push(C);P<=y;){var T=g[P++],B=s.idToIndex[T],h=s.layoutNodes[B],D=h.children;if(D.length>0){s.graphSet.push(D);for(var u=0;u<D.length;u++)g[++y]=D[u]}}for(var u=0;u<s.graphSet.length;u++)for(var k=s.graphSet[u],f=0;f<k.length;f++){var $=s.idToIndex[k[f]];s.indexToGraph[$]=u}for(var u=0;u<s.edgeSize;u++){var M=a[u],b={};b.id=M.data("id"),b.sourceId=M.data("source"),b.targetId=M.data("target");var x=wn(r.idealEdgeLength)?r.idealEdgeLength(M):r.idealEdgeLength,K=wn(r.edgeElasticity)?r.edgeElasticity(M):r.edgeElasticity,X=s.idToIndex[b.sourceId],v=s.idToIndex[b.targetId],A=s.indexToGraph[X],w=s.indexToGraph[v];if(A!=w){for(var O=sb(b.sourceId,b.targetId,s),N=s.graphSet[O],S=0,_=s.layoutNodes[X];N.indexOf(_.id)===-1;)_=s.layoutNodes[s.idToIndex[_.parentId]],S++;for(_=s.layoutNodes[v];N.indexOf(_.id)===-1;)_=s.layoutNodes[s.idToIndex[_.parentId]],S++;x*=S*r.nestingFactor}b.idealLength=x,b.elasticity=K,s.layoutEdges.push(b)}return s},sb=function(e,n,r){var a=cb(e,n,0,r);return 2>a.count?0:a.graph},cb=function t(e,n,r,a){var i=a.graphSet[r];if(-1<i.indexOf(e)&&-1<i.indexOf(n))return{count:2,graph:r};for(var o=0,s=0;s<i.length;s++){var l=i[s],c=a.idToIndex[l],u=a.layoutNodes[c].children;if(u.length!==0){var d=a.indexToGraph[a.idToIndex[u[0]]],f=t(e,n,d,a);if(f.count!==0)if(f.count===1){if(o++,o===2)break}else return f}}return{count:o,graph:r}},lb,ub=function(e,n){for(var r=e.clientWidth,a=e.clientHeight,i=0;i<e.nodeSize;i++){var o=e.layoutNodes[i];o.children.length===0&&!o.isLocked&&(o.positionX=Math.random()*r,o.positionY=Math.random()*a)}},Zf=function(e,n,r){var a=e.boundingBox,i={x1:1/0,x2:-1/0,y1:1/0,y2:-1/0};return n.boundingBox&&(r.forEach(function(o){var s=e.layoutNodes[e.idToIndex[o.data("id")]];i.x1=Math.min(i.x1,s.positionX),i.x2=Math.max(i.x2,s.positionX),i.y1=Math.min(i.y1,s.positionY),i.y2=Math.max(i.y2,s.positionY)}),i.w=i.x2-i.x1,i.h=i.y2-i.y1),function(o,s){var l=e.layoutNodes[e.idToIndex[o.data("id")]];if(n.boundingBox){var c=(l.positionX-i.x1)/i.w,u=(l.positionY-i.y1)/i.h;return{x:a.x1+c*a.w,y:a.y1+u*a.h}}else return{x:l.positionX,y:l.positionY}}},db=function(e,n,r){var a=r.layout,i=r.eles.nodes(),o=Zf(e,r,i);i.positions(o),e.ready!==!0&&(e.ready=!0,a.one("layoutready",r.ready),a.emit({type:"layoutready",layout:this}))},fb=function(e,n,r){hb(e,n),gb(e),_b(e,n),Pb(e),vb(e)},hb=function(e,n){for(var r=0;r<e.graphSet.length;r++)for(var a=e.graphSet[r],i=a.length,o=0;o<i;o++)for(var s=e.layoutNodes[e.idToIndex[a[o]]],l=o+1;l<i;l++){var c=e.layoutNodes[e.idToIndex[a[l]]];pb(s,c,e,n)}},gd=function(e){return-e+2*e*Math.random()},pb=function(e,n,r,a){var i=e.cmptId,o=n.cmptId;if(!(i!==o&&!r.isCompound)){var s=n.positionX-e.positionX,l=n.positionY-e.positionY,c=1;s===0&&l===0&&(s=gd(c),l=gd(c));var u=mb(e,n,s,l);if(u>0)var d=a.nodeOverlap*u,f=Math.sqrt(s*s+l*l),h=d*s/f,p=d*l/f;else var m=Vs(e,s,l),_=Vs(n,-1*s,-1*l),g=_.x-m.x,P=_.y-m.y,y=g*g+P*P,f=Math.sqrt(y),d=(e.nodeRepulsion+n.nodeRepulsion)/y,h=d*g/f,p=d*P/f;e.isLocked||(e.offsetX-=h,e.offsetY-=p),n.isLocked||(n.offsetX+=h,n.offsetY+=p)}},mb=function(e,n,r,a){if(r>0)var i=e.maxX-n.minX;else var i=n.maxX-e.minX;if(a>0)var o=e.maxY-n.minY;else var o=n.maxY-e.minY;return i>=0&&o>=0?Math.sqrt(i*i+o*o):0},Vs=function(e,n,r){var a=e.positionX,i=e.positionY,o=e.height||1,s=e.width||1,l=r/n,c=o/s,u={};return n===0&&0<r||n===0&&0>r?(u.x=a,u.y=i+o/2,u):0<n&&-1*c<=l&&l<=c?(u.x=a+s/2,u.y=i+s*r/2/n,u):0>n&&-1*c<=l&&l<=c?(u.x=a-s/2,u.y=i-s*r/2/n,u):0<r&&(l<=-1*c||l>=c)?(u.x=a+o*n/2/r,u.y=i+o/2,u):(0>r&&(l<=-1*c||l>=c)&&(u.x=a-o*n/2/r,u.y=i-o/2),u)},gb=function(e,n){for(var r=0;r<e.edgeSize;r++){var a=e.layoutEdges[r],i=e.idToIndex[a.sourceId],o=e.layoutNodes[i],s=e.idToIndex[a.targetId],l=e.layoutNodes[s],c=l.positionX-o.positionX,u=l.positionY-o.positionY;if(!(c===0&&u===0)){var d=Vs(o,c,u),f=Vs(l,-1*c,-1*u),h=f.x-d.x,p=f.y-d.y,m=Math.sqrt(h*h+p*p),_=Math.pow(a.idealLength-m,2)/a.elasticity;if(m!==0)var g=_*h/m,P=_*p/m;else var g=0,P=0;o.isLocked||(o.offsetX+=g,o.offsetY+=P),l.isLocked||(l.offsetX-=g,l.offsetY-=P)}}},_b=function(e,n){if(n.gravity!==0)for(var r=1,a=0;a<e.graphSet.length;a++){var i=e.graphSet[a],o=i.length;if(a===0)var s=e.clientHeight/2,l=e.clientWidth/2;else var c=e.layoutNodes[e.idToIndex[i[0]]],u=e.layoutNodes[e.idToIndex[c.parentId]],s=u.positionX,l=u.positionY;for(var d=0;d<o;d++){var f=e.layoutNodes[e.idToIndex[i[d]]];if(!f.isLocked){var h=s-f.positionX,p=l-f.positionY,m=Math.sqrt(h*h+p*p);if(m>r){var _=n.gravity*h/m,g=n.gravity*p/m;f.offsetX+=_,f.offsetY+=g}}}}},Pb=function(e,n){var r=[],a=0,i=-1;for(r.push.apply(r,e.graphSet[0]),i+=e.graphSet[0].length;a<=i;){var o=r[a++],s=e.idToIndex[o],l=e.layoutNodes[s],c=l.children;if(0<c.length&&!l.isLocked){for(var u=l.offsetX,d=l.offsetY,f=0;f<c.length;f++){var h=e.layoutNodes[e.idToIndex[c[f]]];h.offsetX+=u,h.offsetY+=d,r[++i]=c[f]}l.offsetX=0,l.offsetY=0}}},vb=function(e,n){for(var r=0;r<e.nodeSize;r++){var a=e.layoutNodes[r];0<a.children.length&&(a.maxX=void 0,a.minX=void 0,a.maxY=void 0,a.minY=void 0)}for(var r=0;r<e.nodeSize;r++){var a=e.layoutNodes[r];if(!(0<a.children.length||a.isLocked)){var i=bb(a.offsetX,a.offsetY,e.temperature);a.positionX+=i.x,a.positionY+=i.y,a.offsetX=0,a.offsetY=0,a.minX=a.positionX-a.width,a.maxX=a.positionX+a.width,a.minY=a.positionY-a.height,a.maxY=a.positionY+a.height,yb(a,e)}}for(var r=0;r<e.nodeSize;r++){var a=e.layoutNodes[r];0<a.children.length&&!a.isLocked&&(a.positionX=(a.maxX+a.minX)/2,a.positionY=(a.maxY+a.minY)/2,a.width=a.maxX-a.minX,a.height=a.maxY-a.minY)}},bb=function(e,n,r){var a=Math.sqrt(e*e+n*n);if(a>r)var i={x:r*e/a,y:r*n/a};else var i={x:e,y:n};return i},yb=function t(e,n){var r=e.parentId;if(r!=null){var a=n.layoutNodes[n.idToIndex[r]],i=!1;if((a.maxX==null||e.maxX+a.padRight>a.maxX)&&(a.maxX=e.maxX+a.padRight,i=!0),(a.minX==null||e.minX-a.padLeft<a.minX)&&(a.minX=e.minX-a.padLeft,i=!0),(a.maxY==null||e.maxY+a.padBottom>a.maxY)&&(a.maxY=e.maxY+a.padBottom,i=!0),(a.minY==null||e.minY-a.padTop<a.minY)&&(a.minY=e.minY-a.padTop,i=!0),i)return t(a,n)}},_d=function(e,n){for(var r=e.layoutNodes,a=[],i=0;i<r.length;i++){var o=r[i],s=o.cmptId,l=a[s]=a[s]||[];l.push(o)}for(var c=0,i=0;i<a.length;i++){var u=a[i];if(u){u.x1=1/0,u.x2=-1/0,u.y1=1/0,u.y2=-1/0;for(var d=0;d<u.length;d++){var f=u[d];u.x1=Math.min(u.x1,f.positionX-f.width/2),u.x2=Math.max(u.x2,f.positionX+f.width/2),u.y1=Math.min(u.y1,f.positionY-f.height/2),u.y2=Math.max(u.y2,f.positionY+f.height/2)}u.w=u.x2-u.x1,u.h=u.y2-u.y1,c+=u.w*u.h}}a.sort(function(P,y){return y.w*y.h-P.w*P.h});for(var h=0,p=0,m=0,_=0,g=Math.sqrt(c)*e.clientWidth/e.clientHeight,i=0;i<a.length;i++){var u=a[i];if(u){for(var d=0;d<u.length;d++){var f=u[d];f.isLocked||(f.positionX+=h-u.x1,f.positionY+=p-u.y1)}h+=u.w+n.componentSpacing,m+=u.w+n.componentSpacing,_=Math.max(_,u.h),m>g&&(p+=_+n.componentSpacing,h=0,m=0,_=0)}}},Xb={fit:!0,padding:30,boundingBox:void 0,avoidOverlap:!0,avoidOverlapPadding:10,nodeDimensionsIncludeLabels:!1,spacingFactor:void 0,condense:!1,rows:void 0,cols:void 0,position:function(e){},sort:void 0,animate:!1,animationDuration:500,animationEasing:void 0,animateFilter:function(e,n){return!0},ready:void 0,stop:void 0,transform:function(e,n){return n}};function Qf(t){this.options=Ve({},Xb,t)}Qf.prototype.run=function(){var t=this.options,e=t,n=t.cy,r=e.eles,a=r.nodes().not(":parent");e.sort&&(a=a.sort(e.sort));var i=At(e.boundingBox?e.boundingBox:{x1:0,y1:0,w:n.width(),h:n.height()});if(i.h===0||i.w===0)r.nodes().layoutPositions(this,e,function(q){return{x:i.x1,y:i.y1}});else{var o=a.size(),s=Math.sqrt(o*i.h/i.w),l=Math.round(s),c=Math.round(i.w/i.h*s),u=function(Y){if(Y==null)return Math.min(l,c);var ee=Math.min(l,c);ee==l?l=Y:c=Y},d=function(Y){if(Y==null)return Math.max(l,c);var ee=Math.max(l,c);ee==l?l=Y:c=Y},f=e.rows,h=e.cols!=null?e.cols:e.columns;if(f!=null&&h!=null)l=f,c=h;else if(f!=null&&h==null)l=f,c=Math.ceil(o/l);else if(f==null&&h!=null)c=h,l=Math.ceil(o/c);else if(c*l>o){var p=u(),m=d();(p-1)*m>=o?u(p-1):(m-1)*p>=o&&d(m-1)}else for(;c*l<o;){var _=u(),g=d();(g+1)*_>=o?d(g+1):u(_+1)}var P=i.w/c,y=i.h/l;if(e.condense&&(P=0,y=0),e.avoidOverlap)for(var C=0;C<a.length;C++){var E=a[C],T=E._private.position;(T.x==null||T.y==null)&&(T.x=0,T.y=0);var B=E.layoutDimensions(e),D=e.avoidOverlapPadding,k=B.w+D,$=B.h+D;P=Math.max(P,k),y=Math.max(y,$)}for(var M={},b=function(Y,ee){return!!M["c-"+Y+"-"+ee]},x=function(Y,ee){M["c-"+Y+"-"+ee]=!0},K=0,X=0,v=function(){X++,X>=c&&(X=0,K++)},A={},w=0;w<a.length;w++){var O=a[w],N=e.position(O);if(N&&(N.row!==void 0||N.col!==void 0)){var S={row:N.row,col:N.col};if(S.col===void 0)for(S.col=0;b(S.row,S.col);)S.col++;else if(S.row===void 0)for(S.row=0;b(S.row,S.col);)S.row++;A[O.id()]=S,x(S.row,S.col)}}var I=function(Y,ee){var Q,U;if(Y.locked()||Y.isParent())return!1;var J=A[Y.id()];if(J)Q=J.col*P+P/2+i.x1,U=J.row*y+y/2+i.y1;else{for(;b(K,X);)v();Q=X*P+P/2+i.x1,U=K*y+y/2+i.y1,x(K,X),v()}return{x:Q,y:U}};a.layoutPositions(this,e,I)}return this};var Kb={ready:function(){},stop:function(){}};function Ul(t){this.options=Ve({},Kb,t)}Ul.prototype.run=function(){var t=this.options,e=t.eles,n=this;return t.cy,n.emit("layoutstart"),e.nodes().positions(function(){return{x:0,y:0}}),n.one("layoutready",t.ready),n.emit("layoutready"),n.one("layoutstop",t.stop),n.emit("layoutstop"),this};Ul.prototype.stop=function(){return this};var xb={positions:void 0,zoom:void 0,pan:void 0,fit:!0,padding:30,spacingFactor:void 0,animate:!1,animationDuration:500,animationEasing:void 0,animateFilter:function(e,n){return!0},ready:void 0,stop:void 0,transform:function(e,n){return n}};function eh(t){this.options=Ve({},xb,t)}eh.prototype.run=function(){var t=this.options,e=t.eles,n=e.nodes(),r=wn(t.positions);function a(i){if(t.positions==null)return wg(i.position());if(r)return t.positions(i);var o=t.positions[i._private.data.id];return o??null}return n.layoutPositions(this,t,function(i,o){var s=a(i);return i.locked()||s==null?!1:s}),this};var Ab={fit:!0,padding:30,boundingBox:void 0,animate:!1,animationDuration:500,animationEasing:void 0,animateFilter:function(e,n){return!0},ready:void 0,stop:void 0,transform:function(e,n){return n}};function nh(t){this.options=Ve({},Ab,t)}nh.prototype.run=function(){var t=this.options,e=t.cy,n=t.eles,r=At(t.boundingBox?t.boundingBox:{x1:0,y1:0,w:e.width(),h:e.height()}),a=function(o,s){return{x:r.x1+Math.round(Math.random()*r.w),y:r.y1+Math.round(Math.random()*r.h)}};return n.nodes().layoutPositions(this,t,a),this};var Cb=[{name:"breadthfirst",impl:Hf},{name:"circle",impl:Gf},{name:"concentric",impl:Jf},{name:"cose",impl:dc},{name:"grid",impl:Qf},{name:"null",impl:Ul},{name:"preset",impl:eh},{name:"random",impl:nh}];function th(t){this.options=t,this.notifications=0}var Pd=function(){},vd=function(){throw new Error("A headless instance can not render images")};th.prototype={recalculateRenderedStyle:Pd,notify:function(){this.notifications++},init:Pd,isHeadless:function(){return!0},png:vd,jpg:vd};var Fl={};Fl.arrowShapeWidth=.3;Fl.registerArrowShapes=function(){var t=this.arrowShapes={},e=this,n=function(c,u,d,f,h,p,m){var _=h.x-d/2-m,g=h.x+d/2+m,P=h.y-d/2-m,y=h.y+d/2+m,C=_<=c&&c<=g&&P<=u&&u<=y;return C},r=function(c,u,d,f,h){var p=c*Math.cos(f)-u*Math.sin(f),m=c*Math.sin(f)+u*Math.cos(f),_=p*d,g=m*d,P=_+h.x,y=g+h.y;return{x:P,y}},a=function(c,u,d,f){for(var h=[],p=0;p<c.length;p+=2){var m=c[p],_=c[p+1];h.push(r(m,_,u,d,f))}return h},i=function(c){for(var u=[],d=0;d<c.length;d++){var f=c[d];u.push(f.x,f.y)}return u},o=function(c){return c.pstyle("width").pfValue*c.pstyle("arrow-scale").pfValue*2},s=function(c,u){ze(u)&&(u=t[u]),t[c]=Ve({name:c,points:[-.15,-.3,.15,-.3,.15,.3,-.15,.3],collide:function(f,h,p,m,_,g){var P=i(a(this.points,p+2*g,m,_)),y=xt(f,h,P);return y},roughCollide:n,draw:function(f,h,p,m){var _=a(this.points,h,p,m);e.arrowShapeImpl("polygon")(f,_)},spacing:function(f){return 0},gap:o},u)};s("none",{collide:Ls,roughCollide:Ls,draw:wl,spacing:Ou,gap:Ou}),s("triangle",{points:[-.15,-.3,0,0,.15,-.3]}),s("arrow","triangle"),s("triangle-backcurve",{points:t.triangle.points,controlPoint:[0,-.15],roughCollide:n,draw:function(c,u,d,f,h){var p=a(this.points,u,d,f),m=this.controlPoint,_=r(m[0],m[1],u,d,f);e.arrowShapeImpl(this.name)(c,p,_)},gap:function(c){return o(c)*.8}}),s("triangle-tee",{points:[0,0,.15,-.3,-.15,-.3,0,0],pointsTee:[-.15,-.4,-.15,-.5,.15,-.5,.15,-.4],collide:function(c,u,d,f,h,p,m){var _=i(a(this.points,d+2*m,f,h)),g=i(a(this.pointsTee,d+2*m,f,h)),P=xt(c,u,_)||xt(c,u,g);return P},draw:function(c,u,d,f,h){var p=a(this.points,u,d,f),m=a(this.pointsTee,u,d,f);e.arrowShapeImpl(this.name)(c,p,m)}}),s("circle-triangle",{radius:.15,pointsTr:[0,-.15,.15,-.45,-.15,-.45,0,-.15],collide:function(c,u,d,f,h,p,m){var _=h,g=Math.pow(_.x-c,2)+Math.pow(_.y-u,2)<=Math.pow((d+2*m)*this.radius,2),P=i(a(this.points,d+2*m,f,h));return xt(c,u,P)||g},draw:function(c,u,d,f,h){var p=a(this.pointsTr,u,d,f);e.arrowShapeImpl(this.name)(c,p,f.x,f.y,this.radius*u)},spacing:function(c){return e.getArrowWidth(c.pstyle("width").pfValue,c.pstyle("arrow-scale").value)*this.radius}}),s("triangle-cross",{points:[0,0,.15,-.3,-.15,-.3,0,0],baseCrossLinePts:[-.15,-.4,-.15,-.4,.15,-.4,.15,-.4],crossLinePts:function(c,u){var d=this.baseCrossLinePts.slice(),f=u/c,h=3,p=5;return d[h]=d[h]-f,d[p]=d[p]-f,d},collide:function(c,u,d,f,h,p,m){var _=i(a(this.points,d+2*m,f,h)),g=i(a(this.crossLinePts(d,p),d+2*m,f,h)),P=xt(c,u,_)||xt(c,u,g);return P},draw:function(c,u,d,f,h){var p=a(this.points,u,d,f),m=a(this.crossLinePts(u,h),u,d,f);e.arrowShapeImpl(this.name)(c,p,m)}}),s("vee",{points:[-.15,-.3,0,0,.15,-.3,0,-.15],gap:function(c){return o(c)*.525}}),s("circle",{radius:.15,collide:function(c,u,d,f,h,p,m){var _=h,g=Math.pow(_.x-c,2)+Math.pow(_.y-u,2)<=Math.pow((d+2*m)*this.radius,2);return g},draw:function(c,u,d,f,h){e.arrowShapeImpl(this.name)(c,f.x,f.y,this.radius*u)},spacing:function(c){return e.getArrowWidth(c.pstyle("width").pfValue,c.pstyle("arrow-scale").value)*this.radius}}),s("tee",{points:[-.15,0,-.15,-.1,.15,-.1,.15,0],spacing:function(c){return 1},gap:function(c){return 1}}),s("square",{points:[-.15,0,.15,0,.15,-.3,-.15,-.3]}),s("diamond",{points:[-.15,-.15,0,-.3,.15,-.15,0,0],gap:function(c){return c.pstyle("width").pfValue*c.pstyle("arrow-scale").value}}),s("chevron",{points:[0,0,-.15,-.15,-.1,-.2,0,-.1,.1,-.2,.15,-.15],gap:function(c){return .95*c.pstyle("width").pfValue*c.pstyle("arrow-scale").value}})};var ha={};ha.projectIntoViewport=function(t,e){var n=this.cy,r=this.findContainerClientCoords(),a=r[0],i=r[1],o=r[4],s=n.pan(),l=n.zoom(),c=((t-a)/o-s.x)/l,u=((e-i)/o-s.y)/l;return[c,u]};ha.findContainerClientCoords=function(){if(this.containerBB)return this.containerBB;var t=this.container,e=t.getBoundingClientRect(),n=this.cy.window().getComputedStyle(t),r=function(g){return parseFloat(n.getPropertyValue(g))},a={left:r("padding-left"),right:r("padding-right"),top:r("padding-top"),bottom:r("padding-bottom")},i={left:r("border-left-width"),right:r("border-right-width"),top:r("border-top-width"),bottom:r("border-bottom-width")},o=t.clientWidth,s=t.clientHeight,l=a.left+a.right,c=a.top+a.bottom,u=i.left+i.right,d=e.width/(o+u),f=o-l,h=s-c,p=e.left+a.left+i.left,m=e.top+a.top+i.top;return this.containerBB=[p,m,f,h,d]};ha.invalidateContainerClientCoordsCache=function(){this.containerBB=null};ha.findNearestElement=function(t,e,n,r){return this.findNearestElements(t,e,n,r)[0]};ha.findNearestElements=function(t,e,n,r){var a=this,i=this,o=i.getCachedZSortedEles(),s=[],l=i.cy.zoom(),c=i.cy.hasCompoundNodes(),u=(r?24:8)/l,d=(r?8:2)/l,f=(r?8:2)/l,h=1/0,p,m;n&&(o=o.interactive);function _(B,D){if(B.isNode()){if(m)return;m=B,s.push(B)}if(B.isEdge()&&(D==null||D<h))if(p){if(p.pstyle("z-compound-depth").value===B.pstyle("z-compound-depth").value&&p.pstyle("z-compound-depth").value===B.pstyle("z-compound-depth").value){for(var k=0;k<s.length;k++)if(s[k].isEdge()){s[k]=B,p=B,h=D??h;break}}}else s.push(B),p=B,h=D??h}function g(B){var D=B.outerWidth()+2*d,k=B.outerHeight()+2*d,$=D/2,M=k/2,b=B.position(),x=B.pstyle("corner-radius").value==="auto"?"auto":B.pstyle("corner-radius").pfValue,K=B._private.rscratch;if(b.x-$<=t&&t<=b.x+$&&b.y-M<=e&&e<=b.y+M){var X=i.nodeShapes[a.getNodeShape(B)];if(X.checkPoint(t,e,0,D,k,b.x,b.y,x,K))return _(B,0),!0}}function P(B){var D=B._private,k=D.rscratch,$=B.pstyle("width").pfValue,M=B.pstyle("arrow-scale").value,b=$/2+u,x=b*b,K=b*2,w=D.source,O=D.target,X;if(k.edgeType==="segments"||k.edgeType==="straight"||k.edgeType==="haystack"){for(var v=k.allpts,A=0;A+3<v.length;A+=2)if(Lg(t,e,v[A],v[A+1],v[A+2],v[A+3],K)&&x>(X=zg(t,e,v[A],v[A+1],v[A+2],v[A+3])))return _(B,X),!0}else if(k.edgeType==="bezier"||k.edgeType==="multibezier"||k.edgeType==="self"||k.edgeType==="compound"){for(var v=k.allpts,A=0;A+5<k.allpts.length;A+=4)if(Ug(t,e,v[A],v[A+1],v[A+2],v[A+3],v[A+4],v[A+5],K)&&x>(X=Yg(t,e,v[A],v[A+1],v[A+2],v[A+3],v[A+4],v[A+5])))return _(B,X),!0}for(var w=w||D.source,O=O||D.target,N=a.getArrowWidth($,M),S=[{name:"source",x:k.arrowStartX,y:k.arrowStartY,angle:k.srcArrowAngle},{name:"target",x:k.arrowEndX,y:k.arrowEndY,angle:k.tgtArrowAngle},{name:"mid-source",x:k.midX,y:k.midY,angle:k.midsrcArrowAngle},{name:"mid-target",x:k.midX,y:k.midY,angle:k.midtgtArrowAngle}],A=0;A<S.length;A++){var I=S[A],q=i.arrowShapes[B.pstyle(I.name+"-arrow-shape").value],Y=B.pstyle("width").pfValue;if(q.roughCollide(t,e,N,I.angle,{x:I.x,y:I.y},Y,u)&&q.collide(t,e,N,I.angle,{x:I.x,y:I.y},Y,u))return _(B),!0}c&&s.length>0&&(g(w),g(O))}function y(B,D,k){return jt(B,D,k)}function C(B,D){var k=B._private,$=f,M;D?M=D+"-":M="",B.boundingBox();var b=k.labelBounds[D||"main"],x=B.pstyle(M+"label").value,K=B.pstyle("text-events").strValue==="yes";if(!(!K||!x)){var X=y(k.rscratch,"labelX",D),v=y(k.rscratch,"labelY",D),A=y(k.rscratch,"labelAngle",D),w=B.pstyle(M+"text-margin-x").pfValue,O=B.pstyle(M+"text-margin-y").pfValue,N=b.x1-$-w,S=b.x2+$-w,I=b.y1-$-O,q=b.y2+$-O;if(A){var Y=Math.cos(A),ee=Math.sin(A),Q=function(ne,H){return ne=ne-X,H=H-v,{x:ne*Y-H*ee+X,y:ne*ee+H*Y+v}},U=Q(N,I),J=Q(N,q),F=Q(S,I),W=Q(S,q),L=[U.x+w,U.y+O,F.x+w,F.y+O,W.x+w,W.y+O,J.x+w,J.y+O];if(xt(t,e,L))return _(B),!0}else if(ti(b,t,e))return _(B),!0}}for(var E=o.length-1;E>=0;E--){var T=o[E];T.isNode()?g(T)||C(T):P(T)||C(T)||C(T,"source")||C(T,"target")}return s};ha.getAllInBox=function(t,e,n,r){var a=this.getCachedZSortedEles().interactive,i=[],o=Math.min(t,n),s=Math.max(t,n),l=Math.min(e,r),c=Math.max(e,r);t=o,n=s,e=l,r=c;for(var u=At({x1:t,y1:e,x2:n,y2:r}),d=0;d<a.length;d++){var f=a[d];if(f.isNode()){var h=f,p=h.boundingBox({includeNodes:!0,includeEdges:!1,includeLabels:!1});Bl(u,p)&&!df(p,u)&&i.push(h)}else{var m=f,_=m._private,g=_.rscratch;if(g.startX!=null&&g.startY!=null&&!ti(u,g.startX,g.startY)||g.endX!=null&&g.endY!=null&&!ti(u,g.endX,g.endY))continue;if(g.edgeType==="bezier"||g.edgeType==="multibezier"||g.edgeType==="self"||g.edgeType==="compound"||g.edgeType==="segments"||g.edgeType==="haystack"){for(var P=_.rstyle.bezierPts||_.rstyle.linePts||_.rstyle.haystackPts,y=!0,C=0;C<P.length;C++)if(!Ig(u,P[C])){y=!1;break}y&&i.push(m)}else(g.edgeType==="haystack"||g.edgeType==="straight")&&i.push(m)}}return i};var qs={};qs.calculateArrowAngles=function(t){var e=t._private.rscratch,n=e.edgeType==="haystack",r=e.edgeType==="bezier",a=e.edgeType==="multibezier",i=e.edgeType==="segments",o=e.edgeType==="compound",s=e.edgeType==="self",l,c,u,d,f,h,g,P;if(n?(u=e.haystackPts[0],d=e.haystackPts[1],f=e.haystackPts[2],h=e.haystackPts[3]):(u=e.arrowStartX,d=e.arrowStartY,f=e.arrowEndX,h=e.arrowEndY),g=e.midX,P=e.midY,i)l=u-e.segpts[0],c=d-e.segpts[1];else if(a||o||s||r){var p=e.allpts,m=Qn(p[0],p[2],p[4],.1),_=Qn(p[1],p[3],p[5],.1);l=u-m,c=d-_}else l=u-g,c=d-P;e.srcArrowAngle=_s(l,c);var g=e.midX,P=e.midY;if(n&&(g=(u+f)/2,P=(d+h)/2),l=f-u,c=h-d,i){var p=e.allpts;if(p.length/2%2===0){var y=p.length/2,C=y-2;l=p[y]-p[C],c=p[y+1]-p[C+1]}else if(e.isRound)l=e.midVector[1],c=-e.midVector[0];else{var y=p.length/2-1,C=y-2;l=p[y]-p[C],c=p[y+1]-p[C+1]}}else if(a||o||s){var p=e.allpts,E=e.ctrlpts,T,B,D,k;if(E.length/2%2===0){var $=p.length/2-1,M=$+2,b=M+2;T=Qn(p[$],p[M],p[b],0),B=Qn(p[$+1],p[M+1],p[b+1],0),D=Qn(p[$],p[M],p[b],1e-4),k=Qn(p[$+1],p[M+1],p[b+1],1e-4)}else{var M=p.length/2-1,$=M-2,b=M+2;T=Qn(p[$],p[M],p[b],.4999),B=Qn(p[$+1],p[M+1],p[b+1],.4999),D=Qn(p[$],p[M],p[b],.5),k=Qn(p[$+1],p[M+1],p[b+1],.5)}l=D-T,c=k-B}if(e.midtgtArrowAngle=_s(l,c),e.midDispX=l,e.midDispY=c,l*=-1,c*=-1,i){var p=e.allpts;if(p.length/2%2!==0){if(!e.isRound){var y=p.length/2-1,x=y+2;l=-(p[x]-p[y]),c=-(p[x+1]-p[y+1])}}}if(e.midsrcArrowAngle=_s(l,c),i)l=f-e.segpts[e.segpts.length-2],c=h-e.segpts[e.segpts.length-1];else if(a||o||s||r){var p=e.allpts,K=p.length,m=Qn(p[K-6],p[K-4],p[K-2],.9),_=Qn(p[K-5],p[K-3],p[K-1],.9);l=f-m,c=h-_}else l=f-g,c=h-P;e.tgtArrowAngle=_s(l,c)};qs.getArrowWidth=qs.getArrowHeight=function(t,e){var n=this.arrowWidthCache=this.arrowWidthCache||{},r=n[t+", "+e];return r||(r=Math.max(Math.pow(t*13.37,.9),29)*e,n[t+", "+e]=r,r)};var gl,_l,nr={},$t={},bd,yd,ia,Ns,fr,ea,aa,er,Va,Cs,rh,ah,Pl,vl,Xd,Kd=function(e,n,r){r.x=n.x-e.x,r.y=n.y-e.y,r.len=Math.sqrt(r.x*r.x+r.y*r.y),r.nx=r.x/r.len,r.ny=r.y/r.len,r.ang=Math.atan2(r.ny,r.nx)},Eb=function(e,n){n.x=e.x*-1,n.y=e.y*-1,n.nx=e.nx*-1,n.ny=e.ny*-1,n.ang=e.ang>0?-(Math.PI-e.ang):Math.PI+e.ang},wb=function(e,n,r,a,i){if(e!==Xd?Kd(n,e,nr):Eb($t,nr),Kd(n,r,$t),bd=nr.nx*$t.ny-nr.ny*$t.nx,yd=nr.nx*$t.nx-nr.ny*-$t.ny,fr=Math.asin(Math.max(-1,Math.min(1,bd))),Math.abs(fr)<1e-6){gl=n.x,_l=n.y,aa=Va=0;return}ia=1,Ns=!1,yd<0?fr<0?fr=Math.PI+fr:(fr=Math.PI-fr,ia=-1,Ns=!0):fr>0&&(ia=-1,Ns=!0),n.radius!==void 0?Va=n.radius:Va=a,ea=fr/2,Cs=Math.min(nr.len/2,$t.len/2),i?(er=Math.abs(Math.cos(ea)*Va/Math.sin(ea)),er>Cs?(er=Cs,aa=Math.abs(er*Math.sin(ea)/Math.cos(ea))):aa=Va):(er=Math.min(Cs,Va),aa=Math.abs(er*Math.sin(ea)/Math.cos(ea))),Pl=n.x+$t.nx*er,vl=n.y+$t.ny*er,gl=Pl-$t.ny*aa*ia,_l=vl+$t.nx*aa*ia,rh=n.x+nr.nx*er,ah=n.y+nr.ny*er,Xd=n};function ih(t,e){e.radius===0?t.lineTo(e.cx,e.cy):t.arc(e.cx,e.cy,e.radius,e.startAngle,e.endAngle,e.counterClockwise)}function jl(t,e,n,r){var a=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!0;return r===0||e.radius===0?{cx:e.x,cy:e.y,radius:0,startX:e.x,startY:e.y,stopX:e.x,stopY:e.y,startAngle:void 0,endAngle:void 0,counterClockwise:void 0}:(wb(t,e,n,r,a),{cx:gl,cy:_l,radius:aa,startX:rh,startY:ah,stopX:Pl,stopY:vl,startAngle:nr.ang+Math.PI/2*ia,endAngle:$t.ang-Math.PI/2*ia,counterClockwise:Ns})}var pt={};pt.findMidptPtsEtc=function(t,e){var n=e.posPts,r=e.intersectionPts,a=e.vectorNormInverse,i,o=t.pstyle("source-endpoint"),s=t.pstyle("target-endpoint"),l=o.units!=null&&s.units!=null,c=function(E,T,B,D){var k=D-T,$=B-E,M=Math.sqrt($*$+k*k);return{x:-k/M,y:$/M}},u=t.pstyle("edge-distances").value;switch(u){case"node-position":i=n;break;case"intersection":i=r;break;case"endpoints":{if(l){var d=this.manualEndptToPx(t.source()[0],o),f=Rn(d,2),h=f[0],p=f[1],m=this.manualEndptToPx(t.target()[0],s),_=Rn(m,2),g=_[0],P=_[1],y={x1:h,y1:p,x2:g,y2:P};a=c(h,p,g,P),i=y}else pn("Edge ".concat(t.id()," has edge-distances:endpoints specified without manual endpoints specified via source-endpoint and target-endpoint.  Falling back on edge-distances:intersection (default).")),i=r;break}}return{midptPts:i,vectorNormInverse:a}};pt.findHaystackPoints=function(t){for(var e=0;e<t.length;e++){var n=t[e],r=n._private,a=r.rscratch;if(!a.haystack){var i=Math.random()*2*Math.PI;a.source={x:Math.cos(i),y:Math.sin(i)},i=Math.random()*2*Math.PI,a.target={x:Math.cos(i),y:Math.sin(i)}}var o=r.source,s=r.target,l=o.position(),c=s.position(),u=o.width(),d=s.width(),f=o.height(),h=s.height(),p=n.pstyle("haystack-radius").value,m=p/2;a.haystackPts=a.allpts=[a.source.x*u*m+l.x,a.source.y*f*m+l.y,a.target.x*d*m+c.x,a.target.y*h*m+c.y],a.midX=(a.allpts[0]+a.allpts[2])/2,a.midY=(a.allpts[1]+a.allpts[3])/2,a.edgeType="haystack",a.haystack=!0,this.storeEdgeProjections(n),this.calculateArrowAngles(n),this.recalculateEdgeLabelProjections(n),this.calculateLabelAngles(n)}};pt.findSegmentsPoints=function(t,e){var n=t._private.rscratch,r=t.pstyle("segment-weights"),a=t.pstyle("segment-distances"),i=t.pstyle("segment-radii"),o=t.pstyle("radius-type"),s=Math.min(r.pfValue.length,a.pfValue.length),l=i.pfValue[i.pfValue.length-1],c=o.pfValue[o.pfValue.length-1];n.edgeType="segments",n.segpts=[],n.radii=[],n.isArcRadius=[];for(var u=0;u<s;u++){var d=r.pfValue[u],f=a.pfValue[u],h=1-d,p=d,m=this.findMidptPtsEtc(t,e),_=m.midptPts,g=m.vectorNormInverse,P={x:_.x1*h+_.x2*p,y:_.y1*h+_.y2*p};n.segpts.push(P.x+g.x*f,P.y+g.y*f),n.radii.push(i.pfValue[u]!==void 0?i.pfValue[u]:l),n.isArcRadius.push((o.pfValue[u]!==void 0?o.pfValue[u]:c)==="arc-radius")}};pt.findLoopPoints=function(t,e,n,r){var a=t._private.rscratch,i=e.dirCounts,o=e.srcPos,s=t.pstyle("control-point-distances"),l=s?s.pfValue[0]:void 0,c=t.pstyle("loop-direction").pfValue,u=t.pstyle("loop-sweep").pfValue,d=t.pstyle("control-point-step-size").pfValue;a.edgeType="self";var f=n,h=d;r&&(f=0,h=l);var p=c-Math.PI/2,m=p-u/2,_=p+u/2,g=c+"_"+u;f=i[g]===void 0?i[g]=0:++i[g],a.ctrlpts=[o.x+Math.cos(m)*1.4*h*(f/3+1),o.y+Math.sin(m)*1.4*h*(f/3+1),o.x+Math.cos(_)*1.4*h*(f/3+1),o.y+Math.sin(_)*1.4*h*(f/3+1)]};pt.findCompoundLoopPoints=function(t,e,n,r){var a=t._private.rscratch;a.edgeType="compound";var i=e.srcPos,o=e.tgtPos,s=e.srcW,l=e.srcH,c=e.tgtW,u=e.tgtH,d=t.pstyle("control-point-step-size").pfValue,f=t.pstyle("control-point-distances"),h=f?f.pfValue[0]:void 0,p=n,m=d;r&&(p=0,m=h);var _=50,g={x:i.x-s/2,y:i.y-l/2},P={x:o.x-c/2,y:o.y-u/2},y={x:Math.min(g.x,P.x),y:Math.min(g.y,P.y)},C=.5,E=Math.max(C,Math.log(s*.01)),T=Math.max(C,Math.log(c*.01));a.ctrlpts=[y.x,y.y-(1+Math.pow(_,1.12)/100)*m*(p/3+1)*E,y.x-(1+Math.pow(_,1.12)/100)*m*(p/3+1)*T,y.y]};pt.findStraightEdgePoints=function(t){t._private.rscratch.edgeType="straight"};pt.findBezierPoints=function(t,e,n,r,a){var i=t._private.rscratch,o=t.pstyle("control-point-step-size").pfValue,s=t.pstyle("control-point-distances"),l=t.pstyle("control-point-weights"),c=s&&l?Math.min(s.value.length,l.value.length):1,u=s?s.pfValue[0]:void 0,d=l.value[0],f=r;i.edgeType=f?"multibezier":"bezier",i.ctrlpts=[];for(var h=0;h<c;h++){var p=(.5-e.eles.length/2+n)*o*(a?-1:1),m=void 0,_=lf(p);f&&(u=s?s.pfValue[h]:o,d=l.value[h]),r?m=u:m=u!==void 0?_*u:void 0;var g=m!==void 0?m:p,P=1-d,y=d,C=this.findMidptPtsEtc(t,e),E=C.midptPts,T=C.vectorNormInverse,B={x:E.x1*P+E.x2*y,y:E.y1*P+E.y2*y};i.ctrlpts.push(B.x+T.x*g,B.y+T.y*g)}};pt.findTaxiPoints=function(t,e){var n=t._private.rscratch;n.edgeType="segments";var r="vertical",a="horizontal",i="leftward",o="rightward",s="downward",l="upward",c="auto",u=e.posPts,d=e.srcW,f=e.srcH,h=e.tgtW,p=e.tgtH,m=t.pstyle("edge-distances").value,_=m!=="node-position",g=t.pstyle("taxi-direction").value,P=g,y=t.pstyle("taxi-turn"),C=y.units==="%",E=y.pfValue,T=E<0,B=t.pstyle("taxi-turn-min-distance").pfValue,D=_?(d+h)/2:0,k=_?(f+p)/2:0,$=u.x2-u.x1,M=u.y2-u.y1,b=function(re,se){return re>0?Math.max(re-se,0):Math.min(re+se,0)},x=b($,D),K=b(M,k),X=!1;P===c?g=Math.abs(x)>Math.abs(K)?a:r:P===l||P===s?(g=r,X=!0):(P===i||P===o)&&(g=a,X=!0);var v=g===r,A=v?K:x,w=v?M:$,O=lf(w),N=!1;!(X&&(C||T))&&(P===s&&w<0||P===l&&w>0||P===i&&w>0||P===o&&w<0)&&(O*=-1,A=O*Math.abs(A),N=!0);var S;if(C){var I=E<0?1+E:E;S=I*A}else{var q=E<0?A:0;S=q+E*O}var Y=function(re){return Math.abs(re)<B||Math.abs(re)>=Math.abs(A)},ee=Y(S),Q=Y(Math.abs(A)-Math.abs(S)),U=ee||Q;if(U&&!N)if(v){var J=Math.abs(w)<=f/2,F=Math.abs($)<=h/2;if(J){var W=(u.x1+u.x2)/2,L=u.y1,z=u.y2;n.segpts=[W,L,W,z]}else if(F){var ne=(u.y1+u.y2)/2,H=u.x1,_e=u.x2;n.segpts=[H,ne,_e,ne]}else n.segpts=[u.x1,u.y2]}else{var Ae=Math.abs(w)<=d/2,he=Math.abs(M)<=p/2;if(Ae){var le=(u.y1+u.y2)/2,de=u.x1,Pe=u.x2;n.segpts=[de,le,Pe,le]}else if(he){var Ce=(u.x1+u.x2)/2,Xe=u.y1,ve=u.y2;n.segpts=[Ce,Xe,Ce,ve]}else n.segpts=[u.x2,u.y1]}else if(v){var xe=u.y1+S+(_?f/2*O:0),ye=u.x1,fe=u.x2;n.segpts=[ye,xe,fe,xe]}else{var R=u.x1+S+(_?d/2*O:0),te=u.y1,ce=u.y2;n.segpts=[R,te,R,ce]}if(n.isRound){var V=t.pstyle("taxi-radius").value,Z=t.pstyle("radius-type").value[0]==="arc-radius";n.radii=new Array(n.segpts.length/2).fill(V),n.isArcRadius=new Array(n.segpts.length/2).fill(Z)}};pt.tryToCorrectInvalidPoints=function(t,e){var n=t._private.rscratch;if(n.edgeType==="bezier"){var r=e.srcPos,a=e.tgtPos,i=e.srcW,o=e.srcH,s=e.tgtW,l=e.tgtH,c=e.srcShape,u=e.tgtShape,d=e.srcCornerRadius,f=e.tgtCornerRadius,h=e.srcRs,p=e.tgtRs,m=!Se(n.startX)||!Se(n.startY),_=!Se(n.arrowStartX)||!Se(n.arrowStartY),g=!Se(n.endX)||!Se(n.endY),P=!Se(n.arrowEndX)||!Se(n.arrowEndY),y=3,C=this.getArrowWidth(t.pstyle("width").pfValue,t.pstyle("arrow-scale").value)*this.arrowShapeWidth,E=y*C,T=ca({x:n.ctrlpts[0],y:n.ctrlpts[1]},{x:n.startX,y:n.startY}),B=T<E,D=ca({x:n.ctrlpts[0],y:n.ctrlpts[1]},{x:n.endX,y:n.endY}),k=D<E,$=!1;if(m||_||B){$=!0;var M={x:n.ctrlpts[0]-r.x,y:n.ctrlpts[1]-r.y},b=Math.sqrt(M.x*M.x+M.y*M.y),x={x:M.x/b,y:M.y/b},K=Math.max(i,o),X={x:n.ctrlpts[0]+x.x*2*K,y:n.ctrlpts[1]+x.y*2*K},v=c.intersectLine(r.x,r.y,i,o,X.x,X.y,0,d,h);B?(n.ctrlpts[0]=n.ctrlpts[0]+x.x*(E-T),n.ctrlpts[1]=n.ctrlpts[1]+x.y*(E-T)):(n.ctrlpts[0]=v[0]+x.x*E,n.ctrlpts[1]=v[1]+x.y*E)}if(g||P||k){$=!0;var A={x:n.ctrlpts[0]-a.x,y:n.ctrlpts[1]-a.y},w=Math.sqrt(A.x*A.x+A.y*A.y),O={x:A.x/w,y:A.y/w},N=Math.max(i,o),S={x:n.ctrlpts[0]+O.x*2*N,y:n.ctrlpts[1]+O.y*2*N},I=u.intersectLine(a.x,a.y,s,l,S.x,S.y,0,f,p);k?(n.ctrlpts[0]=n.ctrlpts[0]+O.x*(E-D),n.ctrlpts[1]=n.ctrlpts[1]+O.y*(E-D)):(n.ctrlpts[0]=I[0]+O.x*E,n.ctrlpts[1]=I[1]+O.y*E)}$&&this.findEndpoints(t)}};pt.storeAllpts=function(t){var e=t._private.rscratch;if(e.edgeType==="multibezier"||e.edgeType==="bezier"||e.edgeType==="self"||e.edgeType==="compound"){e.allpts=[],e.allpts.push(e.startX,e.startY);for(var n=0;n+1<e.ctrlpts.length;n+=2)e.allpts.push(e.ctrlpts[n],e.ctrlpts[n+1]),n+3<e.ctrlpts.length&&e.allpts.push((e.ctrlpts[n]+e.ctrlpts[n+2])/2,(e.ctrlpts[n+1]+e.ctrlpts[n+3])/2);e.allpts.push(e.endX,e.endY);var r,a;e.ctrlpts.length/2%2===0?(r=e.allpts.length/2-1,e.midX=e.allpts[r],e.midY=e.allpts[r+1]):(r=e.allpts.length/2-3,a=.5,e.midX=Qn(e.allpts[r],e.allpts[r+2],e.allpts[r+4],a),e.midY=Qn(e.allpts[r+1],e.allpts[r+3],e.allpts[r+5],a))}else if(e.edgeType==="straight")e.allpts=[e.startX,e.startY,e.endX,e.endY],e.midX=(e.startX+e.endX+e.arrowStartX+e.arrowEndX)/4,e.midY=(e.startY+e.endY+e.arrowStartY+e.arrowEndY)/4;else if(e.edgeType==="segments"){if(e.allpts=[],e.allpts.push(e.startX,e.startY),e.allpts.push.apply(e.allpts,e.segpts),e.allpts.push(e.endX,e.endY),e.isRound){e.roundCorners=[];for(var i=2;i+3<e.allpts.length;i+=2){var o=e.radii[i/2-1],s=e.isArcRadius[i/2-1];e.roundCorners.push(jl({x:e.allpts[i-2],y:e.allpts[i-1]},{x:e.allpts[i],y:e.allpts[i+1],radius:o},{x:e.allpts[i+2],y:e.allpts[i+3]},o,s))}}if(e.segpts.length%4===0){var l=e.segpts.length/2,c=l-2;e.midX=(e.segpts[c]+e.segpts[l])/2,e.midY=(e.segpts[c+1]+e.segpts[l+1])/2}else{var u=e.segpts.length/2-1;if(!e.isRound)e.midX=e.segpts[u],e.midY=e.segpts[u+1];else{var d={x:e.segpts[u],y:e.segpts[u+1]},f=e.roundCorners[u/2],h=[d.x-f.cx,d.y-f.cy],p=f.radius/Math.sqrt(Math.pow(h[0],2)+Math.pow(h[1],2));h=h.map(function(m){return m*p}),e.midX=f.cx+h[0],e.midY=f.cy+h[1],e.midVector=h}}}};pt.checkForInvalidEdgeWarning=function(t){var e=t[0]._private.rscratch;e.nodesOverlap||Se(e.startX)&&Se(e.startY)&&Se(e.endX)&&Se(e.endY)?e.loggedErr=!1:e.loggedErr||(e.loggedErr=!0,pn("Edge `"+t.id()+"` has invalid endpoints and so it is impossible to draw.  Adjust your edge style (e.g. control points) accordingly or use an alternative edge type.  This is expected behaviour when the source node and the target node overlap."))};pt.findEdgeControlPoints=function(t){var e=this;if(!(!t||t.length===0)){for(var n=this,r=n.cy,a=r.hasCompoundNodes(),i={map:new rr,get:function(B){var D=this.map.get(B[0]);return D!=null?D.get(B[1]):null},set:function(B,D){var k=this.map.get(B[0]);k==null&&(k=new rr,this.map.set(B[0],k)),k.set(B[1],D)}},o=[],s=[],l=0;l<t.length;l++){var c=t[l],u=c._private,d=c.pstyle("curve-style").value;if(!(c.removed()||!c.takesUpSpace())){if(d==="haystack"){s.push(c);continue}var f=d==="unbundled-bezier"||d.endsWith("segments")||d==="straight"||d==="straight-triangle"||d.endsWith("taxi"),h=d==="unbundled-bezier"||d==="bezier",p=u.source,m=u.target,_=p.poolIndex(),g=m.poolIndex(),P=[_,g].sort(),y=i.get(P);y==null&&(y={eles:[]},i.set(P,y),o.push(P)),y.eles.push(c),f&&(y.hasUnbundled=!0),h&&(y.hasBezier=!0)}}for(var C=function(B){var D=o[B],k=i.get(D),$=void 0;if(!k.hasUnbundled){var M=k.eles[0].parallelEdges().filter(function(R){return R.isBundledBezier()});Ol(k.eles),M.forEach(function(R){return k.eles.push(R)}),k.eles.sort(function(R,te){return R.poolIndex()-te.poolIndex()})}var b=k.eles[0],x=b.source(),K=b.target();if(x.poolIndex()>K.poolIndex()){var X=x;x=K,K=X}var v=k.srcPos=x.position(),A=k.tgtPos=K.position(),w=k.srcW=x.outerWidth(),O=k.srcH=x.outerHeight(),N=k.tgtW=K.outerWidth(),S=k.tgtH=K.outerHeight(),I=k.srcShape=n.nodeShapes[e.getNodeShape(x)],q=k.tgtShape=n.nodeShapes[e.getNodeShape(K)],Y=k.srcCornerRadius=x.pstyle("corner-radius").value==="auto"?"auto":x.pstyle("corner-radius").pfValue,ee=k.tgtCornerRadius=K.pstyle("corner-radius").value==="auto"?"auto":K.pstyle("corner-radius").pfValue,Q=k.tgtRs=K._private.rscratch,U=k.srcRs=x._private.rscratch;k.dirCounts={north:0,west:0,south:0,east:0,northwest:0,southwest:0,northeast:0,southeast:0};for(var J=0;J<k.eles.length;J++){var F=k.eles[J],W=F[0]._private.rscratch,L=F.pstyle("curve-style").value,z=L==="unbundled-bezier"||L.endsWith("segments")||L.endsWith("taxi"),ne=!x.same(F.source());if(!k.calculatedIntersection&&x!==K&&(k.hasBezier||k.hasUnbundled)){k.calculatedIntersection=!0;var H=I.intersectLine(v.x,v.y,w,O,A.x,A.y,0,Y,U),_e=k.srcIntn=H,Ae=q.intersectLine(A.x,A.y,N,S,v.x,v.y,0,ee,Q),he=k.tgtIntn=Ae,le=k.intersectionPts={x1:H[0],x2:Ae[0],y1:H[1],y2:Ae[1]},de=k.posPts={x1:v.x,x2:A.x,y1:v.y,y2:A.y},Pe=Ae[1]-H[1],Ce=Ae[0]-H[0],Xe=Math.sqrt(Ce*Ce+Pe*Pe),ve=k.vector={x:Ce,y:Pe},xe=k.vectorNorm={x:ve.x/Xe,y:ve.y/Xe},ye={x:-xe.y,y:xe.x};k.nodesOverlap=!Se(Xe)||q.checkPoint(H[0],H[1],0,N,S,A.x,A.y,ee,Q)||I.checkPoint(Ae[0],Ae[1],0,w,O,v.x,v.y,Y,U),k.vectorNormInverse=ye,$={nodesOverlap:k.nodesOverlap,dirCounts:k.dirCounts,calculatedIntersection:!0,hasBezier:k.hasBezier,hasUnbundled:k.hasUnbundled,eles:k.eles,srcPos:A,srcRs:Q,tgtPos:v,tgtRs:U,srcW:N,srcH:S,tgtW:w,tgtH:O,srcIntn:he,tgtIntn:_e,srcShape:q,tgtShape:I,posPts:{x1:de.x2,y1:de.y2,x2:de.x1,y2:de.y1},intersectionPts:{x1:le.x2,y1:le.y2,x2:le.x1,y2:le.y1},vector:{x:-ve.x,y:-ve.y},vectorNorm:{x:-xe.x,y:-xe.y},vectorNormInverse:{x:-ye.x,y:-ye.y}}}var fe=ne?$:k;W.nodesOverlap=fe.nodesOverlap,W.srcIntn=fe.srcIntn,W.tgtIntn=fe.tgtIntn,W.isRound=L.startsWith("round"),a&&(x.isParent()||x.isChild()||K.isParent()||K.isChild())&&(x.parents().anySame(K)||K.parents().anySame(x)||x.same(K)&&x.isParent())?e.findCompoundLoopPoints(F,fe,J,z):x===K?e.findLoopPoints(F,fe,J,z):L.endsWith("segments")?e.findSegmentsPoints(F,fe):L.endsWith("taxi")?e.findTaxiPoints(F,fe):L==="straight"||!z&&k.eles.length%2===1&&J===Math.floor(k.eles.length/2)?e.findStraightEdgePoints(F):e.findBezierPoints(F,fe,J,z,ne),e.findEndpoints(F),e.tryToCorrectInvalidPoints(F,fe),e.checkForInvalidEdgeWarning(F),e.storeAllpts(F),e.storeEdgeProjections(F),e.calculateArrowAngles(F),e.recalculateEdgeLabelProjections(F),e.calculateLabelAngles(F)}},E=0;E<o.length;E++)C(E);this.findHaystackPoints(s)}};function oh(t){var e=[];if(t!=null){for(var n=0;n<t.length;n+=2){var r=t[n],a=t[n+1];e.push({x:r,y:a})}return e}}pt.getSegmentPoints=function(t){var e=t[0]._private.rscratch;this.recalculateRenderedStyle(t);var n=e.edgeType;if(n==="segments")return oh(e.segpts)};pt.getControlPoints=function(t){var e=t[0]._private.rscratch;this.recalculateRenderedStyle(t);var n=e.edgeType;if(n==="bezier"||n==="multibezier"||n==="self"||n==="compound")return oh(e.ctrlpts)};pt.getEdgeMidpoint=function(t){var e=t[0]._private.rscratch;return this.recalculateRenderedStyle(t),{x:e.midX,y:e.midY}};var so={};so.manualEndptToPx=function(t,e){var n=this,r=t.position(),a=t.outerWidth(),i=t.outerHeight(),o=t._private.rscratch;if(e.value.length===2){var s=[e.pfValue[0],e.pfValue[1]];return e.units[0]==="%"&&(s[0]=s[0]*a),e.units[1]==="%"&&(s[1]=s[1]*i),s[0]+=r.x,s[1]+=r.y,s}else{var l=e.pfValue[0];l=-Math.PI/2+l;var c=2*Math.max(a,i),u=[r.x+Math.cos(l)*c,r.y+Math.sin(l)*c];return n.nodeShapes[this.getNodeShape(t)].intersectLine(r.x,r.y,a,i,u[0],u[1],0,t.pstyle("corner-radius").value==="auto"?"auto":t.pstyle("corner-radius").pfValue,o)}};so.findEndpoints=function(t){var e=this,n,r=t.source()[0],a=t.target()[0],i=r.position(),o=a.position(),s=t.pstyle("target-arrow-shape").value,l=t.pstyle("source-arrow-shape").value,c=t.pstyle("target-distance-from-node").pfValue,u=t.pstyle("source-distance-from-node").pfValue,d=r._private.rscratch,f=a._private.rscratch,h=t.pstyle("curve-style").value,p=t._private.rscratch,m=p.edgeType,_=h==="taxi",g=m==="self"||m==="compound",P=m==="bezier"||m==="multibezier"||g,y=m!=="bezier",C=m==="straight"||m==="segments",E=m==="segments",T=P||y||C,B=g||_,D=t.pstyle("source-endpoint"),k=B?"outside-to-node":D.value,$=r.pstyle("corner-radius").value==="auto"?"auto":r.pstyle("corner-radius").pfValue,M=t.pstyle("target-endpoint"),b=B?"outside-to-node":M.value,x=a.pstyle("corner-radius").value==="auto"?"auto":a.pstyle("corner-radius").pfValue;p.srcManEndpt=D,p.tgtManEndpt=M;var K,X,v,A;if(P){var w=[p.ctrlpts[0],p.ctrlpts[1]],O=y?[p.ctrlpts[p.ctrlpts.length-2],p.ctrlpts[p.ctrlpts.length-1]]:w;K=O,X=w}else if(C){var N=E?p.segpts.slice(0,2):[o.x,o.y],S=E?p.segpts.slice(p.segpts.length-2):[i.x,i.y];K=S,X=N}if(b==="inside-to-node")n=[o.x,o.y];else if(M.units)n=this.manualEndptToPx(a,M);else if(b==="outside-to-line")n=p.tgtIntn;else if(b==="outside-to-node"||b==="outside-to-node-or-label"?v=K:(b==="outside-to-line"||b==="outside-to-line-or-label")&&(v=[i.x,i.y]),n=e.nodeShapes[this.getNodeShape(a)].intersectLine(o.x,o.y,a.outerWidth(),a.outerHeight(),v[0],v[1],0,x,f),b==="outside-to-node-or-label"||b==="outside-to-line-or-label"){var I=a._private.rscratch,q=I.labelWidth,Y=I.labelHeight,ee=I.labelX,Q=I.labelY,U=q/2,J=Y/2,F=a.pstyle("text-valign").value;F==="top"?Q-=J:F==="bottom"&&(Q+=J);var W=a.pstyle("text-halign").value;W==="left"?ee-=U:W==="right"&&(ee+=U);var L=qi(v[0],v[1],[ee-U,Q-J,ee+U,Q-J,ee+U,Q+J,ee-U,Q+J],o.x,o.y);if(L.length>0){var z=i,ne=ta(z,Ha(n)),H=ta(z,Ha(L)),_e=ne;if(H<ne&&(n=L,_e=H),L.length>2){var Ae=ta(z,{x:L[2],y:L[3]});Ae<_e&&(n=[L[2],L[3]])}}}var he=Ps(n,K,e.arrowShapes[s].spacing(t)+c),le=Ps(n,K,e.arrowShapes[s].gap(t)+c);if(p.endX=le[0],p.endY=le[1],p.arrowEndX=he[0],p.arrowEndY=he[1],k==="inside-to-node")n=[i.x,i.y];else if(D.units)n=this.manualEndptToPx(r,D);else if(k==="outside-to-line")n=p.srcIntn;else if(k==="outside-to-node"||k==="outside-to-node-or-label"?A=X:(k==="outside-to-line"||k==="outside-to-line-or-label")&&(A=[o.x,o.y]),n=e.nodeShapes[this.getNodeShape(r)].intersectLine(i.x,i.y,r.outerWidth(),r.outerHeight(),A[0],A[1],0,$,d),k==="outside-to-node-or-label"||k==="outside-to-line-or-label"){var de=r._private.rscratch,Pe=de.labelWidth,Ce=de.labelHeight,Xe=de.labelX,ve=de.labelY,xe=Pe/2,ye=Ce/2,fe=r.pstyle("text-valign").value;fe==="top"?ve-=ye:fe==="bottom"&&(ve+=ye);var R=r.pstyle("text-halign").value;R==="left"?Xe-=xe:R==="right"&&(Xe+=xe);var te=qi(A[0],A[1],[Xe-xe,ve-ye,Xe+xe,ve-ye,Xe+xe,ve+ye,Xe-xe,ve+ye],i.x,i.y);if(te.length>0){var ce=o,V=ta(ce,Ha(n)),Z=ta(ce,Ha(te)),oe=V;if(Z<V&&(n=[te[0],te[1]],oe=Z),te.length>2){var re=ta(ce,{x:te[2],y:te[3]});re<oe&&(n=[te[2],te[3]])}}}var se=Ps(n,X,e.arrowShapes[l].spacing(t)+u),pe=Ps(n,X,e.arrowShapes[l].gap(t)+u);p.startX=pe[0],p.startY=pe[1],p.arrowStartX=se[0],p.arrowStartY=se[1],T&&(!Se(p.startX)||!Se(p.startY)||!Se(p.endX)||!Se(p.endY)?p.badLine=!0:p.badLine=!1)};so.getSourceEndpoint=function(t){var e=t[0]._private.rscratch;switch(this.recalculateRenderedStyle(t),e.edgeType){case"haystack":return{x:e.haystackPts[0],y:e.haystackPts[1]};default:return{x:e.arrowStartX,y:e.arrowStartY}}};so.getTargetEndpoint=function(t){var e=t[0]._private.rscratch;switch(this.recalculateRenderedStyle(t),e.edgeType){case"haystack":return{x:e.haystackPts[2],y:e.haystackPts[3]};default:return{x:e.arrowEndX,y:e.arrowEndY}}};var Yl={};function Ob(t,e,n){for(var r=function(c,u,d,f){return Qn(c,u,d,f)},a=e._private,i=a.rstyle.bezierPts,o=0;o<t.bezierProjPcts.length;o++){var s=t.bezierProjPcts[o];i.push({x:r(n[0],n[2],n[4],s),y:r(n[1],n[3],n[5],s)})}}Yl.storeEdgeProjections=function(t){var e=t._private,n=e.rscratch,r=n.edgeType;if(e.rstyle.bezierPts=null,e.rstyle.linePts=null,e.rstyle.haystackPts=null,r==="multibezier"||r==="bezier"||r==="self"||r==="compound"){e.rstyle.bezierPts=[];for(var a=0;a+5<n.allpts.length;a+=4)Ob(this,t,n.allpts.slice(a,a+6))}else if(r==="segments")for(var i=e.rstyle.linePts=[],a=0;a+1<n.allpts.length;a+=2)i.push({x:n.allpts[a],y:n.allpts[a+1]});else if(r==="haystack"){var o=n.haystackPts;e.rstyle.haystackPts=[{x:o[0],y:o[1]},{x:o[2],y:o[3]}]}e.rstyle.arrowWidth=this.getArrowWidth(t.pstyle("width").pfValue,t.pstyle("arrow-scale").value)*this.arrowShapeWidth};Yl.recalculateEdgeProjections=function(t){this.findEdgeControlPoints(t)};var ir={};ir.recalculateNodeLabelProjection=function(t){var e=t.pstyle("label").strValue;if(!Rr(e)){var n,r,a=t._private,i=t.width(),o=t.height(),s=t.padding(),l=t.position(),c=t.pstyle("text-halign").strValue,u=t.pstyle("text-valign").strValue,d=a.rscratch,f=a.rstyle;switch(c){case"left":n=l.x-i/2-s;break;case"right":n=l.x+i/2+s;break;default:n=l.x}switch(u){case"top":r=l.y-o/2-s;break;case"bottom":r=l.y+o/2+s;break;default:r=l.y}d.labelX=n,d.labelY=r,f.labelX=n,f.labelY=r,this.calculateLabelAngles(t),this.applyLabelDimensions(t)}};var sh=function(e,n){var r=Math.atan(n/e);return e===0&&r<0&&(r=r*-1),r},ch=function(e,n){var r=n.x-e.x,a=n.y-e.y;return sh(r,a)},Tb=function(e,n,r,a){var i=Vi(0,a-.001,1),o=Vi(0,a+.001,1),s=Ja(e,n,r,i),l=Ja(e,n,r,o);return ch(s,l)};ir.recalculateEdgeLabelProjections=function(t){var e,n=t._private,r=n.rscratch,a=this,i={mid:t.pstyle("label").strValue,source:t.pstyle("source-label").strValue,target:t.pstyle("target-label").strValue};if(i.mid||i.source||i.target){e={x:r.midX,y:r.midY};var o=function(d,f,h){Sr(n.rscratch,d,f,h),Sr(n.rstyle,d,f,h)};o("labelX",null,e.x),o("labelY",null,e.y);var s=sh(r.midDispX,r.midDispY);o("labelAutoAngle",null,s);var l=function u(){if(u.cache)return u.cache;for(var d=[],f=0;f+5<r.allpts.length;f+=4){var h={x:r.allpts[f],y:r.allpts[f+1]},p={x:r.allpts[f+2],y:r.allpts[f+3]},m={x:r.allpts[f+4],y:r.allpts[f+5]};d.push({p0:h,p1:p,p2:m,startDist:0,length:0,segments:[]})}var _=n.rstyle.bezierPts,g=a.bezierProjPcts.length;function P(B,D,k,$,M){var b=ca(D,k),x=B.segments[B.segments.length-1],K={p0:D,p1:k,t0:$,t1:M,startDist:x?x.startDist+x.length:0,length:b};B.segments.push(K),B.length+=b}for(var y=0;y<d.length;y++){var C=d[y],E=d[y-1];E&&(C.startDist=E.startDist+E.length),P(C,C.p0,_[y*g],0,a.bezierProjPcts[0]);for(var T=0;T<g-1;T++)P(C,_[y*g+T],_[y*g+T+1],a.bezierProjPcts[T],a.bezierProjPcts[T+1]);P(C,_[y*g+g-1],C.p2,a.bezierProjPcts[g-1],1)}return u.cache=d},c=function(d){var f,h=d==="source";if(i[d]){var p=t.pstyle(d+"-text-offset").pfValue;switch(r.edgeType){case"self":case"compound":case"bezier":case"multibezier":{for(var m=l(),_,g=0,P=0,y=0;y<m.length;y++){for(var C=m[h?y:m.length-1-y],E=0;E<C.segments.length;E++){var T=C.segments[h?E:C.segments.length-1-E],B=y===m.length-1&&E===C.segments.length-1;if(g=P,P+=T.length,P>=p||B){_={cp:C,segment:T};break}}if(_)break}var D=_.cp,k=_.segment,$=(p-g)/k.length,M=k.t1-k.t0,b=h?k.t0+M*$:k.t1-M*$;b=Vi(0,b,1),e=Ja(D.p0,D.p1,D.p2,b),f=Tb(D.p0,D.p1,D.p2,b);break}case"straight":case"segments":case"haystack":{for(var x=0,K,X,v,A,w=r.allpts.length,O=0;O+3<w&&(h?(v={x:r.allpts[O],y:r.allpts[O+1]},A={x:r.allpts[O+2],y:r.allpts[O+3]}):(v={x:r.allpts[w-2-O],y:r.allpts[w-1-O]},A={x:r.allpts[w-4-O],y:r.allpts[w-3-O]}),K=ca(v,A),X=x,x+=K,!(x>=p));O+=2);var N=p-X,S=N/K;S=Vi(0,S,1),e=Sg(v,A,S),f=ch(v,A);break}}o("labelX",d,e.x),o("labelY",d,e.y),o("labelAutoAngle",d,f)}};c("source"),c("target"),this.applyLabelDimensions(t)}};ir.applyLabelDimensions=function(t){this.applyPrefixedLabelDimensions(t),t.isEdge()&&(this.applyPrefixedLabelDimensions(t,"source"),this.applyPrefixedLabelDimensions(t,"target"))};ir.applyPrefixedLabelDimensions=function(t,e){var n=t._private,r=this.getLabelText(t,e),a=this.calculateLabelDimensions(t,r),i=t.pstyle("line-height").pfValue,o=t.pstyle("text-wrap").strValue,s=jt(n.rscratch,"labelWrapCachedLines",e)||[],l=o!=="wrap"?1:Math.max(s.length,1),c=a.height/l,u=c*i,d=a.width,f=a.height+(l-1)*(i-1)*c;Sr(n.rstyle,"labelWidth",e,d),Sr(n.rscratch,"labelWidth",e,d),Sr(n.rstyle,"labelHeight",e,f),Sr(n.rscratch,"labelHeight",e,f),Sr(n.rscratch,"labelLineHeight",e,u)};ir.getLabelText=function(t,e){var n=t._private,r=e?e+"-":"",a=t.pstyle(r+"label").strValue,i=t.pstyle("text-transform").value,o=function(q,Y){return Y?(Sr(n.rscratch,q,e,Y),Y):jt(n.rscratch,q,e)};if(!a)return"";i=="none"||(i=="uppercase"?a=a.toUpperCase():i=="lowercase"&&(a=a.toLowerCase()));var s=t.pstyle("text-wrap").value;if(s==="wrap"){var l=o("labelKey");if(l!=null&&o("labelWrapKey")===l)return o("labelWrapCachedText");for(var c="\u200B",u=a.split(`
`),d=t.pstyle("text-max-width").pfValue,f=t.pstyle("text-overflow-wrap").value,h=f==="anywhere",p=[],m=/[\s\u200b]+|$/g,_=0;_<u.length;_++){var g=u[_],P=this.calculateLabelDimensions(t,g),y=P.width;if(h){var C=g.split("").join(c);g=C}if(y>d){var E=g.matchAll(m),T="",B=0,D=Ot(E),k;try{for(D.s();!(k=D.n()).done;){var $=k.value,M=$[0],b=g.substring(B,$.index);B=$.index+M.length;var x=T.length===0?b:T+b+M,K=this.calculateLabelDimensions(t,x),X=K.width;X<=d?T+=b+M:(T&&p.push(T),T=b+M)}}catch(I){D.e(I)}finally{D.f()}T.match(/^[\s\u200b]+$/)||p.push(T)}else p.push(g)}o("labelWrapCachedLines",p),a=o("labelWrapCachedText",p.join(`
`)),o("labelWrapKey",l)}else if(s==="ellipsis"){var v=t.pstyle("text-max-width").pfValue,A="",w="\u2026",O=!1;if(this.calculateLabelDimensions(t,a).width<v)return a;for(var N=0;N<a.length;N++){var S=this.calculateLabelDimensions(t,A+a[N]+w).width;if(S>v)break;A+=a[N],N===a.length-1&&(O=!0)}return O||(A+=w),A}return a};ir.getLabelJustification=function(t){var e=t.pstyle("text-justification").strValue,n=t.pstyle("text-halign").strValue;if(e==="auto")if(t.isNode())switch(n){case"left":return"right";case"right":return"left";default:return"center"}else return"center";else return e};ir.calculateLabelDimensions=function(t,e){var n=this,r=n.cy.window(),a=r.document,i=Ir(e,t._private.labelDimsKey),o=n.labelDimCache||(n.labelDimCache=[]),s=o[i];if(s!=null)return s;var l=0,c=t.pstyle("font-style").strValue,u=t.pstyle("font-size").pfValue,d=t.pstyle("font-family").strValue,f=t.pstyle("font-weight").strValue,h=this.labelCalcCanvas,p=this.labelCalcCanvasContext;if(!h){h=this.labelCalcCanvas=a.createElement("canvas"),p=this.labelCalcCanvasContext=h.getContext("2d");var m=h.style;m.position="absolute",m.left="-9999px",m.top="-9999px",m.zIndex="-1",m.visibility="hidden",m.pointerEvents="none"}p.font="".concat(c," ").concat(f," ").concat(u,"px ").concat(d);for(var _=0,g=0,P=e.split(`
`),y=0;y<P.length;y++){var C=P[y],E=p.measureText(C),T=Math.ceil(E.width),B=u;_=Math.max(T,_),g+=B}return _+=l,g+=l,o[i]={width:_,height:g}};ir.calculateLabelAngle=function(t,e){var n=t._private,r=n.rscratch,a=t.isEdge(),i=e?e+"-":"",o=t.pstyle(i+"text-rotation"),s=o.strValue;return s==="none"?0:a&&s==="autorotate"?r.labelAutoAngle:s==="autorotate"?0:o.pfValue};ir.calculateLabelAngles=function(t){var e=this,n=t.isEdge(),r=t._private,a=r.rscratch;a.labelAngle=e.calculateLabelAngle(t),n&&(a.sourceLabelAngle=e.calculateLabelAngle(t,"source"),a.targetLabelAngle=e.calculateLabelAngle(t,"target"))};var lh={},xd=28,Ad=!1;lh.getNodeShape=function(t){var e=this,n=t.pstyle("shape").value;if(n==="cutrectangle"&&(t.width()<xd||t.height()<xd))return Ad||(pn("The `cutrectangle` node shape can not be used at small sizes so `rectangle` is used instead"),Ad=!0),"rectangle";if(t.isParent())return n==="rectangle"||n==="roundrectangle"||n==="round-rectangle"||n==="cutrectangle"||n==="cut-rectangle"||n==="barrel"?n:"rectangle";if(n==="polygon"){var r=t.pstyle("shape-polygon-points").value;return e.nodeShapes.makePolygon(r).name}return n};var fc={};fc.registerCalculationListeners=function(){var t=this.cy,e=t.collection(),n=this,r=function(o){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;if(e.merge(o),s)for(var l=0;l<o.length;l++){var c=o[l],u=c._private,d=u.rstyle;d.clean=!1,d.cleanConnected=!1}};n.binder(t).on("bounds.* dirty.*",function(o){var s=o.target;r(s)}).on("style.* background.*",function(o){var s=o.target;r(s,!1)});var a=function(o){if(o){var s=n.onUpdateEleCalcsFns;e.cleanStyle();for(var l=0;l<e.length;l++){var c=e[l],u=c._private.rstyle;c.isNode()&&!u.cleanConnected&&(r(c.connectedEdges()),u.cleanConnected=!0)}if(s)for(var d=0;d<s.length;d++){var f=s[d];f(o,e)}n.recalculateRenderedStyle(e),e=t.collection()}};n.flushRenderedStyleQueue=function(){a(!0)},n.beforeRender(a,n.beforeRenderPriorities.eleCalcs)};fc.onUpdateEleCalcs=function(t){var e=this.onUpdateEleCalcsFns=this.onUpdateEleCalcsFns||[];e.push(t)};fc.recalculateRenderedStyle=function(t,e){var n=function(C){return C._private.rstyle.cleanConnected},r=[],a=[];if(!this.destroyed){e===void 0&&(e=!0);for(var i=0;i<t.length;i++){var o=t[i],s=o._private,l=s.rstyle;o.isEdge()&&(!n(o.source())||!n(o.target()))&&(l.clean=!1),!(e&&l.clean||o.removed())&&o.pstyle("display").value!=="none"&&(s.group==="nodes"?a.push(o):r.push(o),l.clean=!0)}for(var c=0;c<a.length;c++){var u=a[c],d=u._private,f=d.rstyle,h=u.position();this.recalculateNodeLabelProjection(u),f.nodeX=h.x,f.nodeY=h.y,f.nodeW=u.pstyle("width").pfValue,f.nodeH=u.pstyle("height").pfValue}this.recalculateEdgeProjections(r);for(var p=0;p<r.length;p++){var m=r[p],_=m._private,g=_.rstyle,P=_.rscratch;g.srcX=P.arrowStartX,g.srcY=P.arrowStartY,g.tgtX=P.arrowEndX,g.tgtY=P.arrowEndY,g.midX=P.midX,g.midY=P.midY,g.labelAngle=P.labelAngle,g.sourceLabelAngle=P.sourceLabelAngle,g.targetLabelAngle=P.targetLabelAngle}}};var hc={};hc.updateCachedGrabbedEles=function(){var t=this.cachedZSortedEles;if(t){t.drag=[],t.nondrag=[];for(var e=[],n=0;n<t.length;n++){var r=t[n],a=r._private.rscratch;r.grabbed()&&!r.isParent()?e.push(r):a.inDragLayer?t.drag.push(r):t.nondrag.push(r)}for(var n=0;n<e.length;n++){var r=e[n];t.drag.push(r)}}};hc.invalidateCachedZSortedEles=function(){this.cachedZSortedEles=null};hc.getCachedZSortedEles=function(t){if(t||!this.cachedZSortedEles){var e=this.cy.mutableElements().toArray();e.sort(zf),e.interactive=e.filter(function(n){return n.interactive()}),this.cachedZSortedEles=e,this.updateCachedGrabbedEles()}else e=this.cachedZSortedEles;return e};var uh={};[ha,qs,pt,so,Yl,ir,lh,fc,hc].forEach(function(t){Ve(uh,t)});var dh={};dh.getCachedImage=function(t,e,n){var r=this,a=r.imageCache=r.imageCache||{},i=a[t];if(i)return i.image.complete||i.image.addEventListener("load",n),i.image;i=a[t]=a[t]||{};var o=i.image=new Image;o.addEventListener("load",n),o.addEventListener("error",function(){o.error=!0});var s="data:",l=t.substring(0,s.length).toLowerCase()===s;return l||(e=e==="null"?null:e,o.crossOrigin=e),o.src=t,o};var fi={};fi.registerBinding=function(t,e,n,r){var a=Array.prototype.slice.apply(arguments,[1]);if(Array.isArray(t)){for(var i=[],o=0;o<t.length;o++){var s=t[o];if(s!==void 0){var l=this.binder(s);i.push(l.on.apply(l,a))}}return i}var l=this.binder(t);return l.on.apply(l,a)};fi.binder=function(t){var e=this,n=e.cy.window(),r=t===n||t===n.document||t===n.document.body||t1(t);if(e.supportsPassiveEvents==null){var a=!1;try{var i=Object.defineProperty({},"passive",{get:function(){return a=!0,!0}});n.addEventListener("test",null,i)}catch{}e.supportsPassiveEvents=a}var o=function(l,c,u){var d=Array.prototype.slice.call(arguments);return r&&e.supportsPassiveEvents&&(d[2]={capture:u??!1,passive:!1,once:!1}),e.bindings.push({target:t,args:d}),(t.addEventListener||t.on).apply(t,d),this};return{on:o,addEventListener:o,addListener:o,bind:o}};fi.nodeIsDraggable=function(t){return t&&t.isNode()&&!t.locked()&&t.grabbable()};fi.nodeIsGrabbable=function(t){return this.nodeIsDraggable(t)&&t.interactive()};fi.load=function(){var t=this,e=t.cy.window(),n=function(R){return R.selected()},r=function(R){var te=R.getRootNode();if(te&&te.nodeType===11&&te.host!==void 0)return te},a=function(R,te,ce,V){R==null&&(R=t.cy);for(var Z=0;Z<te.length;Z++){var oe=te[Z];R.emit({originalEvent:ce,type:oe,position:V})}},i=function(R){return R.shiftKey||R.metaKey||R.ctrlKey},o=function(R,te){var ce=!0;if(t.cy.hasCompoundNodes()&&R&&R.pannable())for(var V=0;te&&V<te.length;V++){var R=te[V];if(R.isNode()&&R.isParent()&&!R.pannable()){ce=!1;break}}else ce=!0;return ce},s=function(R){R[0]._private.grabbed=!0},l=function(R){R[0]._private.grabbed=!1},c=function(R){R[0]._private.rscratch.inDragLayer=!0},u=function(R){R[0]._private.rscratch.inDragLayer=!1},d=function(R){R[0]._private.rscratch.isGrabTarget=!0},f=function(R){R[0]._private.rscratch.isGrabTarget=!1},h=function(R,te){var ce=te.addToList,V=ce.has(R);!V&&R.grabbable()&&!R.locked()&&(ce.merge(R),s(R))},p=function(R,te){if(R.cy().hasCompoundNodes()&&!(te.inDragLayer==null&&te.addToList==null)){var ce=R.descendants();te.inDragLayer&&(ce.forEach(c),ce.connectedEdges().forEach(c)),te.addToList&&h(ce,te)}},m=function(R,te){te=te||{};var ce=R.cy().hasCompoundNodes();te.inDragLayer&&(R.forEach(c),R.neighborhood().stdFilter(function(V){return!ce||V.isEdge()}).forEach(c)),te.addToList&&R.forEach(function(V){h(V,te)}),p(R,te),P(R,{inDragLayer:te.inDragLayer}),t.updateCachedGrabbedEles()},_=m,g=function(R){R&&(t.getCachedZSortedEles().forEach(function(te){l(te),u(te),f(te)}),t.updateCachedGrabbedEles())},P=function(R,te){if(!(te.inDragLayer==null&&te.addToList==null)&&R.cy().hasCompoundNodes()){var ce=R.ancestors().orphans();if(!ce.same(R)){var V=ce.descendants().spawnSelf().merge(ce).unmerge(R).unmerge(R.descendants()),Z=V.connectedEdges();te.inDragLayer&&(Z.forEach(c),V.forEach(c)),te.addToList&&V.forEach(function(oe){h(oe,te)})}}},y=function(){document.activeElement!=null&&document.activeElement.blur!=null&&document.activeElement.blur()},C=typeof MutationObserver<"u",E=typeof ResizeObserver<"u";C?(t.removeObserver=new MutationObserver(function(fe){for(var R=0;R<fe.length;R++){var te=fe[R],ce=te.removedNodes;if(ce)for(var V=0;V<ce.length;V++){var Z=ce[V];if(Z===t.container){t.destroy();break}}}}),t.container.parentNode&&t.removeObserver.observe(t.container.parentNode,{childList:!0})):t.registerBinding(t.container,"DOMNodeRemoved",function(fe){t.destroy()});var T=ro(function(){t.cy.resize()},100);C&&(t.styleObserver=new MutationObserver(T),t.styleObserver.observe(t.container,{attributes:!0})),t.registerBinding(e,"resize",T),E&&(t.resizeObserver=new ResizeObserver(T),t.resizeObserver.observe(t.container));var B=function(R,te){for(;R!=null;)te(R),R=R.parentNode},D=function(){t.invalidateContainerClientCoordsCache()};B(t.container,function(fe){t.registerBinding(fe,"transitionend",D),t.registerBinding(fe,"animationend",D),t.registerBinding(fe,"scroll",D)}),t.registerBinding(t.container,"contextmenu",function(fe){fe.preventDefault()});var k=function(){return t.selection[4]!==0},$=function(R){for(var te=t.findContainerClientCoords(),ce=te[0],V=te[1],Z=te[2],oe=te[3],re=R.touches?R.touches:[R],se=!1,pe=0;pe<re.length;pe++){var ke=re[pe];if(ce<=ke.clientX&&ke.clientX<=ce+Z&&V<=ke.clientY&&ke.clientY<=V+oe){se=!0;break}}if(!se)return!1;for(var be=t.container,me=R.target,Ee=me.parentNode,Te=!1;Ee;){if(Ee===be){Te=!0;break}Ee=Ee.parentNode}return!!Te};t.registerBinding(t.container,"mousedown",function(R){if($(R)&&!(t.hoverData.which===1&&R.which!==1)){R.preventDefault(),y(),t.hoverData.capture=!0,t.hoverData.which=R.which;var te=t.cy,ce=[R.clientX,R.clientY],V=t.projectIntoViewport(ce[0],ce[1]),Z=t.selection,oe=t.findNearestElements(V[0],V[1],!0,!1),re=oe[0],se=t.dragData.possibleDragElements;t.hoverData.mdownPos=V,t.hoverData.mdownGPos=ce;var pe=function(){t.hoverData.tapholdCancelled=!1,clearTimeout(t.hoverData.tapholdTimeout),t.hoverData.tapholdTimeout=setTimeout(function(){if(!t.hoverData.tapholdCancelled){var De=t.hoverData.down;De?De.emit({originalEvent:R,type:"taphold",position:{x:V[0],y:V[1]}}):te.emit({originalEvent:R,type:"taphold",position:{x:V[0],y:V[1]}})}},t.tapholdDuration)};if(R.which==3){t.hoverData.cxtStarted=!0;var ke={originalEvent:R,type:"cxttapstart",position:{x:V[0],y:V[1]}};re?(re.activate(),re.emit(ke),t.hoverData.down=re):te.emit(ke),t.hoverData.downTime=new Date().getTime(),t.hoverData.cxtDragged=!1}else if(R.which==1){re&&re.activate();{if(re!=null&&t.nodeIsGrabbable(re)){var be=function(De){return{originalEvent:R,type:De,position:{x:V[0],y:V[1]}}},me=function(De){De.emit(be("grab"))};if(d(re),!re.selected())se=t.dragData.possibleDragElements=te.collection(),_(re,{addToList:se}),re.emit(be("grabon")).emit(be("grab"));else{se=t.dragData.possibleDragElements=te.collection();var Ee=te.$(function(Te){return Te.isNode()&&Te.selected()&&t.nodeIsGrabbable(Te)});m(Ee,{addToList:se}),re.emit(be("grabon")),Ee.forEach(me)}t.redrawHint("eles",!0),t.redrawHint("drag",!0)}t.hoverData.down=re,t.hoverData.downs=oe,t.hoverData.downTime=new Date().getTime()}a(re,["mousedown","tapstart","vmousedown"],R,{x:V[0],y:V[1]}),re==null?(Z[4]=1,t.data.bgActivePosistion={x:V[0],y:V[1]},t.redrawHint("select",!0),t.redraw()):re.pannable()&&(Z[4]=1),pe()}Z[0]=Z[2]=V[0],Z[1]=Z[3]=V[1]}},!1);var M=r(t.container);t.registerBinding([e,M],"mousemove",function(R){var te=t.hoverData.capture;if(!(!te&&!$(R))){var ce=!1,V=t.cy,Z=V.zoom(),oe=[R.clientX,R.clientY],re=t.projectIntoViewport(oe[0],oe[1]),se=t.hoverData.mdownPos,pe=t.hoverData.mdownGPos,ke=t.selection,be=null;!t.hoverData.draggingEles&&!t.hoverData.dragging&&!t.hoverData.selecting&&(be=t.findNearestElement(re[0],re[1],!0,!1));var me=t.hoverData.last,Ee=t.hoverData.down,Te=[re[0]-ke[2],re[1]-ke[3]],De=t.dragData.possibleDragElements,Re;if(pe){var Ge=oe[0]-pe[0],Ie=Ge*Ge,$e=oe[1]-pe[1],Fe=$e*$e,Me=Ie+Fe;t.hoverData.isOverThresholdDrag=Re=Me>=t.desktopTapThreshold2}var Le=i(R);Re&&(t.hoverData.tapholdCancelled=!0);var an=function(){var jn=t.hoverData.dragDelta=t.hoverData.dragDelta||[];jn.length===0?(jn.push(Te[0]),jn.push(Te[1])):(jn[0]+=Te[0],jn[1]+=Te[1])};ce=!0,a(be,["mousemove","vmousemove","tapdrag"],R,{x:re[0],y:re[1]});var on=function(){t.data.bgActivePosistion=void 0,t.hoverData.selecting||V.emit({originalEvent:R,type:"boxstart",position:{x:re[0],y:re[1]}}),ke[4]=1,t.hoverData.selecting=!0,t.redrawHint("select",!0),t.redraw()};if(t.hoverData.which===3){if(Re){var Pn={originalEvent:R,type:"cxtdrag",position:{x:re[0],y:re[1]}};Ee?Ee.emit(Pn):V.emit(Pn),t.hoverData.cxtDragged=!0,(!t.hoverData.cxtOver||be!==t.hoverData.cxtOver)&&(t.hoverData.cxtOver&&t.hoverData.cxtOver.emit({originalEvent:R,type:"cxtdragout",position:{x:re[0],y:re[1]}}),t.hoverData.cxtOver=be,be&&be.emit({originalEvent:R,type:"cxtdragover",position:{x:re[0],y:re[1]}}))}}else if(t.hoverData.dragging){if(ce=!0,V.panningEnabled()&&V.userPanningEnabled()){var en;if(t.hoverData.justStartedPan){var Je=t.hoverData.mdownPos;en={x:(re[0]-Je[0])*Z,y:(re[1]-Je[1])*Z},t.hoverData.justStartedPan=!1}else en={x:Te[0]*Z,y:Te[1]*Z};V.panBy(en),V.emit("dragpan"),t.hoverData.dragged=!0}re=t.projectIntoViewport(R.clientX,R.clientY)}else if(ke[4]==1&&(Ee==null||Ee.pannable())){if(Re){if(!t.hoverData.dragging&&V.boxSelectionEnabled()&&(Le||!V.panningEnabled()||!V.userPanningEnabled()))on();else if(!t.hoverData.selecting&&V.panningEnabled()&&V.userPanningEnabled()){var $n=o(Ee,t.hoverData.downs);$n&&(t.hoverData.dragging=!0,t.hoverData.justStartedPan=!0,ke[4]=0,t.data.bgActivePosistion=Ha(se),t.redrawHint("select",!0),t.redraw())}Ee&&Ee.pannable()&&Ee.active()&&Ee.unactivate()}}else{if(Ee&&Ee.pannable()&&Ee.active()&&Ee.unactivate(),(!Ee||!Ee.grabbed())&&be!=me&&(me&&a(me,["mouseout","tapdragout"],R,{x:re[0],y:re[1]}),be&&a(be,["mouseover","tapdragover"],R,{x:re[0],y:re[1]}),t.hoverData.last=be),Ee)if(Re){if(V.boxSelectionEnabled()&&Le)Ee&&Ee.grabbed()&&(g(De),Ee.emit("freeon"),De.emit("free"),t.dragData.didDrag&&(Ee.emit("dragfreeon"),De.emit("dragfree"))),on();else if(Ee&&Ee.grabbed()&&t.nodeIsDraggable(Ee)){var Qe=!t.dragData.didDrag;Qe&&t.redrawHint("eles",!0),t.dragData.didDrag=!0,t.hoverData.draggingEles||m(De,{inDragLayer:!0});var cn={x:0,y:0};if(Se(Te[0])&&Se(Te[1])&&(cn.x+=Te[0],cn.y+=Te[1],Qe)){var gn=t.hoverData.dragDelta;gn&&Se(gn[0])&&Se(gn[1])&&(cn.x+=gn[0],cn.y+=gn[1])}t.hoverData.draggingEles=!0,De.silentShift(cn).emit("position drag"),t.redrawHint("drag",!0),t.redraw()}}else an();ce=!0}if(ke[2]=re[0],ke[3]=re[1],ce)return R.stopPropagation&&R.stopPropagation(),R.preventDefault&&R.preventDefault(),!1}},!1);var b,x,K;t.registerBinding(e,"mouseup",function(R){if(!(t.hoverData.which===1&&R.which!==1&&t.hoverData.capture)){var te=t.hoverData.capture;if(te){t.hoverData.capture=!1;var ce=t.cy,V=t.projectIntoViewport(R.clientX,R.clientY),Z=t.selection,oe=t.findNearestElement(V[0],V[1],!0,!1),re=t.dragData.possibleDragElements,se=t.hoverData.down,pe=i(R);if(t.data.bgActivePosistion&&(t.redrawHint("select",!0),t.redraw()),t.hoverData.tapholdCancelled=!0,t.data.bgActivePosistion=void 0,se&&se.unactivate(),t.hoverData.which===3){var ke={originalEvent:R,type:"cxttapend",position:{x:V[0],y:V[1]}};if(se?se.emit(ke):ce.emit(ke),!t.hoverData.cxtDragged){var be={originalEvent:R,type:"cxttap",position:{x:V[0],y:V[1]}};se?se.emit(be):ce.emit(be)}t.hoverData.cxtDragged=!1,t.hoverData.which=null}else if(t.hoverData.which===1){if(a(oe,["mouseup","tapend","vmouseup"],R,{x:V[0],y:V[1]}),!t.dragData.didDrag&&!t.hoverData.dragged&&!t.hoverData.selecting&&!t.hoverData.isOverThresholdDrag&&(a(se,["click","tap","vclick"],R,{x:V[0],y:V[1]}),x=!1,R.timeStamp-K<=ce.multiClickDebounceTime()?(b&&clearTimeout(b),x=!0,K=null,a(se,["dblclick","dbltap","vdblclick"],R,{x:V[0],y:V[1]})):(b=setTimeout(function(){x||a(se,["oneclick","onetap","voneclick"],R,{x:V[0],y:V[1]})},ce.multiClickDebounceTime()),K=R.timeStamp)),se==null&&!t.dragData.didDrag&&!t.hoverData.selecting&&!t.hoverData.dragged&&!i(R)&&(ce.$(n).unselect(["tapunselect"]),re.length>0&&t.redrawHint("eles",!0),t.dragData.possibleDragElements=re=ce.collection()),oe==se&&!t.dragData.didDrag&&!t.hoverData.selecting&&oe!=null&&oe._private.selectable&&(t.hoverData.dragging||(ce.selectionType()==="additive"||pe?oe.selected()?oe.unselect(["tapunselect"]):oe.select(["tapselect"]):pe||(ce.$(n).unmerge(oe).unselect(["tapunselect"]),oe.select(["tapselect"]))),t.redrawHint("eles",!0)),t.hoverData.selecting){var me=ce.collection(t.getAllInBox(Z[0],Z[1],Z[2],Z[3]));t.redrawHint("select",!0),me.length>0&&t.redrawHint("eles",!0),ce.emit({type:"boxend",originalEvent:R,position:{x:V[0],y:V[1]}});var Ee=function(Re){return Re.selectable()&&!Re.selected()};ce.selectionType()==="additive"||pe||ce.$(n).unmerge(me).unselect(),me.emit("box").stdFilter(Ee).select().emit("boxselect"),t.redraw()}if(t.hoverData.dragging&&(t.hoverData.dragging=!1,t.redrawHint("select",!0),t.redrawHint("eles",!0),t.redraw()),!Z[4]){t.redrawHint("drag",!0),t.redrawHint("eles",!0);var Te=se&&se.grabbed();g(re),Te&&(se.emit("freeon"),re.emit("free"),t.dragData.didDrag&&(se.emit("dragfreeon"),re.emit("dragfree")))}}Z[4]=0,t.hoverData.down=null,t.hoverData.cxtStarted=!1,t.hoverData.draggingEles=!1,t.hoverData.selecting=!1,t.hoverData.isOverThresholdDrag=!1,t.dragData.didDrag=!1,t.hoverData.dragged=!1,t.hoverData.dragDelta=[],t.hoverData.mdownPos=null,t.hoverData.mdownGPos=null,t.hoverData.which=null}}},!1);var X=function(R){if(!t.scrollingPage){var te=t.cy,ce=te.zoom(),V=te.pan(),Z=t.projectIntoViewport(R.clientX,R.clientY),oe=[Z[0]*ce+V.x,Z[1]*ce+V.y];if(t.hoverData.draggingEles||t.hoverData.dragging||t.hoverData.cxtStarted||k()){R.preventDefault();return}if(te.panningEnabled()&&te.userPanningEnabled()&&te.zoomingEnabled()&&te.userZoomingEnabled()){R.preventDefault(),t.data.wheelZooming=!0,clearTimeout(t.data.wheelTimeout),t.data.wheelTimeout=setTimeout(function(){t.data.wheelZooming=!1,t.redrawHint("eles",!0),t.redraw()},150);var re;R.deltaY!=null?re=R.deltaY/-250:R.wheelDeltaY!=null?re=R.wheelDeltaY/1e3:re=R.wheelDelta/1e3,re=re*t.wheelSensitivity;var se=R.deltaMode===1;se&&(re*=33);var pe=te.zoom()*Math.pow(10,re);R.type==="gesturechange"&&(pe=t.gestureStartZoom*R.scale),te.zoom({level:pe,renderedPosition:{x:oe[0],y:oe[1]}}),te.emit(R.type==="gesturechange"?"pinchzoom":"scrollzoom")}}};t.registerBinding(t.container,"wheel",X,!0),t.registerBinding(e,"scroll",function(R){t.scrollingPage=!0,clearTimeout(t.scrollingPageTimeout),t.scrollingPageTimeout=setTimeout(function(){t.scrollingPage=!1},250)},!0),t.registerBinding(t.container,"gesturestart",function(R){t.gestureStartZoom=t.cy.zoom(),t.hasTouchStarted||R.preventDefault()},!0),t.registerBinding(t.container,"gesturechange",function(fe){t.hasTouchStarted||X(fe)},!0),t.registerBinding(t.container,"mouseout",function(R){var te=t.projectIntoViewport(R.clientX,R.clientY);t.cy.emit({originalEvent:R,type:"mouseout",position:{x:te[0],y:te[1]}})},!1),t.registerBinding(t.container,"mouseover",function(R){var te=t.projectIntoViewport(R.clientX,R.clientY);t.cy.emit({originalEvent:R,type:"mouseover",position:{x:te[0],y:te[1]}})},!1);var v,A,w,O,N,S,I,q,Y,ee,Q,U,J,F=function(R,te,ce,V){return Math.sqrt((ce-R)*(ce-R)+(V-te)*(V-te))},W=function(R,te,ce,V){return(ce-R)*(ce-R)+(V-te)*(V-te)},L;t.registerBinding(t.container,"touchstart",L=function(R){if(t.hasTouchStarted=!0,!!$(R)){y(),t.touchData.capture=!0,t.data.bgActivePosistion=void 0;var te=t.cy,ce=t.touchData.now,V=t.touchData.earlier;if(R.touches[0]){var Z=t.projectIntoViewport(R.touches[0].clientX,R.touches[0].clientY);ce[0]=Z[0],ce[1]=Z[1]}if(R.touches[1]){var Z=t.projectIntoViewport(R.touches[1].clientX,R.touches[1].clientY);ce[2]=Z[0],ce[3]=Z[1]}if(R.touches[2]){var Z=t.projectIntoViewport(R.touches[2].clientX,R.touches[2].clientY);ce[4]=Z[0],ce[5]=Z[1]}if(R.touches[1]){t.touchData.singleTouchMoved=!0,g(t.dragData.touchDragEles);var oe=t.findContainerClientCoords();Y=oe[0],ee=oe[1],Q=oe[2],U=oe[3],v=R.touches[0].clientX-Y,A=R.touches[0].clientY-ee,w=R.touches[1].clientX-Y,O=R.touches[1].clientY-ee,J=0<=v&&v<=Q&&0<=w&&w<=Q&&0<=A&&A<=U&&0<=O&&O<=U;var re=te.pan(),se=te.zoom();N=F(v,A,w,O),S=W(v,A,w,O),I=[(v+w)/2,(A+O)/2],q=[(I[0]-re.x)/se,(I[1]-re.y)/se];var pe=200,ke=pe*pe;if(S<ke&&!R.touches[2]){var be=t.findNearestElement(ce[0],ce[1],!0,!0),me=t.findNearestElement(ce[2],ce[3],!0,!0);be&&be.isNode()?(be.activate().emit({originalEvent:R,type:"cxttapstart",position:{x:ce[0],y:ce[1]}}),t.touchData.start=be):me&&me.isNode()?(me.activate().emit({originalEvent:R,type:"cxttapstart",position:{x:ce[0],y:ce[1]}}),t.touchData.start=me):te.emit({originalEvent:R,type:"cxttapstart",position:{x:ce[0],y:ce[1]}}),t.touchData.start&&(t.touchData.start._private.grabbed=!1),t.touchData.cxt=!0,t.touchData.cxtDragged=!1,t.data.bgActivePosistion=void 0,t.redraw();return}}if(R.touches[2])te.boxSelectionEnabled()&&R.preventDefault();else if(!R.touches[1]){if(R.touches[0]){var Ee=t.findNearestElements(ce[0],ce[1],!0,!0),Te=Ee[0];if(Te!=null&&(Te.activate(),t.touchData.start=Te,t.touchData.starts=Ee,t.nodeIsGrabbable(Te))){var De=t.dragData.touchDragEles=te.collection(),Re=null;t.redrawHint("eles",!0),t.redrawHint("drag",!0),Te.selected()?(Re=te.$(function(Me){return Me.selected()&&t.nodeIsGrabbable(Me)}),m(Re,{addToList:De})):_(Te,{addToList:De}),d(Te);var Ge=function(Le){return{originalEvent:R,type:Le,position:{x:ce[0],y:ce[1]}}};Te.emit(Ge("grabon")),Re?Re.forEach(function(Me){Me.emit(Ge("grab"))}):Te.emit(Ge("grab"))}a(Te,["touchstart","tapstart","vmousedown"],R,{x:ce[0],y:ce[1]}),Te==null&&(t.data.bgActivePosistion={x:Z[0],y:Z[1]},t.redrawHint("select",!0),t.redraw()),t.touchData.singleTouchMoved=!1,t.touchData.singleTouchStartTime=+new Date,clearTimeout(t.touchData.tapholdTimeout),t.touchData.tapholdTimeout=setTimeout(function(){t.touchData.singleTouchMoved===!1&&!t.pinching&&!t.touchData.selecting&&a(t.touchData.start,["taphold"],R,{x:ce[0],y:ce[1]})},t.tapholdDuration)}}if(R.touches.length>=1){for(var Ie=t.touchData.startPosition=[null,null,null,null,null,null],$e=0;$e<ce.length;$e++)Ie[$e]=V[$e]=ce[$e];var Fe=R.touches[0];t.touchData.startGPosition=[Fe.clientX,Fe.clientY]}}},!1);var z;t.registerBinding(e,"touchmove",z=function(R){var te=t.touchData.capture;if(!(!te&&!$(R))){var ce=t.selection,V=t.cy,Z=t.touchData.now,oe=t.touchData.earlier,re=V.zoom();if(R.touches[0]){var se=t.projectIntoViewport(R.touches[0].clientX,R.touches[0].clientY);Z[0]=se[0],Z[1]=se[1]}if(R.touches[1]){var se=t.projectIntoViewport(R.touches[1].clientX,R.touches[1].clientY);Z[2]=se[0],Z[3]=se[1]}if(R.touches[2]){var se=t.projectIntoViewport(R.touches[2].clientX,R.touches[2].clientY);Z[4]=se[0],Z[5]=se[1]}var pe=t.touchData.startGPosition,ke;if(te&&R.touches[0]&&pe){for(var be=[],me=0;me<Z.length;me++)be[me]=Z[me]-oe[me];var Ee=R.touches[0].clientX-pe[0],Te=Ee*Ee,De=R.touches[0].clientY-pe[1],Re=De*De,Ge=Te+Re;ke=Ge>=t.touchTapThreshold2}if(te&&t.touchData.cxt){R.preventDefault();var Ie=R.touches[0].clientX-Y,$e=R.touches[0].clientY-ee,Fe=R.touches[1].clientX-Y,Me=R.touches[1].clientY-ee,Le=W(Ie,$e,Fe,Me),an=Le/S,on=150,Pn=on*on,en=1.5,Je=en*en;if(an>=Je||Le>=Pn){t.touchData.cxt=!1,t.data.bgActivePosistion=void 0,t.redrawHint("select",!0);var $n={originalEvent:R,type:"cxttapend",position:{x:Z[0],y:Z[1]}};t.touchData.start?(t.touchData.start.unactivate().emit($n),t.touchData.start=null):V.emit($n)}}if(te&&t.touchData.cxt){var $n={originalEvent:R,type:"cxtdrag",position:{x:Z[0],y:Z[1]}};t.data.bgActivePosistion=void 0,t.redrawHint("select",!0),t.touchData.start?t.touchData.start.emit($n):V.emit($n),t.touchData.start&&(t.touchData.start._private.grabbed=!1),t.touchData.cxtDragged=!0;var Qe=t.findNearestElement(Z[0],Z[1],!0,!0);(!t.touchData.cxtOver||Qe!==t.touchData.cxtOver)&&(t.touchData.cxtOver&&t.touchData.cxtOver.emit({originalEvent:R,type:"cxtdragout",position:{x:Z[0],y:Z[1]}}),t.touchData.cxtOver=Qe,Qe&&Qe.emit({originalEvent:R,type:"cxtdragover",position:{x:Z[0],y:Z[1]}}))}else if(te&&R.touches[2]&&V.boxSelectionEnabled())R.preventDefault(),t.data.bgActivePosistion=void 0,this.lastThreeTouch=+new Date,t.touchData.selecting||V.emit({originalEvent:R,type:"boxstart",position:{x:Z[0],y:Z[1]}}),t.touchData.selecting=!0,t.touchData.didSelect=!0,ce[4]=1,!ce||ce.length===0||ce[0]===void 0?(ce[0]=(Z[0]+Z[2]+Z[4])/3,ce[1]=(Z[1]+Z[3]+Z[5])/3,ce[2]=(Z[0]+Z[2]+Z[4])/3+1,ce[3]=(Z[1]+Z[3]+Z[5])/3+1):(ce[2]=(Z[0]+Z[2]+Z[4])/3,ce[3]=(Z[1]+Z[3]+Z[5])/3),t.redrawHint("select",!0),t.redraw();else if(te&&R.touches[1]&&!t.touchData.didSelect&&V.zoomingEnabled()&&V.panningEnabled()&&V.userZoomingEnabled()&&V.userPanningEnabled()){R.preventDefault(),t.data.bgActivePosistion=void 0,t.redrawHint("select",!0);var cn=t.dragData.touchDragEles;if(cn){t.redrawHint("drag",!0);for(var gn=0;gn<cn.length;gn++){var vr=cn[gn]._private;vr.grabbed=!1,vr.rscratch.inDragLayer=!1}}var jn=t.touchData.start,Ie=R.touches[0].clientX-Y,$e=R.touches[0].clientY-ee,Fe=R.touches[1].clientX-Y,Me=R.touches[1].clientY-ee,lr=F(Ie,$e,Fe,Me),br=lr/N;if(J){var ur=Ie-v,ba=$e-A,yr=Fe-w,Xr=Me-O,Ao=(ur+yr)/2,yi=(ba+Xr)/2,Kr=V.zoom(),Zr=Kr*br,ya=V.pan(),Xa=q[0]*Kr+ya.x,Xi=q[1]*Kr+ya.y,Co={x:-Zr/Kr*(Xa-ya.x-Ao)+Xa,y:-Zr/Kr*(Xi-ya.y-yi)+Xi};if(jn&&jn.active()){var cn=t.dragData.touchDragEles;g(cn),t.redrawHint("drag",!0),t.redrawHint("eles",!0),jn.unactivate().emit("freeon"),cn.emit("free"),t.dragData.didDrag&&(jn.emit("dragfreeon"),cn.emit("dragfree"))}V.viewport({zoom:Zr,pan:Co,cancelOnFailedZoom:!0}),V.emit("pinchzoom"),N=lr,v=Ie,A=$e,w=Fe,O=Me,t.pinching=!0}if(R.touches[0]){var se=t.projectIntoViewport(R.touches[0].clientX,R.touches[0].clientY);Z[0]=se[0],Z[1]=se[1]}if(R.touches[1]){var se=t.projectIntoViewport(R.touches[1].clientX,R.touches[1].clientY);Z[2]=se[0],Z[3]=se[1]}if(R.touches[2]){var se=t.projectIntoViewport(R.touches[2].clientX,R.touches[2].clientY);Z[4]=se[0],Z[5]=se[1]}}else if(R.touches[0]&&!t.touchData.didSelect){var mt=t.touchData.start,Ka=t.touchData.last,Qe;if(!t.hoverData.draggingEles&&!t.swipePanning&&(Qe=t.findNearestElement(Z[0],Z[1],!0,!0)),te&&mt!=null&&R.preventDefault(),te&&mt!=null&&t.nodeIsDraggable(mt))if(ke){var cn=t.dragData.touchDragEles,Wn=!t.dragData.didDrag;Wn&&m(cn,{inDragLayer:!0}),t.dragData.didDrag=!0;var He={x:0,y:0};if(Se(be[0])&&Se(be[1])&&(He.x+=be[0],He.y+=be[1],Wn)){t.redrawHint("eles",!0);var Ze=t.touchData.dragDelta;Ze&&Se(Ze[0])&&Se(Ze[1])&&(He.x+=Ze[0],He.y+=Ze[1])}t.hoverData.draggingEles=!0,cn.silentShift(He).emit("position drag"),t.redrawHint("drag",!0),t.touchData.startPosition[0]==oe[0]&&t.touchData.startPosition[1]==oe[1]&&t.redrawHint("eles",!0),t.redraw()}else{var Ze=t.touchData.dragDelta=t.touchData.dragDelta||[];Ze.length===0?(Ze.push(be[0]),Ze.push(be[1])):(Ze[0]+=be[0],Ze[1]+=be[1])}if(a(mt||Qe,["touchmove","tapdrag","vmousemove"],R,{x:Z[0],y:Z[1]}),(!mt||!mt.grabbed())&&Qe!=Ka&&(Ka&&Ka.emit({originalEvent:R,type:"tapdragout",position:{x:Z[0],y:Z[1]}}),Qe&&Qe.emit({originalEvent:R,type:"tapdragover",position:{x:Z[0],y:Z[1]}})),t.touchData.last=Qe,te)for(var gn=0;gn<Z.length;gn++)Z[gn]&&t.touchData.startPosition[gn]&&ke&&(t.touchData.singleTouchMoved=!0);if(te&&(mt==null||mt.pannable())&&V.panningEnabled()&&V.userPanningEnabled()){var Ht=o(mt,t.touchData.starts);Ht&&(R.preventDefault(),t.data.bgActivePosistion||(t.data.bgActivePosistion=Ha(t.touchData.startPosition)),t.swipePanning?(V.panBy({x:be[0]*re,y:be[1]*re}),V.emit("dragpan")):ke&&(t.swipePanning=!0,V.panBy({x:Ee*re,y:De*re}),V.emit("dragpan"),mt&&(mt.unactivate(),t.redrawHint("select",!0),t.touchData.start=null)));var se=t.projectIntoViewport(R.touches[0].clientX,R.touches[0].clientY);Z[0]=se[0],Z[1]=se[1]}}for(var me=0;me<Z.length;me++)oe[me]=Z[me];te&&R.touches.length>0&&!t.hoverData.draggingEles&&!t.swipePanning&&t.data.bgActivePosistion!=null&&(t.data.bgActivePosistion=void 0,t.redrawHint("select",!0),t.redraw())}},!1);var ne;t.registerBinding(e,"touchcancel",ne=function(R){var te=t.touchData.start;t.touchData.capture=!1,te&&te.unactivate()});var H,_e,Ae,he;if(t.registerBinding(e,"touchend",H=function(R){var te=t.touchData.start,ce=t.touchData.capture;if(ce)R.touches.length===0&&(t.touchData.capture=!1),R.preventDefault();else return;var V=t.selection;t.swipePanning=!1,t.hoverData.draggingEles=!1;var Z=t.cy,oe=Z.zoom(),re=t.touchData.now,se=t.touchData.earlier;if(R.touches[0]){var pe=t.projectIntoViewport(R.touches[0].clientX,R.touches[0].clientY);re[0]=pe[0],re[1]=pe[1]}if(R.touches[1]){var pe=t.projectIntoViewport(R.touches[1].clientX,R.touches[1].clientY);re[2]=pe[0],re[3]=pe[1]}if(R.touches[2]){var pe=t.projectIntoViewport(R.touches[2].clientX,R.touches[2].clientY);re[4]=pe[0],re[5]=pe[1]}te&&te.unactivate();var ke;if(t.touchData.cxt){if(ke={originalEvent:R,type:"cxttapend",position:{x:re[0],y:re[1]}},te?te.emit(ke):Z.emit(ke),!t.touchData.cxtDragged){var be={originalEvent:R,type:"cxttap",position:{x:re[0],y:re[1]}};te?te.emit(be):Z.emit(be)}t.touchData.start&&(t.touchData.start._private.grabbed=!1),t.touchData.cxt=!1,t.touchData.start=null,t.redraw();return}if(!R.touches[2]&&Z.boxSelectionEnabled()&&t.touchData.selecting){t.touchData.selecting=!1;var me=Z.collection(t.getAllInBox(V[0],V[1],V[2],V[3]));V[0]=void 0,V[1]=void 0,V[2]=void 0,V[3]=void 0,V[4]=0,t.redrawHint("select",!0),Z.emit({type:"boxend",originalEvent:R,position:{x:re[0],y:re[1]}});var Ee=function(Pn){return Pn.selectable()&&!Pn.selected()};me.emit("box").stdFilter(Ee).select().emit("boxselect"),me.nonempty()&&t.redrawHint("eles",!0),t.redraw()}if(te?.unactivate(),R.touches[2])t.data.bgActivePosistion=void 0,t.redrawHint("select",!0);else if(!R.touches[1]){if(!R.touches[0]){if(!R.touches[0]){t.data.bgActivePosistion=void 0,t.redrawHint("select",!0);var Te=t.dragData.touchDragEles;if(te!=null){var De=te._private.grabbed;g(Te),t.redrawHint("drag",!0),t.redrawHint("eles",!0),De&&(te.emit("freeon"),Te.emit("free"),t.dragData.didDrag&&(te.emit("dragfreeon"),Te.emit("dragfree"))),a(te,["touchend","tapend","vmouseup","tapdragout"],R,{x:re[0],y:re[1]}),te.unactivate(),t.touchData.start=null}else{var Re=t.findNearestElement(re[0],re[1],!0,!0);a(Re,["touchend","tapend","vmouseup","tapdragout"],R,{x:re[0],y:re[1]})}var Ge=t.touchData.startPosition[0]-re[0],Ie=Ge*Ge,$e=t.touchData.startPosition[1]-re[1],Fe=$e*$e,Me=Ie+Fe,Le=Me*oe*oe;t.touchData.singleTouchMoved||(te||Z.$(":selected").unselect(["tapunselect"]),a(te,["tap","vclick"],R,{x:re[0],y:re[1]}),_e=!1,R.timeStamp-he<=Z.multiClickDebounceTime()?(Ae&&clearTimeout(Ae),_e=!0,he=null,a(te,["dbltap","vdblclick"],R,{x:re[0],y:re[1]})):(Ae=setTimeout(function(){_e||a(te,["onetap","voneclick"],R,{x:re[0],y:re[1]})},Z.multiClickDebounceTime()),he=R.timeStamp)),te!=null&&!t.dragData.didDrag&&te._private.selectable&&Le<t.touchTapThreshold2&&!t.pinching&&(Z.selectionType()==="single"?(Z.$(n).unmerge(te).unselect(["tapunselect"]),te.select(["tapselect"])):te.selected()?te.unselect(["tapunselect"]):te.select(["tapselect"]),t.redrawHint("eles",!0)),t.touchData.singleTouchMoved=!0}}}for(var an=0;an<re.length;an++)se[an]=re[an];t.dragData.didDrag=!1,R.touches.length===0&&(t.touchData.dragDelta=[],t.touchData.startPosition=[null,null,null,null,null,null],t.touchData.startGPosition=null,t.touchData.didSelect=!1),R.touches.length<2&&(R.touches.length===1&&(t.touchData.startGPosition=[R.touches[0].clientX,R.touches[0].clientY]),t.pinching=!1,t.redrawHint("eles",!0),t.redraw())},!1),typeof TouchEvent>"u"){var le=[],de=function(R){return{clientX:R.clientX,clientY:R.clientY,force:1,identifier:R.pointerId,pageX:R.pageX,pageY:R.pageY,radiusX:R.width/2,radiusY:R.height/2,screenX:R.screenX,screenY:R.screenY,target:R.target}},Pe=function(R){return{event:R,touch:de(R)}},Ce=function(R){le.push(Pe(R))},Xe=function(R){for(var te=0;te<le.length;te++){var ce=le[te];if(ce.event.pointerId===R.pointerId){le.splice(te,1);return}}},ve=function(R){var te=le.filter(function(ce){return ce.event.pointerId===R.pointerId})[0];te.event=R,te.touch=de(R)},xe=function(R){R.touches=le.map(function(te){return te.touch})},ye=function(R){return R.pointerType==="mouse"||R.pointerType===4};t.registerBinding(t.container,"pointerdown",function(fe){ye(fe)||(fe.preventDefault(),Ce(fe),xe(fe),L(fe))}),t.registerBinding(t.container,"pointerup",function(fe){ye(fe)||(Xe(fe),xe(fe),H(fe))}),t.registerBinding(t.container,"pointercancel",function(fe){ye(fe)||(Xe(fe),xe(fe),ne(fe))}),t.registerBinding(t.container,"pointermove",function(fe){ye(fe)||(fe.preventDefault(),ve(fe),xe(fe),z(fe))})}};var gr={};gr.generatePolygon=function(t,e){return this.nodeShapes[t]={renderer:this,name:t,points:e,draw:function(r,a,i,o,s,l){this.renderer.nodeShapeImpl("polygon",r,a,i,o,s,this.points)},intersectLine:function(r,a,i,o,s,l,c,u){return qi(s,l,this.points,r,a,i/2,o/2,c)},checkPoint:function(r,a,i,o,s,l,c,u){return pr(r,a,this.points,l,c,o,s,[0,-1],i)}}};gr.generateEllipse=function(){return this.nodeShapes.ellipse={renderer:this,name:"ellipse",draw:function(e,n,r,a,i,o){this.renderer.nodeShapeImpl(this.name,e,n,r,a,i)},intersectLine:function(e,n,r,a,i,o,s,l){return qg(i,o,e,n,r/2+s,a/2+s)},checkPoint:function(e,n,r,a,i,o,s,l){return oa(e,n,a,i,o,s,r)}}};gr.generateRoundPolygon=function(t,e){return this.nodeShapes[t]={renderer:this,name:t,points:e,getOrCreateCorners:function(r,a,i,o,s,l,c){if(l[c]!==void 0&&l[c+"-cx"]===r&&l[c+"-cy"]===a)return l[c];l[c]=new Array(e.length/2),l[c+"-cx"]=r,l[c+"-cy"]=a;var u=i/2,d=o/2;s=s==="auto"?pf(i,o):s;for(var f=new Array(e.length/2),h=0;h<e.length/2;h++)f[h]={x:r+u*e[h*2],y:a+d*e[h*2+1]};var p,m,_,g,P=f.length;for(m=f[P-1],p=0;p<P;p++)_=f[p%P],g=f[(p+1)%P],l[c][p]=jl(m,_,g,s),m=_,_=g;return l[c]},draw:function(r,a,i,o,s,l,c){this.renderer.nodeShapeImpl("round-polygon",r,a,i,o,s,this.points,this.getOrCreateCorners(a,i,o,s,l,c,"drawCorners"))},intersectLine:function(r,a,i,o,s,l,c,u,d){return Hg(s,l,this.points,r,a,i,o,c,this.getOrCreateCorners(r,a,i,o,u,d,"corners"))},checkPoint:function(r,a,i,o,s,l,c,u,d){return Vg(r,a,this.points,l,c,o,s,this.getOrCreateCorners(l,c,o,s,u,d,"corners"))}}};gr.generateRoundRectangle=function(){return this.nodeShapes["round-rectangle"]=this.nodeShapes.roundrectangle={renderer:this,name:"round-rectangle",points:gt(4,0),draw:function(e,n,r,a,i,o){this.renderer.nodeShapeImpl(this.name,e,n,r,a,i,this.points,o)},intersectLine:function(e,n,r,a,i,o,s,l){return ff(i,o,e,n,r,a,s,l)},checkPoint:function(e,n,r,a,i,o,s,l){var c=a/2,u=i/2;l=l==="auto"?la(a,i):l,l=Math.min(c,u,l);var d=l*2;return!!(pr(e,n,this.points,o,s,a,i-d,[0,-1],r)||pr(e,n,this.points,o,s,a-d,i,[0,-1],r)||oa(e,n,d,d,o-c+l,s-u+l,r)||oa(e,n,d,d,o+c-l,s-u+l,r)||oa(e,n,d,d,o+c-l,s+u-l,r)||oa(e,n,d,d,o-c+l,s+u-l,r))}}};gr.generateCutRectangle=function(){return this.nodeShapes["cut-rectangle"]=this.nodeShapes.cutrectangle={renderer:this,name:"cut-rectangle",cornerLength:kl(),points:gt(4,0),draw:function(e,n,r,a,i,o){this.renderer.nodeShapeImpl(this.name,e,n,r,a,i,null,o)},generateCutTrianglePts:function(e,n,r,a,i){var o=i==="auto"?this.cornerLength:i,s=n/2,l=e/2,c=r-l,u=r+l,d=a-s,f=a+s;return{topLeft:[c,d+o,c+o,d,c+o,d+o],topRight:[u-o,d,u,d+o,u-o,d+o],bottomRight:[u,f-o,u-o,f,u-o,f-o],bottomLeft:[c+o,f,c,f-o,c+o,f-o]}},intersectLine:function(e,n,r,a,i,o,s,l){var c=this.generateCutTrianglePts(r+2*s,a+2*s,e,n,l),u=[].concat.apply([],[c.topLeft.splice(0,4),c.topRight.splice(0,4),c.bottomRight.splice(0,4),c.bottomLeft.splice(0,4)]);return qi(i,o,u,e,n)},checkPoint:function(e,n,r,a,i,o,s,l){var c=l==="auto"?this.cornerLength:l;if(pr(e,n,this.points,o,s,a,i-2*c,[0,-1],r)||pr(e,n,this.points,o,s,a-2*c,i,[0,-1],r))return!0;var u=this.generateCutTrianglePts(a,i,o,s);return xt(e,n,u.topLeft)||xt(e,n,u.topRight)||xt(e,n,u.bottomRight)||xt(e,n,u.bottomLeft)}}};gr.generateBarrel=function(){return this.nodeShapes.barrel={renderer:this,name:"barrel",points:gt(4,0),draw:function(e,n,r,a,i,o){this.renderer.nodeShapeImpl(this.name,e,n,r,a,i)},intersectLine:function(e,n,r,a,i,o,s,l){var c=.15,u=.5,d=.85,f=this.generateBarrelBezierPts(r+2*s,a+2*s,e,n),h=function(_){var g=Ja({x:_[0],y:_[1]},{x:_[2],y:_[3]},{x:_[4],y:_[5]},c),P=Ja({x:_[0],y:_[1]},{x:_[2],y:_[3]},{x:_[4],y:_[5]},u),y=Ja({x:_[0],y:_[1]},{x:_[2],y:_[3]},{x:_[4],y:_[5]},d);return[_[0],_[1],g.x,g.y,P.x,P.y,y.x,y.y,_[4],_[5]]},p=[].concat(h(f.topLeft),h(f.topRight),h(f.bottomRight),h(f.bottomLeft));return qi(i,o,p,e,n)},generateBarrelBezierPts:function(e,n,r,a){var i=n/2,o=e/2,s=r-o,l=r+o,c=a-i,u=a+i,d=ll(e,n),f=d.heightOffset,h=d.widthOffset,p=d.ctrlPtOffsetPct*e,m={topLeft:[s,c+f,s+p,c,s+h,c],topRight:[l-h,c,l-p,c,l,c+f],bottomRight:[l,u-f,l-p,u,l-h,u],bottomLeft:[s+h,u,s+p,u,s,u-f]};return m.topLeft.isTop=!0,m.topRight.isTop=!0,m.bottomLeft.isBottom=!0,m.bottomRight.isBottom=!0,m},checkPoint:function(e,n,r,a,i,o,s,l){var c=ll(a,i),u=c.heightOffset,d=c.widthOffset;if(pr(e,n,this.points,o,s,a,i-2*u,[0,-1],r)||pr(e,n,this.points,o,s,a-2*d,i,[0,-1],r))return!0;for(var f=this.generateBarrelBezierPts(a,i,o,s),h=function(D,k,$){var M=$[4],b=$[2],x=$[0],K=$[5],X=$[1],v=Math.min(M,x),A=Math.max(M,x),w=Math.min(K,X),O=Math.max(K,X);if(v<=D&&D<=A&&w<=k&&k<=O){var N=Gg(M,b,x),S=Fg(N[0],N[1],N[2],D),I=S.filter(function(q){return 0<=q&&q<=1});if(I.length>0)return I[0]}return null},p=Object.keys(f),m=0;m<p.length;m++){var _=p[m],g=f[_],P=h(e,n,g);if(P!=null){var y=g[5],C=g[3],E=g[1],T=Qn(y,C,E,P);if(g.isTop&&T<=n||g.isBottom&&n<=T)return!0}}return!1}}};gr.generateBottomRoundrectangle=function(){return this.nodeShapes["bottom-round-rectangle"]=this.nodeShapes.bottomroundrectangle={renderer:this,name:"bottom-round-rectangle",points:gt(4,0),draw:function(e,n,r,a,i,o){this.renderer.nodeShapeImpl(this.name,e,n,r,a,i,this.points,o)},intersectLine:function(e,n,r,a,i,o,s,l){var c=e-(r/2+s),u=n-(a/2+s),d=u,f=e+(r/2+s),h=Wr(i,o,e,n,c,u,f,d,!1);return h.length>0?h:ff(i,o,e,n,r,a,s,l)},checkPoint:function(e,n,r,a,i,o,s,l){l=l==="auto"?la(a,i):l;var c=2*l;if(pr(e,n,this.points,o,s,a,i-c,[0,-1],r)||pr(e,n,this.points,o,s,a-c,i,[0,-1],r))return!0;var u=a/2+2*r,d=i/2+2*r,f=[o-u,s-d,o-u,s,o+u,s,o+u,s-d];return!!(xt(e,n,f)||oa(e,n,c,c,o+a/2-l,s+i/2-l,r)||oa(e,n,c,c,o-a/2+l,s+i/2-l,r))}}};gr.registerNodeShapes=function(){var t=this.nodeShapes={},e=this;this.generateEllipse(),this.generatePolygon("triangle",gt(3,0)),this.generateRoundPolygon("round-triangle",gt(3,0)),this.generatePolygon("rectangle",gt(4,0)),t.square=t.rectangle,this.generateRoundRectangle(),this.generateCutRectangle(),this.generateBarrel(),this.generateBottomRoundrectangle();{var n=[0,1,1,0,0,-1,-1,0];this.generatePolygon("diamond",n),this.generateRoundPolygon("round-diamond",n)}this.generatePolygon("pentagon",gt(5,0)),this.generateRoundPolygon("round-pentagon",gt(5,0)),this.generatePolygon("hexagon",gt(6,0)),this.generateRoundPolygon("round-hexagon",gt(6,0)),this.generatePolygon("heptagon",gt(7,0)),this.generateRoundPolygon("round-heptagon",gt(7,0)),this.generatePolygon("octagon",gt(8,0)),this.generateRoundPolygon("round-octagon",gt(8,0));var r=new Array(20);{var a=cl(5,0),i=cl(5,Math.PI/5),o=.5*(3-Math.sqrt(5));o*=1.57;for(var s=0;s<i.length/2;s++)i[s*2]*=o,i[s*2+1]*=o;for(var s=0;s<20/4;s++)r[s*4]=a[s*2],r[s*4+1]=a[s*2+1],r[s*4+2]=i[s*2],r[s*4+3]=i[s*2+1]}r=hf(r),this.generatePolygon("star",r),this.generatePolygon("vee",[-1,-1,0,-.333,1,-1,0,1]),this.generatePolygon("rhomboid",[-1,-1,.333,-1,1,1,-.333,1]),this.generatePolygon("right-rhomboid",[-.333,-1,1,-1,.333,1,-1,1]),this.nodeShapes.concavehexagon=this.generatePolygon("concave-hexagon",[-1,-.95,-.75,0,-1,.95,1,.95,.75,0,1,-.95]);{var l=[-1,-1,.25,-1,1,0,.25,1,-1,1];this.generatePolygon("tag",l),this.generateRoundPolygon("round-tag",l)}t.makePolygon=function(c){var u=c.join("$"),d="polygon-"+u,f;return(f=this[d])?f:e.generatePolygon(d,c)}};var co={};co.timeToRender=function(){return this.redrawTotalTime/this.redrawCount};co.redraw=function(t){t=t||sf();var e=this;e.averageRedrawTime===void 0&&(e.averageRedrawTime=0),e.lastRedrawTime===void 0&&(e.lastRedrawTime=0),e.lastDrawTime===void 0&&(e.lastDrawTime=0),e.requestedFrame=!0,e.renderOptions=t};co.beforeRender=function(t,e){if(!this.destroyed){e==null&&En("Priority is not optional for beforeRender");var n=this.beforeRenderCallbacks;n.push({fn:t,priority:e}),n.sort(function(r,a){return a.priority-r.priority})}};var Cd=function(e,n,r){for(var a=e.beforeRenderCallbacks,i=0;i<a.length;i++)a[i].fn(n,r)};co.startRenderLoop=function(){var t=this,e=t.cy;if(!t.renderLoopStarted){t.renderLoopStarted=!0;var n=function r(a){if(!t.destroyed){if(!e.batching())if(t.requestedFrame&&!t.skipFrame){Cd(t,!0,a);var i=hr();t.render(t.renderOptions);var o=t.lastDrawTime=hr();t.averageRedrawTime===void 0&&(t.averageRedrawTime=o-i),t.redrawCount===void 0&&(t.redrawCount=0),t.redrawCount++,t.redrawTotalTime===void 0&&(t.redrawTotalTime=0);var s=o-i;t.redrawTotalTime+=s,t.lastRedrawTime=s,t.averageRedrawTime=t.averageRedrawTime/2+s/2,t.requestedFrame=!1}else Cd(t,!1,a);t.skipFrame=!1,Is(r)}};Is(n)}};var Bb=function(e){this.init(e)},fh=Bb,hi=fh.prototype;hi.clientFunctions=["redrawHint","render","renderTo","matchCanvasSize","nodeShapeImpl","arrowShapeImpl"];hi.init=function(t){var e=this;e.options=t,e.cy=t.cy;var n=e.container=t.cy.container(),r=e.cy.window();if(r){var a=r.document,i=a.head,o="__________cytoscape_stylesheet",s="__________cytoscape_container",l=a.getElementById(o)!=null;if(n.className.indexOf(s)<0&&(n.className=(n.className||"")+" "+s),!l){var c=a.createElement("style");c.id=o,c.textContent="."+s+" { position: relative; }",i.insertBefore(c,i.children[0])}var u=r.getComputedStyle(n),d=u.getPropertyValue("position");d==="static"&&pn("A Cytoscape container has style position:static and so can not use UI extensions properly")}e.selection=[void 0,void 0,void 0,void 0,0],e.bezierProjPcts=[.05,.225,.4,.5,.6,.775,.95],e.hoverData={down:null,last:null,downTime:null,triggerMode:null,dragging:!1,initialPan:[null,null],capture:!1},e.dragData={possibleDragElements:[]},e.touchData={start:null,capture:!1,startPosition:[null,null,null,null,null,null],singleTouchStartTime:null,singleTouchMoved:!0,now:[null,null,null,null,null,null],earlier:[null,null,null,null,null,null]},e.redraws=0,e.showFps=t.showFps,e.debug=t.debug,e.webgl=t.webgl,e.hideEdgesOnViewport=t.hideEdgesOnViewport,e.textureOnViewport=t.textureOnViewport,e.wheelSensitivity=t.wheelSensitivity,e.motionBlurEnabled=t.motionBlur,e.forcedPixelRatio=Se(t.pixelRatio)?t.pixelRatio:null,e.motionBlur=t.motionBlur,e.motionBlurOpacity=t.motionBlurOpacity,e.motionBlurTransparency=1-e.motionBlurOpacity,e.motionBlurPxRatio=1,e.mbPxRBlurry=1,e.minMbLowQualFrames=4,e.fullQualityMb=!1,e.clearedForMotionBlur=[],e.desktopTapThreshold=t.desktopTapThreshold,e.desktopTapThreshold2=t.desktopTapThreshold*t.desktopTapThreshold,e.touchTapThreshold=t.touchTapThreshold,e.touchTapThreshold2=t.touchTapThreshold*t.touchTapThreshold,e.tapholdDuration=500,e.bindings=[],e.beforeRenderCallbacks=[],e.beforeRenderPriorities={animations:400,eleCalcs:300,eleTxrDeq:200,lyrTxrDeq:150,lyrTxrSkip:100},e.registerNodeShapes(),e.registerArrowShapes(),e.registerCalculationListeners()};hi.notify=function(t,e){var n=this,r=n.cy;if(!this.destroyed){if(t==="init"){n.load();return}if(t==="destroy"){n.destroy();return}(t==="add"||t==="remove"||t==="move"&&r.hasCompoundNodes()||t==="load"||t==="zorder"||t==="mount")&&n.invalidateCachedZSortedEles(),t==="viewport"&&n.redrawHint("select",!0),t==="gc"&&n.redrawHint("gc",!0),(t==="load"||t==="resize"||t==="mount")&&(n.invalidateContainerClientCoordsCache(),n.matchCanvasSize(n.container)),n.redrawHint("eles",!0),n.redrawHint("drag",!0),this.startRenderLoop(),this.redraw()}};hi.destroy=function(){var t=this;t.destroyed=!0,t.cy.stopAnimationLoop();for(var e=0;e<t.bindings.length;e++){var n=t.bindings[e],r=n,a=r.target;(a.off||a.removeEventListener).apply(a,r.args)}if(t.bindings=[],t.beforeRenderCallbacks=[],t.onUpdateEleCalcsFns=[],t.removeObserver&&t.removeObserver.disconnect(),t.styleObserver&&t.styleObserver.disconnect(),t.resizeObserver&&t.resizeObserver.disconnect(),t.labelCalcDiv)try{document.body.removeChild(t.labelCalcDiv)}catch{}};hi.isHeadless=function(){return!1};[Fl,uh,dh,fi,gr,co].forEach(function(t){Ve(hi,t)});var nl=1e3/60,hh={setupDequeueing:function(e){return function(){var r=this,a=this.renderer;if(!r.dequeueingSetup){r.dequeueingSetup=!0;var i=ro(function(){a.redrawHint("eles",!0),a.redrawHint("drag",!0),a.redraw()},e.deqRedrawThreshold),o=function(c,u){var d=hr(),f=a.averageRedrawTime,h=a.lastRedrawTime,p=[],m=a.cy.extent(),_=a.getPixelRatio();for(c||a.flushRenderedStyleQueue();;){var g=hr(),P=g-d,y=g-u;if(h<nl){var C=nl-(c?f:0);if(y>=e.deqFastCost*C)break}else if(c){if(P>=e.deqCost*h||P>=e.deqAvgCost*f)break}else if(y>=e.deqNoDrawCost*nl)break;var E=e.deq(r,_,m);if(E.length>0)for(var T=0;T<E.length;T++)p.push(E[T]);else break}p.length>0&&(e.onDeqd(r,p),!c&&e.shouldRedraw(r,p,_,m)&&i())},s=e.priority||wl;a.beforeRender(o,s(r))}}}},kb=function(){function t(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Ls;Yr(this,t),this.idsByKey=new rr,this.keyForId=new rr,this.cachesByLvl=new rr,this.lvls=[],this.getKey=e,this.doesEleInvalidateKey=n}return zr(t,[{key:"getIdsFor",value:function(n){n==null&&En("Can not get id list for null key");var r=this.idsByKey,a=this.idsByKey.get(n);return a||(a=new ii,r.set(n,a)),a}},{key:"addIdForKey",value:function(n,r){n!=null&&this.getIdsFor(n).add(r)}},{key:"deleteIdForKey",value:function(n,r){n!=null&&this.getIdsFor(n).delete(r)}},{key:"getNumberOfIdsForKey",value:function(n){return n==null?0:this.getIdsFor(n).size}},{key:"updateKeyMappingFor",value:function(n){var r=n.id(),a=this.keyForId.get(r),i=this.getKey(n);this.deleteIdForKey(a,r),this.addIdForKey(i,r),this.keyForId.set(r,i)}},{key:"deleteKeyMappingFor",value:function(n){var r=n.id(),a=this.keyForId.get(r);this.deleteIdForKey(a,r),this.keyForId.delete(r)}},{key:"keyHasChangedFor",value:function(n){var r=n.id(),a=this.keyForId.get(r),i=this.getKey(n);return a!==i}},{key:"isInvalid",value:function(n){return this.keyHasChangedFor(n)||this.doesEleInvalidateKey(n)}},{key:"getCachesAt",value:function(n){var r=this.cachesByLvl,a=this.lvls,i=r.get(n);return i||(i=new rr,r.set(n,i),a.push(n)),i}},{key:"getCache",value:function(n,r){return this.getCachesAt(r).get(n)}},{key:"get",value:function(n,r){var a=this.getKey(n),i=this.getCache(a,r);return i!=null&&this.updateKeyMappingFor(n),i}},{key:"getForCachedKey",value:function(n,r){var a=this.keyForId.get(n.id()),i=this.getCache(a,r);return i}},{key:"hasCache",value:function(n,r){return this.getCachesAt(r).has(n)}},{key:"has",value:function(n,r){var a=this.getKey(n);return this.hasCache(a,r)}},{key:"setCache",value:function(n,r,a){a.key=n,this.getCachesAt(r).set(n,a)}},{key:"set",value:function(n,r,a){var i=this.getKey(n);this.setCache(i,r,a),this.updateKeyMappingFor(n)}},{key:"deleteCache",value:function(n,r){this.getCachesAt(r).delete(n)}},{key:"delete",value:function(n,r){var a=this.getKey(n);this.deleteCache(a,r)}},{key:"invalidateKey",value:function(n){var r=this;this.lvls.forEach(function(a){return r.deleteCache(n,a)})}},{key:"invalidate",value:function(n){var r=n.id(),a=this.keyForId.get(r);this.deleteKeyMappingFor(n);var i=this.doesEleInvalidateKey(n);return i&&this.invalidateKey(a),i||this.getNumberOfIdsForKey(a)===0}}]),t}(),Ed=25,Es=50,Ms=-4,bl=3,ph=7.99,Db=8,$b=1024,Sb=1024,Wb=1024,Nb=.2,Mb=.8,Rb=10,Ib=.15,Lb=.1,Ub=.9,Fb=.9,jb=100,Yb=1,Ga={dequeue:"dequeue",downscale:"downscale",highQuality:"highQuality"},zb=et({getKey:null,doesEleInvalidateKey:Ls,drawElement:null,getBoundingBox:null,getRotationPoint:null,getRotationOffset:null,isVisible:rf,allowEdgeTxrCaching:!0,allowParentTxrCaching:!0}),Mi=function(e,n){var r=this;r.renderer=e,r.onDequeues=[];var a=zb(n);Ve(r,a),r.lookup=new kb(a.getKey,a.doesEleInvalidateKey),r.setupDequeueing()},Fn=Mi.prototype;Fn.reasons=Ga;Fn.getTextureQueue=function(t){var e=this;return e.eleImgCaches=e.eleImgCaches||{},e.eleImgCaches[t]=e.eleImgCaches[t]||[]};Fn.getRetiredTextureQueue=function(t){var e=this,n=e.eleImgCaches.retired=e.eleImgCaches.retired||{},r=n[t]=n[t]||[];return r};Fn.getElementQueue=function(){var t=this,e=t.eleCacheQueue=t.eleCacheQueue||new ao(function(n,r){return r.reqs-n.reqs});return e};Fn.getElementKeyToQueue=function(){var t=this,e=t.eleKeyToCacheQueue=t.eleKeyToCacheQueue||{};return e};Fn.getElement=function(t,e,n,r,a){var i=this,o=this.renderer,s=o.cy.zoom(),l=this.lookup;if(!e||e.w===0||e.h===0||isNaN(e.w)||isNaN(e.h)||!t.visible()||t.removed()||!i.allowEdgeTxrCaching&&t.isEdge()||!i.allowParentTxrCaching&&t.isParent())return null;if(r==null&&(r=Math.ceil(Tl(s*n))),r<Ms)r=Ms;else if(s>=ph||r>bl)return null;var c=Math.pow(2,r),u=e.h*c,d=e.w*c,f=o.eleTextBiggerThanMin(t,c);if(!this.isVisible(t,f))return null;var h=l.get(t,r);if(h&&h.invalidated&&(h.invalidated=!1,h.texture.invalidatedWidth-=h.width),h)return h;var p;if(u<=Ed?p=Ed:u<=Es?p=Es:p=Math.ceil(u/Es)*Es,u>Wb||d>Sb)return null;var m=i.getTextureQueue(p),_=m[m.length-2],g=function(){return i.recycleTexture(p,d)||i.addTexture(p,d)};_||(_=m[m.length-1]),_||(_=g()),_.width-_.usedWidth<d&&(_=g());for(var P=function(v){return v&&v.scaledLabelShown===f},y=a&&a===Ga.dequeue,C=a&&a===Ga.highQuality,E=a&&a===Ga.downscale,T,B=r+1;B<=bl;B++){var D=l.get(t,B);if(D){T=D;break}}var k=T&&T.level===r+1?T:null,$=function(){_.context.drawImage(k.texture.canvas,k.x,0,k.width,k.height,_.usedWidth,0,d,u)};if(_.context.setTransform(1,0,0,1,0,0),_.context.clearRect(_.usedWidth,0,d,p),P(k))$();else if(P(T))if(C){for(var M=T.level;M>r;M--)k=i.getElement(t,e,n,M,Ga.downscale);$()}else return i.queueElement(t,T.level-1),T;else{var b;if(!y&&!C&&!E)for(var x=r-1;x>=Ms;x--){var K=l.get(t,x);if(K){b=K;break}}if(P(b))return i.queueElement(t,r),b;_.context.translate(_.usedWidth,0),_.context.scale(c,c),this.drawElement(_.context,t,e,f,!1),_.context.scale(1/c,1/c),_.context.translate(-_.usedWidth,0)}return h={x:_.usedWidth,texture:_,level:r,scale:c,width:d,height:u,scaledLabelShown:f},_.usedWidth+=Math.ceil(d+Db),_.eleCaches.push(h),l.set(t,r,h),i.checkTextureFullness(_),h};Fn.invalidateElements=function(t){for(var e=0;e<t.length;e++)this.invalidateElement(t[e])};Fn.invalidateElement=function(t){var e=this,n=e.lookup,r=[],a=n.isInvalid(t);if(a){for(var i=Ms;i<=bl;i++){var o=n.getForCachedKey(t,i);o&&r.push(o)}var s=n.invalidate(t);if(s)for(var l=0;l<r.length;l++){var c=r[l],u=c.texture;u.invalidatedWidth+=c.width,c.invalidated=!0,e.checkTextureUtility(u)}e.removeFromQueue(t)}};Fn.checkTextureUtility=function(t){t.invalidatedWidth>=Nb*t.width&&this.retireTexture(t)};Fn.checkTextureFullness=function(t){var e=this,n=e.getTextureQueue(t.height);t.usedWidth/t.width>Mb&&t.fullnessChecks>=Rb?Lr(n,t):t.fullnessChecks++};Fn.retireTexture=function(t){var e=this,n=t.height,r=e.getTextureQueue(n),a=this.lookup;Lr(r,t),t.retired=!0;for(var i=t.eleCaches,o=0;o<i.length;o++){var s=i[o];a.deleteCache(s.key,s.level)}Ol(i);var l=e.getRetiredTextureQueue(n);l.push(t)};Fn.addTexture=function(t,e){var n=this,r=n.getTextureQueue(t),a={};return r.push(a),a.eleCaches=[],a.height=t,a.width=Math.max($b,e),a.usedWidth=0,a.invalidatedWidth=0,a.fullnessChecks=0,a.canvas=n.renderer.makeOffscreenCanvas(a.width,a.height),a.context=a.canvas.getContext("2d"),a};Fn.recycleTexture=function(t,e){for(var n=this,r=n.getTextureQueue(t),a=n.getRetiredTextureQueue(t),i=0;i<a.length;i++){var o=a[i];if(o.width>=e)return o.retired=!1,o.usedWidth=0,o.invalidatedWidth=0,o.fullnessChecks=0,Ol(o.eleCaches),o.context.setTransform(1,0,0,1,0,0),o.context.clearRect(0,0,o.width,o.height),Lr(a,o),r.push(o),o}};Fn.queueElement=function(t,e){var n=this,r=n.getElementQueue(),a=n.getElementKeyToQueue(),i=this.getKey(t),o=a[i];if(o)o.level=Math.max(o.level,e),o.eles.merge(t),o.reqs++,r.updateItem(o);else{var s={eles:t.spawn().merge(t),level:e,reqs:1,key:i};r.push(s),a[i]=s}};Fn.dequeue=function(t){for(var e=this,n=e.getElementQueue(),r=e.getElementKeyToQueue(),a=[],i=e.lookup,o=0;o<Yb&&n.size()>0;o++){var s=n.pop(),l=s.key,c=s.eles[0],u=i.hasCache(c,s.level);if(r[l]=null,u)continue;a.push(s);var d=e.getBoundingBox(c);e.getElement(c,d,t,s.level,Ga.dequeue)}return a};Fn.removeFromQueue=function(t){var e=this,n=e.getElementQueue(),r=e.getElementKeyToQueue(),a=this.getKey(t),i=r[a];i!=null&&(i.eles.length===1?(i.reqs=El,n.updateItem(i),n.pop(),r[a]=null):i.eles.unmerge(t))};Fn.onDequeue=function(t){this.onDequeues.push(t)};Fn.offDequeue=function(t){Lr(this.onDequeues,t)};Fn.setupDequeueing=hh.setupDequeueing({deqRedrawThreshold:jb,deqCost:Ib,deqAvgCost:Lb,deqNoDrawCost:Ub,deqFastCost:Fb,deq:function(e,n,r){return e.dequeue(n,r)},onDeqd:function(e,n){for(var r=0;r<e.onDequeues.length;r++){var a=e.onDequeues[r];a(n)}},shouldRedraw:function(e,n,r,a){for(var i=0;i<n.length;i++)for(var o=n[i].eles,s=0;s<o.length;s++){var l=o[s].boundingBox();if(Bl(l,a))return!0}return!1},priority:function(e){return e.renderer.beforeRenderPriorities.eleTxrDeq}});var Vb=1,Ii=-4,Hs=2,qb=3.99,Hb=50,Gb=50,Jb=.15,Zb=.1,Qb=.9,ey=.9,ny=1,wd=250,ty=4e3*4e3,Od=32767,ry=!0,mh=function(e){var n=this,r=n.renderer=e,a=r.cy;n.layersByLevel={},n.firstGet=!0,n.lastInvalidationTime=hr()-2*wd,n.skipping=!1,n.eleTxrDeqs=a.collection(),n.scheduleElementRefinement=ro(function(){n.refineElementTextures(n.eleTxrDeqs),n.eleTxrDeqs.unmerge(n.eleTxrDeqs)},Gb),r.beforeRender(function(o,s){s-n.lastInvalidationTime<=wd?n.skipping=!0:n.skipping=!1},r.beforeRenderPriorities.lyrTxrSkip);var i=function(s,l){return l.reqs-s.reqs};n.layersQueue=new ao(i),n.setupDequeueing()},it=mh.prototype,Td=0,ay=Math.pow(2,53)-1;it.makeLayer=function(t,e){var n=Math.pow(2,e),r=Math.ceil(t.w*n),a=Math.ceil(t.h*n),i=this.renderer.makeOffscreenCanvas(r,a),o={id:Td=++Td%ay,bb:t,level:e,width:r,height:a,canvas:i,context:i.getContext("2d"),eles:[],elesQueue:[],reqs:0},s=o.context,l=-o.bb.x1,c=-o.bb.y1;return s.scale(n,n),s.translate(l,c),o};it.getLayers=function(t,e,n){var r=this,a=r.renderer,i=a.cy,o=i.zoom(),s=r.firstGet;if(r.firstGet=!1,n==null){if(n=Math.ceil(Tl(o*e)),n<Ii)n=Ii;else if(o>=qb||n>Hs)return null}r.validateLayersElesOrdering(n,t);var l=r.layersByLevel,c=Math.pow(2,n),u=l[n]=l[n]||[],d,f=r.levelIsComplete(n,t),h,p=function(){var $=function(X){if(r.validateLayersElesOrdering(X,t),r.levelIsComplete(X,t))return h=l[X],!0},M=function(X){if(!h)for(var v=n+X;Ii<=v&&v<=Hs&&!$(v);v+=X);};M(1),M(-1);for(var b=u.length-1;b>=0;b--){var x=u[b];x.invalid&&Lr(u,x)}};if(!f)p();else return u;var m=function(){if(!d){d=At();for(var $=0;$<t.length;$++)uf(d,t[$].boundingBox())}return d},_=function($){$=$||{};var M=$.after;m();var b=Math.ceil(d.w*c),x=Math.ceil(d.h*c);if(b>Od||x>Od)return null;var K=b*x;if(K>ty)return null;var X=r.makeLayer(d,n);if(M!=null){var v=u.indexOf(M)+1;u.splice(v,0,X)}else($.insert===void 0||$.insert)&&u.unshift(X);return X};if(r.skipping&&!s)return null;for(var g=null,P=t.length/Vb,y=!s,C=0;C<t.length;C++){var E=t[C],T=E._private.rscratch,B=T.imgLayerCaches=T.imgLayerCaches||{},D=B[n];if(D){g=D;continue}if((!g||g.eles.length>=P||!df(g.bb,E.boundingBox()))&&(g=_({insert:!0,after:g}),!g))return null;h||y?r.queueLayer(g,E):r.drawEleInLayer(g,E,n,e),g.eles.push(E),B[n]=g}return h||(y?null:u)};it.getEleLevelForLayerLevel=function(t,e){return t};it.drawEleInLayer=function(t,e,n,r){var a=this,i=this.renderer,o=t.context,s=e.boundingBox();s.w===0||s.h===0||!e.visible()||(n=a.getEleLevelForLayerLevel(n,r),i.setImgSmoothing(o,!1),i.drawCachedElement(o,e,null,null,n,ry),i.setImgSmoothing(o,!0))};it.levelIsComplete=function(t,e){var n=this,r=n.layersByLevel[t];if(!r||r.length===0)return!1;for(var a=0,i=0;i<r.length;i++){var o=r[i];if(o.reqs>0||o.invalid)return!1;a+=o.eles.length}return a===e.length};it.validateLayersElesOrdering=function(t,e){var n=this.layersByLevel[t];if(n)for(var r=0;r<n.length;r++){for(var a=n[r],i=-1,o=0;o<e.length;o++)if(a.eles[0]===e[o]){i=o;break}if(i<0){this.invalidateLayer(a);continue}for(var s=i,o=0;o<a.eles.length;o++)if(a.eles[o]!==e[s+o]){this.invalidateLayer(a);break}}};it.updateElementsInLayers=function(t,e){for(var n=this,r=no(t[0]),a=0;a<t.length;a++)for(var i=r?null:t[a],o=r?t[a]:t[a].ele,s=o._private.rscratch,l=s.imgLayerCaches=s.imgLayerCaches||{},c=Ii;c<=Hs;c++){var u=l[c];u&&(i&&n.getEleLevelForLayerLevel(u.level)!==i.level||e(u,o,i))}};it.haveLayers=function(){for(var t=this,e=!1,n=Ii;n<=Hs;n++){var r=t.layersByLevel[n];if(r&&r.length>0){e=!0;break}}return e};it.invalidateElements=function(t){var e=this;t.length!==0&&(e.lastInvalidationTime=hr(),!(t.length===0||!e.haveLayers())&&e.updateElementsInLayers(t,function(r,a,i){e.invalidateLayer(r)}))};it.invalidateLayer=function(t){if(this.lastInvalidationTime=hr(),!t.invalid){var e=t.level,n=t.eles,r=this.layersByLevel[e];Lr(r,t),t.elesQueue=[],t.invalid=!0,t.replacement&&(t.replacement.invalid=!0);for(var a=0;a<n.length;a++){var i=n[a]._private.rscratch.imgLayerCaches;i&&(i[e]=null)}}};it.refineElementTextures=function(t){var e=this;e.updateElementsInLayers(t,function(r,a,i){var o=r.replacement;if(o||(o=r.replacement=e.makeLayer(r.bb,r.level),o.replaces=r,o.eles=r.eles),!o.reqs)for(var s=0;s<o.eles.length;s++)e.queueLayer(o,o.eles[s])})};it.enqueueElementRefinement=function(t){this.eleTxrDeqs.merge(t),this.scheduleElementRefinement()};it.queueLayer=function(t,e){var n=this,r=n.layersQueue,a=t.elesQueue,i=a.hasId=a.hasId||{};if(!t.replacement){if(e){if(i[e.id()])return;a.push(e),i[e.id()]=!0}t.reqs?(t.reqs++,r.updateItem(t)):(t.reqs=1,r.push(t))}};it.dequeue=function(t){for(var e=this,n=e.layersQueue,r=[],a=0;a<ny&&n.size()!==0;){var i=n.peek();if(i.replacement){n.pop();continue}if(i.replaces&&i!==i.replaces.replacement){n.pop();continue}if(i.invalid){n.pop();continue}var o=i.elesQueue.shift();o&&(e.drawEleInLayer(i,o,i.level,t),a++),r.length===0&&r.push(!0),i.elesQueue.length===0&&(n.pop(),i.reqs=0,i.replaces&&e.applyLayerReplacement(i),e.requestRedraw())}return r};it.applyLayerReplacement=function(t){var e=this,n=e.layersByLevel[t.level],r=t.replaces,a=n.indexOf(r);if(!(a<0||r.invalid)){n[a]=t;for(var i=0;i<t.eles.length;i++){var o=t.eles[i]._private,s=o.imgLayerCaches=o.imgLayerCaches||{};s&&(s[t.level]=t)}e.requestRedraw()}};it.requestRedraw=ro(function(){var t=this.renderer;t.redrawHint("eles",!0),t.redrawHint("drag",!0),t.redraw()},100);it.setupDequeueing=hh.setupDequeueing({deqRedrawThreshold:Hb,deqCost:Jb,deqAvgCost:Zb,deqNoDrawCost:Qb,deqFastCost:ey,deq:function(e,n){return e.dequeue(n)},onDeqd:wl,shouldRedraw:rf,priority:function(e){return e.renderer.beforeRenderPriorities.lyrTxrDeq}});var gh={},Bd;function iy(t,e){for(var n=0;n<e.length;n++){var r=e[n];t.lineTo(r.x,r.y)}}function oy(t,e,n){for(var r,a=0;a<e.length;a++){var i=e[a];a===0&&(r=i),t.lineTo(i.x,i.y)}t.quadraticCurveTo(n.x,n.y,r.x,r.y)}function kd(t,e,n){t.beginPath&&t.beginPath();for(var r=e,a=0;a<r.length;a++){var i=r[a];t.lineTo(i.x,i.y)}var o=n,s=n[0];t.moveTo(s.x,s.y);for(var a=1;a<o.length;a++){var i=o[a];t.lineTo(i.x,i.y)}t.closePath&&t.closePath()}function sy(t,e,n,r,a){t.beginPath&&t.beginPath(),t.arc(n,r,a,0,Math.PI*2,!1);var i=e,o=i[0];t.moveTo(o.x,o.y);for(var s=0;s<i.length;s++){var l=i[s];t.lineTo(l.x,l.y)}t.closePath&&t.closePath()}function cy(t,e,n,r){t.arc(e,n,r,0,Math.PI*2,!1)}gh.arrowShapeImpl=function(t){return(Bd||(Bd={polygon:iy,"triangle-backcurve":oy,"triangle-tee":kd,"circle-triangle":sy,"triangle-cross":kd,circle:cy}))[t]};var or={};or.drawElement=function(t,e,n,r,a,i){var o=this;e.isNode()?o.drawNode(t,e,n,r,a,i):o.drawEdge(t,e,n,r,a,i)};or.drawElementOverlay=function(t,e){var n=this;e.isNode()?n.drawNodeOverlay(t,e):n.drawEdgeOverlay(t,e)};or.drawElementUnderlay=function(t,e){var n=this;e.isNode()?n.drawNodeUnderlay(t,e):n.drawEdgeUnderlay(t,e)};or.drawCachedElementPortion=function(t,e,n,r,a,i,o,s){var l=this,c=n.getBoundingBox(e);if(!(c.w===0||c.h===0)){var u=n.getElement(e,c,r,a,i);if(u!=null){var d=s(l,e);if(d===0)return;var f=o(l,e),h=c.x1,p=c.y1,m=c.w,_=c.h,g,P,y,C,E;if(f!==0){var T=n.getRotationPoint(e);y=T.x,C=T.y,t.translate(y,C),t.rotate(f),E=l.getImgSmoothing(t),E||l.setImgSmoothing(t,!0);var B=n.getRotationOffset(e);g=B.x,P=B.y}else g=h,P=p;var D;d!==1&&(D=t.globalAlpha,t.globalAlpha=D*d),t.drawImage(u.texture.canvas,u.x,0,u.width,u.height,g,P,m,_),d!==1&&(t.globalAlpha=D),f!==0&&(t.rotate(-f),t.translate(-y,-C),E||l.setImgSmoothing(t,!1))}else n.drawElement(t,e)}};var ly=function(){return 0},uy=function(e,n){return e.getTextAngle(n,null)},dy=function(e,n){return e.getTextAngle(n,"source")},fy=function(e,n){return e.getTextAngle(n,"target")},hy=function(e,n){return n.effectiveOpacity()},tl=function(e,n){return n.pstyle("text-opacity").pfValue*n.effectiveOpacity()};or.drawCachedElement=function(t,e,n,r,a,i){var o=this,s=o.data,l=s.eleTxrCache,c=s.lblTxrCache,u=s.slbTxrCache,d=s.tlbTxrCache,f=e.boundingBox(),h=i===!0?l.reasons.highQuality:null;if(!(f.w===0||f.h===0||!e.visible())&&(!r||Bl(f,r))){var p=e.isEdge(),m=e.element()._private.rscratch.badLine;o.drawElementUnderlay(t,e),o.drawCachedElementPortion(t,e,l,n,a,h,ly,hy),(!p||!m)&&o.drawCachedElementPortion(t,e,c,n,a,h,uy,tl),p&&!m&&(o.drawCachedElementPortion(t,e,u,n,a,h,dy,tl),o.drawCachedElementPortion(t,e,d,n,a,h,fy,tl)),o.drawElementOverlay(t,e)}};or.drawElements=function(t,e){for(var n=this,r=0;r<e.length;r++){var a=e[r];n.drawElement(t,a)}};or.drawCachedElements=function(t,e,n,r){for(var a=this,i=0;i<e.length;i++){var o=e[i];a.drawCachedElement(t,o,n,r)}};or.drawCachedNodes=function(t,e,n,r){for(var a=this,i=0;i<e.length;i++){var o=e[i];o.isNode()&&a.drawCachedElement(t,o,n,r)}};or.drawLayeredElements=function(t,e,n,r){var a=this,i=a.data.lyrTxrCache.getLayers(e,n);if(i)for(var o=0;o<i.length;o++){var s=i[o],l=s.bb;l.w===0||l.h===0||t.drawImage(s.canvas,l.x1,l.y1,l.w,l.h)}else a.drawCachedElements(t,e,n,r)};var _r={};_r.drawEdge=function(t,e,n){var r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,a=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!0,i=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!0,o=this,s=e._private.rscratch;if(!(i&&!e.visible())&&!(s.badLine||s.allpts==null||isNaN(s.allpts[0]))){var l;n&&(l=n,t.translate(-l.x1,-l.y1));var c=i?e.pstyle("opacity").value:1,u=i?e.pstyle("line-opacity").value:1,d=e.pstyle("curve-style").value,f=e.pstyle("line-style").value,h=e.pstyle("width").pfValue,p=e.pstyle("line-cap").value,m=e.pstyle("line-outline-width").value,_=e.pstyle("line-outline-color").value,g=c*u,P=c*u,y=function(){var X=arguments.length>0&&arguments[0]!==void 0?arguments[0]:g;d==="straight-triangle"?(o.eleStrokeStyle(t,e,X),o.drawEdgeTrianglePath(e,t,s.allpts)):(t.lineWidth=h,t.lineCap=p,o.eleStrokeStyle(t,e,X),o.drawEdgePath(e,t,s.allpts,f),t.lineCap="butt")},C=function(){var X=arguments.length>0&&arguments[0]!==void 0?arguments[0]:g;if(t.lineWidth=h+m,t.lineCap=p,m>0)o.colorStrokeStyle(t,_[0],_[1],_[2],X);else{t.lineCap="butt";return}d==="straight-triangle"?o.drawEdgeTrianglePath(e,t,s.allpts):(o.drawEdgePath(e,t,s.allpts,f),t.lineCap="butt")},E=function(){a&&o.drawEdgeOverlay(t,e)},T=function(){a&&o.drawEdgeUnderlay(t,e)},B=function(){var X=arguments.length>0&&arguments[0]!==void 0?arguments[0]:P;o.drawArrowheads(t,e,X)},D=function(){o.drawElementText(t,e,null,r)};t.lineJoin="round";var k=e.pstyle("ghost").value==="yes";if(k){var $=e.pstyle("ghost-offset-x").pfValue,M=e.pstyle("ghost-offset-y").pfValue,b=e.pstyle("ghost-opacity").value,x=g*b;t.translate($,M),y(x),B(x),t.translate(-$,-M)}else C();T(),y(),B(),E(),D(),n&&t.translate(l.x1,l.y1)}};var _h=function(e){if(!["overlay","underlay"].includes(e))throw new Error("Invalid state");return function(n,r){if(r.visible()){var a=r.pstyle("".concat(e,"-opacity")).value;if(a!==0){var i=this,o=i.usePaths(),s=r._private.rscratch,l=r.pstyle("".concat(e,"-padding")).pfValue,c=2*l,u=r.pstyle("".concat(e,"-color")).value;n.lineWidth=c,s.edgeType==="self"&&!o?n.lineCap="butt":n.lineCap="round",i.colorStrokeStyle(n,u[0],u[1],u[2],a),i.drawEdgePath(r,n,s.allpts,"solid")}}}};_r.drawEdgeOverlay=_h("overlay");_r.drawEdgeUnderlay=_h("underlay");_r.drawEdgePath=function(t,e,n,r){var a=t._private.rscratch,i=e,o,s=!1,l=this.usePaths(),c=t.pstyle("line-dash-pattern").pfValue,u=t.pstyle("line-dash-offset").pfValue;if(l){var d=n.join("$"),f=a.pathCacheKey&&a.pathCacheKey===d;f?(o=e=a.pathCache,s=!0):(o=e=new Path2D,a.pathCacheKey=d,a.pathCache=o)}if(i.setLineDash)switch(r){case"dotted":i.setLineDash([1,1]);break;case"dashed":i.setLineDash(c),i.lineDashOffset=u;break;case"solid":i.setLineDash([]);break}if(!s&&!a.badLine)switch(e.beginPath&&e.beginPath(),e.moveTo(n[0],n[1]),a.edgeType){case"bezier":case"self":case"compound":case"multibezier":for(var h=2;h+3<n.length;h+=4)e.quadraticCurveTo(n[h],n[h+1],n[h+2],n[h+3]);break;case"straight":case"haystack":for(var p=2;p+1<n.length;p+=2)e.lineTo(n[p],n[p+1]);break;case"segments":if(a.isRound){var m=Ot(a.roundCorners),_;try{for(m.s();!(_=m.n()).done;){var g=_.value;ih(e,g)}}catch(y){m.e(y)}finally{m.f()}e.lineTo(n[n.length-2],n[n.length-1])}else for(var P=2;P+1<n.length;P+=2)e.lineTo(n[P],n[P+1]);break}e=i,l?e.stroke(o):e.stroke(),e.setLineDash&&e.setLineDash([])};_r.drawEdgeTrianglePath=function(t,e,n){e.fillStyle=e.strokeStyle;for(var r=t.pstyle("width").pfValue,a=0;a+1<n.length;a+=2){var i=[n[a+2]-n[a],n[a+3]-n[a+1]],o=Math.sqrt(i[0]*i[0]+i[1]*i[1]),s=[i[1]/o,-i[0]/o],l=[s[0]*r/2,s[1]*r/2];e.beginPath(),e.moveTo(n[a]-l[0],n[a+1]-l[1]),e.lineTo(n[a]+l[0],n[a+1]+l[1]),e.lineTo(n[a+2],n[a+3]),e.closePath(),e.fill()}};_r.drawArrowheads=function(t,e,n){var r=e._private.rscratch,a=r.edgeType==="haystack";a||this.drawArrowhead(t,e,"source",r.arrowStartX,r.arrowStartY,r.srcArrowAngle,n),this.drawArrowhead(t,e,"mid-target",r.midX,r.midY,r.midtgtArrowAngle,n),this.drawArrowhead(t,e,"mid-source",r.midX,r.midY,r.midsrcArrowAngle,n),a||this.drawArrowhead(t,e,"target",r.arrowEndX,r.arrowEndY,r.tgtArrowAngle,n)};_r.drawArrowhead=function(t,e,n,r,a,i,o){if(!(isNaN(r)||r==null||isNaN(a)||a==null||isNaN(i)||i==null)){var s=this,l=e.pstyle(n+"-arrow-shape").value;if(l!=="none"){var c=e.pstyle(n+"-arrow-fill").value==="hollow"?"both":"filled",u=e.pstyle(n+"-arrow-fill").value,d=e.pstyle("width").pfValue,f=e.pstyle(n+"-arrow-width"),h=f.value==="match-line"?d:f.pfValue;f.units==="%"&&(h*=d);var p=e.pstyle("opacity").value;o===void 0&&(o=p);var m=t.globalCompositeOperation;(o!==1||u==="hollow")&&(t.globalCompositeOperation="destination-out",s.colorFillStyle(t,255,255,255,1),s.colorStrokeStyle(t,255,255,255,1),s.drawArrowShape(e,t,c,d,l,h,r,a,i),t.globalCompositeOperation=m);var _=e.pstyle(n+"-arrow-color").value;s.colorFillStyle(t,_[0],_[1],_[2],o),s.colorStrokeStyle(t,_[0],_[1],_[2],o),s.drawArrowShape(e,t,u,d,l,h,r,a,i)}}};_r.drawArrowShape=function(t,e,n,r,a,i,o,s,l){var c=this,u=this.usePaths()&&a!=="triangle-cross",d=!1,f,h=e,p={x:o,y:s},m=t.pstyle("arrow-scale").value,_=this.getArrowWidth(r,m),g=c.arrowShapes[a];if(u){var P=c.arrowPathCache=c.arrowPathCache||[],y=Ir(a),C=P[y];C!=null?(f=e=C,d=!0):(f=e=new Path2D,P[y]=f)}d||(e.beginPath&&e.beginPath(),u?g.draw(e,1,0,{x:0,y:0},1):g.draw(e,_,l,p,r),e.closePath&&e.closePath()),e=h,u&&(e.translate(o,s),e.rotate(l),e.scale(_,_)),(n==="filled"||n==="both")&&(u?e.fill(f):e.fill()),(n==="hollow"||n==="both")&&(e.lineWidth=i/(u?_:1),e.lineJoin="miter",u?e.stroke(f):e.stroke()),u&&(e.scale(1/_,1/_),e.rotate(-l),e.translate(-o,-s))};var zl={};zl.safeDrawImage=function(t,e,n,r,a,i,o,s,l,c){if(!(a<=0||i<=0||l<=0||c<=0))try{t.drawImage(e,n,r,a,i,o,s,l,c)}catch(u){pn(u)}};zl.drawInscribedImage=function(t,e,n,r,a){var i=this,o=n.position(),s=o.x,l=o.y,c=n.cy().style(),u=c.getIndexedStyle.bind(c),d=u(n,"background-fit","value",r),f=u(n,"background-repeat","value",r),h=n.width(),p=n.height(),m=n.padding()*2,_=h+(u(n,"background-width-relative-to","value",r)==="inner"?0:m),g=p+(u(n,"background-height-relative-to","value",r)==="inner"?0:m),P=n._private.rscratch,y=u(n,"background-clip","value",r),C=y==="node",E=u(n,"background-image-opacity","value",r)*a,T=u(n,"background-image-smoothing","value",r),B=n.pstyle("corner-radius").value;B!=="auto"&&(B=n.pstyle("corner-radius").pfValue);var D=e.width||e.cachedW,k=e.height||e.cachedH;(D==null||k==null)&&(document.body.appendChild(e),D=e.cachedW=e.width||e.offsetWidth,k=e.cachedH=e.height||e.offsetHeight,document.body.removeChild(e));var $=D,M=k;if(u(n,"background-width","value",r)!=="auto"&&(u(n,"background-width","units",r)==="%"?$=u(n,"background-width","pfValue",r)*_:$=u(n,"background-width","pfValue",r)),u(n,"background-height","value",r)!=="auto"&&(u(n,"background-height","units",r)==="%"?M=u(n,"background-height","pfValue",r)*g:M=u(n,"background-height","pfValue",r)),!($===0||M===0)){if(d==="contain"){var b=Math.min(_/$,g/M);$*=b,M*=b}else if(d==="cover"){var b=Math.max(_/$,g/M);$*=b,M*=b}var x=s-_/2,K=u(n,"background-position-x","units",r),X=u(n,"background-position-x","pfValue",r);K==="%"?x+=(_-$)*X:x+=X;var v=u(n,"background-offset-x","units",r),A=u(n,"background-offset-x","pfValue",r);v==="%"?x+=(_-$)*A:x+=A;var w=l-g/2,O=u(n,"background-position-y","units",r),N=u(n,"background-position-y","pfValue",r);O==="%"?w+=(g-M)*N:w+=N;var S=u(n,"background-offset-y","units",r),I=u(n,"background-offset-y","pfValue",r);S==="%"?w+=(g-M)*I:w+=I,P.pathCache&&(x-=s,w-=l,s=0,l=0);var q=t.globalAlpha;t.globalAlpha=E;var Y=i.getImgSmoothing(t),ee=!1;if(T==="no"&&Y?(i.setImgSmoothing(t,!1),ee=!0):T==="yes"&&!Y&&(i.setImgSmoothing(t,!0),ee=!0),f==="no-repeat")C&&(t.save(),P.pathCache?t.clip(P.pathCache):(i.nodeShapes[i.getNodeShape(n)].draw(t,s,l,_,g,B,P),t.clip())),i.safeDrawImage(t,e,0,0,D,k,x,w,$,M),C&&t.restore();else{var Q=t.createPattern(e,f);t.fillStyle=Q,i.nodeShapes[i.getNodeShape(n)].draw(t,s,l,_,g,B,P),t.translate(x,w),t.fill(),t.translate(-x,-w)}t.globalAlpha=q,ee&&i.setImgSmoothing(t,Y)}};var pa={};pa.eleTextBiggerThanMin=function(t,e){if(!e){var n=t.cy().zoom(),r=this.getPixelRatio(),a=Math.ceil(Tl(n*r));e=Math.pow(2,a)}var i=t.pstyle("font-size").pfValue*e,o=t.pstyle("min-zoomed-font-size").pfValue;return!(i<o)};pa.drawElementText=function(t,e,n,r,a){var i=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!0,o=this;if(r==null){if(i&&!o.eleTextBiggerThanMin(e))return}else if(r===!1)return;if(e.isNode()){var s=e.pstyle("label");if(!s||!s.value)return;var l=o.getLabelJustification(e);t.textAlign=l,t.textBaseline="bottom"}else{var c=e.element()._private.rscratch.badLine,u=e.pstyle("label"),d=e.pstyle("source-label"),f=e.pstyle("target-label");if(c||(!u||!u.value)&&(!d||!d.value)&&(!f||!f.value))return;t.textAlign="center",t.textBaseline="bottom"}var h=!n,p;n&&(p=n,t.translate(-p.x1,-p.y1)),a==null?(o.drawText(t,e,null,h,i),e.isEdge()&&(o.drawText(t,e,"source",h,i),o.drawText(t,e,"target",h,i))):o.drawText(t,e,a,h,i),n&&t.translate(p.x1,p.y1)};pa.getFontCache=function(t){var e;this.fontCaches=this.fontCaches||[];for(var n=0;n<this.fontCaches.length;n++)if(e=this.fontCaches[n],e.context===t)return e;return e={context:t},this.fontCaches.push(e),e};pa.setupTextStyle=function(t,e){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,r=e.pstyle("font-style").strValue,a=e.pstyle("font-size").pfValue+"px",i=e.pstyle("font-family").strValue,o=e.pstyle("font-weight").strValue,s=n?e.effectiveOpacity()*e.pstyle("text-opacity").value:1,l=e.pstyle("text-outline-opacity").value*s,c=e.pstyle("color").value,u=e.pstyle("text-outline-color").value;t.font=r+" "+o+" "+a+" "+i,t.lineJoin="round",this.colorFillStyle(t,c[0],c[1],c[2],s),this.colorStrokeStyle(t,u[0],u[1],u[2],l)};function rl(t,e,n,r,a){var i=arguments.length>5&&arguments[5]!==void 0?arguments[5]:5,o=arguments.length>6?arguments[6]:void 0;t.beginPath(),t.moveTo(e+i,n),t.lineTo(e+r-i,n),t.quadraticCurveTo(e+r,n,e+r,n+i),t.lineTo(e+r,n+a-i),t.quadraticCurveTo(e+r,n+a,e+r-i,n+a),t.lineTo(e+i,n+a),t.quadraticCurveTo(e,n+a,e,n+a-i),t.lineTo(e,n+i),t.quadraticCurveTo(e,n,e+i,n),t.closePath(),o?t.stroke():t.fill()}pa.getTextAngle=function(t,e){var n,r=t._private,a=r.rscratch,i=e?e+"-":"",o=t.pstyle(i+"text-rotation");if(o.strValue==="autorotate"){var s=jt(a,"labelAngle",e);n=t.isEdge()?s:0}else o.strValue==="none"?n=0:n=o.pfValue;return n};pa.drawText=function(t,e,n){var r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,a=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!0,i=e._private,o=i.rscratch,s=a?e.effectiveOpacity():1;if(!(a&&(s===0||e.pstyle("text-opacity").value===0))){n==="main"&&(n=null);var l=jt(o,"labelX",n),c=jt(o,"labelY",n),u,d,f=this.getLabelText(e,n);if(f!=null&&f!==""&&!isNaN(l)&&!isNaN(c)){this.setupTextStyle(t,e,a);var h=n?n+"-":"",p=jt(o,"labelWidth",n),m=jt(o,"labelHeight",n),_=e.pstyle(h+"text-margin-x").pfValue,g=e.pstyle(h+"text-margin-y").pfValue,P=e.isEdge(),y=e.pstyle("text-halign").value,C=e.pstyle("text-valign").value;P&&(y="center",C="center"),l+=_,c+=g;var E;switch(r?E=this.getTextAngle(e,n):E=0,E!==0&&(u=l,d=c,t.translate(u,d),t.rotate(E),l=0,c=0),C){case"top":break;case"center":c+=m/2;break;case"bottom":c+=m;break}var T=e.pstyle("text-background-opacity").value,B=e.pstyle("text-border-opacity").value,D=e.pstyle("text-border-width").pfValue,k=e.pstyle("text-background-padding").pfValue,$=e.pstyle("text-background-shape").strValue,M=$.indexOf("round")===0,b=2;if(T>0||D>0&&B>0){var x=l-k;switch(y){case"left":x-=p;break;case"center":x-=p/2;break}var K=c-m-k,X=p+2*k,v=m+2*k;if(T>0){var A=t.fillStyle,w=e.pstyle("text-background-color").value;t.fillStyle="rgba("+w[0]+","+w[1]+","+w[2]+","+T*s+")",M?rl(t,x,K,X,v,b):t.fillRect(x,K,X,v),t.fillStyle=A}if(D>0&&B>0){var O=t.strokeStyle,N=t.lineWidth,S=e.pstyle("text-border-color").value,I=e.pstyle("text-border-style").value;if(t.strokeStyle="rgba("+S[0]+","+S[1]+","+S[2]+","+B*s+")",t.lineWidth=D,t.setLineDash)switch(I){case"dotted":t.setLineDash([1,1]);break;case"dashed":t.setLineDash([4,2]);break;case"double":t.lineWidth=D/4,t.setLineDash([]);break;case"solid":t.setLineDash([]);break}if(M?rl(t,x,K,X,v,b,"stroke"):t.strokeRect(x,K,X,v),I==="double"){var q=D/2;M?rl(t,x+q,K+q,X-q*2,v-q*2,b,"stroke"):t.strokeRect(x+q,K+q,X-q*2,v-q*2)}t.setLineDash&&t.setLineDash([]),t.lineWidth=N,t.strokeStyle=O}}var Y=2*e.pstyle("text-outline-width").pfValue;if(Y>0&&(t.lineWidth=Y),e.pstyle("text-wrap").value==="wrap"){var ee=jt(o,"labelWrapCachedLines",n),Q=jt(o,"labelLineHeight",n),U=p/2,J=this.getLabelJustification(e);switch(J==="auto"||(y==="left"?J==="left"?l+=-p:J==="center"&&(l+=-U):y==="center"?J==="left"?l+=-U:J==="right"&&(l+=U):y==="right"&&(J==="center"?l+=U:J==="right"&&(l+=p))),C){case"top":c-=(ee.length-1)*Q;break;case"center":case"bottom":c-=(ee.length-1)*Q;break}for(var F=0;F<ee.length;F++)Y>0&&t.strokeText(ee[F],l,c),t.fillText(ee[F],l,c),c+=Q}else Y>0&&t.strokeText(f,l,c),t.fillText(f,l,c);E!==0&&(t.rotate(-E),t.translate(-u,-d))}}};var pi={};pi.drawNode=function(t,e,n){var r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,a=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!0,i=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!0,o=this,s,l,c=e._private,u=c.rscratch,d=e.position();if(!(!Se(d.x)||!Se(d.y))&&!(i&&!e.visible())){var f=i?e.effectiveOpacity():1,h=o.usePaths(),p,m=!1,_=e.padding();s=e.width()+2*_,l=e.height()+2*_;var g;n&&(g=n,t.translate(-g.x1,-g.y1));for(var P=e.pstyle("background-image"),y=P.value,C=new Array(y.length),E=new Array(y.length),T=0,B=0;B<y.length;B++){var D=y[B],k=C[B]=D!=null&&D!=="none";if(k){var $=e.cy().style().getIndexedStyle(e,"background-image-crossorigin","value",B);T++,E[B]=o.getCachedImage(D,$,function(){c.backgroundTimestamp=Date.now(),e.emitAndNotify("background")})}}var M=e.pstyle("background-blacken").value,b=e.pstyle("border-width").pfValue,x=e.pstyle("background-opacity").value*f,K=e.pstyle("border-color").value,X=e.pstyle("border-style").value,v=e.pstyle("border-join").value,A=e.pstyle("border-cap").value,w=e.pstyle("border-position").value,O=e.pstyle("border-dash-pattern").pfValue,N=e.pstyle("border-dash-offset").pfValue,S=e.pstyle("border-opacity").value*f,I=e.pstyle("outline-width").pfValue,q=e.pstyle("outline-color").value,Y=e.pstyle("outline-style").value,ee=e.pstyle("outline-opacity").value*f,Q=e.pstyle("outline-offset").value,U=e.pstyle("corner-radius").value;U!=="auto"&&(U=e.pstyle("corner-radius").pfValue);var J=function(){var V=arguments.length>0&&arguments[0]!==void 0?arguments[0]:x;o.eleFillStyle(t,e,V)},F=function(){var V=arguments.length>0&&arguments[0]!==void 0?arguments[0]:S;o.colorStrokeStyle(t,K[0],K[1],K[2],V)},W=function(){var V=arguments.length>0&&arguments[0]!==void 0?arguments[0]:ee;o.colorStrokeStyle(t,q[0],q[1],q[2],V)},L=function(V,Z,oe,re){var se=o.nodePathCache=o.nodePathCache||[],pe=tf(oe==="polygon"?oe+","+re.join(","):oe,""+Z,""+V,""+U),ke=se[pe],be,me=!1;return ke!=null?(be=ke,me=!0,u.pathCache=be):(be=new Path2D,se[pe]=u.pathCache=be),{path:be,cacheHit:me}},z=e.pstyle("shape").strValue,ne=e.pstyle("shape-polygon-points").pfValue;if(h){t.translate(d.x,d.y);var H=L(s,l,z,ne);p=H.path,m=H.cacheHit}var _e=function(){if(!m){var V=d;h&&(V={x:0,y:0}),o.nodeShapes[o.getNodeShape(e)].draw(p||t,V.x,V.y,s,l,U,u)}h?t.fill(p):t.fill()},Ae=function(){for(var V=arguments.length>0&&arguments[0]!==void 0?arguments[0]:f,Z=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0,oe=c.backgrounding,re=0,se=0;se<E.length;se++){var pe=e.cy().style().getIndexedStyle(e,"background-image-containment","value",se);if(Z&&pe==="over"||!Z&&pe==="inside"){re++;continue}C[se]&&E[se].complete&&!E[se].error&&(re++,o.drawInscribedImage(t,E[se],e,se,V))}c.backgrounding=re!==T,oe!==c.backgrounding&&e.updateStyle(!1)},he=function(){var V=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,Z=arguments.length>1&&arguments[1]!==void 0?arguments[1]:f;o.hasPie(e)&&(o.drawPie(t,e,Z),V&&(h||o.nodeShapes[o.getNodeShape(e)].draw(t,d.x,d.y,s,l,U,u)))},le=function(){var V=arguments.length>0&&arguments[0]!==void 0?arguments[0]:f,Z=(M>0?M:-M)*V,oe=M>0?0:255;M!==0&&(o.colorFillStyle(t,oe,oe,oe,Z),h?t.fill(p):t.fill())},de=function(){if(b>0){if(t.lineWidth=b,t.lineCap=A,t.lineJoin=v,t.setLineDash)switch(X){case"dotted":t.setLineDash([1,1]);break;case"dashed":t.setLineDash(O),t.lineDashOffset=N;break;case"solid":case"double":t.setLineDash([]);break}if(w!=="center"){if(t.save(),t.lineWidth*=2,w==="inside")h?t.clip(p):t.clip();else{var V=new Path2D;V.rect(-s/2-b,-l/2-b,s+2*b,l+2*b),V.addPath(p),t.clip(V,"evenodd")}h?t.stroke(p):t.stroke(),t.restore()}else h?t.stroke(p):t.stroke();if(X==="double"){t.lineWidth=b/3;var Z=t.globalCompositeOperation;t.globalCompositeOperation="destination-out",h?t.stroke(p):t.stroke(),t.globalCompositeOperation=Z}t.setLineDash&&t.setLineDash([])}},Pe=function(){if(I>0){if(t.lineWidth=I,t.lineCap="butt",t.setLineDash)switch(Y){case"dotted":t.setLineDash([1,1]);break;case"dashed":t.setLineDash([4,2]);break;case"solid":case"double":t.setLineDash([]);break}var V=d;h&&(V={x:0,y:0});var Z=o.getNodeShape(e),oe=b;w==="inside"&&(oe=0),w==="outside"&&(oe*=2);var re=(s+oe+(I+Q))/s,se=(l+oe+(I+Q))/l,pe=s*re,ke=l*se,be=o.nodeShapes[Z].points,me;if(h){var Ee=L(pe,ke,Z,be);me=Ee.path}if(Z==="ellipse")o.drawEllipsePath(me||t,V.x,V.y,pe,ke);else if(["round-diamond","round-heptagon","round-hexagon","round-octagon","round-pentagon","round-polygon","round-triangle","round-tag"].includes(Z)){var Te=0,De=0,Re=0;Z==="round-diamond"?Te=(oe+Q+I)*1.4:Z==="round-heptagon"?(Te=(oe+Q+I)*1.075,Re=-(oe/2+Q+I)/35):Z==="round-hexagon"?Te=(oe+Q+I)*1.12:Z==="round-pentagon"?(Te=(oe+Q+I)*1.13,Re=-(oe/2+Q+I)/15):Z==="round-tag"?(Te=(oe+Q+I)*1.12,De=(oe/2+I+Q)*.07):Z==="round-triangle"&&(Te=(oe+Q+I)*(Math.PI/2),Re=-(oe+Q/2+I)/Math.PI),Te!==0&&(re=(s+Te)/s,pe=s*re,["round-hexagon","round-tag"].includes(Z)||(se=(l+Te)/l,ke=l*se)),U=U==="auto"?pf(pe,ke):U;for(var Ge=pe/2,Ie=ke/2,$e=U+(oe+I+Q)/2,Fe=new Array(be.length/2),Me=new Array(be.length/2),Le=0;Le<be.length/2;Le++)Fe[Le]={x:V.x+De+Ge*be[Le*2],y:V.y+Re+Ie*be[Le*2+1]};var an,on,Pn,en,Je=Fe.length;for(on=Fe[Je-1],an=0;an<Je;an++)Pn=Fe[an%Je],en=Fe[(an+1)%Je],Me[an]=jl(on,Pn,en,$e),on=Pn,Pn=en;o.drawRoundPolygonPath(me||t,V.x+De,V.y+Re,s*re,l*se,be,Me)}else if(["roundrectangle","round-rectangle"].includes(Z))U=U==="auto"?la(pe,ke):U,o.drawRoundRectanglePath(me||t,V.x,V.y,pe,ke,U+(oe+I+Q)/2);else if(["cutrectangle","cut-rectangle"].includes(Z))U=U==="auto"?kl():U,o.drawCutRectanglePath(me||t,V.x,V.y,pe,ke,null,U+(oe+I+Q)/4);else if(["bottomroundrectangle","bottom-round-rectangle"].includes(Z))U=U==="auto"?la(pe,ke):U,o.drawBottomRoundRectanglePath(me||t,V.x,V.y,pe,ke,U+(oe+I+Q)/2);else if(Z==="barrel")o.drawBarrelPath(me||t,V.x,V.y,pe,ke);else if(Z.startsWith("polygon")||["rhomboid","right-rhomboid","round-tag","tag","vee"].includes(Z)){var $n=(oe+I+Q)/s;be=Us(Fs(be,$n)),o.drawPolygonPath(me||t,V.x,V.y,s,l,be)}else{var Qe=(oe+I+Q)/s;be=Us(Fs(be,-Qe)),o.drawPolygonPath(me||t,V.x,V.y,s,l,be)}if(h?t.stroke(me):t.stroke(),Y==="double"){t.lineWidth=oe/3;var cn=t.globalCompositeOperation;t.globalCompositeOperation="destination-out",h?t.stroke(me):t.stroke(),t.globalCompositeOperation=cn}t.setLineDash&&t.setLineDash([])}},Ce=function(){a&&o.drawNodeOverlay(t,e,d,s,l)},Xe=function(){a&&o.drawNodeUnderlay(t,e,d,s,l)},ve=function(){o.drawElementText(t,e,null,r)},xe=e.pstyle("ghost").value==="yes";if(xe){var ye=e.pstyle("ghost-offset-x").pfValue,fe=e.pstyle("ghost-offset-y").pfValue,R=e.pstyle("ghost-opacity").value,te=R*f;t.translate(ye,fe),W(),Pe(),J(R*x),_e(),Ae(te,!0),F(R*S),de(),he(M!==0||b!==0),Ae(te,!1),le(te),t.translate(-ye,-fe)}h&&t.translate(-d.x,-d.y),Xe(),h&&t.translate(d.x,d.y),W(),Pe(),J(),_e(),Ae(f,!0),F(),de(),he(M!==0||b!==0),Ae(f,!1),le(),h&&t.translate(-d.x,-d.y),ve(),Ce(),n&&t.translate(g.x1,g.y1)}};var Ph=function(e){if(!["overlay","underlay"].includes(e))throw new Error("Invalid state");return function(n,r,a,i,o){var s=this;if(r.visible()){var l=r.pstyle("".concat(e,"-padding")).pfValue,c=r.pstyle("".concat(e,"-opacity")).value,u=r.pstyle("".concat(e,"-color")).value,d=r.pstyle("".concat(e,"-shape")).value,f=r.pstyle("".concat(e,"-corner-radius")).value;if(c>0){if(a=a||r.position(),i==null||o==null){var h=r.padding();i=r.width()+2*h,o=r.height()+2*h}s.colorFillStyle(n,u[0],u[1],u[2],c),s.nodeShapes[d].draw(n,a.x,a.y,i+l*2,o+l*2,f),n.fill()}}}};pi.drawNodeOverlay=Ph("overlay");pi.drawNodeUnderlay=Ph("underlay");pi.hasPie=function(t){return t=t[0],t._private.hasPie};pi.drawPie=function(t,e,n,r){e=e[0],r=r||e.position();var a=e.cy().style(),i=e.pstyle("pie-size"),o=r.x,s=r.y,l=e.width(),c=e.height(),u=Math.min(l,c)/2,d=0,f=this.usePaths();f&&(o=0,s=0),i.units==="%"?u=u*i.pfValue:i.pfValue!==void 0&&(u=i.pfValue/2);for(var h=1;h<=a.pieBackgroundN;h++){var p=e.pstyle("pie-"+h+"-background-size").value,m=e.pstyle("pie-"+h+"-background-color").value,_=e.pstyle("pie-"+h+"-background-opacity").value*n,g=p/100;g+d>1&&(g=1-d);var P=1.5*Math.PI+2*Math.PI*d,y=2*Math.PI*g,C=P+y;p===0||d>=1||d+g>1||(t.beginPath(),t.moveTo(o,s),t.arc(o,s,u,P,C),t.closePath(),this.colorFillStyle(t,m[0],m[1],m[2],_),t.fill(),d+=g)}};var _t={},py=100;_t.getPixelRatio=function(){var t=this.data.contexts[0];if(this.forcedPixelRatio!=null)return this.forcedPixelRatio;var e=this.cy.window(),n=t.backingStorePixelRatio||t.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1;return(e.devicePixelRatio||1)/n};_t.paintCache=function(t){for(var e=this.paintCaches=this.paintCaches||[],n=!0,r,a=0;a<e.length;a++)if(r=e[a],r.context===t){n=!1;break}return n&&(r={context:t},e.push(r)),r};_t.createGradientStyleFor=function(t,e,n,r,a){var i,o=this.usePaths(),s=n.pstyle(e+"-gradient-stop-colors").value,l=n.pstyle(e+"-gradient-stop-positions").pfValue;if(r==="radial-gradient")if(n.isEdge()){var c=n.sourceEndpoint(),u=n.targetEndpoint(),d=n.midpoint(),f=ca(c,d),h=ca(u,d);i=t.createRadialGradient(d.x,d.y,0,d.x,d.y,Math.max(f,h))}else{var p=o?{x:0,y:0}:n.position(),m=n.paddedWidth(),_=n.paddedHeight();i=t.createRadialGradient(p.x,p.y,0,p.x,p.y,Math.max(m,_))}else if(n.isEdge()){var g=n.sourceEndpoint(),P=n.targetEndpoint();i=t.createLinearGradient(g.x,g.y,P.x,P.y)}else{var y=o?{x:0,y:0}:n.position(),C=n.paddedWidth(),E=n.paddedHeight(),T=C/2,B=E/2,D=n.pstyle("background-gradient-direction").value;switch(D){case"to-bottom":i=t.createLinearGradient(y.x,y.y-B,y.x,y.y+B);break;case"to-top":i=t.createLinearGradient(y.x,y.y+B,y.x,y.y-B);break;case"to-left":i=t.createLinearGradient(y.x+T,y.y,y.x-T,y.y);break;case"to-right":i=t.createLinearGradient(y.x-T,y.y,y.x+T,y.y);break;case"to-bottom-right":case"to-right-bottom":i=t.createLinearGradient(y.x-T,y.y-B,y.x+T,y.y+B);break;case"to-top-right":case"to-right-top":i=t.createLinearGradient(y.x-T,y.y+B,y.x+T,y.y-B);break;case"to-bottom-left":case"to-left-bottom":i=t.createLinearGradient(y.x+T,y.y-B,y.x-T,y.y+B);break;case"to-top-left":case"to-left-top":i=t.createLinearGradient(y.x+T,y.y+B,y.x-T,y.y-B);break}}if(!i)return null;for(var k=l.length===s.length,$=s.length,M=0;M<$;M++)i.addColorStop(k?l[M]:M/($-1),"rgba("+s[M][0]+","+s[M][1]+","+s[M][2]+","+a+")");return i};_t.gradientFillStyle=function(t,e,n,r){var a=this.createGradientStyleFor(t,"background",e,n,r);if(!a)return null;t.fillStyle=a};_t.colorFillStyle=function(t,e,n,r,a){t.fillStyle="rgba("+e+","+n+","+r+","+a+")"};_t.eleFillStyle=function(t,e,n){var r=e.pstyle("background-fill").value;if(r==="linear-gradient"||r==="radial-gradient")this.gradientFillStyle(t,e,r,n);else{var a=e.pstyle("background-color").value;this.colorFillStyle(t,a[0],a[1],a[2],n)}};_t.gradientStrokeStyle=function(t,e,n,r){var a=this.createGradientStyleFor(t,"line",e,n,r);if(!a)return null;t.strokeStyle=a};_t.colorStrokeStyle=function(t,e,n,r,a){t.strokeStyle="rgba("+e+","+n+","+r+","+a+")"};_t.eleStrokeStyle=function(t,e,n){var r=e.pstyle("line-fill").value;if(r==="linear-gradient"||r==="radial-gradient")this.gradientStrokeStyle(t,e,r,n);else{var a=e.pstyle("line-color").value;this.colorStrokeStyle(t,a[0],a[1],a[2],n)}};_t.matchCanvasSize=function(t){var e=this,n=e.data,r=e.findContainerClientCoords(),a=r[2],i=r[3],o=e.getPixelRatio(),s=e.motionBlurPxRatio;(t===e.data.bufferCanvases[e.MOTIONBLUR_BUFFER_NODE]||t===e.data.bufferCanvases[e.MOTIONBLUR_BUFFER_DRAG])&&(o=s);var l=a*o,c=i*o,u;if(!(l===e.canvasWidth&&c===e.canvasHeight)){e.fontCaches=null;var d=n.canvasContainer;d.style.width=a+"px",d.style.height=i+"px";for(var f=0;f<e.CANVAS_LAYERS;f++)u=n.canvases[f],u.width=l,u.height=c,u.style.width=a+"px",u.style.height=i+"px";for(var f=0;f<e.BUFFER_COUNT;f++)u=n.bufferCanvases[f],u.width=l,u.height=c,u.style.width=a+"px",u.style.height=i+"px";e.textureMult=1,o<=1&&(u=n.bufferCanvases[e.TEXTURE_BUFFER],e.textureMult=2,u.width=l*e.textureMult,u.height=c*e.textureMult),e.canvasWidth=l,e.canvasHeight=c,e.pixelRatio=o}};_t.renderTo=function(t,e,n,r){this.render({forcedContext:t,forcedZoom:e,forcedPan:n,drawAllLayers:!0,forcedPxRatio:r})};_t.clearCanvas=function(){var t=this,e=t.data;function n(r){r.clearRect(0,0,t.canvasWidth,t.canvasHeight)}n(e.contexts[t.NODE]),n(e.contexts[t.DRAG])};_t.render=function(t){var e=this;t=t||sf();var n=e.cy,r=t.forcedContext,a=t.drawAllLayers,i=t.drawOnlyNodeLayer,o=t.forcedZoom,s=t.forcedPan,l=t.forcedPxRatio===void 0?this.getPixelRatio():t.forcedPxRatio,c=e.data,u=c.canvasNeedsRedraw,d=e.textureOnViewport&&!r&&(e.pinching||e.hoverData.dragging||e.swipePanning||e.data.wheelZooming),f=t.motionBlur!==void 0?t.motionBlur:e.motionBlur,h=e.motionBlurPxRatio,p=n.hasCompoundNodes(),m=e.hoverData.draggingEles,_=!!(e.hoverData.selecting||e.touchData.selecting);f=f&&!r&&e.motionBlurEnabled&&!_;var g=f;r||(e.prevPxRatio!==l&&(e.invalidateContainerClientCoordsCache(),e.matchCanvasSize(e.container),e.redrawHint("eles",!0),e.redrawHint("drag",!0)),e.prevPxRatio=l),!r&&e.motionBlurTimeout&&clearTimeout(e.motionBlurTimeout),f&&(e.mbFrames==null&&(e.mbFrames=0),e.mbFrames++,e.mbFrames<3&&(g=!1),e.mbFrames>e.minMbLowQualFrames&&(e.motionBlurPxRatio=e.mbPxRBlurry)),e.clearingMotionBlur&&(e.motionBlurPxRatio=1),e.textureDrawLastFrame&&!d&&(u[e.NODE]=!0,u[e.SELECT_BOX]=!0);var P=n.style(),y=n.zoom(),C=o!==void 0?o:y,E=n.pan(),T={x:E.x,y:E.y},B={zoom:y,pan:{x:E.x,y:E.y}},D=e.prevViewport,k=D===void 0||B.zoom!==D.zoom||B.pan.x!==D.pan.x||B.pan.y!==D.pan.y;!k&&!(m&&!p)&&(e.motionBlurPxRatio=1),s&&(T=s),C*=l,T.x*=l,T.y*=l;var $=e.getCachedZSortedEles();function M(F,W,L,z,ne){var H=F.globalCompositeOperation;F.globalCompositeOperation="destination-out",e.colorFillStyle(F,255,255,255,e.motionBlurTransparency),F.fillRect(W,L,z,ne),F.globalCompositeOperation=H}function b(F,W){var L,z,ne,H;!e.clearingMotionBlur&&(F===c.bufferContexts[e.MOTIONBLUR_BUFFER_NODE]||F===c.bufferContexts[e.MOTIONBLUR_BUFFER_DRAG])?(L={x:E.x*h,y:E.y*h},z=y*h,ne=e.canvasWidth*h,H=e.canvasHeight*h):(L=T,z=C,ne=e.canvasWidth,H=e.canvasHeight),F.setTransform(1,0,0,1,0,0),W==="motionBlur"?M(F,0,0,ne,H):!r&&(W===void 0||W)&&F.clearRect(0,0,ne,H),a||(F.translate(L.x,L.y),F.scale(z,z)),s&&F.translate(s.x,s.y),o&&F.scale(o,o)}if(d||(e.textureDrawLastFrame=!1),d){if(e.textureDrawLastFrame=!0,!e.textureCache){e.textureCache={},e.textureCache.bb=n.mutableElements().boundingBox(),e.textureCache.texture=e.data.bufferCanvases[e.TEXTURE_BUFFER];var x=e.data.bufferContexts[e.TEXTURE_BUFFER];x.setTransform(1,0,0,1,0,0),x.clearRect(0,0,e.canvasWidth*e.textureMult,e.canvasHeight*e.textureMult),e.render({forcedContext:x,drawOnlyNodeLayer:!0,forcedPxRatio:l*e.textureMult});var B=e.textureCache.viewport={zoom:n.zoom(),pan:n.pan(),width:e.canvasWidth,height:e.canvasHeight};B.mpan={x:(0-B.pan.x)/B.zoom,y:(0-B.pan.y)/B.zoom}}u[e.DRAG]=!1,u[e.NODE]=!1;var K=c.contexts[e.NODE],X=e.textureCache.texture,B=e.textureCache.viewport;K.setTransform(1,0,0,1,0,0),f?M(K,0,0,B.width,B.height):K.clearRect(0,0,B.width,B.height);var v=P.core("outside-texture-bg-color").value,A=P.core("outside-texture-bg-opacity").value;e.colorFillStyle(K,v[0],v[1],v[2],A),K.fillRect(0,0,B.width,B.height);var y=n.zoom();b(K,!1),K.clearRect(B.mpan.x,B.mpan.y,B.width/B.zoom/l,B.height/B.zoom/l),K.drawImage(X,B.mpan.x,B.mpan.y,B.width/B.zoom/l,B.height/B.zoom/l)}else e.textureOnViewport&&!r&&(e.textureCache=null);var w=n.extent(),O=e.pinching||e.hoverData.dragging||e.swipePanning||e.data.wheelZooming||e.hoverData.draggingEles||e.cy.animated(),N=e.hideEdgesOnViewport&&O,S=[];if(S[e.NODE]=!u[e.NODE]&&f&&!e.clearedForMotionBlur[e.NODE]||e.clearingMotionBlur,S[e.NODE]&&(e.clearedForMotionBlur[e.NODE]=!0),S[e.DRAG]=!u[e.DRAG]&&f&&!e.clearedForMotionBlur[e.DRAG]||e.clearingMotionBlur,S[e.DRAG]&&(e.clearedForMotionBlur[e.DRAG]=!0),u[e.NODE]||a||i||S[e.NODE]){var I=f&&!S[e.NODE]&&h!==1,K=r||(I?e.data.bufferContexts[e.MOTIONBLUR_BUFFER_NODE]:c.contexts[e.NODE]),q=f&&!I?"motionBlur":void 0;b(K,q),N?e.drawCachedNodes(K,$.nondrag,l,w):e.drawLayeredElements(K,$.nondrag,l,w),e.debug&&e.drawDebugPoints(K,$.nondrag),!a&&!f&&(u[e.NODE]=!1)}if(!i&&(u[e.DRAG]||a||S[e.DRAG])){var I=f&&!S[e.DRAG]&&h!==1,K=r||(I?e.data.bufferContexts[e.MOTIONBLUR_BUFFER_DRAG]:c.contexts[e.DRAG]);b(K,f&&!I?"motionBlur":void 0),N?e.drawCachedNodes(K,$.drag,l,w):e.drawCachedElements(K,$.drag,l,w),e.debug&&e.drawDebugPoints(K,$.drag),!a&&!f&&(u[e.DRAG]=!1)}if(this.drawSelectionRectangle(t,b),f&&h!==1){var Y=c.contexts[e.NODE],ee=e.data.bufferCanvases[e.MOTIONBLUR_BUFFER_NODE],Q=c.contexts[e.DRAG],U=e.data.bufferCanvases[e.MOTIONBLUR_BUFFER_DRAG],J=function(W,L,z){W.setTransform(1,0,0,1,0,0),z||!g?W.clearRect(0,0,e.canvasWidth,e.canvasHeight):M(W,0,0,e.canvasWidth,e.canvasHeight);var ne=h;W.drawImage(L,0,0,e.canvasWidth*ne,e.canvasHeight*ne,0,0,e.canvasWidth,e.canvasHeight)};(u[e.NODE]||S[e.NODE])&&(J(Y,ee,S[e.NODE]),u[e.NODE]=!1),(u[e.DRAG]||S[e.DRAG])&&(J(Q,U,S[e.DRAG]),u[e.DRAG]=!1)}e.prevViewport=B,e.clearingMotionBlur&&(e.clearingMotionBlur=!1,e.motionBlurCleared=!0,e.motionBlur=!0),f&&(e.motionBlurTimeout=setTimeout(function(){e.motionBlurTimeout=null,e.clearedForMotionBlur[e.NODE]=!1,e.clearedForMotionBlur[e.DRAG]=!1,e.motionBlur=!1,e.clearingMotionBlur=!d,e.mbFrames=0,u[e.NODE]=!0,u[e.DRAG]=!0,e.redraw()},py)),r||n.emit("render")};var ki;_t.drawSelectionRectangle=function(t,e){var n=this,r=n.cy,a=n.data,i=r.style(),o=t.drawOnlyNodeLayer,s=t.drawAllLayers,l=a.canvasNeedsRedraw,c=t.forcedContext;if(n.showFps||!o&&l[n.SELECT_BOX]&&!s){var u=c||a.contexts[n.SELECT_BOX];if(e(u),n.selection[4]==1&&(n.hoverData.selecting||n.touchData.selecting)){var d=n.cy.zoom(),f=i.core("selection-box-border-width").value/d;u.lineWidth=f,u.fillStyle="rgba("+i.core("selection-box-color").value[0]+","+i.core("selection-box-color").value[1]+","+i.core("selection-box-color").value[2]+","+i.core("selection-box-opacity").value+")",u.fillRect(n.selection[0],n.selection[1],n.selection[2]-n.selection[0],n.selection[3]-n.selection[1]),f>0&&(u.strokeStyle="rgba("+i.core("selection-box-border-color").value[0]+","+i.core("selection-box-border-color").value[1]+","+i.core("selection-box-border-color").value[2]+","+i.core("selection-box-opacity").value+")",u.strokeRect(n.selection[0],n.selection[1],n.selection[2]-n.selection[0],n.selection[3]-n.selection[1]))}if(a.bgActivePosistion&&!n.hoverData.selecting){var d=n.cy.zoom(),h=a.bgActivePosistion;u.fillStyle="rgba("+i.core("active-bg-color").value[0]+","+i.core("active-bg-color").value[1]+","+i.core("active-bg-color").value[2]+","+i.core("active-bg-opacity").value+")",u.beginPath(),u.arc(h.x,h.y,i.core("active-bg-size").pfValue/d,0,2*Math.PI),u.fill()}var p=n.lastRedrawTime;if(n.showFps&&p){p=Math.round(p);var m=Math.round(1e3/p),_="1 frame = "+p+" ms = "+m+" fps";if(u.setTransform(1,0,0,1,0,0),u.fillStyle="rgba(255, 0, 0, 0.75)",u.strokeStyle="rgba(255, 0, 0, 0.75)",u.font="30px Arial",!ki){var g=u.measureText(_);ki=g.actualBoundingBoxAscent}u.fillText(_,0,ki);var P=60;u.strokeRect(0,ki+10,250,20),u.fillRect(0,ki+10,250*Math.min(m/P,1),20)}s||(l[n.SELECT_BOX]=!1)}};function Dd(t,e,n){var r=t.createShader(e);if(t.shaderSource(r,n),t.compileShader(r),!t.getShaderParameter(r,t.COMPILE_STATUS))throw new Error(t.getShaderInfoLog(r));return r}function my(t,e,n){var r=Dd(t,t.VERTEX_SHADER,e),a=Dd(t,t.FRAGMENT_SHADER,n),i=t.createProgram();if(t.attachShader(i,r),t.attachShader(i,a),t.linkProgram(i),!t.getProgramParameter(i,t.LINK_STATUS))throw new Error("Could not initialize shaders");return i}function gy(t,e,n){n===void 0&&(n=e);var r=t.makeOffscreenCanvas(e,n),a=r.context=r.getContext("2d");return r.clear=function(){return a.clearRect(0,0,r.width,r.height)},r.clear(),r}function Vl(t){var e=t.pixelRatio,n=t.cy.zoom(),r=t.cy.pan();return{zoom:n*e,pan:{x:r.x*e,y:r.y*e}}}function al(t,e,n,r,a){var i=r*n+e.x,o=a*n+e.y;return o=Math.round(t.canvasHeight-o),[i,o]}function ws(t,e,n){var r=t[0]/255,a=t[1]/255,i=t[2]/255,o=e,s=n||new Array(4);return s[0]=r*o,s[1]=a*o,s[2]=i*o,s[3]=o,s}function Os(t,e){var n=e||new Array(4);return n[0]=(t>>0&255)/255,n[1]=(t>>8&255)/255,n[2]=(t>>16&255)/255,n[3]=(t>>24&255)/255,n}function _y(t){return t[0]+(t[1]<<8)+(t[2]<<16)+(t[3]<<24)}function Py(t,e){var n=t.createTexture();return n.buffer=function(r){t.bindTexture(t.TEXTURE_2D,n),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR_MIPMAP_NEAREST),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r),t.generateMipmap(t.TEXTURE_2D),t.bindTexture(t.TEXTURE_2D,null)},n.deleteTexture=function(){t.deleteTexture(n)},n}function vh(t,e){switch(e){case"float":return[1,t.FLOAT,4];case"vec2":return[2,t.FLOAT,4];case"vec3":return[3,t.FLOAT,4];case"vec4":return[4,t.FLOAT,4];case"int":return[1,t.INT,4];case"ivec2":return[2,t.INT,4]}}function bh(t,e,n){switch(e){case t.FLOAT:return new Float32Array(n);case t.INT:return new Int32Array(n)}}function vy(t,e,n,r,a,i){switch(e){case t.FLOAT:return new Float32Array(n.buffer,i*r,a);case t.INT:return new Int32Array(n.buffer,i*r,a)}}function by(t,e,n,r){var a=vh(t,e),i=Rn(a,2),o=i[0],s=i[1],l=bh(t,s,r),c=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,c),t.bufferData(t.ARRAY_BUFFER,l,t.STATIC_DRAW),s===t.FLOAT?t.vertexAttribPointer(n,o,s,!1,0,0):s===t.INT&&t.vertexAttribIPointer(n,o,s,0,0),t.enableVertexAttribArray(n),t.bindBuffer(t.ARRAY_BUFFER,null),c}function wt(t,e,n,r){var a=vh(t,n),i=Rn(a,3),o=i[0],s=i[1],l=i[2],c=bh(t,s,e*o),u=o*l,d=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,d),t.bufferData(t.ARRAY_BUFFER,e*u,t.DYNAMIC_DRAW),t.enableVertexAttribArray(r),s===t.FLOAT?t.vertexAttribPointer(r,o,s,!1,u,0):s===t.INT&&t.vertexAttribIPointer(r,o,s,u,0),t.vertexAttribDivisor(r,1),t.bindBuffer(t.ARRAY_BUFFER,null);for(var f=new Array(e),h=0;h<e;h++)f[h]=vy(t,s,c,u,o,h);return d.dataArray=c,d.stride=u,d.size=o,d.getView=function(p){return f[p]},d.setPoint=function(p,m,_){var g=f[p];g[0]=m,g[1]=_},d.bufferSubData=function(p){t.bindBuffer(t.ARRAY_BUFFER,d),p?t.bufferSubData(t.ARRAY_BUFFER,0,c,0,p*o):t.bufferSubData(t.ARRAY_BUFFER,0,c)},d}function yy(t){var e=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,e);var n=t.createTexture();return t.bindTexture(t.TEXTURE_2D,n),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0),t.bindFramebuffer(t.FRAMEBUFFER,null),e.setFramebufferAttachmentSizes=function(r,a){t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,r,a,0,t.RGBA,t.UNSIGNED_BYTE,null)},e}var $d=typeof Float32Array<"u"?Float32Array:Array;Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});function Li(){var t=new $d(9);return $d!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[5]=0,t[6]=0,t[7]=0),t[0]=1,t[4]=1,t[8]=1,t}function yh(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t}function Xy(t,e,n){var r=e[0],a=e[1],i=e[2],o=e[3],s=e[4],l=e[5],c=e[6],u=e[7],d=e[8],f=n[0],h=n[1],p=n[2],m=n[3],_=n[4],g=n[5],P=n[6],y=n[7],C=n[8];return t[0]=f*r+h*o+p*c,t[1]=f*a+h*s+p*u,t[2]=f*i+h*l+p*d,t[3]=m*r+_*o+g*c,t[4]=m*a+_*s+g*u,t[5]=m*i+_*l+g*d,t[6]=P*r+y*o+C*c,t[7]=P*a+y*s+C*u,t[8]=P*i+y*l+C*d,t}function Gs(t,e,n){var r=e[0],a=e[1],i=e[2],o=e[3],s=e[4],l=e[5],c=e[6],u=e[7],d=e[8],f=n[0],h=n[1];return t[0]=r,t[1]=a,t[2]=i,t[3]=o,t[4]=s,t[5]=l,t[6]=f*r+h*o+c,t[7]=f*a+h*s+u,t[8]=f*i+h*l+d,t}function Xh(t,e,n){var r=e[0],a=e[1],i=e[2],o=e[3],s=e[4],l=e[5],c=e[6],u=e[7],d=e[8],f=Math.sin(n),h=Math.cos(n);return t[0]=h*r+f*o,t[1]=h*a+f*s,t[2]=h*i+f*l,t[3]=h*o-f*r,t[4]=h*s-f*a,t[5]=h*l-f*i,t[6]=c,t[7]=u,t[8]=d,t}function ql(t,e,n){var r=n[0],a=n[1];return t[0]=r*e[0],t[1]=r*e[1],t[2]=r*e[2],t[3]=a*e[3],t[4]=a*e[4],t[5]=a*e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t}function Ky(t,e,n){return t[0]=2/e,t[1]=0,t[2]=0,t[3]=0,t[4]=-2/n,t[5]=0,t[6]=-1,t[7]=1,t[8]=1,t}var Ui={SCREEN:{name:"screen",screen:!0},PICKING:{name:"picking",picking:!0}},Di=et({getKey:null,drawElement:null,getBoundingBox:null,getRotation:null,getRotationPoint:null,getRotationOffset:null,isVisible:null,getPadding:null}),xy=function(){function t(e,n){Yr(this,t),this.debugID=Math.floor(Math.random()*1e4),this.r=e,this.atlasSize=n.webglTexSize,this.rows=n.webglTexRows,this.enableWrapping=n.enableWrapping,this.texHeight=Math.floor(this.atlasSize/this.rows),this.maxTexWidth=this.atlasSize,this.texture=null,this.canvas=null,this.needsBuffer=!0,this.freePointer={x:0,row:0},this.keyToLocation=new Map,this.canvas=n.createTextureCanvas(e,this.atlasSize,this.atlasSize),this.scratch=n.createTextureCanvas(e,this.atlasSize,this.texHeight,"scratch")}return zr(t,[{key:"getKeys",value:function(){return new Set(this.keyToLocation.keys())}},{key:"getScale",value:function(n){var r=n.w,a=n.h,i=this.texHeight,o=this.maxTexWidth,s=i/a,l=r*s,c=a*s;return l>o&&(s=o/r,l=r*s,c=a*s),{scale:s,texW:l,texH:c}}},{key:"draw",value:function(n,r,a){var i=this,o=this.atlasSize,s=this.rows,l=this.texHeight,c=this.getScale(r),u=c.scale,d=c.texW,f=c.texH,h=[null,null],p=function(y,C){if(a&&C){var E=C.context,T=y.x,B=y.row,D=T,k=l*B;E.save(),E.translate(D,k),E.scale(u,u),a(E,r),E.restore()}},m=function(){p(i.freePointer,i.canvas),h[0]={x:i.freePointer.x,y:i.freePointer.row*l,w:d,h:f},h[1]={x:i.freePointer.x+d,y:i.freePointer.row*l,w:0,h:f},i.freePointer.x+=d,i.freePointer.x==o&&(i.freePointer.x=0,i.freePointer.row++)},_=function(){var y=i.scratch,C=i.canvas;y.clear(),p({x:0,row:0},y);var E=o-i.freePointer.x,T=d-E,B=l;{var D=i.freePointer.x,k=i.freePointer.row*l,$=E;C.context.drawImage(y,0,0,$,B,D,k,$,B),h[0]={x:D,y:k,w:$,h:f}}{var M=E,b=(i.freePointer.row+1)*l,x=T;C&&C.context.drawImage(y,M,0,x,B,0,b,x,B),h[1]={x:0,y:b,w:x,h:f}}i.freePointer.x=T,i.freePointer.row++},g=function(){i.freePointer.x=0,i.freePointer.row++};if(this.freePointer.x+d<=o)m();else{if(this.freePointer.row>=s-1)return!1;this.freePointer.x===o?(g(),m()):this.enableWrapping?_():(g(),m())}return this.keyToLocation.set(n,h),this.needsBuffer=!0,h}},{key:"getOffsets",value:function(n){return this.keyToLocation.get(n)}},{key:"isEmpty",value:function(){return this.freePointer.x===0&&this.freePointer.row===0}},{key:"canFit",value:function(n){var r=this.atlasSize,a=this.rows,i=this.getScale(n),o=i.texW;return this.freePointer.x+o>r?this.freePointer.row<a-1:!0}},{key:"bufferIfNeeded",value:function(n){this.texture||(this.texture=Py(n,this.debugID)),this.needsBuffer&&(this.texture.buffer(this.canvas),this.needsBuffer=!1)}},{key:"dispose",value:function(){this.texture&&(this.texture.deleteTexture(),this.texture=null,this.needsBuffer=!0)}}]),t}(),Ay=function(){function t(e,n){Yr(this,t),this.r=e,this.opts=n,this.keyToIds=new Map,this.idToKey=new Map,this.atlases=[],this.styleKeyToAtlas=new Map,this.styleKeyNeedsRedraw=new Set,this.forceGC=!1}return zr(t,[{key:"getKeys",value:function(){return new Set(this.styleKeyToAtlas.keys())}},{key:"getIdsFor",value:function(n){var r=this.keyToIds.get(n);return r||(r=new Set,this.keyToIds.set(n,r)),r}},{key:"_createAtlas",value:function(){var n=this.r,r=this.opts;return new xy(n,r)}},{key:"_getScratchCanvas",value:function(){if(!this.scratch){var n=this.r,r=this.opts,a=r.webglTexSize,i=Math.floor(a/r.webglTexRows);this.scratch=r.createTextureCanvas(n,a,i,"scratch")}return this.scratch}},{key:"draw",value:function(n,r,a,i){if(this.styleKeyNeedsRedraw.has(r)){this.styleKeyNeedsRedraw.delete(r),this.deleteKey(n,r);var o=this.styleKeyToAtlas.get(r);o&&(o.forceGC=!0),this.styleKeyToAtlas.delete(r)}var s=this.styleKeyToAtlas.get(r);return s||(s=this.atlases[this.atlases.length-1],(!s||!s.canFit(a))&&(s=this._createAtlas(),this.atlases.push(s)),s.draw(r,a,i),this.styleKeyToAtlas.set(r,s),this.getIdsFor(r).add(n),this.idToKey.set(n,r)),s}},{key:"getAtlas",value:function(n){return this.styleKeyToAtlas.get(n)}},{key:"hasAtlas",value:function(n){return this.styleKeyToAtlas.has(n)}},{key:"deleteKey",value:function(n,r){this.idToKey.delete(n),this.getIdsFor(r).delete(n)}},{key:"checkKeyIsInvalid",value:function(n,r){if(!this.idToKey.has(n))return!1;var a=this.idToKey.get(n);return a!=r?(this.deleteKey(n,a),!0):!1}},{key:"_getKeysToCollect",value:function(){var n=new Set,r=Ot(this.styleKeyToAtlas.keys()),a;try{for(r.s();!(a=r.n()).done;){var i=a.value;this.getIdsFor(i).size==0&&n.add(i)}}catch(o){r.e(o)}finally{r.f()}return n}},{key:"gc",value:function(){var n=this,r=this.atlases.some(function(f){return f.forceGC}),a=this._getKeysToCollect();if(a.size===0&&!r){console.log("nothing to garbage collect");return}var i=[],o=new Map,s=null,l=Ot(this.atlases),c;try{var u=function(){var h=c.value,p=h.getKeys(),m=Cy(a,p);if(m.size===0&&!h.forceGC)return i.push(h),p.forEach(function(B){return o.set(B,h)}),"continue";s||(s=n._createAtlas(),i.push(s));var _=Ot(p),g;try{for(_.s();!(g=_.n()).done;){var P=g.value;if(!m.has(P)){var y=h.getOffsets(P),C=Rn(y,2),E=C[0],T=C[1];s.canFit({w:E.w+T.w,h:E.h})||(s=n._createAtlas(),i.push(s)),n._copyTextureToNewAtlas(P,h,s),o.set(P,s)}}}catch(B){_.e(B)}finally{_.f()}};for(l.s();!(c=l.n()).done;)var d=u()}catch(f){l.e(f)}finally{l.f()}this.atlases=i,this.styleKeyToAtlas=o}},{key:"_copyTextureToNewAtlas",value:function(n,r,a){var i=r.getOffsets(n),o=Rn(i,2),s=o[0],l=o[1];if(l.w===0)a.draw(n,s,function(f){f.drawImage(r.canvas,s.x,s.y,s.w,s.h,0,0,s.w,s.h)});else{var c=this._getScratchCanvas();c.clear(),c.context.drawImage(r.canvas,s.x,s.y,s.w,s.h,0,0,s.w,s.h),c.context.drawImage(r.canvas,l.x,l.y,l.w,l.h,s.w,0,l.w,l.h);var u=s.w+l.w,d=s.h;a.draw(n,{w:u,h:d},function(f){f.drawImage(c,0,0,u,d,0,0,u,d)})}}},{key:"getCounts",value:function(){return{keyCount:this.styleKeyToAtlas.size,atlasCount:new Set(this.styleKeyToAtlas.values()).size}}}]),t}();function Cy(t,e){return t.intersection?t.intersection(e):new Set(Ud(t).filter(function(n){return e.has(n)}))}var Ey=function(){function t(e,n){Yr(this,t),this.r=e;var r=n;this.globalOptions=r,this.maxAtlases=r.webglTexPerBatch,this.atlasSize=r.webglTexSize,this.renderTypes=new Map,this.maxAtlasesPerBatch=n.webglTexPerBatch,this.batchAtlases=[],this._cacheScratchCanvas(r)}return zr(t,[{key:"_cacheScratchCanvas",value:function(n){var r=-1,a=-1,i=null,o=n.createTextureCanvas;n.createTextureCanvas=function(s,l,c,u){return u?((!i||l!=r||c!=a)&&(r=l,a=c,i=o(s,l,c)),i):o(s,l,c)}}},{key:"addRenderType",value:function(n,r){var a=new Ay(this.r,this.globalOptions),i=r;this.renderTypes.set(n,Ve({type:n,atlasCollection:a},i))}},{key:"getRenderTypes",value:function(){return Ud(this.renderTypes.values())}},{key:"getRenderTypeOpts",value:function(n){return this.renderTypes.get(n)}},{key:"invalidate",value:function(n){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},a=r.forceRedraw,i=a===void 0?!1:a,o=r.filterEle,s=o===void 0?function(){return!0}:o,l=r.filterType,c=l===void 0?function(){return!0}:l,u=!1,d=Ot(n),f;try{for(d.s();!(f=d.n()).done;){var h=f.value;if(s(h)){var p=h.id(),m=Ot(this.getRenderTypes()),_;try{for(m.s();!(_=m.n()).done;){var g=_.value;if(c(g.type)){var P=g.getKey(h);i?(g.atlasCollection.deleteKey(p,P),g.atlasCollection.styleKeyNeedsRedraw.add(P),u=!0):u|=g.atlasCollection.checkKeyIsInvalid(p,P)}}}catch(y){m.e(y)}finally{m.f()}}}}catch(y){d.e(y)}finally{d.f()}return u}},{key:"gc",value:function(){var n=Ot(this.getRenderTypes()),r;try{for(n.s();!(r=n.n()).done;){var a=r.value;a.atlasCollection.gc()}}catch(i){n.e(i)}finally{n.f()}}},{key:"isRenderable",value:function(n,r){var a=this.getRenderTypeOpts(r);return a&&a.isVisible(n)}},{key:"startBatch",value:function(){this.batchAtlases=[]}},{key:"getAtlasCount",value:function(){return this.batchAtlases.length}},{key:"getAtlases",value:function(){return this.batchAtlases}},{key:"getOrCreateAtlas",value:function(n,r,a){var i=this.renderTypes.get(a),o=i.getKey(n),s=n.id();return i.atlasCollection.draw(s,o,r,function(l){i.drawElement(l,n,r,!0,!0)})}},{key:"getAtlasIndexForBatch",value:function(n){var r=this.batchAtlases.indexOf(n);if(r<0){if(this.batchAtlases.length===this.maxAtlasesPerBatch)return;this.batchAtlases.push(n),r=this.batchAtlases.length-1}return r}},{key:"getIndexArray",value:function(){return Array.from({length:this.maxAtlases},function(n,r){return r})}},{key:"getAtlasInfo",value:function(n,r){var a=this.renderTypes.get(r),i=a.getBoundingBox(n),o=this.getOrCreateAtlas(n,i,r),s=this.getAtlasIndexForBatch(o);if(s!==void 0){var l=a.getKey(n),c=o.getOffsets(l),u=Rn(c,2),d=u[0],f=u[1];return{atlasID:s,tex:d,tex1:d,tex2:f,bb:i,type:r,styleKey:l}}}},{key:"canAddToCurrentBatch",value:function(n,r){if(this.batchAtlases.length===this.maxAtlasesPerBatch){var a=this.renderTypes.get(r),i=a.getKey(n),o=a.atlasCollection.getAtlas(i);return o&&this.batchAtlases.includes(o)}return!0}},{key:"setTransformMatrix",value:function(n,r,a){var i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,o=r.bb,s=r.type,l=r.tex1,c=r.tex2,u=this.getRenderTypeOpts(s),d=u.getPadding?u.getPadding(a):0,f=l.w/(l.w+c.w);i||(f=1-f);var h=this.getAdjustedBB(o,d,i,f),p,m;yh(n);var _=u.getRotation?u.getRotation(a):0;if(_!==0){var g=u.getRotationPoint(a),P=g.x,y=g.y;Gs(n,n,[P,y]),Xh(n,n,_);var C=u.getRotationOffset(a);p=C.x+h.xOffset,m=C.y}else p=h.x1,m=h.y1;Gs(n,n,[p,m]),ql(n,n,[h.w,h.h])}},{key:"getTransformMatrix",value:function(n,r){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,i=Li();return this.setTransformMatrix(i,n,r,a),i}},{key:"getAdjustedBB",value:function(n,r,a,i){var o=n.x1,s=n.y1,l=n.w,c=n.h;r&&(o-=r,s-=r,l+=2*r,c+=2*r);var u=0,d=l*i;return a&&i<1?l=d:!a&&i<1&&(u=l-d,o+=u,l=d),{x1:o,y1:s,w:l,h:c,xOffset:u}}},{key:"getDebugInfo",value:function(){var n=[],r=Ot(this.renderTypes),a;try{for(r.s();!(a=r.n()).done;){var i=Rn(a.value,2),o=i[0],s=i[1],l=s.atlasCollection.getCounts(),c=l.keyCount,u=l.atlasCount;n.push({type:o,keyCount:c,atlasCount:u})}}catch(d){r.e(d)}finally{r.f()}return n}}]),t}(),il=0,Sd=1,Wd=2,ol=3,wy=function(){function t(e,n,r){Yr(this,t),this.r=e,this.gl=n,this.maxInstances=r.webglBatchSize,this.maxAtlases=r.webglTexPerBatch,this.atlasSize=r.webglTexSize,this.bgColor=r.bgColor,r.enableWrapping=!0,r.createTextureCanvas=gy,this.atlasManager=new Ey(e,r),this.program=this.createShaderProgram(Ui.SCREEN),this.pickingProgram=this.createShaderProgram(Ui.PICKING),this.vao=this.createVAO(),this.debugInfo=[]}return zr(t,[{key:"addTextureRenderType",value:function(n,r){this.atlasManager.addRenderType(n,r)}},{key:"invalidate",value:function(n){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},a=r.type,i=this.atlasManager;return a?i.invalidate(n,{filterType:function(s){return s===a},forceRedraw:!0}):i.invalidate(n)}},{key:"gc",value:function(){this.atlasManager.gc()}},{key:"createShaderProgram",value:function(n){var r=this.gl,a=`#version 300 es
      precision highp float;

      uniform mat3 uPanZoomMatrix;
      uniform int  uAtlasSize;
      
      // instanced
      in vec2 aPosition; 

      // what are we rendering?
      in int aVertType;

      // for picking
      in vec4 aIndex;
      
      // For textures
      in int aAtlasId; // which shader unit/atlas to use
      in vec4 aTex1; // x/y/w/h of texture in atlas
      in vec4 aTex2; 

      // for any transforms that are needed
      in vec4 aScaleRotate1;  // vectors use fewer attributes than matrices
      in vec2 aTranslate1;
      in vec4 aScaleRotate2;
      in vec2 aTranslate2;

      // for edges
      in vec4 aPointAPointB;
      in vec4 aPointCPointD;
      in float aLineWidth;
      in vec4 aEdgeColor;

      out vec2 vTexCoord;
      out vec4 vEdgeColor;
      flat out int vAtlasId;
      flat out vec4 vIndex;
      flat out int vVertType;

      void main(void) {
        int vid = gl_VertexID;
        vec2 position = aPosition;

        if(aVertType == `.concat(il,`) {
          float texX;
          float texY;
          float texW;
          float texH;
          mat3  texMatrix;

          int vid = gl_VertexID;
          if(vid <= 5) {
            texX = aTex1.x;
            texY = aTex1.y;
            texW = aTex1.z;
            texH = aTex1.w;
            texMatrix = mat3(
              vec3(aScaleRotate1.xy, 0.0),
              vec3(aScaleRotate2.zw, 0.0),
              vec3(aTranslate1,      1.0)
            );
          } else {
            texX = aTex2.x;
            texY = aTex2.y;
            texW = aTex2.z;
            texH = aTex2.w;
            texMatrix = mat3(
              vec3(aScaleRotate2.xy, 0.0),
              vec3(aScaleRotate2.zw, 0.0),
              vec3(aTranslate2,      1.0)
            );
          }

          if(vid == 1 || vid == 2 || vid == 4 || vid == 7 || vid == 8 || vid == 10) {
            texX += texW;
          }
          if(vid == 2 || vid == 4 || vid == 5 || vid == 8 || vid == 10 || vid == 11) {
            texY += texH;
          }

          float d = float(uAtlasSize);
          vTexCoord = vec2(texX / d, texY / d); // tex coords must be between 0 and 1

          gl_Position = vec4(uPanZoomMatrix * texMatrix * vec3(position, 1.0), 1.0);
        } 
        else if(aVertType == `).concat(Sd,` && vid < 6) {
          vec2 source = aPointAPointB.xy;
          vec2 target = aPointAPointB.zw;

          // adjust the geometry so that the line is centered on the edge
          position.y = position.y - 0.5;

          vec2 xBasis = target - source;
          vec2 yBasis = normalize(vec2(-xBasis.y, xBasis.x));
          vec2 point = source + xBasis * position.x + yBasis * aLineWidth * position.y;

          gl_Position = vec4(uPanZoomMatrix * vec3(point, 1.0), 1.0);
          vEdgeColor = aEdgeColor;
        } 
        else if(aVertType == `).concat(Wd,` && vid < 6) {
          vec2 pointA = aPointAPointB.xy;
          vec2 pointB = aPointAPointB.zw;
          vec2 pointC = aPointCPointD.xy;
          vec2 pointD = aPointCPointD.zw;

          // adjust the geometry so that the line is centered on the edge
          position.y = position.y - 0.5;

          vec2 p0 = pointA;
          vec2 p1 = pointB;
          vec2 p2 = pointC;
          vec2 pos = position;
          if(position.x == 1.0) {
            p0 = pointD;
            p1 = pointC;
            p2 = pointB;
            pos = vec2(0.0, -position.y);
          }

          vec2 p01 = p1 - p0;
          vec2 p12 = p2 - p1;
          vec2 p21 = p1 - p2;

          // Find the normal vector.
          vec2 tangent = normalize(normalize(p12) + normalize(p01));
          vec2 normal = vec2(-tangent.y, tangent.x);

          // Find the vector perpendicular to p0 -> p1.
          vec2 p01Norm = normalize(vec2(-p01.y, p01.x));

          // Determine the bend direction.
          float sigma = sign(dot(p01 + p21, normal));
          float width = aLineWidth;

          if(sign(pos.y) == -sigma) {
            // This is an intersecting vertex. Adjust the position so that there's no overlap.
            vec2 point = 0.5 * width * normal * -sigma / dot(normal, p01Norm);
            gl_Position = vec4(uPanZoomMatrix * vec3(p1 + point, 1.0), 1.0);
          } else {
            // This is a non-intersecting vertex. Treat it like a mitre join.
            vec2 point = 0.5 * width * normal * sigma * dot(normal, p01Norm);
            gl_Position = vec4(uPanZoomMatrix * vec3(p1 + point, 1.0), 1.0);
          }

          vEdgeColor = aEdgeColor;
        } 
        else if(aVertType == `).concat(ol,` && vid < 3) {
          // massage the first triangle into an edge arrow
          if(vid == 0)
            position = vec2(-0.15, -0.3);
          if(vid == 1)
            position = vec2( 0.0,   0.0);
          if(vid == 2)
            position = vec2( 0.15, -0.3);

          mat3 transform = mat3(
            vec3(aScaleRotate1.xy, 0.0),
            vec3(aScaleRotate1.zw, 0.0),
            vec3(aTranslate1,      1.0)
          );
          gl_Position = vec4(uPanZoomMatrix * transform * vec3(position, 1.0), 1.0);
          vEdgeColor = aEdgeColor;
        } else {
          gl_Position = vec4(2.0, 0.0, 0.0, 1.0); // discard vertex by putting it outside webgl clip space
        }

        vAtlasId = aAtlasId;
        vIndex = aIndex;
        vVertType = aVertType;
      }
    `),i=this.atlasManager.getIndexArray(),o=`#version 300 es
      precision highp float;

      // define texture unit for each node in the batch
      `.concat(i.map(function(c){return"uniform sampler2D uTexture".concat(c,";")}).join(`
	`),`

      uniform vec4 uBGColor;

      in vec2 vTexCoord;
      in vec4 vEdgeColor;
      flat in int vAtlasId;
      flat in vec4 vIndex;
      flat in int vVertType;

      out vec4 outColor;

      void main(void) {
        if(vVertType == `).concat(il,`) {
          `).concat(i.map(function(c){return"if(vAtlasId == ".concat(c,") outColor = texture(uTexture").concat(c,", vTexCoord);")}).join(`
	else `),`
        } else if(vVertType == `).concat(ol,`) {
          // blend arrow color with background (using premultiplied alpha)
          outColor.rgb = vEdgeColor.rgb + (uBGColor.rgb * (1.0 - vEdgeColor.a)); 
          outColor.a = 1.0; // make opaque, masks out line under arrow
        } else {
          outColor = vEdgeColor;
        }

        `).concat(n.picking?`if(outColor.a == 0.0) discard;
             else outColor = vIndex;`:"",`
      }
    `),s=my(r,a,o);s.aPosition=r.getAttribLocation(s,"aPosition"),s.aIndex=r.getAttribLocation(s,"aIndex"),s.aVertType=r.getAttribLocation(s,"aVertType"),s.aAtlasId=r.getAttribLocation(s,"aAtlasId"),s.aTex1=r.getAttribLocation(s,"aTex1"),s.aTex2=r.getAttribLocation(s,"aTex2"),s.aScaleRotate1=r.getAttribLocation(s,"aScaleRotate1"),s.aTranslate1=r.getAttribLocation(s,"aTranslate1"),s.aScaleRotate2=r.getAttribLocation(s,"aScaleRotate2"),s.aTranslate2=r.getAttribLocation(s,"aTranslate2"),s.aPointAPointB=r.getAttribLocation(s,"aPointAPointB"),s.aPointCPointD=r.getAttribLocation(s,"aPointCPointD"),s.aLineWidth=r.getAttribLocation(s,"aLineWidth"),s.aEdgeColor=r.getAttribLocation(s,"aEdgeColor"),s.uPanZoomMatrix=r.getUniformLocation(s,"uPanZoomMatrix"),s.uAtlasSize=r.getUniformLocation(s,"uAtlasSize"),s.uBGColor=r.getUniformLocation(s,"uBGColor"),s.uTextures=[];for(var l=0;l<this.atlasManager.maxAtlases;l++)s.uTextures.push(r.getUniformLocation(s,"uTexture".concat(l)));return s}},{key:"createVAO",value:function(){var n=[0,0,1,0,1,1,0,0,1,1,0,1],r=[].concat(n,n);this.vertexCount=r.length/2;var a=this.maxInstances,i=this.gl,o=this.program,s=i.createVertexArray();return i.bindVertexArray(s),by(i,"vec2",o.aPosition,r),this.indexBuffer=wt(i,a,"vec4",o.aIndex),this.vertTypeBuffer=wt(i,a,"int",o.aVertType),this.atlasIdBuffer=wt(i,a,"int",o.aAtlasId),this.tex1Buffer=wt(i,a,"vec4",o.aTex1),this.tex2Buffer=wt(i,a,"vec4",o.aTex2),this.scaleRotate1Buffer=wt(i,a,"vec4",o.aScaleRotate1),this.translate1Buffer=wt(i,a,"vec2",o.aTranslate1),this.scaleRotate2Buffer=wt(i,a,"vec4",o.aScaleRotate2),this.translate2Buffer=wt(i,a,"vec2",o.aTranslate2),this.pointAPointBBuffer=wt(i,a,"vec4",o.aPointAPointB),this.pointCPointDBuffer=wt(i,a,"vec4",o.aPointCPointD),this.lineWidthBuffer=wt(i,a,"float",o.aLineWidth),this.edgeColorBuffer=wt(i,a,"vec4",o.aEdgeColor),i.bindVertexArray(null),s}},{key:"buffers",get:function(){var n=this;return this._buffers||(this._buffers=Object.keys(this).filter(function(r){return r.endsWith("Buffer")}).map(function(r){return n[r]})),this._buffers}},{key:"startFrame",value:function(n,r){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Ui.SCREEN;this.panZoomMatrix=n,this.debugInfo=r,this.renderTarget=a,this.startBatch()}},{key:"startBatch",value:function(){this.instanceCount=0,this.atlasManager.startBatch()}},{key:"endFrame",value:function(){this.endBatch()}},{key:"getTempMatrix",value:function(){return this.tempMatrix=this.tempMatrix||Li()}},{key:"drawTexture",value:function(n,r,a){var i=this.atlasManager;if(i.isRenderable(n,a)){i.canAddToCurrentBatch(n,a)||this.endBatch();var o=this.instanceCount;this.vertTypeBuffer.getView(o)[0]=il;var s=this.indexBuffer.getView(o);Os(r,s);var l=i.getAtlasInfo(n,a,l),c=l.atlasID,u=l.tex1,d=l.tex2,f=this.atlasIdBuffer.getView(o);f[0]=c;var h=this.tex1Buffer.getView(o);h[0]=u.x,h[1]=u.y,h[2]=u.w,h[3]=u.h;var p=this.tex2Buffer.getView(o);p[0]=d.x,p[1]=d.y,p[2]=d.w,p[3]=d.h;for(var m=this.getTempMatrix(),_=0,g=[1,2];_<g.length;_++){var P=g[_];i.setTransformMatrix(m,l,n,P===1);var y=this["scaleRotate".concat(P,"Buffer")].getView(o);y[0]=m[0],y[1]=m[1],y[2]=m[3],y[3]=m[4];var C=this["translate".concat(P,"Buffer")].getView(o);C[0]=m[6],C[1]=m[7]}this.instanceCount++,this.instanceCount>=this.maxInstances&&this.endBatch()}}},{key:"drawEdgeArrow",value:function(n,r,a){var i=n._private.rscratch,o,s,l;if(a==="source"?(o=i.arrowStartX,s=i.arrowStartY,l=i.srcArrowAngle):(o=i.arrowEndX,s=i.arrowEndY,l=i.tgtArrowAngle),!(isNaN(o)||o==null||isNaN(s)||s==null||isNaN(l)||l==null)){var c=n.pstyle(a+"-arrow-shape").value;if(c!=="none"){var u=n.pstyle(a+"-arrow-color").value,d=n.pstyle("opacity").value,f=n.pstyle("line-opacity").value,h=d*f,p=n.pstyle("width").pfValue,m=n.pstyle("arrow-scale").value,_=this.r.getArrowWidth(p,m),g=this.getTempMatrix();yh(g),Gs(g,g,[o,s]),ql(g,g,[_,_]),Xh(g,g,l);var P=this.instanceCount;this.vertTypeBuffer.getView(P)[0]=ol;var y=this.indexBuffer.getView(P);Os(r,y);var C=this.edgeColorBuffer.getView(P);ws(u,h,C);var E=this.scaleRotate1Buffer.getView(P);E[0]=g[0],E[1]=g[1],E[2]=g[3],E[3]=g[4];var T=this.translate1Buffer.getView(P);T[0]=g[6],T[1]=g[7],this.instanceCount++,this.instanceCount>=this.maxInstances&&this.endBatch()}}}},{key:"drawEdgeLine",value:function(n,r){var a=n.pstyle("opacity").value,i=n.pstyle("line-opacity").value,o=n.pstyle("width").pfValue,s=n.pstyle("line-color").value,l=a*i,c=this.getEdgePoints(n);if(c.length/2+this.instanceCount>this.maxInstances&&this.endBatch(),c.length==4){var u=this.instanceCount;this.vertTypeBuffer.getView(u)[0]=Sd;var d=this.indexBuffer.getView(u);Os(r,d);var f=this.edgeColorBuffer.getView(u);ws(s,l,f);var h=this.lineWidthBuffer.getView(u);h[0]=o;var p=this.pointAPointBBuffer.getView(u);p[0]=c[0],p[1]=c[1],p[2]=c[2],p[3]=c[3],this.instanceCount++,this.instanceCount>=this.maxInstances&&this.endBatch()}else for(var m=0;m<c.length-2;m+=2){var _=this.instanceCount;this.vertTypeBuffer.getView(_)[0]=Wd;var g=this.indexBuffer.getView(_);Os(r,g);var P=this.edgeColorBuffer.getView(_);ws(s,l,P);var y=this.lineWidthBuffer.getView(_);y[0]=o;var C=c[m-2],E=c[m-1],T=c[m],B=c[m+1],D=c[m+2],k=c[m+3],$=c[m+4],M=c[m+5];m==0&&(C=2*T-D+.001,E=2*B-k+.001),m==c.length-4&&($=2*D-T+.001,M=2*k-B+.001);var b=this.pointAPointBBuffer.getView(_);b[0]=C,b[1]=E,b[2]=T,b[3]=B;var x=this.pointCPointDBuffer.getView(_);x[0]=D,x[1]=k,x[2]=$,x[3]=M,this.instanceCount++,this.instanceCount>=this.maxInstances&&this.endBatch()}}},{key:"getEdgePoints",value:function(n){var r=n._private.rscratch,a=r.allpts;if(a.length==4)return a;var i=this.getNumSegments(n);return this.getCurveSegmentPoints(a,i)}},{key:"getNumSegments",value:function(n){var r=15;return Math.min(Math.max(r,5),this.maxInstances)}},{key:"getCurveSegmentPoints",value:function(n,r){if(n.length==4)return n;for(var a=Array((r+1)*2),i=0;i<=r;i++)if(i==0)a[0]=n[0],a[1]=n[1];else if(i==r)a[i*2]=n[n.length-2],a[i*2+1]=n[n.length-1];else{var o=i/r;this.setCurvePoint(n,o,a,i*2)}return a}},{key:"setCurvePoint",value:function(n,r,a,i){if(n.length<=2)a[i]=n[0],a[i+1]=n[1];else{for(var o=Array(n.length-2),s=0;s<o.length;s+=2){var l=(1-r)*n[s]+r*n[s+2],c=(1-r)*n[s+1]+r*n[s+3];o[s]=l,o[s+1]=c}return this.setCurvePoint(o,r,a,i)}}},{key:"endBatch",value:function(){var n=this.gl,r=this.vao,a=this.vertexCount,i=this.instanceCount;if(i!==0){var o=this.renderTarget.picking?this.pickingProgram:this.program;n.useProgram(o),n.bindVertexArray(r);var s=Ot(this.buffers),l;try{for(s.s();!(l=s.n()).done;){var c=l.value;c.bufferSubData(i)}}catch(p){s.e(p)}finally{s.f()}for(var u=this.atlasManager.getAtlases(),d=0;d<u.length;d++)u[d].bufferIfNeeded(n);for(var f=0;f<u.length;f++)n.activeTexture(n.TEXTURE0+f),n.bindTexture(n.TEXTURE_2D,u[f].texture),n.uniform1i(o.uTextures[f],f);n.uniformMatrix3fv(o.uPanZoomMatrix,!1,this.panZoomMatrix),n.uniform1i(o.uAtlasSize,this.atlasManager.atlasSize);var h=ws(this.bgColor,1);n.uniform4fv(o.uBGColor,h),n.drawArraysInstanced(n.TRIANGLES,0,a,i),n.bindVertexArray(null),n.bindTexture(n.TEXTURE_2D,null),this.debugInfo&&this.debugInfo.push({count:i,atlasCount:u.length}),this.startBatch()}}},{key:"getDebugInfo",value:function(){return this.debugInfo}},{key:"getAtlasDebugInfo",value:function(){return this.atlasManager.getDebugInfo()}}]),t}();function Nd(t,e){return"rgba(".concat(t[0],", ").concat(t[1],", ").concat(t[2],", ").concat(e,")")}var Oy=function(){function t(e){Yr(this,t),this.r=e}return zr(t,[{key:"getStyleKey",value:function(n,r){var a=this.getStyle(n,r),i=a.shape,o=a.opacity,s=a.color;if(!i)return null;var l=r.width(),c=r.height(),u=Nd(s,o);return Ir("".concat(i,"-").concat(l,"-").concat(c,"-").concat(u))}},{key:"isVisible",value:function(n,r){var a=r.pstyle("".concat(n,"-opacity")).value;return a>0}},{key:"getStyle",value:function(n,r){var a=r.pstyle("".concat(n,"-opacity")).value,i=r.pstyle("".concat(n,"-color")).value,o=r.pstyle("".concat(n,"-shape")).value;return{opacity:a,color:i,shape:o}}},{key:"getPadding",value:function(n,r){return r.pstyle("".concat(n,"-padding")).pfValue}},{key:"draw",value:function(n,r,a,i){if(this.isVisible(n,a)){var o=this.r,s=i.w,l=i.h,c=s/2,u=l/2,d=this.getStyle(n,a),f=d.shape,h=d.color,p=d.opacity;r.save(),r.fillStyle=Nd(h,p),f==="round-rectangle"||f==="roundrectangle"?o.drawRoundRectanglePath(r,c,u,s,l,"auto"):f==="ellipse"&&o.drawEllipsePath(r,c,u,s,l),r.fill(),r.restore()}}}]),t}();function Ty(t){var e=t&&t.style&&t.style.backgroundColor||"white";return qd(e)}var Kh={};Kh.initWebgl=function(t,e){var n=this,r=n.data.contexts[n.WEBGL],a=t.cy.container();t.bgColor=Ty(a),t.webglTexSize=Math.min(t.webglTexSize,r.getParameter(r.MAX_TEXTURE_SIZE)),t.webglTexRows=Math.min(t.webglTexRows,54),t.webglBatchSize=Math.min(t.webglBatchSize,16384),t.webglTexPerBatch=Math.min(t.webglTexPerBatch,r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS)),n.webglDebug=t.webglDebug,n.webglDebugShowAtlases=t.webglDebugShowAtlases,console.log("max texture units",r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS)),console.log("max texture size",r.getParameter(r.MAX_TEXTURE_SIZE)),console.log("webgl options",t),n.pickingFrameBuffer=yy(r),n.pickingFrameBuffer.needsDraw=!0;var i=function(u){return n.getTextAngle(u,null)},o=function(u){var d=u.pstyle("label");return d&&d.value};n.eleDrawing=new wy(n,r,t);var s=new Oy(n);n.eleDrawing.addTextureRenderType("node-body",Di({getKey:e.getStyleKey,getBoundingBox:e.getElementBox,drawElement:e.drawElement,isVisible:function(u){return u.visible()}})),n.eleDrawing.addTextureRenderType("node-label",Di({getKey:e.getLabelKey,getBoundingBox:e.getLabelBox,drawElement:e.drawLabel,getRotation:i,getRotationPoint:e.getLabelRotationPoint,getRotationOffset:e.getLabelRotationOffset,isVisible:o})),n.eleDrawing.addTextureRenderType("node-overlay",Di({getBoundingBox:e.getElementBox,getKey:function(u){return s.getStyleKey("overlay",u)},drawElement:function(u,d,f){return s.draw("overlay",u,d,f)},isVisible:function(u){return s.isVisible("overlay",u)},getPadding:function(u){return s.getPadding("overlay",u)}})),n.eleDrawing.addTextureRenderType("node-underlay",Di({getBoundingBox:e.getElementBox,getKey:function(u){return s.getStyleKey("underlay",u)},drawElement:function(u,d,f){return s.draw("underlay",u,d,f)},isVisible:function(u){return s.isVisible("underlay",u)},getPadding:function(u){return s.getPadding("underlay",u)}})),n.eleDrawing.addTextureRenderType("edge-label",Di({getKey:e.getLabelKey,getBoundingBox:e.getLabelBox,drawElement:e.drawLabel,getRotation:i,getRotationPoint:e.getLabelRotationPoint,getRotationOffset:e.getLabelRotationOffset,isVisible:o}));var l=ro(function(){console.log("garbage collect flag set"),n.data.gc=!0},1e4);n.onUpdateEleCalcs(function(c,u){var d=!1;u&&u.length>0&&(d|=n.eleDrawing.invalidate(u)),d&&l()}),By(n)};function By(t){{var e=t.render;t.render=function(i){i=i||{};var o=t.cy;t.webgl&&(o.zoom()>ph?(ky(t),e.call(t,i)):(Dy(t),Ah(t,i,Ui.SCREEN)))}}{var n=t.matchCanvasSize;t.matchCanvasSize=function(i){n.call(t,i),t.pickingFrameBuffer.setFramebufferAttachmentSizes(t.canvasWidth,t.canvasHeight),t.pickingFrameBuffer.needsDraw=!0}}t.findNearestElements=function(i,o,s,l){return Ry(t,i,o)};{var r=t.invalidateCachedZSortedEles;t.invalidateCachedZSortedEles=function(){r.call(t),t.pickingFrameBuffer.needsDraw=!0}}{var a=t.notify;t.notify=function(i,o){a.call(t,i,o),i==="viewport"||i==="bounds"?t.pickingFrameBuffer.needsDraw=!0:i==="background"&&t.eleDrawing.invalidate(o,{type:"node-body"})}}}function ky(t){var e=t.data.contexts[t.WEBGL];e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT)}function Dy(t){var e=function(r){r.save(),r.setTransform(1,0,0,1,0,0),r.clearRect(0,0,t.canvasWidth,t.canvasHeight),r.restore()};e(t.data.contexts[t.NODE]),e(t.data.contexts[t.DRAG])}function $y(t){var e=t.canvasWidth,n=t.canvasHeight,r=Vl(t),a=r.pan,i=r.zoom,o=Li();Gs(o,o,[a.x,a.y]),ql(o,o,[i,i]);var s=Li();Ky(s,e,n);var l=Li();return Xy(l,s,o),l}function xh(t,e){var n=t.canvasWidth,r=t.canvasHeight,a=Vl(t),i=a.pan,o=a.zoom;e.setTransform(1,0,0,1,0,0),e.clearRect(0,0,n,r),e.translate(i.x,i.y),e.scale(o,o)}function Sy(t,e){t.drawSelectionRectangle(e,function(n){return xh(t,n)})}function Wy(t){var e=t.data.contexts[t.NODE];e.save(),xh(t,e),e.strokeStyle="rgba(0, 0, 0, 0.3)",e.beginPath(),e.moveTo(-1e3,0),e.lineTo(1e3,0),e.stroke(),e.beginPath(),e.moveTo(0,-1e3),e.lineTo(0,1e3),e.stroke(),e.restore()}function Ny(t){var e=function(a,i,o){for(var s=a.atlasManager.getRenderTypeOpts(i),l=t.data.contexts[t.NODE],c=.125,u=s.atlasCollection.atlases,d=0;d<u.length;d++){var f=u[d],h=f.canvas,p=h.width,m=h.height,_=p*d,g=h.height*o;l.save(),l.scale(c,c),l.drawImage(h,_,g),l.strokeStyle="black",l.rect(_,g,p,m),l.stroke(),l.restore()}},n=0;e(t.eleDrawing,"node-body",n++),e(t.eleDrawing,"node-label",n++)}function My(t,e,n,r,a){var i,o,s,l,c=Vl(t),u=c.pan,d=c.zoom;if(r===void 0||a===void 0){var f=al(t,u,d,e,n),h=Rn(f,2),p=h[0],m=h[1],_=6;i=p-_/2,o=m-_/2,s=_,l=_}else{var g=al(t,u,d,e,n),P=Rn(g,2),y=P[0],C=P[1],E=al(t,u,d,r,a),T=Rn(E,2),B=T[0],D=T[1];i=y,o=D,s=Math.abs(B-y),l=Math.abs(D-C)}if(s===0||l===0)return[];var k=t.data.contexts[t.WEBGL];k.bindFramebuffer(k.FRAMEBUFFER,t.pickingFrameBuffer),t.pickingFrameBuffer.needsDraw&&(k.viewport(0,0,k.canvas.width,k.canvas.height),Ah(t,null,Ui.PICKING),t.pickingFrameBuffer.needsDraw=!1);var $=s*l,M=new Uint8Array($*4);k.readPixels(i,o,s,l,k.RGBA,k.UNSIGNED_BYTE,M),k.bindFramebuffer(k.FRAMEBUFFER,null);for(var b=new Set,x=0;x<$;x++){var K=M.slice(x*4,x*4+4),X=_y(K)-1;X>=0&&b.add(X)}return b}function Ry(t,e,n){var r=My(t,e,n),a=t.getCachedZSortedEles(),i,o,s=Ot(r),l;try{for(s.s();!(l=s.n()).done;){var c=l.value,u=a[c];if(!i&&u.isNode()&&(i=u),!o&&u.isEdge()&&(o=u),i&&o)break}}catch(d){s.e(d)}finally{s.f()}return[i,o].filter(Boolean)}function Ah(t,e,n){var r,a;t.webglDebug&&(a=[],r=performance.now());var i=t.eleDrawing,o=0;if(n.screen&&t.data.canvasNeedsRedraw[t.SELECT_BOX]&&Sy(t,e),t.data.canvasNeedsRedraw[t.NODE]||n.picking){var s=function(b,x){x+=1,b.isNode()?(i.drawTexture(b,x,"node-underlay"),i.drawTexture(b,x,"node-body"),i.drawTexture(b,x,"node-label"),i.drawTexture(b,x,"node-overlay")):(i.drawEdgeLine(b,x),i.drawEdgeArrow(b,x,"source"),i.drawEdgeArrow(b,x,"target"),i.drawTexture(b,x,"edge-label"))},l=t.data.contexts[t.WEBGL];n.screen?(l.clearColor(0,0,0,0),l.enable(l.BLEND),l.blendFunc(l.ONE,l.ONE_MINUS_SRC_ALPHA)):l.disable(l.BLEND),l.clear(l.COLOR_BUFFER_BIT|l.DEPTH_BUFFER_BIT),l.viewport(0,0,l.canvas.width,l.canvas.height);var c=$y(t),u=t.getCachedZSortedEles();if(o=u.length,i.startFrame(c,a,n),n.screen){for(var d=0;d<u.nondrag.length;d++)s(u.nondrag[d],d);for(var f=0;f<u.drag.length;f++)s(u.drag[f],-1)}else if(n.picking)for(var h=0;h<u.length;h++)s(u[h],h);i.endFrame(),t.data.gc&&(console.log("Garbage Collect!"),t.data.gc=!1,i.gc()),n.screen&&t.webglDebugShowAtlases&&(Wy(t),Ny(t)),t.data.canvasNeedsRedraw[t.NODE]=!1,t.data.canvasNeedsRedraw[t.DRAG]=!1}if(t.webglDebug){var p=performance.now(),m=!0,_=0,g=0,P=Ot(a),y;try{for(P.s();!(y=P.n()).done;){var C=y.value;_++,g+=C.count}}catch(M){P.e(M)}finally{P.f()}var E=Math.ceil(p-r),T="".concat(o," elements, ").concat(g," rectangles, ").concat(_," batches");if(m)console.log("WebGL (".concat(n.name,") - ").concat(T));else{console.log("WebGL render (".concat(n.name,") - frame time ").concat(E,"ms")),console.log("  ".concat(T)),console.log("Texture Atlases Used:");var B=i.getAtlasDebugInfo(),D=Ot(B),k;try{for(D.s();!(k=D.n()).done;){var $=k.value;console.log("  ".concat($.type,": ").concat($.keyCount," keys, ").concat($.atlasCount," atlases"))}}catch(M){D.e(M)}finally{D.f()}console.log("")}}}var qr={};qr.drawPolygonPath=function(t,e,n,r,a,i){var o=r/2,s=a/2;t.beginPath&&t.beginPath(),t.moveTo(e+o*i[0],n+s*i[1]);for(var l=1;l<i.length/2;l++)t.lineTo(e+o*i[l*2],n+s*i[l*2+1]);t.closePath()};qr.drawRoundPolygonPath=function(t,e,n,r,a,i,o){o.forEach(function(s){return ih(t,s)}),t.closePath()};qr.drawRoundRectanglePath=function(t,e,n,r,a,i){var o=r/2,s=a/2,l=i==="auto"?la(r,a):Math.min(i,s,o);t.beginPath&&t.beginPath(),t.moveTo(e,n-s),t.arcTo(e+o,n-s,e+o,n,l),t.arcTo(e+o,n+s,e,n+s,l),t.arcTo(e-o,n+s,e-o,n,l),t.arcTo(e-o,n-s,e,n-s,l),t.lineTo(e,n-s),t.closePath()};qr.drawBottomRoundRectanglePath=function(t,e,n,r,a,i){var o=r/2,s=a/2,l=i==="auto"?la(r,a):i;t.beginPath&&t.beginPath(),t.moveTo(e,n-s),t.lineTo(e+o,n-s),t.lineTo(e+o,n),t.arcTo(e+o,n+s,e,n+s,l),t.arcTo(e-o,n+s,e-o,n,l),t.lineTo(e-o,n-s),t.lineTo(e,n-s),t.closePath()};qr.drawCutRectanglePath=function(t,e,n,r,a,i,o){var s=r/2,l=a/2,c=o==="auto"?kl():o;t.beginPath&&t.beginPath(),t.moveTo(e-s+c,n-l),t.lineTo(e+s-c,n-l),t.lineTo(e+s,n-l+c),t.lineTo(e+s,n+l-c),t.lineTo(e+s-c,n+l),t.lineTo(e-s+c,n+l),t.lineTo(e-s,n+l-c),t.lineTo(e-s,n-l+c),t.closePath()};qr.drawBarrelPath=function(t,e,n,r,a){var i=r/2,o=a/2,s=e-i,l=e+i,c=n-o,u=n+o,d=ll(r,a),f=d.widthOffset,h=d.heightOffset,p=d.ctrlPtOffsetPct*f;t.beginPath&&t.beginPath(),t.moveTo(s,c+h),t.lineTo(s,u-h),t.quadraticCurveTo(s+p,u,s+f,u),t.lineTo(l-f,u),t.quadraticCurveTo(l-p,u,l,u-h),t.lineTo(l,c+h),t.quadraticCurveTo(l-p,c,l-f,c),t.lineTo(s+f,c),t.quadraticCurveTo(s+p,c,s,c+h),t.closePath()};var Md=Math.sin(0),Rd=Math.cos(0),yl={},Xl={},Ch=Math.PI/40;for(na=0*Math.PI;na<2*Math.PI;na+=Ch)yl[na]=Math.sin(na),Xl[na]=Math.cos(na);var na;qr.drawEllipsePath=function(t,e,n,r,a){if(t.beginPath&&t.beginPath(),t.ellipse)t.ellipse(e,n,r/2,a/2,0,0,2*Math.PI);else for(var i,o,s=r/2,l=a/2,c=0*Math.PI;c<2*Math.PI;c+=Ch)i=e-s*yl[c]*Md+s*Xl[c]*Rd,o=n+l*Xl[c]*Md+l*yl[c]*Rd,c===0?t.moveTo(i,o):t.lineTo(i,o);t.closePath()};var lo={};lo.createBuffer=function(t,e){var n=document.createElement("canvas");return n.width=t,n.height=e,[n,n.getContext("2d")]};lo.bufferCanvasImage=function(t){var e=this.cy,n=e.mutableElements(),r=n.boundingBox(),a=this.findContainerClientCoords(),i=t.full?Math.ceil(r.w):a[2],o=t.full?Math.ceil(r.h):a[3],s=Se(t.maxWidth)||Se(t.maxHeight),l=this.getPixelRatio(),c=1;if(t.scale!==void 0)i*=t.scale,o*=t.scale,c=t.scale;else if(s){var u=1/0,d=1/0;Se(t.maxWidth)&&(u=c*t.maxWidth/i),Se(t.maxHeight)&&(d=c*t.maxHeight/o),c=Math.min(u,d),i*=c,o*=c}s||(i*=l,o*=l,c*=l);var f=document.createElement("canvas");f.width=i,f.height=o,f.style.width=i+"px",f.style.height=o+"px";var h=f.getContext("2d");if(i>0&&o>0){h.clearRect(0,0,i,o),h.globalCompositeOperation="source-over";var p=this.getCachedZSortedEles();if(t.full)h.translate(-r.x1*c,-r.y1*c),h.scale(c,c),this.drawElements(h,p),h.scale(1/c,1/c),h.translate(r.x1*c,r.y1*c);else{var m=e.pan(),_={x:m.x*c,y:m.y*c};c*=e.zoom(),h.translate(_.x,_.y),h.scale(c,c),this.drawElements(h,p),h.scale(1/c,1/c),h.translate(-_.x,-_.y)}t.bg&&(h.globalCompositeOperation="destination-over",h.fillStyle=t.bg,h.rect(0,0,i,o),h.fill())}return f};function Iy(t,e){for(var n=atob(t),r=new ArrayBuffer(n.length),a=new Uint8Array(r),i=0;i<n.length;i++)a[i]=n.charCodeAt(i);return new Blob([r],{type:e})}function Id(t){var e=t.indexOf(",");return t.substr(e+1)}function Eh(t,e,n){var r=function(){return e.toDataURL(n,t.quality)};switch(t.output){case"blob-promise":return new oi(function(a,i){try{e.toBlob(function(o){o!=null?a(o):i(new Error("`canvas.toBlob()` sent a null value in its callback"))},n,t.quality)}catch(o){i(o)}});case"blob":return Iy(Id(r()),n);case"base64":return Id(r());case"base64uri":default:return r()}}lo.png=function(t){return Eh(t,this.bufferCanvasImage(t),"image/png")};lo.jpg=function(t){return Eh(t,this.bufferCanvasImage(t),"image/jpeg")};var wh={};wh.nodeShapeImpl=function(t,e,n,r,a,i,o,s){switch(t){case"ellipse":return this.drawEllipsePath(e,n,r,a,i);case"polygon":return this.drawPolygonPath(e,n,r,a,i,o);case"round-polygon":return this.drawRoundPolygonPath(e,n,r,a,i,o,s);case"roundrectangle":case"round-rectangle":return this.drawRoundRectanglePath(e,n,r,a,i,s);case"cutrectangle":case"cut-rectangle":return this.drawCutRectanglePath(e,n,r,a,i,o,s);case"bottomroundrectangle":case"bottom-round-rectangle":return this.drawBottomRoundRectanglePath(e,n,r,a,i,s);case"barrel":return this.drawBarrelPath(e,n,r,a,i)}};var Ly=Oh,rn=Oh.prototype;rn.CANVAS_LAYERS=3;rn.SELECT_BOX=0;rn.DRAG=1;rn.NODE=2;rn.WEBGL=3;rn.CANVAS_TYPES=["2d","2d","2d","webgl2"];rn.BUFFER_COUNT=3;rn.TEXTURE_BUFFER=0;rn.MOTIONBLUR_BUFFER_NODE=1;rn.MOTIONBLUR_BUFFER_DRAG=2;function Oh(t){var e=this,n=e.cy.window(),r=n.document;t.webgl&&(rn.CANVAS_LAYERS=e.CANVAS_LAYERS=4,console.log("webgl rendering enabled")),e.data={canvases:new Array(rn.CANVAS_LAYERS),contexts:new Array(rn.CANVAS_LAYERS),canvasNeedsRedraw:new Array(rn.CANVAS_LAYERS),bufferCanvases:new Array(rn.BUFFER_COUNT),bufferContexts:new Array(rn.CANVAS_LAYERS)};var a="-webkit-tap-highlight-color",i="rgba(0,0,0,0)";e.data.canvasContainer=r.createElement("div");var o=e.data.canvasContainer.style;e.data.canvasContainer.style[a]=i,o.position="relative",o.zIndex="0",o.overflow="hidden";var s=t.cy.container();s.appendChild(e.data.canvasContainer),s.style[a]=i;var l={"-webkit-user-select":"none","-moz-user-select":"-moz-none","user-select":"none","-webkit-tap-highlight-color":"rgba(0,0,0,0)","outline-style":"none"};i1()&&(l["-ms-touch-action"]="none",l["touch-action"]="none");for(var c=0;c<rn.CANVAS_LAYERS;c++){var u=e.data.canvases[c]=r.createElement("canvas"),d=rn.CANVAS_TYPES[c];e.data.contexts[c]=u.getContext(d),e.data.contexts[c]||En("Could not create canvas of type "+d),Object.keys(l).forEach(function(F){u.style[F]=l[F]}),u.style.position="absolute",u.setAttribute("data-id","layer"+c),u.style.zIndex=String(rn.CANVAS_LAYERS-c),e.data.canvasContainer.appendChild(u),e.data.canvasNeedsRedraw[c]=!1}e.data.topCanvas=e.data.canvases[0],e.data.canvases[rn.NODE].setAttribute("data-id","layer"+rn.NODE+"-node"),e.data.canvases[rn.SELECT_BOX].setAttribute("data-id","layer"+rn.SELECT_BOX+"-selectbox"),e.data.canvases[rn.DRAG].setAttribute("data-id","layer"+rn.DRAG+"-drag"),e.data.canvases[rn.WEBGL]&&e.data.canvases[rn.WEBGL].setAttribute("data-id","layer"+rn.WEBGL+"-webgl");for(var c=0;c<rn.BUFFER_COUNT;c++)e.data.bufferCanvases[c]=r.createElement("canvas"),e.data.bufferContexts[c]=e.data.bufferCanvases[c].getContext("2d"),e.data.bufferCanvases[c].style.position="absolute",e.data.bufferCanvases[c].setAttribute("data-id","buffer"+c),e.data.bufferCanvases[c].style.zIndex=String(-c-1),e.data.bufferCanvases[c].style.visibility="hidden";e.pathsEnabled=!0;var f=At(),h=function(W){return{x:(W.x1+W.x2)/2,y:(W.y1+W.y2)/2}},p=function(W){return{x:-W.w/2,y:-W.h/2}},m=function(W){var L=W[0]._private,z=L.oldBackgroundTimestamp===L.backgroundTimestamp;return!z},_=function(W){return W[0]._private.nodeKey},g=function(W){return W[0]._private.labelStyleKey},P=function(W){return W[0]._private.sourceLabelStyleKey},y=function(W){return W[0]._private.targetLabelStyleKey},C=function(W,L,z,ne,H){return e.drawElement(W,L,z,!1,!1,H)},E=function(W,L,z,ne,H){return e.drawElementText(W,L,z,ne,"main",H)},T=function(W,L,z,ne,H){return e.drawElementText(W,L,z,ne,"source",H)},B=function(W,L,z,ne,H){return e.drawElementText(W,L,z,ne,"target",H)},D=function(W){return W.boundingBox(),W[0]._private.bodyBounds},k=function(W){return W.boundingBox(),W[0]._private.labelBounds.main||f},$=function(W){return W.boundingBox(),W[0]._private.labelBounds.source||f},M=function(W){return W.boundingBox(),W[0]._private.labelBounds.target||f},b=function(W,L){return L},x=function(W){return h(D(W))},K=function(W,L,z){var ne=W?W+"-":"";return{x:L.x+z.pstyle(ne+"text-margin-x").pfValue,y:L.y+z.pstyle(ne+"text-margin-y").pfValue}},X=function(W,L,z){var ne=W[0]._private.rscratch;return{x:ne[L],y:ne[z]}},v=function(W){return K("",X(W,"labelX","labelY"),W)},A=function(W){return K("source",X(W,"sourceLabelX","sourceLabelY"),W)},w=function(W){return K("target",X(W,"targetLabelX","targetLabelY"),W)},O=function(W){return p(D(W))},N=function(W){return p($(W))},S=function(W){return p(M(W))},I=function(W){var L=k(W),z=p(k(W));if(W.isNode()){switch(W.pstyle("text-halign").value){case"left":z.x=-L.w-(L.leftPad||0);break;case"right":z.x=-(L.rightPad||0);break}switch(W.pstyle("text-valign").value){case"top":z.y=-L.h-(L.topPad||0);break;case"bottom":z.y=-(L.botPad||0);break}}return z},q=e.data.eleTxrCache=new Mi(e,{getKey:_,doesEleInvalidateKey:m,drawElement:C,getBoundingBox:D,getRotationPoint:x,getRotationOffset:O,allowEdgeTxrCaching:!1,allowParentTxrCaching:!1}),Y=e.data.lblTxrCache=new Mi(e,{getKey:g,drawElement:E,getBoundingBox:k,getRotationPoint:v,getRotationOffset:I,isVisible:b}),ee=e.data.slbTxrCache=new Mi(e,{getKey:P,drawElement:T,getBoundingBox:$,getRotationPoint:A,getRotationOffset:N,isVisible:b}),Q=e.data.tlbTxrCache=new Mi(e,{getKey:y,drawElement:B,getBoundingBox:M,getRotationPoint:w,getRotationOffset:S,isVisible:b}),U=e.data.lyrTxrCache=new mh(e);e.onUpdateEleCalcs(function(W,L){q.invalidateElements(L),Y.invalidateElements(L),ee.invalidateElements(L),Q.invalidateElements(L),U.invalidateElements(L);for(var z=0;z<L.length;z++){var ne=L[z]._private;ne.oldBackgroundTimestamp=ne.backgroundTimestamp}});var J=function(W){for(var L=0;L<W.length;L++)U.enqueueElementRefinement(W[L].ele)};q.onDequeue(J),Y.onDequeue(J),ee.onDequeue(J),Q.onDequeue(J),t.webgl&&e.initWebgl(t,{getStyleKey:_,getLabelKey:g,drawElement:C,drawLabel:E,getElementBox:D,getLabelBox:k,getElementRotationPoint:x,getElementRotationOffset:O,getLabelRotationPoint:v,getLabelRotationOffset:I})}rn.redrawHint=function(t,e){var n=this;switch(t){case"eles":n.data.canvasNeedsRedraw[rn.NODE]=e;break;case"drag":n.data.canvasNeedsRedraw[rn.DRAG]=e;break;case"select":n.data.canvasNeedsRedraw[rn.SELECT_BOX]=e;break;case"gc":n.data.gc=!0;break}};var Uy=typeof Path2D<"u";rn.path2dEnabled=function(t){if(t===void 0)return this.pathsEnabled;this.pathsEnabled=!!t};rn.usePaths=function(){return Uy&&this.pathsEnabled};rn.setImgSmoothing=function(t,e){t.imageSmoothingEnabled!=null?t.imageSmoothingEnabled=e:(t.webkitImageSmoothingEnabled=e,t.mozImageSmoothingEnabled=e,t.msImageSmoothingEnabled=e)};rn.getImgSmoothing=function(t){return t.imageSmoothingEnabled!=null?t.imageSmoothingEnabled:t.webkitImageSmoothingEnabled||t.mozImageSmoothingEnabled||t.msImageSmoothingEnabled};rn.makeOffscreenCanvas=function(t,e){var n;if((typeof OffscreenCanvas>"u"?"undefined":Un(OffscreenCanvas))!=="undefined")n=new OffscreenCanvas(t,e);else{var r=this.cy.window(),a=r.document;n=a.createElement("canvas"),n.width=t,n.height=e}return n};[gh,or,_r,zl,pa,pi,_t,Kh,qr,lo,wh].forEach(function(t){Ve(rn,t)});var Fy=[{name:"null",impl:th},{name:"base",impl:fh},{name:"canvas",impl:Ly}],jy=[{type:"layout",extensions:Cb},{type:"renderer",extensions:Fy}],Th={},Bh={};function kh(t,e,n){var r=n,a=function(D){pn("Can not register `"+e+"` for `"+t+"` since `"+D+"` already exists in the prototype and can not be overridden")};if(t==="core"){if(Qi.prototype[e])return a(e);Qi.prototype[e]=n}else if(t==="collection"){if(at.prototype[e])return a(e);at.prototype[e]=n}else if(t==="layout"){for(var i=function(D){this.options=D,n.call(this,D),un(this._private)||(this._private={}),this._private.cy=D.cy,this._private.listeners=[],this.createEmitter()},o=i.prototype=Object.create(n.prototype),s=[],l=0;l<s.length;l++){var c=s[l];o[c]=o[c]||function(){return this}}o.start&&!o.run?o.run=function(){return this.start(),this}:!o.start&&o.run&&(o.start=function(){return this.run(),this});var u=n.prototype.stop;o.stop=function(){var B=this.options;if(B&&B.animate){var D=this.animations;if(D)for(var k=0;k<D.length;k++)D[k].stop()}return u?u.call(this):this.emit("layoutstop"),this},o.destroy||(o.destroy=function(){return this}),o.cy=function(){return this._private.cy};var d=function(D){return D._private.cy},f={addEventFields:function(D,k){k.layout=D,k.cy=d(D),k.target=D},bubble:function(){return!0},parent:function(D){return d(D)}};Ve(o,{createEmitter:function(){return this._private.emitter=new oc(f,this),this},emitter:function(){return this._private.emitter},on:function(D,k){return this.emitter().on(D,k),this},one:function(D,k){return this.emitter().one(D,k),this},once:function(D,k){return this.emitter().one(D,k),this},removeListener:function(D,k){return this.emitter().removeListener(D,k),this},removeAllListeners:function(){return this.emitter().removeAllListeners(),this},emit:function(D,k){return this.emitter().emit(D,k),this}}),hn.eventAliasesOn(o),r=i}else if(t==="renderer"&&e!=="null"&&e!=="base"){var h=Dh("renderer","base"),p=h.prototype,m=n,_=n.prototype,g=function(){h.apply(this,arguments),m.apply(this,arguments)},P=g.prototype;for(var y in p){var C=p[y],E=_[y]!=null;if(E)return a(y);P[y]=C}for(var T in _)P[T]=_[T];p.clientFunctions.forEach(function(B){P[B]=P[B]||function(){En("Renderer does not implement `renderer."+B+"()` on its prototype")}}),r=g}else if(t==="__proto__"||t==="constructor"||t==="prototype")return En(t+" is an illegal type to be registered, possibly lead to prototype pollutions");return Hd({map:Th,keys:[t,e],value:r})}function Dh(t,e){return Gd({map:Th,keys:[t,e]})}function Yy(t,e,n,r,a){return Hd({map:Bh,keys:[t,e,n,r],value:a})}function zy(t,e,n,r){return Gd({map:Bh,keys:[t,e,n,r]})}var Kl=function(){if(arguments.length===2)return Dh.apply(null,arguments);if(arguments.length===3)return kh.apply(null,arguments);if(arguments.length===4)return zy.apply(null,arguments);if(arguments.length===5)return Yy.apply(null,arguments);En("Invalid extension access syntax")};Qi.prototype.extension=Kl;jy.forEach(function(t){t.extensions.forEach(function(e){kh(t.type,e.name,e.impl)})});var $h=function t(){if(!(this instanceof t))return new t;this.length=0},fa=$h.prototype;fa.instanceString=function(){return"stylesheet"};fa.selector=function(t){var e=this.length++;return this[e]={selector:t,properties:[]},this};fa.css=function(t,e){var n=this.length-1;if(ze(t))this[n].properties.push({name:t,value:e});else if(un(t))for(var r=t,a=Object.keys(r),i=0;i<a.length;i++){var o=a[i],s=r[o];if(s!=null){var l=ut.properties[o]||ut.properties[Js(o)];if(l!=null){var c=l.name,u=s;this[n].properties.push({name:c,value:u})}}}return this};fa.style=fa.css;fa.generateStyle=function(t){var e=new ut(t);return this.appendToStyle(e)};fa.appendToStyle=function(t){for(var e=0;e<this.length;e++){var n=this[e],r=n.selector,a=n.properties;t.selector(r);for(var i=0;i<a.length;i++){var o=a[i];t.css(o.name,o.value)}}return t};var Vy="3.31.0",Nt=function(e){if(e===void 0&&(e={}),un(e))return new Qi(e);if(ze(e))return Kl.apply(Kl,arguments)};Nt.use=function(t){var e=Array.prototype.slice.call(arguments,1);return e.unshift(Nt),t.apply(null,e),this};Nt.warnings=function(t){return af(t)};Nt.version=Vy;Nt.stylesheet=Nt.Stylesheet=$h;var Xp=Ki(Sh());var ho=Math.min,Hr=Math.max,po=Math.round;var zt=t=>({x:t,y:t}),qy={left:"right",right:"left",bottom:"top",top:"bottom"},Hy={start:"end",end:"start"};function Gl(t,e,n){return Hr(t,ho(e,n))}function mi(t,e){return typeof t=="function"?t(e):t}function Gr(t){return t.split("-")[0]}function mc(t){return t.split("-")[1]}function gc(t){return t==="x"?"y":"x"}function Jl(t){return t==="y"?"height":"width"}function ma(t){return["top","bottom"].includes(Gr(t))?"y":"x"}function Zl(t){return gc(ma(t))}function Wh(t,e,n){n===void 0&&(n=!1);let r=mc(t),a=Zl(t),i=Jl(a),o=a==="x"?r===(n?"end":"start")?"right":"left":r==="start"?"bottom":"top";return e.reference[i]>e.floating[i]&&(o=fo(o)),[o,fo(o)]}function Nh(t){let e=fo(t);return[pc(t),e,pc(e)]}function pc(t){return t.replace(/start|end/g,e=>Hy[e])}function Gy(t,e,n){let r=["left","right"],a=["right","left"],i=["top","bottom"],o=["bottom","top"];switch(t){case"top":case"bottom":return n?e?a:r:e?r:a;case"left":case"right":return e?i:o;default:return[]}}function Mh(t,e,n,r){let a=mc(t),i=Gy(Gr(t),n==="start",r);return a&&(i=i.map(o=>o+"-"+a),e&&(i=i.concat(i.map(pc)))),i}function fo(t){return t.replace(/left|right|bottom|top/g,e=>qy[e])}function Jy(t){return Sn({top:0,right:0,bottom:0,left:0},t)}function Rh(t){return typeof t!="number"?Jy(t):{top:t,right:t,bottom:t,left:t}}function ga(t){let{x:e,y:n,width:r,height:a}=t;return{width:r,height:a,top:n,left:e,right:e+r,bottom:n+a,x:e,y:n}}function Ih(t,e,n){let{reference:r,floating:a}=t,i=ma(e),o=Zl(e),s=Jl(o),l=Gr(e),c=i==="y",u=r.x+r.width/2-a.width/2,d=r.y+r.height/2-a.height/2,f=r[s]/2-a[s]/2,h;switch(l){case"top":h={x:u,y:r.y-a.height};break;case"bottom":h={x:u,y:r.y+r.height};break;case"right":h={x:r.x+r.width,y:d};break;case"left":h={x:r.x-a.width,y:d};break;default:h={x:r.x,y:r.y}}switch(mc(e)){case"start":h[o]-=f*(n&&c?-1:1);break;case"end":h[o]+=f*(n&&c?-1:1);break}return h}var Lh=(t,e,n)=>Xn(void 0,null,function*(){let{placement:r="bottom",strategy:a="absolute",middleware:i=[],platform:o}=n,s=i.filter(Boolean),l=yield o.isRTL==null?void 0:o.isRTL(e),c=yield o.getElementRects({reference:t,floating:e,strategy:a}),{x:u,y:d}=Ih(c,r,l),f=r,h={},p=0;for(let m=0;m<s.length;m++){let{name:_,fn:g}=s[m],{x:P,y,data:C,reset:E}=yield g({x:u,y:d,initialPlacement:r,placement:f,strategy:a,middlewareData:h,rects:c,platform:o,elements:{reference:t,floating:e}});u=P??u,d=y??d,h=Gt(Sn({},h),{[_]:Sn(Sn({},h[_]),C)}),E&&p<=50&&(p++,typeof E=="object"&&(E.placement&&(f=E.placement),E.rects&&(c=E.rects===!0?yield o.getElementRects({reference:t,floating:e,strategy:a}):E.rects),{x:u,y:d}=Ih(c,f,l)),m=-1)}return{x:u,y:d,placement:f,strategy:a,middlewareData:h}});function Ql(t,e){return Xn(this,null,function*(){var n;e===void 0&&(e={});let{x:r,y:a,platform:i,rects:o,elements:s,strategy:l}=t,{boundary:c="clippingAncestors",rootBoundary:u="viewport",elementContext:d="floating",altBoundary:f=!1,padding:h=0}=mi(e,t),p=Rh(h),_=s[f?d==="floating"?"reference":"floating":d],g=ga(yield i.getClippingRect({element:(n=yield i.isElement==null?void 0:i.isElement(_))==null||n?_:_.contextElement||(yield i.getDocumentElement==null?void 0:i.getDocumentElement(s.floating)),boundary:c,rootBoundary:u,strategy:l})),P=d==="floating"?{x:r,y:a,width:o.floating.width,height:o.floating.height}:o.reference,y=yield i.getOffsetParent==null?void 0:i.getOffsetParent(s.floating),C=(yield i.isElement==null?void 0:i.isElement(y))?(yield i.getScale==null?void 0:i.getScale(y))||{x:1,y:1}:{x:1,y:1},E=ga(i.convertOffsetParentRelativeRectToViewportRelativeRect?yield i.convertOffsetParentRelativeRectToViewportRelativeRect({elements:s,rect:P,offsetParent:y,strategy:l}):P);return{top:(g.top-E.top+p.top)/C.y,bottom:(E.bottom-g.bottom+p.bottom)/C.y,left:(g.left-E.left+p.left)/C.x,right:(E.right-g.right+p.right)/C.x}})}var Uh=function(t){return t===void 0&&(t={}),{name:"flip",options:t,fn(n){return Xn(this,null,function*(){var r,a;let{placement:i,middlewareData:o,rects:s,initialPlacement:l,platform:c,elements:u}=n,X=mi(t,n),{mainAxis:d=!0,crossAxis:f=!0,fallbackPlacements:h,fallbackStrategy:p="bestFit",fallbackAxisSideDirection:m="none",flipAlignment:_=!0}=X,g=Bc(X,["mainAxis","crossAxis","fallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment"]);if((r=o.arrow)!=null&&r.alignmentOffset)return{};let P=Gr(i),y=ma(l),C=Gr(l)===l,E=yield c.isRTL==null?void 0:c.isRTL(u.floating),T=h||(C||!_?[fo(l)]:Nh(l)),B=m!=="none";!h&&B&&T.push(...Mh(l,_,m,E));let D=[l,...T],k=yield Ql(n,g),$=[],M=((a=o.flip)==null?void 0:a.overflows)||[];if(d&&$.push(k[P]),f){let v=Wh(i,s,E);$.push(k[v[0]],k[v[1]])}if(M=[...M,{placement:i,overflows:$}],!$.every(v=>v<=0)){var b,x;let v=(((b=o.flip)==null?void 0:b.index)||0)+1,A=D[v];if(A)return{data:{index:v,overflows:M},reset:{placement:A}};let w=(x=M.filter(O=>O.overflows[0]<=0).sort((O,N)=>O.overflows[1]-N.overflows[1])[0])==null?void 0:x.placement;if(!w)switch(p){case"bestFit":{var K;let O=(K=M.filter(N=>{if(B){let S=ma(N.placement);return S===y||S==="y"}return!0}).map(N=>[N.placement,N.overflows.filter(S=>S>0).reduce((S,I)=>S+I,0)]).sort((N,S)=>N[1]-S[1])[0])==null?void 0:K[0];O&&(w=O);break}case"initialPlacement":w=l;break}if(i!==w)return{reset:{placement:w}}}return{}})}}};var Fh=function(t){return t===void 0&&(t={}),{name:"shift",options:t,fn(n){return Xn(this,null,function*(){let{x:r,y:a,placement:i}=n,g=mi(t,n),{mainAxis:o=!0,crossAxis:s=!1,limiter:l={fn:P=>{let{x:y,y:C}=P;return{x:y,y:C}}}}=g,c=Bc(g,["mainAxis","crossAxis","limiter"]),u={x:r,y:a},d=yield Ql(n,c),f=ma(Gr(i)),h=gc(f),p=u[h],m=u[f];if(o){let P=h==="y"?"top":"left",y=h==="y"?"bottom":"right",C=p+d[P],E=p-d[y];p=Gl(C,p,E)}if(s){let P=f==="y"?"top":"left",y=f==="y"?"bottom":"right",C=m+d[P],E=m-d[y];m=Gl(C,m,E)}let _=l.fn(Gt(Sn({},n),{[h]:p,[f]:m}));return Gt(Sn({},_),{data:{x:_.x-r,y:_.y-a,enabled:{[h]:o,[f]:s}}})})}}},jh=function(t){return t===void 0&&(t={}),{options:t,fn(e){let{x:n,y:r,placement:a,rects:i,middlewareData:o}=e,{offset:s=0,mainAxis:l=!0,crossAxis:c=!0}=mi(t,e),u={x:n,y:r},d=ma(a),f=gc(d),h=u[f],p=u[d],m=mi(s,e),_=typeof m=="number"?{mainAxis:m,crossAxis:0}:Sn({mainAxis:0,crossAxis:0},m);if(l){let y=f==="y"?"height":"width",C=i.reference[f]-i.floating[y]+_.mainAxis,E=i.reference[f]+i.reference[y]-_.mainAxis;h<C?h=C:h>E&&(h=E)}if(c){var g,P;let y=f==="y"?"width":"height",C=["top","left"].includes(Gr(a)),E=i.reference[d]-i.floating[y]+(C&&((g=o.offset)==null?void 0:g[d])||0)+(C?0:_.crossAxis),T=i.reference[d]+i.reference[y]+(C?0:((P=o.offset)==null?void 0:P[d])||0)-(C?_.crossAxis:0);p<E?p=E:p>T&&(p=T)}return{[f]:h,[d]:p}}}};function Pc(){return typeof window<"u"}function _a(t){return zh(t)?(t.nodeName||"").toLowerCase():"#document"}function Ct(t){var e;return(t==null||(e=t.ownerDocument)==null?void 0:e.defaultView)||window}function sr(t){var e;return(e=(zh(t)?t.ownerDocument:t.document)||window.document)==null?void 0:e.documentElement}function zh(t){return Pc()?t instanceof Node||t instanceof Ct(t).Node:!1}function Mt(t){return Pc()?t instanceof Element||t instanceof Ct(t).Element:!1}function Vt(t){return Pc()?t instanceof HTMLElement||t instanceof Ct(t).HTMLElement:!1}function Yh(t){return!Pc()||typeof ShadowRoot>"u"?!1:t instanceof ShadowRoot||t instanceof Ct(t).ShadowRoot}function gi(t){let{overflow:e,overflowX:n,overflowY:r,display:a}=Rt(t);return/auto|scroll|overlay|hidden|clip/.test(e+r+n)&&!["inline","contents"].includes(a)}function Vh(t){return["table","td","th"].includes(_a(t))}function mo(t){return[":popover-open",":modal"].some(e=>{try{return t.matches(e)}catch{return!1}})}function vc(t){let e=bc(),n=Mt(t)?Rt(t):t;return["transform","translate","scale","rotate","perspective"].some(r=>n[r]?n[r]!=="none":!1)||(n.containerType?n.containerType!=="normal":!1)||!e&&(n.backdropFilter?n.backdropFilter!=="none":!1)||!e&&(n.filter?n.filter!=="none":!1)||["transform","translate","scale","rotate","perspective","filter"].some(r=>(n.willChange||"").includes(r))||["paint","layout","strict","content"].some(r=>(n.contain||"").includes(r))}function qh(t){let e=Pr(t);for(;Vt(e)&&!Pa(e);){if(vc(e))return e;if(mo(e))return null;e=Pr(e)}return null}function bc(){return typeof CSS>"u"||!CSS.supports?!1:CSS.supports("-webkit-backdrop-filter","none")}function Pa(t){return["html","body","#document"].includes(_a(t))}function Rt(t){return Ct(t).getComputedStyle(t)}function go(t){return Mt(t)?{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}:{scrollLeft:t.scrollX,scrollTop:t.scrollY}}function Pr(t){if(_a(t)==="html")return t;let e=t.assignedSlot||t.parentNode||Yh(t)&&t.host||sr(t);return Yh(e)?e.host:e}function Hh(t){let e=Pr(t);return Pa(e)?t.ownerDocument?t.ownerDocument.body:t.body:Vt(e)&&gi(e)?e:Hh(e)}function _c(t,e,n){var r;e===void 0&&(e=[]),n===void 0&&(n=!0);let a=Hh(t),i=a===((r=t.ownerDocument)==null?void 0:r.body),o=Ct(a);if(i){let s=yc(o);return e.concat(o,o.visualViewport||[],gi(a)?a:[],s&&n?_c(s):[])}return e.concat(a,_c(a,[],n))}function yc(t){return t.parent&&Object.getPrototypeOf(t.parent)?t.frameElement:null}function Zh(t){let e=Rt(t),n=parseFloat(e.width)||0,r=parseFloat(e.height)||0,a=Vt(t),i=a?t.offsetWidth:n,o=a?t.offsetHeight:r,s=po(n)!==i||po(r)!==o;return s&&(n=i,r=o),{width:n,height:r,$:s}}function Qh(t){return Mt(t)?t:t.contextElement}function _i(t){let e=Qh(t);if(!Vt(e))return zt(1);let n=e.getBoundingClientRect(),{width:r,height:a,$:i}=Zh(e),o=(i?po(n.width):n.width)/r,s=(i?po(n.height):n.height)/a;return(!o||!Number.isFinite(o))&&(o=1),(!s||!Number.isFinite(s))&&(s=1),{x:o,y:s}}var Zy=zt(0);function ep(t){let e=Ct(t);return!bc()||!e.visualViewport?Zy:{x:e.visualViewport.offsetLeft,y:e.visualViewport.offsetTop}}function Qy(t,e,n){return e===void 0&&(e=!1),!n||e&&n!==Ct(t)?!1:e}function _o(t,e,n,r){e===void 0&&(e=!1),n===void 0&&(n=!1);let a=t.getBoundingClientRect(),i=Qh(t),o=zt(1);e&&(r?Mt(r)&&(o=_i(r)):o=_i(t));let s=Qy(i,n,r)?ep(i):zt(0),l=(a.left+s.x)/o.x,c=(a.top+s.y)/o.y,u=a.width/o.x,d=a.height/o.y;if(i){let f=Ct(i),h=r&&Mt(r)?Ct(r):r,p=f,m=yc(p);for(;m&&r&&h!==p;){let _=_i(m),g=m.getBoundingClientRect(),P=Rt(m),y=g.left+(m.clientLeft+parseFloat(P.paddingLeft))*_.x,C=g.top+(m.clientTop+parseFloat(P.paddingTop))*_.y;l*=_.x,c*=_.y,u*=_.x,d*=_.y,l+=y,c+=C,p=Ct(m),m=yc(p)}}return ga({width:u,height:d,x:l,y:c})}function n0(t,e){let n=go(t).scrollLeft;return e?e.left+n:_o(sr(t)).left+n}function np(t,e,n){n===void 0&&(n=!1);let r=t.getBoundingClientRect(),a=r.left+e.scrollLeft-(n?0:n0(t,r)),i=r.top+e.scrollTop;return{x:a,y:i}}function eX(t){let{elements:e,rect:n,offsetParent:r,strategy:a}=t,i=a==="fixed",o=sr(r),s=e?mo(e.floating):!1;if(r===o||s&&i)return n;let l={scrollLeft:0,scrollTop:0},c=zt(1),u=zt(0),d=Vt(r);if((d||!d&&!i)&&((_a(r)!=="body"||gi(o))&&(l=go(r)),Vt(r))){let h=_o(r);c=_i(r),u.x=h.x+r.clientLeft,u.y=h.y+r.clientTop}let f=o&&!d&&!i?np(o,l,!0):zt(0);return{width:n.width*c.x,height:n.height*c.y,x:n.x*c.x-l.scrollLeft*c.x+u.x+f.x,y:n.y*c.y-l.scrollTop*c.y+u.y+f.y}}function nX(t){return Array.from(t.getClientRects())}function tX(t){let e=sr(t),n=go(t),r=t.ownerDocument.body,a=Hr(e.scrollWidth,e.clientWidth,r.scrollWidth,r.clientWidth),i=Hr(e.scrollHeight,e.clientHeight,r.scrollHeight,r.clientHeight),o=-n.scrollLeft+n0(t),s=-n.scrollTop;return Rt(r).direction==="rtl"&&(o+=Hr(e.clientWidth,r.clientWidth)-a),{width:a,height:i,x:o,y:s}}function rX(t,e){let n=Ct(t),r=sr(t),a=n.visualViewport,i=r.clientWidth,o=r.clientHeight,s=0,l=0;if(a){i=a.width,o=a.height;let c=bc();(!c||c&&e==="fixed")&&(s=a.offsetLeft,l=a.offsetTop)}return{width:i,height:o,x:s,y:l}}function aX(t,e){let n=_o(t,!0,e==="fixed"),r=n.top+t.clientTop,a=n.left+t.clientLeft,i=Vt(t)?_i(t):zt(1),o=t.clientWidth*i.x,s=t.clientHeight*i.y,l=a*i.x,c=r*i.y;return{width:o,height:s,x:l,y:c}}function Gh(t,e,n){let r;if(e==="viewport")r=rX(t,n);else if(e==="document")r=tX(sr(t));else if(Mt(e))r=aX(e,n);else{let a=ep(t);r={x:e.x-a.x,y:e.y-a.y,width:e.width,height:e.height}}return ga(r)}function tp(t,e){let n=Pr(t);return n===e||!Mt(n)||Pa(n)?!1:Rt(n).position==="fixed"||tp(n,e)}function iX(t,e){let n=e.get(t);if(n)return n;let r=_c(t,[],!1).filter(s=>Mt(s)&&_a(s)!=="body"),a=null,i=Rt(t).position==="fixed",o=i?Pr(t):t;for(;Mt(o)&&!Pa(o);){let s=Rt(o),l=vc(o);!l&&s.position==="fixed"&&(a=null),(i?!l&&!a:!l&&s.position==="static"&&!!a&&["absolute","fixed"].includes(a.position)||gi(o)&&!l&&tp(t,o))?r=r.filter(u=>u!==o):a=s,o=Pr(o)}return e.set(t,r),r}function oX(t){let{element:e,boundary:n,rootBoundary:r,strategy:a}=t,o=[...n==="clippingAncestors"?mo(e)?[]:iX(e,this._c):[].concat(n),r],s=o[0],l=o.reduce((c,u)=>{let d=Gh(e,u,a);return c.top=Hr(d.top,c.top),c.right=ho(d.right,c.right),c.bottom=ho(d.bottom,c.bottom),c.left=Hr(d.left,c.left),c},Gh(e,s,a));return{width:l.right-l.left,height:l.bottom-l.top,x:l.left,y:l.top}}function sX(t){let{width:e,height:n}=Zh(t);return{width:e,height:n}}function cX(t,e,n){let r=Vt(e),a=sr(e),i=n==="fixed",o=_o(t,!0,i,e),s={scrollLeft:0,scrollTop:0},l=zt(0);if(r||!r&&!i)if((_a(e)!=="body"||gi(a))&&(s=go(e)),r){let f=_o(e,!0,i,e);l.x=f.x+e.clientLeft,l.y=f.y+e.clientTop}else a&&(l.x=n0(a));let c=a&&!r&&!i?np(a,s):zt(0),u=o.left+s.scrollLeft-l.x-c.x,d=o.top+s.scrollTop-l.y-c.y;return{x:u,y:d,width:o.width,height:o.height}}function e0(t){return Rt(t).position==="static"}function Jh(t,e){if(!Vt(t)||Rt(t).position==="fixed")return null;if(e)return e(t);let n=t.offsetParent;return sr(t)===n&&(n=n.ownerDocument.body),n}function rp(t,e){let n=Ct(t);if(mo(t))return n;if(!Vt(t)){let a=Pr(t);for(;a&&!Pa(a);){if(Mt(a)&&!e0(a))return a;a=Pr(a)}return n}let r=Jh(t,e);for(;r&&Vh(r)&&e0(r);)r=Jh(r,e);return r&&Pa(r)&&e0(r)&&!vc(r)?n:r||qh(t)||n}var lX=function(t){return Xn(this,null,function*(){let e=this.getOffsetParent||rp,n=this.getDimensions,r=yield n(t.floating);return{reference:cX(t.reference,yield e(t.floating),t.strategy),floating:{x:0,y:0,width:r.width,height:r.height}}})};function uX(t){return Rt(t).direction==="rtl"}var dX={convertOffsetParentRelativeRectToViewportRelativeRect:eX,getDocumentElement:sr,getClippingRect:oX,getOffsetParent:rp,getElementRects:lX,getClientRects:nX,getDimensions:sX,getScale:_i,isElement:Mt,isRTL:uX};var ap=Fh,ip=Uh;var op=jh,sp=(t,e,n)=>{let r=new Map,a=Sn({platform:dX},n),i=Gt(Sn({},a.platform),{_c:r});return Lh(t,e,Gt(Sn({},a),{platform:i}))};var dp={position:"absolute",left:"0",top:"0",userSelect:"none",outlineStyle:"none",width:"100%",height:"100%"};function Xc(t){t.stopPropagation()}function bo(t){t.addEventListener("click",Xc),t.addEventListener("mousedown",Xc),t.addEventListener("mouseup",Xc),t.addEventListener("mousemove",Xc)}var Po=class{constructor(e){this.adapter=e,this.updateOnRenderEnabled=!1,this.updateOnRenderOnceEnabled=!1,this.updateOnRenderOnce=()=>{this.updateOnRenderOnceEnabled||(this.updateOnRenderOnceEnabled=!0,this.cy.one("render",()=>{this.updateOnRenderOnceEnabled=!1,this.update()}))}}inVisibleBounds(e){return this.adapter.inVisibleBounds(e)}supportsRender(){return!1}renderInto(e){}get updateOnRender(){return this.updateOnRenderEnabled}set updateOnRender(e){this.updateOnRenderEnabled!==e&&(this.updateOnRenderEnabled=e,e?this.cy.on("render",this.update):this.cy.off("render",this.update))}get cy(){return this.adapter.cy}moveUp(){this.adapter.move(this,-1)}moveDown(){this.adapter.move(this,1)}moveBack(){this.adapter.move(this,Number.NEGATIVE_INFINITY)}moveFront(){this.adapter.move(this,Number.POSITIVE_INFINITY)}insertBefore(e,n){return this.adapter.insert("before",this,e,n)}insertAfter(e,n){return this.adapter.insert("after",this,e,n)}},Pi=class extends Po{constructor(e,n){super(e),this.callbacks=[],this.update=()=>{for(let r of this.callbacks)r(this.node)},this.root=n,Object.assign(this.root.style,dp)}get visible(){return this.root.style.display!=="none"}set visible(e){this.visible!==e&&(this.root.style.display=e?"":"none")}show(){this.visible=!0}hide(){this.visible=!1}callback(e){return this.callbacks.push(e),this.update(),this}resize(){}remove(){this.root.remove()}},vo="http://www.w3.org/2000/svg",t0=class extends Pi{constructor(e,n,r={}){super(e,n.createElementNS(vo,"svg")),this.type="svg",this.updateOnTransform=!1,this.root.__cy_layer=this,this.node=n.createElementNS(vo,"g"),this.node.__cy_layer=this,this.root.appendChild(this.node),r.stopClicks&&bo(this.node)}setViewport(e,n,r){this.node.setAttribute("transform",`translate(${e},${n})scale(${r})`),this.updateOnTransform&&this.update()}supportsRender(){return this.node.childElementCount===0}},r0=class extends Pi{constructor(e,n,r={}){super(e,n.createElementNS(vo,"svg")),this.type="svg-static",this.root.__cy_layer=this,this.node=n.createElementNS(vo,"g"),this.node.__cy_layer=this,this.root.appendChild(this.node),r.stopClicks&&bo(this.node)}setViewport(){}},xc=class extends Po{constructor(e,n,r={}){var a,i;super(e),this.callbacks=[],this.transform={tx:0,ty:0,zoom:1},this.update=()=>this.draw(),this.node=n.createElement("canvas"),Object.assign(this.node.style,dp),r.stopClicks&&bo(this.node),this.pixelRatio=(i=(a=r.pixelRatio)!==null&&a!==void 0?a:(window??{}).devicePixelRatio)!==null&&i!==void 0?i:1,this.ctx=this.node.getContext("2d",r),this.ctx.resetTransform()}get visible(){return this.node.style.display!=="none"}set visible(e){this.node.style.display=e?"":"none"}show(){this.visible=!0}hide(){this.visible=!1}get root(){return this.node}callback(e){return this.callbacks.push(e),this.update(),this}clear(){let e=this.ctx,n=e.getTransform();e.resetTransform(),e.clearRect(0,0,e.canvas.width,e.canvas.height),e.setTransform(n)}draw(){this.clear(),this.drawImpl(this.ctx)}drawImpl(e,n=1){e.save(),e.resetTransform(),e.scale(this.pixelRatio,this.pixelRatio),e.translate(this.transform.tx*n,this.transform.ty*n),e.scale(this.transform.zoom*n,this.transform.zoom*n);for(let r of this.callbacks)r(e,{});e.restore()}supportsRender(){return!0}renderInto(e){for(let n of this.callbacks)n(e,{forExport:!0})}resize(e,n){this.node.width=e*this.pixelRatio,this.node.height=n*this.pixelRatio,this.update()}setViewport(e,n,r){}remove(){this.node.remove()}},Ac=class extends xc{constructor(e,n,r={}){super(e,n,r),this.type="canvas",this.node.__cy_layer=this}setViewport(e,n,r){this.transform.tx=e,this.transform.ty=n,this.transform.zoom=r,this.update()}},a0=class extends xc{constructor(e,n,r={}){super(e,n,r),this.type="canvas-static",this.node.__cy_layer=this}},i0=class extends Pi{constructor(e,n,r={}){super(e,n.createElement("div")),this.type="html",this.updateOnTransform=!1,this.root.__cy_layer=this,this.node=n.createElement("div"),this.node.__cy_layer=this,this.node.style.position="absolute",this.node.style.left="0px",this.node.style.top="0px",this.root.appendChild(this.node),r.stopClicks&&bo(this.node)}setViewport(e,n,r){this.node.style.transform=`translate(${e}px,${n}px)scale(${r})`,this.updateOnTransform&&this.update()}supportsRender(){return this.node.childElementCount===0}},o0=class extends Pi{constructor(e,n,r={}){super(e,n.createElement("div")),this.type="html-static",this.node.__cy_layer=this,r.stopClicks&&bo(this.node)}get node(){return this.root}setViewport(){}},vi=class extends Po{constructor(e,n){super(e),this.update=()=>{},this.node=n}get root(){return this.node}resize(){}setViewport(){}remove(){}supportsRender(){return!0}},s0=class extends vi{constructor(e,n){super(e,n),this.type="node",this.node.__cy_layer=this}},c0=class extends vi{constructor(e,n){super(e,n),this.type="drag",this.node.__cy_layer=this}},l0=class extends vi{constructor(e,n){super(e,n),this.type="select-box",this.node.__cy_layer=this}};function cp(t,e,n){let r=Array.from(t.children);if(!n.uniqueElements){e.forEach(o=>{if(o.removed())return;let s=n.bb(o);if(n.isVisible(s))if(r.length>0)n.update(r.shift(),o,s);else{let l=n.enter(o,s);t.appendChild(l),n.update(l,o,s)}});for(let o of r)o.remove();return}let a=new Map(r.map(o=>[o.dataset.id,o])),i=-1;e.forEach(o=>{if(o.removed())return;let s=n.bb(o);if(!n.isVisible(s))return;i++;let l=o.id(),c=r[i],u=a.get(l),d;if(u){if(n.update(u,o,s),a.delete(l),c===u)return;d=u}else d=n.enter(o,s),d.dataset.id=l,n.update(d,o,s);i===0?t.insertAdjacentElement("afterbegin",d):r[i-1].insertAdjacentElement("afterend",d),r.splice(i,0,d)}),a.forEach(o=>o.remove())}function Kc(t,e){return t.callback(e),{remove:()=>{t.callbacks.splice(t.callbacks.indexOf(e),1)}}}function fp(t){return{selector:":visible",updateOn:t!=null&&t.queryEachTime?"render":"position",queryEachTime:!1,checkBounds:!0}}function fX(t,e,n){let r=Object.assign({checkBoundsPointCount:5,initCollection:()=>{}},fp(n),n),a=t.cy.collection(),i=!1,o=()=>{i||(i=!0,t.cy.one("render",()=>{i=!1,a=s(a),t.update()}))},s=u=>{r.updateOn!=="none"&&r.updateOn!=="render"&&(u.off(r.updateOn,void 0,t.updateOnRenderOnce),u.sources().off(r.updateOn,void 0,t.updateOnRenderOnce),u.targets().off(r.updateOn,void 0,t.updateOnRenderOnce));let d=t.cy.edges(r.selector);return r.initCollection(d),r.updateOn!=="none"&&r.updateOn!=="render"&&(d.on(r.updateOn,t.updateOnRenderOnce),d.sources().on(r.updateOn,t.updateOnRenderOnce),d.targets().on(r.updateOn,t.updateOnRenderOnce)),t.updateOnRenderOnce(),d};r.updateOn==="render"&&(t.updateOnRender=!0),r.queryEachTime||(a=s(a),t.cy.on("add remove",r.selector,o));let c=Kc(t,(u,d)=>{r.queryEachTime&&(a=s(a)),a.forEach(f=>{if(f.removed())return;let h=f._private.rscratch,p=h&&h.startX!=null&&h.startY!=null?{x:h.startX,y:h.startY}:f.sourceEndpoint(),m=h&&h.endX!=null&&h.endY!=null?{x:h.endX,y:h.endY}:f.targetEndpoint();if(!d.forExport&&r.checkBounds&&r.checkBoundsPointCount>0&&!hX(t,p,m,r.checkBoundsPointCount))return;if(h&&h.pathCache){e(u,f,h.pathCache,p,m);return}let _=new Path2D;_.moveTo(p.x,p.y),_.lineTo(m.x,m.y),e(u,f,_,p,m)})});return{layer:t,edges:a,remove:()=>{r.updateOn!=="none"&&r.updateOn!=="render"&&(a.off(r.updateOn,void 0,t.updateOnRenderOnce),a.sources().off(r.updateOn,void 0,t.updateOnRenderOnce),a.targets().off(r.updateOn,void 0,t.updateOnRenderOnce)),t.cy.off("add remove",r.selector,o),c.remove()}}}function hX(t,e,n,r){let a=o=>({x:e.x*o+n.x*(1-o),y:e.y*o+n.y*(1-o)});if(r===1)return t.inVisibleBounds(a(.5));let i=1/r;for(let o=0;o<=r;o++)if(t.inVisibleBounds(a(o*i)))return!0;return!1}function pX(t,e,n={}){let r=Object.assign({transform:"",position:"top-left",boundingBox:{includeLabels:!1,includeOverlays:!1},uniqueElements:!1,initCollection:()=>{}},fp(n),n),a=t.cy.collection(),i=!1,o=()=>{i||(i=!0,t.cy.one("render",()=>{i=!1,a=s(a),t.update()}))},s=h=>{r.updateOn!=="none"&&r.updateOn!=="render"&&h.off(r.updateOn,void 0,t.updateOnRenderOnce);let p=t.cy.nodes(r.selector);return r.initCollection(p),r.updateOn!=="none"&&r.updateOn!=="render"&&p.on(r.updateOn,t.updateOnRenderOnce),t.updateOnRenderOnce(),p};r.updateOn==="render"&&(t.updateOnRender=!0),r.queryEachTime||(a=s(a),t.cy.on("add remove",r.selector,o));let l=h=>({layer:t,nodes:a,remove:()=>{r.updateOn!=="none"&&r.updateOn!=="render"&&a.off(r.updateOn,void 0,t.updateOnRenderOnce),t.cy.off("add remove",r.selector,o),h.remove()}});if(t.type==="canvas"){let h=r;return l(Kc(t,(m,_)=>{let g=m.getTransform();r.queryEachTime&&(a=s(a)),a.forEach(P=>{if(P.removed())return;let y=P.boundingBox(r.boundingBox);if(!(!_.forExport&&h.checkBounds&&!t.inVisibleBounds(y))){if(h.position==="top-left")m.translate(y.x1,y.y1);else if(h.position==="center"){let C=P.position();m.translate(C.x,C.y)}e(m,P,y),h.position!=="none"&&m.setTransform(g)}})}))}let c=r,u={bb:h=>h.boundingBox(c.boundingBox),isVisible:c.checkBounds?h=>t.inVisibleBounds(h):()=>!0,uniqueElements:c.uniqueElements===!0};if(c.checkBounds&&(t.updateOnTransform=!0),t.type==="html"){let h=Gt(Sn({},u),{enter:(m,_)=>{let g=t.node.ownerDocument.createElement("div");return g.style.position="absolute",c.init&&c.init(g,m,_),g},update:(m,_,g)=>{if(c.position==="top-left")m.style.transform=`${c.transform}translate3d(${g.x1}px,${g.y1}px,0)`;else if(c.position==="center"){let P=_.position();m.style.transform=`${c.transform}translate3d(${P.x}px,${P.y}px,0)`}e(m,_,g)}});return l(Kc(t,m=>{r.queryEachTime&&(a=s(a)),cp(m,a,h)}))}let d=Gt(Sn({},u),{enter:(h,p)=>{let m=t.node.ownerDocument.createElementNS(vo,"g");return c.init&&c.init(m,h,p),m},update:(h,p,m)=>{if(c.position==="top-left")h.setAttribute("transform",`${c.transform}translate3d(${m.x1},${m.y1},0)`);else if(c.position==="center"){let _=p.position();h.setAttribute("transform",`${c.transform}translate3d(${_.x},${_.y},0)`)}e(h,p,m)}});return l(Kc(t,h=>{r.queryEachTime&&(a=s(a)),cp(h,a,d)}))}function mX(t,e){let n=atob(t),r=new ArrayBuffer(n.length),a=new Uint8Array(r);for(let i=0;i<n.length;i++)a[i]=n.charCodeAt(i);return new Blob([r],{type:e})}function lp(t){let e=t.indexOf(",");return t.substring(e+1)}function up(t,e,n){let r=function(){return e.toDataURL(n,t.quality)};switch(t.output){case"blob-promise":return new Promise((a,i)=>{try{e.toBlob(function(o){o!=null?a(o):i(new Error("`canvas.toBlob()` sent a null value in its callback"))},n,t.quality)}catch(o){i(o)}});case"blob":return mX(lp(r()),n);case"base64":return lp(r());case"base64uri":default:return r()}}function gX(t){return t.x!=null}var Cc=class extends Error{},u0=class{constructor(e){this.bak={},this.resize=()=>{let o=this.cy.width(),s=this.cy.height();this.viewport.width=o,this.viewport.height=s;for(let l of this.layers)l.resize(o,s)},this.destroy=()=>{for(let o of this.layers)o.remove();this.cy.off("destroy",this.destroy),this.cy.off("viewport",this.zoomed),this.cy.off("resize",this.resize),this.cy.scratch("_layers",void 0),this.cy.png=this.bak.png,this.cy.jpg=this.bak.jpg,this.cy.jpeg=this.bak.jpeg,this.bak={}},this.zoomed=()=>{let o=this.cy.pan(),s=this.cy.zoom();this.viewport.tx=o.x,this.viewport.ty=o.y,this.viewport.zoom=s;for(let l of this.layers)l.setViewport(o.x,o.y,s)},this.renderPerEdge=fX,this.renderPerNode=pX,this.cy=e,this.adapter={cy:this.cy,insert:(o,s,l)=>this.insert(o,s,l),move:(o,s)=>this.move(o,s),inVisibleBounds:o=>{let s=this.viewport,l=u=>{let d=u*s.zoom+s.tx;return d>=0&&d<=s.width},c=u=>{let d=u*s.zoom+s.ty;return d>=0&&d<=s.height};return gX(o)?l(o.x)&&c(o.y):l(o.x1)&&c(o.y1)||l(o.x2)&&c(o.y1)||l(o.x2)&&c(o.y2)||l(o.x1)&&c(o.y2)||l((o.x1+o.x2)/2)&&c((o.y1+o.y2)/2)}};let n=e.container(),r=new s0(this.adapter,n.querySelector('[data-id="layer2-node"]'));this.nodeLayer=r;let a=new c0(this.adapter,n.querySelector('[data-id="layer1-drag"]'));this.dragLayer=a;let i=new l0(this.adapter,n.querySelector('[data-id="layer0-selectbox"]'));this.selectBoxLayer=i,r.root.style.zIndex="",a.root.style.zIndex="",i.root.style.zIndex="",r.root.insertAdjacentElement("afterend",a.root),a.root.insertAdjacentElement("afterend",i.root),e.on("viewport",this.zoomed),e.on("resize",this.resize),e.on("destroy",this.destroy),this.bak={png:e.png,jpg:e.jpg,jpeg:e.jpeg},e.png=this.png.bind(this),e.jpg=this.jpg.bind(this),e.jpeg=this.jpeg.bind(this),this.viewport={width:this.cy.width(),height:this.cy.height(),tx:this.cy.pan().x,ty:this.cy.pan().y,zoom:this.cy.zoom()}}move(e,n){let r=this.layers,a=r.indexOf(e),i=Math.max(Math.min(a+n,r.length,0));i!==a&&(a>=r.length-1?this.root.appendChild(e.root):this.root.insertBefore(e.root,r[i].root))}get document(){return this.cy.container().ownerDocument}get root(){return this.nodeLayer.node.parentElement}get layers(){return Array.from(this.root.children).map(e=>e.__cy_layer).filter(e=>e!=null)}getLayers(){return this.layers}init(e){return e.resize(this.viewport.width,this.viewport.height),e.setViewport(this.viewport.tx,this.viewport.ty,this.viewport.zoom),e}update(){this.zoomed();for(let e of this.layers)e instanceof Ac&&e.draw()}createLayer(e,n){switch(e){case"svg":return this.init(new t0(this.adapter,this.document,n));case"html":return this.init(new i0(this.adapter,this.document,n));case"canvas":return this.init(new Ac(this.adapter,this.document,n));case"html-static":return this.init(new o0(this.adapter,this.document,n));case"svg-static":return this.init(new r0(this.adapter,this.document,n));case"canvas-static":return this.init(new a0(this.adapter,this.document,n))}}append(e,n){let r=this.createLayer(e,n);return this.root.appendChild(r.root),r}insert(e,n,r,a){let i=this.createLayer(r,a);return n.root.insertAdjacentElement(e==="before"?"beforebegin":"afterend",i.root),i}getLast(){var e;let n=this.layers;return(e=n[n.length-1])!==null&&e!==void 0?e:null}getFirst(){var e;return(e=this.layers[0])!==null&&e!==void 0?e:null}hasCustomLayer(){return this.layers.some(e=>!(e instanceof vi))}toCanvas(e){let n=this.layers;if(n.some(d=>!d.supportsRender)&&!e.ignoreUnsupportedLayers)throw new Cc("some layer doesn't support exporting, use {ignoreUnsupportedLayers: true} option to ignore");let r=n.indexOf(this.nodeLayer),a=n.indexOf(this.dragLayer),i=n.indexOf(this.selectBoxLayer);if((r!==a-1||a!==i-1)&&!e.ignoreUnsupportedLayerOrder)throw new Cc("cytoscape layers are not in order, use {ignoreUnsupportedLayerOrder: true} option to ignore");let o=n.slice(0,r).reverse().filter(d=>d.supportsRender()&&d!==this.dragLayer&&d!==this.selectBoxLayer),s=n.slice(r+1).filter(d=>d.supportsRender()&&d!==this.dragLayer&&d!==this.selectBoxLayer),l=this.cy.renderer(),c=l.drawElements;l.drawElements=function(d,f){for(let h of o)h.renderInto(d);c.call(this,d,f);for(let h of s)h.renderInto(d)};let u=l.bufferCanvasImage(e);return l.drawElements=c,u}png(e){return this.hasCustomLayer()?up(e??{},this.toCanvas(e??{}),"image/png"):this.bak.png.call(this.cy,e)}jpg(e){if(!this.hasCustomLayer())return this.bak.jpg.call(this.cy,e);let n=Sn({bg:"#fff"},e??{});return up(n,this.toCanvas(n),"image/png")}jpeg(e){return this.hasCustomLayer()?this.jpg(e):this.bak.jpeg.call(this.cy,e)}};function _X(t=this){if(!t.container())throw new Error("layers plugin does not work in headless environments");let e=t.scratch("_layers");if(e)return e;let n=new u0(t);return t.scratch("_layers",n),n}function d0(t){t("core","layers",_X)}typeof window.cytoscape<"u"&&d0(window.cytoscape);var Kp=Ki(hp());function PX(t,e){if(t&1&&(j(0,"mat-option",6),ie(1),G()),t&2){let n=e.$implicit;Ke("value",n),ae(),dn(n)}}function vX(t,e){if(t&1&&(j(0,"mat-option",6),ie(1),G()),t&2){let n=e.$implicit;Ke("value",n),ae(),dn(n)}}var pp=(()=>{class t{constructor(n,r,a){this.dialogRef=n,this.fb=r,this.data=a,this.projects=[],this.analysisGroups=[],this.form=this.fb.group({log2fc:[0],pvalue:[0],projectNames:[[]],analysisGroupNames:[[]]}),this.filter=wo,this.projects=a.projects,this.analysisGroups=a.analysisGroups,this.form.patchValue(a.currentFilter)}close(){this.dialogRef.close()}submit(){this.dialogRef.close(this.form.value)}static{this.\u0275fac=function(r){return new(r||t)(Be(On),Be(Nn),Be(G0))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-cytoscape-plot-filter-dialog"]],decls:29,vars:1,consts:[["mat-dialog-title",""],["mat-dialog-content",""],[2,"display","flex","flex-direction","column","gap","20px",3,"formGroup"],["matInput","","type","number","formControlName","log2fc"],["matInput","","type","number","formControlName","pvalue"],["formControlName","projectNames","multiple",""],[3,"value"],["formControlName","analysisGroupNames","multiple",""],["mat-dialog-actions",""],["mat-button","",3,"click"]],template:function(r,a){r&1&&(j(0,"h5",0),ie(1,"Filter Cytoscape Plot"),G(),j(2,"div",1)(3,"form",2)(4,"mat-form-field"),Ne(5,"input",3),j(6,"mat-label"),ie(7,"Absolute Log2 Fold Change"),G()(),j(8,"mat-form-field"),Ne(9,"input",4),j(10,"mat-label"),ie(11,"-log10(P Value)"),G()(),j(12,"mat-form-field")(13,"mat-label"),ie(14,"Project Names"),G(),j(15,"mat-select",5),nn(16,PX,2,2,"mat-option",6,vt),G()(),j(18,"mat-form-field")(19,"mat-label"),ie(20,"Analysis Group Names"),G(),j(21,"mat-select",7),nn(22,vX,2,2,"mat-option",6,vt),G()()()(),j(24,"div",8)(25,"button",9),ge("click",function(){return a.close()}),ie(26,"Cancel"),G(),j(27,"button",9),ge("click",function(){return a.submit()}),ie(28,"Filter"),G()()),r&2&&(ae(3),Ke("formGroup",a.form),ae(13),tn(a.projects),ae(6),tn(a.analysisGroups))},dependencies:[Tn,Bn,Gn,Hn,Vn,Sa,An,qn,st,ct,Mn,Jn,kn,vn,lt,Or,kt],encapsulation:2})}}return t})();var bX=(t,e)=>e.id;function yX(t,e){if(t&1&&(j(0,"mat-option",13),ie(1),G()),t&2){let n=e.$implicit;Ke("value",n),ae(),dn(n.official_name)}}function XX(t,e){t&1&&nn(0,yX,2,2,"mat-option",13,bX),t&2&&tn(e)}var mp=(()=>{class t{constructor(n,r,a){this.dialogRef=n,this.fb=r,this.webService=a,this.form=this.fb.group({organism:[""],score:[400],networkType:["functional"],addNodes:[0]}),this.filteredSpecies$=new x0([]),this.form.controls.organism.valueChanges.pipe(E0(300),Aa(i=>i&&typeof i=="string"?this.webService.getSpecies(void 0,5,0,i):A0({results:[]}))).subscribe(i=>{i.results&&this.filteredSpecies$.next(i.results)})}displayFn(n){return n?`${n.official_name} (${n.code})`:""}selectOrganism(n){this.form.controls.organism.setValue(n)}close(){this.dialogRef.close()}submit(){this.dialogRef.close(this.form.value)}static{this.\u0275fac=function(r){return new(r||t)(Be(On),Be(Nn),Be(Zn))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-string-db-dialog"]],decls:33,vars:6,consts:[["auto","matAutocomplete"],["mat-dialog-title",""],["mat-dialog-content",""],[2,"display","flex","flex-direction","column","gap","20px",3,"formGroup"],["matInput","","formControlName","organism",3,"matAutocomplete"],[3,"optionSelected","displayWith"],["matInput","","type","number","formControlName","score"],["formControlName","networkType"],["value","functional"],["value","physical"],["matInput","","type","number","formControlName","addNodes"],["mat-dialog-actions",""],["mat-button","",3,"click"],[3,"value"]],template:function(r,a){if(r&1){let i=Ye();j(0,"h5",1),ie(1,"Request STRING DB Interactions"),G(),j(2,"div",2)(3,"form",3)(4,"mat-form-field"),Ne(5,"input",4),j(6,"mat-label"),ie(7,"Organism"),G(),j(8,"mat-autocomplete",5,0),ge("optionSelected",function(s){return we(i),Oe(a.selectOrganism(s.option.value))}),We(10,XX,2,0),Oa(11,"async"),G()(),j(12,"mat-form-field"),Ne(13,"input",6),j(14,"mat-label"),ie(15,"Score Cutoff"),G()(),j(16,"mat-form-field")(17,"mat-label"),ie(18,"Network Type"),G(),j(19,"mat-select",7)(20,"mat-option",8),ie(21,"Functional"),G(),j(22,"mat-option",9),ie(23,"Physical"),G()()(),j(24,"mat-form-field"),Ne(25,"input",10),j(26,"mat-label"),ie(27,"Additional Nodes"),G()()()(),j(28,"div",11)(29,"button",12),ge("click",function(){return we(i),Oe(a.close())}),ie(30,"Cancel"),G(),j(31,"button",12),ge("click",function(){return we(i),Oe(a.submit())}),ie(32,"Request"),G()()}if(r&2){let i,o=nt(9);ae(3),Ke("formGroup",a.form),ae(2),Ke("matAutocomplete",o),ae(3),Ke("displayWith",a.displayFn),ae(2),je((i=Ta(11,4,a.filteredSpecies$.asObservable()))?10:-1,i)}},dependencies:[lt,Jn,Mn,Gn,Hn,Vn,Sa,An,qn,st,ct,Bn,Tn,kt,Or,kn,vn,Na,Ma,Ba],encapsulation:2})}}return t})();function Pt(t,e){var n,r=Object.keys(e);for(n=0;n<r.length;n++)t=t.replace(new RegExp("\\{"+r[n]+"\\}","gi"),e[r[n]]);return t}function Ec(t){var e,n,r;if(!t)throw new Error("cannot create a random attribute name for an undefined object");e="ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz",n="";do for(n="",r=0;r<12;r++)n+=e[Math.floor(Math.random()*e.length)];while(t[n]);return n}var gp={left:"start",right:"end",center:"middle",start:"start",end:"end"},_p={alphabetic:"alphabetic",hanging:"hanging",top:"text-before-edge",bottom:"text-after-edge",middle:"central"},_0=function(t){var e=Math.sqrt(t[0]*t[0]+t[1]*t[1]);return[t[0]/e,t[1]/e]},Pp=function(t,e){e===void 0&&(e=10);var n,r,a,i={},o="50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,t9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro".split(",");for(n=0;n<o.length;n+=2)r="&"+o[n+1]+";",a=parseInt(o[n],e),i[r]="&#"+a+";";return i["\\xa0"]="&#160;",i}(0,32),xo={strokeStyle:{svgAttr:"stroke",canvas:"#000000",svg:"none",apply:"stroke"},fillStyle:{svgAttr:"fill",canvas:"#000000",svg:null,apply:"fill"},lineCap:{svgAttr:"stroke-linecap",canvas:"butt",svg:"butt",apply:"stroke"},lineJoin:{svgAttr:"stroke-linejoin",canvas:"miter",svg:"miter",apply:"stroke"},miterLimit:{svgAttr:"stroke-miterlimit",canvas:10,svg:4,apply:"stroke"},lineWidth:{svgAttr:"stroke-width",canvas:1,svg:1,apply:"stroke"},globalAlpha:{svgAttr:"opacity",canvas:1,svg:1,apply:"fill stroke"},font:{canvas:"10px sans-serif"},shadowColor:{canvas:"#000000"},shadowOffsetX:{canvas:0},shadowOffsetY:{canvas:0},shadowBlur:{canvas:0},textAlign:{canvas:"start"},textBaseline:{canvas:"alphabetic"},lineDash:{svgAttr:"stroke-dasharray",canvas:[],svg:null,apply:"stroke"}},P0=function(){function t(e,n){this.__root=void 0,this.__ctx=void 0,this.__root=e,this.__ctx=n}return t.prototype.addColorStop=function(e,n){var r,a=this.__ctx.__createElement("stop");a.setAttribute("offset",e),n.indexOf("rgba")!==-1?(r=/rgba\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d?\.?\d*)\s*\)/gi.exec(n))&&(a.setAttribute("stop-color",Pt("rgb({r},{g},{b})",{r:r[1],g:r[2],b:r[3]})),a.setAttribute("stop-opacity",r[4])):a.setAttribute("stop-color",n),this.__root.appendChild(a)},t}(),vp=function(t,e){this.__root=void 0,this.__ctx=void 0,this.__root=t,this.__ctx=e},bi={width:500,height:500,enableMirroring:!1},bp=function(){function t(n,r){var a,i,o,s;if(n===void 0&&(n=bi),this.width=void 0,this.height=void 0,this.enableMirroring=void 0,this.canvas=void 0,this.__document=void 0,this.__canvas=void 0,this.__ctx=void 0,this.__ids=void 0,this.__root=void 0,this.__defs=void 0,this.__currentElement=void 0,this.__groupStack=void 0,this.__currentElementsToStyle=null,typeof n=="number"?(this.width=n,this.height=r??bi.height,this.enableMirroring=bi.enableMirroring,this.__document=document):(this.width=(i=n.width)!=null?i:bi.width,this.height=(o=n.height)!=null?o:bi.height,this.enableMirroring=(s=n.enableMirroring)!=null?s:bi.enableMirroring,this.__document=n.document||document,a=n.ctx),!(a||(this.__canvas=this.__document.createElement("canvas"),a=this.__canvas.getContext("2d"))))throw new Error("Unable to get canvas context");this.__ctx=a,this.canvas=this,this.__setDefaultStyles(),this.__stack=[this.__getStyleState()],this.__groupStack=[],this.__root=this.__document.createElementNS("http://www.w3.org/2000/svg","svg"),this.__root.setAttribute("version","1.1"),this.__root.setAttribute("xmlns","http://www.w3.org/2000/svg"),this.__root.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns:xlink","http://www.w3.org/1999/xlink"),this.__root.setAttribute("width",this.width.toString()),this.__root.setAttribute("height",this.height.toString()),this.__ids={},this.__defs=this.__document.createElementNS("http://www.w3.org/2000/svg","defs"),this.__root.appendChild(this.__defs),this.__currentElement=this.__document.createElementNS("http://www.w3.org/2000/svg","g"),this.__root.appendChild(this.__currentElement)}var e=t.prototype;return e.__createElement=function(n,r,a){r===void 0&&(r={});var i,o,s=this.__document.createElementNS("http://www.w3.org/2000/svg",n),l=Object.keys(r);for(a&&(s.setAttribute("fill","none"),s.setAttribute("stroke","none")),i=0;i<l.length;i++)s.setAttribute(o=l[i],r[o]);return s},e.__setDefaultStyles=function(){for(var n in xo)this[n]=xo[n].canvas},e.__applyStyleState=function(n){var r,a,i=Object.keys(n);for(r=0;r<i.length;r++)this[a=i[r]]=n[a]},e.__getStyleState=function(){var n,r,a={},i=Object.keys(xo);for(n=0;n<i.length;n++)a[r=i[n]]=this[r];return a},e.__applyStyleToCurrentElement=function(n){if(this.__currentElement){var r,a,i,o,s,l=this.__currentElement,c=Object.keys(xo);for(r=0;r<c.length;r++)if(i=this[c[r]],"apply"in(a=xo[c[r]])){if(i instanceof vp){if(i.__ctx)for(;i.__ctx.__defs.childNodes.length;)o=i.__ctx.__defs.childNodes[0].getAttribute("id"),this.__ids[o]=o,this.__defs.appendChild(i.__ctx.__defs.childNodes[0]);l.setAttribute(a.apply,Pt("url(#{id})",{id:i.__root.getAttribute("id")}))}else if(i instanceof P0)l.setAttribute(a.apply,Pt("url(#{id})",{id:i.__root.getAttribute("id")}));else if(a.apply.indexOf(n)!==-1&&a.svg!==i){if(a.svgAttr!=="stroke"&&a.svgAttr!=="fill"||i.indexOf("rgba")===-1){var u=a.svgAttr;if(c[r]==="globalAlpha"&&l.getAttribute(u=n+"-"+a.svgAttr))continue;l.setAttribute(u,i)}else if(s=/rgba\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d?\.?\d*)\s*\)/gi.exec(i)){l.setAttribute(a.svgAttr,Pt("rgb({r},{g},{b})",{r:s[1],g:s[2],b:s[3]}));var d=parseFloat(s[4]),f=this.globalAlpha;f!=null&&(d*=f),l.setAttribute(a.svgAttr+"-opacity",d.toString())}}}}},e.__closestGroupOrSvg=function(n){if(n===void 0&&(n=this.__currentElement),n)return n.nodeName==="g"||n.nodeName==="svg"?n:this.__closestGroupOrSvg(n.parentNode)},e.getSerializedSvg=function(n){var r,a,i,o,s,l=new XMLSerializer().serializeToString(this.__root);if(/xmlns="http:\/\/www\.w3\.org\/2000\/svg".+xmlns="http:\/\/www\.w3\.org\/2000\/svg/gi.test(l)&&(l=l.replace('xmlns="http://www.w3.org/2000/svg','xmlns:xlink="http://www.w3.org/1999/xlink')),n)for(r=Object.keys(Pp),a=0;a<r.length;a++)o=Pp[i=r[a]],(s=new RegExp(i,"gi")).test(l)&&(l=l.replace(s,o));return l},e.getSvg=function(){return this.__root},e.save=function(){var n=this.__createElement("g"),r=this.__closestGroupOrSvg();r&&this.__groupStack.push(r),r.appendChild(n),this.__currentElement=n,this.__stack.push(this.__getStyleState())},e.restore=function(){this.__currentElement=this.__groupStack.pop(),this.__currentElementsToStyle=null,this.__currentElement||(this.__currentElement=this.__root.childNodes[1]);var n=this.__stack.pop();this.__applyStyleState(n)},e.__addTransform=function(n){if(this.__currentElement){var r=this.__closestGroupOrSvg();if(r){if(r.childNodes.length>0){this.__currentElement.nodeName==="path"&&(this.__currentElementsToStyle||(this.__currentElementsToStyle={element:r,children:[]}),this.__currentElementsToStyle.children.push(this.__currentElement),this.__applyCurrentDefaultPath());var a=this.__createElement("g");r.appendChild(a),this.__currentElement=a}if(this.__currentElement){var i=this.__currentElement.getAttribute("transform");i?i+=" ":i="",this.__currentElement.setAttribute("transform",i+=n)}}}},e.scale=function(n,r){r===void 0&&(r=n),this.__addTransform(Pt("scale({x},{y})",{x:n,y:r}))},e.rotate=function(n){var r=180*n/Math.PI;this.__addTransform(Pt("rotate({angle},{cx},{cy})",{angle:r,cx:0,cy:0}))},e.translate=function(n,r){this.__addTransform(Pt("translate({x},{y})",{x:n,y:r}))},e.transform=function(n,r,a,i,o,s){this.__addTransform(Pt("matrix({a},{b},{c},{d},{e},{f})",{a:n,b:r,c:a,d:i,e:o,f:s}))},e.beginPath=function(){var n,r;this.__currentDefaultPath="",this.__currentPosition={},n=this.__createElement("path",{},!0),(r=this.__closestGroupOrSvg())&&(r.appendChild(n),this.__currentElement=n)},e.__applyCurrentDefaultPath=function(){var n=this.__currentElement;n&&(n.nodeName==="path"?n.setAttribute("d",this.__currentDefaultPath):console.error("Attempted to apply path command to node",n.nodeName))},e.__addPathCommand=function(n){this.__currentDefaultPath+=" ",this.__currentDefaultPath+=n},e.moveTo=function(n,r){this.__currentElement&&(this.__currentElement.nodeName!=="path"&&this.beginPath(),this.__currentPosition={x:n,y:r},this.__addPathCommand(Pt("M {x} {y}",{x:n,y:r})))},e.closePath=function(){this.__currentDefaultPath&&this.__addPathCommand("Z")},e.lineTo=function(n,r){this.__currentPosition={x:n,y:r},this.__currentDefaultPath.indexOf("M")>-1?this.__addPathCommand(Pt("L {x} {y}",{x:n,y:r})):this.__addPathCommand(Pt("M {x} {y}",{x:n,y:r}))},e.bezierCurveTo=function(n,r,a,i,o,s){this.__currentPosition={x:o,y:s},this.__addPathCommand(Pt("C {cp1x} {cp1y} {cp2x} {cp2y} {x} {y}",{cp1x:n,cp1y:r,cp2x:a,cp2y:i,x:o,y:s}))},e.quadraticCurveTo=function(n,r,a,i){this.__currentPosition={x:a,y:i},this.__addPathCommand(Pt("Q {cpx} {cpy} {x} {y}",{cpx:n,cpy:r,x:a,y:i}))},e.arcTo=function(n,r,a,i,o){var s=this.__currentPosition&&this.__currentPosition.x,l=this.__currentPosition&&this.__currentPosition.y;if(s!==void 0&&l!==void 0){if(o<0)throw new Error("IndexSizeError: The radius provided ("+o+") is negative.");if(s===n&&l===r||n===a&&r===i||o===0)this.lineTo(n,r);else{var c=_0([s-n,l-r]),u=_0([a-n,i-r]);if(c[0]*u[1]!=c[1]*u[0]){var d=Math.acos(Math.abs(c[0]*u[0]+c[1]*u[1])),f=_0([c[0]+u[0],c[1]+u[1]]),h=o/Math.sin(d/2),p=n+h*f[0],m=r+h*f[1],_=[-c[1],c[0]],g=[u[1],-u[0]],P=function(E){var T=E[0];return E[1]>=0?Math.acos(T):-Math.acos(T)},y=P(_),C=P(g);this.lineTo(p+_[0]*o,m+_[1]*o),this.arc(p,m,o,y,C)}else this.lineTo(n,r)}}},e.stroke=function(){this.__currentElement&&(this.__currentElement.nodeName==="path"&&this.__currentElement.setAttribute("paint-order","fill stroke markers"),this.__applyCurrentDefaultPath(),this.__applyStyleToCurrentElement("stroke"))},e.fill=function(){this.__currentElement&&(this.__currentElement.nodeName==="path"&&this.__currentElement.setAttribute("paint-order","stroke fill markers"),this.__applyCurrentDefaultPath(),this.__applyStyleToCurrentElement("fill"))},e.rect=function(n,r,a,i){this.__currentElement&&(this.__currentElement.nodeName!=="path"&&this.beginPath(),this.moveTo(n,r),this.lineTo(n+a,r),this.lineTo(n+a,r+i),this.lineTo(n,r+i),this.lineTo(n,r),this.closePath())},e.fillRect=function(n,r,a,i){var o;o=this.__createElement("rect",{x:n,y:r,width:a,height:i},!0),this.__closestGroupOrSvg().appendChild(o),this.__currentElement=o,this.__applyStyleToCurrentElement("fill")},e.strokeRect=function(n,r,a,i){var o;o=this.__createElement("rect",{x:n,y:r,width:a,height:i},!0),this.__closestGroupOrSvg().appendChild(o),this.__currentElement=o,this.__applyStyleToCurrentElement("stroke")},e.__clearCanvas=function(){var n=this.__closestGroupOrSvg();if(n){for(var r=n.getAttribute("transform"),a=this.__root.childNodes[1],i=a.childNodes,o=i.length-1;o>=0;o--)i[o]&&a.removeChild(i[o]);this.__currentElement=a,this.__groupStack=[],r&&this.__addTransform(r)}},e.clearRect=function(n,r,a,i){if(n!==0||r!==0||a!==this.width||i!==this.height){var o,s=this.__closestGroupOrSvg();o=this.__createElement("rect",{x:n,y:r,width:a,height:i,fill:"#FFFFFF"},!0),s.appendChild(o)}else this.__clearCanvas()},e.createLinearGradient=function(n,r,a,i){var o=this.__createElement("linearGradient",{id:Ec(this.__ids),x1:n+"px",x2:a+"px",y1:r+"px",y2:i+"px",gradientUnits:"userSpaceOnUse"},!1);return this.__defs.appendChild(o),new P0(o,this)},e.createRadialGradient=function(n,r,a,i,o,s){var l=this.__createElement("radialGradient",{id:Ec(this.__ids),cx:i+"px",cy:o+"px",r:s+"px",fx:n+"px",fy:r+"px",gradientUnits:"userSpaceOnUse"},!1);return this.__defs.appendChild(l),new P0(l,this)},e.__parseFont=function(){var n=/^\s*(?=(?:(?:[-a-z]+\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\1|\2|\3)\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\d]+(?:\%|in|[cem]m|ex|p[ctx]))(?:\s*\/\s*(normal|[.\d]+(?:\%|in|[cem]m|ex|p[ctx])))?\s*([-,\'\"\sa-z0-9]+?)\s*$/i.exec(this.font);if(n){var r={style:n[1]||"normal",size:n[4]||"10px",family:n[6]||"sans-serif",weight:n[3]||"normal",decoration:n[2]||"normal",href:null};return this.__fontUnderline==="underline"&&(r.decoration="underline"),this.__fontHref&&(r.href=this.__fontHref),r}},e.__wrapTextLink=function(n,r){if(n.href){var a=this.__createElement("a");return a.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",n.href),a.appendChild(r),a}return r},e.__applyText=function(n,r,a,i){var o=this.__parseFont(),s=this.__closestGroupOrSvg();if(o){var l,c,u=this.__createElement("text",{"font-family":o.family,"font-size":o.size,"font-style":o.style,"font-weight":o.weight,"text-decoration":o.decoration,x:r,y:a,"text-anchor":(c=this.textAlign,gp[c]||gp.start),"dominant-baseline":(l=this.textBaseline,_p[l]||_p.alphabetic)},!0);u.appendChild(this.__document.createTextNode(n)),this.__currentElement=u,this.__applyStyleToCurrentElement(i),s.appendChild(this.__wrapTextLink(o,u))}},e.fillText=function(n,r,a){this.__applyText(n,r,a,"fill")},e.strokeText=function(n,r,a){this.__applyText(n,r,a,"stroke")},e.measureText=function(n){return this.__ctx.font=this.font,this.__ctx.measureText(n)},e.arc=function(n,r,a,i,o,s){if(i!==o){(i%=2*Math.PI)==(o%=2*Math.PI)&&(o=(o+2*Math.PI-.001*(s?-1:1))%(2*Math.PI));var l,c=n+a*Math.cos(o),u=r+a*Math.sin(o),d=n+a*Math.cos(i),f=r+a*Math.sin(i),h=s?0:1,p=o-i;p<0&&(p+=2*Math.PI),l=s?p>Math.PI?0:1:p>Math.PI?1:0,this.lineTo(d,f),this.__addPathCommand(Pt("A {rx} {ry} {xAxisRotation} {largeArcFlag} {sweepFlag} {endX} {endY}",{rx:a,ry:a,xAxisRotation:0,largeArcFlag:l,sweepFlag:h,endX:c,endY:u})),this.__currentPosition={x:c,y:u}}},e.clip=function(){var n=this.__closestGroupOrSvg(),r=this.__createElement("clipPath"),a=Ec(this.__ids),i=this.__createElement("g");n&&this.__currentElement&&(this.__applyCurrentDefaultPath(),n.removeChild(this.__currentElement),r.setAttribute("id",a),r.appendChild(this.__currentElement),this.__defs.appendChild(r),n.setAttribute("clip-path",Pt("url(#{id})",{id:a})),n.appendChild(i),this.__currentElement=i)},e.drawImage=function(){var n,r,a,i,o,s,l,c,u,d,f,h,p,m,_=Array.prototype.slice.call(arguments),g=_[0],P=0,y=0;if(_.length===3)n=_[1],r=_[2],a=o=g.width,i=s=g.height;else if(_.length===5)n=_[1],r=_[2],a=_[3],i=_[4],o=g.width,s=g.height;else{if(_.length!==9)throw new Error("Invalid number of arguments passed to drawImage: "+arguments.length);P=_[1],y=_[2],o=_[3],s=_[4],n=_[5],r=_[6],a=_[7],i=_[8]}l=this.__closestGroupOrSvg();var C="translate("+n+", "+r+")";if(g instanceof t){if((c=g.getSvg().cloneNode(!0)).childNodes&&c.childNodes.length>1){for(u=c.childNodes[0];u.childNodes.length;)m=u.childNodes[0].getAttribute("id"),this.__ids[m]=m,this.__defs.appendChild(u.childNodes[0]);if(d=c.childNodes[1]){var E=d.getAttribute("transform");d.setAttribute("transform",E?E+" "+C:C),l.appendChild(d)}}}else if(g.nodeName==="CANVAS"||g.nodeName==="IMG"){if((f=this.__createElement("image")).setAttribute("width",a),f.setAttribute("height",i),f.setAttribute("preserveAspectRatio","none"),P||y||o!==g.width||s!==g.height){if((h=this.__document.createElement("canvas")).width=a,h.height=i,!(p=h.getContext("2d")))return;p.drawImage(g,P,y,o,s,0,0,a,i),g=h}f.setAttribute("transform",C),f.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",g.nodeName==="CANVAS"?g.toDataURL():g.getAttribute("src")),l.appendChild(f)}},e.createPattern=function(n,r){var a,i=this.__document.createElementNS("http://www.w3.org/2000/svg","pattern"),o=Ec(this.__ids);return i.setAttribute("id",o),i.setAttribute("width",n.width),i.setAttribute("height",n.height),n.nodeName==="CANVAS"||n.nodeName==="IMG"?((a=this.__document.createElementNS("http://www.w3.org/2000/svg","image")).setAttribute("width",n.width),a.setAttribute("height",n.height),a.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",n.nodeName==="CANVAS"?n.toDataURL():n.getAttribute("src")),i.appendChild(a),this.__defs.appendChild(i)):n instanceof t&&(i.appendChild(n.__root.childNodes[1]),this.__defs.appendChild(i)),new vp(i,this)},e.setLineDash=function(n){this.lineDash=n&&n.length>0?n.join(","):null},t}();var xp=Ki(yp());var KX=["cy"];function xX(t,e,n){let r=Sn({middleware:[ip(),ap({limiter:op()})]},n);function a(){let i=t.getBoundingClientRect();sp(t,e,r).then(({x:o,y:s})=>Object.assign(e.style,{left:`${i.left}px`,top:`${s}px`,position:"absolute",transform:"translate(-50%, -50%)","background-color":"#333",color:"#fff",padding:"5px 10px","border-radius":"4px","font-size":"12px","box-shadow":"0 2px 10px rgba(0, 0, 0, 0.2)","pointer-events":"none"}))}return a(),{update:a}}var Ap=(()=>{class t{constructor(n,r,a,i){this.collateService=n,this.cdr=r,this.dialog=a,this.webService=i,this.showBarChart=!0,this.showCytoscapePlot=!1,this.projects=[],this.searchResultsMap={},this.renameCondition={},this.currentPopperRef=null,this.currentTooltip=null,this.barChartLayers=new Map,this.projectColorMap={},this.cytoscapeElements=[],this.currentFilter={log2fc:0,pvalue:0,projectNames:[],analysisGroupNames:[]}}ngAfterViewInit(){Nt.use(Kp.default),Nt.use((0,Xp.default)(xX)),Nt.use(d0),Nt.use(xp.default),this.initCytoscape(),this.collateService.collateRedrawSubject.subscribe(()=>{this.updateCytoscape()})}updateCytoscape(){this.cdr.detectChanges(),this.cy.destroy(),this.initCytoscape()}initCytoscape(){if(this.cyElement){let n=this.buildGraphElements();this.cytoscapeElements=n,this.cy=Nt({container:this.cyElement.nativeElement,elements:n,style:[{selector:"node",style:{label:"data(label)","background-color":"#666",width:"data(size)",height:"data(size)"}},{selector:".protein",style:{"background-color":"#FF5733"}},{selector:".analysis",style:{"background-color":"#ba0000",label:""}},{selector:".comparison",style:{"background-color":"#33A1FF",label:""}},{selector:"edge[color]",style:{width:2,"line-color":"data(color)","target-arrow-color":"data(color)","target-arrow-shape":"triangle","curve-style":"bezier","control-point-step-size":40}}],layout:{name:"fcose",animate:!0,animationDuration:1e3,padding:30,nodeSeparation:200,idealEdgeLength:100,nodeRepulsion:4500,edgeElasticity:.45,gravity:.25,numIter:2500,tile:!0,tilingPaddingVertical:10,tilingPaddingHorizontal:10,gravityRangeCompound:1.5,gravityCompound:1,gravityRange:3.8,initialEnergyOnIncremental:.5}}),this.cy.nodes(".comparison").forEach(a=>{a.on("mouseover",i=>{let s=i.target.data().label;this.currentPopperRef=i.target.popper({content:()=>{let l=document.createElement("div");return l.classList.add("cy-tooltip"),l.innerHTML=s,document.body.appendChild(l),this.currentTooltip=l,l},popper:{placement:"bottom",removeOnDestroy:!0}})}),a.on("mouseout",()=>{this.currentTooltip&&(document.body.removeChild(this.currentTooltip),this.currentTooltip=null)}),a.on("click",i=>{let o=i.target,s=o.style("label");o.style("label",s?"":o.data("label"))})});let r=this.cy.layers();this.cy.edges().forEach(a=>{a.on("click",s=>{let l=s.target,c=l.data("showBarChart");l.data("showBarChart",!c),this.drawBarChartOnEdges(r),this.cy.batch(()=>{this.cy.nodes().forEach(u=>{u.trigger("position")})})}),a.on("mouseover",s=>{let l=s.target.data(),c=`Comparison: ${l.conditionA} vs ${l.conditionB}<br>Project: ${l.project}<br>Analysis Group: ${l.analysis_group} <br>Log2FC: ${l.fc}<br>-Log10(p): ${l.p_value}<br> Intensity ${l.conditionA}: ${l.intensityA}<br>Intensity ${l.conditionB}: ${l.intensityB}`;this.currentPopperRef=s.target.popper({content:()=>{let u=document.createElement("div");return u.classList.add("cy-tooltip"),u.innerHTML=c,document.body.appendChild(u),this.currentTooltip=u,u},popper:{placement:"bottom",removeOnDestroy:!0}})}),a.on("mouseout",()=>{this.currentTooltip&&(document.body.removeChild(this.currentTooltip),this.currentTooltip=null)});let i=!1,o={x:0,y:0};a.on("mousedown",s=>{i=!0,o=s.position}),this.cy.on("mousemove",s=>{if(i){let l=s.position;a.data("barChartPos",l),this.cy.trigger("render")}}),this.cy.on("mouseup",()=>{i=!1})})}}drawBarChartOnEdges(n){n.renderPerEdge(n.nodeLayer.insertAfter("canvas"),(r,a,i,o,s)=>{!this.showBarChart||!a.data("showBarChart")||this.renderBarChart(a,o,s,r)})}renderBarChart(n,r,a,i){let o=n.data(),s=parseFloat(o.intensityA),l=parseFloat(o.intensityB),c=5,u=25,d=Math.max(s,l),f=s/d*u,h=l/d*u,p=o.barChartPos||{x:(r.x+a.x)/2,y:(r.y+a.y)/2},m=n.source().position(),_=n.target().position(),g=Math.sqrt(Math.pow(_.x-m.x,2)+Math.pow(_.y-m.y,2)),P=((p.x-m.x)*(_.x-m.x)+(p.y-m.y)*(_.y-m.y))/Math.pow(g,2),y,C,E=n.controlPoints();if(E&&E.length>0){let T=E[0];y=(1-P)*(1-P)*r.x+2*(1-P)*P*T.x+P*P*a.x,C=(1-P)*(1-P)*r.y+2*(1-P)*P*T.y+P*P*a.y}else y=m.x+P*(_.x-m.x)-c,C=m.y+P*(_.y-m.y)+u;i.fillStyle="white",i.fillRect(y-c-2,C-u-3,c*2+6,u+5),i.strokeStyle="black",i.strokeRect(y-c-2,C-u-3,c*2+6,u+5),i.fillStyle="red",i.fillRect(y-c,C-f,c,f),i.fillStyle="blue",i.fillRect(y+2,C-h,c,h)}buildGraphElements(){let n=[],r=new Set,a={};return console.log(this.searchResultsMap),this.projects.forEach(i=>{let o=this.searchResultsMap[i.id]||[];a[i.id]||(a[i.id]=`#${Math.floor(Math.random()*16777215).toString(16)}`);let s=a[i.id];o.forEach(l=>{let c=l.gene_name||l.uniprot_id||l.primary_id;r.has(c)||(n.push({data:{id:c,label:c,size:25},classes:"protein"}),r.add(c));let u=l.condition_A,d=l.condition_B;this.renameCondition[i.id]&&(this.renameCondition[i.id][l.condition_A]&&(u=this.renameCondition[i.id][l.condition_A]),this.renameCondition[i.id][l.condition_B]&&(d=this.renameCondition[i.id][l.condition_B]));let f=`${u} vs ${d}`;r.has(f)||(n.push({data:{id:f,label:`${u} vs ${d}`,size:25},classes:"comparison"}),r.add(f));let h=l.searched_data.filter(y=>y.Condition===l.condition_A&&y.Value),p=l.searched_data.filter(y=>y.Condition===l.condition_B&&y.Value),m=0,_=0;h.length>0&&(m=h.reduce((y,C)=>y+C.Value,0)/h.length),p.length>0&&(_=p.reduce((y,C)=>y+C.Value,0)/p.length);let g=l.log2_fc>0?c:f,P=l.log2_fc>0?f:c;n.push({data:{id:`${c}-${f}-${i.id}-${l.analysis_group.id}`,source:g,target:P,color:s,conditionA:u,conditionB:d,intensityA:m,intensityB:_,analysis_group:l.analysis_group.name,project:i.name,fc:l.log2_fc,p_value:l.log10_p}})})}),this.projectColorMap=a,n}toggleCytoscapePlot(){this.showCytoscapePlot=!this.showCytoscapePlot}toggleBarChart(){this.showBarChart=!this.showBarChart,this.updateCytoscape()}getRandomColor(){return`#${Math.floor(Math.random()*16777215).toString(16).padStart(6,"0")}`}getProjectColor(n){return this.projectColorMap[n]||"#000000"}toggleAllComparisons(n,r){this.cy.nodes(r).forEach(a=>{n?a.style("label",a.data("label")):a.style("label","")})}resetZoomAndCenter(){this.cy.fit(),this.cy.center()}openFilterDialog(){let n=Array.from(new Set(this.cytoscapeElements.map(i=>i.data.project))),r=Array.from(new Set(this.cytoscapeElements.map(i=>i.data.analysis_group)));this.dialog.open(pp,{data:{projects:n,analysisGroups:r,currentFilter:this.currentFilter}}).afterClosed().subscribe(i=>{i&&(this.applyFilter(i.log2fc,i.pvalue,i.projectNames,i.analysisGroupNames),this.currentFilter=i)})}applyFilter(n,r,a=[],i=[]){let o=this.cytoscapeElements.filter(f=>{if(f.data.fc!==void 0&&f.data.p_value!==void 0){let h=Math.abs(f.data.fc),p=Math.abs(n);return a.length>0&&!a.includes(f.data.project)||i.length>0&&!i.includes(f.data.analysis_group)?!1:h>=p&&f.data.p_value>=r}return!0}),s=o.filter(f=>f.data.source!==void 0&&f.data.target!==void 0),l=new Set(s.map(f=>f.data.source).concat(s.map(f=>f.data.target))),c=new Set(s.map(f=>f.data.id)),u=o.filter(f=>l.has(f.data.id)),d=new Set(u.map(f=>f.data.id));console.log(d),this.cy.batch(()=>{let f=[];this.cy.edges().forEach(h=>{let p=h.data();f.push(p.id),c.has(p.id)||h.remove()}),this.cy.nodes().forEach(h=>{let p=h.data();f.push(p.id),d.has(p.id)||h.remove()}),u.forEach(h=>{f.includes(h.data.id)||this.cy.add(h)}),s.forEach(h=>{f.includes(h.data.id)||this.cy.add(h)})}),this.cy.layout({name:"fcose",animate:!0,animationDuration:1e3}).run()}openStringDBDialog(){this.dialog.open(mp).afterClosed().subscribe(r=>{if(r){let a=this.cy.nodes("proteins").map(s=>s.data("id").split(";")),i=[].concat.apply([],a),o=Array.from(new Set(i));this.requestStringDBInteractions(o,r.organism.taxon,r.score,r.networkType,r.addNodes)}})}requestStringDBInteractions(n,r,a,i,o){this.webService.getStringDBInteractions(n,r,a,i,o).subscribe(s=>{let l=s;l&&this.addStringDBInteractions(l)})}addStringDBInteractions(n){let r=new Set,a=new Set;n.forEach(i=>{let{preferredName_A:o,preferredName_B:s,score:l}=i,c=o,u=s;this.cy.nodes().forEach(f=>{let h=f.data("id"),p=h.split(";");p.includes(o)&&(c=h),p.includes(s)&&(u=h)}),!this.cy.getElementById(c).length&&!r.has(c)&&(this.cy.add({data:{id:c,label:o,size:25},classes:"string-protein"}),r.add(c)),!this.cy.getElementById(u).length&&!r.has(u)&&(this.cy.add({data:{id:u,label:s,size:25},classes:"string-protein"}),r.add(u));let d=`${c}-${u}`;a.has(d)||(this.cy.add({data:{id:d,source:c,target:u,score:l},classes:"string-edge"}),a.add(d)),this.cy.nodes().forEach(f=>{let h=f.data("id"),p=h.split(";");if(p.includes(o)&&!p.includes(s)){let m=`${h}-${u}`;a.has(m)||(this.cy.add({data:{id:m,source:h,target:u,score:l},classes:"string-edge"}),a.add(m))}if(p.includes(s)&&!p.includes(o)){let m=`${h}-${c}`;a.has(m)||(this.cy.add({data:{id:m,source:h,target:c,score:l},classes:"string-edge"}),a.add(m))}})}),this.cy.style().selector(".string-protein").style({shape:"rectangle","background-color":"#FF5733",label:"data(label)",width:30,height:30}).selector(".string-edge").style({"line-color":"#FF5733",width:2,"line-style":"dashed","target-arrow-shape":"none"}).update(),this.cy.layout({name:"fcose",animate:!0,animationDuration:1e3}).run()}exportToSvg(){if(!this.cy||!this.cy.container())return;let n=new bp(this.cy.width(),this.cy.height()),r=this.cy.elements().boundingBox(),a=-r.x1,i=-r.y1;this.cy.nodes().forEach(u=>{let d=u.position(),f=d.x+a,h=d.y+i;n.beginPath(),u.hasClass("string-protein")?n.rect(f-15,h-15,30,30):n.arc(f,h,15,0,2*Math.PI),n.fillStyle=u.style("background-color"),n.fill(),n.strokeStyle=u.style("border-color")||"#FFF",n.lineWidth=parseFloat(u.style("border-width"))||1,n.stroke(),n.closePath(),n.font=u.style("font-size")+" "+u.style("font-family"),n.fillStyle=u.style("color")||"#000",n.fillText(u.data("label"),f-15,h-20)}),this.cy.edges().forEach(u=>{let d=u.source().position(),f=u.target().position(),h=d.x+a,p=d.y+i,m=f.x+a,_=f.y+i;n.beginPath(),n.moveTo(h,p),n.lineTo(m,_),n.strokeStyle=u.style("line-color"),n.lineWidth=parseFloat(u.style("width")),n.stroke(),n.closePath()});let o=n.getSerializedSvg(),s=new Blob([o],{type:"image/svg+xml;charset=utf-8"}),l=URL.createObjectURL(s),c=document.createElement("a");c.href=l,c.download="cytoscape-plot.svg",c.click(),URL.revokeObjectURL(l)}exportToPng(){if(!this.cy||!this.cy.container())return;let n=this.cy.png({full:!0}),r=this.dataURItoBlob(n),a=URL.createObjectURL(r),i=document.createElement("a");i.href=a,i.download="cytoscape-plot.png",i.click(),URL.revokeObjectURL(a)}dataURItoBlob(n){let r=atob(n.split(",")[1]),a=n.split(",")[0].split(":")[1].split(";")[0],i=new ArrayBuffer(r.length),o=new Uint8Array(i);for(let s=0;s<r.length;s++)o[s]=r.charCodeAt(s);return new Blob([i],{type:a})}exportToPDF(){return Xn(this,null,function*(){let r=yield this.cy.pdf({paperSize:"LETTER",orientation:"landscape",full:!0}),a=URL.createObjectURL(r),i=document.createElement("a");i.href=a,i.download="cytoscape-plot.pdf",i.click(),URL.revokeObjectURL(a),document.body.removeChild(i)})}exportToPng2(){if(!this.cy||!this.cy.container())return;let n=document.createElement("canvas");n.width=this.cy.width(),n.height=this.cy.height();let r=n.getContext("2d");if(r){let a=this.cy.png({full:!0,output:"base64"}),i=new Image;i.src="data:image/png;base64,"+a.split(",")[1],i.onload=()=>{r.drawImage(i,0,0),this.cy.edges().forEach(l=>{if(l.data("showBarChart")){let c=l.sourceEndpoint(),u=l.targetEndpoint();this.renderBarChart(l,c,u,r)}});let o=n.toDataURL("image/png"),s=document.createElement("a");s.href=o,s.download="cytoscape-plot.png",s.click()}}}static{this.\u0275fac=function(r){return new(r||t)(Be(Zt),Be(Ar),Be(Cr),Be(Zn))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-cytoscape-plot"]],viewQuery:function(r,a){if(r&1&&Ca(KX,5),r&2){let i;Ea(i=wa())&&(a.cyElement=i.first)}},inputs:{projects:"projects",searchResultsMap:"searchResultsMap",renameCondition:"renameCondition"},decls:39,vars:3,consts:[["labelOn",""],["labelOff",""],["exportPlot",""],["cy",""],[2,"display","flex"],["matTooltip","Toggle on labels","mat-icon-button","",3,"matMenuTriggerFor"],["matTooltip","Toggle off labels","mat-icon-button","",3,"matMenuTriggerFor"],["matTooltip","Reset and center plot","mat-icon-button","",3,"click"],["matTooltip","Filter Cytoscape Plot","mat-icon-button","",3,"click"],["mat-icon-button","","matTooltip","Add STRING DB Interactions",3,"click"],["mat-icon-button","","matTooltip","Export",3,"matMenuTriggerFor"],["mat-menu-item","",3,"click"],[1,"cy-container"]],template:function(r,a){if(r&1){let i=Ye();j(0,"div",4)(1,"button",5)(2,"mat-icon"),ie(3,"label"),G()(),j(4,"button",6)(5,"mat-icon"),ie(6,"label_off"),G()(),j(7,"button",7),ge("click",function(){return we(i),Oe(a.resetZoomAndCenter())}),j(8,"mat-icon"),ie(9,"center_focus_strong"),G()(),j(10,"button",8),ge("click",function(){return we(i),Oe(a.openFilterDialog())}),j(11,"mat-icon"),ie(12,"filter_list"),G()(),j(13,"button",9),ge("click",function(){return we(i),Oe(a.openStringDBDialog())}),j(14,"mat-icon"),ie(15,"add_circle"),G()(),j(16,"button",10)(17,"mat-icon"),ie(18,"save_alt"),G()()(),j(19,"mat-menu",null,0)(21,"button",11),ge("click",function(){return we(i),Oe(a.toggleAllComparisons(!0,".comparison"))}),j(22,"span"),ie(23,"Comparison"),G()()(),j(24,"mat-menu",null,1)(26,"button",11),ge("click",function(){return we(i),Oe(a.toggleAllComparisons(!1,".comparison"))}),j(27,"span"),ie(28,"Comparison"),G()()(),j(29,"mat-menu",null,2)(31,"button",11),ge("click",function(){return we(i),Oe(a.exportToPng2())}),j(32,"span"),ie(33,"Export to PNG"),G()(),j(34,"button",11),ge("click",function(){return we(i),Oe(a.exportToPDF())}),j(35,"span"),ie(36,"Export to PDF"),G()()(),Ne(37,"div",12,3)}if(r&2){let i=nt(20),o=nt(25),s=nt(30);ae(),Ke("matMenuTriggerFor",i),ae(3),Ke("matMenuTriggerFor",o),ae(12),Ke("matMenuTriggerFor",s)}},dependencies:[ot,Jt,Wa,Ia,Ra,La],styles:[`.cy-container{width:100%;height:600px;border:1px solid #ccc}.edge-hover{transition:stroke-width .3s,stroke .3s;stroke-width:4px!important;stroke:red!important}.legend{position:absolute;bottom:10px;right:10px;background-color:#fffc;padding:10px;border-radius:5px;box-shadow:0 2px 10px #0003}.legend-color{display:inline-block;width:20px;height:20px;margin-right:5px;vertical-align:middle}
`],encapsulation:2})}}return t})();function AX(t,e){if(t&1&&(j(0,"mat-option",4),ie(1),G()),t&2){let n=e.$implicit;So("value",n),ae(),dn(n)}}var Cp=(()=>{class t{set selectedSearchTerms(n){this.form.controls.searchTerms.setValue(n)}constructor(n,r){this.fb=n,this.dialogRef=r,this.searchTerms=[],this.form=this.fb.group({searchTerms:this.fb.control([])})}close(){this.dialogRef.close()}submit(){this.dialogRef.close(this.form.value)}static{this.\u0275fac=function(r){return new(r||t)(Be(Nn),Be(On))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-cytoscape-term-result-filter-dialog"]],inputs:{searchTerms:"searchTerms",selectedSearchTerms:"selectedSearchTerms"},decls:15,vars:2,consts:[["mat-dialog-title",""],["mat-dialog-content",""],[3,"formGroup"],["formControlName","searchTerms",3,"multiple"],[3,"value"],["mat-dialog-actions",""],["mat-button","",3,"click"]],template:function(r,a){r&1&&(j(0,"h5",0),ie(1,"Cytoscape Plot Search Term Filter"),G(),j(2,"div",1)(3,"form",2)(4,"mat-form-field")(5,"mat-select",3),nn(6,AX,2,2,"mat-option",4,vt),G(),j(8,"mat-label"),ie(9,"Search Terms"),G()()()(),j(10,"div",5)(11,"button",6),ge("click",function(){return a.close()}),ie(12,"Cancel"),G(),j(13,"button",6),ge("click",function(){return a.submit()}),ie(14,"Apply"),G()()),r&2&&(ae(3),Ke("formGroup",a.form),ae(2),Ke("multiple",!0),ae(),tn(a.searchTerms))},dependencies:[Tn,Bn,Gn,Hn,An,qn,st,ct,Mn,Or,kt,kn,vn,lt],encapsulation:2})}}return t})();var CX=t=>({"disabled-icon":t});function EX(t,e){t&1&&(j(0,"button",11),ie(1,"No previous searches"),G())}function wX(t,e){if(t&1){let n=Ye();j(0,"button",13),ge("click",function(){we(n);let a=ue().$implicit,i=ue(3);return Oe(i.restoreSearches(a.searchQuery,a.searchID))}),ie(1),G()}if(t&2){let n=ue().$implicit;ae(),M0("",n.searchID,". ",n.termFounds.join(","),"")}}function OX(t,e){if(t&1&&We(0,wX,2,2,"button",12),t&2){let n=e.$implicit,r=ue(3);je(n.collate===r.collate.id?0:-1)}}function TX(t,e){if(t&1&&nn(0,OX,1,1,null,null,vt),t&2){let n=ue(2);tn(n.pastSearches)}}function BX(t,e){if(t&1&&(j(0,"button",10)(1,"mat-icon"),ie(2,"history"),G()(),j(3,"mat-menu",null,0),We(5,EX,2,0,"button",11)(6,TX,2,0),G()),t&2){let n=nt(4),r=ue();Ke("matMenuTriggerFor",n),ae(5),je(r.pastSearches.length===0?5:6)}}function kX(t,e){if(t&1){let n=Ye();j(0,"button",14),ge("click",function(){we(n);let a=ue();return Oe(a.navigateToEdit())}),j(1,"mat-icon"),ie(2,"edit"),G()()}}function DX(t,e){if(t&1&&Ne(0,"app-collate-header",7),t&2){let n=ue();Ke("collate",n.collate)}}function $X(t,e){if(t&1&&(j(0,"div",15),Ne(1,"app-collate-tags",16),G()),t&2){let n=ue(2);ae(),Ke("collageTags",n.collate.tags)}}function SX(t,e){if(t&1&&We(0,$X,2,1,"div",15),t&2){let n=ue();je(n.collate.settings.showTags?0:-1)}}function WX(t,e){if(t&1){let n=Ye();j(0,"button",25),ge("click",function(){we(n);let a=ue(2);return Oe(a.filterCytoscapePlot())}),j(1,"mat-icon"),ie(2,"filter_list"),G()()}}function NX(t,e){if(t&1&&Ne(0,"app-cytoscape-plot",21),t&2){let n=ue(2);Ke("renameCondition",n.collate.settings.renameSampleCondition)("projects",n.projects)("searchResultsMap",n.cytoscapePlotFilteredResults)}}function MX(t,e){if(t&1){let n=Ye();ie(0),j(1,"button",27),ge("click",function(){we(n);let a=ue().$implicit,i=ue(2);return Oe(i.exportData(a))}),j(2,"mat-icon"),ie(3,"download"),G()()}if(t&2){let n=ue().$implicit,r=ue(2);sn(" ",n," "),ae(),Ke("disabled",r.waitingForDownload)}}function RX(t,e){t&1&&(j(0,"mat-tab"),We(1,MX,4,2,"ng-template",26),G())}function IX(t,e){if(t&1&&Ne(0,"app-collate-project-list",24),t&2){let n=ue(2);Ke("searchTerm",n.selectedSearchTerm)("renameCondition",n.collate.settings.renameSampleCondition)("projects",n.projects)("filteredResults",n.filteredResults)}}function LX(t,e){if(t&1){let n=Ye();j(0,"div",17)(1,"button",18),ge("click",function(){we(n);let a=ue();return Oe(a.toggleCytoscapePlot())}),j(2,"mat-icon",19),ie(3,"account_tree"),G()(),We(4,WX,3,0,"button",20),G(),We(5,NX,1,3,"app-cytoscape-plot",21),j(6,"div",22)(7,"mat-tab-group",23),ge("selectedTabChange",function(){we(n);let a=ue();return Oe(a.filterDataBySearchTerm())}),Xt("selectedIndexChange",function(a){we(n);let i=ue();return yt(i.selectedIndex,a)||(i.selectedIndex=a),Oe(a)}),nn(8,RX,2,0,"mat-tab",null,vt),G()(),We(10,IX,1,4,"app-collate-project-list",24)}if(t&2){let n=ue();ae(2),Ke("ngClass",xi(6,CX,!n.showCytoscapePlot)),ae(2),je(n.showCytoscapePlot?4:-1),ae(),je(n.collate&&n.showCytoscapePlot&&n.cytoscapePlotFilteredResults?5:-1),ae(2),bt("selectedIndex",n.selectedIndex),Ke("mat-stretch-tabs",!1),ae(),tn(n.searchTerms),ae(2),je(n.collate?10:-1)}}var wc=(()=>{class t{set sessionId(n){n&&this.collate&&this.getSearchFromID(n),this._sessionId=n}get sessionId(){return this._sessionId}set collateId(n){n&&this.collateService.getCollate(n).subscribe(r=>{if(this.collate=r,this.title.setTitle(`${r.title} - C|nder`),this.projects=r.projects,r.settings||(r.settings={projectOrder:[],analysisGroupOrderMap:{},projectConditionColorMap:{},renameSampleCondition:{},projectAnalysisGroupVisibility:{},plotSettings:{},showTags:!1}),r.settings.plotSettings||(r.settings.plotSettings={}),r.settings.projectOrder&&(this.projects=r.settings.projectOrder.map(a=>r.projects.find(i=>i.id===a))),!this.collate?.settings.projectAnalysisGroupVisibility){this.collate.settings.projectAnalysisGroupVisibility={};for(let a of this.projects)this.collate.settings.projectAnalysisGroupVisibility[a.id]={}}if(this.collate?.settings.renameSampleCondition)this.sessionId&&this.getSearchFromID(this.sessionId);else{this.collate.settings.renameSampleCondition={};for(let a of this.projects)this.collate.settings.renameSampleCondition[a.id]={},this.web.getProjectUniqueConditions(a.id).subscribe(i=>{for(let o of i)this.collate.settings.renameSampleCondition[a.id][o.Condition]=o.Condition;console.log(this.collate.settings.renameSampleCondition)});this.sessionId&&this.getSearchFromID(this.sessionId)}console.log(this.projects)})}get selectedSearchTerm(){return this._selectedSearchTerm}set selectedSearchTerm(n){this._selectedSearchTerm=n}toggleCytoscapePlot(){this.showCytoscapePlot=!this.showCytoscapePlot,console.log(this.cytoscapePlotFilteredResults)}constructor(n,r,a,i,o,s,l,c,u){this.cdr=n,this.title=r,this.ws=a,this.sb=i,this.dialog=o,this.collateService=s,this.web=l,this.accounts=c,this.router=u,this.selectedCytoscapePlotSearchTerm=[],this.showCytoscapePlot=!1,this._sessionId=null,this.collate=null,this.projects=[],this.filteredResults={},this.searchTerms=[],this.selectedIndex=0,this.searchResults={},this.projectAnalysisGroups={},this.analysisGroupProjects={},this._selectedSearchTerm="",this.pastSearches=[],this.waitingForDownload=!1,this.cytoscapePlotFilteredResults={};let d=localStorage.getItem("cinderPastSearches");d&&(this.pastSearches=JSON.parse(d)),this.ws.searchWSConnection?.subscribe(f=>{if(f&&f.type==="export_status"&&this.web.cinderInstanceID===f.instance_id&&this.waitingForDownload)switch(f.status){case"error":this.waitingForDownload=!1;break;case"started":this.sb.open("Export started","Dismiss",{duration:2e3});break;case"in_progress":break;case"complete":this.waitingForDownload=!1,this.sb.open("Export complete","Dismiss",{duration:2e3});let h=`${this.web.baseURL}/api/search/download_temp_file/?token=${f.file}`;window.open(h,"_blank");break}})}associateAnalysisGroupsWithProjects(){return Xn(this,null,function*(){let n=yield this.web.getAnalysisGroupsFromProjects(this.projects).toPromise();this.projectAnalysisGroups={},this.analysisGroupProjects={},n&&n.forEach(r=>{let a=r.project;this.projectAnalysisGroups[a]||(this.projectAnalysisGroups[a]=[]),this.projectAnalysisGroups[a].push(r),this.analysisGroupProjects[r.id]=this.projects.find(i=>i.id===a)})})}distributeSearchResults(n){return Xn(this,null,function*(){yield this.associateAnalysisGroupsWithProjects(),this.searchResults={},this.searchTerms=Array.from(new Set(n.map(r=>r.search_term))),n.forEach(r=>{let a=r.analysis_group.id,i=this.analysisGroupProjects[a];i&&(this.searchResults[i.id]||(this.searchResults[i.id]=[]),this.searchResults[i.id].push(r))}),console.log(this.searchResults),this.searchTerms.sort((r,a)=>r.localeCompare(a)),this.selectedSearchTerm=this.searchTerms[0],this.filterDataBySearchTerm()})}getFilteredSearchResults(n){let r={};return console.log(n),Object.keys(this.searchResults).forEach(a=>{r[a]=this.searchResults[a].filter(i=>n.includes(i.search_term)),this.collate?.settings?.analysisGroupOrderMap&&Object.keys(this.collate.settings.analysisGroupOrderMap).forEach(i=>{let o=parseInt(i),s=this.collate?.settings.analysisGroupOrderMap[o];if(!r[o]||!s)return;let l=r[o].filter(c=>!s.includes(c.analysis_group.id));if(r[o]=r[o].filter(c=>s.includes(c.analysis_group.id)),r[o]=r[o].sort((c,u)=>s.indexOf(c.analysis_group.id)-s.indexOf(u.analysis_group.id)),r[o].concat(l),this.collate?.settings?.projectAnalysisGroupVisibility){let c=this.collate?.settings.projectAnalysisGroupVisibility[o];r[o]=r[o].filter(u=>!c||!(u.analysis_group.id in c)?!0:c[u.analysis_group.id])}})}),console.log(r),r}filterDataBySearchTerm(){this.selectedSearchTerm=this.searchTerms[this.selectedIndex],this.filteredResults=this.getFilteredSearchResults([this.selectedSearchTerm]),Object.keys(this.cytoscapePlotFilteredResults).length===0&&this.filteredResults&&(console.log(this.filteredResults),this.cytoscapePlotFilteredResults=Object.assign({},this.filteredResults))}getSearchFromID(n){this.web.getSearchSession(n).subscribe(r=>{this.searchSession=r}),this.web.getSearchResults(n,99999).subscribe(r=>{if(!this.collate)return;console.log(r.results);let a=Array.from(new Set(r.results.map(o=>o.search_term)));this.pastSearches.find(o=>o.searchID===n)||(this.pastSearches.push({searchQuery:null,termFounds:a,collate:this.collate.id,searchID:n}),this.pastSearches=this.pastSearches.slice(-20),localStorage.setItem("cinderPastSearches",JSON.stringify(this.pastSearches))),this.distributeSearchResults(r.results).then()})}restoreSearches(n,r){this.web.getSearchSession(r).subscribe(a=>{this.searchSession=a}),n?this.distributeSearchResults(n.results).then():this.web.getSearchResults(r,99999).subscribe(a=>{this.distributeSearchResults(a.results).then()})}navigateToEdit(){this.collate&&this.router.navigate([`/collate/edit/${this.collate.id}`])}openQRCodeDialog(){let n=window.location.href,r=this.dialog.open(bu);r.componentInstance.url=n}navigateToHome(){this.router.navigate(["/"])}exportData(n){this.web.exportSearchData(this.searchSession.id,n,1e-8,1e-8,this.web.searchSessionID).subscribe(r=>{this.waitingForDownload=!0})}openVisibilityDialog(){let n=this.dialog.open(ms);this.web.getAnalysisGroupsFromProjects(this.projects).subscribe(r=>{let a={};r.forEach(o=>{a[o.project]||(a[o.project]=[]),a[o.project].push(o)}),this.collate?.settings?.analysisGroupOrderMap&&Object.keys(this.collate.settings.analysisGroupOrderMap).forEach(o=>{let s=parseInt(o),l=this.collate?.settings.analysisGroupOrderMap[s];if(!l||!a[s])return;let c=a[s].filter(u=>!l.includes(u.id));a[s]=a[s].filter(u=>l.includes(u.id)),a[s]=a[s].sort((u,d)=>l.indexOf(u.id)-l.indexOf(d.id)),a[s]=a[s].concat(c)}),n.componentInstance.projectAnalysisGroupMap=a,n.componentInstance.projects=this.projects;let i={};this.collate?.settings?.projectAnalysisGroupVisibility&&(i=this.collate.settings.projectAnalysisGroupVisibility);for(let o in a){i[o]||(i[o]={});for(let s of a[o])s.id in i[o]||(i[o][s.id]=!0)}n.componentInstance.projectAnalysisGroupVisibilityMap=Object.assign({},i)}),n.afterClosed().subscribe(r=>{this.collate&&r&&(this.collate.settings.projectAnalysisGroupVisibility=r,this.filteredResults=this.getFilteredSearchResults([this.selectedSearchTerm]))})}filterCytoscapePlot(){let n=this.dialog.open(Cp);n.componentInstance.searchTerms=this.searchTerms,n.componentInstance.selectedSearchTerms=this.selectedCytoscapePlotSearchTerm,n.afterClosed().subscribe(r=>{if(r){if(console.log(r),r.searchTerms.length>0){let a=this.getFilteredSearchResults(r.searchTerms);this.cytoscapePlotFilteredResults=Sn({},a)}else this.cytoscapePlotFilteredResults={};console.log(this.cytoscapePlotFilteredResults),this.cdr.detectChanges(),this.collateService.collateRedrawSubject.next(!0)}})}static{this.\u0275fac=function(r){return new(r||t)(Be(Ar),Be(F0),Be(zo),Be(Ut),Be(Cr),Be(Zt),Be(Zn),Be(Qt),Be(ka))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-view"]],inputs:{sessionId:"sessionId",collateId:"collateId"},decls:18,vars:9,consts:[["previousSearch","matMenu"],["href","/#/home"],[3,"width","height","ngSrc"],[1,"spacer"],["mat-icon-button","","matTooltip","Open QR code dialog",3,"click"],["mat-icon-button","","matTooltip","Change analysis group visibility",3,"click"],["mat-icon-button","","matTooltip","Edit collate"],[3,"collate"],[2,"display","flex","justify-content","center"],[3,"searchResultID","projects"],["mat-icon-button","","matTooltip","View previous searches",3,"matMenuTriggerFor"],["mat-menu-item","","disabled",""],["mat-menu-item",""],["mat-menu-item","",3,"click"],["mat-icon-button","","matTooltip","Edit collate",3,"click"],[2,"display","flex","justify-content","center","padding","20px"],[3,"collageTags"],[2,"display","flex"],["mat-icon-button","","matTooltip","Toggle Cytoscape Plot",3,"click"],[3,"ngClass"],["mat-icon-button","","matTooltip","Filter Cytoscape Plot Search Terms"],[3,"renameCondition","projects","searchResultsMap"],[2,"padding","20px"],[3,"selectedTabChange","selectedIndexChange","selectedIndex","mat-stretch-tabs"],[3,"searchTerm","renameCondition","projects","filteredResults"],["mat-icon-button","","matTooltip","Filter Cytoscape Plot Search Terms",3,"click"],["mat-tab-label",""],["mat-icon-button","","matTooltip","Export data",3,"click","disabled"]],template:function(r,a){r&1&&(j(0,"mat-toolbar")(1,"mat-toolbar-row")(2,"a",1),Ne(3,"img",2),G(),Ne(4,"span",3),We(5,BX,7,2),j(6,"button",4),ge("click",function(){return a.openQRCodeDialog()}),j(7,"mat-icon"),ie(8,"qr_code"),G()(),j(9,"button",5),ge("click",function(){return a.openVisibilityDialog()}),j(10,"mat-icon"),ie(11,"visibility"),G()(),We(12,kX,3,0,"button",6),G()(),We(13,DX,1,1,"app-collate-header",7)(14,SX,1,1),j(15,"div",8)(16,"app-collate-search",9),ge("searchResultID",function(o){return a._sessionId=o,a.getSearchFromID(o)}),G()(),We(17,LX,11,8)),r&2&&(ae(3),Ke("width",25)("height",25)("ngSrc","/assets/logo.png"),ae(2),je(a.collate?5:-1),ae(7),je(a.accounts.loggedIn?12:-1),ae(),je(a.collate?13:-1),ae(),je(a.collate&&a.collate.settings?14:-1),ae(2),Ke("projects",a.projects),ae(),je(a.searchTerms.length>0?17:-1))},dependencies:[pu,ds,is,os,hs,ot,Jt,Vo,qo,ps,U0,Ia,Ra,La,lu,Wa,Ap,I0],styles:[".disabled-icon[_ngcontent-%COMP%]{color:red}"]})}}return t})();var Ep=(t,e)=>e.id;function UX(t,e){if(t&1){let n=Ye();j(0,"mat-chip",2),ge("click",function(){let a=we(n).$implicit,i=ue(2);return Oe(i.removeProject(a))}),ie(1),G()}if(t&2){let n=e.$implicit;ae(),sn(" ",n.name," ")}}function FX(t,e){if(t&1&&(j(0,"div"),ie(1),j(2,"mat-chip-set"),nn(3,UX,2,1,"mat-chip",null,Ep),G()()),t&2){let n=ue();ae(),sn(" Selected Projects: ",n.selectedMultipleProjects.length," "),ae(2),tn(n.selectedMultipleProjects)}}function jX(t,e){if(t&1&&(j(0,"mat-list-option",4),ie(1),G()),t&2){let n=e.$implicit;Ke("value",n),ae(),dn(n.name)}}function YX(t,e){if(t&1){let n=Ye();j(0,"div")(1,"mat-selection-list",3),nn(2,jX,2,2,"mat-list-option",4,Ep),G(),j(4,"mat-paginator",5),ge("page",function(a){we(n);let i=ue(2);return Oe(i.handleProjectPageEvent(a))}),G()()}if(t&2){let n=ue(2);ae(),Ke("multiple",!1),ae(),tn(n.projectQuery.results),ae(2),Ke("pageSize",n.projectPageSize)("length",n.projectQuery.count)("pageIndex",n.projectPageIndex)}}function zX(t,e){t&1&&(j(0,"p"),ie(1,"No projects found."),G())}function VX(t,e){if(t&1&&We(0,YX,5,4,"div")(1,zX,2,0,"p"),t&2){let n=ue();je(n.projectQuery.count>0?0:1)}}var wp=(()=>{class t{constructor(n,r){this.fb=n,this.web=r,this.multipleSelection=!1,this.selectedProjects=new xn,this.formProjectSearch=this.fb.group({searchTerm:new Lt("",It.required),selectedProjects:new Lt([])}),this.projectPageSize=5,this.projectPageIndex=0,this.projectQuery=void 0,this.selectedMultipleProjects=[],this.formProjectSearch.controls.searchTerm.valueChanges.subscribe(a=>{a&&this.fetchProjects(a,this.projectPageSize,0)}),this.formProjectSearch.controls.selectedProjects.valueChanges.subscribe(a=>{if(a){for(let i of a)this.selectedMultipleProjects.includes(i)||this.selectedMultipleProjects.push(i);this.selectedProjects.emit(this.selectedMultipleProjects)}})}fetchProjects(n,r,a){let i=a*r;this.web.getProjects(void 0,r,i,n,void 0).subscribe(o=>{this.projectQuery=o})}handleProjectPageEvent(n){this.projectPageIndex=n.pageIndex,this.fetchProjects(this.formProjectSearch.controls.searchTerm.value||"",n.pageSize,n.pageIndex)}removeProject(n){this.selectedMultipleProjects=this.selectedMultipleProjects.filter(r=>r!==n),this.selectedProjects.emit(this.selectedMultipleProjects)}static{this.\u0275fac=function(r){return new(r||t)(Be(Nn),Be(Zn))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-project-search"]],inputs:{multipleSelection:"multipleSelection"},outputs:{selectedProjects:"selectedProjects"},decls:7,vars:3,consts:[[2,"display","flex","flex-direction","column","gap","10px",3,"formGroup"],["matInput","","formControlName","searchTerm","placeholder","Search Project Name","type","search"],[3,"click"],["formControlName","selectedProjects",3,"multiple"],[3,"value"],[3,"page","pageSize","length","pageIndex"]],template:function(r,a){r&1&&(j(0,"form",0)(1,"mat-form-field"),Ne(2,"input",1),j(3,"mat-label"),ie(4,"Search For Specific Projects"),G()(),We(5,FX,5,1,"div")(6,VX,2,1),G()),r&2&&(Ke("formGroup",a.formProjectSearch),ae(5),je(a.selectedMultipleProjects.length>0?5:-1),ae(),je(a.projectQuery?6:-1))},dependencies:[Gn,Hn,Vn,An,qn,st,ct,Mn,Jn,lt,Yo,jo,Lo,Io,Uo],encapsulation:2})}}return t})();var Op=(()=>{class t{constructor(n,r,a){this.dialogRef=n,this.fb=r,this.web=a,this.formProjectSearch=this.fb.group({searchTerm:new Lt("",It.required),selectedProjects:new Lt([])}),this.projectPageSize=5,this.projectPageIndex=0,this.projectQuery=void 0,this.selectedMultipleProjects=[],this.multipleSelection=!0,this.web.getProjects(void 0,this.projectPageSize,0,void 0).subscribe(i=>{this.projectQuery=i}),this.formProjectSearch.controls.searchTerm.valueChanges.subscribe(i=>{i&&this.web.getProjects(void 0,this.projectPageSize,0,i).subscribe(o=>{this.projectQuery=o})})}handleSelectedProjects(n){this.selectedMultipleProjects=n}close(){this.dialogRef.close()}save(){this.dialogRef.close(this.selectedMultipleProjects)}static{this.\u0275fac=function(r){return new(r||t)(Be(On),Be(Nn),Be(Zn))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-project-add-dialog"]],decls:11,vars:1,consts:[["mat-dialog-title",""],["mat-dialog-content",""],[3,"selectedProjects"],["mat-dialog-actions",""],["mat-button","",3,"click"]],template:function(r,a){r&1&&(j(0,"h2",0),ie(1,"Project Add"),G(),j(2,"div",1)(3,"app-project-search",2),ge("selectedProjects",function(o){return a.handleSelectedProjects(o)}),G(),j(4,"small"),ie(5),G()(),j(6,"div",3)(7,"button",4),ge("click",function(){return a.save()}),ie(8,"Submit"),G(),j(9,"button",4),ge("click",function(){return a.close()}),ie(10,"Close"),G()()),r&2&&(ae(5),sn("Selected ",a.selectedMultipleProjects.length," Projects."))},dependencies:[wp,Tn,Bn,kn,vn],encapsulation:2})}}return t})();var Tp=(t,e)=>e.id;function qX(t,e){if(t&1&&(j(0,"mat-list-item",5)(1,"mat-icon",7),ie(2,"notes"),G(),j(3,"div",8),ie(4),G(),Ne(5,"div",9),G()),t&2){let n=e.$implicit;ae(4),dn(n.name)}}function HX(t,e){if(t&1){let n=Ye();j(0,"div",5)(1,"div",6)(2,"b"),ie(3),G()(),j(4,"div",4),ge("cdkDropListDropped",function(a){let i=we(n).$implicit,o=ue(2);return Oe(o.drop(a,i.id))}),nn(5,qX,6,1,"mat-list-item",5,Tp),G(),Ne(7,"mat-divider"),G()}if(t&2){let n=e.$implicit,r=ue(2);ae(3),dn(n.name),ae(2),tn(r.projectAnalysisGroupMap[n.id])}}function GX(t,e){if(t&1){let n=Ye();j(0,"mat-list")(1,"div",4),ge("cdkDropListDropped",function(a){we(n);let i=ue();return Oe(i.dropProject(a))}),nn(2,HX,8,1,"div",5,Tp),G()()}if(t&2){let n=ue();ae(2),tn(n.projects)}}var Bp=(()=>{class t{set projects(n){this._projects=n.slice()}get projects(){return this._projects}set projectAnalysisGroupMap(n){this._projectAnalysisGroupMap=n}get projectAnalysisGroupMap(){return this._projectAnalysisGroupMap}constructor(n){this.dialogRef=n,this._projectAnalysisGroupMap={},this._projects=[]}save(){this.dialogRef.close({projects:this.projects,projectAnalysisGroupMap:this.projectAnalysisGroupMap})}cancel(){this.dialogRef.close()}drop(n,r){Qr(this.projectAnalysisGroupMap[r],n.previousIndex,n.currentIndex)}dropProject(n){Qr(this.projects,n.previousIndex,n.currentIndex)}static{this.\u0275fac=function(r){return new(r||t)(Be(On))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-project-analysis-group-reorder-dialog"]],inputs:{projects:"projects",projectAnalysisGroupMap:"projectAnalysisGroupMap"},decls:9,vars:1,consts:[["mat-dialog-title",""],["mat-dialog-content",""],["mat-dialog-actions",""],["mat-button","",3,"click"],["cdkDropList","",3,"cdkDropListDropped"],["cdkDrag",""],["mat-subheader","","cdkDragHandle",""],["cdkDragHandle","","matListItemIcon",""],["matListItemTitle",""],["matListItemLine",""]],template:function(r,a){r&1&&(j(0,"h1",0),ie(1,"Analysis Group Reorder"),G(),j(2,"div",1),We(3,GX,4,0,"mat-list"),G(),j(4,"div",2)(5,"button",3),ge("click",function(){return a.cancel()}),ie(6,"Close"),G(),j(7,"button",3),ge("click",function(){return a.save()}),ie(8,"Save"),G()()),r&2&&(ae(3),je(a.projects.length>0?3:-1))},dependencies:[Tn,Bn,nu,ru,tu,Ro,ot,eu,cs,Br,Tr,kn,vn],encapsulation:2})}}return t})();var JX=["hueSlider"],ZX=["alphaSlider"];function QX(t,e){if(t&1){let n=Ye();j(0,"div",10),ge("newValue",function(a){we(n);let i=ue();return Oe(i.onSliderChange("saturation-lightness",a))}),j(1,"div",11),Ne(2,"div"),G()()}if(t&2){let n=ue();xr("background-color",n.hueSliderColor),Ke("rgX",1)("rgY",1),ae(),xr("top",n.slider==null?null:n.slider.v,"px")("left",n.slider==null?null:n.slider.s,"px")}}function e5(t,e){if(t&1&&(j(0,"div",12),Ne(1,"div",13)(2,"div",14),G()),t&2){let n=ue();ae(2),xr("background-color",n.selectedColor)}}function n5(t,e){if(t&1){let n=Ye();j(0,"div",15,1),ge("newValue",function(a){we(n);let i=ue();return Oe(i.onSliderChange("hue",a))}),j(2,"div",16)(3,"div"),Ne(4,"div"),G()()()}if(t&2){let n=ue();Ke("rgX",1),ae(2),xr("left",n.slider==null?null:n.slider.h,"px")}}function t5(t,e){if(t&1){let n=Ye();j(0,"div",17,2),ge("newValue",function(a){we(n);let i=ue();return Oe(i.onSliderChange("alpha",a))}),Ne(2,"div",18),j(3,"div",16)(4,"div"),Ne(5,"div"),G()()()}if(t&2){let n=ue();Ke("rgX",1),ae(2),Ke("ngStyle",n.getBackgroundColor(n.alphaSliderColor)),ae(),xr("left",n.slider==null?null:n.slider.a,"px")}}var r5=["dialog"],$p=t=>({background:t});function a5(t,e){t&1&&Ne(0,"div",12)}function i5(t,e){if(t&1){let n=Ye();Yn(0),j(1,"div",9)(2,"div",10),ge("click",function(){let a=we(n).$implicit,i=ue(2);return Oe(i.onColorClick(a))}),We(3,a5,1,0,"div",11),G()(),zn()}if(t&2){let n=e.$implicit,r=e.index,a=ue(2);ae(2),$o("colornull",!n),Ke("ngStyle",a.getBackgroundColor(n)),ae(),Ke("ngIf",r==a.indexSeleccionado)}}function o5(t,e){if(t&1&&Ne(0,"div",18),t&2){let n=ue(3);Ke("ngStyle",n.getBackgroundColor(n.color))}}function s5(t,e){if(t&1){let n=Ye();j(0,"div",13),ge("click",function(){we(n);let a=ue(2);return Oe(a.addColor())}),We(1,o5,1,1,"div",14),ko(),j(2,"svg",15),Ne(3,"path",16)(4,"path",17),G()()}if(t&2){let n=ue(2);ae(),Ke("ngIf",n.indexSeleccionado===void 0)}}function c5(t,e){if(t&1){let n=Ye();j(0,"color-picker",19),ge("colorChange",function(a){we(n);let i=ue(2);return Oe(i.onChangeColorPicker(a))})("onAlphaChange",function(a){we(n);let i=ue(2);return Oe(i.onAlphaChange(a))}),G()}if(t&2){let n=ue(2);Ke("controls",n.colorPickerControls)("color",n.hsva)}}function l5(t,e){if(t&1&&(Yn(0),j(1,"div",5),We(2,i5,4,4,"ng-container",6)(3,s5,5,1,"div",7)(4,c5,1,2,"color-picker",8),G(),zn()),t&2){let n=ue();ae(),Ke("@colorsAnimation",n.colorsAnimationEffect),ae(),Ke("ngForOf",n.palette),ae(),Ke("ngIf",!n.hideColorPicker&&n.colorPickerControls!="only-alpha"),ae(),Ke("ngIf",!n.hideColorPicker&&n.colorPickerControls=="only-alpha")}}function u5(t,e){t&1&&Ne(0,"div",12)}function d5(t,e){if(t&1){let n=Ye();Yn(0),j(1,"div",9)(2,"div",25),ge("click",function(){let a=we(n).$implicit,i=ue(2);return Oe(i.changeColor(a))}),We(3,u5,1,0,"div",11),G()(),zn()}if(t&2){let n=e.$implicit,r=ue(2);ae(2),$o("colornull",!n),Ke("ngStyle",xi(4,$p,n)),ae(),Ke("ngIf",r.isSelected(n))}}function f5(t,e){if(t&1){let n=Ye();Yn(0),j(1,"div",5)(2,"div",20)(3,"div",21),ge("click",function(){we(n);let a=ue();return Oe(a.onClickBack())}),ko(),j(4,"svg",22),Ne(5,"path",23)(6,"path",24),G()()(),We(7,d5,4,6,"ng-container",6),G(),zn()}if(t&2){let n=ue();ae(),Ke("@colorsAnimation",n.colorsAnimationEffect),ae(6),Ke("ngForOf",n.variants)}}function h5(t,e){if(t&1){let n=Ye();Yn(0),j(1,"div",26)(2,"div",27),ge("click",function(){we(n);let a=ue();return Oe(a.onClickBack())}),ko(),j(3,"svg",22),Ne(4,"path",23)(5,"path",24),G()(),T0(),j(6,"button",28),ge("click",function(){we(n);let a=ue();return Oe(a.emitClose("cancel"))}),ie(7),G(),j(8,"button",28),ge("click",function(){we(n);let a=ue();return Oe(a.emitClose("accept"))}),ie(9),G()(),j(10,"div",29)(11,"color-picker",30),ge("sliderChange",function(a){we(n);let i=ue();return Oe(i.onChangeColorPicker(a))}),G()(),zn()}if(t&2){let n=ue();ae(7),sn(" ",n.cancelLabel," "),ae(2),sn(" ",n.acceptLabel," "),ae(2),Ke("controls",n.colorPickerControls)("color",n.hsva)}}function p5(t,e){if(t&1){let n=Ye();j(0,"div",31)(1,"p",32),ge("click",function(){we(n);let a=ue();return Oe(a.nextFormat())}),ie(2),G(),j(3,"div",33)(4,"input",34,1),ge("keyup",function(){we(n);let a=nt(5),i=ue();return Oe(i.changeColorManual(a.value))})("keydown.enter",function(){we(n);let a=ue();return Oe(a.emitClose("accept"))}),G()()()}if(t&2){let n=ue();ae(2),dn(n.colorFormats[n.format]),ae(2),xr("font-size",n.color&&n.color.length>23?9:10,"px")("letter-spacing",n.color&&n.color.length>16?0:1.5,"px"),Ke("placeholder",n.placeholder)("value",n.color)}}var v0=["hex","rgba","hsla","cmyk"],Et=function(t){return t[t.HEX=0]="HEX",t[t.RGBA=1]="RGBA",t[t.HSLA=2]="HSLA",t[t.CMYK=3]="CMYK",t}(Et||{}),kp=[{color:"rojo",preview:"#E57373",variants:["#FFEBEE","#FFCDD2","#EF9A9A","#E57373","#EF5350","#F44336","#E53935","#D32F2F","#C62828"]},{color:"rosa",preview:"#F06292",variants:["#FCE4EC","#F8BBD0","#F48FB1","#F06292","#EC407A","#E91E63","#D81B60","#C2185B","#AD1457"]},{color:"purpura",preview:"#BA68C8",variants:["#F3E5F5","#E1BEE7","#CE93D8","#BA68C8","#AB47BC","#9C27B0","#8E24AA","#7B1FA2","#6A1B9A"]},{color:"purpura oscuro",preview:"#9575CD",variants:["#EDE7F6","#D1C4E9","#B39DDB","#9575CD","#7E57C2","#673AB7","#5E35B1","#512DA8","#4527A0"]},{color:"indigo",preview:"#7986CB",variants:["#E8EAF6","#C5CAE9","#9FA8DA","#7986CB","#5C6BC0","#3F51B5","#3949AB","#303F9F","#283593"]},{color:"azul",preview:"#64B5F6",variants:["#E3F2FD","#BBDEFB","#90CAF9","#64B5F6","#42A5F5","#2196F3","#1E88E5","#1976D2","#1565C0"]},{color:"celeste",preview:"#4FC3F7",variants:["#E1F5FE","#B3E5FC","#81D4FA","#4FC3F7","#29B6F6","#03A9F4","#039BE5","#0288D1","#0277BD"]},{color:"cyan",preview:"#4DD0E1",variants:["#E0F7FA","#B2EBF2","#80DEEA","#4DD0E1","#26C6DA","#00BCD4","#00ACC1","#0097A7","#00838F"]},{color:"color",preview:"#4DB6AC",variants:["#E0F2F1","#B2DFDB","#80CBC4","#4DB6AC","#26A69A","#009688","#00897B","#00796B","#00695C"]},{color:"verde",preview:"#81C784",variants:["#E8F5E9","#C8E6C9","#A5D6A7","#81C784","#66BB6A","#4CAF50","#43A047","#388E3C","#2E7D32"]},{color:"verde claro",preview:"#AED581",variants:["#F1F8E9","#DCEDC8","#C5E1A5","#AED581","#9CCC65","#8BC34A","#7CB342","#689F38","#558B2F"]},{color:"lima",preview:"#DCE775",variants:["#F9FBE7","#F0F4C3","#E6EE9C","#DCE775","#D4E157","#CDDC39","#C0CA33","#AFB42B","#9E9D24"]},{color:"amarillo",preview:"#FFF176",variants:["#FFFDE7","#FFF9C4","#FFF59D","#FFF176","#FFEE58","#FFEB3B","#FDD835","#FBC02D","#F9A825"]},{color:"ambar",preview:"#FFD54F",variants:["#FFF8E1","#FFECB3","#FFE082","#FFD54F","#FFCA28","#FFC107","#FFB300","#FFA000","#FF8F00"]},{color:"naranja",preview:"#FFB74D",variants:["#FFF3E0","#FFE0B2","#FFCC80","#FFB74D","#FFA726","#FF9800","#FB8C00","#F57C00","#EF6C00"]},{color:"naranja oscuro",preview:"#FF8A65",variants:["#FBE9E7","#FFCCBC","#FFAB91","#FF8A65","#FF7043","#FF5722","#F4511E","#E64A19","#D84315"]},{color:"marron",preview:"#A1887F",variants:["#EFEBE9","#D7CCC8","#BCAAA4","#A1887F","#8D6E63","#795548","#6D4C41","#5D4037","#4E342E"]},{color:"escala de grises",preview:"#E0E0E0",variants:["#FFFFFF","#FAFAFA","#F5F5F5","#EEEEEE","#E0E0E0","#BDBDBD","#9E9E9E","#757575","#616161","#424242","#000000"]},{color:"azul gris",preview:"#90A4AE",variants:["#ECEFF1","#CFD8DC","#B0BEC5","#90A4AE","#78909C","#607D8B","#546E7A","#455A64","#37474F"]}],cr=class{constructor(e,n,r,a){this.r=e,this.g=n,this.b=r,this.a=a}denormalize(){return this.r=Math.round(this.r*255),this.g=Math.round(this.g*255),this.b=Math.round(this.b*255),this}toString(){return this.denormalize(),"rgb"+(this.a!=1?"a(":"(")+this.r+", "+this.g+", "+this.b+(this.a!=1?", "+this.a.toPrecision(2)+")":")")}},qt=class{constructor(e,n,r,a){this.h=e,this.s=n,this.v=r,this.a=a,this.onChange=new xn(!0)}onColorChange(e){this.s=e.s/e.rgX,this.v=e.v/e.rgY}onHueChange(e){this.h=e.v/e.rgX}onValueChange(e){this.v=e.v/e.rgX}onAlphaChange(e){this.a=e.v/e.rgX}},va=class{constructor(e,n,r,a){this.h=e,this.s=n,this.l=r,this.a=a}denormalize(){return this.h=Math.round(this.h*360),this.s=Math.round(this.s*100),this.l=Math.round(this.l*100),this}toString(){return"hsl"+(this.a!=1?"a(":"(")+this.h+", "+this.s+"%, "+this.l+"%"+(this.a!=1?", "+this.a.toPrecision(2)+")":")")}},Jr=class{constructor(e,n,r,a,i=1){this.c=e,this.m=n,this.y=r,this.k=a,this.a=i}denormalize(){return this.c=Math.round(this.c*100),this.m=Math.round(this.m*100),this.y=Math.round(this.y*100),this.k=Math.round(this.k*100),this}toString(){return this.denormalize(),"cmyk("+this.c+", "+this.m+", "+this.y+", "+this.k+")"}},b0=class{constructor(e){e&&(this.preview=e.preview,this.variants=e.variants)}},Tc=(()=>{class t{constructor(){}toFormat(n,r){var a="";if(n)switch(r){case Et.HEX:var o=this.hsvaToRgba(n);o.denormalize();var a=this.rgbaToHex(o,!0);break;case Et.HSLA:var i=this.hsva2hsla(n);i.denormalize();var a=i.toString();break;case Et.RGBA:var o=this.hsvaToRgba(n),a=o.toString();break;case Et.CMYK:var s=this.hsvaToCmyk(n),a=s.toString();break}return a}stringToFormat(n,r){var a=this.stringToHsva(n,!0);return this.toFormat(a,r)}hsva2hsla(n){let r=n.h,a=n.s,i=n.v,o=n.a;if(i===0)return new va(r,0,0,o);if(a===0&&i===1)return new va(r,1,1,o);{let s=i*(2-a)/2;return new va(r,i*a/(1-Math.abs(2*s-1)),s,o)}}hsla2hsva(n){let r=Math.min(n.h,1),a=Math.min(n.s,1),i=Math.min(n.l,1),o=Math.min(n.a,1);if(i===0)return new qt(r,0,0,o);{let s=i+a*(1-Math.abs(2*i-1))/2;return new qt(r,2*(s-i)/s,s,o)}}hsvaToRgba(n){let r,a,i,o=n.h,s=n.s,l=n.v,c=n.a,u=Math.floor(o*6),d=o*6-u,f=l*(1-s),h=l*(1-d*s),p=l*(1-(1-d)*s);switch(u%6){case 0:r=l,a=p,i=f;break;case 1:r=h,a=l,i=f;break;case 2:r=f,a=l,i=p;break;case 3:r=f,a=h,i=l;break;case 4:r=p,a=f,i=l;break;case 5:r=l,a=f,i=h;break;default:r=0,a=0,i=0}return new cr(r,a,i,c)}cmykToRgb(n){let r=(1-n.c)*(1-n.k),a=(1-n.m)*(1-n.k),i=(1-n.y)*(1-n.k);return new cr(r,a,i,n.a)}rgbaToCmyk(n){let r=1-Math.max(n.r,n.g,n.b);if(r===1)return new Jr(0,0,0,1,n.a);{let a=(1-n.r-r)/(1-r),i=(1-n.g-r)/(1-r),o=(1-n.b-r)/(1-r);return new Jr(a,i,o,r,n.a)}}hsvaToCmyk(n){let r=this.hsvaToRgba(n);return this.rgbaToCmyk(r)}rgbaToHsva(n){let r,a,i=Math.min(n.r,1),o=Math.min(n.g,1),s=Math.min(n.b,1),l=Math.min(n.a,1),c=Math.max(i,o,s),u=Math.min(i,o,s),d=c,f=c-u;if(a=c===0?0:f/c,c===u)r=0;else{switch(c){case i:r=(o-s)/f+(o<s?6:0);break;case o:r=(s-i)/f+2;break;case s:r=(i-o)/f+4;break;default:r=0}r/=6}return new qt(r,a,d,l)}rgbaToHex(n,r){let a="#"+(16777216|n.r<<16|n.g<<8|n.b).toString(16).substr(1);return n.a!=1&&(a+=(256|Math.round(n.a*255)).toString(16).substr(1)),a}normalizeCMYK(n){return new Jr(n.c/100,n.m/100,n.y/100,n.k/100,n.a)}denormalizeCMYK(n){return new Jr(Math.floor(n.c*100),Math.floor(n.m*100),Math.floor(n.y*100),Math.floor(n.k*100),n.a)}denormalizeRGBA(n){return new cr(Math.round(n.r*255),Math.round(n.g*255),Math.round(n.b*255),n.a)}stringToHsva(n="",r=!0){let a=null;n=(n||"").toLowerCase();let i=[{re:/(rgb)a?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*%?,\s*(\d{1,3})\s*%?(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(o){return new cr(parseInt(o[2],10)/255,parseInt(o[3],10)/255,parseInt(o[4],10)/255,isNaN(parseFloat(o[5]))?1:parseFloat(o[5]))}},{re:/(hsl)a?\(\s*(\d{1,3})\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(o){return new va(parseInt(o[2],10)/360,parseInt(o[3],10)/100,parseInt(o[4],10)/100,isNaN(parseFloat(o[5]))?1:parseFloat(o[5]))}},{re:/cmyk?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*%?,\s*(\d{1,3})\s*%?(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(o){return new Jr(parseInt(o[1],10)/100,parseInt(o[2],10)/100,parseInt(o[3],10)/100,parseInt(o[4],10)/100)}}];r?i.push({re:/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})?$/,parse:function(o){return new cr(parseInt(o[1],16)/255,parseInt(o[2],16)/255,parseInt(o[3],16)/255,parseInt(o[4]||"FF",16)/255)}}):i.push({re:/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,parse:function(o){return new cr(parseInt(o[1],16)/255,parseInt(o[2],16)/255,parseInt(o[3],16)/255,1)}}),i.push({re:/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,parse:function(o){return new cr(parseInt(o[1]+o[1],16)/255,parseInt(o[2]+o[2],16)/255,parseInt(o[3]+o[3],16)/255,1)}});for(let o in i)if(i.hasOwnProperty(o)){let s=i[o],l=s.re.exec(n),c=l&&s.parse(l);if(c){if(c instanceof cr)a=this.rgbaToHsva(c);else if(c instanceof va)a=this.hsla2hsva(c);else if(c instanceof Jr){let u=this.cmykToRgb(c);a=this.rgbaToHsva(u)}return a}}return a}outputFormat(n){return this.hsvaToRgba(n).toString()}getFormatByString(n){if(n){n=n.toLowerCase();let r=/(#([\da-f]{3}(?:[\da-f]{3})?(?:[\da-f]{2})?))/,a=/(rgba\((\d{1,3},\s?){3}(1|0?\.\d+)\)|rgb\(\d{1,3}(,\s?\d{1,3}){2}\))/,i=/(hsla\((\d{1,3}%?,\s?){3}(1|0?\.\d+)\)|hsl\(\d{1,3}%?(,\s?\d{1,3}%?){2}\))/,o=/(cmyk\(\d{1,3}(,\s?\d{1,3}){3}\))/;if(r.test(n))return"hex";if(a.test(n))return"rgba";if(i.test(n))return"hsla";if(o.test(n))return"cmyk"}return"hex"}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275prov=kc({token:t,factory:t.\u0275fac}),t})(),Oc=class{constructor(e,n,r,a){this.h=e,this.s=n,this.v=r,this.a=a}},y0=class{constructor(e,n,r,a){this.h=e,this.s=n,this.v=r,this.a=a}},m5=(()=>{class t{mouseDown(n){this.start(n)}touchStart(n){this.start(n)}constructor(n){this.elRef=n,this.dragEnd=new xn,this.dragStart=new xn,this.newValue=new xn,this.listenerMove=r=>this.move(r),this.listenerStop=()=>this.stop()}move(n){n.preventDefault(),this.setCursor(n)}start(n){this.setCursor(n),n.stopPropagation(),document.addEventListener("mouseup",this.listenerStop),document.addEventListener("touchend",this.listenerStop),document.addEventListener("mousemove",this.listenerMove),document.addEventListener("touchmove",this.listenerMove),this.dragStart.emit()}stop(){document.removeEventListener("mouseup",this.listenerStop),document.removeEventListener("touchend",this.listenerStop),document.removeEventListener("mousemove",this.listenerMove),document.removeEventListener("touchmove",this.listenerMove),this.dragEnd.emit()}getX(n){let r=this.elRef.nativeElement.getBoundingClientRect();return(n.pageX!==void 0?n.pageX:n.touches[0].pageX)-r.left-window.pageXOffset}getY(n){let r=this.elRef.nativeElement.getBoundingClientRect();return(n.pageY!==void 0?n.pageY:n.touches[0].pageY)-r.top-window.pageYOffset}setCursor(n){let r=this.elRef.nativeElement.offsetWidth,a=this.elRef.nativeElement.offsetHeight,i=Math.max(0,Math.min(this.getX(n),r)),o=Math.max(0,Math.min(this.getY(n),a));this.rgX!==void 0&&this.rgY!==void 0?this.newValue.emit({s:i/r,v:1-o/a,rgX:this.rgX,rgY:this.rgY}):this.rgX===void 0&&this.rgY!==void 0?this.newValue.emit({v:o/a,rgY:this.rgY}):this.rgX!==void 0&&this.rgY===void 0&&this.newValue.emit({v:i/r,rgX:this.rgX})}}return t.\u0275fac=function(n){return new(n||t)(Be(Dc))},t.\u0275dir=Sc({type:t,selectors:[["","slider",""]],hostBindings:function(n,r){n&1&&ge("mousedown",function(i){return r.mouseDown(i)})("touchstart",function(i){return r.touchStart(i)})},inputs:{rgX:"rgX",rgY:"rgY",slider:"slider"},outputs:{dragEnd:"dragEnd",dragStart:"dragStart",newValue:"newValue"},standalone:!1}),t})(),g5=(()=>{class t{constructor(n,r){this.service=n,this.cdr=r,this.color=new qt(0,1,1,1),this.controls="default",this.sliderChange=new xn(!1),this.onAlphaChange=new xn(!1),this.hsva=new qt(0,1,1,1),this.selectedColor="#000000",this.fallbackColor="#000000"}ngOnInit(){this.color||(this.color=new qt(0,1,1,1)),this.slider=new Oc(0,0,0,0),this.update()}ngOnDestroy(){}ngOnChanges(n){n.color&&this.color&&this.update()}ngAfterViewInit(){let n=this.hueSlider?.nativeElement.offsetWidth||140,r=this.alphaSlider?.nativeElement.offsetWidth||140;this.sliderDimMax=new y0(n,220,130,r),this.update()}onSliderChange(n,r){switch(n){case"saturation-lightness":this.hsva.onColorChange(r);break;case"hue":this.hsva.onHueChange(r);break;case"alpha":this.hsva.onAlphaChange(r),this.onAlphaChange.emit(r);break;case"value":this.hsva.onValueChange(r);break}this.update(),this.setColor(this.outputColor)}setColor(n){this.color=n,this.sliderChange.emit(this.color)}getBackgroundColor(n){return{background:"linear-gradient(90deg, rgba(36,0,0,0) 0%, "+n+" 100%)"}}update(){if(this.hsva=this.color,this.sliderDimMax){let n=this.service.hsvaToRgba(this.hsva).denormalize(),r=this.service.hsvaToRgba(new qt(this.hsva.h,1,1,1)).denormalize();this.hueSliderColor="rgb("+r.r+","+r.g+","+r.b+")",this.alphaSliderColor="rgb("+n.r+","+n.g+","+n.b+")",this.outputColor=this.hsva,this.selectedColor=this.service.hsvaToRgba(this.hsva).toString(),this.slider=new Oc(this.hsva.h*this.sliderDimMax.h-5,this.hsva.s*this.sliderDimMax.s-8,(1-this.hsva.v)*this.sliderDimMax.v-8,this.hsva.a*this.sliderDimMax.a-5),this.cdr.detectChanges()}}}return t.\u0275fac=function(n){return new(n||t)(Be(Tc),Be(Ar))},t.\u0275cmp=qe({type:t,selectors:[["color-picker"]],viewQuery:function(n,r){if(n&1&&(Ca(JX,5),Ca(ZX,5)),n&2){let a;Ea(a=wa())&&(r.hueSlider=a.first),Ea(a=wa())&&(r.alphaSlider=a.first)}},inputs:{color:"color",controls:"controls"},outputs:{sliderChange:"sliderChange",onAlphaChange:"onAlphaChange"},standalone:!1,features:[O0],decls:8,vars:4,consts:[["dialogPopup",""],["hueSlider",""],["alphaSlider",""],[1,"color-picker",3,"click"],["class","saturation-lightness",3,"slider","rgX","rgY","background-color","newValue",4,"ngIf"],[1,"hue-alpha","box"],["class","left",4,"ngIf"],[1,"right"],["class","hue",3,"slider","rgX","newValue",4,"ngIf"],["class","alpha",3,"slider","rgX","newValue",4,"ngIf"],[1,"saturation-lightness",3,"newValue","slider","rgX","rgY"],[1,"cursor"],[1,"left"],[1,"selected-color-background"],[1,"selected-color"],[1,"hue",3,"newValue","slider","rgX"],[1,"sliderCursor"],[1,"alpha",3,"newValue","slider","rgX"],[1,"alpha-gradient",3,"ngStyle"]],template:function(n,r){if(n&1){let a=Ye();j(0,"div",3,0),ge("click",function(o){return we(a),Oe(o.stopPropagation())}),We(2,QX,3,8,"div",4),j(3,"div",5),We(4,e5,3,2,"div",6),j(5,"div",7),We(6,n5,5,3,"div",8)(7,t5,6,4,"div",9),G()()()}n&2&&(ae(2),Ke("ngIf",r.controls!="only-alpha"),ae(2),Ke("ngIf",r.controls!="only-alpha"),ae(2),Ke("ngIf",r.controls!="only-alpha"),ae(),Ke("ngIf",r.controls!="no-alpha"))},dependencies:[Nc,No,m5],styles:[`.color-picker{position:relative;z-index:1000;width:220px;height:auto;cursor:default;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;touch-action:none}.color-picker *{box-sizing:border-box;margin:0;font-size:11px}.color-picker input{width:0;height:26px;min-width:0;font-size:13px;text-align:center;color:#000}.color-picker input:invalid,.color-picker input:-moz-ui-invalid,.color-picker input:-moz-submit-invalid{box-shadow:none}.color-picker input::-webkit-inner-spin-button,.color-picker input::-webkit-outer-spin-button{margin:0;-webkit-appearance:none}.color-picker .sliderCursor{width:10px;border-radius:5px;position:absolute;margin-top:-3px;border:1px solid black}.color-picker .sliderCursor>div{border:2px solid white;border-radius:5px}.color-picker .sliderCursor>div>div{border-radius:5px;border:1px solid black;height:24px}.color-picker .cursor{position:absolute;width:21px;border:3px solid black;border-radius:100%;margin:-2px 0 0 -2px}.color-picker .cursor>div{height:15px;border:3px solid white;border-radius:100%}.color-picker .box{display:flex;padding:4px 8px}.color-picker .left{position:relative;padding:16px 8px}.color-picker .right{flex:1 1 auto;display:flex;flex-direction:column;gap:10px;padding:12px 8px}.color-picker .hue-alpha{display:flex;align-items:center;margin-bottom:3px}.color-picker .hue{direction:ltr;width:100%;height:24px;border:none;border-radius:5px;position:relative;cursor:pointer;background-size:100% 100%;background:linear-gradient(to right,red 0%,#ff0 17%,lime 33%,cyan 50%,blue 66%,#f0f 83%,red 100%)}.color-picker .alpha{direction:ltr;position:relative;width:100%;height:24px;border:none;border-radius:5px;cursor:pointer;background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px}.color-picker .alpha-gradient{width:100%;height:100%;border-radius:5px;position:absolute}.color-picker .selected-color{position:absolute;top:16px;left:8px;width:40px;height:40px;box-shadow:0 1px 1px 1px #00000026;border-radius:50%}.color-picker .selected-color-background{width:40px;height:40px;border-radius:50%;background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px}.color-picker .saturation-lightness{direction:ltr;cursor:crosshair;width:100%;position:relative;height:130px;border:none;touch-action:manipulation;background-image:linear-gradient(to top,#000 0%,transparent 100%),linear-gradient(to right,#fff 0%,transparent 100%)}
`],encapsulation:2}),t})(),_5=(()=>{class t{click(n){this.isOutside(n)&&this.emitClose("cancel")}onScroll(){this.onScreenMovement()}onResize(){this.onScreenMovement()}constructor(n,r){this.service=n,this.cdr=r,this.color="#000000",this.previewColor="#000000",this.hsva=new qt(0,1,1,1),this.colorsAnimationEffect="slide-in",this.palette=kp,this.variants=[],this.userFormats=[],this.colorFormats=v0,this.format=Et.HEX,this.formatMap={hex:Et.HEX,rgba:Et.RGBA,hsla:Et.HSLA,cmyk:Et.CMYK},this.canChangeFormat=!0,this.menu=1,this.hideColorPicker=!1,this.hideTextInput=!1,this.colorPickerControls="default",this.placeholder="#FFFFFF"}ngOnInit(){this.setPosition(),this.hsva=this.service.stringToHsva(this.color),this.indexSeleccionado=this.findIndexSelectedColor(this.palette)}ngAfterViewInit(){this.setPositionY()}onScreenMovement(){this.setPosition(),this.setPositionY(),this.panelRef.nativeElement.style.transition||(this.panelRef.nativeElement.style.transition="transform 0.5s ease-out")}findIndexSelectedColor(n){let r;if(this.color)for(let a=0;a<n.length;a++){let i=n[a];typeof i=="string"?this.service.stringToFormat(this.color,Et.HEX)==this.service.stringToFormat(i,Et.HEX)&&(r=a):i===void 0?this.color=void 0:this.findIndexSelectedColor(i.variants)!=null&&(r=a)}return r}iniciate(n,r,a,i,o,s,l,c,u,d,f,h,p=[]){if(this.colorPickerControls=f,this.triggerInstance=n,this.TriggerBBox=r,this.color=a,this.hideColorPicker=c,this.hideTextInput=l,this.acceptLabel=u,this.cancelLabel=d,p.length&&p.every(_=>v0.includes(_))&&(this.colorFormats=p),s?this.colorFormats.includes(s)?(this.format=this.colorFormats.indexOf(s.toLowerCase()),this.canChangeFormat=!1,this.service.getFormatByString(this.color)!=s.toLowerCase()&&this.setColor(this.service.stringToHsva(this.color))):(console.error("Format provided is invalid, using HEX"),this.format=Et.HEX):(this.format=this.colorFormats.indexOf(this.service.getFormatByString(this.color)),this.format<0&&(this.format=0)),this.previewColor=this.color,this.palette=i??kp,this.colorsAnimationEffect=o,h=="top"){let m=this.TriggerBBox.nativeElement.getBoundingClientRect();this.positionString="transform: translateY(calc( -100% - "+m.height+"px ))"}}setPosition(){if(this.TriggerBBox){let r=this.TriggerBBox.nativeElement.getBoundingClientRect();this.top=r.top+r.height,r.left+250>window.innerWidth?this.left=r.right<250?window.innerWidth/2-250/2:r.right-250:this.left=r.left}}setPositionY(){let n=this.TriggerBBox.nativeElement.getBoundingClientRect(),r=this.panelRef.nativeElement.getBoundingClientRect(),a=r.height;n.bottom+a>window.innerHeight?this.positionString=n.top<r.height?"transform: translateY(-"+n.bottom+"px );":"transform: translateY(calc( -100% - "+n.height+"px ));":this.positionString="",this.cdr.detectChanges()}hasVariant(n){return this.previewColor?typeof n!="string"&&n.variants.some(r=>r.toUpperCase()==this.previewColor.toUpperCase()):!1}isSelected(n){return this.previewColor?typeof n=="string"&&n.toUpperCase()==this.previewColor.toUpperCase():!1}getBackgroundColor(n){return typeof n=="string"?{background:n}:{background:n?.preview}}onAlphaChange(n){this.palette=this.ChangeAlphaOnPalette(n,this.palette)}ChangeAlphaOnPalette(n,r){var a=[];for(let i=0;i<r.length;i++){let o=r[i];if(typeof o=="string"){let s=this.service.stringToHsva(o);s.onAlphaChange(n),a.push(this.service.toFormat(s,this.format))}else{let s=new b0,l=this.service.stringToHsva(o.preview);l.onAlphaChange(n),s.preview=this.service.toFormat(l,this.format),s.variants=this.ChangeAlphaOnPalette(n,o.variants),a.push(s)}}return a}changeColor(n){this.setColor(this.service.stringToHsva(n)),this.emitClose("accept")}onChangeColorPicker(n){this.temporalColor=n,this.color=this.service.toFormat(n,this.format),this.triggerInstance.sliderChange(this.service.toFormat(n,this.format))}changeColorManual(n){this.previewColor=n,this.color=n,this.hsva=this.service.stringToHsva(n),this.setPreviewColor(this.hsva),this.temporalColor=this.hsva,this.triggerInstance.setColor(this.color,this.previewColor)}setColor(n,r=-1){this.hsva=n;let a=this.colorFormats[this.format],i=r;i<0&&(i=this.formatMap[a]),this.color=this.service.toFormat(n,i),this.setPreviewColor(n),this.triggerInstance.setColor(this.color,this.previewColor)}setPreviewColor(n){this.previewColor=n?this.service.hsvaToRgba(n).toString():void 0}onChange(){}onColorClick(n){typeof n=="string"||n===void 0?this.changeColor(n):(this.variants=n.variants,this.menu=2)}addColor(){this.menu=3,this.backupColor=this.color,this.temporalColor=this.service.stringToHsva(this.color)}nextFormat(){if(this.canChangeFormat){this.format=(this.format+1)%this.colorFormats.length;let n=this.colorFormats[this.format],r=this.formatMap[n];this.setColor(this.hsva,r),this.placeholder=this.service.toFormat(new qt(0,0,1,1),r)}}emitClose(n){this.menu==3&&(n=="cancel"||n=="accept"&&this.setColor(this.temporalColor)),this.triggerInstance.closePanel()}onClickBack(){this.menu==3&&(this.color=this.backupColor,this.hsva=this.service.stringToHsva(this.color)),this.indexSeleccionado=this.findIndexSelectedColor(this.palette),this.menu=1}isOutside(n){return n.target.classList.contains("ngx-colors-overlay")}}return t.\u0275fac=function(n){return new(n||t)(Be(Tc),Be(Ar))},t.\u0275cmp=qe({type:t,selectors:[["ngx-colors-panel"]],viewQuery:function(n,r){if(n&1&&Ca(r5,5),n&2){let a;Ea(a=wa())&&(r.panelRef=a.first)}},hostVars:4,hostBindings:function(n,r){n&1&&ge("mousedown",function(i){return r.click(i)},!1,$c)("scroll",function(){return r.onScroll()},!1,$c)("resize",function(){return r.onResize()},!1,D0),n&2&&xr("top",r.top,"px")("left",r.left,"px")},standalone:!1,decls:6,vars:6,consts:[["dialog",""],["paintInput",""],[1,"opened"],[4,"ngIf"],["class","manual-input-wrapper",4,"ngIf"],[1,"colors"],[4,"ngFor","ngForOf"],["style","background: rgb(245 245 245); position: relative","class","circle button",3,"click",4,"ngIf"],[3,"controls","color","colorChange","onAlphaChange",4,"ngIf"],[1,"circle","wrapper","color"],[1,"circle","color","circle-border",3,"click","ngStyle"],["class","selected",4,"ngIf"],[1,"selected"],[1,"circle","button",2,"background","rgb(245 245 245)","position","relative",3,"click"],["style",`
            position: absolute;
            height: 7px;
            width: 7px;
            border: 1px solid rgba(0, 0, 0, 0.03);
            border-radius: 100%;
            top: 0;
            right: 0;
          `,3,"ngStyle",4,"ngIf"],["xmlns","http://www.w3.org/2000/svg","height","24px","viewBox","0 0 24 24","width","24px","fill","#222222"],["d","M24 24H0V0h24v24z","fill","none","opacity",".87"],["d","M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6-1.41-1.41z"],[2,"position","absolute","height","7px","width","7px","border","1px solid rgba(0, 0, 0, 0.03)","border-radius","100%","top","0","right","0",3,"ngStyle"],[3,"colorChange","onAlphaChange","controls","color"],[1,"circle","wrapper"],[1,"add",3,"click"],["xmlns","http://www.w3.org/2000/svg","width","24","height","24","viewBox","0 0 24 24"],["d","M0 0h24v24H0z","fill","none"],["d","M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"],[1,"circle","circle-border",3,"click","ngStyle"],[1,"nav-wrapper"],[1,"round-button","button",2,"float","left",3,"click"],[2,"float","right",3,"click"],[1,"color-picker-wrapper"],[3,"sliderChange","controls","color"],[1,"manual-input-wrapper"],[2,"cursor","pointer",3,"click"],[1,"g-input"],["type","text",3,"keyup","keydown.enter","placeholder","value"]],template:function(n,r){n&1&&(j(0,"div",2,0),We(2,l5,5,4,"ng-container",3)(3,f5,8,2,"ng-container",3)(4,h5,12,4,"ng-container",3)(5,p5,6,7,"div",4),G()),n&2&&(N0(r.positionString),ae(2),Ke("ngIf",r.menu==1),ae(),Ke("ngIf",r.menu==2),ae(),Ke("ngIf",r.menu==3),ae(),Ke("ngIf",!r.hideTextInput))},dependencies:[L0,Nc,No,g5],styles:["[_nghost-%COMP%]{position:fixed;z-index:2001}.hidden[_ngcontent-%COMP%]{display:none}.button[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}.top[_ngcontent-%COMP%]{transform:translateY(-100%)}.opened[_ngcontent-%COMP%]{box-sizing:border-box;box-shadow:0 2px 4px -1px #0003,0 4px 5px #00000024,0 1px 10px #0000001f;background:#fff;width:250px;border-radius:5px;position:absolute}.opened[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border:none;font-family:inherit;font-size:12px;background-color:unset;-webkit-user-select:none;user-select:none;padding:10px;letter-spacing:1px;color:#222;border-radius:3px;line-height:20px}.opened[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .opened[_ngcontent-%COMP%]   .button[_ngcontent-%COMP%]:hover{background-color:#0000000d;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1);transition-property:opacity,background-color;transition-duration:.2s,.2s;transition-timing-function:cubic-bezier(.35,0,.25,1),cubic-bezier(.35,0,.25,1);transition-delay:0s,0s}.opened[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:none}.opened[_ngcontent-%COMP%]   .colors[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;align-items:center;margin:15px}.opened[_ngcontent-%COMP%]   .colors[_ngcontent-%COMP%]   .circle[_ngcontent-%COMP%]{height:34px;width:34px;box-sizing:border-box;border-radius:100%;cursor:pointer}.opened[_ngcontent-%COMP%]   .colors[_ngcontent-%COMP%]   .circle[_ngcontent-%COMP%]   .add[_ngcontent-%COMP%]{font-size:20px;line-height:45px;text-align:center}.opened[_ngcontent-%COMP%]   .colors[_ngcontent-%COMP%]   .circle[_ngcontent-%COMP%]   .selected[_ngcontent-%COMP%]{border:2px solid white;border-radius:100%;height:28px;width:28px;box-sizing:border-box;margin:2px}.opened[_ngcontent-%COMP%]   .colors[_ngcontent-%COMP%]   .circle.colornull[_ngcontent-%COMP%]{background:linear-gradient(135deg,rgba(236,236,236,.7) 0%,rgba(236,236,236,.7) 45%,#de0f00 50%,rgba(236,236,236,.7) 55%,rgba(236,236,236,.7) 100%)}.opened[_ngcontent-%COMP%]   .colors[_ngcontent-%COMP%]   .circle.wrapper[_ngcontent-%COMP%]{margin:0 5px 5px;flex:34px 0 0}.opened[_ngcontent-%COMP%]   .colors[_ngcontent-%COMP%]   .circle.button[_ngcontent-%COMP%]{margin:0 5px 5px}.opened[_ngcontent-%COMP%]   .colors[_ngcontent-%COMP%]   .circle.wrapper.color[_ngcontent-%COMP%]{background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px}.opened[_ngcontent-%COMP%]   .colors[_ngcontent-%COMP%]   .circle-border[_ngcontent-%COMP%]{border:1px solid rgba(0,0,0,.03)}.opened[_ngcontent-%COMP%]   .color-picker-wrapper[_ngcontent-%COMP%]{margin:5px 15px}.opened[_ngcontent-%COMP%]   .nav-wrapper[_ngcontent-%COMP%]{overflow:hidden;margin:5px}.opened[_ngcontent-%COMP%]   .nav-wrapper[_ngcontent-%COMP%]   .round-button[_ngcontent-%COMP%]{padding:5px 0;width:40px;height:40px;box-sizing:border-box;border-radius:100%;text-align:center;line-height:45px}.opened[_ngcontent-%COMP%]   .manual-input-wrapper[_ngcontent-%COMP%]{display:flex;margin:15px;font-family:sans-serif}.opened[_ngcontent-%COMP%]   .manual-input-wrapper[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;text-align:center;font-size:10px;letter-spacing:1.5px;text-transform:uppercase;line-height:48px;width:145px;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.opened[_ngcontent-%COMP%]   .manual-input-wrapper[_ngcontent-%COMP%]   .g-input[_ngcontent-%COMP%]{border:1px solid #e8ebed;height:45px;border-radius:5px;width:100%}.opened[_ngcontent-%COMP%]   .manual-input-wrapper[_ngcontent-%COMP%]   .g-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{font-size:9px;border:none;width:100%;text-transform:uppercase;outline:none;text-align:center;letter-spacing:1px;color:#595b65;height:100%;border-radius:5px;margin:0;padding:0}"],data:{animation:[H0("colorsAnimation",[Ic("void => slide-in",[Ai(":enter",dr({opacity:0}),{optional:!0}),Ai(":enter",Lc("10ms",[Mc(".3s ease-in",Rc([dr({opacity:0,transform:"translatex(-50%)",offset:0}),dr({opacity:.5,transform:"translatex(-10px) scale(1.1)",offset:.3}),dr({opacity:1,transform:"translatex(0)",offset:1})]))]),{optional:!0})]),Ic("void => popup",[Ai(":enter",dr({opacity:0,transform:"scale(0)"}),{optional:!0}),Ai(":enter",Lc("10ms",[Mc("500ms ease-out",Rc([dr({opacity:.5,transform:"scale(.5)",offset:.3}),dr({opacity:1,transform:"scale(1.1)",offset:.8}),dr({opacity:1,transform:"scale(1)",offset:1})]))]),{optional:!0})])])]}}),t})(),Dp={position:"fixed",height:"100%",width:"100%","z-index":2e3,top:0,left:0},Sp=(()=>{class t{constructor(n,r,a){this.resolver=n,this.applicationRef=r,this.injector=a}createPanel(n,r){this.componentRef!=null&&this.removePanel();let a=this.resolver.resolveComponentFactory(_5);this.componentRef=a.create(this.injector),this.applicationRef.attachView(this.componentRef.hostView);let i=this.componentRef.hostView.rootNodes[0];return this.overlay=document.createElement("div"),this.overlay.id="ngx-colors-overlay",this.overlay.classList.add("ngx-colors-overlay"),this.overlay.classList.add(r),Object.keys(Dp).forEach(o=>{this.overlay.style[o]=Dp[o]}),n?document.getElementById(n).appendChild(this.overlay):document.body.appendChild(this.overlay),this.overlay.appendChild(i),this.componentRef}removePanel(){this.applicationRef.detachView(this.componentRef.hostView),this.componentRef.destroy(),this.overlay.remove()}}return t.\u0275fac=function(n){return new(n||t)(Bo($0),Bo(S0),Bo(B0))},t.\u0275prov=kc({token:t,factory:t.\u0275fac}),t})(),X0=(()=>{class t{onClick(){this.openPanel()}constructor(n,r,a){this.triggerRef=n,this.panelFactory=r,this.service=a,this.color="",this.colorsAnimation="slide-in",this.position="bottom",this.attachTo=void 0,this.overlayClassName=void 0,this.colorPickerControls="default",this.acceptLabel="ACCEPT",this.cancelLabel="CANCEL",this.change=new xn,this.input=new xn,this.slider=new xn,this.close=new xn,this.open=new xn,this.isDisabled=!1,this.onTouchedCallback=()=>{},this.onChangeCallback=()=>{}}ngOnDestroy(){this.panelRef&&this.panelFactory.removePanel()}openPanel(){this.isDisabled||(this.panelRef=this.panelFactory.createPanel(this.attachTo,this.overlayClassName),this.panelRef.instance.iniciate(this,this.triggerRef,this.color,this.palette,this.colorsAnimation,this.format,this.hideTextInput,this.hideColorPicker,this.acceptLabel,this.cancelLabel,this.colorPickerControls,this.position,this.formats)),this.open.emit(this.color)}closePanel(){this.panelFactory.removePanel(),this.onTouchedCallback(),this.close.emit(this.color)}setDisabledState(n){this.isDisabled=n,this.triggerRef.nativeElement.style.opacity=n?.5:1}setColor(n,r=""){this.writeValue(n,r),this.onChangeCallback(n),this.input.emit(n)}sliderChange(n){this.slider.emit(n)}get value(){return this.color}set value(n){this.setColor(n),this.onChangeCallback(n)}writeValue(n,r=""){if(n!==this.color){if(this.format){let i=v0.indexOf(this.format.toLowerCase());n=this.service.stringToFormat(n,i)}this.color=n;let a=!1;n&&n.startsWith("cmyk")&&(a=!0,r||(r=this.service.stringToFormat(n,Et.RGBA))),this.change.emit(a?r:n)}}registerOnChange(n){this.onChangeCallback=n}registerOnTouched(n){this.onTouchedCallback=n}}return t.\u0275fac=function(n){return new(n||t)(Be(Dc),Be(Sp),Be(Tc))},t.\u0275dir=Sc({type:t,selectors:[["","ngx-colors-trigger",""]],hostBindings:function(n,r){n&1&&ge("click",function(){return r.onClick()})},inputs:{colorsAnimation:"colorsAnimation",palette:"palette",format:"format",formats:"formats",position:"position",hideTextInput:"hideTextInput",hideColorPicker:"hideColorPicker",attachTo:"attachTo",overlayClassName:"overlayClassName",colorPickerControls:"colorPickerControls",acceptLabel:"acceptLabel",cancelLabel:"cancelLabel"},outputs:{change:"change",input:"input",slider:"slider",close:"close",open:"open"},standalone:!1,features:[R0([{provide:J0,useExisting:w0(()=>t),multi:!0}])]}),t})(),Wp=(()=>{class t{constructor(n,r){this.cdRef=n,this.triggerDirective=r,this.triggerDirectiveColorChangeSubscription=null,this.color=this.triggerDirective.color}ngOnInit(){this.triggerDirectiveColorChangeSubscription=this.triggerDirective.change.subscribe(n=>{this.color=n,this.cdRef.markForCheck()})}ngOnDestroy(){this.triggerDirectiveColorChangeSubscription&&this.triggerDirectiveColorChangeSubscription.unsubscribe()}}return t.\u0275fac=function(n){return new(n||t)(Be(Ar),Be(X0,1))},t.\u0275cmp=qe({type:t,selectors:[["ngx-colors"]],standalone:!1,decls:4,vars:5,consts:[[1,"app-color-picker"],[1,"preview"],[1,"preview-background"],[1,"circle",3,"ngStyle"]],template:function(n,r){n&1&&(j(0,"div",0)(1,"div",1)(2,"div",2),Ne(3,"div",3),G()()()),n&2&&(ae(3),$o("colornull",!r.color),Ke("ngStyle",xi(3,$p,r.color)))},dependencies:[No],styles:["[_nghost-%COMP%]   .app-color-picker[_ngcontent-%COMP%]{line-height:1px;font-family:sans-serif}[_nghost-%COMP%]   .app-color-picker[_ngcontent-%COMP%]   .preview[_ngcontent-%COMP%]{margin:2px;display:inline-block;box-sizing:border-box;border-radius:100%;background:white;cursor:pointer;padding:3px;box-shadow:0 1px 1px #0003,0 1px 1px 1px #00000024,0 1px 1px 1px #0000001f}[_nghost-%COMP%]   .app-color-picker[_ngcontent-%COMP%]   .preview[_ngcontent-%COMP%]   .preview-background[_ngcontent-%COMP%]{background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px;border-radius:100%}[_nghost-%COMP%]   .app-color-picker[_ngcontent-%COMP%]   .preview[_ngcontent-%COMP%]   .circle[_ngcontent-%COMP%]{height:20px;width:20px;box-sizing:border-box;border-radius:100%;cursor:pointer}[_nghost-%COMP%]   .app-color-picker[_ngcontent-%COMP%]   .preview[_ngcontent-%COMP%]   .circle.colornull[_ngcontent-%COMP%]{background:linear-gradient(135deg,rgba(236,236,236,.7) 0%,rgba(236,236,236,.7) 45%,#de0f00 50%,rgba(236,236,236,.7) 55%,rgba(236,236,236,.7) 100%)}[_nghost-%COMP%]   .app-color-picker[_ngcontent-%COMP%]   .preview[_ngcontent-%COMP%]   .noselected[_ngcontent-%COMP%]{background-image:linear-gradient(45deg,#ccc 25%,transparent 25%),linear-gradient(-45deg,#ccc 25%,transparent 25%),linear-gradient(45deg,transparent 75%,#ccc 75%),linear-gradient(-45deg,transparent 75%,#ccc 75%);background-size:16px 16px;background-position:0 0,0 8px,8px -8px,-8px 0px}"]}),t})(),Np=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=Do({type:t}),t.\u0275inj=To({providers:[Tc,Sp],imports:[Mo]}),t})();var v5=(t,e)=>e.id;function b5(t,e){if(t&1){let n=Ye();j(0,"div",4)(1,"ngx-colors",5),Xt("ngModelChange",function(a){let i=we(n).$implicit,o=ue(2).$implicit,s=ue();return yt(s.projectConditionColorMap[o.id][i],a)||(s.projectConditionColorMap[o.id][i]=a),Oe(a)}),G(),j(2,"div"),ie(3),G()()}if(t&2){let n=e.$implicit,r=ue(2).$implicit,a=ue();ae(),bt("ngModel",a.projectConditionColorMap[r.id][n]),ae(2),dn(n)}}function y5(t,e){if(t&1&&nn(0,b5,4,2,"div",4,vt),t&2){let n=ue().$implicit,r=ue();tn(r.projectConditionMap[n.id])}}function X5(t,e){if(t&1&&(j(0,"div")(1,"div")(2,"b"),ie(3),G()(),We(4,y5,2,0),G()),t&2){let n=e.$implicit,r=ue();ae(3),dn(n.name),ae(),je(r.projectConditionMap[n.id]?4:-1)}}var Mp=(()=>{class t{set projects(n){this._projects=n;for(let r of n)this.web.getProjectUniqueConditions(r.id).subscribe(a=>{for(let i of a)this.projectConditionMap[i.AnalysisGroup.project]||(this.projectConditionMap[i.AnalysisGroup.project]=[]),this.projectConditionMap[i.AnalysisGroup.project].includes(i.Condition)||this.projectConditionMap[i.AnalysisGroup.project].push(i.Condition),this.projectConditionColorMap[i.AnalysisGroup.project]||(this.projectConditionColorMap[i.AnalysisGroup.project]={}),this.projectConditionColorMap[i.AnalysisGroup.project][i.Condition]||(this.projectConditionColorMap[i.AnalysisGroup.project][i.Condition]="")})}get projects(){return this._projects}set projectConditionColorMap(n){if(n==null){this._projectConditionColorMap={};return}this._projectConditionColorMap=Object.assign({},n)}get projectConditionColorMap(){return this._projectConditionColorMap}constructor(n,r){this.dialogRef=n,this.web=r,this._projects=[],this.projectConditionMap={},this._projectConditionColorMap={}}save(){this.dialogRef.close(this.projectConditionColorMap)}cancel(){this.dialogRef.close()}static{this.\u0275fac=function(r){return new(r||t)(Be(On),Be(Zn))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-condition-color-editor-dialog"]],inputs:{projects:"projects",projectConditionColorMap:"projectConditionColorMap"},decls:10,vars:0,consts:[["mat-dialog-title",""],["mat-dialog-content",""],["mat-dialog-actions",""],["mat-button","",3,"click"],[2,"display","flex","gap","5px","align-items","center"],["ngx-colors-trigger","",3,"ngModelChange","ngModel"]],template:function(r,a){r&1&&(j(0,"h1",0),ie(1,"Condition Color Editor"),G(),j(2,"div",1),nn(3,X5,5,2,"div",null,v5),G(),j(5,"div",2)(6,"button",3),ge("click",function(){return a.cancel()}),ie(7,"Close"),G(),j(8,"button",3),ge("click",function(){return a.save()}),ie(9,"Save"),G()()),r&2&&(ae(3),tn(a.projects))},dependencies:[Tn,Bn,Np,Wp,X0,wr,An,Er,vn,kn],encapsulation:2})}}return t})();function K5(t,e){if(t&1&&(j(0,"mat-option",6),ie(1),G()),t&2){let n=e.$implicit;Ke("value",n),ae(),dn(n)}}var Rp=(()=>{class t{_filter(n){let r=n.toLowerCase();return this.tags.filter(a=>a.toLowerCase().includes(r))}constructor(n,r,a){this.fb=n,this.dialogRef=r,this.collateService=a,this.form=this.fb.group({name:["",It.required],existing:[!1],id:[-1]}),this.tags=[]}ngOnInit(){this.filteredTags=this.form.controls.name.valueChanges.pipe(Oo(""),Aa(n=>this.collateService.getCollateTags(n).pipe(Eo(r=>r.results.map(a=>a.name)))))}submit(){let n=this.form.controls.name.value;this.collateService.getCollateTags(n).subscribe(r=>{let a=r.results.find(o=>o.name.toLowerCase()===n.toLowerCase()),i=!!a;this.form.controls.existing.setValue(i),this.form.controls.id.setValue(i?a.id:null),this.dialogRef.close(this.form.value)})}cancel(){this.dialogRef.close()}onTagSelected(n){let r=n.option.value;this.form.controls.name.setValue(r),this.collateService.getCollateTags(r).subscribe(a=>{let i=a.results.find(o=>o.name.toLowerCase()===r.toLowerCase());this.form.controls.existing.setValue(!!i),this.form.controls.id.setValue(i?i.id:null)})}static{this.\u0275fac=function(r){return new(r||t)(Be(Nn),Be(On),Be(Zt))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-tag-create-dialog"]],decls:18,vars:5,consts:[["auto","matAutocomplete"],["mat-dialog-title",""],["mat-dialog-content",""],[3,"formGroup"],["type","text","matInput","","formControlName","name",3,"matAutocomplete"],[3,"optionSelected"],[3,"value"],["mat-dialog-actions",""],["mat-button","",3,"click"],["mat-button","",3,"click","disabled"]],template:function(r,a){if(r&1){let i=Ye();j(0,"h1",1),ie(1,"Create/Add Tag"),G(),j(2,"div",2)(3,"form",3)(4,"mat-form-field")(5,"mat-label"),ie(6,"Tag Name"),G(),Ne(7,"input",4),j(8,"mat-autocomplete",5,0),ge("optionSelected",function(s){return we(i),Oe(a.onTagSelected(s))}),nn(10,K5,2,2,"mat-option",6,vt),Oa(12,"async"),G()()()(),j(13,"div",7)(14,"button",8),ge("click",function(){return we(i),Oe(a.cancel())}),ie(15,"Cancel"),G(),j(16,"button",9),ge("click",function(){return we(i),Oe(a.submit())}),ie(17,"Submit"),G()()}if(r&2){let i=nt(9);ae(3),Ke("formGroup",a.form),ae(4),Ke("matAutocomplete",i),ae(3),tn(Ta(12,3,a.filteredTags)),ae(6),Ke("disabled",a.form.invalid)}},dependencies:[Tn,Bn,Gn,Hn,Vn,An,qn,st,ct,lt,Jn,Mn,vn,kn,kt,Ba,Na,Ma],encapsulation:2})}}return t})();var x5=(t,e)=>e.id;function A5(t,e){t&1&&(j(0,"th",11),ie(1," Original Title "),G())}function C5(t,e){if(t&1&&(j(0,"td",12),ie(1),G()),t&2){let n=e.$implicit;ae(),sn(" ",n," ")}}function E5(t,e){t&1&&(j(0,"th",11),ie(1," Display Title "),G())}function w5(t,e){if(t&1&&(j(0,"td",12)(1,"form",13)(2,"mat-form-field"),Ne(3,"input",14),G()()()),t&2){let n=e.$implicit,r=ue(2).$implicit,a=ue();ae(),Ke("formGroup",a.formMap[r.id][n]),ae(2),So("formControlName",n)}}function O5(t,e){t&1&&Ne(0,"tr",15)}function T5(t,e){t&1&&Ne(0,"tr",16)}function B5(t,e){if(t&1&&(j(0,"h5"),ie(1),G(),j(2,"table",4),Yn(3,5),We(4,A5,2,0,"th",6)(5,C5,2,1,"td",7),zn(),Yn(6,8),We(7,E5,2,0,"th",6)(8,w5,4,2,"td",7),zn(),We(9,O5,1,0,"tr",9)(10,T5,1,0,"tr",10),G()),t&2){let n=ue().$implicit,r=ue();ae(),dn(n.name),ae(),Ke("dataSource",r.projectConditionMap[n.id]),ae(7),Ke("matHeaderRowDef",r.displayedColumns),ae(),Ke("matRowDefColumns",r.displayedColumns)}}function k5(t,e){if(t&1&&We(0,B5,11,4),t&2){let n=e.$implicit,r=ue();je(r.formMap[n.id]?0:-1)}}var Ip=(()=>{class t{set projects(n){this._projects=n.slice()}get projects(){return this._projects}set renameSampleCondition(n){for(let r of this.projects)this.web.getProjectUniqueConditions(r.id).subscribe(a=>{for(let i of a){if(this.formMap[i.AnalysisGroup.project]||(this.formMap[i.AnalysisGroup.project]={}),!this.formMap[i.AnalysisGroup.project][i.Condition]){let o={};o[i.Condition]=new Lt(i.Condition,It.required),this.formMap[i.AnalysisGroup.project][i.Condition]=this.fb.group(o)}this.projectConditionMap[i.AnalysisGroup.project]||(this.projectConditionMap[i.AnalysisGroup.project]=[]),this.projectConditionMap[i.AnalysisGroup.project].includes(i.Condition)||this.projectConditionMap[i.AnalysisGroup.project].push(i.Condition),this.renameSampleCondition[i.AnalysisGroup.project]||(this.renameSampleCondition[i.AnalysisGroup.project]={}),this.renameSampleCondition[i.AnalysisGroup.project][i.Condition]||(this.renameSampleCondition[i.AnalysisGroup.project][i.Condition]=i.Condition),n[i.AnalysisGroup.project]&&n[i.AnalysisGroup.project][i.Condition]&&(this.renameSampleCondition[i.AnalysisGroup.project][i.Condition]=n[i.AnalysisGroup.project][i.Condition],this.formMap[i.AnalysisGroup.project][i.Condition].controls[i.Condition].setValue(n[i.AnalysisGroup.project][i.Condition]))}})}get renameSampleCondition(){return this._renameSampleCondition}constructor(n,r,a,i){this.dialog=n,this.web=r,this.fb=a,this.sb=i,this.displayedColumns=["original","display"],this.projectConditionMap={},this._projects=[],this._renameSampleCondition={},this.formMap={}}close(){this.dialog.close()}submit(){let n={};for(let r in this.formMap){n[r]={};for(let a in this.formMap[r])if(n[r][a]=this.formMap[r][a].value[a],!this.formMap[r][a].valid){this.sb.open(`${a} is invalid`);return}}this.dialog.close(n)}static{this.\u0275fac=function(r){return new(r||t)(Be(On),Be(Zn),Be(Nn),Be(Ut))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-rename-sample-condition-dialog"]],inputs:{projects:"projects",renameSampleCondition:"renameSampleCondition"},decls:10,vars:0,consts:[["mat-dialog-title",""],["mat-dialog-content",""],["mat-dialog-actions",""],["mat-button","",3,"click"],["mat-table","",1,"mat-elevation-z8",3,"dataSource"],["matColumnDef","original"],["mat-header-cell","",4,"matHeaderCellDef"],["mat-cell","",4,"matCellDef"],["matColumnDef","display"],["mat-header-row","",4,"matHeaderRowDef"],["mat-row","",4,"matRowDef","matRowDefColumns"],["mat-header-cell",""],["mat-cell",""],[3,"formGroup"],["matInput","",2,"border-radius","0",3,"formControlName"],["mat-header-row",""],["mat-row",""]],template:function(r,a){r&1&&(j(0,"h1",0),ie(1,"Rename Conditions"),G(),j(2,"div",1),nn(3,k5,1,1,null,null,x5),G(),j(5,"div",2)(6,"button",3),ge("click",function(){return a.submit()}),ie(7,"Submit"),G(),j(8,"button",3),ge("click",function(){return a.close()}),ie(9,"Close"),G()()),r&2&&(ae(3),tn(a.projects))},dependencies:[Tn,Bn,Gn,Hn,Vn,An,qn,st,ct,es,Go,Zo,Qo,rs,ns,as,ts,Ho,Jo,kn,vn,Mn,Jn],encapsulation:2})}}return t})();var Lp=(()=>{class t{set settings(n){for(let r in n)this._settings[r]=n[r];this._settings&&this.form.patchValue(this._settings)}get settings(){return this._settings}constructor(n,r){this.fb=n,this.dialog=r,this._settings={},this.form=this.fb.group({marginLeft:150,marginRight:100,marginTop:100,marginBottom:100,titleTextSize:14,showTitle:!0,height:500,barSize:50})}submit(){this.dialog.close(this.form.value)}close(){this.dialog.close()}static{this.\u0275fac=function(r){return new(r||t)(Be(Nn),Be(On))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-plot-settings"]],inputs:{settings:"settings"},decls:46,vars:1,consts:[["mat-dialog-title",""],["mat-dialog-content",""],[2,"display","flex","flex-direction","column","gap","20px",3,"formGroup"],[2,"display","flex","flex-direction","column","gap","5px"],["matInput","","formControlName","height","type","number"],["matInput","","formControlName","barSize","type","number"],["matInput","","formControlName","marginLeft","type","number"],["matInput","","formControlName","marginRight","type","number"],["matInput","","formControlName","marginTop","type","number"],["matInput","","formControlName","marginBottom","type","number"],["formControlName","showTitle"],["matInput","","formControlName","titleTextSize","type","number"],["mat-dialog-actions",""],["mat-button","",3,"click"]],template:function(r,a){r&1&&(j(0,"h5",0),ie(1,"Plot General Settings"),G(),j(2,"div",1)(3,"form",2)(4,"section",3)(5,"b"),ie(6,"Overall Size"),G(),j(7,"mat-form-field"),Ne(8,"input",4),j(9,"mat-label"),ie(10,"Height"),G()(),j(11,"mat-form-field"),Ne(12,"input",5),j(13,"mat-label"),ie(14,"Bar size"),G()(),j(15,"mat-form-field"),Ne(16,"input",6),j(17,"mat-label"),ie(18,"Margin Left"),G()(),j(19,"mat-form-field"),Ne(20,"input",7),j(21,"mat-label"),ie(22,"Margin Right"),G()(),j(23,"mat-form-field"),Ne(24,"input",8),j(25,"mat-label"),ie(26,"Margin Top"),G()(),j(27,"mat-form-field"),Ne(28,"input",9),j(29,"mat-label"),ie(30,"Margin Bottom"),G()()(),Ne(31,"mat-divider"),j(32,"section",3)(33,"b"),ie(34,"Title"),G(),j(35,"mat-checkbox",10),ie(36,"Show Title"),G(),j(37,"mat-form-field"),Ne(38,"input",11),j(39,"mat-label"),ie(40,"Title Text Size"),G()()()()(),j(41,"div",12)(42,"button",13),ge("click",function(){return a.close()}),ie(43,"Cancel"),G(),j(44,"button",13),ge("click",function(){return a.submit()}),ie(45,"Save"),G()()),r&2&&(ae(3),Ke("formGroup",a.form))},dependencies:[Tn,Bn,Gn,Hn,Vn,Sa,An,qn,st,ct,Mn,Jn,lt,Ua,kn,vn,Ro],encapsulation:2})}}return t})();function D5(t,e){if(t&1){let n=Ye();j(0,"mat-checkbox",12),Xt("ngModelChange",function(a){we(n);let i=ue(2);return yt(i.collate.settings.showTags,a)||(i.collate.settings.showTags=a),Oe(a)}),ie(1,"Show Tags"),G()}if(t&2){let n=ue(2);bt("ngModel",n.collate.settings.showTags)}}function $5(t,e){if(t&1){let n=Ye();j(0,"h1",15),ge("click",function(){we(n);let a=ue(3);return Oe(a.toggleEditTitle())}),ie(1),G(),Ne(2,"br")}if(t&2){let n=ue(3);ae(),dn(n.collate.title)}}function S5(t,e){if(t&1){let n=Ye();j(0,"div")(1,"mat-form-field",16)(2,"input",17),ge("keydown.enter",function(){we(n);let a=ue(3);return Oe(a.toggleEditTitle())}),Xt("ngModelChange",function(a){we(n);let i=ue(3);return yt(i.collate.title,a)||(i.collate.title=a),Oe(a)}),G()(),j(3,"button",18),ge("click",function(){we(n);let a=ue(3);return Oe(a.toggleEditTitle())}),j(4,"mat-icon"),ie(5,"save"),G()()()}if(t&2){let n=ue(3);ae(2),bt("ngModel",n.collate.title)}}function W5(t,e){if(t&1){let n=Ye();j(0,"div",19),ge("click",function(){we(n);let a=ue(3);return Oe(a.toggleEditGreeting())}),ie(1),G()}if(t&2){let n=ue(3);ae(),dn(n.collate.greeting)}}function N5(t,e){if(t&1){let n=Ye();j(0,"div")(1,"mat-form-field",20)(2,"input",17),ge("keydown.enter",function(){we(n);let a=ue(3);return Oe(a.toggleEditGreeting())}),Xt("ngModelChange",function(a){we(n);let i=ue(3);return yt(i.collate.greeting,a)||(i.collate.greeting=a),Oe(a)}),G()(),j(3,"button",18),ge("click",function(){we(n);let a=ue(3);return Oe(a.toggleEditGreeting())}),j(4,"mat-icon"),ie(5,"save"),G()()()}if(t&2){let n=ue(3);ae(2),bt("ngModel",n.collate.greeting)}}function M5(t,e){if(t&1&&(j(0,"div",9)(1,"div",13),We(2,$5,3,1)(3,S5,6,1,"div")(4,W5,2,1,"div",14)(5,N5,6,1,"div"),G()()),t&2){let n=ue(2);ae(2),je(n.editTitle?3:2),ae(2),je(n.editGreeting?5:4)}}function R5(t,e){if(t&1){let n=Ye();j(0,"div",1)(1,"button",21),ge("click",function(){we(n);let a=ue(2);return Oe(a.openCollateTagCreateDialog())}),ie(2,"Add Tag +"),G()(),j(3,"div",22)(4,"app-collate-tags",23),ge("collageTagsChange",function(a){we(n);let i=ue(2);return Oe(i.handleCollageTagsChange(a))}),G()()}if(t&2){let n=ue(2);ae(4),Ke("collageTags",n.collate.tags)}}function I5(t,e){if(t&1&&Ne(0,"mat-tab",25),t&2){let n=e.$implicit;Ke("label",n)}}function L5(t,e){if(t&1){let n=Ye();j(0,"div",11)(1,"mat-tab-group",24),ge("selectedTabChange",function(){we(n);let a=ue(2);return Oe(a.filterDataBySearchTerm())}),Xt("selectedIndexChange",function(a){we(n);let i=ue(2);return yt(i.selectedIndex,a)||(i.selectedIndex=a),Oe(a)}),nn(2,I5,1,1,"mat-tab",25,vt),G()()}if(t&2){let n=ue(2);ae(),bt("selectedIndex",n.selectedIndex),Ke("mat-stretch-tabs",!1),ae(),tn(n.searchTerms)}}function U5(t,e){if(t&1){let n=Ye();j(0,"app-collate-project-list",27),ge("deleteProject",function(a){we(n);let i=ue(4);return Oe(i.deleteProject(a))})("projectOrderChanged",function(a){we(n);let i=ue(4);return Oe(i.onProjectOrderChanged(a))}),G()}if(t&2){let n=ue(4);Ke("searchTerm",n.selectedSearchTerm)("projectConditionColorMap",n.collate.settings.projectConditionColorMap)("projects",n.projects)("filteredResults",n.filteredResults)("renameCondition",n.collate.settings.renameSampleCondition)}}function F5(t,e){if(t&1&&We(0,U5,1,5,"app-collate-project-list",26),t&2){let n=ue(3);je(n.collate.settings.projectConditionColorMap&&n.collate.settings.renameSampleCondition?0:-1)}}function j5(t,e){if(t&1&&We(0,F5,1,1),t&2){let n=ue(2);je(n.collate.settings?0:-1)}}function Y5(t,e){if(t&1){let n=Ye();j(0,"mat-toolbar")(1,"mat-toolbar-row"),Ne(2,"span",2),We(3,D5,2,1,"mat-checkbox",3),j(4,"button",4),ge("click",function(){we(n);let a=ue();return Oe(a.goToCollateView())}),j(5,"mat-icon"),ie(6,"visibility"),G()(),j(7,"button",5),ge("click",function(){we(n);let a=ue();return Oe(a.openProjectAddDialog())}),j(8,"mat-icon"),ie(9,"add"),G()(),j(10,"button",6),ge("click",function(){we(n);let a=ue();return Oe(a.updateCollate())}),j(11,"mat-icon"),ie(12,"save"),G()(),j(13,"button",7)(14,"mat-icon"),ie(15,"more_vert"),G()(),j(16,"mat-menu",null,0)(18,"button",8),ge("click",function(){we(n);let a=ue();return Oe(a.openReorderDialog())}),ie(19,"Reorder Analysis Groups"),G(),j(20,"button",8),ge("click",function(){we(n);let a=ue();return Oe(a.openVisibilityDialog())}),ie(21,"Change Analysis Group Visibility"),G(),j(22,"button",8),ge("click",function(){we(n);let a=ue();return Oe(a.openConditionColorEditorDialog())}),ie(23,"Set Condition Colors"),G(),j(24,"button",8),ge("click",function(){we(n);let a=ue();return Oe(a.openPlotSettings())}),ie(25,"Change Plot General Settings"),G(),j(26,"button",8),ge("click",function(){we(n);let a=ue();return Oe(a.openRenameConditionDialog())}),ie(27,"Rename Condition"),G()()()(),We(28,M5,6,2,"div",9)(29,R5,5,1),j(30,"div",1)(31,"app-collate-search",10),ge("searchResultID",function(a){we(n);let i=ue();return Oe(i.getSearchFromID(a))}),G()(),We(32,L5,4,2,"div",11)(33,j5,1,1)}if(t&2){let n=nt(17),r=ue();ae(3),je(r.collate?3:-1),ae(10),Ke("matMenuTriggerFor",n),ae(15),je(r.collate?28:-1),ae(),je(r.collate?29:-1),ae(2),Ke("projects",r.projects),ae(),je(r.searchTerms.length>0?32:-1),ae(),je(r.collate?33:-1)}}function z5(t,e){t&1&&(j(0,"div",1)(1,"p"),ie(2," You do not have permission to edit this collate. "),G()())}var K0=(()=>{class t{set collateId(n){n&&this.collateService.getCollate(n).subscribe(r=>{if(this._collate=r,this.accounts.getCollatePermissions(r.id).subscribe(a=>{this.canEdit=a.edit}),this.projects=r.projects,this._collate.settings||(this._collate.settings={projectOrder:this.projects.map(a=>a.id),analysisGroupOrderMap:{},projectConditionColorMap:{},renameSampleCondition:{},projectAnalysisGroupVisibility:{},plotSettings:{},showTags:!1}),this._collate.settings.plotSettings||(this._collate.settings.plotSettings={}),r.settings.projectOrder){let a=this.projects.filter(i=>!r.settings.projectOrder.includes(i.id));this.projects=this.projects.filter(i=>r.settings.projectOrder.includes(i.id)),this.projects=this.projects.concat(a)}if(this.collate&&"showTags"in this.collate.settings&&(this.collate.settings.showTags=!1),this.collate?.settings.projectConditionColorMap)this.graph.projectConditionColorMap=this.collate.settings.projectConditionColorMap;else{this.collate.settings.projectConditionColorMap={};for(let a of this.projects)this.collate.settings.projectConditionColorMap[a.id]={}}if(!this.collate?.settings.renameSampleCondition){this.collate.settings.renameSampleCondition={};for(let a of this.projects)this.collate.settings.renameSampleCondition[a.id]={},this.web.getProjectUniqueConditions(a.id).subscribe(i=>{for(let o of i)this.collate.settings.renameSampleCondition[a.id][o.Condition]=o.Condition;console.log(this.collate.settings.renameSampleCondition)})}})}get collate(){return this._collate}set collate(n){this._collate=n}get selectedSearchTerm(){return this._selectedSearchTerm}set selectedSearchTerm(n){this._selectedSearchTerm=n}constructor(n,r,a,i,o,s,l){this.accounts=n,this.graph=r,this.router=a,this.snackBar=i,this.dialog=o,this.collateService=s,this.web=l,this._collate=null,this.canEdit=!1,this.projects=[],this.selectedIndex=0,this.editTitle=!1,this.editGreeting=!1,this.searchResults={},this.projectAnalysisGroups={},this.analysisGroupProjects={},this.searchTerms=[],this._selectedSearchTerm="",this.filteredResults={},this.removedTags=[]}openProjectAddDialog(){this.dialog.open(Op).afterClosed().subscribe(r=>{r&&(this.projects=this.projects.concat(r),this.collate&&(this.collate.projects=this.projects,this.updateProjectOrder()))})}updateProjectOrder(){this._collate&&(this._collate.settings.projectOrder=this.projects.map(n=>n.id)),console.log(this.collate)}updateCollate(){this._collate&&this.collateService.updateCollate(this._collate.id,this._collate).subscribe(()=>{if(this.removedTags.length>0){let n=this.removedTags.map(r=>this.collateService.removeTagFromCollate(this._collate?.id,r.id));C0(n).subscribe(()=>{this.showSnackBar("Collate saved successfully"),this.removedTags=[]})}else this.showSnackBar("Collate saved successfully")})}toggleEditTitle(){this.editTitle=!this.editTitle}toggleEditGreeting(){this.editGreeting=!this.editGreeting}saveTitle(){this.toggleEditTitle(),this.updateCollate()}saveGreeting(){this.toggleEditGreeting(),this.updateCollate()}getSearchFromID(n){this.web.getSearchSession(n).subscribe(r=>{console.log(r)}),this.web.getSearchResults(n,99999).subscribe(r=>{console.log(r.results),this.distributeSearchResults(r.results).then()})}associateAnalysisGroupsWithProjects(){return Xn(this,null,function*(){let n=yield this.web.getAnalysisGroupsFromProjects(this.projects).toPromise();this.projectAnalysisGroups={},this.analysisGroupProjects={},n&&n.forEach(r=>{let a=r.project;this.projectAnalysisGroups[a]||(this.projectAnalysisGroups[a]=[]),this.projectAnalysisGroups[a].push(r),this.analysisGroupProjects[r.id]=this.projects.find(i=>i.id===a)})})}distributeSearchResults(n){return Xn(this,null,function*(){yield this.associateAnalysisGroupsWithProjects(),this.searchResults={},this.searchTerms=Array.from(new Set(n.map(r=>r.search_term))),n.forEach(r=>{let a=r.analysis_group.id,i=this.analysisGroupProjects[a];i&&(this.searchResults[i.id]||(this.searchResults[i.id]=[]),this.searchResults[i.id].push(r))}),this.selectedSearchTerm=this.searchTerms[0],this.filterDataBySearchTerm()})}getFilteredSearchResults(){let n={};return Object.keys(this.searchResults).forEach(r=>{n[r]=this.searchResults[r].filter(a=>a.search_term===this.selectedSearchTerm)}),this.collate?.settings?.analysisGroupOrderMap&&Object.keys(this.collate.settings.analysisGroupOrderMap).forEach(r=>{let a=parseInt(r),i=this.collate?.settings.analysisGroupOrderMap[a];if(!n[a]||!i)return;let o=n[a].filter(s=>!i.includes(s.analysis_group.id));if(n[a]=n[a].filter(s=>i.includes(s.analysis_group.id)),n[a]=n[a].sort((s,l)=>i.indexOf(s.analysis_group.id)-i.indexOf(l.analysis_group.id)),n[a]=n[a].concat(o),this.collate?.settings?.projectAnalysisGroupVisibility){let s=this.collate?.settings.projectAnalysisGroupVisibility[a];n[a]=n[a].filter(l=>!s||!(l.analysis_group.id in s)?!0:s[l.analysis_group.id])}}),n}filterDataBySearchTerm(){this.selectedSearchTerm=this.searchTerms[this.selectedIndex],this.filteredResults=this.getFilteredSearchResults()}onProjectOrderChanged(n){this.projects=n,this.updateProjectOrder()}showSnackBar(n){this.snackBar.open(n,"Close",{duration:3e3})}deleteProject(n){this.projects=this.projects.filter(r=>r.id!==n.id),this.updateProjectOrder()}goToCollateView(){this._collate&&this.router.navigate(["/collate/view",this._collate.id])}onSearchResultsChange(n,r){this.filteredResults[r]=n,this.collate&&(this.collate.settings.analysisGroupOrderMap||(this.collate.settings.analysisGroupOrderMap={}),this.collate.settings.analysisGroupOrderMap[r]=n.map(a=>a.analysis_group.id),Object.keys(this.collate.settings.analysisGroupOrderMap).forEach(a=>{this.collate.settings.analysisGroupOrderMap[a]=Array.from(new Set(this.collate.settings.analysisGroupOrderMap[a]))}))}openVisibilityDialog(){let n=this.dialog.open(ms);this.web.getAnalysisGroupsFromProjects(this.projects).subscribe(r=>{let a={};r.forEach(o=>{a[o.project]||(a[o.project]=[]),a[o.project].push(o)}),this.collate?.settings?.analysisGroupOrderMap&&Object.keys(this.collate.settings.analysisGroupOrderMap).forEach(o=>{let s=parseInt(o),l=this.collate?.settings.analysisGroupOrderMap[s];if(!l||!a[s])return;let c=a[s].filter(u=>!l.includes(u.id));a[s]=a[s].filter(u=>l.includes(u.id)),a[s]=a[s].sort((u,d)=>l.indexOf(u.id)-l.indexOf(d.id)),a[s]=a[s].concat(c)}),n.componentInstance.projectAnalysisGroupMap=a,n.componentInstance.projects=this.projects;let i={};this.collate?.settings?.projectAnalysisGroupVisibility&&(i=this.collate.settings.projectAnalysisGroupVisibility);for(let o in a){i[o]||(i[o]={});for(let s of a[o])s.id in i[o]||(i[o][s.id]=!0)}n.componentInstance.projectAnalysisGroupVisibilityMap=Object.assign({},i)}),n.afterClosed().subscribe(r=>{this.collate&&r&&(this.collate.settings.projectAnalysisGroupVisibility=r,this.filteredResults=this.getFilteredSearchResults())})}openReorderDialog(){let n=this.dialog.open(Bp);this.web.getAnalysisGroupsFromProjects(this.projects).subscribe(r=>{let a={};r.forEach(i=>{a[i.project]||(a[i.project]=[]),a[i.project].push(i)}),this.collate?.settings?.analysisGroupOrderMap&&Object.keys(this.collate.settings.analysisGroupOrderMap).forEach(i=>{let o=parseInt(i),s=this.collate?.settings.analysisGroupOrderMap[o];if(!s||!a[o])return;let l=a[o].filter(c=>!s.includes(c.id));a[o]=a[o].filter(c=>s.includes(c.id)),a[o]=a[o].sort((c,u)=>s.indexOf(c.id)-s.indexOf(u.id)),a[o]=a[o].concat(l)}),n.componentInstance.projectAnalysisGroupMap=a,n.componentInstance.projects=this.projects}),n.afterClosed().subscribe(r=>{this.projects=r.projects,this.updateProjectOrder(),this.projectAnalysisGroups=r.projectAnalysisGroupMap;let a={};Object.keys(this.projectAnalysisGroups).forEach(i=>{a[i]=this.projectAnalysisGroups[i].map(o=>o.id)}),this.collate&&(this.collate.settings.analysisGroupOrderMap=a,this.filteredResults=this.getFilteredSearchResults())})}openConditionColorEditorDialog(){let n=this.dialog.open(Mp);n.componentInstance.projectConditionColorMap=this.collate?.settings?.projectConditionColorMap,n.componentInstance.projects=this.projects,n.afterClosed().subscribe(r=>{this.collate&&(this.collate.settings.projectConditionColorMap=r),this.graph.projectConditionColorMap=Object.assign({},r),this.filteredResults=this.getFilteredSearchResults(),this.graph.redrawTrigger.next(!0)})}openCollateTagCreateDialog(){this.dialog.open(Rp).afterClosed().subscribe(r=>{r&&r.name&&(r.existing&&r.id&&r.id!==-1?this.collateService.addTagToCollate(this.collate?.id,r.id).subscribe(a=>{this.collate&&this.collate.tags.push(a)}):this.collateService.createCollateTag(r.name).subscribe(a=>{this.collateService.addTagToCollate(this.collate?.id,a.id).subscribe(i=>{this.collate&&this.collate.tags.push(i)})}))})}handleCollageTagsChange(n){this.collate&&(this.removedTags=this.collate.tags.filter(r=>!n.includes(r)),this.collate.tags=n)}openRenameConditionDialog(){if(this.collate){let n=this.dialog.open(Ip);n.componentInstance.projects=this.collate.projects,n.componentInstance.renameSampleCondition=this.collate.settings.renameSampleCondition,n.afterClosed().subscribe(r=>{this.collate&&(this.collate.settings.renameSampleCondition=Object.assign({},r),console.log(this.collate.settings.renameSampleCondition))})}}openPlotSettings(){if(this.collate){let n=this.dialog.open(Lp);n.componentInstance.settings=this.collate.settings.plotSettings,n.afterClosed().subscribe(r=>{this.collate&&r&&(this.collate.settings.plotSettings=r,this.graph.plotSettings=r,this.graph.redrawTrigger.next(!0))})}}static{this.\u0275fac=function(r){return new(r||t)(Be(Qt),Be(ss),Be(ka),Be(Ut),Be(Cr),Be(Zt),Be(Zn))}}static{this.\u0275cmp=qe({type:t,selectors:[["app-collate-editor"]],inputs:{collateId:"collateId"},decls:2,vars:1,consts:[["extraActionsMenu","matMenu"],[2,"display","flex","justify-content","center"],[1,"spacer"],[3,"ngModel"],["type","button","aria-label","View Collate","mat-icon-button","",3,"click"],["type","button","aria-label","Add Projects","mat-icon-button","",3,"click"],["type","button","aria-label","Update Collate","mat-icon-button","",3,"click"],["mat-icon-button","",3,"matMenuTriggerFor"],["mat-menu-item","",3,"click"],[1,"header-container",2,"display","flex","flex-direction","row","justify-content","center","align-items","center","height","200px"],[3,"searchResultID","projects"],[2,"padding","20px"],[3,"ngModelChange","ngModel"],[1,"header",2,"text-align","center","font-family","Roboto, Helvetica Neue, sans-serif"],[2,"font-size","25px","font-family","'Roboto', 'Arial Narrow', sans-serif"],[3,"click"],[2,"font-size","2em","text-align","center","font-family","Roboto, Helvetica Neue, sans-serif","padding","5px"],["matInput","",3,"keydown.enter","ngModelChange","ngModel"],["mat-icon-button","",3,"click"],[2,"font-size","25px","font-family","'Roboto', 'Arial Narrow', sans-serif",3,"click"],[2,"font-size","25px","text-align","center","font-family","'Roboto', 'Arial Narrow', sans-serif","padding","5px"],["mat-button","",3,"click"],[2,"display","flex","justify-content","center","padding","20px"],[3,"collageTagsChange","collageTags"],[3,"selectedTabChange","selectedIndexChange","selectedIndex","mat-stretch-tabs"],[3,"label"],[3,"searchTerm","projectConditionColorMap","projects","filteredResults","renameCondition"],[3,"deleteProject","projectOrderChanged","searchTerm","projectConditionColorMap","projects","filteredResults","renameCondition"]],template:function(r,a){r&1&&We(0,Y5,34,7)(1,z5,3,0,"div",1),r&2&&je(a.canEdit?0:1)},dependencies:[qo,Jt,ot,Vo,wr,Vn,An,Er,ds,os,is,Mn,Jn,hs,Ia,Ra,La,vn,ps,Ua],styles:["mat-card[_ngcontent-%COMP%]{margin:20px}@keyframes _ngcontent-%COMP%_fadeIn{0%{opacity:0}to{opacity:1}}.header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{opacity:0;animation:_ngcontent-%COMP%_fadeIn 2s ease-in-out forwards}"]})}}return t})();var V5=[{component:hu,path:""},{component:wc,path:"view"},{component:wc,path:"view/:collateId"},{component:wc,path:"view/:collateId/:sessionId"},{component:K0,path:"edit"},{component:K0,path:"edit/:collateId"}],S4=(()=>{class t{static{this.\u0275fac=function(r){return new(r||t)}}static{this.\u0275mod=Do({type:t})}static{this.\u0275inj=To({imports:[Mo,j0.forChild(V5)]})}}return t})();export{S4 as CollateModule};
